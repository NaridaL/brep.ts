{"version":3,"file":"viewer.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/chroma-js/chroma.js","../../../javasetmap.ts/src/JavaMap.ts","../../../javasetmap.ts/src/JavaSet.ts","../../ts3dutils/src/Vector.ts","../../ts3dutils/src/Matrix.ts","../../ts3dutils/src/NLA.ts","../../ts3dutils/src/V3.ts","../../ts3dutils/src/Transformable.ts","../../ts3dutils/src/M4.ts","../../ts3dutils/src/toSource.ts","../../ts3dutils/src/AABB.ts","../../tsgl/node_modules/tslib/tslib.es6.js","../../tsgl/node_modules/chroma-js/chroma.js","../../tsgl/src/Buffer.ts","../../tsgl/src/Mesh.ts","../../tsgl/src/Shader.ts","../../tsgl/src/Texture.ts","../../tsgl/src/KhronosGroupWebGLDebug.ts","../../tsgl/src/TSGLContext.ts","../src/math.ts","../src/curve/Curve.ts","../src/curve/XiEtaCurve.ts","../src/curve/ImplicitCurve.ts","../src/curve/BezierCurve.ts","../src/curve/HyperbolaCurve.ts","../src/curve/L3.ts","../src/curve/PICurve.ts","../src/curve/PPCurve.ts","../src/curve/ParabolaCurve.ts","../src/curve/SemiEllipseCurve.ts","../src/P3.ts","../src/surface/Surface.ts","../src/surface/ParametricSurface.ts","../src/surface/ConicSurface.ts","../src/surface/ProjectedCurveSurface.ts","../src/surface/RotatedCurveSurface.ts","../src/surface/SemiCylinderSurface.ts","../src/surface/SemiEllipsoidSurface.ts","../src/surface/PlaneSurface.ts","../src/surface/ZDirVolumeVisitor.ts","../src/surface/CalculateAreaVisitor.ts","../node_modules/tiny-inflate/index.js","../node_modules/opentype.js/src/bbox.js","../node_modules/opentype.js/src/path.js","../node_modules/opentype.js/src/check.js","../node_modules/opentype.js/src/types.js","../node_modules/opentype.js/src/table.js","../node_modules/opentype.js/src/parse.js","../node_modules/opentype.js/src/tables/cmap.js","../node_modules/opentype.js/src/encoding.js","../node_modules/opentype.js/src/draw.js","../node_modules/opentype.js/src/tables/glyf.js","../node_modules/opentype.js/src/glyph.js","../node_modules/opentype.js/src/glyphset.js","../node_modules/opentype.js/src/tables/cff.js","../node_modules/opentype.js/src/tables/head.js","../node_modules/opentype.js/src/tables/hhea.js","../node_modules/opentype.js/src/tables/hmtx.js","../node_modules/opentype.js/src/tables/ltag.js","../node_modules/opentype.js/src/tables/maxp.js","../node_modules/opentype.js/src/tables/name.js","../node_modules/opentype.js/src/tables/os2.js","../node_modules/opentype.js/src/tables/post.js","../node_modules/opentype.js/src/tables/gsub.js","../node_modules/opentype.js/src/tables/meta.js","../node_modules/opentype.js/src/tables/sfnt.js","../node_modules/opentype.js/src/layout.js","../node_modules/opentype.js/src/substitution.js","../node_modules/opentype.js/src/util.js","../node_modules/opentype.js/src/hintingtt.js","../node_modules/opentype.js/src/font.js","../node_modules/opentype.js/src/tables/fvar.js","../node_modules/opentype.js/src/tables/gpos.js","../node_modules/opentype.js/src/tables/kern.js","../node_modules/opentype.js/src/tables/loca.js","../node_modules/opentype.js/src/opentype.js","../src/BRepGenerators.ts","../src/CustomPlane.ts","../src/Edge.ts","../src/FaceInfo.ts","../src/Face.ts","../node_modules/earcut/src/earcut.js","../node_modules/nerdamer/nerdamer.core.js","../src/BRep.ts","../src/ClassSerializer.ts","../src/shaders.ts","../src/BREPGLContext.ts","../src/viewer.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return [].slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.3.5';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    Color.prototype.clone = function() {\n      return chroma(me._rgb);\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n   */\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    return new Color(xyz);\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(!isNaN(xyz[i]) ? 1 : 0);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          xyz[i] += xyz2[i];\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      xyz[i] = xyz[i] / cnt[i];\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex();\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    if (lum === 0) {\n      this._rgb = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      this._rgb = [255, 255, 255, this._rgb[3]];\n    } else {\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      cur_lum = rgb2luminance(this._rgb);\n      this._rgb = (cur_lum > lum ? test(chroma('black'), this) : test(this, chroma('white'))).rgba();\n    }\n    return this;\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val)) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n","import {Equalable, int} from './Equalable'\n\n/**\n * Java style map.\n */\nexport class JavaMap<K extends Equalable & {hashCodes?(): int[], like?(x: any): boolean }, V> implements Map<K, V> {\n    [Symbol.toStringTag]: 'Map' = 'Map'\n\n    toString() {\n        return '{' + Array.from(this.entries2()).map(({key, value}) => key + ':' + value).join(', ') + '}'\n    }\n\n    forEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void {\n        for (const bucket of this._map.values()) {\n            for (const {key, value} of bucket) {\n                callbackfn.call(thisArg, value, key, this)\n            }\n        }\n    }\n\n    * keys(): IterableIterator<K> {\n        for (const bucket of this._map.values()) {\n            for (const {key} of bucket) {\n                yield key\n            }\n        }\n    }\n\n    * values(): IterableIterator<V> {\n        for (const bucket of this._map.values()) {\n            for (const {value} of bucket) {\n                yield value\n            }\n        }\n    }\n\n    protected _map: Map<int, { key: K, value: V }[]>\n    protected _size: int\n\n    constructor() {\n        this._map = new Map()\n        this._size = 0\n    }\n\n    [Symbol.iterator]() {\n        return this.entries()\n    }\n\n    set(key: K, value: V): this {\n        this.set2(key, value)\n        return this\n    }\n\n    /**\n     * Like {@link #set} except it returns true if key was new and false if the value was only updated.\n     *\n     */\n    set2(key: K, val: V): boolean {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        //assert(hashCode === (hashCode | 0))\n        if (bucket) {\n            const pairIndex = bucket.findIndex(pair => pair.key.equals(key))\n            if (-1 == pairIndex) {\n                bucket.push({key: key, value: val})\n            } else {\n                bucket[pairIndex].value = val\n                return false\n            }\n        } else {\n            this._map.set(hashCode, [{key: key, value: val}])\n        }\n        this._size++\n        return true\n    }\n\n    has(key: K): boolean {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        //assert(hashCode === (hashCode | 0))\n        return undefined !== bucket && bucket.some(pair => pair.key.equals(key))\n    }\n\n    get(key: K): V | undefined {\n        const\n                hashCode = key.hashCode(),\n                bucket = this._map.get(hashCode),\n                pair = bucket && bucket.find(pair => pair.key.equals(key))\n        return pair && pair.value\n    }\n\n    getLike(key: K) {\n        for (const hashCode of key.hashCodes!()) {\n            const bucket = this._map.get(hashCode)\n            const canonVal = bucket && bucket.find(x => x.key.like!(key))\n            if (canonVal) return canonVal\n        }\n    }\n\n    setLike(key: K, val: V) {\n        return !this.getLike(key) && this.set(key, val)\n    }\n\n    'delete'(key: K) {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        if (bucket) {\n            const index = bucket.findIndex(x => x.key.equals(key))\n            if (-1 != index) {\n                if (1 == bucket.length) {\n                    this._map.delete(hashCode)\n                } else {\n                    bucket.splice(index, 1)\n                }\n                this._size--\n                return true\n            }\n        }\n        return false\n    }\n\n    deleteLike(key: K) {\n        for (const hashCode of key.hashCodes!()) {\n            const bucket = this._map.get(hashCode)\n            if (bucket) {\n                const index = bucket.findIndex(x => x.key.like!(key))\n                if (-1 != index) {\n                    const deleted = bucket[index]\n                    if (1 == bucket.length) {\n                        this._map.delete(hashCode)\n                    } else {\n                        bucket.splice(index, 1)\n                    }\n                    this._size--\n                    return deleted\n                }\n            }\n        }\n    }\n\n    * entries2(): IterableIterator<{ key: K, value: V }> {\n        for (const bucket of this._map.values()) {\n            yield* bucket\n        }\n    }\n\n    * entries(): IterableIterator<[K, V]> {\n        for (const bucket of this._map.values()) {\n            for (const {key, value} of bucket) {\n                yield [key, value]\n            }\n        }\n    }\n\n    clear() {\n        this._map.clear()\n        this._size = 0\n    }\n\n    get size() {\n        return this._size\n    }\n}\n","import {Equalable, int} from './Equalable'\n\nexport class JavaSet<T extends Equalable & {hashCodes?(): int[], like?(x: any): boolean }> implements Set<T> {\n\t[Symbol.toStringTag]: 'Set' = 'Set'\n\n\tforEach(callbackfn: (value: T, index: T, set: Set<T>)=>void, thisArg?: any): void {\n\t\tfor (const value of this.entries()) {\n\t\t\tcallbackfn.call(thisArg, value, value, this)\n\t\t}\n\t}\n\tprotected _map: Map<int, T[]>\n    protected _size: int\n\n\tconstructor(iterable?: Iterable<T>) {\n\t\tthis._map = new Map()\n\t\tthis._size = 0\n\t\tif (iterable) {\n\t\t\tthis.addAll(iterable)\n\t\t}\n\t}\n\n\tadd(val: T): this {\n\t\tthis.add2(val)\n\t\treturn this\n\t}\n\n\tadd2(val: T): boolean {\n\t\t// you can't use this.canonicalize here, as there is no way to differentiate if val\n\t\t// is new or if val was === the exisitng value (not only .equals)\n\t\tconst hashCode = val.hashCode(), bucket = this._map.get(hashCode)\n\t\tif (bucket) {\n\t\t\tif (bucket.some(x => x.equals(val))) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t\tbucket.push(val)\n\t\t} else {\n\t\t\tthis._map.set(hashCode, [val])\n\t\t}\n\t\tthis._size++\n\t\treturn true\n\t}\n\n\taddAll(iterable: Iterable<T>): this {\n\t\tfor (const val of iterable) {\n\t\t\tthis.add(val)\n\t\t}\n\t\treturn this\n\t}\n\n\tcanonicalize(val: T): T {\n\t\tconst hashCode = val.hashCode(), bucket = this._map.get(hashCode)\n\t\tif (bucket) {\n\t\t\tconst existing = bucket.find(x => x.equals(val))\n\t\t\tif (existing) {\n\t\t\t\treturn existing\n\t\t\t}\n\t\t\tbucket.push(val)\n\t\t} else {\n\t\t\tthis._map.set(hashCode, [val])\n\t\t}\n\t\tthis._size++\n\t\treturn val\n\t}\n\n\thas(val: T): boolean {\n\t\tconst hashCode = val.hashCode(), bucket = this._map.get(hashCode)\n\t\treturn undefined !== bucket && bucket.some(x => x.equals(val))\n\t}\n\n\tgetLike(val: T) {\n\t\tfor (const hashCode of val.hashCodes!()) {\n\t\t\tconst bucket = this._map.get(hashCode)\n\t\t\tconst canonVal = bucket && bucket.find(x => x.like!(val))\n\t\t\tif (canonVal) return canonVal\n\t\t}\n\t}\n\n\tcanonicalizeLike(val: T) {\n\t\t// if this.getLike(val) is defined, return it, otherwise add val and return val\n\t\treturn this.getLike(val) || this.canonicalize(val)\n\t}\n\n\taddLike(val: T) {\n\t\treturn !this.getLike(val) && this.add(val)\n\t}\n\n\t'delete'(val: T) {\n\t\tconst hashCode = val.hashCode(), bucket = this._map.get(hashCode)\n\t\tif (bucket) {\n\t\t\tconst index = bucket.findIndex(x => x.equals(val))\n\t\t\tif (-1 != index) {\n\t\t\t\tif (1 == bucket.length) {\n\t\t\t\t\tthis._map.delete(hashCode)\n\t\t\t\t} else {\n\t\t\t\t\tbucket.splice(index, 1)\n\t\t\t\t}\n\t\t\t\tthis._size--\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\treturn false\n\t}\n\n\tdeleteLike(val: T) {\n\t\tfor (const hashCode of val.hashCodes!()) {\n\t\t\tconst bucket = this._map.get(hashCode)\n\t\t\tif (bucket) {\n\t\t\t\tconst index = bucket.findIndex(x => x.like!(val))\n\t\t\t\tif (-1 != index) {\n\t\t\t\t\tconst deleted = bucket[index]\n\t\t\t\t\tif (1 == bucket.length) {\n\t\t\t\t\t\tthis._map.delete(hashCode)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbucket.splice(index, 1)\n\t\t\t\t\t}\n\t\t\t\t\tthis._size--\n\t\t\t\t\treturn deleted\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (const bucket of this._map.values()) {\n\t\t\tyield* bucket\n\t\t}\n\t}\n\t*entries(): IterableIterator<[T, T]> {\n\t\tfor (const bucket of this._map.values()) {\n\t\t\tfor (const value of bucket) {\n\t\t\t\tyield [value, value]\n\t\t\t}\n\t\t}\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear()\n\t\tthis._size = 0\n\t}\n\n\tget size(): int {\n\t\treturn this._size\n\t}\n\n\ttoString() {\n\t\treturn '{' + Array.from(this.values()).join(', ') + '}'\n\t}\n\n\t[Symbol.iterator] = JavaSet.prototype.values\n\tkeys = JavaSet.prototype.values\n}\n\nexport class Pair<L extends Equalable, R extends Equalable> implements Equalable {\n\n\tconstructor(public left: L, public right: R) {}\n\n\thashCode() {\n\t\treturn this.left.hashCode() * 31 + this.right.hashCode()\n\t}\n\n\tequals(other: any) {\n\t\treturn this == other || Object.getPrototypeOf(other) == Pair.prototype && this.left.equals(other.left) && this.right.equals(other.right)\n\t}\n\n\ttoString() {\n\t\treturn '(' + this.left.toString() + ', ' + this.right.toString() + ')'\n\t}\n\n\ttoSource() {\n\t\treturn 'new Pair(' + (this.left as any).toSource() + ', ' + (this.right as any).toSource() + ')'\n\t}\n}","import {Matrix} from './Matrix'\nimport {assert, assertInst, assertNumbers, eq, eq0, int} from './NLA'\nimport {V3} from './V3'\n\nexport class Vector {\n\tconstructor(readonly v: Float64Array) {\n\t\tassertInst(Float64Array, v)\n\t}\n\n\tstatic fromFunction(dims: int, f: (dim: int) => number): Vector {\n\t\tassertNumbers(dims)\n\t\tconst e = new Float64Array(dims)\n\t\tlet i = dims\n\t\twhile (i--) {\n\t\t\te[i] = f(i)\n\t\t}\n\t\treturn new Vector(e)\n\t}\n\n\tstatic random(dims: int): Vector {\n\t\treturn Vector.fromFunction(dims, (i) => Math.random())\n\t}\n\n\tstatic from(f64a: Float64Array): Vector\n\tstatic from(...args: number[]): Vector\n\tstatic from(...args: any[]): Vector {\n\t\tassert(args[0] instanceof Float64Array || args.every(a => 'number' == typeof a),\n\t\t\t'args[0] instanceof Float64Array || args.every(a => \"number\" == typeof a)')\n\t\treturn new Vector(args[0] instanceof Float64Array ? args[0] : Float64Array.from(args))\n\t}\n\n\tstatic Zero(dims: int): Vector {\n\t\tassertNumbers(dims)\n\t\tlet i = 0\n\t\tconst n = new Float64Array(dims)\n\t\twhile (i--) {\n\t\t\tn[i] = 0\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tstatic Unit(dims: int, dir: int): Vector {\n\t\tassertNumbers(dims, dir)\n\t\tlet i = 0\n\t\tconst n = new Float64Array(dims)\n\t\twhile (i--) {\n\t\t\tn[i] = +(i == dir) // +true === 1, +false === 0\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.v[Symbol.iterator]()\n\t}\n\n\tdim(): int {\n\t\treturn this.v.length\n\t}\n\n\te(index: int): number {\n\t\tif (0 > index || index >= this.v.length) {\n\t\t\tthrow new Error('array index out of bounds')\n\t\t}\n\t\treturn this.v[index]\n\t}\n\n\tplus(vector: Vector): Vector {\n\t\tconst u = this.v, v = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] + v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tminus(vector: Vector): Vector {\n\t\tconst u = this.v, v = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] - v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\ttimes(factor: number): Vector {\n\t\tconst u = this.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] * factor\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tdiv(val: number): Vector {\n\t\tconst u = this.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] / val\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tdot(vector: Vector): number {\n\t\tassert(this.dim == vector.dim, 'passed vector must have the same dim')\n\t\tlet result = 0\n\t\tconst u = this.v, v = vector.v\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tresult += u[i] * v[i]\n\t\t}\n\t\treturn result\n\t}\n\n\tcross(vector: Vector): Vector {\n\t\tassertInst(Vector, vector)\n\t\tconst n = new Float64Array(3)\n\t\tn[0] = this.v[1] * vector.v[2] - this.v[2] * vector.v[1]\n\t\tn[1] = this.v[2] * vector.v[0] - this.v[0] * vector.v[2]\n\t\tn[2] = this.v[0] * vector.v[1] - this.v[1] * vector.v[0]\n\n\t\treturn new Vector(n)\n\t}\n\n\tschur(vector: Vector): Vector {\n\t\tassertInst(Vector, vector)\n\t\tconst u = this.v, v = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] * v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tequals(obj: any): boolean {\n\t\tif (obj === this) return true\n\t\tif (obj.constructor !== Vector) return false\n\t\tif (this.v.length != obj.v.length) return false\n\t\tlet i = this.v.length\n\t\twhile (i--) {\n\t\t\tif (!eq(this.v[i], obj.v[i])) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tmap(f: (el: number, dim: number) => number): Vector {\n\t\treturn new Vector(this.v.map(f))\n\t}\n\n\ttoString(roundFunction?: (x: number) => any): string {\n\t\troundFunction = roundFunction || ((v) => +v.toFixed(6))\n\t\treturn 'Vector(' + this.v.map(roundFunction).join(', ') + ')'\n\t}\n\n\t/*\n\t get x() {\n\t return this.v[0]\n\t },\n\t get y() {\n\t return this.v[1]\n\t },\n\t get z() {\n\t return this.v[2]\n\t },\n\t get w() {\n\t return this.v[3]\n\t },\n\t */\n\tangleTo(vector: Vector): number {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\treturn Math.acos(this.dot(vector) / this.length() / vector.length())\n\t}\n\n\t/**\n\t Returns true iff this is parallel to vector, using equals\n\t Throw a DebugError\n\t if vector is not a Vector or\n\t if this has a length of 0 or\n\t if vector has a length of 0\n\t */\n\tisParallelTo(vector: Vector): boolean {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\n\t\t// in both cases the vectors are paralle, so check if abs(a . b) == |a|*|b|\n\t\treturn eq(Math.sqrt(this.lengthSquared() * vector.lengthSquared()), Math.abs(this.dot(vector)))\n\t}\n\n\tisPerpendicularTo(vector: Vector): boolean {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\treturn eq0(this.dot(vector))\n\t}\n\n\t/**\n\t Returns true iff the length of this vector is 0, as returned by NLA.isZero.\n\t Definition: Vector.prototype.isZero = () => NLA.isZero(this.length())\n\t */\n\tisZero(): boolean {\n\t\treturn eq0(this.length())\n\t}\n\n\t// Returns a new unit Vector (.length() === 1) with the same direction as this vector. Throws a\n\n\t/*/ Returns the length of this Vector, i.e. the euclidian norm.*/\n\tlength(): number {\n\t\treturn Math.hypot.apply(undefined, this.v)\n\t\t//return Math.sqrt(this.lengthSquared())\n\t}\n\n\tlengthSquared(): number {\n\t\tlet result = 0\n\t\tconst u = this.v\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tresult += u[i] * u[i]\n\t\t}\n\t\treturn result\n\t}\n\n\t// NLA_DEBUGError if this has a length of 0.\n\tnormalized(): Vector {\n\t\tconst length = this.length()\n\t\tif (eq0(length)) {\n\t\t\tthrow new Error('cannot normalize zero vector')\n\t\t}\n\t\treturn this.div(this.length())\n\t}\n\n\tasRowMatrix(): Matrix {\n\t\treturn new Matrix(this.v.length, 1, this.v)\n\t}\n\n\tasColMatrix(): Matrix {\n\t\treturn new Matrix(1, this.v.length, this.v)\n\t}\n\n\t/**\n\t Returns a new Vector which is the projection of this vector onto the passed vector.\n\t Examples\n\t NLA.V(3, 4).projectedOn(NLA.V(1, 0)) // returns NLA.V(3, 0)\n\t NLA.V(3, 4).projectedOn(NLA.V(2, 0)) // returns NLA.V(3, 0)\n\t NLA.V(3, 4).projectedOn(NLA.V(-1, 0)) // returns NLA.V(-3, 0)\n\t NLA.V(3, 4).projectedOn(NLA.V(0, 1)) // returns NLA.V(0, 4)\n\t NLA.V(3, 4).projectedOn(NLA.V(1, 1)) // returns\n\t */\n\tprojectedOn(b: Vector): Vector {\n\t\tassertInst(Vector, b)\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\n\t\treturn b.times(this.dot(b) / b.dot(b))\n\t}\n\n\trejectedOn(b: Vector): Vector {\n\t\tassertInst(Vector, b)\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\n\t\treturn this.minus(b.times(this.dot(b) / b.dot(b)))\n\t}\n\n\t/**\n\t Returns true iff the length() of this vector is equal to 'length', using equals\n\t E.g. NLA.V(3, 4).hasLength(5) === true\n\t NLA.V(1, 1).hasLength(1) === false\n\t */\n\thasLength(length: number): boolean {\n\t\tassertNumbers(length)\n\t\treturn eq(length, this.length())\n\t}\n\n\tV3(): V3 {\n\t\t//assert(this.dim() == 3)\n\t\treturn new V3(this.v[0], this.v[1], this.v[2])\n\t}\n}","import { Equalable } from 'javasetmap.ts'\nimport {\n\tarrayCopy,\n\tarrayCopyBlocks,\n\tarrayCopyStep,\n\tarrayFromFunction,\n\tarraySwap,\n\tassert,\n\tassertf,\n\tassertInst,\n\tassertNumbers,\n\tassertVectors,\n\teq,\n\teq0,\n\tFloatArray,\n\tfloatHashCode,\n\tint,\n\tNLA_DEBUG,\n\tNLA_PRECISION,\n} from './NLA'\nimport { Vector } from './Vector'\n\nexport class Matrix implements Equalable {\n\tm: Float64Array\n\twidth: number\n\theight: number\n\n\tconstructor(width: int, height: int, m: Float64Array) {\n\t\tassert(width * height == m.length, 'width * height == m.length', width, height, m.length)\n\t\tthis.m = m\n\t\tthis.width = width\n\t\tthis.height = height\n\t}\n\n\tstatic random(width: int, height: int): Matrix {\n\t\tassertNumbers(width, height)\n\t\treturn Matrix.fromFunction(width, height, (i, j) => Math.random())\n\t}\n\n\tstatic fromFunction(width: int, height: int, f: (row: int, col: int, elIndex: int) => number): Matrix {\n\t\tassertNumbers(width, height)\n\t\tconst m = new Float64Array(height * width)\n\t\tlet elIndex = height * width\n\t\twhile (elIndex--) {\n\t\t\tm[elIndex] = f(Math.floor(elIndex / width), elIndex % width, elIndex)\n\t\t}\n\t\treturn new Matrix(width, height, m)\n\t}\n\n\tstatic identityN(dim: int): Matrix {\n\t\tassertNumbers(dim)\n\t\tconst m = new Float64Array(dim * dim)\n\t\t// Float64Arrays are init to 0\n\t\tlet elIndex = dim * (dim + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= (dim + 1)\n\t\t\tm[elIndex] = 1\n\t\t}\n\t\treturn new Matrix(dim, dim, m)\n\t}\n\n\tstatic permutation(dim: int, i: int, k: int): Matrix {\n\t\tassertNumbers(dim, i, k)\n\t\tconst m = new Float64Array(dim * dim)\n\t\t// Float64Array are init to 0\n\t\tlet elIndex = dim * (dim + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= (dim + 1)\n\t\t\tm[elIndex] = 1\n\t\t}\n\t\tm[i * dim + i] = 0\n\t\tm[k * dim + k] = 0\n\t\tm[i * dim + k] = 1\n\t\tm[k * dim + i] = 1\n\t\treturn new Matrix(dim, dim, m)\n\t}\n\n\tstatic fromRowArrays(...args: FloatArray[]): Matrix {\n\t\treturn Matrix.fromRowArrays2(args)\n\t}\n\n\tstatic fromRowArrays2(arrays: FloatArray[]) {\n\t\tif (0 == arrays.length) {\n\t\t\tthrow new Error('cannot have 0 vector')\n\t\t}\n\t\tconst height = arrays.length\n\t\tconst width = arrays[0].length\n\t\tconst m = new Float64Array(height * width)\n\t\tarrayCopy(arrays[0], 0, m, 0, width)\n\t\tfor (let rowIndex = 1; rowIndex < height; rowIndex++) {\n\t\t\tif (arrays[rowIndex].length != width) {\n\t\t\t\tthrow new Error('all row arrays must be the same length')\n\t\t\t}\n\t\t\tarrayCopy(arrays[rowIndex], 0, m, rowIndex * width, width)\n\t\t}\n\t\treturn new Matrix(width, height, m)\n\t}\n\n\tstatic fromColVectors(colVectors: Vector[]): Matrix {\n\t\treturn Matrix.fromColArrays(colVectors.map((v) => v.v))\n\t}\n\n\tstatic forWidthHeight(width: int, height: int): Matrix {\n\t\treturn new Matrix(width, height, new Float64Array(width * height))\n\t}\n\n\tstatic fromColArrays(colArrays: FloatArray[]): Matrix {\n\t\tif (0 == colArrays.length) {\n\t\t\tthrow new Error('cannot have 0 vector')\n\t\t}\n\t\tconst width = colArrays.length\n\t\tconst height = colArrays[0].length\n\t\tconst m = new Float64Array(height * width)\n\t\tarrayCopyStep(colArrays[0], 0, 1, m, 0, width, height)\n\t\tfor (let colIndex = 1; colIndex < width; colIndex++) {\n\t\t\tif (colArrays[colIndex].length != height) {\n\t\t\t\tthrow new Error('all col arrays must be the same length')\n\t\t\t}\n\t\t\tarrayCopyStep(colArrays[colIndex], 0, 1, m, colIndex, width, height)\n\t\t}\n\t\treturn new Matrix(width, height, m)\n\t}\n\n\t/**\n\t * Numerically calculate all the partial derivatives of f at x0.\n\t *\n\t *\n\t * @param f\n\t * @param x0\n\t * @param fx0 f(x0), pass it if you have it already\n\t * @param EPSILON\n\t */\n\tstatic jacobi(f: (x: FloatArray) => FloatArray, x0: FloatArray, fx0: FloatArray = f(x0), EPSILON: number = 1e-6): Matrix {\n\t\tconst jacobi = Matrix.forWidthHeight(x0.length, fx0.length)\n\t\tfor (let colIndex = 0; colIndex < x0.length; colIndex++) {\n\t\t\tx0[colIndex] += EPSILON\n\t\t\tconst fx = f(x0)\n\t\t\tfor (let rowIndex = 0; rowIndex < fx0.length; rowIndex++) {\n\t\t\t\tconst value = (fx[rowIndex] - fx0[rowIndex]) / EPSILON\n\t\t\t\tjacobi.setEl(rowIndex, colIndex, value)\n\t\t\t}\n\t\t\tx0[colIndex] -= EPSILON\n\t\t}\n\t\treturn jacobi\n\t}\n\n\te(rowIndex: number, colIndex: number): number {\n\t\tassertNumbers(rowIndex, colIndex)\n\t\tif (NLA_DEBUG && (rowIndex >= this.height || colIndex >= this.width)) {\n\t\t\tthrow new Error('index ' + rowIndex + ', ' + colIndex + ' is out of bounds (' + this.width + ' x ' + this.height + ')')\n\t\t}\n\t\treturn this.m[rowIndex * this.width + colIndex]\n\t}\n\n\tsetEl(rowIndex: number, colIndex: number, val: number): void {\n\t\tassertNumbers(rowIndex, colIndex, val)\n\t\tassert(0 <= rowIndex && rowIndex < this.height, 'rowIndex out of bounds ' + rowIndex)\n\t\tassert(0 <= colIndex && colIndex < this.width, 'colIndex out of bounds ' + colIndex)\n\t\tthis.m[rowIndex * this.width + colIndex] = val\n\t}\n\n\tplus(m: this): this {\n\t\tassert(this.width == m.width)\n\t\tassert(this.height == m.height)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] + m.m[i]\n\t\treturn r\n\t}\n\n\tminus(m: Matrix): Matrix {\n\t\tassert(this.width == m.width)\n\t\tassert(this.height == m.height)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] - m.m[i]\n\t\treturn r\n\t}\n\n\tmulScalar(factor: number): this {\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] * factor\n\t\treturn r\n\t}\n\n\tdivScalar(scalar: number): this {\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] / scalar\n\t\treturn r\n\t}\n\n\tnew(): this {\n\t\treturn new Matrix(this.width, this.height, new Float64Array(this.width * this.height)) as this\n\t}\n\n\ttoString(f?: (el: number) => string, colNames?: ReadonlyArray<string>, rowNames?: ReadonlyArray<string>): string {\n\t\tf = f || ((v) => v.toFixed(6))\n\t\tassert(typeof f(0) == 'string', '' + typeof f(0))\n\t\tassert(!colNames || colNames.length == this.width)\n\t\tassert(!rowNames || rowNames.length == this.height)\n\t\tconst rounded: string[] = Array.from(this.m).map(f)\n\t\tconst rows = arrayFromFunction(this.height,\n\t\t\t(rowIndex) => rounded.slice(rowIndex * this.width, (rowIndex + 1) * this.width))// select matrix row\n\t\tif (colNames) {\n\t\t\trows.unshift(Array.from(colNames))\n\t\t}\n\t\tif (rowNames) {\n\t\t\trows.forEach((row, rowIndex) => row.unshift(rowNames[rowIndex - (colNames ? 1 : 0)] || ''))\n\t\t}\n\t\tconst colWidths = arrayFromFunction(this.width, (colIndex) => rows.map(row => row[colIndex].length).max())\n\t\treturn rows.map(\n\t\t\t(row, rowIndex) => row.map((x, colIndex) => {\n\t\t\t\t// pad numbers with spaces to col width\n\t\t\t\tconst padder = rowIndex == 0 && colNames || colIndex == 0 && rowNames\n\t\t\t\t\t? String.prototype.padEnd\n\t\t\t\t\t: String.prototype.padStart\n\t\t\t\treturn padder.call(x, colWidths[colIndex])\n\t\t\t}).join('  ')\n\t\t).map(x => x + '\\n').join('') // join rows\n\t}\n\n\trow(rowIndex: int): Vector {\n\t\tconst v = new Float64Array(this.width)\n\t\tarrayCopy(this.m, rowIndex * this.width, v, 0, this.width)\n\t\treturn new Vector(v)\n\t}\n\n\tcol(colIndex: int): Vector {\n\t\tconst v = new Float64Array(this.height)\n\t\tarrayCopyStep(this.m, colIndex, this.width, v, 0, 1, this.height)\n\t\treturn new Vector(v)\n\t}\n\n\tdim(): { width: int, height: int } {\n\t\treturn { width: this.width, height: this.height }\n\t}\n\n\tdimString(): string {\n\t\treturn this.width + 'x' + this.height\n\t}\n\n\tequals(obj: any): boolean {\n\t\tif (obj.constructor != this.constructor) return false\n\t\tif (this.width != obj.width || this.height != obj.height) return false\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (this.m[elIndex] != obj.m[elIndex]) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tequalsMatrix(matrix: Matrix, precision?: number): boolean {\n\t\tprecision = precision || NLA_PRECISION\n\t\tif (!(matrix instanceof Matrix)) throw new Error('not a matrix')\n\t\tif (this.width != matrix.width || this.height != matrix.height) return false\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (Math.abs(this.m[elIndex] - matrix.m[elIndex]) >= precision) return false\n\t\t}\n\t\treturn true\n\t}\n\n\thashCode(): int {\n\t\tlet result = 0\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tresult = result * 31 + floatHashCode(this.m[elIndex])\n\t\t}\n\t\treturn result\n\t}\n\n\t// todo rename\n\tisZero(): boolean {\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (!eq0(this.m[elIndex])) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tisOrthogonal(): boolean {\n\t\treturn this.isSquare() && this.transposed().times(this).equalsMatrix(Matrix.identityN(this.width))\n\t}\n\n\t/**\n\t * Returns L, U, P such that L * U == P * this\n\t */\n\tluDecomposition(): { L: Matrix, U: Matrix, P: Matrix } {\n\t\tassertf(() => this.isSquare(), this.dim().toSource())\n\t\tconst dim = this.width\n\t\tconst uRowArrays = this.asRowArrays(Float64Array)\n\t\tconst lRowArrays = arrayFromFunction(dim, (row) => new Float64Array(dim))\n\t\tconst pRowArrays = Matrix.identityN(dim).asRowArrays(Float64Array)\n\t\tlet currentRowIndex = 0\n\t\tfor (let colIndex = 0; colIndex < dim; colIndex++) {\n\t\t\t// find largest value in colIndex\n\t\t\tlet maxAbsValue = 0, pivotRowIndex = -1, numberOfNonZeroRows: number = 0\n\t\t\tfor (let rowIndex = currentRowIndex; rowIndex < dim; rowIndex++) {\n\t\t\t\tconst el: number = uRowArrays[rowIndex][colIndex]\n\t\t\t\tnumberOfNonZeroRows += +(0 != el)\n\t\t\t\tif (Math.abs(el) > maxAbsValue) {\n\t\t\t\t\tmaxAbsValue = Math.abs(el)\n\t\t\t\t\tpivotRowIndex = rowIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO: check with isZero\n\t\t\tif (0 == maxAbsValue) {\n\t\t\t\t// column contains only zeros\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tassert(-1 !== pivotRowIndex)\n\t\t\t// swap rows\n\t\t\tarraySwap(uRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(lRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(pRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tlRowArrays[colIndex][colIndex] = 1\n\n\t\t\tif (1 < numberOfNonZeroRows) {\n\t\t\t\t// subtract pivot (now current) row from all below it\n\t\t\t\tfor (let rowIndex = currentRowIndex + 1; rowIndex < dim; rowIndex++) {\n\t\t\t\t\tconst l = uRowArrays[rowIndex][colIndex] / uRowArrays[currentRowIndex][colIndex]\n\t\t\t\t\tlRowArrays[rowIndex][colIndex] = l\n\t\t\t\t\t// subtract pivot row * l from row 'rowIndex'\n\t\t\t\t\tfor (let colIndex2 = colIndex; colIndex2 < dim; colIndex2++) {\n\t\t\t\t\t\tuRowArrays[rowIndex][colIndex2] -= l * uRowArrays[currentRowIndex][colIndex2]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentRowIndex++ // this doesn't increase if pivot was zero\n\t\t}\n\t\treturn {\n\t\t\tL: Matrix.fromRowArrays2(lRowArrays),\n\t\t\tU: Matrix.fromRowArrays2(uRowArrays),\n\t\t\tP: Matrix.fromRowArrays2(pRowArrays),\n\t\t}\n\t}\n\n\tgauss(): { L: Matrix, U: Matrix, P: Matrix } {\n\t\tconst width = this.width, height = this.height\n\t\tconst uRowArrays = this.asRowArrays(Float64Array)\n\t\tconst lRowArrays = arrayFromFunction(height, (row) => new Float64Array(width))\n\t\tconst pRowArrays = Matrix.identityN(height).asRowArrays(Float64Array)\n\t\tlet currentRowIndex = 0\n\t\tfor (let colIndex = 0; colIndex < width; colIndex++) {\n\t\t\t// console.log('currentRowIndex', currentRowIndex)\t// find largest value in colIndex\n\t\t\tlet maxAbsValue = 0, pivotRowIndex = -1, numberOfNonZeroRows = 0\n\t\t\tfor (let rowIndex = currentRowIndex; rowIndex < height; rowIndex++) {\n\t\t\t\tconst el = uRowArrays[rowIndex][colIndex]\n\t\t\t\tnumberOfNonZeroRows += +(0 != el)\n\t\t\t\tif (Math.abs(el) > maxAbsValue) {\n\t\t\t\t\tmaxAbsValue = Math.abs(el)\n\t\t\t\t\tpivotRowIndex = rowIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO: check with isZero\n\t\t\tif (0 == maxAbsValue) {\n\t\t\t\t// column contains only zeros\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tassert(-1 !== pivotRowIndex)\n\t\t\t// swap rows\n\t\t\tarraySwap(uRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(lRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(pRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tlRowArrays[currentRowIndex][colIndex] = 1\n\n\t\t\tif (1 < numberOfNonZeroRows) {\n\t\t\t\t// subtract pivot (now current) row from all below it\n\t\t\t\tfor (let rowIndex = currentRowIndex + 1; rowIndex < height; rowIndex++) {\n\t\t\t\t\tconst l = uRowArrays[rowIndex][colIndex] / uRowArrays[currentRowIndex][colIndex]\n\t\t\t\t\tlRowArrays[rowIndex][colIndex] = l\n\t\t\t\t\t// subtract pivot row * l from row 'rowIndex'\n\t\t\t\t\tfor (let colIndex2 = colIndex; colIndex2 < width; colIndex2++) {\n\t\t\t\t\t\tuRowArrays[rowIndex][colIndex2] -= l * uRowArrays[currentRowIndex][colIndex2]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentRowIndex++ // this doesn't increase if pivot was zero\n\t\t}\n\t\treturn {\n\t\t\tL: Matrix.fromRowArrays2(lRowArrays),\n\t\t\tU: Matrix.fromRowArrays2(uRowArrays),\n\t\t\tP: Matrix.fromRowArrays2(pRowArrays),\n\t\t}\n\t}\n\n\tqrDecompositionGivensRotation(): { Q: Matrix, R: Matrix } {\n\t\tfunction sigma(c: number, s: number) {\n\t\t\tif (0 == c) {\n\t\t\t\treturn 1\n\t\t\t}\n\t\t\tif (Math.abs(s) < Math.abs(c)) {\n\t\t\t\treturn 0.5 * Math.sign(c) * s\n\t\t\t}\n\t\t\treturn 2 * Math.sign(s) / c\n\t\t}\n\n\t\tfunction matrixForCS(dim: int, i: int, k: int, c: number, s: number) {\n\t\t\tconst m = Matrix.identityN(dim)\n\t\t\tm.setEl(i, i, c)\n\t\t\tm.setEl(k, k, c)\n\t\t\tm.setEl(i, k, s)\n\t\t\tm.setEl(k, i, -s)\n\t\t\treturn m\n\t\t}\n\n\t\tlet qTransposed = Matrix.identityN(this.height)\n\t\tfor (let colIndex = 0; colIndex < this.width; colIndex++) {\n\t\t\t// find largest value in colIndex\n\t\t\tfor (let rowIndex = colIndex + 1; rowIndex < this.height; rowIndex++) {\n\t\t\t\t//console.log('row ', rowIndex, 'col ', colIndex)\n\t\t\t\tconst xi = this.e(colIndex, colIndex)\n\t\t\t\tconst xk = this.e(rowIndex, colIndex)\n\t\t\t\tif (xk == 0) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tconst r = Math.sqrt(xi * xi + xk * xk)\n\t\t\t\tconst c = xi / r\n\t\t\t\tconst s = xk / r\n\n\t\t\t\t// apply transformation on every column:\n\t\t\t\tfor (let col2 = colIndex; col2 < this.width; col2++) {\n\t\t\t\t\tconst x1 = this.e(colIndex, col2) * c + this.e(rowIndex, col2) * s\n\t\t\t\t\tconst x2 = this.e(rowIndex, col2) * c - this.e(colIndex, col2) * s\n\t\t\t\t\tthis.setEl(colIndex, col2, x1)\n\t\t\t\t\tthis.setEl(rowIndex, col2, x2)\n\t\t\t\t}\n\t\t\t\t//console.log('r ', r, 'c ', c, 's ', s, 'sigma', sigma(c, s))\n\t\t\t\t//console.log(this.toString(),'cs\\n', matrixForCS(this.height, colIndex, rowIndex, c, s).toString())\n\t\t\t\tqTransposed = matrixForCS(this.height, colIndex, rowIndex, c, s).times(qTransposed)\n\t\t\t}\n\t\t}\n\t\t//console.log(qTransposed.transposed().toString(), this.toString(),\n\t\t// qTransposed.transposed().times(this).toString())\n\t\treturn { Q: qTransposed.transposed(), R: this }\n\t}\n\n\tisPermutation(): boolean {\n\t\tif (!this.isSquare()) return false\n\t\tif (this.m.some((value) => !eq0(value) && !eq(1, value))) return false\n\n\t\tconst rows = this.asRowArrays(Array)\n\t\tif (rows.some((row) => row.filter((value) => eq(1, value)).length != 1)) return false\n\n\t\tconst cols = this.asColArrays(Array)\n\t\tif (cols.some((col) => col.filter((value) => eq(1, value)).length != 1)) return false\n\n\t\treturn true\n\t}\n\n\tisDiagonal(precision?: number): boolean {\n\t\tlet i = this.m.length\n\t\twhile (i--) {\n\t\t\tif (0 !== i % (this.width + 1) && !eq0(this.m[i])) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tisIdentity(precision?: number): boolean {\n\t\treturn this.isLowerUnitriangular(precision) && this.isUpperTriangular(precision)\n\t}\n\n\tisUpperTriangular(precision?: number) {\n\t\tprecision = 'number' == typeof precision ? precision : NLA_PRECISION\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 1; rowIndex < this.height; rowIndex++) {\n\t\t\tfor (let colIndex = 0; colIndex < rowIndex; colIndex++) {\n\t\t\t\tif (!eq0(this.m[rowIndex * this.width + colIndex], precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\t/**\n\t * Returns x, so that this * x = b\n\t * More efficient than calculating the inverse for few (~ <= this.height) values\n\t */\n\tsolveLinearSystem(b: Vector): Vector {\n\t\tconst lup = this.luDecomposition()\n\t\t// console.log(lup.L.toString())\n\t\t// console.log(lup.U.toString())\n\t\t// console.log(lup.P.toString())\n\t\tconst y = lup.L.solveForwards(lup.P.timesVector(b))\n\t\tconst x = lup.U.solveBackwards(y)\n\t\treturn x\n\t}\n\n\tisLowerUnitriangular(precision?: number): boolean {\n\t\tprecision = 'number' == typeof precision ? precision : NLA_PRECISION\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 0; rowIndex < this.height - 1; rowIndex++) {\n\t\t\tfor (let colIndex = rowIndex; colIndex < this.width; colIndex++) {\n\t\t\t\tconst el = this.m[rowIndex * this.width + colIndex]\n\t\t\t\tif (rowIndex == colIndex ? !eq(1, el, precision) : !eq0(el, precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tisLowerTriangular(): boolean {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 0; rowIndex < this.height - 1; rowIndex++) {\n\t\t\tfor (let colIndex = rowIndex + 1; colIndex < this.width; colIndex++) {\n\t\t\t\tif (!eq0(this.m[rowIndex * this.width + colIndex])) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tsolveBackwards(x: Vector): Vector {\n\t\tassertVectors(x)\n\t\tassert(this.height == x.dim(), 'this.height == x.dim()')\n\t\tassert(this.isUpperTriangular(), 'this.isUpperTriangular()\\n' + this.str)\n\t\tconst v = new Float64Array(this.width)\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex--) {\n\t\t\tlet temp = x.v[rowIndex]\n\t\t\tfor (let colIndex = rowIndex + 1; colIndex < this.width; colIndex++) {\n\t\t\t\ttemp -= v[colIndex] * this.e(rowIndex, colIndex)\n\t\t\t}\n\t\t\tv[rowIndex] = temp / this.e(rowIndex, rowIndex)\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\tsolveBackwardsMatrix(matrix: Matrix): Matrix {\n\t\tconst colVectors = new Array(matrix.width)\n\t\tlet i = matrix.width\n\t\twhile (i--) {\n\t\t\tcolVectors[i] = this.solveBackwards(matrix.col(i))\n\t\t}\n\t\treturn Matrix.fromColVectors(colVectors)\n\t}\n\n\tsolveForwardsMatrix(matrix: Matrix): Matrix {\n\t\tconst colVectors = new Array(matrix.width)\n\t\tlet i = matrix.width\n\t\twhile (i--) {\n\t\t\tcolVectors[i] = this.solveForwards(matrix.col(i))\n\t\t}\n\t\treturn Matrix.fromColVectors(colVectors)\n\t}\n\n\tsolveForwards(x: Vector): Vector {\n\t\tassertVectors(x)\n\t\tassert(this.height == x.dim(), 'this.height == x.dim()')\n\t\tassertf(() => this.isLowerTriangular(), this.toString())\n\t\tconst v = new Float64Array(this.width)\n\t\tfor (let rowIndex = 0; rowIndex < this.height; rowIndex++) {\n\t\t\tlet temp = x.v[rowIndex]\n\t\t\tfor (let colIndex = 0; colIndex < rowIndex; colIndex++) {\n\t\t\t\ttemp -= v[colIndex] * this.e(rowIndex, colIndex)\n\t\t\t}\n\t\t\tv[rowIndex] = temp / this.e(rowIndex, rowIndex)\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\t/**\n\t * Calculates rank of matrix.\n\t * Number of linearly independant row/column vectors.\n\t * Is equal to the unmber of dimensions the image of the affine transformation represented this matrix has.\n\t */\n\trank(): int {\n\t\tconst U = this.gauss().U\n\t\t//console.log(R.toString())\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex-- && U.row(rowIndex).isZero()) {\n\t\t\tconsole.log('RANK' + U.row(rowIndex).toString() + U.row(rowIndex).isZero())\n\t\t}\n\t\treturn rowIndex + 1\n\t}\n\n\trowsIndependent(): boolean {\n\t\treturn this.height == this.rank()\n\t}\n\n\tcolsIndependent(): boolean {\n\t\treturn this.width == this.rank()\n\t}\n\n\tasRowArrays<T extends FloatArray>(arrayConstructor: new (length: int) => T): T[] {\n\t\tarrayConstructor = arrayConstructor || Float64Array as any\n\t\tlet rowIndex = this.height\n\t\tconst result = new Array(this.height)\n\t\twhile (rowIndex--) {\n\t\t\tresult[rowIndex] = this.rowArray(rowIndex, arrayConstructor)\n\t\t}\n\t\treturn result\n\t}\n\n\tasColArrays<T extends FloatArray>(arrayConstructor: new (length: int) => T): T[] {\n\t\tarrayConstructor = arrayConstructor || Float64Array as any\n\t\tlet colIndex = this.width\n\t\tconst result = new Array(this.width)\n\t\twhile (colIndex--) {\n\t\t\tresult[colIndex] = this.colArray(colIndex, arrayConstructor)\n\t\t}\n\t\treturn result\n\t}\n\n\trowArray<T extends FloatArray>(rowIndex: int, arrayConstructor: new (length: int) => T): T {\n\t\tarrayConstructor = arrayConstructor || Float64Array as any\n\t\tconst result = new arrayConstructor(this.width)\n\t\tarrayCopy(this.m, rowIndex * this.width, result, 0, this.width)\n\t\treturn result\n\t}\n\n\tcolArray<T extends FloatArray>(colIndex: int, arrayConstructor: new (length: int) => T): T {\n\t\tarrayConstructor = arrayConstructor || Float64Array as any\n\t\tconst result = new arrayConstructor(this.width)\n\t\tarrayCopyStep(this.m, colIndex, this.height, result, 0, 1, this.height)\n\t\treturn result\n\t}\n\n\tsubMatrix(firstColIndex: int, subWidth: int, firstRowIndex: int, subHeight: int): Matrix {\n\t\tassert(firstColIndex + subWidth > this.width || firstRowIndex + subHeight > this.height)\n\t\tconst m = new Float64Array(this.height)\n\t\tarrayCopyBlocks(this.m, firstColIndex, this.width, m, 0, subWidth, subHeight, subWidth)\n\t\treturn new Matrix(subWidth, subHeight, m)\n\t}\n\n\tmap(fn: (el: number, elIndex: number, array: Float64Array) => number): Matrix {\n\t\treturn new Matrix(this.width, this.height, this.m.map(fn))\n\t}\n\n\tdimEquals(matrix: Matrix): boolean {\n\t\tassertInst(Matrix, matrix)\n\t\treturn this.width == matrix.width && this.height == matrix.height\n\t}\n\n\tinversed(): Matrix {\n\t\tconst lup = this.luDecomposition()\n\t\tconst y = lup.L.solveForwardsMatrix(lup.P)\n\t\tconsole.log(y)\n\t\tconst inverse = lup.U.solveBackwardsMatrix(y)\n\t\treturn inverse\n\t}\n\n\tinversed3(): Matrix {\n\t\tassertf(() => 3 == this.width && 3 == this.height)\n\t\tconst result = Matrix.forWidthHeight(3, 3), m = this.m, r = result.m\n\n\t\tr[0] = m[4] * m[8] - m[5] * m[7]\n\t\tr[1] = -m[1] * m[8] + m[2] * m[7]\n\t\tr[2] = m[1] * m[5] - m[2] * m[4]\n\n\t\tr[3] = -m[3] * m[8] + m[5] * m[6]\n\t\tr[4] = m[0] * m[8] - m[2] * m[6]\n\t\tr[5] = -m[0] * m[5] + m[2] * m[3]\n\n\t\tr[6] = m[3] * m[7] - m[4] * m[6]\n\t\tr[7] = -m[0] * m[7] + m[1] * m[6]\n\t\tr[8] = m[0] * m[4] - m[1] * m[3]\n\n\t\tconst det = m[0] * r[0] + m[1] * r[3] + m[2] * r[6]\n\t\tlet i = 9\n\t\twhile (i--) {\n\t\t\tr[i] /= det\n\t\t}\n\n\t\treturn result\n\t}\n\n\tinversed2(): Matrix {\n\t\tassertf(() => 2 == this.width && 2 == this.height)\n\t\tconst result = Matrix.forWidthHeight(2, 2), m = this.m, r = result.m\n\n\t\tconst det = m[0] * m[3] - m[1] * r[2]\n\n\t\tr[0] = m[3] / det\n\t\tr[1] = -m[2] / det\n\n\t\tr[2] = -m[1] / det\n\t\tr[3] = m[0] / det\n\n\t\treturn result\n\t}\n\n\tcanMultiply(matrix: Matrix): boolean {\n\t\tassertInst(Matrix, matrix)\n\t\treturn this.width == matrix.height\n\t}\n\n\ttimes(matrix: Matrix): Matrix {\n\t\tassertInst(Matrix, matrix)\n\t\tassert(this.canMultiply(matrix), `Cannot multiply this {this.dimString()} by matrix {matrix.dimString()}`)\n\t\tconst nWidth = matrix.width, nHeight = this.height, n = this.width\n\t\tconst nM = new Float64Array(nWidth * nHeight)\n\t\tlet nRowIndex = nHeight\n\t\twhile (nRowIndex--) {\n\t\t\tlet nColIndex = nWidth\n\t\t\twhile (nColIndex--) {\n\t\t\t\tlet result = 0\n\t\t\t\tlet i = n\n\t\t\t\twhile (i--) {\n\t\t\t\t\tresult += this.m[nRowIndex * n + i] * matrix.m[i * nWidth + nColIndex]\n\t\t\t\t}\n\t\t\t\tnM[nRowIndex * nWidth + nColIndex] = result\n\t\t\t}\n\t\t}\n\t\treturn new Matrix(nWidth, nHeight, nM)\n\t}\n\n\ttimesVector(v: Vector): Vector {\n\t\tassertVectors(v)\n\t\tassert(this.width == v.dim())\n\t\tconst nHeight = this.height, n = this.width\n\t\tconst nM = new Float64Array(nHeight)\n\t\tlet nRowIndex = nHeight\n\t\twhile (nRowIndex--) {\n\t\t\tlet result = 0\n\t\t\tlet i = n\n\t\t\twhile (i--) {\n\t\t\t\tresult += this.m[nRowIndex * n + i] * v.v[i]\n\t\t\t}\n\t\t\tnM[nRowIndex] = result\n\t\t}\n\t\treturn new Vector(nM)\n\t}\n\n\ttransposed(): Matrix {\n\t\tconst tWidth = this.height, tHeight = this.width\n\t\tconst tM = new Float64Array(tWidth * tHeight)\n\t\tlet tRowIndex = tHeight\n\t\twhile (tRowIndex--) {\n\t\t\tlet tColIndex = tWidth\n\t\t\twhile (tColIndex--) {\n\t\t\t\ttM[tRowIndex * tWidth + tColIndex] = this.m[tColIndex * tHeight + tRowIndex]\n\t\t\t}\n\t\t}\n\t\treturn new Matrix(tWidth, tHeight, tM)\n\t}\n\n\t/**\n\t * In-place transpose.\n\t */\n\ttranspose(): void {\n\t\tconst h = this.height, w = this.width, tM = this.m\n\t\tlet tRowIndex = h\n\t\twhile (tRowIndex--) {\n\t\t\tlet tColIndex = Math.min(tRowIndex, w)\n\t\t\twhile (tColIndex--) {\n\t\t\t\tconsole.log('col', tColIndex, 'row', tRowIndex)\n\t\t\t\tconst temp = tM[tRowIndex * w + tColIndex]\n\t\t\t\ttM[tRowIndex * w + tColIndex] = tM[tColIndex * h + tRowIndex]\n\t\t\t\ttM[tColIndex * h + tRowIndex] = temp\n\t\t\t}\n\t\t}\n\t\tthis.width = h\n\t\tthis.height = w\n\t}\n\n\tisSquare(): boolean {\n\t\treturn this.height == this.width\n\t}\n\n\tdiagonal(): Vector {\n\t\tif (!this.isSquare()) {\n\t\t\tthrow new Error('!!')\n\t\t}\n\t\tconst v = new Float64Array(this.width)\n\t\tlet elIndex = this.width * (this.width + 1)\n\t\tlet vIndex = this.width\n\t\twhile (vIndex--) {\n\t\t\telIndex -= this.width + 1\n\t\t\tv[vIndex] = this.m[elIndex]\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\tmaxEl(): number {\n\t\treturn Math.max.apply(undefined, this.m)\n\t}\n\n\tminEl(): number {\n\t\treturn Math.min.apply(undefined, this.m)\n\t}\n\n\tmaxAbsColSum(): number {\n\t\tlet result = 0\n\t\tlet colIndex = this.width\n\t\twhile (colIndex--) {\n\t\t\tlet absSum = 0\n\t\t\tlet rowIndex = this.height\n\t\t\twhile (rowIndex--) {\n\t\t\t\tabsSum += Math.abs(this.m[rowIndex * this.width + colIndex])\n\t\t\t}\n\t\t\tresult = Math.max(result, absSum)\n\t\t}\n\t\treturn result\n\t}\n\n\tmaxAbsRowSum(): number {\n\t\tlet result = 0\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex--) {\n\t\t\tlet absSum = 0\n\t\t\tlet colIndex = this.width\n\t\t\twhile (colIndex--) {\n\t\t\t\tabsSum += Math.abs(this.m[rowIndex * this.width + colIndex])\n\t\t\t}\n\t\t\tresult = Math.max(result, absSum)\n\t\t}\n\t\treturn result\n\t}\n\n\tgetTriangularDeterminant(): number {\n\t\tassert(this.isUpperTriangular() || this.isLowerTriangular(), 'not a triangular matrix')\n\n\t\tlet product = 1\n\t\tlet elIndex = this.width * (this.width + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= this.width + 1\n\t\t\tproduct *= this.m[elIndex]\n\t\t}\n\t\treturn product\n\t}\n\n\t/**\n\t * Calculates the determinant by first calculating the LU decomposition. If you already have that, use\n\t * U.getTriangularDeterminant()\n\t */\n\tgetDeterminant(): number {\n\t\t// PA = LU\n\t\t// det(A) * det(B) = det(A * B)\n\t\t// det(P) == 1 (permutation matrix)\n\t\t// det(L) == 1 (main diagonal is 1s\n\t\t// =>  det(A) == det(U)\n\t\treturn this.luDecomposition().U.getTriangularDeterminant()\n\t}\n\n\thasFullRank(): boolean {\n\t\treturn Math.min(this.width, this.height) == this.rank()\n\t}\n\n\tpermutationAsIndexMap(): int[] {\n\t\tassertf(() => this.isPermutation())\n\t\tconst result = new Array(this.height)\n\t\tlet i = this.height\n\t\twhile (i--) {\n\t\t\tconst searchIndexStart = i * this.width\n\t\t\tlet searchIndex = searchIndexStart\n\t\t\twhile (this.m[searchIndex] < 0.5) searchIndex++\n\t\t\tresult[i] = searchIndex - searchIndexStart\n\t\t}\n\t\treturn result\n\t}\n\n\tgetDependentRowIndexes(gauss: { L: Matrix, U: Matrix, P: Matrix } = this.gauss()): int[] {\n\t\tconst { L, U, P } = gauss\n\t\t// rows which end up as zero vectors in U are not linearly independent\n\t\tconst dependents = new Array(this.height)\n\t\tlet uRowIndex = this.height\n\t\twhile (uRowIndex--) {\n\t\t\tconst uRow = U.row(uRowIndex)\n\t\t\tif (uRow.length() < NLA_PRECISION) {\n\t\t\t\tdependents[uRowIndex] = true\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// figure out from which other rows the rows which end up as zero vectors are created by\n\t\tlet lRowIndex = this.height\n\t\twhile (lRowIndex--) {\n\t\t\tif (dependents[lRowIndex]) {\n\t\t\t\tlet lColIndex = Math.min(lRowIndex, this.width)\n\t\t\t\twhile (lColIndex--) {\n\t\t\t\t\tif (0 !== L.e(lRowIndex, lColIndex)) {\n\t\t\t\t\t\tdependents[lColIndex] = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconsole.log('m\\n', this.toString(x => '' + x))\n\t\tconsole.log('L\\n', L.toString(x => '' + x))\n\t\tconsole.log('U\\n', U.toString(x => '' + x))\n\t\tconsole.log('P\\n', P.toString(x => '' + x))\n\t\t// gauss algorithm permutes the order of the rows, so map our results back to the original indices\n\t\tconst indexMap = P.permutationAsIndexMap()\n\t\tconst dependentRowIndexes = dependents.map((b, index) => b && indexMap[index]).filter(x => x != undefined)\n\t\treturn dependentRowIndexes\n\t}\n\n}","// @ts-ignore\nimport toSource from 'tosource'\n\nimport { Matrix } from './Matrix'\nimport { V, V3 } from './V3'\nimport { Vector } from './Vector'\n\nconst { abs, PI, sign } = Math\nexport const TAU = 2 * PI\nexport type int = number\nexport type colorstr = string // e.g. '#abcdef\nexport type raddd = number\nexport type FloatArray = Float32Array | Float64Array | number[]\n\n/** @define {boolean} */\nexport const NLA_DEBUG = true\nexport const NLA_PRECISION = 1 / (1 << 26)\nconsole.log('NLA_PRECISION', NLA_PRECISION)\nconsole.log('NLA_DEBUG', NLA_DEBUG)\n\n\n\nlet oldConsole: any = undefined\nexport function disableConsole() {\n\toldConsole = console.log\n\tconsole.log = function () { }\n}\nexport function enableConsole() {\n\tif (oldConsole) {\n\t\tconsole.log = oldConsole\n\t}\n}\nexport function hasConstructor<T>(instance: any, cons: { new(...args: any[]): T }): instance is T {\n\treturn instance.constructor == cons\n}\n\nexport function getIntervals(ts: number[], min: number, max: number): [number, number][] {\n\tts.sort((a, b) => a - b)\n\tif (!eq(ts[0], min)) {\n\t\tts.splice(0, 0, min)\n\t}\n\tif (!eq(ts.last, max)) {\n\t\tts.push(max)\n\t}\n\treturn arrayFromFunction(ts.length - 1, i => [ts[i], ts[i + 1]] as [number, number])\n}\n\nexport function assertVectors(...vectors: (Vector | V3)[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\tif (!(arguments[i] instanceof V3 || arguments[i] instanceof Vector)) {\n\t\t\t\tthrow new Error('assertVectors arguments[' + (i) + '] is not a vector. ' + typeof arguments[i] + ' == typeof ' + arguments[i])\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assertInst<T>(what: Function & { prototype: T }, ...objs: T[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < objs.length; i++) {\n\t\t\tif (!(objs[i] instanceof what)) {\n\t\t\t\tthrow new Error('assertInst objs[' + (i) + '] is not a ' + what.prototype.name + '. ' + objs[i].constructor.name + objs[i])\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assertNumbers(...numbers: number[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < numbers.length; i++) {\n\t\t\tif ('number' !== typeof numbers[i]) {\n\t\t\t\tthrow new Error('assertNumbers arguments[' + (i) + '] is not a number. ' + typeof numbers[i] + ' == typeof ' + numbers[i])\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assert(value: any, ...messages: (any | (() => string))[]): value is true {\n\tif (NLA_DEBUG && !value) {\n\t\tthrow new Error('assert failed: '\n\t\t\t+ messages.map(message => ('function' === typeof message ? message() : message || '')).join('\\n'))\n\t}\n\treturn true\n}\nexport function assertNever(value?: never): never {\n\tthrow new Error()\n}\nexport function assertf(f: () => any, ...messages: (any | (() => any))[]) {\n\tif (!f()) {\n\t\tthrow new Error('assertf failed: ' + f.toString()\n\t\t\t+ messages.map(message => ('function' === typeof message ? message() : message || '')).join('\\n'))\n\t}\n}\n\nexport function lerp(a: number, b: number, t: number) {\n\treturn a * (1 - t) + b * t\n}\nconst originalNumberToString = Number.prototype.toString\nNumber.prototype.toString = function (radix) {\n\tif (PI == this) {\n\t\treturn 'PI'\n\t}\n\treturn originalNumberToString.call(this, radix)\n}\n\nexport const eq0 = (x: number, EPS: number = NLA_PRECISION): boolean => Math.abs(x) <= EPS\nexport const eq = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => Math.abs(x - y) <= EPS\nexport const lt = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => x - y < -EPS\nexport const gt = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => y - x < -EPS\nexport const le = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => x - y <= EPS\nexport const ge = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => y - x <= EPS\n\nexport const eqAngle = (x: number, y: number): boolean => zeroAngle(x - y)\nexport const zeroAngle = (x: number): boolean => ((x % (2 * Math.PI)) + 2 * Math.PI + NLA_PRECISION) % (2 * Math.PI) < 2 * NLA_PRECISION\nexport const snap = (x: number, to: number): number => Math.abs(x - to) <= NLA_PRECISION ? to : x\nexport const snap2 = (x: number, ...to: number[]): number => to.reduce((x, to) => Math.abs(x - to) <= NLA_PRECISION ? to : x, x)\nexport const snapEPS = (x: number, EPS: number, ...to: number[]): number => to.reduce((x, to) => Math.abs(x - to) <= EPS ? to : x, x)\nexport const snap0 = (x: number, EPS = NLA_PRECISION): number => Math.abs(x) <= EPS ? 0 : x\nexport const canonAngle = (x: number): number => ((x % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI)\n\n/** @deprecated */ export const eq02 = eq0\n/** @deprecated */ export const eq2 = eq\n\n/**\n * Decimal adjustment of a number.\n *\n * @param f  The type of adjustment.\n * @param value The number.\n * @param exp The exponent (the 10 logarithm of the adjustment base).\n * @returns The adjusted value.\n */\nfunction decimalAdjust(f: (x: number) => number, value: number, exp: number): number {\n\t// If the exp is undefined or zero...\n\tif (typeof exp === 'undefined' || +exp === 0) {\n\t\treturn f(value)\n\t}\n\tvalue = +value\n\texp = +exp\n\t// If the value is not a number or the exp is not an integer...\n\tif (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n\t\treturn NaN\n\t}\n\t// Shift\n\tlet vs = value.toString().split('e')\n\tvalue = f(+(vs[0] + 'e' + (vs[1] ? (+vs[1] - exp) : -exp)))\n\t// Shift back\n\tvs = value.toString().split('e')\n\treturn +(vs[0] + 'e' + (vs[1] ? (+vs[1] + exp) : exp))\n}\n\nexport const round10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.round)\nexport const floor10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.floor)\nexport const ceil10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.ceil)\n\n\nexport const GOLDEN_RATIO = (1 + Math.sqrt(5)) / 2\n\nexport function mod(a: number, b: number) {\n\treturn ((a % b) + b) % b\n}\nexport function arraySwap(arr: any[], i: int, j: int) {\n\tconst temp = arr[i]\n\tarr[i] = arr[j]\n\tarr[j] = temp\n}\nexport function arrayCopy<T extends ArrayLike<{}>>(src: T, sstart: int, dst: T, dstart: int, length: int): void {\n\tdstart += length\n\tlength += sstart\n\twhile (length-- > sstart) {\n\t\tdst[--dstart] = src[length]\n\t}\n}\nexport function clamp(val: number, min: number, max: number) {\n\tassertNumbers(val, min, max)\n\treturn Math.max(min, Math.min(max, val))\n}\n\nexport function between(val: number, min: number, max: number) {\n\treturn min <= val && val <= max\n}\nexport function fuzzyBetween(val: number, min: number, max: number) {\n\treturn le(min, val) && le(val, max)\n}\n\nexport function mapPush<T, U>(map: Map<T, U[]>, key: T, val: U) {\n\tconst array = map.get(key)\n\tif (array) {\n\t\tarray.push(val)\n\t} else {\n\t\tmap.set(key, [val])\n\t}\n}\n\n\nexport function arrayCopyStep<T>(src: FloatArray, sstart: int, sstep: int,\n\tdst: FloatArray, dstart: int, dstep: int, count: int): void {\n\tlet srcIndex = sstart + count * sstep\n\tlet dIndex = dstart + count * dstep\n\twhile (srcIndex > sstart) {\n\t\tdst[dIndex -= dstep] = src[srcIndex -= sstep]\n\t}\n}\nexport function arrayCopyBlocks<T>(src: FloatArray, sstart: int, sstep: int,\n\tdst: FloatArray, dstart: int, dstep: int,\n\tblockSize: int, blockCount: int): void {\n\tfor (let i = 0; i < blockCount; i++) {\n\t\tarrayCopy(src, sstart + sstep * i, dst, dstart + dstep * i, blockSize)\n\t}\n}\nexport function arrayRange(startInclusive: int, endExclusive: int, step: int = 1) {\n\tassertNumbers(startInclusive, step)\n\t//console.log(Math.ceil((endExclusive - startInclusive) / step))\n\tconst arrLength = Math.ceil((endExclusive - startInclusive) / step)\n\tconst result = new Array(arrLength) // '- startInclusive' so that chunk in the last row will also be selected, even\n\t// if the row is not complete\n\tfor (let i = startInclusive, index = 0; index < arrLength; i += step, index++) {\n\t\tresult[index] = i\n\t}\n\treturn result\n}\n\nexport function arrayFromFunction<T>(length: 1, f: (i: int) => T): [T]\nexport function arrayFromFunction<T>(length: 2, f: (i: int) => T): [T, T]\nexport function arrayFromFunction<T>(length: 3, f: (i: int) => T): [T, T, T]\nexport function arrayFromFunction<T>(length: 4, f: (i: int) => T): [T, T, T, T]\nexport function arrayFromFunction<T>(length: 5, f: (i: int) => T): [T, T, T, T, T]\nexport function arrayFromFunction<T>(length: int, f: (i: int) => T): T[]\nexport function arrayFromFunction<T>(length: int, f: (i: int) => T): T[] {\n\tassertNumbers(length)\n\tassert('function' == typeof f)\n\tconst a = new Array(length)\n\tlet elIndex = length\n\twhile (elIndex--) {\n\t\ta[elIndex] = f(elIndex)\n\t}\n\treturn a\n}\n\nexport function fuzzyUniques(vals: number[]): number[] {\n\tconst round = (val: number) => Math.floor(val * (1 << 26)) / (1 << 26)\n\tconst map = new Map()\n\tfor (let i = 0; i < vals.length; i++) {\n\t\tconst val = vals[i], roundVal = round(val)\n\t\tlet key\n\t\tif (!map.has(roundVal)\n\t\t\t&& !((key = map.get(roundVal - 1 / (1 << 26))) && eq(key, val))\n\t\t\t&& !((key = map.get(roundVal + 1 / (1 << 26))) && eq(key, val))) {\n\t\t\tmap.set(roundVal, val)\n\t\t}\n\t}\n\treturn Array.from(map.values())\n}\n\nexport function fuzzyUniquesF<T>(vals: T[], f: (o: T) => number): T[] {\n\tconst round = (val: number) => Math.floor(val * (1 << 26)) / (1 << 26)\n\tconst map = new Map()\n\tfor (let i = 0; i < vals.length; i++) {\n\t\tconst val = vals[i], roundVal = round(f(val))\n\t\tlet key\n\t\tif (!map.has(roundVal)\n\t\t\t&& !((key = map.get(roundVal - 1 / (1 << 26))) && eq(key, f(val)))\n\t\t\t&& !((key = map.get(roundVal + 1 / (1 << 26))) && eq(key, f(val)))) {\n\t\t\tmap.set(roundVal, val)\n\t\t}\n\t}\n\treturn Array.from(map.values())\n}\n\n\nexport function addOwnProperties(target: any, props: any, ...exclude: string[]) {\n\tObject.getOwnPropertyNames(props).forEach(key => {\n\t\t//console.log(props, key)\n\t\tif (!exclude.includes(key)) {\n\t\t\tif (target.hasOwnProperty(key)) {\n\t\t\t\tconsole.warn('target ', target, ' already has property ', key, target[key])\n\t\t\t}\n\t\t\tObject.defineProperty(target, key, Object.getOwnPropertyDescriptor(props, key)!)\n\t\t}\n\t})\n}\n\n//function defineClass(name, parent, constructor, props, statics) {\n//\tassertf(() => 'function' == typeof constructor, 'function' == typeof constructor)\n//\tconstructor.prototype = defineObject(parent && parent.prototype, props)\n//\tconstructor.prototype.constructor = constructor\n//\tObject.defineProperty(constructor.prototype, 'name', {value: name})\n//\tstatics && addOwnProperties(constructor, statics)\n//\treturn constructor\n//}\nexport let defaultRoundFunction = (x: number) => x // Math.round10(x, -4)\n\nexport function forceFinite(val: string): number {\n\tconst valNum = parseFloat(val.replace(',', '.').replace(/^[^0-9,\\.\\-]/, ''))\n\treturn Number.isFinite(valNum) ? valNum : 0\n}\n\nexport const MINUS = (a: number, b: number) => a - b\n\n\n\nexport function floatHashCode(f: number) {\n\treturn ~~(f * (1 << 28))\n}\n\n\n/**\n * combinations(2) will generate\n * [0,0] [0,1] [1,1] [0,2] [1,2] [2,2]\n */\nexport function* combinations(n: int): IterableIterator<{ i: number, j: number }> {\n\tfor (let i = 0; i < n; i++) {\n\t\tfor (let j = i; j < n; j++) {\n\t\t\tyield { i: i, j: j }\n\t\t}\n\t}\n}\n\n\n/* The arithmetic-geometric mean of two non-negative numbers */\nexport function arithmeticGeometricMean(x: number, y: number): number {\n\tassertf(() => lt(0, x))\n\tassertf(() => lt(0, y))\n\tlet a = x, g = y\n\tlet i = 30\n\twhile (i-- && a != g) {\n\t\t[a, g] = [(a + g) / 2, Math.sqrt(a * g)]\n\t}\n\tassert(i != -1)\n\n\treturn a\n}\n\n\n/**\n * incomplete elliptic integral of the first kind\n * EllipticF(phi, k2) = INT[0; phi] 1 / sqrt(1 - k2 * sin²(phi)) dphi\n */\nexport function EllipticF(phi: number, k2: number): number {\n\treturn gaussLegendreQuadrature24(phi => Math.pow(1 - k2 * Math.sin(phi) ** 2, -0.5), 0, phi)\n}\n\n/**\n * incomplete elliptic integral of the second kind\n * EllipticE(phi, k2) = INT[0; phi] sqrt(1 - k2 * sin²(phi)) dphi\n */\nexport function EllipticE(phi: number, k2: number): number {\n\treturn gaussLegendreQuadrature24(phi => Math.pow(1 - k2 * Math.sin(phi) ** 2, 0.5), 0, phi)\n}\n\nexport const DEG = .017453292519943295\nexport function rad2deg(rad: number): number {\n\t//  discuss at: http://phpjs.org/functions/deg2rad/\n\t// original by: Enrique Gonzalez\n\t// improved by: Thomas Grainger (http://graingert.co.uk)\n\t//   example 1: deg2rad(45)\n\t//   returns 1: 0.7853981633974483\n\n\treturn rad / DEG\n}\n\n/**\n * numberToStr(2/3) == '0.6p'\n * numberToStr(7/12) == '0.583p'\n * numberToStr(2/7) == '0.285714pppppp'\n * numberToStr(NLA_PRECISION) == '0+'\n * numberToStr(-NLA_PRECISION) == '0-'\n * numberToStr(2-NLA_PRECISION) == '2-'\n * numberToStr(0) == '0='\n *\n */\nexport function numberToStr(value: number, length: int) {\n\tlet minAbsDiff = Infinity, closestValue: number | undefined = undefined, closestValueStr: string | undefined = undefined\n\tfunction test(testValue: number, testValueStr: string) {\n\t\tconst absDiff = Math.abs(testValue - value)\n\t\tconsole.log(testValue, testValueStr, absDiff)\n\t\tif (absDiff < minAbsDiff) {\n\t\t\tminAbsDiff = absDiff\n\t\t\tclosestValue = testValue\n\t\t\tclosestValueStr = testValueStr\n\t\t}\n\t\treturn 0 == absDiff\n\t}\n\n\tfunction overline(str: string) {\n\t\treturn str.split('').map(c => c + '\\u0304').join('')\n\t}\n\n\tif (test(parseFloat(value.toFixed(length)), value.toFixed(length))) return closestValueStr + '='\n\n\tconst valueStr = '' + value\n\tconst toDecimal = valueStr.substr(0, valueStr.indexOf('.') + 1)\n\tconst decimals = valueStr.substr(valueStr.indexOf('.') + 1)\n\n\tfor (let startPos = 0; startPos < length; startPos++) {\n\t\tfor (let endPos = startPos + 1; endPos <= length; endPos++) {\n\t\t\tconst prefixDecimals = decimals.substr(0, startPos)\n\t\t\tconst period = decimals.substr(startPos, endPos)\n\t\t\tconst testValue = parseFloat(toDecimal + prefixDecimals + period.repeat(Math.ceil((17 - startPos) / period.length)))\n\t\t\tif (test(testValue, toDecimal + prefixDecimals + overline(period))) return closestValueStr + '='\n\t\t}\n\t}\n\n\treturn closestValueStr + (closestValue! < value ? '-' : '+')\n}\n\n\n\nexport function time(f: () => void) {\n\tconst start = performance.now()\n\tf()\n\treturn performance.now() - start\n}\n\nexport type Tuple2<T> = [T, T]\nexport type Tuple3<T> = [T, T, T]\nexport type Tuple4<T> = [T, T, T, T]\nexport type Tuple5<T> = [T, T, T, T, T]\nexport type Tuple6<T> = [T, T, T, T, T, T]\nexport type Tuple7<T> = [T, T, T, T, T, T, T]\nexport type Tuple8<T> = [T, T, T, T, T, T, T, T]\n//console.log(numberToStr(29 / 99, 4))\n//console.log(numberToStr(77 / 99, 4))\n\n// interface Object {\n//    cw(f: (x: any) => any): any\n// }\n//Object.prototype.cw = function (f) {\n//    return f(this)\n//}\n//Object.construct = function <T>(cons: {new(...args: any[]): T}, args: any[]) {\n//    return f(this)\n//}\ndeclare global {\n\tinterface Object {\n\t\tsce: string\n\t\tstr: string\n\t\ttoSource(): string\n\t}\n\tinterface ObjectConstructor {\n\t\tconstruct<T>(cons: { new(...args: any[]): T }, args: any[]): T\n\t\tmap<T, S, K extends string>(\n\t\t\to: { [k in K]: T },\n\t\t\tf: (this: undefined, v: T, key: string, o: { [k in K]: T }) => S\n\t\t): { [k in K]: S }\n\t\tmap<T, S, K extends string, C>(\n\t\t\to: { [k in K]: T },\n\t\t\tf: (this: C, v: T, key: string, o: { [k in K]: T }) => S,\n\t\t\tcontext: C\n\t\t): { [k in K]: S }\n\t}\n\t// tslint:disable-next-line:class-name\n\tinterface __NLAReadonlyArray<T> {\n\t\tbinaryIndexOf<S>(searchElement: S, cmp?: (a: T, b: S) => number): int\n\n\t\tconcatenated(): T\n\n\t\tflatMap<U>(f: (el: T, elIndex: int, arr: this) => (U | ReadonlyArray<U>)): U[]\n\n        /**\n         * this.length == 0\n         */\n\t\tisEmpty(): boolean\n\n        /**\n         * this[this.length - 1]\n         */\n\t\treadonly last: T\n\n        /**\n         * this[index % this.length]\n         */\n\t\temod(index: int): T\n\n        /**\n         * this.map(f).filter(v => v)\n         */\n\t\tmapFilter<U>(f: (el: T, elIndex: int, arr: this) => U | undefined | false | null): U[]\n\n        /**\n         * Math.max.apply(undefined, this)\n         */\n\t\tmax(this: number[]): number\n\n        /**\n         * Math.min.apply(undefined, this)\n         */\n\t\tmin(this: number[]): number\n\n\t\tindexWithMax(f: (el: T, elIndex: int, arr: this) => number): int\n\n\t\tsum(this: number[]): number\n\n\t\tabsSum(): number\n\n\t\tsliceStep(start: int, end: int, step: int, chunkSize?: int): T[]\n\n\t\tunique(): T[]\n\n\t\twithMax(f: (el: T, elIndex: int, arr: this) => number): T\n\n\t\tequals(this: { equals(obj: any): boolean }[], obj: any): boolean\n\n\t\thashCode(this: { hashCode(): int }[]): int\n\t}\n\tinterface Array<T> extends __NLAReadonlyArray<T> {\n\t\tbinaryInsert(this: number[], newEl: number, cmp?: (a: number, b: number) => number): void\n\n\t\tbinaryInsert(newEl: T, cmp: (a: T, b: T) => number): void\n\n        /**\n         * this.length == 0\n         */\n\t\tisEmpty(): boolean\n\n        /**\n         * this[this.length - 1]\n         */\n\t\tlast: T\n\n\t\tremove(el: T): boolean\n\n\t\tbagRemove(el: T): boolean\n\t\tbagRemoveIndex(el: T): boolean\n\t\tbagToggle(el: T): boolean\n\n\t\tremoveIndex(index: int): T\n\n\t\tremoveMatch(matcher: (el: T) => boolean): T | undefined\n\n\t\tremoveAll(els: T[]): void\n\n\t\tsumInPlaceTree(): number\n\n\t\ttoggle(el: T): void\n\n\t\tclear(...newItems: T[]): void\n\n\t\t//filter<U extends T>(pred: (a: T) => a is U): U[]\n\n\t\tmap<U>(this: [T], callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): [U]\n\t\tmap<U>(this: Tuple2<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple2<U>\n\t\tmap<U>(this: Tuple3<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple3<U>\n\t\tmap<U>(this: Tuple4<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple4<U>\n\t\tmap<U>(this: Tuple5<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple5<U>\n\t\tmap<U>(this: Tuple6<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple6<U>\n\t\tmap<U>(this: Tuple7<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple7<U>\n\t\tmap<U>(this: Tuple8<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple8<U>\n\t}\n\tinterface ReadonlyArray<T> extends __NLAReadonlyArray<T> { }\n\n\tinterface String {\n\t\tcapitalizeFirstLetter(): string\n\t\tequals(x: any): boolean\n\t}\n}\nObject.map = function <T, S, K extends string>(o: { [k in K]: T },\n\tf: (v: T, key: string, o: { [k in K]: T }) => S,\n\tcontext: any = undefined): { [k in K]: S } {\n\tconst result = {} as { [k in K]: S }\n\tfor (const key in o) {\n\t\tresult[key] = f.call(context, o[key], key, o)\n\t}\n\treturn result\n}\nArray.prototype.emod = function (i) {\n\treturn this[i % this.length]\n}\nArray.prototype.sliceStep = function (start, end, step, chunkSize = 1) {\n\tassertNumbers(start, step)\n\tstart < 0 && (start = this.length + start)\n\tend <= 0 && (end = this.length + end)\n\tconst resultLength = Math.ceil((end - start) / step)\n\tconst result = new Array(resultLength) // '- start' so that chunk in the last row\n\t// will also be selected, even if the row is\n\t// not complete\n\tlet index = 0\n\tfor (let i = start; i < end; i += step) {\n\t\tfor (let j = i; j < Math.min(i + chunkSize, end); j++) {\n\t\t\tresult[index++] = this[j]\n\t\t}\n\t}\n\tassert(resultLength == index)\n\treturn result\n}\nArray.prototype.equals = function (obj: any): boolean {\n\tif (this === obj) return true\n\tif (Object.getPrototypeOf(obj) !== Array.prototype) return false\n\tif (this.length !== obj.length) return false\n\tfor (let i = 0; i < this.length; i++) {\n\t\tif (!equals(this[i], obj[i])) return false\n\t}\n\treturn true\n}\nexport function equals(a: any, b: any) {\n\treturn 'object' === typeof a ? a.equals(b) : a === b\n}\nArray.prototype.hashCode = function (): int {\n\tlet result = 0\n\tfor (let i = 0; i < this.length; i++) {\n\t\tresult = result * 31 + hashCode(this[i]) | 0\n\t}\n\treturn result | 0\n}\nexport function hashCode(o: any) {\n\tif ('number' === typeof o || undefined === o) {\n\t\treturn o | 0\n\t} else {\n\t\treturn null === o ? 0 : o.hashCode()\n\t}\n}\nArray.prototype.mapFilter = function (f) {\n\tconst length = this.length, result = []\n\tfor (let i = 0; i < length; i++) {\n\t\tif (i in this) {\n\t\t\tconst val = f(this[i], i, this)\n\t\t\tif (val) {\n\t\t\t\tresult.push(val)\n\t\t\t}\n\t\t}\n\t}\n\treturn result\n}\nArray.prototype.flatMap = function (f) {\n\treturn Array.prototype.concat.apply([], this.map(f))\n}\nArray.prototype.clear = function (...newItems) {\n\treturn this.splice(0, this.length, ...newItems)\n}\n/**\n *\n * @returns Array.prototype.concat.apply([], this)\n */\nArray.prototype.concatenated = function () {\n\treturn Array.prototype.concat.apply([], this)\n}\nArray.prototype.min = function () {\n\tlet i = this.length, max = Infinity\n\twhile (i--) {\n\t\tconst val = this[i]\n\t\tif (max > val) max = val\n\t}\n\treturn max\n}\nArray.prototype.max = function () {\n\t// faster and no limit on array size, see https://jsperf.com/math-max-apply-vs-loop/2\n\tlet i = this.length, max = -Infinity\n\twhile (i--) {\n\t\tconst val = this[i]\n\t\tif (max < val) max = val\n\t}\n\treturn max\n}\nArray.prototype.indexWithMax = function (f) {\n\tif (this.length == 0) { return -1 }\n\tlet i = this.length, result = -1, maxVal = -Infinity\n\twhile (i--) {\n\t\tconst val = f(this[i], i, this)\n\t\tif (val > maxVal) {\n\t\t\tmaxVal = val\n\t\t\tresult = i\n\t\t}\n\t}\n\treturn result\n}\nArray.prototype.withMax = function (f) {\n\tlet i = this.length, result = undefined, maxVal = -Infinity\n\twhile (i--) {\n\t\tconst el = this[i], val = f(el, i, this)\n\t\tif (val > maxVal) {\n\t\t\tmaxVal = val\n\t\t\tresult = el\n\t\t}\n\t}\n\treturn result\n}\n\n/**\n Returns the sum of the absolute values of the components of this vector.\n E.g. V(1, -2, 3) === abs(1) + abs(-2) + abs(3) === 1 + 2 + 3 === 6\n */\nArray.prototype.absSum = function () {\n\tlet i = this.length\n\tlet result = 0\n\twhile (i--) {\n\t\tresult += Math.abs(this[i])\n\t}\n\treturn result\n}\n\nArray.prototype.sum = function () {\n\tlet i = this.length\n\tlet result = 0\n\twhile (i--) {\n\t\tresult += this[i]\n\t}\n\treturn result\n}\n\nArray.prototype.sumInPlaceTree = function () {\n\tif (0 == this.length) return 0\n\tlet l = this.length\n\twhile (l != 1) {\n\t\tconst lHalfFloor = Math.floor(l / 2)\n\t\tconst lHalfCeil = Math.ceil(l / 2)\n\t\tfor (let i = 0; i < lHalfFloor; i++) {\n\t\t\tthis[i] += this[i + lHalfCeil]\n\t\t}\n\t\tl = lHalfCeil\n\t}\n\treturn this[0]\n}\n\nArray.prototype.isEmpty = function () {\n\treturn 0 == this.length\n}\n\nArray.prototype.unique = function () {\n\tconst uniqueSet = new Set(this)\n\treturn Array.from(uniqueSet)\n}\n\nArray.prototype.remove = function (o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.splice(index, 1)\n\t\treturn true\n\t}\n\treturn false\n}\n\nArray.prototype.removeIndex = function (i) {\n\tconst result = this[i]\n\tthis.splice(i, 1)\n\treturn result\n}\nArray.prototype.bagRemoveIndex = function (i) {\n\tconst result = this[i]\n\tif (i == this.length - 1) {\n\t\tthis.pop()\n\t} else {\n\t\tthis[i] = this.pop()\n\t}\n\treturn result\n}\n\nArray.prototype.removeMatch = function <T>(matcher: (el: T) => boolean) {\n\tconst index = this.findIndex(matcher)\n\tif (-1 != index) {\n\t\treturn this.removeIndex(index)\n\t}\n}\n\nArray.prototype.removeAll = function (o) {\n\tlet i = o.length\n\twhile (i--) {\n\t\tthis.remove(o[i])\n\t}\n}\n\nArray.prototype.toggle = function (o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.splice(index, 1)\n\t\treturn false\n\t} else {\n\t\tthis.push(o)\n\t\treturn true\n\t}\n}\nArray.prototype.bagToggle = function (o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.bagRemoveIndex(index)\n\t\treturn false\n\t} else {\n\t\tthis.push(o)\n\t\treturn true\n\t}\n}\n\nArray.prototype.binaryIndexOf = function (searchElement, cmp = (a: any, b: any) => a - b) {\n\n\tlet minIndex = 0\n\tlet maxIndex = this.length - 1\n\tlet currentIndex\n\tlet currentElement\n\n\twhile (minIndex <= maxIndex) {\n\t\tcurrentIndex = (minIndex + maxIndex) / 2 | 0\n\t\tcurrentElement = this[currentIndex]\n\n\t\tif (cmp(currentElement, searchElement) < 0) {\n\t\t\tminIndex = currentIndex + 1\n\t\t}\n\t\telse if (cmp(currentElement, searchElement) > 0) {\n\t\t\tmaxIndex = currentIndex - 1\n\t\t}\n\t\telse {\n\t\t\treturn currentIndex\n\t\t}\n\t}\n\n\treturn -minIndex - 1\n}\n\nArray.prototype.binaryInsert = function (el: any, cmp = MINUS) {\n\tlet minIndex = 0\n\tlet maxIndex = this.length\n\tlet currentIndex\n\tlet currentElement\n\n\twhile (minIndex < maxIndex) {\n\t\tcurrentIndex = ~~((minIndex + maxIndex) / 2)\n\t\tcurrentElement = this[currentIndex]\n\n\t\tif (cmp(currentElement, el) < 0) {\n\t\t\tminIndex = currentIndex + 1\n\t\t} else {\n\t\t\tmaxIndex = currentIndex\n\t\t}\n\t}\n\n\tthis.splice(minIndex, 0, el)\n}\nObject.defineProperty(Array.prototype, 'last', {\n\tget() {\n\t\treturn this[this.length - 1]\n\t},\n\tset(val) {\n\t\tthis[this.length - 1] = val\n\t},\n})\n\nString.prototype.capitalizeFirstLetter = function () {\n\treturn this.charAt(0).toUpperCase() + this.slice(1)\n}\nString.prototype.equals = function (x: any) {\n\treturn this == x\n}\n\nexport function SCE(o: any) {\n\tswitch (typeof o) {\n\t\tcase 'undefined':\n\t\t\treturn 'undefined'\n\t\tcase 'function':\n\t\t\treturn o.toString()\n\t\tcase 'number':\n\t\t\treturn '' + o\n\t\tcase 'string':\n\t\t\treturn JSON.stringify(o)\n\t\tcase 'object':\n\t\t\tif (null == o) {\n\t\t\t\treturn 'null'\n\t\t\t} else {\n\t\t\t\treturn o.sce\n\t\t\t}\n\t\tdefault:\n\t\t\tthrow new Error()\n\t}\n}\nexport function STR(o: any) {\n\treturn o.str\n}\nObject.defineProperty(Object.prototype, 'sce', { get: function () { return this.toSource() } })\nObject.defineProperty(Object.prototype, 'str', { get: function () { return this.toString() } })\n\n\n//const NLA = {}\n//for (let key in ARRAY_UTILITIES) {\n//    const nlaName = 'array' + key.capitalizeFirstLetter()\n//    assert(!NLA[nlaName])\n//    NLA[nlaName] = (arr, ...rest) => ARRAY_UTILITIES[key].apply(arr, rest)\n//}\n\n\nexport function isCCW(vertices: V3[], normal: V3) {\n\tconst dsa = doubleSignedArea(vertices, normal)\n\tassert(0 != dsa)\n\treturn dsa < 0\n}\nexport function doubleSignedArea(vertices: V3[], normal: V3) {\n\tassert(!normal.likeO(), '!normal.likeO()')\n\tconst absMaxDim = normal.maxAbsDim()\n\t// order is important, coord0 and coord1 must be set so that coord0, coord1 and maxDim span a right-hand coordinate\n\t// system var [coord0, coord1] = [['y', 'z'], ['z', 'x'], ['x', 'y']][maxAbsDim]\n\tconst doubleSignedArea = vertices.map((v0, i, vertices) => {\n\t\tconst v1 = vertices[(i + 1) % vertices.length]\n\t\t//return (v1[coord0] - v0[coord0]) * (v1[coord1] + v0[coord1])\n\t\tswitch (absMaxDim) {\n\t\t\tcase 0:\n\t\t\t\treturn (v1.y - v0.y) * (v1.z + v0.z)\n\t\t\tcase 1:\n\t\t\t\treturn (v1.z - v0.z) * (v1.x + v0.x)\n\t\t\tcase 2:\n\t\t\t\treturn (v1.x - v0.x) * (v1.y + v0.y)\n\t\t}\n\t}).reduce((a, b) => a + b)\n\treturn snap(doubleSignedArea * Math.sign(normal.e(absMaxDim)), 0)\n}\n\n/**\n * solves x² + px + q = 0\n */\nexport function pqFormula(p: number, q: number): number[] {\n\t// 4 times the discriminant:in\n\tconst discriminantX4 = p * p / 4 - q\n\tif (discriminantX4 < -NLA_PRECISION) {\n\t\treturn []\n\t} else if (discriminantX4 <= NLA_PRECISION) {\n\t\treturn [-p / 2]\n\t} else {\n\t\tconst root = Math.sqrt(discriminantX4)\n\t\treturn [-p / 2 - root, -p / 2 + root]\n\t}\n}\n\n/**\n * from pomax' library\n * solves ax³ + bx² + cx + d = 0\n * This function from pomax' utils\n * @returns 0-3 roots\n */\nexport function solveCubicReal2(a: number, b: number, c: number, d: number): number[] {\n\tif (eq0(a)) {\n\t\tif (eq0(b)) {\n\t\t\treturn [-d / c]\n\t\t} else {\n\t\t\treturn pqFormula(c / b, d / b)\n\t\t}\n\t}\n\tconst divisor = a\n\ta = b / divisor\n\tb = c / divisor\n\tc = d / divisor\n\tconst p = (3 * b - a * a) / 3,\n\t\tpDiv3 = p / 3,\n\t\tpDiv3Pow3 = pDiv3 * pDiv3 * pDiv3,\n\t\tq = (2 * a * a * a - 9 * a * b + 27 * c) / 27,\n\t\tqDiv2 = q / 2,\n\t\tdiscriminant = qDiv2 * qDiv2 + pDiv3Pow3\n\t// 18abcd - 4b³d + b²c² - 4ac³ - 27a²d²\n\tif (discriminant < -NLA_PRECISION / 8) {\n\t\tconst r = Math.sqrt(-pDiv3Pow3),\n\t\t\tt = -q / (2 * r),\n\t\t\tcosphi = t < -1 ? -1 : t > 1 ? 1 : t, // clamp t to [-1;1]\n\t\t\tphi = Math.acos(cosphi),\n\t\t\tt1 = 2 * Math.cbrt(r)\n\t\tconst x1 = t1 * Math.cos(phi / 3) - a / 3\n\t\tconst x2 = t1 * Math.cos((phi + 2 * Math.PI) / 3) - a / 3\n\t\tconst x3 = t1 * Math.cos((phi + 4 * Math.PI) / 3) - a / 3\n\t\treturn [x1, x2, x3]\n\t} else if (discriminant <= NLA_PRECISION / 8) {\n\t\tif (0 == qDiv2) {\n\t\t\t// TODO: compare with likeO?\n\t\t\treturn [-a / 3]\n\t\t}\n\t\tconst u1 = qDiv2 < 0 ? Math.cbrt(-qDiv2) : -Math.cbrt(qDiv2)\n\t\tconst x1 = 2 * u1 - a / 3\n\t\tconst x2 = -u1 - a / 3\n\t\treturn [x1, x2]\n\t} else {\n\t\tconst sd = Math.sqrt(discriminant)\n\t\tconst u1 = Math.cbrt(-qDiv2 + sd)\n\t\tconst v1 = Math.cbrt(qDiv2 + sd)\n\t\treturn [u1 - v1 - a / 3]\n\t}\n}\nexport function checkDerivate(f: (x: number) => number, df: (x: number) => number, a: number, b: number, maxFaults: int = 0) {\n\tconst eps = 1e-4\n\tlet faults = 0\n\tfor (let t = a; t < b; t += (b - a) / 100) {\n\t\tconst dfdt = df(t)\n\t\tconst df2 = (f(t + eps) - f(t)) / eps\n\t\tassert((faults += +!eq2(df2, dfdt, 0.1)) <= maxFaults, `df2 == ${df2} != ${df(t)} = df(t)`)\n\t}\n}\nexport function getRoots(f: (x: number) => number, a: number, b: number, stepSize: number, df: (x: number) => number): number[] {\n\tconst STEPS = (b - a) / stepSize\n\tconst results: number[] = []\n\tfor (let startT = a; startT <= b; startT += stepSize) {\n\t\tconst dt = stepSize * abs(df(startT))\n\t\tif (abs(f(startT)) <= dt) {\n\t\t\t//const t = newtonIterate1d(f, startT, 16)\n\t\t\tlet t = newtonIterateWithDerivative(f, startT, 16, df)\n\t\t\tif (!eq0(f(t)) || eq0(df(t))) {\n\t\t\t\tconst a = startT - dt, b = startT + dt\n\t\t\t\tt = newtonIterate1d(df, startT, 16)\n\t\t\t\t//if (f(a) * f(b) < 0) {\n\t\t\t\t//    t = bisect(f, a, b, 16)\n\t\t\t\t//} else if (df(a) * df(b) < 0) {\n\t\t\t\t//    t = bisect(df, a, b, 16)\n\t\t\t\t//}\n\t\t\t}\n\t\t\tif (eq0(f(t)) && !results.some(r => eq(r, t))) {\n\t\t\t\tresults.push(t)\n\t\t\t}\n\t\t}\n\t}\n\treturn results\n}\n\nexport function bisect(f: (x: number) => number, a: number, b: number, steps: int) {\n\tassert(a < b)\n\tlet fA = f(a), fB = f(b)\n\twhile (steps--) {\n\t\tconst c = (b + a) / 2\n\t\tconst fC = f(c)\n\t\tif (sign(fA) == sign(fC)) {\n\t\t\ta = c\n\t\t\tfA = fC\n\t\t} else {\n\t\t\tb = c\n\t\t\tfB = fC\n\t\t}\n\t}\n\tassert(a <= (b + a) / 2)\n\tassert(b >= (b + a) / 2)\n\treturn lerp(a, b, 0.5)\n}\nexport function newtonIterate(f: (x: number[]) => number[], x: number[], steps: int = 4, EPSILON?: number, stepize = 1) {\n\tEPSILON = EPSILON || 1e-8\n\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = Matrix.jacobi(f, x, fx, EPSILON)\n\t\tassert(!dfdx.isZero())\n\t\tconst dx = dfdx.solveLinearSystem(new Vector(new Float64Array(fx))).v\n\t\tassert(!isNaN(dx[0]))\n\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\tfor (let j = 0; j < x.length; j++) x[j] -= dx[j] * stepize\n\t}\n\treturn x\n}\n\nexport function newtonIterate1d(\n\tf: (x: number) => number, xStart: number, steps: number | undefined, df: (x: number) => number): number\nexport function newtonIterate1d(\n\tf: (x: number) => number, xStart: number, steps: number, EPSILON?: number): number\nexport function newtonIterate1d(\n\tf: (x: number) => number, xStart: number, steps: number = 8, epsOrDf: number | ((x: number) => number) = 1e-8): number {\n\tif ('number' === typeof epsOrDf) {\n\t\tlet x = xStart\n\n\t\tfor (let i = 0; i < steps; i++) {\n\t\t\tconst fx = f(x)\n\t\t\tconst dfdx = (f(x + epsOrDf) - fx) / epsOrDf\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t\tx = x - fx / dfdx\n\t\t}\n\t\treturn x\n\t} else {\n\t\treturn newtonIterateWithDerivative(f, xStart, steps, epsOrDf)\n\t}\n}\nexport function newtonIterateWithDerivative(f: (x: number) => number, xStart: number, steps: number = 4, df: (x: number) => number) {\n\tlet x = xStart\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = df(x)\n\t\tif (isNaN(fx) || isNaN(dfdx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t\tx = x - fx / dfdx\n\t\tif (isNaN(fx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t}\n\treturn x\n}\nexport function newtonIterateSmart(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number = 4,\n\tdf: (x: number) => number,\n\tmindf = 1e-6) {\n\tlet x = xStart\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = df(x)\n\t\tif (abs(dfdx) < mindf && abs(fx) < mindf) {\n\t\t\treturn newtonIterate1d(df, x)\n\t\t}\n\t\tif (isNaN(fx) || isNaN(dfdx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t\tx = x - fx / dfdx\n\t\tif (isNaN(fx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t}\n\treturn x\n}\nexport function newtonIterate2d(\n\tf1: (s: number, t: number) => number,\n\tf2: (s: number, t: number) => number,\n\tsStart: number,\n\ttStart: number,\n\tsteps?: number): V3 | undefined {\n\tconst EPSILON = 1e-6\n\tsteps = steps || 4\n\tlet s = sStart, t = tStart, f1ts, f2ts\n\tdo {\n        /*\n         | a b |-1                   |  d -b |\n         | c d |   = 1 / (ad - bc) * | -c  a |\n         */\n\t\tf1ts = f1(s, t)\n\t\tf2ts = f2(s, t)\n        /*\n         let df1s = (f1(s + EPSILON, t) - f1ts) / EPSILON, df1t = (f1(s, t + EPSILON) - f1ts) / EPSILON,\n         df2s = (f2(s + EPSILON, t) - f2ts) / EPSILON, df2t = (f2(s, t + EPSILON) - f2ts) / EPSILON\n         let det = df1s * df2t - df1t * df2s\n         s = s - ( df2t * f1ts - df1t * f2ts) / det\n         t = t - (-df2s * f1ts + df1s * f2ts) / det\n         */\n\t\t// TODO: is this even more accurate?\n\t\tconst df1s = (f1(s + EPSILON, t) - f1ts), df1t = (f1(s, t + EPSILON) - f1ts),\n\t\t\tdf2s = (f2(s + EPSILON, t) - f2ts), df2t = (f2(s, t + EPSILON) - f2ts)\n\t\tconst det = (df1s * df2t - df1t * df2s) / EPSILON\n\t\tconst ds = (df2t * f1ts - df1t * f2ts) / det\n\t\tconst dt = (-df2s * f1ts + df1s * f2ts) / det\n\t\ts -= ds\n\t\tt -= dt\n\t} while (--steps && f1ts ** 2 + f2ts ** 2 > NLA_PRECISION)\n\tif (f1ts ** 2 + f2ts ** 2 > NLA_PRECISION) {\n\t\tconsole.log(f1ts ** 2 + f2ts ** 2)\n\t\treturn undefined\n\t}\n\treturn new V3(s, t, 0)\n}\nexport function newtonIterate2dWithDerivatives(f: (s: number, t: number) => number,\n\tg: (s: number, t: number) => number,\n\tsStart: number, tStart: number, steps: int,\n\tdfds: (s: number, t: number) => number,\n\tdfdt: (s: number, t: number) => number,\n\tdgds: (s: number, t: number) => number,\n\tdgdt: (s: number, t: number) => number): V3 | undefined {\n\tsteps = steps || 4\n\tlet s = sStart, t = tStart\n\tconst eps = 1e-6\n\tlet f1ts, f2ts\n\tdo {\n        /*\n         | a b |-1                   |  d -b |\n         | c d |   = 1 / (ad - bc) * | -c  a |\n         */\n\t\tf1ts = f(s, t)\n\t\tf2ts = g(s, t)\n\t\tconst df1s = dfds(s, t), df1t = dfdt(s, t),\n\t\t\tdf2s = dgds(s, t), df2t = dgdt(s, t)\n\t\t// TODO: is this even more accurate?\n\t\tconst det = df1s * df2t - df1t * df2s\n\t\tconst ds = (df2t * f1ts - df1t * f2ts) / det\n\t\tconst dt = (-df2s * f1ts + df1s * f2ts) / det\n\t\ts -= ds\n\t\tt -= dt\n\t} while (--steps && f1ts * f1ts + f2ts * f2ts > NLA_PRECISION / 32)\n\tif (!steps) {\n\t\t//console.log(f1ts * f1ts + f2ts * f2ts)\n\t\treturn undefined\n\t}\n\treturn V(s, t, 0)\n}\n\n\nexport const gaussLegendre24Xs: ReadonlyArray<number> = [\n\t-0.0640568928626056260850430826247450385909,\n\t0.0640568928626056260850430826247450385909,\n\t-0.1911188674736163091586398207570696318404,\n\t0.1911188674736163091586398207570696318404,\n\t-0.3150426796961633743867932913198102407864,\n\t0.3150426796961633743867932913198102407864,\n\t-0.4337935076260451384870842319133497124524,\n\t0.4337935076260451384870842319133497124524,\n\t-0.5454214713888395356583756172183723700107,\n\t0.5454214713888395356583756172183723700107,\n\t-0.6480936519369755692524957869107476266696,\n\t0.6480936519369755692524957869107476266696,\n\t-0.7401241915785543642438281030999784255232,\n\t0.7401241915785543642438281030999784255232,\n\t-0.8200019859739029219539498726697452080761,\n\t0.8200019859739029219539498726697452080761,\n\t-0.8864155270044010342131543419821967550873,\n\t0.8864155270044010342131543419821967550873,\n\t-0.9382745520027327585236490017087214496548,\n\t0.9382745520027327585236490017087214496548,\n\t-0.9747285559713094981983919930081690617411,\n\t0.9747285559713094981983919930081690617411,\n\t-0.9951872199970213601799974097007368118745,\n\t0.9951872199970213601799974097007368118745,\n]\nexport const gaussLegendre24Weights: ReadonlyArray<number> = [\n\t0.1279381953467521569740561652246953718517,\n\t0.1279381953467521569740561652246953718517,\n\t0.1258374563468282961213753825111836887264,\n\t0.1258374563468282961213753825111836887264,\n\t0.1216704729278033912044631534762624256070,\n\t0.1216704729278033912044631534762624256070,\n\t0.1155056680537256013533444839067835598622,\n\t0.1155056680537256013533444839067835598622,\n\t0.1074442701159656347825773424466062227946,\n\t0.1074442701159656347825773424466062227946,\n\t0.0976186521041138882698806644642471544279,\n\t0.0976186521041138882698806644642471544279,\n\t0.0861901615319532759171852029837426671850,\n\t0.0861901615319532759171852029837426671850,\n\t0.0733464814110803057340336152531165181193,\n\t0.0733464814110803057340336152531165181193,\n\t0.0592985849154367807463677585001085845412,\n\t0.0592985849154367807463677585001085845412,\n\t0.0442774388174198061686027482113382288593,\n\t0.0442774388174198061686027482113382288593,\n\t0.0285313886289336631813078159518782864491,\n\t0.0285313886289336631813078159518782864491,\n\t0.0123412297999871995468056670700372915759,\n\t0.0123412297999871995468056670700372915759,\n]\nexport function gaussLegendreQuadrature24(f: (x: number) => number, startT: number, endT: number): number {\n\t//let result = 0\n\t//for (let i = 0; i < gaussLegendre24Xs.length; i++) {\n\t//\t// gauss-legendre goes from -1 to 1, so we need to scale\n\t//\tlet t = startT + (gaussLegendre24Xs[i] + 1) / 2 * (endT - startT)\n\t//\tresult += gaussLegendre24Weights[i] * f(t)\n\t//}\n\t//const result = NLA\n\t//\t\t.arrayFromFunction(24, i => startT + (gaussLegendre24Xs[i] + 1) / 2 * (endT - startT))\n\t//\t\t.map((t, i) => gaussLegendre24Weights[i] * f(t))\n\t//\t\t.sumInPlaceTree()\n\t//99.54182500782605\n\t//99.54182500782602\n\t// again, [-1,1], so div by 2\n\t//return result // 2 * (endT - startT)\n\n\n\treturn glq24_11(t => f(startT + (t + 1) / 2 * (endT - startT))) / 2 * (endT - startT)\n}\n\n/**\n * Calculate the integral of f in the interval [-1;1].\n * @param f\n */\nexport function glq24_11(f: (x: number) => number): number {\n\treturn arrayFromFunction(24, i => gaussLegendre24Weights[i] * f(gaussLegendre24Xs[i])).sumInPlaceTree()\n}\nexport function glqInSteps(f: (x: number) => number, startT: number, endT: number, steps: int) {\n\tconst dt = (endT - startT) / steps\n\treturn arrayFromFunction(steps, i => glq24_11(t => f(startT + dt * i + (t + 1) / 2 * dt))).sumInPlaceTree() / 2 * dt\n}\n\nexport function midpointRuleQuadrature(f: (x: number) => number, startT: number, endT: number, steps: int = 32): number {\n\tconst dt = (endT - startT) / steps\n\treturn arrayFromFunction(steps, i => startT + dt / 2 + dt * i).map(f).sumInPlaceTree() * dt\n}\n\nexport function callsce(name: string, ...params: any[]) {\n\treturn name + '(' + params.map(SCE).join(',') + ')'\n}\n","import { Equalable, JavaMap as CustomMap } from 'javasetmap.ts'\nimport {\n\tassert, assertf, assertInst, assertNumbers, assertVectors, defaultRoundFunction, eq, eq0, eq2, FloatArray, int,\n\tNLA_PRECISION, raddd,\n} from './NLA'\n\n/**\n * Immutable 3d-vector/point.\n */\nexport class V3 implements Equalable {\n\tstatic readonly O: V3 = new V3(0, 0, 0)\n\tstatic readonly X: V3 = new V3(1, 0, 0)\n\tstatic readonly Y: V3 = new V3(0, 1, 0)\n\tstatic readonly Z: V3 = new V3(0, 0, 1)\n\tstatic readonly XY: V3 = new V3(1, 1, 0)\n\tstatic readonly XYZ: V3 = new V3(1, 1, 1)\n\tstatic readonly INF: V3 = new V3(Infinity, Infinity, Infinity)\n\tstatic readonly UNITS: V3[] = [V3.X, V3.Y, V3.Z]\n\tstatic readonly NAMEMAP = new CustomMap<V3, string>()\n\t\t.set(V3.O, 'V3.O')\n\t\t.set(V3.X, 'V3.X')\n\t\t.set(V3.Y, 'V3.Y')\n\t\t.set(V3.Z, 'V3.Z')\n\t\t.set(V3.XYZ, 'V3.XYZ')\n\t\t.set(V3.INF, 'V3.INF')\n\n\tconstructor(readonly x: number,\n\t\treadonly y: number,\n\t\treadonly z: number) {\n\t\tassertNumbers(x, y, z)\n\t}\n\n\tget [0]() {\n\t\treturn this.x\n\t}\n\tget [1]() {\n\t\treturn this.y\n\t}\n\tget [2]() {\n\t\treturn this.z\n\t}\n\n\tstatic random(): V3 {\n\t\treturn new V3(Math.random(), Math.random(), Math.random())\n\t}\n\n\tstatic parallel(a: V3, b: V3) {\n\t\treturn a.dot(b) - a.length() * b.length()\n\t}\n\n\t/**\n\t * See http://math.stackexchange.com/questions/44689/how-to-find-a-random-axis-or-unit-vector-in-3d\n\t * @returns A random point on the unit sphere with uniform distribution across the surface.\n\t */\n\tstatic randomUnit(): V3 {\n\t\tconst zRotation = Math.random() * 2 * Math.PI\n\t\tconst z = Math.random() * 2 - 1\n\t\tconst zRadius = Math.sqrt(1 - z ** 2)\n\t\treturn new V3(zRadius * Math.cos(zRotation), zRadius * Math.sin(zRotation), z)\n\t}\n\n\t//noinspection JSUnusedLocalSymbols\n\t/**\n\t * Documentation stub. You want {@see V3#sphere}\n\t */\n\tstatic fromAngles(theta: number, phi: number): V3 {\n\t\tthrow new Error()\n\t}\n\n\tstatic fromFunction(f: (dim: number) => number) {\n\t\treturn new V3(f(0), f(1), f(2))\n\t}\n\n\tstatic min(a: V3, b: V3): V3 {\n\t\treturn new V3(Math.min(a.x, b.x), Math.min(a.y, b.y), Math.min(a.z, b.z))\n\t}\n\n\tstatic max(a: V3, b: V3): V3 {\n\t\treturn new V3(Math.max(a.x, b.x), Math.max(a.y, b.y), Math.max(a.z, b.z))\n\t}\n\n\tstatic lerp(a: V3, b: V3, fraction: number): V3 {\n\t\treturn b.minus(a).times(fraction).plus(a)\n\t}\n\n\tstatic fromArray(a: number[]): V3 {\n\t\treturn new V3(a[0], a[1], a[2])\n\t}\n\n\tstatic angleBetween(a: V3, b: V3): number {\n\t\treturn a.angleTo(b)\n\t}\n\n\tstatic zip(f: (...args: number[]) => number, ...args: V3[]): V3 {\n\t\tassert(f instanceof Function)\n\t\treturn new V3(\n\t\t\tf.apply(undefined, args.map(x => x.x)),\n\t\t\tf.apply(undefined, args.map(x => x.y)),\n\t\t\tf.apply(undefined, args.map(x => x.z)))\n\t}\n\n\tstatic normalOnPoints(a: V3, b: V3, c: V3): V3 {\n\t\tassertVectors(a, b, c)\n\t\treturn a.to(b).cross(a.to(c))\n\t}\n\n\tstatic add(...vs: V3[]): V3 {\n\t\tassertVectors.apply(undefined, vs)\n\t\tlet x = 0, y = 0, z = 0\n\t\tlet i = vs.length\n\t\twhile (i--) {\n\t\t\tx += vs[i].x\n\t\t\ty += vs[i].y\n\t\t\tz += vs[i].z\n\t\t}\n\t\treturn new V3(x, y, z)\n\t}\n\n\tstatic sub(...vs: V3[]): V3 {\n\t\tassertVectors.apply(undefined, vs)\n\t\tlet x = vs[0].x, y = vs[0].y, z = vs[0].z\n\t\tlet i = vs.length\n\t\twhile (i--) {\n\t\t\tx -= vs[i].x\n\t\t\ty -= vs[i].y\n\t\t\tz -= vs[i].z\n\t\t}\n\t\treturn new V3(x, y, z)\n\t}\n\n\t/**\n\t * Pack an array of V3s into an array of numbers (Float32Array by default).\n\t *\n\t * @param v3arr source array\n\t * @param dest destination array. If provided, must be large enough to fit v3count items.\n\t * @param srcStart starting index in source array\n\t * @param destStart starting index in destination array\n\t * @param v3count Number of V3s to copy.\n\t * @returns Packed array.\n\t */\n\tstatic pack<T extends FloatArray = Float32Array>(v3arr: V3[],\n\t\tdest?: T,\n\t\tsrcStart: number = 0,\n\t\tdestStart: number = 0,\n\t\tv3count: number = v3arr.length - srcStart): T {\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\n\t\tconst result = dest || new Float32Array(3 * v3count) as any // TODO\n\t\tassert(result.length - destStart >= v3count * 3, 'dest.length - destStart >= v3count * 3', result.length, destStart, v3count * 3)\n\n\t\tlet i = v3count, srcIndex = srcStart, destIndex = destStart\n\t\twhile (i--) {\n\t\t\tconst v = v3arr[srcIndex++]\n\t\t\tresult[destIndex++] = v.x\n\t\t\tresult[destIndex++] = v.y\n\t\t\tresult[destIndex++] = v.z\n\t\t}\n\t\treturn result\n\t}\n\n\tstatic unpack(packedArray: FloatArray,\n\t\tdest?: V3[],\n\t\tsrcStart: number = 0,\n\t\tdestStart: number = 0,\n\t\tv3count: number = (packedArray.length - srcStart) / 3, ) {\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\n\t\tconst result = dest || new Array(v3count)\n\t\tassert(result.length - destStart >= v3count, 'dest.length - destStart >= v3count')\n\n\t\tlet i = v3count, srcIndex = srcStart, destIndex = destStart\n\t\twhile (i--) {\n\t\t\tresult[destIndex++] = new V3(packedArray[srcIndex++], packedArray[srcIndex++], packedArray[srcIndex++])\n\t\t}\n\t\treturn result\n\t}\n\n\tstatic packXY<T extends FloatArray = Float32Array>(v3arr: V3[],\n\t\tdest?: T,\n\t\tsrcStart: number = 0,\n\t\tdestStart: number = 0,\n\t\tv3count: number = v3arr.length - srcStart): T {\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\n\t\tconst result = dest || new Float32Array(2 * v3count) as any\n\t\tassert(result.length - destStart >= v3count, 'dest.length - destStart >= v3count')\n\n\t\tlet i = v3count, srcIndex = srcStart, destIndex = destStart\n\t\twhile (i--) {\n\t\t\tconst v = v3arr[srcIndex++]\n\t\t\tresult[destIndex++] = v.x\n\t\t\tresult[destIndex++] = v.y\n\t\t}\n\t\treturn result\n\t}\n\n\tstatic unpackXY(src: FloatArray,\n\t\tdest?: V3[],\n\t\tsrcStart: int = 0,\n\t\tdestStart: int = 0,\n\t\tv3count: int = Math.min(src.length / 2, dest && dest.length || Infinity) - destStart): V3[] {\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\n\t\tdest = dest || new Array(v3count)\n\t\tassert(dest.length - destStart >= v3count, 'dest.length - destStart >= v3count')\n\t\tassert(src.length - srcStart >= v3count * 2, 'dest.length - destStart >= v3count')\n\n\t\tlet i = v3count, srcIndex = srcStart, destIndex = destStart\n\t\twhile (i--) {\n\t\t\tdest[destIndex++] = new V3(src[srcIndex++], src[srcIndex++], 0)\n\t\t}\n\t\treturn dest\n\t}\n\n\tstatic perturbed(v: V3, delta?: number): V3 {\n\t\treturn v.perturbed(delta)\n\t}\n\n\tstatic polar(radius: number, phi: raddd, z: number = 0): V3 {\n\t\treturn new V3(radius * Math.cos(phi), radius * Math.sin(phi), z)\n\t}\n\n\t/**\n\t *\n\t * @param longitude angle in XY plane\n\t * @param latitude \"height\"/z dir angle\n\t */\n\tstatic sphere(longitude: raddd, latitude: raddd, length = 1): V3 {\n\t\treturn new V3(\n\t\t\tlength * Math.cos(latitude) * Math.cos(longitude),\n\t\t\tlength * Math.cos(latitude) * Math.sin(longitude),\n\t\t\tlength * Math.sin(latitude))\n\t}\n\n\tstatic inverseLerp(a: V3, b: V3, x: V3) {\n\t\tconst ab = a.to(b)\n\t\treturn a.to(x).dot(ab) / ab.squared()\n\t}\n\n\tperturbed(delta: number = NLA_PRECISION * 0.8): V3 {\n\t\treturn this.map(x => x + (Math.random() - 0.5) * delta)\n\t}\n\n\t*[Symbol.iterator]() {\n\t\tyield this.x\n\t\tyield this.y\n\t\tyield this.z\n\t}\n\n\te(index: int): number {\n\t\tassert(index >= 0 && index < 3)\n\t\treturn 0 == index ? this.x : (1 == index ? this.y : this.z)\n\t}\n\n\tnegated(): V3 {\n\t\treturn new V3(-this.x, -this.y, -this.z)\n\t}\n\n\tabs(): V3 {\n\t\treturn new V3(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z))\n\t}\n\n\tplus(a: V3): V3 {\n\t\tassertVectors(a)\n\t\treturn new V3(this.x + a.x, this.y + a.y, this.z + a.z)\n\t}\n\n\t/**\n\t * Hadarmard product (or Schur product)\n\t * Element-wise multiplication of two vectors.\n\t * @see https://en.wikipedia.org/wiki/Hadamard_product_(matrices)\n\t *\n\t */\n\tschur(a: V3): V3 {\n\t\treturn new V3(this.x * a.x, this.y * a.y, this.z * a.z)\n\t}\n\n\t/**\n\t * Element-wise division.\n\t */\n\tdivv(a: V3): V3 {\n\t\treturn new V3(this.x / a.x, this.y / a.y, this.z / a.z)\n\t}\n\n\t/**\n\t * See also {@link to} which is a.minus(this)\n\t */\n\tminus(a: V3): V3 {\n\t\tassertVectors(a)\n\t\treturn new V3(this.x - a.x, this.y - a.y, this.z - a.z)\n\t}\n\n\tto(a: V3): V3 {\n\t\tassertVectors(a)\n\t\treturn a.minus(this)\n\t}\n\n\ttimes(factor: number): V3 {\n\t\tassertNumbers(factor)\n\t\treturn new V3(this.x * factor, this.y * factor, this.z * factor)\n\t}\n\n\tdiv(a: number): V3 {\n\t\tassertNumbers(a)\n\t\treturn new V3(this.x / a, this.y / a, this.z / a)\n\t}\n\n\t/**\n\t * Dot product.\n\t * @see https://en.wikipedia.org/wiki/Dot_product\n\t */\n\tdot(a: V3): number {\n\t\tassertInst(V3, a)\n\t\treturn this.x * a.x + this.y * a.y + this.z * a.z\n\t}\n\n\t/**\n\t * Linearly interpolate\n\t */\n\tlerp(b: V3, t: number): V3 {\n\t\tassertVectors(b)\n\t\tassertNumbers(t)\n\t\treturn this.plus(b.minus(this).times(t))\n\t}\n\n\tsquared(): number {\n\t\treturn this.dot(this)\n\t}\n\n\tdistanceTo(a: V3): number {\n\t\tassertVectors(a)\n\t\t//return this.minus(a).length()\n\t\treturn Math.hypot(this.x - a.x, this.y - a.y, this.z - a.z)\n\t}\n\n\tdistanceToSquared(a: V3): number {\n\t\tassertVectors(a)\n\t\treturn this.minus(a).squared()\n\t}\n\n\t///**\n\t// * See also {@see #setTo} for the individual\n\t// *\n\t// * @param v\n\t// */\n\t//assign(v) {\n\t//\tassertVectors(v)\n\t//\tthis.x = v.x\n\t//\tthis.y = v.y\n\t//\tthis.z = v.z\n\t//}\n\t//\n\t///**\n\t// * See also {@see #assign} for the V3 version\n\t// *\n\t// * @param x\n\t// * @param y\n\t// * @param z\n\t// */\n\t//setTo(x, y, z = 0) {\n\t//\tthis.x = x\n\t//\tthis.y = y\n\t//\tthis.z = z\n\t//}\n\n\ttoSource(): string {\n\t\treturn V3.NAMEMAP.get(this) || this.toString()\n\t}\n\n\tnonParallelVector(): V3 {\n\t\tconst abs = this.abs()\n\t\tif ((abs.x <= abs.y) && (abs.x <= abs.z)) {\n\t\t\treturn V3.X\n\t\t}\n\t\telse if ((abs.y <= abs.x) && (abs.y <= abs.z)) {\n\t\t\treturn V3.Y\n\t\t}\n\t\telse {\n\t\t\treturn V3.Z\n\t\t}\n\t}\n\n\tslerp(b: V3, t: number): V3 {\n\t\tassertVectors(b)\n\t\tassertNumbers(t)\n\t\tconst sin = Math.sin\n\t\tconst omega = this.angleTo(b)\n\t\treturn this.times(sin((1 - t) * omega) / sin(omega)).plus(b.times(sin(t * omega) / sin(omega)))\n\t}\n\n\tmin(b: V3): V3 {\n\t\treturn new V3(Math.min(this.x, b.x), Math.min(this.y, b.y), Math.min(this.z, b.z))\n\t}\n\n\tmax(b: V3): V3 {\n\t\treturn new V3(Math.max(this.x, b.x), Math.max(this.y, b.y), Math.max(this.z, b.z))\n\t}\n\n\tequals(v: any): boolean {\n\t\treturn this == v || this.x == v.x && this.y == v.y && this.z == v.z\n\t}\n\n\t/**\n\t *\n\t * The cross product is defined as:\n\t * a x b = |a| * |b| * sin(phi) * n\n\t * where |.| is the euclidean norm, phi is the angle between the vectors\n\t * and n is a unit vector perpendicular to both a and b.\n\t *\n\t * The cross product is zero for parallel vectors.\n\t * @see https://en.wikipedia.org/wiki/Cross_product\n\t */\n\tcross(v: V3): V3 {\n\t\treturn new V3(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x)\n\t}\n\n\t//noinspection JSMethodCanBeStatic\n\t/**\n\t * Documentation stub. You want {@link unit}\n\t */\n\tnormalized(): V3 { throw new Error('documentation stub. use .unit()') }\n\n\tminElement(): number {\n\t\treturn Math.min(this.x, this.y, this.z)\n\t}\n\n\tmaxElement(): number {\n\t\treturn Math.max(this.x, this.y, this.z)\n\t}\n\n\ttoArray(n: int = 3): number[] {\n\t\treturn [this.x, this.y, this.z].slice(0, n)\n\t}\n\n\t/**\n\t * Get a perpendicular vector.\n\t * For vectors in the XY-Plane, returns vector rotated 90° CCW.\n\t */\n\tgetPerpendicular(): V3 {\n\t\tif (eq0(this.x) && eq0(this.y)) {\n\t\t\tif (eq0(this.z)) {\n\t\t\t\tthrow new Error('zero vector')\n\t\t\t}\n\t\t\t// v is Vector(0, 0, v.z)\n\t\t\treturn V3.Y\n\t\t}\n\t\treturn new V3(-this.y, this.x, 0)\n\t}\n\n\t//noinspection JSMethodCanBeStatic\n\tdim(): int {\n\t\treturn 3\n\t}\n\n\tels(): number[] {\n\t\treturn [this.x, this.y, this.z]\n\t}\n\n\tangleXY(): number {\n\t\treturn Math.atan2(this.y, this.x)\n\t}\n\n\tlengthXY(): number {\n\t\treturn Math.hypot(this.x, this.y)\n\t\t//return Math.sqrt(this.x * this.x + this.y * this.y)\n\t}\n\n\tsquaredXY(): number {\n\t\treturn this.x * this.x + this.y * this.y\n\t}\n\n\txy(): V3 {\n\t\treturn new V3(this.x, this.y, 0)\n\t}\n\n\t/**\n\t * Transform this vector element-wise by way of function f. Returns V3(f(x), f(y), f(z))\n\t * @param f function to apply to elements (number -> number)\n\t */\n\tmap(f: (el: number, dim: 'x' | 'y' | 'z') => number): V3 {\n\t\treturn new V3(f(this.x, 'x'), f(this.y, 'y'), f(this.z, 'z'))\n\t}\n\n\ttoString(roundFunction?: (x: number) => any): string {\n\t\troundFunction = roundFunction || defaultRoundFunction\n\t\treturn V3.NAMEMAP.get(this) ||\n\t\t\t'V(' + [this.x, this.y, this.z].map(roundFunction).join(', ') + ')' //+ this.id\n\t}\n\n\tangleTo(b: V3): number {\n\t\tassert(1 == arguments.length)\n\t\tassertVectors(b)\n\t\tassert(!this.likeO())\n\t\tassert(!b.likeO())\n\t\treturn Math.acos(Math.min(1, this.dot(b) / this.length() / b.length()))\n\t}\n\n\t/**\n\t *\n\t * phi = angle between A and B\n\t * alpha = angle between n and normal1\n\t *\n\t * A . B = ||A|| * ||B|| * cos(phi)\n\t * A x B = ||A|| * ||B|| * sin(phi) * n (n = unit vector perpendicular)\n\t * (A x B) . normal1 = ||A|| * ||B|| * sin(phi) * cos(alpha)\n\t */\n\tangleRelativeNormal(vector: V3, normal1: V3): number {\n\t\tassert(2 == arguments.length)\n\t\tassertVectors(vector, normal1)\n\t\tassertf(() => normal1.hasLength(1))\n\t\t//assert(vector.isPerpendicularTo(normal1), 'vector.isPerpendicularTo(normal1)' + vector.sce + normal1.sce)\n\t\t//assert(this.isPerpendicularTo(normal1), 'this.isPerpendicularTo(normal1)' + this.dot(vector)) //\n\t\t// -0.000053600770598683675\n\t\treturn Math.atan2(this.cross(vector).dot(normal1), this.dot(vector))\n\t}\n\n\t/**\n\t Returns true iff this is parallel to vector, i.e. this * s == vector, where s is a pos or neg number, using equals\n\t Throw a DebugError\n\t if vector is not a Vector or\n\t if this has a length of 0 or\n\t if vector has a length of 0\n\t */\n\tisParallelTo(vector: V3): boolean {\n\t\tassertVectors(vector)\n\t\tassert(!this.likeO())\n\t\tassert(!vector.likeO())\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\n\t\t// in both cases the vectors are parallel, so check if abs(a . b) == |a|*|b|\n\t\tconst dot = this.dot(vector)\n\t\treturn eq(this.squared() * vector.squared(), dot * dot)\n\t}\n\n\tisPerpendicularTo(vector: V3): boolean {\n\t\tassertVectors(vector)\n\t\tassert(!this.likeO(), '!this.likeO()')\n\t\tassert(!vector.likeO(), '!vector.likeO()')\n\t\treturn eq0(this.dot(vector))\n\t}\n\n\tisReverseDirTo(other: V3): boolean {\n\t\tassertVectors(other)\n\t\tassert(!this.likeO())\n\t\tassert(!other.likeO())\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\n\t\t// in both cases the vectors are parallel, so check if abs(a . b) == |a|*|b|\n\t\tconst dot = this.dot(other)\n\t\treturn eq(Math.sqrt(this.squared() * other.squared()), dot)\n\t}\n\n\t/**\n\t * Returns the length of this Vector, i.e. the euclidean norm.\n\t *\n\t * Note that the partial derivatives of the euclidean norm at point x are equal to the\n\t * components of the unit vector x.\n\t */\n\tlength(): number {\n\t\treturn Math.hypot(this.x, this.y, this.z)\n\t\t//return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\n\t}\n\n\t/**\n\t * Definition: V3.likeO == V3.like(V3.O)\n\t */\n\tlikeO(): boolean {\n\t\treturn this.like(V3.O)\n\t}\n\n\t/**\n\t * eq(this.x, obj.x) && eq(this.y, obj.y) && eq(this.z, obj.z)\n\t * @param obj\n\t */\n\tlike(obj: any): boolean {\n\t\tif (obj === this)\n\t\t\treturn true\n\t\tif (!(obj instanceof V3))\n\t\t\treturn false\n\t\treturn eq(this.x, obj.x) && eq(this.y, obj.y) && eq(this.z, obj.z)\n\t}\n\n\t/**\n\t * equivalent to this.like(v) || this.negated().like(v)\n\t */\n\tlikeOrReversed(v: V3): boolean {\n\t\treturn eq(Math.abs(this.dot(v)), Math.sqrt(this.squared() * v.squared()))\n\t}\n\n\t/**\n\t * Returns a new unit Vector (.length() === 1) with the same direction as this vector. Throws a\n\t * DebugError if this has a length of 0.\n\t */\n\tunit(): V3 {\n\t\tassert(!this.likeO(), 'cannot normalize zero vector')\n\t\treturn this.div(this.length())\n\t}\n\n\t/**\n\t * Returns a new V3 equal to this scaled so that its length is equal to newLength.\n\t *\n\t * Passing a negative newLength will flip the vector.\n\t */\n\ttoLength(newLength: number): V3 {\n\t\tassertNumbers(newLength)\n\t\treturn this.times(newLength / this.length())\n\t}\n\n\t/**\n\t Returns a new Vector which is the projection of this vector onto the passed vector.\n\t Examples\n\t V(3, 4).projectedOn(V(1, 0)) // returns V(3, 0)\n\t V(3, 4).projectedOn(V(2, 0)) // returns V(3, 0)\n\t V(3, 4).projectedOn(V(-1, 0)) // returns V(-3, 0)\n\t V(3, 4).projectedOn(V(0, 1)) // returns V(0, 4)\n\t V(3, 4).projectedOn(V(1, 1)) // returns\n\t */\n\tprojectedOn(b: V3): V3 {\n\t\tassertVectors(b)\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\n\t\treturn b.times(this.dot(b) / b.dot(b))\n\t}\n\n\trejectedFrom(b: V3): V3 {\n\t\tassertVectors(b)\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\n\t\treturn this.minus(b.times(this.dot(b) / b.dot(b)))\n\t}\n\n\trejectedFrom1(b1: V3): V3 {\n\t\tassertVectors(b1)\n\t\tassert(b1.hasLength(1))\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\n\t\treturn this.minus(b1.times(this.dot(b1)))\n\t}\n\n\t/**\n\t * Returns the length of this vector rejected from the unit vector b.\n\t *\n\t *       /|\n\t * this / |    ^\n\t *     /__|    | b\n\t *      r\n\t *  Returns length of r (r === this.rejectedFrom(b))\n\t */\n\trejectedLength(b: V3): number {\n\t\tassertVectors(b)\n\t\treturn Math.sqrt(this.dot(this) - this.dot(b) ** 2 / b.dot(b))\n\t}\n\n\t/**\n\t * Returns the length of this vector rejected from the unit vector b1.\n\t *\n\t *       /|\n\t * this / |    ^\n\t *     /__|    | b1\n\t *      r\n\t *  Returns length of r (r === this.rejectedFrom(b1))\n\t */\n\trejected1Length(b1: V3): number {\n\t\tassertVectors(b1)\n\t\tassert(b1.hasLength(1))\n\t\treturn Math.sqrt(this.dot(this) - this.dot(b1) ** 2)\n\t}\n\n\t/**\n\t Returns true iff the length() of this vector is equal to 'length', using eq\n\t E.g. V(3, 4).hasLength(5) === true\n\t V(1, 1).hasLength(1) === false\n\t */\n\thasLength(length: number): boolean {\n\t\tassertNumbers(length)\n\t\treturn eq(length, this.length())\n\t}\n\n\t/**\n\t Returns the sum of the absolute values of the components of this vector.\n\t E.g. V(1, -2, 3) === abs(1) + abs(-2) + abs(3) === 1 + 2 + 3 === 6\n\t */\n\tabsSum(): number {\n\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)\n\t}\n\n\t/**\n\t * returns max(|x|, |y|, |z|)\n\t */\n\tmaxAbsElement(): number {\n\t\treturn Math.max(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z))\n\t}\n\n\t/**\n\t * returns min(|x|, |y|, |z|)\n\t */\n\tminAbsElement(): number {\n\t\treturn Math.min(Math.abs(this.x), Math.abs(this.y), Math.min(this.z))\n\t}\n\n\tmaxAbsDim(): 0 | 1 | 2 {\n\t\tconst xAbs = Math.abs(this.x), yAbs = Math.abs(this.y), zAbs = Math.abs(this.z)\n\t\treturn xAbs >= yAbs ? (xAbs >= zAbs ? 0 : 2) : (yAbs >= zAbs ? 1 : 2)\n\t}\n\n\tminAbsDim(): 0 | 1 | 2 {\n\t\tconst xAbs = Math.abs(this.x), yAbs = Math.abs(this.y), zAbs = Math.abs(this.z)\n\t\treturn xAbs < yAbs ? (xAbs < zAbs ? 0 : 2) : (yAbs < zAbs ? 1 : 2)\n\t}\n\n\twithElement(dim: 'x' | 'y' | 'z', el: number) {\n\t\tassert(['x', 'y', 'z'].includes(dim), '' + dim)\n\t\tassertNumbers(el)\n\t\tif ('x' == dim) {\n\t\t\treturn new V3(el, this.y, this.z)\n\t\t}\n\t\tif ('y' == dim) {\n\t\t\treturn new V3(this.x, el, this.z)\n\t\t}\n\t\treturn new V3(this.x, this.y, el)\n\t}\n\n\thashCode(): int {\n\t\tfunction floatHashCode(f: number) {\n\t\t\treturn ~~(f * (1 << 28))\n\t\t}\n\n\t\treturn ~~((floatHashCode(this.x) * 31 + floatHashCode(this.y)) * 31 + floatHashCode(this.z))\n\t}\n\n\thashCodes() {\n\t\t//function floatHashCode(f) {\n\t\t//\treturn ~~(f * (1 << 28))\n\t\t//}\n\n\t\t// compare hashCode.floatHashCode\n\t\t// the following ops are equivalent to\n\t\t// floatHashCode((el - NLA_PRECISION) % (2 * NLA_PRECISION))\n\t\t// this results in the hashCode for the (out of 8 possible) cube with the lowest hashCode\n\t\t// the other 7 can be calculated by adding constants\n\t\tconst xHC = ~~(this.x * (1 << 28) - 0.5),\n\t\t\tyHC = ~~(this.y * (1 << 28) - 0.5),\n\t\t\tzHC = ~~(this.z * (1 << 28) - 0.5),\n\t\t\thc = ~~((xHC * 31 + yHC) * 31 + zHC)\n\t\treturn [\n\t\t\t~~(hc),\n\t\t\t~~(hc + 961),\n\t\t\t~~(hc + 31),\n\t\t\t~~(hc + 31 + 961),\n\t\t\t~~(hc + 1),\n\t\t\t~~(hc + 1 + 961),\n\t\t\t~~(hc + 1 + 31),\n\t\t\t~~(hc + 1 + 31 + 961),\n\t\t]\n\t}\n\n\t//static areDisjoint(it: Iterable<V3>): boolean {\n\t//\tconst vSet = new CustomSet\n\t//\tfor (const v of it) {\n\t//\t\tif (!v.equals(vSet.canonicalizeLike(v))) {\n\t//\t\t\t// like value already in set\n\t//\t\t\treturn false\n\t//\t\t}\n\t//\t}\n\t//\treturn true\n\t//}\n\n\tcompareTo(other: V3): number {\n\t\tif (this.x != other.x) {\n\t\t\treturn this.x - other.x\n\t\t} else if (this.y != other.y) {\n\t\t\treturn this.y - other.y\n\t\t} else {\n\t\t\treturn this.z - other.z\n\t\t}\n\t}\n\n\tcompareTo2(other: V3, eps: number = NLA_PRECISION): number {\n\t\tif (!eq2(this.x, other.x, eps)) {\n\t\t\treturn this.x - other.x\n\t\t} else if (!eq2(this.y, other.y, eps)) {\n\t\t\treturn this.y - other.y\n\t\t} else if (!eq2(this.z, other.z, eps)) {\n\t\t\treturn this.z - other.z\n\t\t} else {\n\t\t\treturn 0\n\t\t}\n\t}\n\n\ttoAngles(): { theta: raddd, phi: raddd } {\n\t\treturn {\n\t\t\ttheta: Math.atan2(this.y, this.x),\n\t\t\tphi: Math.asin(this.z / this.length()),\n\t\t}\n\t}\n}\n\n/**\n * Utility method for creating V3s\n *\n * Example usage:\n *\n *     V(1, 2, 3)\n *     V([1, 2, 3])\n *     V({ x: 1, y: 2, z: 3 })\n *     V(1, 2) * assumes z=0\n *     V([1, 2]) // assumes z=0\n *\n */\nexport function V(x: number, y: number, z?: number): V3\nexport function V(arr: [number, number, number] | [number, number]): V3\nexport function V(obj: { x: number, y: number, z?: number }): V3\nexport function V(a: any, b?: any, c?: any): V3 {\n\tif (arguments.length == 3) {\n\t\treturn new V3(parseFloat(a), parseFloat(b), parseFloat(c))\n\t} else if (arguments.length == 2) {\n\t\treturn new V3(parseFloat(a), parseFloat(b), 0)\n\t} else if (arguments.length == 1) {\n\t\tif (typeof (a) == 'object') {\n\t\t\tif (a instanceof V3) {\n\t\t\t\t// immutable, so\n\t\t\t\treturn a\n\t\t\t} else if (a instanceof Array || a instanceof Float32Array || a instanceof Float64Array) {\n\t\t\t\tif (2 == a.length) {\n\t\t\t\t\treturn new V3(parseFloat(a[0]), parseFloat(a[1]), 0)\n\t\t\t\t} else if (3 == a.length) {\n\t\t\t\t\treturn new V3(parseFloat(a[0]), parseFloat(a[1]), parseFloat(a[2]))\n\t\t\t\t}\n\t\t\t} else if (('x' in a) && ('y' in a)) {\n\t\t\t\treturn new V3(parseFloat(a.x), parseFloat(a.y), 'z' in a ? parseFloat(a.z) : 0)\n\t\t\t}\n\t\t}\n\t}\n\tthrow new Error('invalid arguments' + arguments)\n}\n","import {M4} from './M4'\nimport {callsce, raddd} from './NLA'\nimport {V3} from './V3'\n\nexport const P3YZ = {normal1: V3.X, w: 0}\nexport const P3ZX = {normal1: V3.Y, w: 0}\nexport const P3XY = {normal1: V3.Z, w: 0}\n\nexport abstract class Transformable {\n\tmirror(plane: { normal1: V3, w: number }): this {\n\t\treturn this.transform(M4.mirror(plane))\n\t}\n\n\tmirroredX(): this {\n\t\treturn this.mirror(P3YZ)\n\t}\n\n\tmirrorY(): this {\n\t\treturn this.mirror(P3ZX)\n\t}\n\n\tmirrorZ(): this {\n\t\treturn this.mirror(P3XY)\n\t}\n\n\tproject(plane: { normal1: V3, w: number }): this {\n\t\treturn this.transform(M4.project(plane))\n\t}\n\n\tprojectXY(): this {\n\t\treturn this.transform(M4.project(P3XY))\n\t}\n\n\tprojectYZ(): this {\n\t\treturn this.transform(M4.project(P3YZ))\n\t}\n\n\tprojectZX(): this {\n\t\treturn this.transform(M4.project(P3ZX))\n\t}\n\n\ttranslate(x: number, y?: number, z?: number): this\n\ttranslate(v: V3): this\n\ttranslate(...args: any[]): this {\n\t\treturn this.transform(M4.translate.apply(undefined, args),\n\t\t\tcallsce.call(undefined, '.translate', ...args))\n\t}\n\n\tscale(x: number, y?: number, z?: number): this\n\tscale(f: V3): this\n\tscale(...args: any[]): this {\n\t\treturn this.transform(M4.scale.apply(undefined, args),\n\t\t\tcallsce.call(undefined, '.scale', ...args))\n\t}\n\n\trotateX(radians: raddd): this {\n\t\treturn this.transform(M4.rotateX(radians), `.rotateX(${radians})`)\n\t}\n\n\trotateY(radians: raddd): this {\n\t\treturn this.transform(M4.rotateY(radians), `.rotateY(${radians})`)\n\t}\n\n\trotateZ(radians: raddd): this {\n\t\treturn this.transform(M4.rotateZ(radians), `.rotateZ(${radians})`)\n\t}\n\n\trotate(rotationCenter: V3, rotationAxis: V3, radians: raddd): this {\n\t\treturn this.transform(M4.rotateLine(rotationCenter, rotationAxis, radians),\n\t\t\tcallsce('.rotate', rotationCenter, rotationAxis, radians))\n\t}\n\n\trotateAB(from: V3, to: V3): this {\n\t\treturn this.transform(M4.rotateAB(from, to), callsce('.rotateAB', from, to))\n\t}\n\n\teulerZXZ(alpha: raddd, beta: raddd, gamma: raddd): this {\n\t\tthrow new Error()\n\t\t//return this.transform(M4.eulerZXZ(alpha, beta, gamma))\n\t}\n\n\tshearX(y: number, z: number): this {\n\t\treturn this.transform(new M4([\n\t\t\t1, y, z, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1]))\n\t}\n\n\tfoo(): this {\n\t\treturn this.transform(M4.FOO)\n\t}\n\n\tbar(): this {\n\t\treturn this.transform(M4.BAR)\n\t}\n\n\tabstract transform(m4: M4, desc?: string): this\n\n\tvisit<R>(visitor: { [name: string]: (this: Transformable) => R }): R\n\tvisit<R, A>(visitor: { [name: string]: (this: Transformable, a: A) => R }, a: A): R\n\tvisit<R, A, B>(visitor: { [name: string]: (this: Transformable, a: A, b: B) => R }, a: A, b: B): R\n\tvisit<R, A, B, C>(visitor: { [name: string]: (this: Transformable, a: A, b: B, c: C) => R }, a: A, b: B, c: C): R\n\tvisit<R, A, B, C, D>(visitor: { [name: string]: (this: Transformable, a: A, b: B, c: C, d: D) => R }, a: A, b: B, c: C, d: D): R\n\tvisit(visitor: { [name: string]: (this: Transformable, ...args: any[]) => any }, ...args: any[]) {\n\t\tlet proto = Object.getPrototypeOf(this)\n\t\t// walk up the prototype chain until we find a defined function in o\n\t\twhile (!visitor.hasOwnProperty(proto.constructor.name) && proto !== Transformable.prototype) {\n\t\t\tproto = Object.getPrototypeOf(proto)\n\t\t}\n\t\tif (visitor.hasOwnProperty(proto.constructor.name)) {\n\t\t\treturn visitor[proto.constructor.name].apply(this, args)\n\t\t} else {\n\t\t\tthrow new Error('No implementation for ' + this.constructor.name)\n\t\t}\n\t}\n}\n","import { JavaMap } from 'javasetmap.ts'\n\nimport { Matrix } from './Matrix'\nimport {\n\taddOwnProperties, arrayFromFunction, assert, assertf, assertInst, assertNumbers, assertVectors, callsce, DEG, eq, eq0, int,\n\traddd, solveCubicReal2,\n} from './NLA'\nimport { Transformable } from './Transformable'\nimport { V3 } from './V3'\n\nconst { PI, abs } = Math\n\nexport class M4 extends Matrix {\n\t/**\n\t * A simple (consists of integers), regular, non-orthogonal matrix, useful mainly for testing.\n\t * M4.BAR = M4.FOO.inverse()\n\t */\n\tstatic readonly FOO = new M4(\n\t\t0, 1, 1, 2,\n\t\t0.3, 0.4, 0.8, 13,\n\t\t2.1, 3.4, 5.5, 8.9,\n\t\t0, 0, 0, 1)\n\tstatic readonly BAR = M4.FOO.inversed()\n\tstatic readonly IDENTITY = M4.identity()\n\tstatic readonly YZX = M4.forSys(V3.Y, V3.Z, V3.X)\n\tstatic readonly ZXY = M4.forSys(V3.Z, V3.X, V3.Y)\n\tstatic IDENTITY3 = new M4(\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 0,\n\t)\n\tprivate static readonly temp0 = new M4()\n\tprivate static readonly temp1 = new M4()\n\tprivate static readonly temp2 = new M4()\n\treadonly m: Float64Array\n\n\t/**\n\t * Takes 16 arguments in row-major order, which can be passed individually, as a list, or even as\n\t * four lists, one for each row. If the arguments are omitted then the identity matrix is constructed instead.\n\t */\n\tconstructor(...var_args: (number | number[])[]) {\n\t\tlet m\n\t\tif (0 == arguments.length) {\n\t\t\tm = new Float64Array(16)\n\t\t} else {\n\t\t\tconst flattened = Array.prototype.concat.apply([], arguments)\n\t\t\tassert(flattened.length == 16, 'flattened.length == 16' + flattened.length)\n\t\t\tm = new Float64Array(flattened)\n\t\t}\n\t\tsuper(4, 4, m)\n\t}\n\n\tget X(): V3 {\n\t\treturn this.transformVector(V3.X)\n\t}\n\n\tget Y(): V3 {\n\t\treturn this.transformVector(V3.Y)\n\t}\n\n\tget Z(): V3 {\n\t\treturn this.transformVector(V3.Z)\n\t}\n\n\tget O(): V3 {\n\t\treturn this.getTranslation()\n\t}\n\n\t/**\n\t * Returns the matrix that when multiplied with `matrix` results in the\n\t * identity matrix. You can optionally pass an existing matrix in `result`\n\t * to avoid allocating a new matrix. This implementation is from the Mesa\n\t * OpenGL function `__gluInvertMatrixd()` found in `project.c`.\n\t */\n\tstatic inverse(matrix: M4, result?: M4): M4 {\n\t\tassertInst(M4, matrix)\n\t\t!result || assertInst(M4, result)\n\t\tassert(matrix != result, 'matrix != result')\n\t\tresult = result || new M4()\n\t\tconst m = matrix.m, r = result.m\n\n\t\t// first compute transposed cofactor matrix:\n\t\t// cofactor of an element is the determinant of the 3x3 matrix gained by removing the column and row belonging\n\t\t// to the element\n\t\tr[0] = m[5] * m[10] * m[15] - m[5] * m[14] * m[11] - m[6] * m[9] * m[15] + m[6] * m[13] * m[11] + m[7] * m[9] * m[14] - m[7] * m[13] * m[10]\n\t\tr[1] = -m[1] * m[10] * m[15] + m[1] * m[14] * m[11] + m[2] * m[9] * m[15] - m[2] * m[13] * m[11] - m[3] * m[9] * m[14] + m[3] * m[13] * m[10]\n\t\tr[2] = m[1] * m[6] * m[15] - m[1] * m[14] * m[7] - m[2] * m[5] * m[15] + m[2] * m[13] * m[7] + m[3] * m[5] * m[14] - m[3] * m[13] * m[6]\n\t\tr[3] = -m[1] * m[6] * m[11] + m[1] * m[10] * m[7] + m[2] * m[5] * m[11] - m[2] * m[9] * m[7] - m[3] * m[5] * m[10] + m[3] * m[9] * m[6]\n\n\t\tr[4] = -m[4] * m[10] * m[15] + m[4] * m[14] * m[11] + m[6] * m[8] * m[15] - m[6] * m[12] * m[11] - m[7] * m[8] * m[14] + m[7] * m[12] * m[10]\n\t\tr[5] = m[0] * m[10] * m[15] - m[0] * m[14] * m[11] - m[2] * m[8] * m[15] + m[2] * m[12] * m[11] + m[3] * m[8] * m[14] - m[3] * m[12] * m[10]\n\t\tr[6] = -m[0] * m[6] * m[15] + m[0] * m[14] * m[7] + m[2] * m[4] * m[15] - m[2] * m[12] * m[7] - m[3] * m[4] * m[14] + m[3] * m[12] * m[6]\n\t\tr[7] = m[0] * m[6] * m[11] - m[0] * m[10] * m[7] - m[2] * m[4] * m[11] + m[2] * m[8] * m[7] + m[3] * m[4] * m[10] - m[3] * m[8] * m[6]\n\n\t\tr[8] = m[4] * m[9] * m[15] - m[4] * m[13] * m[11] - m[5] * m[8] * m[15] + m[5] * m[12] * m[11] + m[7] * m[8] * m[13] - m[7] * m[12] * m[9]\n\t\tr[9] = -m[0] * m[9] * m[15] + m[0] * m[13] * m[11] + m[1] * m[8] * m[15] - m[1] * m[12] * m[11] - m[3] * m[8] * m[13] + m[3] * m[12] * m[9]\n\t\tr[10] = m[0] * m[5] * m[15] - m[0] * m[13] * m[7] - m[1] * m[4] * m[15] + m[1] * m[12] * m[7] + m[3] * m[4] * m[13] - m[3] * m[12] * m[5]\n\t\tr[11] = -m[0] * m[5] * m[11] + m[0] * m[9] * m[7] + m[1] * m[4] * m[11] - m[1] * m[8] * m[7] - m[3] * m[4] * m[9] + m[3] * m[8] * m[5]\n\n\t\tr[12] = -m[4] * m[9] * m[14] + m[4] * m[13] * m[10] + m[5] * m[8] * m[14] - m[5] * m[12] * m[10] - m[6] * m[8] * m[13] + m[6] * m[12] * m[9]\n\t\tr[13] = m[0] * m[9] * m[14] - m[0] * m[13] * m[10] - m[1] * m[8] * m[14] + m[1] * m[12] * m[10] + m[2] * m[8] * m[13] - m[2] * m[12] * m[9]\n\t\tr[14] = -m[0] * m[5] * m[14] + m[0] * m[13] * m[6] + m[1] * m[4] * m[14] - m[1] * m[12] * m[6] - m[2] * m[4] * m[13] + m[2] * m[12] * m[5]\n\t\tr[15] = m[0] * m[5] * m[10] - m[0] * m[9] * m[6] - m[1] * m[4] * m[10] + m[1] * m[8] * m[6] + m[2] * m[4] * m[9] - m[2] * m[8] * m[5]\n\n\t\t// calculate determinant using laplace expansion (cf https://en.wikipedia.org/wiki/Laplace_expansion),\n\t\t// as we already have the cofactors. We multiply a column by a row as the cofactor matrix is transposed.\n\t\tconst det = m[0] * r[0] + m[1] * r[4] + m[2] * r[8] + m[3] * r[12]\n\t\t// assert(!isZero(det), 'det may not be zero, i.e. the matrix is not invertible')\n\t\tlet i = 16\n\t\twhile (i--) {\n\t\t\tr[i] /= det\n\t\t}\n\t\treturn result\n\t}\n\n\t/**\n\t * Returns `matrix`, exchanging columns for rows. You can optionally pass an\n\t * existing matrix in `result` to avoid allocating a new matrix.\n\t */\n\tstatic transpose(matrix: M4, result?: M4): M4 {\n\t\tassertInst(M4, matrix)\n\t\t!result || assertInst(M4, result)\n\t\tassert(matrix != result, 'matrix != result')\n\t\tresult = result || new M4()\n\t\tconst m = matrix.m, r = result.m\n\t\tr[0] = m[0]\n\t\tr[1] = m[4]\n\t\tr[2] = m[8]\n\t\tr[3] = m[12]\n\t\tr[4] = m[1]\n\t\tr[5] = m[5]\n\t\tr[6] = m[9]\n\t\tr[7] = m[13]\n\t\tr[8] = m[2]\n\t\tr[9] = m[6]\n\t\tr[10] = m[10]\n\t\tr[11] = m[14]\n\t\tr[12] = m[3]\n\t\tr[13] = m[7]\n\t\tr[14] = m[11]\n\t\tr[15] = m[15]\n\t\treturn result\n\t}\n\n\t/**\n\t * Returns the concatenation of the transforms for `left` and `right`.\n\t */\n\tstatic multiply(left: M4, right: M4, result?: M4): M4 {\n\t\tassertInst(M4, left, right)\n\t\t!result || assertInst(M4, result)\n\t\tassert(left != result, 'left != result')\n\t\tassert(right != result, 'right != result')\n\t\tresult = result || new M4()\n\t\tconst a = left.m, b = right.m, r = result.m\n\n\t\tr[0] = a[0] * b[0] + a[1] * b[4] + (a[2] * b[8] + a[3] * b[12])\n\t\tr[1] = a[0] * b[1] + a[1] * b[5] + (a[2] * b[9] + a[3] * b[13])\n\t\tr[2] = a[0] * b[2] + a[1] * b[6] + (a[2] * b[10] + a[3] * b[14])\n\t\tr[3] = a[0] * b[3] + a[1] * b[7] + (a[2] * b[11] + a[3] * b[15])\n\n\t\tr[4] = a[4] * b[0] + a[5] * b[4] + (a[6] * b[8] + a[7] * b[12])\n\t\tr[5] = a[4] * b[1] + a[5] * b[5] + (a[6] * b[9] + a[7] * b[13])\n\t\tr[6] = a[4] * b[2] + a[5] * b[6] + (a[6] * b[10] + a[7] * b[14])\n\t\tr[7] = a[4] * b[3] + a[5] * b[7] + (a[6] * b[11] + a[7] * b[15])\n\n\t\tr[8] = a[8] * b[0] + a[9] * b[4] + (a[10] * b[8] + a[11] * b[12])\n\t\tr[9] = a[8] * b[1] + a[9] * b[5] + (a[10] * b[9] + a[11] * b[13])\n\t\tr[10] = a[8] * b[2] + a[9] * b[6] + (a[10] * b[10] + a[11] * b[14])\n\t\tr[11] = a[8] * b[3] + a[9] * b[7] + (a[10] * b[11] + a[11] * b[15])\n\n\t\tr[12] = a[12] * b[0] + a[13] * b[4] + (a[14] * b[8] + a[15] * b[12])\n\t\tr[13] = a[12] * b[1] + a[13] * b[5] + (a[14] * b[9] + a[15] * b[13])\n\t\tr[14] = a[12] * b[2] + a[13] * b[6] + (a[14] * b[10] + a[15] * b[14])\n\t\tr[15] = a[12] * b[3] + a[13] * b[7] + (a[14] * b[11] + a[15] * b[15])\n\n\t\treturn result\n\t}\n\n\tstatic copy(src: M4, result: M4 = new M4()) {\n\t\tassertInst(M4, src, result)\n\t\tassert(result != src, 'result != src')\n\t\tconst s = src.m, d = result.m\n\t\tlet i = 16\n\t\twhile (i--) {\n\t\t\td[i] = s[i]\n\t\t}\n\t\treturn result\n\t}\n\n\tstatic forSys(e0: V3, e1: V3, e2: V3 = e0.cross(e1), origin: V3 = V3.O): M4 {\n\t\tassertVectors(e0, e1, e2, origin)\n\n\t\treturn new M4(\n\t\t\te0.x, e1.x, e2.x, origin.x,\n\t\t\te0.y, e1.y, e2.y, origin.y,\n\t\t\te0.z, e1.z, e2.z, origin.z,\n\t\t\t0, 0, 0, 1)\n\t}\n\n\tstatic forRows(n0: V3, n1: V3, n2: V3, n3: V3 = V3.O): M4 {\n\t\tassertVectors(n0, n1, n2, n3)\n\t\treturn new M4(\n\t\t\tn0.x, n0.y, n0.z, 0,\n\t\t\tn1.x, n1.y, n1.z, 0,\n\t\t\tn2.x, n2.y, n2.z, 0,\n\t\t\tn3.x, n3.y, n3.z, 1)\n\t}\n\n\t/**\n\t * Returns an identity matrix. You can optionally pass an existing matrix in `result` to avoid allocating a new\n\t * matrix. This emulates the OpenGL function `glLoadIdentity()`\n\t *\n\t * Unless initializing a matrix to be modified, use M4.IDENTITY\n\t */\n\tstatic identity(result: M4 = new M4()): M4 {\n\t\tassertInst(M4, result)\n\t\tconst m = result.m\n\t\tm[0] = m[5] = m[10] = m[15] = 1\n\t\tm[1] = m[2] = m[3] = m[4] = m[6] = m[7] = m[8] = m[9] = m[11] = m[12] = m[13] = m[14] = 0\n\n\t\treturn result\n\t}\n\n\t/**\n\t * Creates a new M4 initialized by a user defined callback function\n\t *\n\t * @param f signature: (elRow, elCol, elIndex) =>\n\t *     el, where elIndex is the row-major index, i.e. eLindex == elRow * 4 + elCol\n\t * @param result\n\t */\n\tstatic fromFunction4(f: (elRow: number, elCol: number, elIndex: number) => number, result: M4 = new M4()): M4 {\n\t\tassert(typeof f == 'function')\n\t\tassertInst(M4, result)\n\t\tconst m = result.m\n\t\tlet i = 16\n\t\twhile (i--) {\n\t\t\tm[i] = f(Math.floor(i / 4), i % 4, i)\n\t\t}\n\t\treturn result\n\t}\n\n\t/**\n\t ### GL.Matrix.perspective(fov, aspect, near, far[, result])\n\n\t */\n\t/**\n\t * ## hjghfhg jhg hjg jhkg jhg jkh jhg jh gjh {@see V3.O}\n\t * {@see perspectiveRad}\n\t * perspectiveRad\n\t * ```\n\t *  test ```\n\t * @param fovDegrees in degrees\n\t * @param aspect aspect ratio = width/height of viewport\n\t */\n\tstatic perspective(fovDegrees: number, aspect: number,\n\t\tnear: number, far: number,\n\t\tresult: M4 = new M4()): M4 {\n\t\treturn M4.perspectiveRad(fovDegrees * DEG, aspect, near, far, result)\n\t}\n\n\tstatic perspectiveRad(fov: raddd, aspect: number,\n\t\tnear: number, far: number,\n\t\tresult: M4 = new M4()): M4 {\n\t\tassertInst(M4, result)\n\t\tassertNumbers(fov, aspect, near, far)\n\t\tconst y = Math.tan(fov / 2) * near\n\t\tconst x = y * aspect\n\t\treturn M4.frustum(-x, x, -y, y, near, far, result)\n\t}\n\n\t// the OpenGL function `glFrustum()`.\n\tstatic frustum(left: number, right: number, bottom: number, top: number, near: number, far: number, result?: M4): M4 {\n\t\tassertNumbers(left, right, bottom, top, near, far)\n\t\tassert(0 < near, '0 < near')\n\t\tassert(near < far, 'near < far')\n\t\t!result || assertInst(M4, result)\n\t\tresult = result || new M4()\n\t\tconst m = result.m\n\n\t\tm[0] = 2 * near / (right - left)\n\t\tm[1] = 0\n\t\tm[2] = (right + left) / (right - left)\n\t\tm[3] = 0\n\n\t\tm[4] = 0\n\t\tm[5] = 2 * near / (top - bottom)\n\t\tm[6] = (top + bottom) / (top - bottom)\n\t\tm[7] = 0\n\n\t\tm[8] = 0\n\t\tm[9] = 0\n\t\tm[10] = -(far + near) / (far - near)\n\t\tm[11] = -2 * far * near / (far - near)\n\n\t\tm[12] = 0\n\t\tm[13] = 0\n\t\tm[14] = -1\n\t\tm[15] = 0\n\n\t\treturn result\n\t}\n\n\t/**\n\t * Returns a new M4 representing the a projection through/towards a point onto a plane.\n\t */\n\tstatic projectPlanePoint(p: V3, plane: { normal1: V3, w: number }, result: M4 = new M4()): M4 {\n\t\tassertVectors(p, plane.normal1)\n\t\tassertInst(M4, result)\n\t\tconst m = result.m\n\t\tconst n = plane.normal1, w = plane.w\n\t\tconst np = n.dot(p)\n\n\t\tm[0] = p.x * n.x + w - np\n\t\tm[1] = p.x * n.y\n\t\tm[2] = p.x * n.z\n\t\tm[3] = -w * p.x\n\n\t\tm[4] = p.y * n.x\n\t\tm[5] = p.y * n.y + w - np\n\t\tm[6] = p.y * n.z\n\t\tm[7] = -w * p.y\n\n\t\tm[8] = p.z * n.x\n\t\tm[9] = p.z * n.y\n\t\tm[10] = p.z * n.z + w - np\n\t\tm[11] = -w * p.z\n\n\t\tm[12] = n.x\n\t\tm[13] = n.y\n\t\tm[14] = n.z\n\t\tm[15] = -np\n\n\t\treturn result\n\t}\n\n\t/**\n\t * Orthographic/orthogonal projection. Transforms the cuboid with the dimensions X: [left right] Y: [bottom, top]\n\t * Z: [near far] to the cuboid X: [-1 1] Y [-1 1] Z [-1, 1]\n\t */\n\tstatic ortho(left: number, right: number,\n\t\tbottom: number, top: number,\n\t\tnear: number, far: number,\n\t\tresult: M4 = new M4()): M4 {\n\t\tassertNumbers(left, right, bottom, top, near, far)\n\t\tassertInst(M4, result)\n\t\tconst m = result.m\n\n\t\tm[0] = 2 / (right - left)\n\t\tm[1] = 0\n\t\tm[2] = 0\n\t\tm[3] = -(right + left) / (right - left)\n\n\t\tm[4] = 0\n\t\tm[5] = 2 / (top - bottom)\n\t\tm[6] = 0\n\t\tm[7] = -(top + bottom) / (top - bottom)\n\n\t\tm[8] = 0\n\t\tm[9] = 0\n\t\tm[10] = -2 / (far - near)\n\t\tm[11] = -(far + near) / (far - near)\n\n\t\tm[12] = 0\n\t\tm[13] = 0\n\t\tm[14] = 0\n\t\tm[15] = 1\n\n\t\treturn result\n\t}\n\n\t/**\n\t * This emulates the OpenGL function `glScale()`. You can optionally pass an existing matrix in `result` to avoid\n\t * allocating a new matrix.\n\t */\n\tstatic scale(x: number, y: number, z?: number, result?: M4): M4\n\n\tstatic scale(scale: number, result?: M4): M4\n\n\tstatic scale(v: V3, result?: M4): M4\n\n\tstatic scale(...args: any[]): M4 {\n\t\tlet x, y, z, result\n\t\tif (args[0] instanceof V3) {\n\t\t\tassert(args.length <= 2)\n\t\t\t\t; ({ x, y, z } = args[0])\n\t\t\tresult = args[1]\n\t\t} else if ('number' != typeof args[1]) {\n\t\t\tx = y = z = args[0]\n\t\t\tresult = args[1]\n\t\t} else {\n\t\t\tassert(args.length <= 4)\n\t\t\tx = args[0]\n\t\t\ty = args[1]\n\t\t\tz = undefined != args[2] ? args[2] : 1\n\t\t\tresult = args[3]\n\t\t}\n\t\tundefined == result && (result = new M4())\n\t\tassertInst(M4, result)\n\t\tassertNumbers(x, y, z)\n\n\t\tconst m = result.m\n\n\t\tm[0] = x\n\t\tm[1] = 0\n\t\tm[2] = 0\n\t\tm[3] = 0\n\n\t\tm[4] = 0\n\t\tm[5] = y\n\t\tm[6] = 0\n\t\tm[7] = 0\n\n\t\tm[8] = 0\n\t\tm[9] = 0\n\t\tm[10] = z\n\t\tm[11] = 0\n\n\t\tm[12] = 0\n\t\tm[13] = 0\n\t\tm[14] = 0\n\t\tm[15] = 1\n\n\t\treturn result\n\t}\n\n\t/**\n\t * This emulates the OpenGL function `glTranslate()`. You can optionally pass\n\t * an existing matrix in `result` to avoid allocating a new matrix.\n\t */\n\tstatic translate(x: number, y?: number, z?: number, result?: M4): M4\n\n\tstatic translate(v: V3, result?: M4): M4\n\n\tstatic translate(...args: any[]): M4 {\n\t\tlet x, y, z, result\n\t\tif (args[0] instanceof V3) {\n\t\t\tassert(args.length <= 2)\n\t\t\t\t; ({ x, y, z } = args[0])\n\t\t\tresult = args[1]\n\t\t} else {\n\t\t\tassert(args.length <= 4)\n\t\t\tx = args[0]\n\t\t\ty = undefined != args[1] ? args[1] : 0\n\t\t\tz = undefined != args[2] ? args[2] : 0\n\t\t\tresult = args[3]\n\t\t}\n\t\tundefined == result && (result = new M4())\n\t\tassertInst(M4, result)\n\t\tassertNumbers(x, y, z)\n\n\t\tconst m = result.m\n\n\t\tm[0] = 1\n\t\tm[1] = 0\n\t\tm[2] = 0\n\t\tm[3] = x\n\n\t\tm[4] = 0\n\t\tm[5] = 1\n\t\tm[6] = 0\n\t\tm[7] = y\n\n\t\tm[8] = 0\n\t\tm[9] = 0\n\t\tm[10] = 1\n\t\tm[11] = z\n\n\t\tm[12] = 0\n\t\tm[13] = 0\n\t\tm[14] = 0\n\t\tm[15] = 1\n\n\t\treturn result\n\t}\n\n\t/**\n\t * Returns a matrix that rotates by `a` degrees around the vector (x, y, z). You can optionally pass an existing\n\t * matrix in `result` to avoid allocating a new matrix. This emulates the OpenGL function `glRotate()`.\n\t */\n\t//static rotation(radians: raddd, x: number, y: number, z: number, result?: M4): M4\n\tstatic rotate(radians: raddd, v: { x: number, y: number, z: number }, result?: M4): M4 {\n\t\tundefined == result && (result = new M4())\n\t\tassertInst(M4, result)\n\t\tlet { x, y, z } = v\n\t\tassert(!new V3(x, y, z).likeO(), '!V(x, y, z).likeO()')\n\t\tconst m = result.m\n\n\t\tconst d = Math.sqrt(x * x + y * y + z * z)\n\t\tx /= d\n\t\ty /= d\n\t\tz /= d\n\t\tconst cos = Math.cos(radians), sin = Math.sin(radians), t = 1 - cos\n\n\t\tm[0] = x * x * t + cos\n\t\tm[1] = x * y * t - z * sin\n\t\tm[2] = x * z * t + y * sin\n\t\tm[3] = 0\n\n\t\tm[4] = y * x * t + z * sin\n\t\tm[5] = y * y * t + cos\n\t\tm[6] = y * z * t - x * sin\n\t\tm[7] = 0\n\n\t\tm[8] = z * x * t - y * sin\n\t\tm[9] = z * y * t + x * sin\n\t\tm[10] = z * z * t + cos\n\t\tm[11] = 0\n\n\t\tm[12] = 0\n\t\tm[13] = 0\n\t\tm[14] = 0\n\t\tm[15] = 1\n\n\t\treturn result\n\t}\n\n\tstatic readonly NAMEMAP = new JavaMap<M4, string>()\n\t\t.set(M4.IDENTITY3, 'M4.IDENTITY3')\n\t\t.set(M4.FOO, 'M4.FOO')\n\t\t.set(M4.BAR, 'M4.BAR')\n\t\t.set(M4.IDENTITY, 'M4.IDENTITY')\n\t\t.set(M4.ZXY, 'M4.ZXY')\n\t\t.set(M4.YZX, 'M4.YZX')\n\n\t/**\n\t * Returns a matrix that puts the camera at the eye point `ex, ey, ez` looking\n\t * toward the center point `cx, cy, cz` with an up direction of `ux, uy, uz`.\n\t * You can optionally pass an existing matrix in `result` to avoid allocating\n\t * a new matrix. This emulates the OpenGL function `gluLookAt()`.\n\t */\n\tstatic lookAt(eye: V3, focus: V3, up: V3, result?: M4): M4 {\n\t\tassert(3 == arguments.length || 4 == arguments.length, '3 == arguments.length || 4 == arguments.length')\n\t\tassertVectors(eye, focus, up)\n\t\t!result || assertInst(M4, result)\n\n\t\tresult = result || new M4()\n\t\tconst m = result.m\n\n\t\tconst f = eye.minus(focus).unit()\n\t\tconst s = up.cross(f).unit()\n\t\tconst t = f.cross(s).unit()\n\n\t\tm[0] = s.x\n\t\tm[1] = s.y\n\t\tm[2] = s.z\n\t\tm[3] = -s.dot(eye)\n\n\t\tm[4] = t.x\n\t\tm[5] = t.y\n\t\tm[6] = t.z\n\t\tm[7] = -t.dot(eye)\n\n\t\tm[8] = f.x\n\t\tm[9] = f.y\n\t\tm[10] = f.z\n\t\tm[11] = -f.dot(eye)\n\n\t\tm[12] = 0\n\t\tm[13] = 0\n\t\tm[14] = 0\n\t\tm[15] = 1\n\n\t\treturn result\n\t}\n\n\t/**\n\t * Create a rotation matrix for rotating around the X axis\n\t */\n\tstatic rotateX(radians: raddd): M4 {\n\t\tassertNumbers(radians)\n\t\tconst sin = Math.sin(radians), cos = Math.cos(radians)\n\t\tconst els = [\n\t\t\t1, 0, 0, 0, 0, cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1,\n\t\t]\n\t\treturn new M4(els)\n\t}\n\n\t/**\n\t * Create a rotation matrix for rotating around the Y axis\n\t */\n\tstatic rotateY(radians: raddd): M4 {\n\t\tconst sin = Math.sin(radians), cos = Math.cos(radians)\n\t\tconst els = [\n\t\t\tcos, 0, sin, 0, 0, 1, 0, 0, -sin, 0, cos, 0, 0, 0, 0, 1,\n\t\t]\n\t\treturn new M4(els)\n\t}\n\n\t/**\n\t * Create a rotation matrix for rotating around the Z axis\n\t */\n\tstatic rotateZ(radians: raddd): M4 {\n\t\tconst sin = Math.sin(radians), cos = Math.cos(radians)\n\t\tconst els = [\n\t\t\tcos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,\n\t\t]\n\t\treturn new M4(els)\n\t}\n\n\t/**\n\t * New rotation matrix such that result.transformVector(a).isParallelTo(b) through smallest rotation.\n\t * Performs no scaling.\n\t */\n\tstatic rotateAB(a: V3, b: V3, result?: M4): M4 {\n\t\t// see http://inside.mines.edu/fs_home/gmurray/ArbitraryAxisRotation/\n\t\tassertVectors(a, b)\n\t\t!result || assertInst(M4, result)\n\t\tconst rotationAxis = a.cross(b), rotationAxisLength = rotationAxis.length()\n\t\tif (eq0(rotationAxisLength)) {\n\t\t\treturn M4.identity(result)\n\t\t}\n\t\tconst radians = Math.atan2(rotationAxisLength, a.dot(b))\n\t\treturn M4.rotateLine(V3.O, rotationAxis, radians, result)\n\t}\n\n\t/**\n\t * Matrix for rotation about arbitrary line defined by an anchor point and direction.\n\t * rotationAxis does not need to be unit\n\t */\n\tstatic rotateLine(rotationAnchor: V3, rotationAxis: V3, radians: raddd, result?: M4): M4 {\n\t\t// see http://inside.mines.edu/fs_home/gmurray/ArbitraryAxisRotation/\n\t\tassertVectors(rotationAnchor, rotationAxis)\n\t\tassertNumbers(radians)\n\t\t!result || assertInst(M4, result)\n\t\tresult = result || new M4()\n\t\trotationAxis = rotationAxis.unit()\n\n\t\tconst ax = rotationAnchor.x, ay = rotationAnchor.y, az = rotationAnchor.z,\n\t\t\tdx = rotationAxis.x, dy = rotationAxis.y, dz = rotationAxis.z\n\t\tconst m = result.m, cos = Math.cos(radians), sin = Math.sin(radians)\n\n\t\tm[0] = dx * dx + (dy * dy + dz * dz) * cos\n\t\tm[1] = dx * dy * (1 - cos) - dz * sin\n\t\tm[2] = dx * dz * (1 - cos) + dy * sin\n\t\tm[3] = (ax * (dy * dy + dz * dz) - dx * (ay * dy + az * dz)) * (1 - cos) + (ay * dz - az * dy) * sin\n\n\t\tm[4] = dx * dy * (1 - cos) + dz * sin\n\t\tm[5] = dy * dy + (dx * dx + dz * dz) * cos\n\t\tm[6] = dy * dz * (1 - cos) - dx * sin\n\t\tm[7] = (ay * (dx * dx + dz * dz) - dy * (ax * dx + az * dz)) * (1 - cos) + (az * dx - ax * dz) * sin\n\n\t\tm[8] = dx * dz * (1 - cos) - dy * sin\n\t\tm[9] = dy * dz * (1 - cos) + dx * sin\n\t\tm[10] = dz * dz + (dx * dx + dy * dy) * cos\n\t\tm[11] = (az * (dx * dx + dy * dy) - dz * (ax * dx + ay * dy)) * (1 - cos) + (ax * dy - ay * dx) * sin\n\n\t\tm[12] = 0\n\t\tm[13] = 0\n\t\tm[14] = 0\n\t\tm[15] = 1\n\n\t\treturn result\n\t}\n\n\t/**\n\t * Create an affine matrix for mirroring into an arbitrary plane:\n\t */\n\tstatic mirror(plane: { normal1: V3, w: number }, result: M4 = new M4()): M4 {\n\t\tassertVectors(plane.normal1)\n\t\tassertInst(M4, result)\n\t\tconst [nx, ny, nz] = plane.normal1\n\t\tconst w = plane.w\n\t\tconst m = result.m\n\n\t\tm[0] = 1.0 - 2.0 * nx * nx\n\t\tm[1] = -2.0 * ny * nx\n\t\tm[2] = -2.0 * nz * nx\n\t\tm[3] = 2.0 * nx * w\n\n\t\tm[4] = -2.0 * nx * ny\n\t\tm[5] = 1.0 - 2.0 * ny * ny\n\t\tm[6] = -2.0 * nz * ny\n\t\tm[7] = 2.0 * ny * w\n\n\t\tm[8] = -2.0 * nx * nz\n\t\tm[9] = -2.0 * ny * nz\n\t\tm[10] = 1.0 - 2.0 * nz * nz\n\t\tm[11] = 2.0 * nz * w\n\n\t\tm[12] = 0\n\t\tm[13] = 0\n\t\tm[14] = 0\n\t\tm[15] = 1\n\t\treturn result\n\t}\n\n\t/**\n\t *\n\t * @param plane\n\t * @param dir Projection direction. Optional, if not specified plane normal1 will be used.\n\t * @param result {@see M4}\n\t */\n\tstatic project(plane: { normal1: V3, w: number }, dir: V3 = plane.normal1, result: M4 = new M4()): M4 {\n\t\t// TODO: doc\n\t\t/**\n\t\t * plane.normal1 DOT (p + lambda * dir) = w (1)\n\t\t * extract lambda:\n\t\t * plane.normal1 DOT p + lambda * plane.normal1 DOT dir = w\n\t\t * lambda = (w - plane.normal1 DOT p) / plane.normal1 DOT dir\n\t\t * result = p + lambda * dir\n\t\t * result = p + dir * (w - plane.normal1 DOT p) / plane.normal1 DOT dir\n\t\t * result =  w * dir / (plane.normal1 DOT dir) + p - plane.normal1 DOT p * dir / (plane.normal1 DOT dir) *\n\t\t *\n\n\t\t a + d * (w - n . a) / (nd)\n\t\t a + dw - d * na\n\t\t */\n\t\tassertVectors(dir, plane.normal1)\n\t\tassertInst(M4, result)\n\t\tconst w = plane.w\n\t\tconst m = result.m\n\t\tconst nd = plane.normal1.dot(dir)\n\t\tconst { x: nx, y: ny, z: nz } = plane.normal1\n\t\tconst { x: dx, y: dy, z: dz } = dir.div(nd)\n\t\t/*\n\t\t rejectedFrom: return this.minus(b.times(this.dot(b) / b.dot(b)))\n\t\t return M4.forSys(\n\t\t V3.X.rejectedFrom(plane.normal1),\n\t\t V3.Y.rejectedFrom(plane.normal1),\n\t\t V3.Z.rejectedFrom(plane.normal1),\n\t\t plane.anchor,\n\t\t result\n\t\t )\n\t\t */\n\n\t\tm[0] = 1.0 - nx * dx\n\t\tm[1] = -ny * dx\n\t\tm[2] = -nz * dx\n\t\tm[3] = dx * w\n\n\t\tm[4] = -nx * dy\n\t\tm[5] = 1.0 - ny * dy\n\t\tm[6] = -nz * dy\n\t\tm[7] = dy * w\n\n\t\tm[8] = -nx * dz\n\t\tm[9] = -ny * dz\n\t\tm[10] = 1.0 - nz * dz\n\t\tm[11] = dz * w\n\n\t\tm[12] = 0\n\t\tm[13] = 0\n\t\tm[14] = 0\n\t\tm[15] = 1\n\n\t\treturn result\n\t}\n\n\tstatic lineProjection(line: { anchor: V3, dir1: V3 }, result: M4 = new M4()): M4 {\n\t\tassertVectors(line.anchor, line.dir1)\n\t\tassertInst(M4, result)\n\t\tconst ax = line.anchor.x, ay = line.anchor.y, az = line.anchor.z\n\t\tconst dx = line.dir1.x, dy = line.dir1.y, dz = line.dir1.z\n\t\tconst m = result.m\n\n\t\t/*\n\t\t projectedOn: return b.times(this.dot(b) / b.dot(b))\n\t\t */\n\n\t\tm[0] = dx * dx\n\t\tm[1] = dx * dy\n\t\tm[2] = dx * dz\n\t\tm[3] = ax\n\n\t\tm[4] = dy * dx\n\t\tm[5] = dy * dy\n\t\tm[6] = dy * dz\n\t\tm[7] = ay\n\n\t\tm[8] = dz * dx\n\t\tm[9] = dz * dy\n\t\tm[10] = dz * dz\n\t\tm[11] = az\n\n\t\tm[12] = 0\n\t\tm[13] = 0\n\t\tm[14] = 0\n\t\tm[15] = 1\n\t\treturn result\n\t}\n\n\n\t/**\n\t Returns a perspective transform matrix, which makes far away objects appear smaller than nearby objects. The `aspect` argument should be the width divided by the height of your viewport and `fov` is the top-to-bottom angle of the field of view in degrees. You can optionally pass an existing matrix in `result` to avoid allocating a new matrix. This emulates the OpenGL function `gluPerspective()`.\n\t */\n\n\tstatic multiplyMultiple(...m4s: M4[]): M4 {\n\t\tif (0 == m4s.length) return M4.identity()\n\t\tlet temp = M4.identity(), result = m4s[0].copy()\n\t\tfor (let i = 1; i < m4s.length; i++) {\n\t\t\tM4.multiply(result, m4s[i], temp)\n\n\t\t\t{ [temp, result] = [result, temp] }\n\t\t}\n\t\treturn result\n\t}\n\n\tstatic pointInversion(p: V3, result: M4 = new M4()): M4 {\n\t\tassertVectors(p)\n\t\tassertInst(M4, result)\n\t\tconst m = result.m\n\n\t\tm[0] = -1\n\t\tm[1] = 0\n\t\tm[2] = 0\n\t\tm[3] = 2 * p.x\n\n\t\tm[4] = 0\n\t\tm[5] = -1\n\t\tm[6] = 0\n\t\tm[7] = 2 * p.y\n\n\t\tm[8] = 0\n\t\tm[9] = 0\n\t\tm[10] = -1\n\t\tm[11] = 2 * p.z\n\n\t\tm[12] = 0\n\t\tm[13] = 0\n\t\tm[14] = 0\n\t\tm[15] = 1\n\t\treturn result\n\t}\n\n\t// ### GL.Matrix.frustum(left, right, bottom, top, near, far[, result])\n\t//\n\t// Sets up a viewing frustum, which is shaped like a truncated pyramid with the\n\t// camera where the point of the pyramid would be. You can optionally pass an\n\t// existing matrix in `result` to avoid allocating a new matrix. This emulates\n\n\t/**\n\t * Returns a new M4 which is equal to the inverse of this.\n\t */\n\tinversed(): M4 {\n\t\treturn M4.inverse(this)\n\t}\n\n\t/**\n\t * Matrix trace is defined as the sum of the elements of the main diagonal.\n\t */\n\ttrace(): number {\n\t\treturn this.m[0] + this.m[5] + this.m[10] + this.m[15]\n\t}\n\n\tas3x3(): M4 {\n\t\tconst result = M4.copy(this), m = result.m\n\n\t\tm[3] = m[7] = m[11] = m[12] = m[13] = m[14] = 0\n\t\tm[15] = 1\n\t\treturn result\n\t}\n\n\ttransform(m4: M4): this {\n\t\treturn m4.times(this) as this\n\t}\n\n\trealEigenValues3(): number[] {\n\t\tconst m = this.m\n\t\tassert(0 == m[12] && 0 == m[13] && 0 == m[14])\n\t\t// determinant of (this - λI):\n\t\t// | a-λ  b   c  |\n\t\t// |  d  e-λ  f  | = -λ^3 + λ^2 (a+e+i) + λ (-a e-a i+b d+c g-e i+f h) + a(ei - fh) - b(di - fg) + c(dh - eg)\n\t\t// |  g   h  i-λ |\n\n\t\tconst [a, b, c, ,\n\t\t\td, e, f, ,\n\t\t\tg, h, i] = m\n\t\t// det(this - λI) = -λ^3 +λ^2 (a+e+i) + λ (-a e-a i-b d+c g-e i+f h)+ (a e i-a f h-b d i+b f g+c d h-c e g)\n\t\tconst s = -1\n\t\tconst t = a + e + i // equivalent to trace of matrix\n\t\tconst u = -a * e - a * i + b * d + c * g - e * i + f * h // equivalent to 1/2 (trace(this²) - trace²(A))\n\t\tconst w = a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g) // equivalent to matrix determinant\n\n\t\tconsole.log(s, t, u, w)\n\t\treturn solveCubicReal2(s, t, u, w)\n\n\t}\n\n\trealEigenVectors3(): V3[] {\n\t\tconst eigenValues = this.realEigenValues3()\n\t\tconst this3x3 = this.times(M4.IDENTITY3)\n\t\tconsole.log(this.toString())\n\t\tconsole.log(this3x3.toString())\n\t\tlet mats = eigenValues.map(ev => M4.IDENTITY3.scale(-ev).plus(this3x3))\n\t\tconsole.log(mats.map(m => m.determinant3()))\n\t\tconsole.log(mats.map(m => '' + m.toString(v => '' + v)).join('\\n\\n'))\n\t\tconsole.log(mats.map(m => '' + m.gauss().U.toString(v => '' + v)).join('\\n\\n'))\n\t\tconsole.log('mats.map(m=>m.rank())', mats.map(m => m.rank()))\n\t\tif (1 == eigenValues.length) {\n\t\t\tconsole.log(mats[0].toString())\n\t\t\tassertf(() => 0 == mats[0].rank())\n\t\t\t// col vectors\n\t\t\treturn arrayFromFunction(3, col => new V3(this.m[col], this.m[4 + col], this.m[8 + col]))\n\t\t}\n\t\tif (2 == eigenValues.length) {\n\t\t\t// one matrix should have rank 1, the other rank 2\n\t\t\tif (1 == mats[0].rank()) {\n\t\t\t\tmats = [mats[1], mats[0]]\n\t\t\t}\n\t\t\tassertf(() => 2 == mats[0].rank())\n\t\t\tassertf(() => 1 == mats[1].rank())\n\n\t\t\t// mat[0] has rank 2, mat[1] has rank 1\n\t\t\tconst gauss0 = mats[0].gauss().U\n\t\t\tconst eigenVector0 = gauss0.row(0).cross(gauss0.row(1)).V3().unit()\n\n\t\t\tconst planeNormal = mats[1].gauss().U.row(0).V3()\n\t\t\tconst eigenVector1 = planeNormal.getPerpendicular().unit()\n\t\t\tconst eigenVector2 = eigenVector0.cross(eigenVector1).rejectedFrom(planeNormal)\n\n\t\t\treturn [eigenVector0, eigenVector1, eigenVector2]\n\t\t}\n\t\tif (3 == eigenValues.length) {\n\t\t\tmats.forEach((mat, i) => assert(2 == mat.rank(), i + ': ' + mat.rank()))\n\t\t\t// the (A - lambda I) matrices map to a plane. This means, that there is an entire line in R³ which maps to\n\t\t\t// the point V3.O\n\t\t\treturn mats.map(mat => {\n\t\t\t\tconst gauss = mat.gauss().U\n\t\t\t\treturn gauss.row(0).cross(gauss.row(1)).V3().unit()\n\t\t\t})\n\t\t}\n\t\tthrow new Error('there cannot be more than 3 eigen values')\n\t}\n\n\t/**\n\t * U * SIGMA * VSTAR = this\n\t * U and VSTAR are orthogonal matrices\n\t * SIGMA is a diagonal matrix\n\t */\n\tsvd3(): { U: M4, SIGMA: M4, VSTAR: M4 } {\n\t\tfunction matrixForCS(i: int, k: int, c: number, s: number) {\n\t\t\tconst m = M4.identity()\n\t\t\tm.setEl(i, i, c)\n\t\t\tm.setEl(k, k, c)\n\t\t\tm.setEl(i, k, s)\n\t\t\tm.setEl(k, i, -s)\n\t\t\treturn m\n\t\t}\n\n\t\tconst A = this.as3x3()\n\t\tlet S = A.transposed().times(A), V = M4.identity()\n\t\tconsole.log(S.str)\n\t\tfor (let it = 0; it < 16; it++) {\n\t\t\tconsole.log('blahg\\n', V.times(S).times(V.transposed()).str)\n\t\t\tassert(V.times(S).times(V.transposed()).likeM4(A.transposed().times(A)),\n\t\t\t\tV.times(S).times(V.transposed()).str,\n\t\t\t\tA.transposed().times(A).str)\n\t\t\tlet maxOffDiagonal = 0, maxOffDiagonalIndex = 1, j = 10\n\t\t\twhile (j--) {\n\t\t\t\tconst val = Math.abs(S.m[j])\n\t\t\t\tif (j % 4 != Math.floor(j / 4) && val > maxOffDiagonal) {\n\t\t\t\t\tmaxOffDiagonal = val\n\t\t\t\t\tmaxOffDiagonalIndex = j\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst i = Math.floor(maxOffDiagonalIndex / 4), k = maxOffDiagonalIndex % 4\n\t\t\tconst a_ii = S.m[5 * i], a_kk = S.m[5 * k], a_ik = S.m[maxOffDiagonalIndex]\n\t\t\tconst phi = a_ii === a_kk ? PI / 4 : Math.atan(2 * a_ik / (a_ii - a_kk)) / 2\n\t\t\tconsole.log(maxOffDiagonalIndex, i, k, 'phi', phi)\n\t\t\tconst cos = Math.cos(phi), sin = Math.sin(phi)\n\t\t\tconst givensRotation = matrixForCS(i, k, cos, -sin)\n\t\t\tassert(givensRotation.transposed().times(givensRotation).likeIdentity())\n\t\t\tconsole.log(givensRotation.str)\n\t\t\tV = V.times(givensRotation)\n\t\t\tS = M4.multiplyMultiple(givensRotation.transposed(), S, givensRotation)\n\t\t\tconsole.log(S.str)\n\t\t}\n\n\t\tconst sigma = S.map((el, elIndex) => elIndex % 5 == 0 ? Math.sqrt(el) : 0)\n\t\treturn {\n\t\t\tU: M4.multiplyMultiple(A, V, sigma.map((el, elIndex) => elIndex % 5 == 0 ? 1 / el : 0)),\n\t\t\tSIGMA: sigma,\n\t\t\tVSTAR: V.transposed(),\n\t\t}\n\t}\n\n\tmap(fn: (el: number, elIndex: number, array: Float64Array) => number): M4 {\n\t\treturn M4.fromFunction4((x, y, i) => fn(this.m[i], i, this.m))\n\t}\n\n\tlikeM4(m4: M4): boolean {\n\t\tassertInst(M4, m4)\n\t\treturn this.m.every((el, index) => eq(el, m4.m[index]))\n\t}\n\n\t/**\n\t * Returns a new M4 equal to the transpose of this.\n\t */\n\ttransposed(): M4 {\n\t\treturn M4.transpose(this)\n\t}\n\n\t/**\n\t * Returns a new M4 which equal to (this * matrix) (in that order)\n\t */\n\ttimes(matrix: M4): M4 {\n\t\treturn M4.multiply(this, matrix)\n\t}\n\n\t/**\n\t * Transforms the vector as a point with a w coordinate of 1. This means translations will have an effect, for\n\t * example.\n\t */\n\ttransformPoint(v: V3): V3 {\n\t\tassertVectors(v)\n\t\tconst m = this.m\n\t\tconst vx = v.x, vy = v.y, vz = v.z, vw = 1\n\t\tconst x = vx * m[0] + vy * m[1] + vz * m[2] + vw * m[3]\n\t\tconst y = vx * m[4] + vy * m[5] + vz * m[6] + vw * m[7]\n\t\tconst z = vx * m[8] + vy * m[9] + vz * m[10] + vw * m[11]\n\t\tconst w = vx * m[12] + vy * m[13] + vz * m[14] + vw * m[15]\n\t\t// scale such that fourth element becomes 1:\n\t\treturn new V3(x / w, y / w, z / w)\n\t}\n\n\t/**\n\t * Transforms the vector as a vector with a w coordinate of 0. This means translations will have no effect, for\n\t * example. Will throw an exception if the calculated w component != 0. This occurs for example when attempting\n\t * to transform a vector with a perspective matrix.\n\t */\n\ttransformVector(v: V3): V3 {\n\t\tassertVectors(v)\n\t\tconst m = this.m\n\t\tconst w = v.x * m[12] + v.y * m[13] + v.z * m[14]\n\t\tassert(w === 0, () => 'w === 0 needs to be true for this to make sense (w =' + w + this.str)\n\t\treturn new V3(\n\t\t\tm[0] * v.x + m[1] * v.y + m[2] * v.z,\n\t\t\tm[4] * v.x + m[5] * v.y + m[6] * v.z,\n\t\t\tm[8] * v.x + m[9] * v.y + m[10] * v.z)\n\t}\n\n\ttransformedPoints(vs: ReadonlyArray<V3>): V3[] {\n\t\treturn vs.map(v => this.transformPoint(v))\n\t}\n\n\ttransformedVectors(vs: ReadonlyArray<V3>): V3[] {\n\t\treturn vs.map(v => this.transformVector(v))\n\t}\n\n\tnew() {\n\t\treturn new M4() as this\n\t}\n\n\tcopy(): M4 {\n\t\treturn M4.copy(this)\n\t}\n\n\tisRegular(): boolean {\n\t\treturn !eq0(this.determinant())\n\t}\n\n\tisAxisAligned(): boolean {\n\t\tconst m = this.m\n\t\treturn (1 >= +!eq0(m[0]) + +!eq0(m[1]) + +!eq0(m[2]))\n\t\t\t&& (1 >= +!eq0(m[4]) + +!eq0(m[5]) + +!eq0(m[6]))\n\t\t\t&& (1 >= +!eq0(m[8]) + +!eq0(m[9]) + +!eq0(m[10]))\n\t}\n\n\t/**\n\t * A matrix M is orthogonal iff M * M^T = I\n\t * I being the identity matrix.\n\t *\n\t * @returns If this matrix is orthogonal or very close to it. Comparison of the identity matrix and\n\t * this * this^T is done with {@link #likeM4}\n\t */\n\tisOrthogonal(): boolean {\n\t\t// return this.transposed().times(this).likeM4(M4.IDENTITY)\n\t\tM4.transpose(this, M4.temp0)\n\t\tM4.multiply(this, M4.temp0, M4.temp1)\n\t\treturn M4.IDENTITY.likeM4(M4.temp1)\n\t}\n\n\t/**\n\t * A matrix M is symmetric iff M == M^T\n\t * I being the identity matrix.\n\t *\n\t * @returns If this matrix is symmetric or very close to it. Comparison of the identity matrix and\n\t * this * this^T is done with {@link #likeM4}\n\t */\n\tisSymmetric(): boolean {\n\t\tM4.transpose(this, M4.temp0)\n\t\treturn this.likeM4(M4.temp0)\n\t}\n\n\t/**\n\t * A matrix M is normal1 iff M * M^-T == M^T * M TODO: ^-T?\n\t * I being the identity matrix.\n\t *\n\t * @returns If this matrix is symmetric or very close to it. Comparison of the identity matrix and\n\t * this * this^T is done with {@link #likeM4}\n\t */\n\tisNormal(): boolean {\n\t\tM4.transpose(this, M4.temp0) // temp0 = this^-T\n\t\tM4.multiply(this, M4.temp0, M4.temp1) // temp1 = this * this^-T\n\t\tM4.multiply(M4.temp0, this, M4.temp2) // temp2 = this^-T * this\n\t\treturn M4.temp1.likeM4(M4.temp2)\n\t}\n\n\t/**\n\t * Determinant of matrix.\n\t *\n\t * Notes:\n\t *      For matrices A and B\n\t *      det(A * B) = det(A) * det(B)\n\t *      det(A^-1) = 1 / det(A)\n\t */\n\tdeterminant(): number {\n\t\t/*\n\t\t | a b c d |\n\t\t | e f g h |\n\t\t | i j k l |\n\t\t | m n o p |\n\t\t */\n\t\tconst $ = this.m,\n\t\t\ta = $[0], b = $[1], c = $[2], d = $[3],\n\t\t\te = $[4], f = $[5], g = $[6], h = $[7],\n\t\t\ti = $[8], j = $[9], k = $[10], l = $[11],\n\t\t\tm = $[12], n = $[13], o = $[14], p = $[15],\n\t\t\tklop = k * p - l * o, jlnp = j * p - l * n, jkno = j * o - k * n,\n\t\t\tilmp = i * p - l * m, ikmo = i * o - k * m, ijmn = i * n - j * m\n\t\treturn (\n\t\t\ta * (f * klop - g * jlnp + h * jkno)\n\t\t\t- b * (e * klop - g * ilmp + h * ikmo)\n\t\t\t+ c * (e * jlnp - f * ilmp + h * ijmn)\n\t\t\t- d * (e * jkno - f * ikmo + g * ijmn))\n\t}\n\n\tdeterminant3(): number {\n\t\tconst [a, b, c, ,\n\t\t\td, e, f, ,\n\t\t\tg, h, i] = this.m\n\t\tconst det = a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g)\n\t\treturn det\n\t}\n\n\t/**\n\t * determine whether this matrix is a mirroring transformation\n\t */\n\tisMirroring(): boolean {\n\t\t/*\n\t\t var u = V(this.m[0], this.m[4], this.m[8])\n\t\t var v = V(this.m[1], this.m[5], this.m[9])\n\t\t var w = V(this.m[2], this.m[6], this.m[10])\n\n\t\t // for a true orthogonal, non-mirrored base, u.cross(v) == w\n\t\t // If they have an opposite direction then we are mirroring\n\t\t var mirrorvalue = u.cross(v).dot(w)\n\t\t var ismirror = (mirrorvalue < 0)\n\t\t return ismirror\n\t\t */\n\n\t\treturn this.determinant() < 0 // TODO: also valid for 4x4?\n\n\t}\n\n\t/**\n\t * Get the translation part of this matrix, i.e. the result of this.transformPoint(V3.O)\n\t */\n\tgetTranslation(): V3 {\n\t\tconst m = this.m, w = m[15]\n\t\treturn new V3(m[3] / w, m[7] / w, m[11] / w)\n\t}\n\n\t/**\n\t * Returns this matrix scaled so that the determinant is 1.\n\t * det(c * A) = (c ** n) * det(A) for n x n matrices,\n\t * so we need to divide by the 4th root of the determinant\n\t */\n\tnormalized(): M4 {\n\t\tconst detAbs = abs(this.determinant())\n\t\treturn 1 == detAbs ? this : this.divScalar(detAbs ** 0.25)\n\t}\n\n\t/**\n\t * Returns this matrix scaled so that the determinant is 1.\n\t * det(c * A) = (c ** n) * det(A) for n x n matrices,\n\t * so we need to divide by the 4th root of the determinant\n\t */\n\tnormalized2(): M4 {\n\t\tconst div = this.m[15]\n\t\treturn 1 == div ? this : this.divScalar(div ** 0.25)\n\t}\n\n\t/**\n\t * Returns if the matrix has the following form (within NLA_PRECISION):\n\t * a b c 0\n\t * c d e 0\n\t * f g h 0\n\t * 0 0 0 1\n\t */\n\tlike3x3(): boolean {\n\t\tconst m = this.m\n\t\treturn eq(1, m[15])\n\t\t\t&& eq0(m[12]) && eq0(m[13]) && eq0(m[14])\n\t\t\t&& eq0(m[3]) && eq0(m[7]) && eq0(m[11])\n\t}\n\n\tisNoProj(): boolean {\n\t\tconst m = this.m\n\t\treturn 0 == m[12] && 0 == m[13] && 0 == m[14] && 1 == m[15]\n\t}\n\n\tlikeIdentity(): boolean {\n\t\treturn this.m.every((val, i) => (i / 4 | 0) == (i % 4) ? eq(1, val) : eq0(val))\n\t}\n\n\tisIdentity(): boolean {\n\t\treturn this.m.every((val, i) => (i / 4 | 0) == (i % 4) ? 1 == val : 0 == val)\n\t}\n\n\ttoString(f?: (number: number) => string): string {\n\t\tf = f || ((v) => v.toFixed(6).replace(/([0.])(?=0*$)/g, ' ').toString())\n\t\tassert(typeof f(0) == 'string', '' + typeof f(0))\n\t\t// slice this.m to convert it to an Array (from TypeArray)\n\t\tconst rounded = Array.prototype.slice.call(this.m).map(f) as string[]\n\t\tconst colWidths = [0, 1, 2, 3].map((colIndex) => rounded.sliceStep(colIndex, 0, 4).map((x) => x.length).max())\n\t\treturn [0, 1, 2, 3].map(\n\t\t\t(rowIndex) => rounded\n\t\t\t\t.slice(rowIndex * 4, rowIndex * 4 + 4) // select matrix row\n\t\t\t\t.map((x, colIndex) => ' '.repeat(colWidths[colIndex] - x.length) + x) // pad numbers with\n\t\t\t\t// spaces to col width\n\t\t\t\t.join(' '),\n\t\t).join('\\n') // join rows\n\t}\n\n\t/**\n\t * Wether this matrix is a translation matrix, i.e. of the form\n\t * ```\n\t *\t1, 0, 0, x,\n\t *\t0, 1, 0, y,\n\t *\t0, 0, 1, z,\n\t *\t0, 0, 0, 1\n\t * ```\n\t */\n\tisTranslation(): boolean {\n\t\t// 2: any value, otherwise same value\n\t\tconst mask = [\n\t\t\t1, 0, 0, 2,\n\t\t\t0, 1, 0, 2,\n\t\t\t0, 0, 1, 2,\n\t\t\t0, 0, 0, 1]\n\t\treturn mask.every((expected, index) => expected == 2 || expected == this.m[index])\n\t}\n\n\n\t/**\n\t * Wether this matrix is a translation matrix, i.e. of the form\n\t * ```\n\t *\ts, 0, 0, 0,\n\t *\t0, t, 0, 0,\n\t *\t0, 0, v, 0,\n\t *\t0, 0, 0, 1\n\t * ```\n\t */\n\tisScaling(): boolean {\n\t\tconst mask = [\n\t\t\t2, 0, 0, 0,\n\t\t\t0, 2, 0, 0,\n\t\t\t0, 0, 2, 0,\n\t\t\t0, 0, 0, 1]\n\t\treturn mask.every((expected, index) => expected == 2 || expected == this.m[index])\n\t}\n\n\tisZRotation(): boolean {\n\t\tconst mask = [\n\t\t\t2, 2, 0, 0,\n\t\t\t2, 2, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1]\n\t\treturn mask.every((expected, index) => expected == 2 || expected == this.m[index]) &&\n\t\t\teq(1, this.m[0] ** 2 + this.m[1] ** 2) &&\n\t\t\tthis.m[0] == this.m[5] &&\n\t\t\tthis.m[1] == -this.m[4]\n\t}\n\n\ttoSource(): string {\n\t\tif (this.isIdentity()) {\n\t\t\treturn 'M4.IDENTITY'\n\t\t} else if (this.isTranslation()) {\n\t\t\treturn callsce('M4.translate', this.O)\n\t\t} else if (this.isScaling()) {\n\t\t\treturn callsce('M4.scale', this.m[0], this.m[5], this.m[10])\n\t\t} else if (this.isNoProj()) {\n\t\t\treturn !this.O.equals(V3.O)\n\t\t\t\t? callsce('M4.forSys', this.X, this.Y, this.Z, this.O)\n\t\t\t\t: callsce('M4.forSys', this.X, this.Y, this.Z)\n\t\t}\n\t\tthrow new Error()\n\t}\n\n\txyAreaFactor(): number {\n\t\treturn this.transformVector(V3.X).cross(this.transformVector(V3.Y)).length()\n\t}\n}\n\nM4.prototype.height = 4\nM4.prototype.width = 4\n\nexport interface M4 extends Transformable { }\naddOwnProperties(M4.prototype, Transformable.prototype, 'constructor')\n","declare global {\n\tinterface Object {\n\t\ttoSource(): string\n\t}\n}\nconst KEYWORD_REGEXP = new RegExp\n\t('^(' +\n\t'abstract|boolean|break|byte|case|catch|char|class|const|continue|debugger|' +\n\t'default|delete|do|double|else|enum|export|extends|false|final|finally|' +\n\t'float|for|function|goto|if|implements|import|in|instanceof|int|interface|' +\n\t'long|native|new|null|package|private|protected|public|return|short|static|' +\n\t'super|switch|synchronized|this|throw|throws|transient|true|try|typeof|' +\n\t'undefined|var|void|volatile|while|with' +\n\t')$')\nfunction stringIsLegalKey(key: string) {\n\treturn /^[a-z_$][0-9a-z_$]*$/gi.test(key) && !KEYWORD_REGEXP.test(key)\n}\n\nconst seen: {}[] = []\nexport function toSource(o: {}, indent = 0) {\n\tif (undefined === o) return 'undefined'\n\tif (null === o) return 'null'\n\treturn o.toSource()\n\n}\nfunction addToSourceMethodToPrototype<T>(clazz: new (...args: {}[]) => T, method: (this: T) => string) {\n\tif (!clazz.prototype.toSource) {\n\t\tObject.defineProperty(clazz.prototype, 'toSource', { value: method, writable: true, configurable: true, enumerable: false })\n\t}\n}\n\naddToSourceMethodToPrototype(Boolean, Boolean.prototype.toString)\naddToSourceMethodToPrototype(Function, Function.prototype.toString)\naddToSourceMethodToPrototype(Number, Number.prototype.toString)\naddToSourceMethodToPrototype(RegExp, RegExp.prototype.toString)\naddToSourceMethodToPrototype(Date, function () {\n\treturn 'new Date(' + this.getTime() + ')'\n})\naddToSourceMethodToPrototype(String, function () {\n\treturn JSON.stringify(this)\n})\naddToSourceMethodToPrototype(Array, function () {\n\tif (seen.includes(this)) {\n\t\treturn 'CIRCULAR_REFERENCE'\n\t}\n\tseen.push(this)\n\tlet result = '['\n\tfor (let i = 0; i < this.length; i++) {\n\t\tresult += '\\n\\t' + toSource(this[i]).replace(/\\r\\n|\\n|\\r/g, '$&\\t')\n\t\tif (i !== this.length - 1) {\n\t\t\tresult += ','\n\t\t}\n\t}\n\tresult += (0 === this.length) ? ']' : '\\n]'\n\tseen.pop()\n\treturn result\n})\naddToSourceMethodToPrototype(Object, function () {\n\tif (seen.includes(this)) {\n\t\treturn 'CIRCULAR_REFERENCE'\n\t}\n\tseen.push(this)\n\tlet result = '{'\n\tconst keys = Object.keys(this).sort()\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst k = keys[i]\n\t\tresult += '\\n\\t' + (stringIsLegalKey(k) ? k : JSON.stringify(k)) + ': ' + toSource((this as any)[k]).replace(/\\r\\n|\\n|\\r/g, '$&\\t')\n\t\tif (i !== keys.length - 1) {\n\t\t\tresult += ','\n\t\t}\n\t}\n\tresult += (0 === keys.length) ? '}' : '\\n}'\n\tseen.pop()\n\treturn result\n})\n","import { M4 } from './M4'\nimport { assert, assertInst, assertNumbers, assertVectors, callsce, clamp, lt } from './NLA'\nimport { Transformable } from './Transformable'\nimport { V3 } from './V3'\n\nexport class AABB extends Transformable {\n\tconstructor(public min: V3 = V3.INF,\n\t\t\t\tpublic max: V3 = V3.INF.negated()) {\n\t\tsuper()\n\t\tassertVectors(min, max)\n\t}\n\n\tstatic forXYZ(x: number, y: number, z: number): AABB {\n\t\treturn new AABB(V3.O, new V3(x, y, z))\n\t}\n\n\tstatic forAABBs(aabbs: Iterable<AABB>): AABB {\n\t\tconst result = new AABB()\n\t\tfor (const aabb of aabbs) {\n\t\t\tresult.addAABB(aabb)\n\t\t}\n\t\treturn result\n\t}\n\n\taddPoint(p: V3): this {\n\t\tassertVectors(p)\n\t\tthis.min = this.min.min(p)\n\t\tthis.max = this.max.max(p)\n\t\treturn this\n\t}\n\n\taddPoints(ps: V3[]): this {\n\t\tps.forEach(p => this.addPoint(p))\n\t\treturn this\n\t}\n\n\taddAABB(aabb: AABB): this {\n\t\tassertInst(AABB, aabb)\n\t\tthis.addPoint(aabb.min)\n\t\tthis.addPoint(aabb.max)\n\t\treturn this\n\t}\n\n\t/**\n\t * Returns the largest AABB contained in this which doesn't overlap with aabb\n\t * @param aabb\n\t */\n\twithoutAABB(aabb: AABB): AABB {\n\t\tassertInst(AABB, aabb)\n\t\tlet min, max\n\t\tconst volume = this.volume(), size = this.size()\n\t\tlet remainingVolume = -Infinity\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tconst dim = ['x', 'y', 'z'][i] as 'x' | 'y' | 'z'\n\t\t\tconst cond = aabb.min[dim] - this.min[dim] > this.max[dim] - aabb.max[dim]\n\t\t\tconst dimMin = cond ? this.min[dim] : Math.max(this.min[dim], aabb.max[dim])\n\t\t\tconst dimMax = !cond ? this.max[dim] : Math.min(this.max[dim], aabb.min[dim])\n\t\t\tconst newRemainingVolume = (dimMax - dimMin) * volume / size[dim]\n\t\t\tif (newRemainingVolume > remainingVolume) {\n\t\t\t\tremainingVolume = newRemainingVolume\n\t\t\t\tmin = this.min.withElement(dim, dimMin)\n\t\t\t\tmax = this.max.withElement(dim, dimMax)\n\t\t\t}\n\t\t}\n\t\treturn new AABB(min, max)\n\t}\n\n\tgetIntersectionAABB(aabb: AABB): AABB {\n\t\tassertInst(AABB, aabb)\n\t\treturn new AABB(this.min.max(aabb.min), this.max.min(aabb.max))\n\t}\n\n\ttouchesAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x > aabb.max.x || this.max.x < aabb.min.x\n\t\t\t|| this.min.y > aabb.max.y || this.max.y < aabb.min.y\n\t\t\t|| this.min.z > aabb.max.z || this.max.z < aabb.min.z)\n\t}\n\n\tfuzzyTouchesAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tlt(aabb.max.x, this.min.x) || lt(this.max.x, aabb.min.x)\n\t\t\t|| lt(aabb.max.y, this.min.y) || lt(this.max.y, aabb.min.y)\n\t\t\t|| lt(aabb.max.z, this.min.z) || lt(this.max.z, aabb.min.z))\n\t}\n\n\tintersectsAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x >= aabb.max.x || this.max.x <= aabb.min.x\n\t\t\t|| this.min.y >= aabb.max.y || this.max.y <= aabb.min.y\n\t\t\t|| this.min.z >= aabb.max.z || this.max.z <= aabb.min.z)\n\t}\n\n\tintersectsAABB2d(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x >= aabb.max.x || this.max.x <= aabb.min.x\n\t\t\t|| this.min.y >= aabb.max.y || this.max.y <= aabb.min.y)\n\t}\n\n\tcontainsPoint(p: V3): boolean {\n\t\tassertVectors(p)\n\t\treturn this.min.x <= p.x && this.min.y <= p.y && this.min.z <= p.z\n\t\t\t&& this.max.x >= p.x && this.max.y >= p.y && this.max.z >= p.z\n\t}\n\n\tcontainsSphere(center: V3, radius: number) {\n\t\tassertVectors(center)\n\t\tassertNumbers(radius)\n\t\treturn this.distanceToPoint(center) > radius\n\t}\n\n\tintersectsSphere(center: V3, radius: number) {\n\t\tassertVectors(center)\n\t\tassertNumbers(radius)\n\t\treturn this.distanceToPoint(center) <= radius\n\t}\n\n\tdistanceToPoint(p: V3) {\n\t\tassertVectors(p)\n\t\tconst x = p.x, y = p.y, z = p.z\n\t\tconst min = this.min, max = this.max\n\t\tif (this.containsPoint(p)) {\n\t\t\treturn Math.max(\n\t\t\t\tmin.x - x, x - max.x,\n\t\t\t\tmin.y - y, y - max.y,\n\t\t\t\tmin.z - z, z - max.z)\n\t\t}\n\t\treturn p.distanceTo(new V3(\n\t\t\tclamp(x, min.x, max.x),\n\t\t\tclamp(y, min.y, max.y),\n\t\t\tclamp(z, min.z, max.z)))\n\t}\n\n\tcontainsAABB(aabb: AABB) {\n\t\tassertInst(AABB, aabb)\n\t\treturn this.containsPoint(aabb.min) && this.containsPoint(aabb.max)\n\t}\n\n\tlikeAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn this.min.like(aabb.min) && this.max.like(aabb.max)\n\t}\n\n\tintersectsLine(line: { anchor: V3, dir1: V3, tMin: number, tMax: number }): boolean {\n\t\tassertVectors(line.anchor, line.dir1)\n\t\tconst dir = line.dir1.map(el => el || Number.MIN_VALUE)\n\t\tconst minTs = (this.min.minus(line.anchor)).divv(dir)\n\t\tconst maxTs = (this.max.minus(line.anchor)).divv(dir)\n\t\tconst tMin = minTs.min(maxTs).maxElement(), tMax = minTs.max(maxTs).minElement()\n\t\treturn tMin <= tMax && !(tMax < line.tMin || line.tMax < tMin)\n\t}\n\n\thasVolume(): boolean {\n\t\treturn this.min.x <= this.max.x && this.min.y <= this.max.y && this.min.z <= this.max.z\n\t}\n\n\tvolume(): number {\n\t\tif (!this.hasVolume()) {\n\t\t\treturn -1\n\t\t}\n\t\tconst v = this.max.minus(this.min)\n\t\treturn v.x * v.y * v.z\n\t}\n\n\tsize(): V3 {\n\t\treturn this.max.minus(this.min)\n\t}\n\n\tgetCenter(): V3 {\n\t\treturn this.min.plus(this.max).div(2)\n\t}\n\n\ttransform(m4: M4): this {\n\t\tassertInst(M4, m4)\n\t\tassert(m4.isAxisAligned())\n\t\tconst aabb = new AABB()\n\t\taabb.addPoint(m4.transformPoint(this.min))\n\t\taabb.addPoint(m4.transformPoint(this.max))\n\t\treturn aabb as this\n\t}\n\n\tofTransformed(m4: M4): AABB {\n\t\tassertInst(M4, m4)\n\t\tconst aabb = new AABB()\n\t\taabb.addPoints(m4.transformedPoints(this.corners()))\n\t\treturn aabb\n\t}\n\n\tcorners(): V3[] {\n\t\tconst min = this.min, max = this.max\n\t\treturn [\n\t\t\tmin,\n\t\t\tnew V3(min.x, min.y, max.z),\n\t\t\tnew V3(min.x, max.y, min.z),\n\t\t\tnew V3(min.x, max.y, max.z),\n\n\t\t\tnew V3(max.x, min.y, min.z),\n\t\t\tnew V3(max.x, min.y, max.z),\n\t\t\tnew V3(max.x, max.y, min.z),\n\t\t\tmax,\n\t\t]\n\t}\n\n\ttoString(): string {\n\t\treturn callsce('new AABB', this.min, this.max)\n\t}\n\n\ttoSource(): string {\n\t\treturn this.toString()\n\t}\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return [].slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.3.5';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    Color.prototype.clone = function() {\n      return chroma(me._rgb);\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n   */\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    return new Color(xyz);\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(!isNaN(xyz[i]) ? 1 : 0);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          xyz[i] += xyz2[i];\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      xyz[i] = xyz[i] / cnt[i];\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex();\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    if (lum === 0) {\n      this._rgb = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      this._rgb = [255, 255, 255, this._rgb[3]];\n    } else {\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      cur_lum = rgb2luminance(this._rgb);\n      this._rgb = (cur_lum > lum ? test(chroma('black'), this) : test(this, chroma('white'))).rgba();\n    }\n    return this;\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val)) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n","import {assert, int, NLA_DEBUG, V3} from 'ts3dutils'\nimport {currentGL, TSGLContext} from './index'\n\nimport GL = WebGLRenderingContextStrict\nconst WGL = WebGLRenderingContext as any as WebGLRenderingContextStrict.Constants\n\nexport class Buffer {\n\tbuffer: WebGLBuffer | undefined\n\tdata: any[]\n\n\t/** Number of elements in buffer. 2 V3s is still 2, not 6. */\n\tcount: int\n\n\t/** Space between elements in buffer. 3 for V3s. */\n\tspacing: 1 | 2 | 3 | 4\n\n\thasBeenCompiled: boolean\n\n\tname?: string\n\n\tmaxValue?: number\n\n\t/**\n\t * Provides a simple method of uploading data to a GPU buffer. Example usage:\n\t *\n\t *     const vertices = new Buffer(WGL.ARRAY_BUFFER, Float32Array)\n\t *     vertices.data = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 1, 0]]\n\t *     vertices.compile()\n\t *\n\t *     const indices = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, Uint16Array)\n\t *     indices.data = [[0, 1, 2], [2, 1, 3]]\n\t *     indices.compile()\n\t *\n\t * Specifies the target to which the buffer object is bound.\n\t * The symbolic constant must be GL_ARRAY_BUFFER or GL_ELEMENT_ARRAY_BUFFER.\n\t */\n\tconstructor(readonly target: GL.BufferTarget, readonly type: typeof Float32Array | typeof Uint16Array) {\n\t\tassert(target == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER, 'target == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER')\n\t\tassert(type == Float32Array || type == Uint16Array, 'type == Float32Array || type == Uint16Array')\n\t\tthis.buffer = undefined\n\t\tthis.type = type\n\t\tthis.data = []\n\t\tthis.count = 0\n\t\tthis.spacing = 1\n\t\tthis.hasBeenCompiled = false\n\t}\n\n\t/**\n\t * Upload the contents of `data` to the GPU in preparation for rendering. The data must be a list of lists\n\t * where each inner list has the same length. For example, each element of data for vertex normals would be a\n\t * list of length three. This will remember the data length and element length for later use by shaders.\n\t *\n\t * This could have used `[].concat.apply([], this.data)` to flatten the array but Google\n\t * Chrome has a maximum number of arguments so the concatenations are chunked to avoid that limit.\n\t *\n\t * @param usage Either `WGL.STATIC_DRAW` or `WGL.DYNAMIC_DRAW`. Defaults to `WGL.STATIC_DRAW`\n\t */\n\tcompile(usage: GL.BufferDataUsage = WGL.STATIC_DRAW, gl: TSGLContext = currentGL()): void {\n\t\tassert(WGL.STATIC_DRAW == usage || WGL.DYNAMIC_DRAW == usage, 'WGL.STATIC_DRAW == type || WGL.DYNAMIC_DRAW == type')\n\t\tthis.buffer = this.buffer || gl.createBuffer()!\n\t\tlet buffer: Float32Array | Uint16Array\n\t\tif (this.data.length == 0) {\n\t\t\tconsole.warn('empty buffer ' + this.name)\n\t\t\t//console.trace()\n\t\t}\n\t\tif (this.data.length == 0 || this.data[0] instanceof V3) {\n\t\t\tassert(!(this.data[0] instanceof V3) || this.type == Float32Array)\n\t\t\tV3.pack(this.data, buffer = new this.type(this.data.length * 3) as Float32Array) // asserts that all\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t // elements are V3s\n\t\t\tthis.spacing = 3\n\t\t\tthis.count = this.data.length\n\t\t\tthis.maxValue = 0\n\t\t} else {\n\t\t\t//assert(Array != this.data[0].constructor, this.name + this.data[0])\n\t\t\tif (Array.isArray(this.data[0])) {\n\t\t\t\tconst bufferLength = this.data.length * this.data[0].length\n\t\t\t\tbuffer = new this.type(bufferLength)\n\t\t\t\tlet i = this.data.length, destPtr = bufferLength\n\t\t\t\twhile (i--) {\n\t\t\t\t\tconst subArray = this.data[i]\n\t\t\t\t\tlet j = subArray.length\n\t\t\t\t\twhile (j--) {\n\t\t\t\t\t\tbuffer[--destPtr] = subArray[j]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassert(0 == destPtr)\n\t\t\t} else {\n\t\t\t\tbuffer = new this.type(this.data)\n\t\t\t}\n\n\t\t\tconst spacing = this.data.length ? buffer.length / this.data.length : 0\n\t\t\tassert(spacing % 1 == 0, `buffer ${this.name} elements not of consistent size, average size is ` + spacing)\n\t\t\tif (NLA_DEBUG) {\n\t\t\t\tif (10000 <= buffer.length) {\n\t\t\t\t\tthis.maxValue = 0\n\t\t\t\t} else {\n\t\t\t\t\tthis.maxValue = Math.max.apply(undefined, buffer)\n\t\t\t\t}\n\t\t\t}\n\t\t\tassert([1, 2, 3, 4].includes(spacing))\n\t\t\tthis.spacing = spacing as 1 | 2 | 3 | 4\n\t\t\tthis.count = this.data.length\n\t\t}\n\t\tgl.bindBuffer(this.target, this.buffer)\n\t\tgl.bufferData(this.target, buffer, usage)\n\t\tthis.hasBeenCompiled = true\n\t}\n}","import {\n\tAABB, arrayFromFunction, assert, assertVectors, int, lerp, M4, NLA_PRECISION, raddd, Transformable, Tuple3, V, V3, eq0,\n} from 'ts3dutils'\n\nimport {currentGL, GL_COLOR, pushQuad, TSGLContext, Buffer} from './index'\n\nconst {cos, sin, PI, min, max} = Math\n\nconst WGL = WebGLRenderingContext as any as WebGLRenderingContextStrict.Constants\n\nexport interface MeshData {\n\tnormals: V3[]\n\tcoords: [number, number][]\n\tcolors: GL_COLOR[]\n\tTRIANGLES: int[]\n\tLINES: int[]\n}\nexport type MeshWith<T extends keyof MeshData = never> = Mesh & Pick<MeshData, T>\n\n/**\n * @example new Mesh()\n *        .addIndexBuffer('TRIANGLES')\n *        .addIndexBuffer('LINES')\n *        .addVertexBuffer('normals', 'ts_Normal')\n */\nexport class Mesh extends Transformable {\n\thasBeenCompiled: boolean = false\n\tvertexBuffers: { [name: string]: Buffer } = {}\n\tindexBuffers: { [name: string]: Buffer } = {}\n\n\tvertices: V3[]\n\tnormals?: V3[]\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.addVertexBuffer('vertices', 'ts_Vertex')\n\t}\n\n\t/**\n\t * Calculate area, volume and centroid of the mesh.\n\t *\n\t * The area is the sum of the areas of the triangles.\n\t *\n\t * For closed meshes, the volume is the contained volume. If the volume is inside-out, i.e. the face normals point\n\t * inwards, the returned value is negative. In general, this calculates the sum of the z-direction shadow volumes\n\t * of the triangles. The z-dir shadow volume is the cut-off prism with the triangle projected onto the XY plane as\n\t * the base face and the triangle itself as the top face.\n\t *\n\t * The centroid is the \"mean point of all points inside the volume\". If a uniform density is assumed, this is\n\t * equivalent to the center of gravity. In general, this calculates the weighted average of the centroids of all the\n\t * triangle shadow volumes.\n\t */\n\tcalcVolume(this: Mesh & { TRIANGLES: int[] }): { volume: number, centroid: V3, area: number } {\n\t\tlet totalVolumeX2 = 0, totalCentroidWithZX2 = V3.O, totalAreaX2 = 0\n\t\tconst triangles = this.TRIANGLES\n\t\tconst vertices = this.vertices\n\t\tfor (let i = 0; i < triangles.length; i += 3) {\n\t\t\tconst ai = triangles[i + 0], bi = triangles[i + 1], ci = triangles[i + 2]\n\t\t\tconst a = vertices[ai], b = vertices[bi], c = vertices[ci]\n\t\t\tconst ab = b.minus(a), ac = c.minus(a)\n\t\t\tconst normal = ab.cross(ac)\n\t\t\t//const centroidZ = (v0.z + v1.z + v2.z) / 3\n\t\t\tconst faceCentroid = V3.add(a, b, c).div(3)\n\t\t\t//totalVolume += centroidZ * (area === v01.cross(v02).length() / 2) * v01.cross(v02).unit().z\n\t\t\ttotalVolumeX2 += faceCentroid.z * normal.z\n\t\t\tconst faceAreaX2 = normal.length()\n\t\t\ttotalAreaX2 += faceAreaX2\n\n\t\t\t// NB: the shadow volume centroid does NOT have the same XY coordinates\n\t\t\t// as the face centroid.\n\t\t\t// calculate the weighted centroid of the shadow volume:\n\t\t\t// faceShadowCentroid = INTEGRATE [0; 1] (\n\t\t\t//   INTEGRATE [0; 1 - s] (\n\t\t\t//     normal.z *\n\t\t\t//     ((1 - s - t) a + s b + t c) *\n\t\t\t//     ((1 - s - t) a + s b + t c).z\n\t\t\t//   ) dt\n\t\t\t// ) ds\n\t\t\t// = (a (2 a.z + b.z + c.z) + b (a.z + 2 b.z + c.z) + c (a.z + b.z + 2 c.z)) / 24\n\t\t\tconst faceShadowCentroid = V3.add(\n\t\t\t\ta.times(2 * a.z + b.z + c.z),\n\t\t\t\tb.times(a.z + 2 * b.z + c.z),\n\t\t\t\tc.times(a.z + b.z + 2 * c.z),\n\t\t\t).times(normal.z) // 1/24 factor is done at very end\n\t\t\ttotalCentroidWithZX2 = totalCentroidWithZX2.plus(faceShadowCentroid)\n\t\t}\n\t\t// sumInPlaceTree adds negligible additional accuracy for XY sphere\n\t\tconst volume = totalVolumeX2 / 2\n\t\treturn {\n\t\t\tvolume,\n\t\t\tcentroid: eq0(volume) ? V3.O: totalCentroidWithZX2.div(24*volume).schur(new V3(1, 1, 0.5)),\n\t\t\tarea: totalAreaX2 / 2\n\t\t}\n\t}\n\n\t/**\n\t * Add a new vertex buffer with a list as a property called `name` on this object and map it to\n\t * the attribute called `attribute` in all shaders that draw this mesh.\n\t * @example new Mesh().addVertexBuffer('coords', 'ts_TexCoord')\n\t */\n\taddVertexBuffer<K extends string>(name: K, attribute: string): this & { [k in K]: any[] } {\n\t\tassert(!this.vertexBuffers[attribute], 'Buffer ' + attribute + ' already exists.')\n\t\t//assert(!this[name])\n\t\tthis.hasBeenCompiled = false\n\t\tassert('string' == typeof name)\n\t\tassert('string' == typeof attribute)\n\t\tconst buffer = this.vertexBuffers[attribute] = new Buffer(WGL.ARRAY_BUFFER, Float32Array)\n\t\tbuffer.name = name\n\t\t;(this as any)[name] = []\n\t\treturn this as any\n\t}\n\n\t/**\n\t * Add a new index buffer.\n\t * @example new Mesh().addIndexBuffer('TRIANGLES')\n\t * @example new Mesh().addIndexBuffer('LINES')\n\t */\n\taddIndexBuffer<K extends string>(name: K): this & { [k in K]: int[] } {\n\t\tthis.hasBeenCompiled = false\n\t\tconst buffer = this.indexBuffers[name] = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, Uint16Array)\n\t\tbuffer.name = name\n\t\t;(this as any)[name] = []\n\t\treturn this as any\n\t}\n\n\tconcat<T extends Mesh>(...others: T[]): T {\n\t\tconst mesh = new Mesh() as any\n\t\t;[this as Mesh].concat(others).forEach((oldMesh: any) => {\n\t\t\tconst startIndex = mesh.vertices ? mesh.vertices.length : 0\n\t\t\tObject.getOwnPropertyNames(oldMesh.vertexBuffers).forEach(attribute => {\n\t\t\t\tconst bufferName = this.vertexBuffers[attribute].name!\n\t\t\t\tif (!mesh.vertexBuffers[attribute]) {\n\t\t\t\t\tmesh.addVertexBuffer(bufferName, attribute)\n\t\t\t\t}\n\t\t\t\tmesh[bufferName].push(...oldMesh[bufferName])\n\t\t\t})\n\t\t\tObject.getOwnPropertyNames(oldMesh.indexBuffers).forEach(name => {\n\t\t\t\tif (!mesh.indexBuffers[name]) {\n\t\t\t\t\tmesh.addIndexBuffer(name)\n\t\t\t\t}\n\t\t\t\tmesh[name].push(...(oldMesh[name] as int[]).map(index => index + startIndex))\n\t\t\t})\n\t\t})\n\t\treturn mesh\n\t}\n\n\t/**\n\t * Upload all attached buffers to the GPU in preparation for rendering. This doesn't need to be called every\n\t * frame, only needs to be done when the data changes.\n\t *\n\t * Sets `this.hasBeenCompiled` to true.\n\t */\n\tcompile(gl: TSGLContext = currentGL()) {\n\t\t// figure out shortest vertex buffer to make sure indexBuffers are in bounds\n\t\tlet minVertexBufferLength = Infinity// TODO, _minBufferName\n\t\tObject.getOwnPropertyNames(this.vertexBuffers).forEach(attribute => {\n\t\t\tconst buffer = this.vertexBuffers[attribute]\n\t\t\tbuffer.data = (this as any)[buffer.name!]\n\t\t\tbuffer.compile(undefined, gl)\n\t\t\tif ((this as any)[buffer.name!].length < minVertexBufferLength) {\n\t\t\t\t// _minBufferName = attribute\n\t\t\t\tminVertexBufferLength = (this as any)[buffer.name!].length\n\t\t\t}\n\t\t})\n\n\t\tfor (const name in this.indexBuffers) {\n\t\t\tconst buffer = this.indexBuffers[name]\n\t\t\tbuffer.data = (this as any)[buffer.name!]\n\t\t\tbuffer.compile(undefined, gl)\n\t\t\t// if (NLA_DEBUG && buffer.maxValue >= minVertexBufferLength) {\n\t\t\t// \tthrow new Error(`max index value for buffer ${name}\n\t\t\t// \tis too large ${buffer.maxValue} min Vbuffer size: ${minVertexBufferLength} ${minBufferName}`)\n\t\t\t// }\n\t\t}\n\t\tthis.hasBeenCompiled = true\n\t\treturn this\n\t}\n\n\tstatic async fromBinarySTL(stl: Blob) {\n\t\treturn new Promise<Mesh & { normals: V3[] }>((resolve, reject) => {\n\t\t\tconst mesh = new Mesh()\n\t\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\tconst fileReader = new FileReader()\n\t\t\tfileReader.onerror = reject\n\t\t\tfileReader.onload = function (_progressEvent) {\n\t\t\t\tconst dataView = new DataView(this.result)\n\t\t\t\tconst HEADER_BYTE_SIZE = 80\n\t\t\t\tconst triangleCount = dataView.getUint32(HEADER_BYTE_SIZE, true)\n\t\t\t\tmesh.normals.length = triangleCount * 3\n\t\t\t\tmesh.vertices.length = triangleCount * 3\n\t\t\t\tlet i = triangleCount * 3, bufferPtr = HEADER_BYTE_SIZE + 4\n\n\t\t\t\tfunction readV3() {\n\t\t\t\t\tconst x = dataView.getFloat32(bufferPtr, true)\n\t\t\t\t\tbufferPtr += 4\n\t\t\t\t\tconst y = dataView.getFloat32(bufferPtr, true)\n\t\t\t\t\tbufferPtr += 4\n\t\t\t\t\tconst z = dataView.getFloat32(bufferPtr, true)\n\t\t\t\t\tbufferPtr += 4\n\t\t\t\t\treturn new V3(x, y, z)\n\t\t\t\t}\n\n\t\t\t\twhile (i) {\n\t\t\t\t\ti -= 3\n\t\t\t\t\tconst normal = readV3()\n\t\t\t\t\tmesh.normals[i + 0] = normal\n\t\t\t\t\tmesh.normals[i + 1] = normal\n\t\t\t\t\tmesh.normals[i + 2] = normal\n\t\t\t\t\tmesh.vertices[i + 0] = readV3()\n\t\t\t\t\tmesh.vertices[i + 1] = readV3()\n\t\t\t\t\tmesh.vertices[i + 2] = readV3()\n\n\t\t\t\t\tbufferPtr += 2\n\t\t\t\t}\n\t\t\t\tresolve(mesh)\n\t\t\t}\n\t\t\tfileReader.readAsArrayBuffer(stl)\n\t\t})\n\t}\n\n\ttoBinarySTL(this: Mesh & { TRIANGLES: number[] }): Blob {\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\n\t\tconst HEADER_BYTE_SIZE = 80, FLOAT_BYTE_SIZE = 4\n\t\tconst triangles = this.TRIANGLES\n\t\tconst triangleCount = triangles.length / 3\n\t\tconst buffer = new ArrayBuffer(HEADER_BYTE_SIZE + 4 + triangleCount * (4 * 3 * FLOAT_BYTE_SIZE + 2))\n\t\tconst dataView = new DataView(buffer)\n\t\tdataView.setUint32(HEADER_BYTE_SIZE, triangleCount, true)\n\t\tlet bufferPtr = HEADER_BYTE_SIZE + 4\n\t\tlet i = triangles.length\n\t\twhile (i) {\n\t\t\ti -= 3\n\t\t\tconst a = this.vertices[triangles[i]], b = this.vertices[triangles[i + 1]],\n\t\t\t\tc = this.vertices[triangles[i + 2]]\n\t\t\tconst normal = V3.normalOnPoints(a, b, c)\n\n\t\t\t;[normal, a, b, c].forEach(v => {\n\t\t\t\tdataView.setFloat32(bufferPtr, v.x, true)\n\t\t\t\tbufferPtr += 4\n\t\t\t\tdataView.setFloat32(bufferPtr, v.y, true)\n\t\t\t\tbufferPtr += 4\n\t\t\t\tdataView.setFloat32(bufferPtr, v.z, true)\n\t\t\t\tbufferPtr += 4\n\t\t\t})\n\t\t\t// skip 2 bytes, already initalized to zero\n\t\t\tbufferPtr += 2\n\t\t}\n\t\tassert(bufferPtr == buffer.byteLength, bufferPtr + ' ' + buffer.byteLength)\n\t\treturn new Blob([buffer], {type: 'application/octet-stream'})\n\n\t}\n\n\t/**\n\t * Transform all vertices by `matrix` and all normals by the inverse transpose of `matrix`.\n\t *\n\t * Index buffer data is referenced.\n\t */\n\ttransform(m4: M4): this {\n\t\tconst mesh = new Mesh()\n\t\tmesh.vertices = m4.transformedPoints(this.vertices)\n\t\tif (this.normals) {\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\n\t\t\tconst invTrans = m4.as3x3().inversed().transposed().normalized()\n\t\t\tmesh.normals = this.normals.map(n => invTrans.transformVector(n).unit())\n\t\t\t// mesh.normals.forEach(n => assert(n.hasLength(1)))\n\t\t}\n\t\tfor (const name in this.indexBuffers) {\n\t\t\tmesh.addIndexBuffer(name)\n\t\t\t;(mesh as any)[name] = (this as any)[name]\n\t\t}\n\t\tfor (const attribute in this.vertexBuffers) {\n\t\t\tif ('ts_Vertex' !== attribute && 'ts_Normal' !== attribute) {\n\t\t\t\tconst name = this.vertexBuffers[attribute].name!\n\t\t\t\tmesh.addVertexBuffer(name, attribute)\n\t\t\t\t;(mesh as any)[name] = (this as any)[name]\n\t\t\t}\n\t\t}\n\t\tthis.hasBeenCompiled && mesh.compile()\n\t\treturn mesh as this\n\t}\n\n\t/**\n\t * Computes a new normal for each vertex from the average normal of the neighboring triangles. This means\n\t * adjacent triangles must share vertices for the resulting normals to be smooth.\n\t */\n\tcomputeNormalsFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { normals: V3[] } {\n\t\tif (!this.normals) this.addVertexBuffer('normals', 'ts_Normal')\n\t\t// tslint:disable:no-string-literal\n\t\t//this.vertexBuffers['ts_Normal'].data = arrayFromFunction(this.vertices.length, i => V3.O)\n\n\t\tconst TRIANGLES = this.TRIANGLES, vertices = this.vertices, normals = this.normals!\n\t\tnormals.length = vertices.length\n\t\tfor (let i = 0; i < TRIANGLES.length; i += 3) {\n\t\t\tconst ai = TRIANGLES[i], bi = TRIANGLES[i + 1], ci = TRIANGLES[i + 2]\n\t\t\tconst a = vertices[ai]\n\t\t\tconst b = vertices[bi]\n\t\t\tconst c = vertices[ci]\n\t\t\tconst normal = b.minus(a).cross(c.minus(a)).unit()\n\t\t\tnormals[ai] = normals[ai].plus(normal)\n\t\t\tnormals[bi] = normals[bi].plus(normal)\n\t\t\tnormals[ci] = normals[ci].plus(normal)\n\t\t}\n\t\tfor (let i = 0; i < vertices.length; i++) {\n\t\t\tnormals[i] = normals[i].unit()\n\t\t}\n\t\tthis.hasBeenCompiled = false\n\t\treturn this as any\n\t}\n\n\n\t/**\n\t * Populate the specified index buffer (default 'LINES') from the `triangles` index buffer.\n\t */\n\tcomputeWireframeFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\n\tcomputeWireframeFromFlatTriangles<T extends string>(this: Mesh & { TRIANGLES: int[] },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindexBufferName: T): this & { [k in T]: int[] }\n\tcomputeWireframeFromFlatTriangles(this: any, indexBufferName: string = 'LINES'): this {\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\n\t\tconst canonEdges = new Set()\n\n\t\tfunction canonEdge(i0: int, i1: int) {\n\t\t\tconst iMin = min(i0, i1), iMax = max(i0, i1)\n\t\t\treturn (iMin << 16) | iMax\n\t\t}\n\n\t\t// function uncanonEdge(key) {\n\t\t// \treturn [key >> 16, key & 0xffff]\n\t\t// }\n\t\tconst t = this.TRIANGLES\n\t\tfor (let i = 0; i < t.length; i += 3) {\n\t\t\tcanonEdges.add(canonEdge(t[i + 0], t[i + 1]))\n\t\t\tcanonEdges.add(canonEdge(t[i + 1], t[i + 2]))\n\t\t\tcanonEdges.add(canonEdge(t[i + 2], t[i + 0]))\n\t\t}\n\t\tconst data = indexBufferName\n\t\tif (!this[data]) this.addIndexBuffer(indexBufferName)\n\t\t//this.LINES = new Array(canonEdges.size)\n\t\tcanonEdges.forEach(val => this[data].push(val >> 16, val & 0xffff))\n\t\tthis.hasBeenCompiled = false\n\t\treturn this\n\t}\n\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\n\tcomputeWireframeFromFlatTrianglesClosedMesh<T extends string>(this: Mesh & { TRIANGLES: int[] },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  indexBufferName: T): this & { [k in T]: int[] }\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: any, indexBufferName: string = 'LINES'): this {\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\n\t\tif (!this.LINES) this.addIndexBuffer('LINES')\n\t\tconst tris = this.TRIANGLES\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\n\t\tconst lines = this[indexBufferName]\n\t\tfor (let i = 0; i < tris.length; i += 3) {\n\t\t\tif (tris[i + 0] < tris[i + 1]) lines.push(tris[i + 0], tris[i + 1])\n\t\t\tif (tris[i + 1] < tris[i + 2]) lines.push(tris[i + 1], tris[i + 2])\n\t\t\tif (tris[i + 2] < tris[i + 0]) lines.push(tris[i + 2], tris[i + 0])\n\t\t}\n\t\tthis.hasBeenCompiled = false\n\t\treturn this\n\t}\n\n\tcomputeNormalLines(this: Mesh & { normals: V3[] }, length: number): this & { LINES: int[] }\n\tcomputeNormalLines<T extends string>(this: Mesh & { normals: V3[] },\n\t\t\t\t\t\t\t\t\t\t length: number, indexBufferName: T): this & { [k in T]: int[] }\n\tcomputeNormalLines(this: any, length: number = 1, indexBufferName: string = 'LINES') {\n\t\tif (!this.normals) {\n\t\t\tthrow new Error('normals must be defined.')\n\t\t}\n\t\tconst vs = this.vertices, si = this.vertices.length\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\n\n\t\tfor (let i = 0; i < this.normals.length; i++) {\n\t\t\tvs[si + i] = vs[i].plus(this.normals[i].toLength(length))\n\t\t\tthis[indexBufferName].push(si + i, i)\n\t\t}\n\t\tthis.hasBeenCompiled = false\n\t\treturn this\n\t}\n\n\tgetAABB(): AABB {\n\t\treturn new AABB().addPoints(this.vertices)\n\t}\n\n\tgetBoundingSphere(): { center: V3, radius: number } {\n\t\tconst sphere = {center: this.getAABB().getCenter(), radius: 0}\n\t\tfor (let i = 0; i < this.vertices.length; i++) {\n\t\t\tsphere.radius = Math.max(sphere.radius, this.vertices[i].minus(sphere.center).length())\n\t\t}\n\t\treturn sphere\n\t}\n\n\t/**\n\t * Generates a square mesh in the XY plane.\n\t * Texture coordinates (buffer \"coords\") are set to go from 0 to 1 in either direction.\n\t *\n\t * @param {Object=} options\n\t * @param {number=} options.detail Defaults to 1\n\t * @param {number=} options.detailX Defaults to options.detail. Number of subdivisions in X direction.\n\t * @param {number=} options.detailY Defaults to options.detail. Number of subdivisions in Y direction.j\n\t * @param {number=} options.width defaults to 1\n\t * @param {number=} options.height defaults to 1\n\t * @param {number=} options.startX defaults to 0\n\t * @param {number=} options.startY defaults to 0\n\t */\n\tstatic plane(options: {\n\t\tdetail?: int,\n\t\tdetailX?: int,\n\t\tdetailY?: int,\n\t\twidth?: number,\n\t\theight?: number,\n\t\tstartX?: number,\n\t\tstartY?: number\n\t} = {}) {\n\t\tconst detailX = options.detailX || options.detail || 1\n\t\tconst detailY = options.detailY || options.detail || 1\n\t\tconst startX = options.startX || 0\n\t\tconst startY = options.startY || 0\n\t\tconst width = options.width || 1\n\t\tconst height = options.height || 1\n\t\tconst mesh = new Mesh()\n\t\t\t.addIndexBuffer('LINES')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t.addVertexBuffer('coords', 'ts_TexCoord')\n\n\t\tfor (let j = 0; j <= detailY; j++) {\n\t\t\tconst t = j / detailY\n\t\t\tfor (let i = 0; i <= detailX; i++) {\n\t\t\t\tconst s = i / detailX\n\t\t\t\tmesh.vertices.push(new V3(startX + s * width, startY + t * height, 0))\n\t\t\t\tmesh.coords.push([s, t])\n\t\t\t\tmesh.normals.push(V3.Z)\n\t\t\t\tif (i < detailX && j < detailY) {\n\t\t\t\t\tconst offset = i + j * (detailX + 1)\n\t\t\t\t\tmesh.TRIANGLES.push(\n\t\t\t\t\t\toffset, offset + detailX + 1, offset + 1,\n\t\t\t\t\t\toffset + detailX + 1, offset + detailX + 2, offset + 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < detailX; i++) {\n\t\t\tmesh.LINES.push(i, i + 1)\n\t\t\tmesh.LINES.push((detailX + 1) * detailY + i, (detailX + 1) * detailY + i + 1)\n\t\t}\n\t\tfor (let j = 0; j < detailY; j++) {\n\t\t\tmesh.LINES.push(detailX * j, detailX * (j + 1) + 1)\n\t\t\tmesh.LINES.push(detailX * (j + 1), detailX * (j + 2) + 1)\n\t\t}\n\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\t// unique corners of a unit cube. Used by Mesh.cube to generate a cube mesh.\n\tstatic UNIT_CUBE_CORNERS = [\n\t\tV3.O,\n\t\tnew V3(0, 0, 1),\n\t\tnew V3(0, 1, 0),\n\t\tnew V3(0, 1, 1),\n\n\t\tnew V3(1, 0, 0),\n\t\tnew V3(1, 0, 1),\n\t\tnew V3(1, 1, 0),\n\t\tV3.XYZ,\n\t]\n\n\t/**\n\t * Generates a unit cube (1x1x1) starting at the origin and extending into the (+ + +) octant.\n\t * I.e. box from V3.O to V3(1,1,1)\n\t * Creates line, triangle, vertex and normal1 buffers.\n\t */\n\tstatic cube() {\n\t\tconst mesh = new Mesh()\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addIndexBuffer('LINES')\n\n\t\t// basically indexes for faces of the cube. vertices each need to be added 3 times,\n\t\t// as they have different normals depending on the face being rendered\n\t\tconst VERTEX_CORNERS = [\n\t\t\t0, 1, 2, 3, // X = 0\n\t\t\t4, 5, 6, 7, // X = 1\n\n\t\t\t0, 4, 1, 5, // Y = 0\n\t\t\t2, 6, 3, 7, // Y = 1\n\n\t\t\t2, 6, 0, 4, // Z = 0\n\t\t\t3, 7, 1, 5, // Z = 1\n\t\t]\n\t\tmesh.vertices = VERTEX_CORNERS.map(i => Mesh.UNIT_CUBE_CORNERS[i])\n\t\tmesh.normals = [V3.X.negated(), V3.X, V3.Y.negated(), V3.Y, V3.Z.negated(), V3.Z].flatMap(v => [v, v, v, v])\n\t\tfor (let i = 0; i < 6 * 4; i += 4) {\n\t\t\tpushQuad(mesh.TRIANGLES, 0 != i % 8,\n\t\t\t\tVERTEX_CORNERS[i], VERTEX_CORNERS[i + 1], VERTEX_CORNERS[i + 2], VERTEX_CORNERS[i + 3])\n\t\t}\n\t\t// indexes of LINES relative to UNIT_CUBE_CORNERS. Mapped to VERTEX_CORNERS.indexOf\n\t\t// so they make sense in the context of the mesh\n\t\tmesh.LINES = [\n\t\t\t0, 1,\n\t\t\t0, 2,\n\t\t\t1, 3,\n\t\t\t2, 3,\n\n\t\t\t0, 4,\n\t\t\t1, 5,\n\t\t\t2, 6,\n\t\t\t3, 7,\n\n\t\t\t4, 5,\n\t\t\t4, 6,\n\t\t\t5, 7,\n\t\t\t6, 7,\n\t\t].map(i => VERTEX_CORNERS.indexOf(i))\n\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\tstatic isocahedron() {\n\t\treturn Mesh.sphere(0)\n\t}\n\n\tstatic sphere2(las: int, longs: int) {\n\t\tconst baseVertices = arrayFromFunction(las, i => {\n\t\t\tconst angle = i / (las - 1) * PI - PI / 2\n\t\t\treturn new V3(0, cos(angle), sin(angle))\n\t\t})\n\t\treturn Mesh.rotation(baseVertices, {anchor: V3.O, dir1: V3.Z}, 2 * PI, longs, true, baseVertices)\n\t}\n\n\t/**\n\t * Returns a sphere mesh with radius 1 created by subdividing the faces of a isocahedron (20-sided) recursively\n\t * The sphere is positioned at the origin\n\t * @param subdivisions\n\t *      How many recursive divisions to do. A subdivision divides a triangle into 4,\n\t *      so the total number of triangles is 20 * 4^subdivisions\n\t * @returns\n\t *      Contains vertex and normal1 buffers and index buffers for triangles and LINES\n\t */\n\tstatic sphere(subdivisions: int = 3) {\n\t\tconst golden = (1 + Math.sqrt(5)) / 2, u = new V3(1, golden, 0).unit(), s = u.x, t = u.y\n\t\t// base vertices of isocahedron\n\t\tconst vertices = [\n\t\t\tnew V3(-s, t, 0),\n\t\t\tnew V3(s, t, 0),\n\t\t\tnew V3(-s, -t, 0),\n\t\t\tnew V3(s, -t, 0),\n\n\t\t\tnew V3(0, -s, t),\n\t\t\tnew V3(0, s, t),\n\t\t\tnew V3(0, -s, -t),\n\t\t\tnew V3(0, s, -t),\n\n\t\t\tnew V3(t, 0, -s),\n\t\t\tnew V3(t, 0, s),\n\t\t\tnew V3(-t, 0, -s),\n\t\t\tnew V3(-t, 0, s)]\n\t\t// base triangles of isocahedron\n\t\tconst triangles = [\n\t\t\t// 5 faces around point 0\n\t\t\t0, 11, 5,\n\t\t\t0, 5, 1,\n\t\t\t0, 1, 7,\n\t\t\t0, 7, 10,\n\t\t\t0, 10, 11,\n\n\t\t\t// 5 adjacent faces\n\t\t\t1, 5, 9,\n\t\t\t5, 11, 4,\n\t\t\t11, 10, 2,\n\t\t\t10, 7, 6,\n\t\t\t7, 1, 8,\n\n\t\t\t// 5 faces around point 3\n\t\t\t3, 9, 4,\n\t\t\t3, 4, 2,\n\t\t\t3, 2, 6,\n\t\t\t3, 6, 8,\n\t\t\t3, 8, 9,\n\n\t\t\t// 5 adjacent faces\n\t\t\t4, 9, 5,\n\t\t\t2, 4, 11,\n\t\t\t6, 2, 10,\n\t\t\t8, 6, 7,\n\t\t\t9, 8, 1,\n\t\t]\n\n\t\t/**\n\t\t * Tesselates triangle a b c\n\t\t * a b c must already be in vertices with the indexes ia ib ic\n\t\t * res is the number of subdivisions to do. 0 just results in triangle and line indexes being added to the\n\t\t * respective buffers.\n\t\t */\n\t\tfunction tesselateRecursively(a: V3, b: V3, c: V3, res: int, vertices: V3[], triangles: int[],\n\t\t\t\t\t\t\t\t\t  ia: int, ib: int, ic: int, lines: int[]) {\n\t\t\tif (0 == res) {\n\t\t\t\ttriangles.push(ia, ib, ic)\n\t\t\t\tif (ia < ib) lines.push(ia, ib)\n\t\t\t\tif (ib < ic) lines.push(ib, ic)\n\t\t\t\tif (ic < ia) lines.push(ic, ia)\n\t\t\t} else {\n\t\t\t\t// subdivide the triangle abc into 4 by adding a vertex (with the correct distance from the origin)\n\t\t\t\t// between each segment ab, bc and cd, then calling the function recursively\n\t\t\t\tconst abMid1 = a.plus(b).toLength(1), bcMid1 = b.plus(c).toLength(1), caMid1 = c.plus(a).toLength(1)\n\t\t\t\t// indexes of new vertices:\n\t\t\t\tconst iabm = vertices.length, ibcm = iabm + 1, icam = iabm + 2\n\t\t\t\tvertices.push(abMid1, bcMid1, caMid1)\n\t\t\t\ttesselateRecursively(abMid1, bcMid1, caMid1, res - 1, vertices, triangles, iabm, ibcm, icam, lines)\n\t\t\t\ttesselateRecursively(a, abMid1, caMid1, res - 1, vertices, triangles, ia, iabm, icam, lines)\n\t\t\t\ttesselateRecursively(b, bcMid1, abMid1, res - 1, vertices, triangles, ib, ibcm, iabm, lines)\n\t\t\t\ttesselateRecursively(c, caMid1, bcMid1, res - 1, vertices, triangles, ic, icam, ibcm, lines)\n\t\t\t}\n\t\t}\n\n\t\tconst mesh = new Mesh()\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addIndexBuffer('LINES')\n\t\tmesh.vertices.push(...vertices)\n\t\tsubdivisions = undefined == subdivisions ? 4 : subdivisions\n\t\tfor (let i = 0; i < 20; i++) {\n\t\t\tconst [ia, ic, ib] = triangles.slice(i * 3, i * 3 + 3)\n\t\t\ttesselateRecursively(vertices[ia], vertices[ic], vertices[ib], subdivisions, mesh.vertices, mesh.TRIANGLES, ia, ic, ib, mesh.LINES)\n\t\t}\n\n\t\tmesh.normals = mesh.vertices\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\tstatic aabb(aabb: AABB) {\n\t\tconst matrix = M4.multiplyMultiple(\n\t\t\tM4.translate(aabb.min),\n\t\t\tM4.scale(aabb.size().max(new V3(NLA_PRECISION, NLA_PRECISION, NLA_PRECISION))))\n\t\tconst mesh = Mesh.cube().transform(matrix)\n\t\t// mesh.vertices = aabb.corners()\n\t\tmesh.computeNormalLines(20)\n\t\tmesh.compile()\n\n\t\treturn mesh\n\t}\n\n\n\tstatic offsetVertices(vertices: V3[], offset: V3, close: boolean): Mesh & { TRIANGLES: int[], coords: [number, number][] }\n\tstatic offsetVertices(vertices: V3[], offset: V3, close: boolean, normals: V3[]): Mesh & { TRIANGLES: int[], coords: [number, number][], normals: V3[] }\n\tstatic offsetVertices(vertices: V3[], offset: V3, close: boolean, normals?: V3[]) {\n\t\tassertVectors.apply(undefined, vertices)\n\t\tassertVectors(offset)\n\n\t\tconst mesh = new Mesh()\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addVertexBuffer('coords', 'ts_TexCoord')\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\n\t\tmesh.vertices = vertices.concat(vertices.map(v => v.plus(offset)))\n\t\tconst vl = vertices.length\n\t\tmesh.coords = arrayFromFunction(vl * 2, (i): [number, number] => [(i % vl) / vl, (i / vl) | 0])\n\n\t\tconst triangles = mesh.TRIANGLES\n\t\tfor (let i = 0; i < vertices.length - 1; i++) {\n\t\t\tpushQuad(triangles, false,\n\t\t\t\ti, i + 1,\n\t\t\t\tvertices.length + i, vertices.length + i + 1)\n\t\t}\n\t\tif (close) {\n\t\t\tpushQuad(triangles, false, vertices.length - 1, 0, vertices.length * 2 - 1, vertices.length)\n\t\t}\n\t\tif (normals) {\n\t\t\tmesh.normals = normals.concat(normals)\n\t\t}\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\t// Creates a new $Mesh by rotating $vertices by $totalRads around $lineAxis (according to the right-hand\n\t// rule). $steps is the number of steps to take. $close is whether the vertices of the first and last step\n\t// should be connected by triangles. If $normals is set (pass an array of V3s of the same length as $vertices),\n\t// these will also be rotated and correctly added to the mesh.\n\t// @example const precious = Mesh.rotation([V(10, 0, -2), V(10, 0, 2), V(11, 0, 2), V(11, 0, -2)], , L3.Z, 512)\n\tstatic rotation(vertices: V3[], lineAxis: { anchor: V3, dir1: V3 }, totalRads: raddd, steps: int, close = true, normals?: V3[]) {\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES')\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\n\t\tconst vc = vertices.length, vTotal = vc * steps\n\n\t\tconst rotMat = new M4()\n\t\tconst triangles = mesh.TRIANGLES\n\t\tfor (let i = 0; i < steps; i++) {\n\t\t\t// add triangles\n\t\t\tconst rads = totalRads / steps * i\n\t\t\tM4.rotateLine(lineAxis.anchor, lineAxis.dir1, rads, rotMat)\n\t\t\tmesh.vertices.push(...rotMat.transformedPoints(vertices))\n\n\t\t\tnormals && mesh.normals!.push(...rotMat.transformedVectors(normals))\n\t\t\tif (close || i !== steps - 1) {\n\t\t\t\tfor (let j = 0; j < vc - 1; j++) {\n\t\t\t\t\tpushQuad(triangles, false,\n\t\t\t\t\t\ti * vc + j + 1, i * vc + j,\n\t\t\t\t\t\t((i + 1) * vc + j + 1) % vTotal, ((i + 1) * vc + j) % vTotal)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\tstatic parametric(pF: (d: number, z: number) => V3, pN: undefined,\n\t\tsMin: number, sMax: number, tMin: number, tMax: number, sRes: number, tRes: number): Mesh & { TRIANGLES: int[] }\n\tstatic parametric(pF: (d: number, z: number) => V3, pN: ((d: number, z: number) => V3),\n\t\tsMin: number, sMax: number, tMin: number, tMax: number, sRes: number, tRes: number): Mesh & { normals: V3[], TRIANGLES: int[] }\n\tstatic parametric(pF: (d: number, z: number) => V3, pN: ((d: number, z: number) => V3) | undefined,\n\t\tsMin: number, sMax: number, tMin: number, tMax: number, sRes: number, tRes: number) {\n\t\tconst mesh = new Mesh()\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\tfor (let si = 0; si <= sRes; si++) {\n\t\t\tconst s = lerp(sMin, sMax, si / sRes)\n\t\t\tfor (let ti = 0; ti <= tRes; ti++) {\n\t\t\t\tconst t = lerp(tMin, tMax, ti / tRes)\n\t\t\t\tmesh.vertices.push(pF(s, t))\n\t\t\t\tpN && mesh.normals.push(pN(s, t))\n\t\t\t\tif (ti < tRes && si < sRes) {\n\t\t\t\t\tconst offset = ti + si * (tRes + 1)\n\t\t\t\t\tpushQuad(mesh.TRIANGLES, false,\n\t\t\t\t\t\toffset, offset + tRes + 1, offset + 1, offset + tRes + 2)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mesh\n\t}\n\n\tstatic load(json: { vertices: Tuple3<number>[], triangles?: Tuple3<number>[], normals?: Tuple3<number>[] }) {\n\t\tconst mesh = new Mesh()\n\t\tif (Array.isArray(json.vertices[0])) {\n\t\t\tmesh.vertices = json.vertices.map(x => V(x))\n\t\t} else {\n\t\t\tthrow new Error()\n\t\t}\n\t\tif (json.triangles) {\n\t\t\tmesh.addIndexBuffer('TRIANGLES')\n\t\t\t;(mesh as any).TRIANGLES = json.triangles\n\t\t}\n\t\tif (json.normals) {\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t;(mesh as any).normals = json.normals\n\t\t}\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n}","/* tslint:disable:no-string-literal */\nimport {assert, assertf, assertInst, assertVectors, int, M4, NLA_DEBUG, V3} from 'ts3dutils'\n\nimport {currentGL, GL_COLOR, TSGLContext, Buffer, Mesh} from './index'\n\nimport GL = WebGLRenderingContextStrict\nconst WGL = WebGLRenderingContext as any as WebGLRenderingContextStrict.Constants\n\n/**\n * These are all the draw modes usable in OpenGL ES\n */\nconst DRAW_MODE_NAMES = {\n\t[WGL.POINTS]: 'POINTS',\n\t[WGL.LINES]: 'LINES',\n\t[WGL.LINE_STRIP]: 'LINE_STRIP',\n\t[WGL.LINE_LOOP]: 'LINE_LOOP',\n\t[WGL.TRIANGLES]: 'TRIANGLES',\n\t[WGL.TRIANGLE_STRIP]: 'TRIANGLE_STRIP',\n\t[WGL.TRIANGLE_FAN]: 'TRIANGLE_FAN',\n}\nconst DRAW_MODE_CHECKS: { [type: string]: (x: int) => boolean } = {\n\t[WGL.POINTS]: _ => true,\n\t[WGL.LINES]: x => 0 == x % 2, // divisible by 2\n\t[WGL.LINE_STRIP]: x => x > 2, // need at least 2\n\t[WGL.LINE_LOOP]: x => x > 2, // more like > 3, but oh well\n\t[WGL.TRIANGLES]: x => 0 == x % 3, // divisible by 3\n\t[WGL.TRIANGLE_STRIP]: x => x > 3,\n\t[WGL.TRIANGLE_FAN]: x => x > 3,\n}\n\nexport const SHADER_VAR_TYPES = ['FLOAT', 'FLOAT_MAT2', 'FLOAT_MAT3', 'FLOAT_MAT4', 'FLOAT_VEC2', 'FLOAT_VEC3', 'FLOAT_VEC4', 'INT', 'INT_VEC2', 'INT_VEC3', 'INT_VEC4', 'UNSIGNED_INT']\n\n\nexport function isArray<T>(obj: any): obj is T[] {\n\treturn Array == obj.constructor || Float32Array == obj.constructor || Float64Array == obj.constructor\n}\n\nexport interface UniformTypesMap {\n\tFLOAT_VEC4: GL_COLOR | V3\n\tFLOAT_VEC3: [number, number, number] | V3\n\tFLOAT_VEC2: [number, number] | V3\n\tFLOAT: number\n\tINT: int\n\tFLOAT_MAT4: M4 | number[]\n\tFLOAT_MAT3: M4 | number[]\n\tSAMPLER_2D: int\n\tBOOL: boolean\n}\nexport type UniformTypes = keyof UniformTypesMap\n\nfunction isFloatArray(obj: any): obj is number[] | Float64Array | Float32Array {\n\treturn Float32Array == obj.constructor || Float64Array == obj.constructor ||\n\t\tArray.isArray(obj) && obj.every(x => 'number' == typeof x)\n}\n\nfunction isIntArray(x: any) {\n\tif ([Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array]\n\t\t\t.some(y => x instanceof y)) {\n\t\treturn true\n\t}\n\treturn (x instanceof Float32Array || x instanceof Float64Array || Array.isArray(x)) &&\n\t\t(x as number[]).every(x => Number.isInteger(x))\n}\n\nexport type ShaderType<UniformTypes, AttributeTypes = {}> = string & { T?: UniformTypes, A?: AttributeTypes }\nexport type VarTypeMap = { [name: string]: UniformTypes }\nexport type ShaderSource<U extends VarTypeMap, IN extends VarTypeMap, OUT extends VarTypeMap, kind extends 'vertex' | 'fragment'> = string & { U: U, IN: IN, OUT: OUT, kind: kind }\n\n//const x:UniformTypes = undefined as 'FLOAT_VEC4' | 'FLOAT_VEC3'\nexport class Shader<UniformTypes extends VarTypeMap = any, AttributeTypes extends VarTypeMap = any> {\n\tprogram: WebGLProgram\n\tactiveMatrices: { [matrixName: string ]: boolean }\n\tattributeLocations: { [attributeName: string ]: number }\n\tconstantAttributes: { [attributeName: string ]: boolean }\n\tuniformLocations: { [uniformName: string ]: WebGLUniformLocation }\n\tuniformInfos: { [uniformName: string ]: GL.WebGLActiveInfo<GL.UniformType> }\n\tprojectionMatrixVersion = -1\n\tmodelViewMatrixVersion = -1\n\tgl: TSGLContext\n\n\t/**\n\t * Create shader drom typed vertex and fragment source. Weird generic arguments are because\n\t * the vertex shader is required to have the OUT types the fragment shader needs as IN,\n\t * but not vice-versa.\n\t */\n\tstatic create<\n\tFragSrc extends ShaderSource<{}, {}, {}, 'fragment'>,\n\tVertSrc extends ShaderSource<{}, {}, FragSrc['IN'], 'vertex'>>(\n\t\tvertexSource: VertSrc, fragmentSource: FragSrc, gl?: TSGLContext\n\t): Shader<VertSrc['U'] & FragSrc['U'], VertSrc['IN']>\n\t/**\n\t * Create shader from typed vertex and untyped fragment source. Uniform of the fragment shader\n\t * can optionally be manually specified.\n\t */\n\tstatic create<FU extends VarTypeMap, VertSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(vertexSource: VertSrc, fragmentSource: string & { IN?: undefined }, gl?: TSGLContext): Shader<FU & VertSrc['U'], VertSrc['IN']>\n\t/**\n\t * Create shader from untyped vertex and typed fragment source. Uniform and attribute types of the shader\n\t * can optionally be manually specified.\n\t */\n\tstatic create<VU extends VarTypeMap, VA extends VarTypeMap, FragSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(vertexSource: string & { IN?: undefined }, fragmentSource: FragSrc, gl?: TSGLContext): Shader<VU & FragSrc['U'], VA>\n\t/**\n\t * Create shader from untyped vertex and fragment source. Uniform and attribute types of the shader\n\t * can optionally be manually specified.\n\t */\n\tstatic create<U extends VarTypeMap = {}, A extends VarTypeMap = {}>(vertexSource: string & { IN?: undefined }, fragmentSource: string & { IN?: undefined }, gl?: TSGLContext): Shader<U, A>\n\tstatic create(vertexSource: string, fragmentSource: string, gl?: TSGLContext) {\n\t\treturn new Shader(vertexSource, fragmentSource, gl) as any\n\t}\n\n\t/**\n\t * Provides a convenient wrapper for WebGL shaders. A few uniforms and attributes,\n\t * prefixed with `gl_`, are automatically added to all shader sources to make\n\t * simple shaders easier to write.\n\t * Headers for the following variables are automatically prepended to the passed source. The correct variables\n\t * are also automatically passed to the shader when drawing.\n\t *\n\t * For vertex and fragment shaders:\n\t uniform mat3 ts_NormalMatrix;\n\t uniform mat4 ts_ModelViewMatrix;\n\t uniform mat4 ts_ProjectionMatrix;\n\t uniform mat4 ts_ModelViewProjectionMatrix;\n\t uniform mat4 ts_ModelViewMatrixInverse;\n\t uniform mat4 ts_ProjectionMatrixInverse;\n\t uniform mat4 ts_ModelViewProjectionMatrixInverse;\n\t *\n\t *\n\t * Example usage:\n\t *\n\t *  const shader = new GL.Shader(\n\t *      `void main() { gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex; }`,\n\t *      `uniform vec4 color; void main() { gl_FragColor = color; }`)\n\t *\n\t *  shader.uniforms({ color: [1, 0, 0, 1] }).draw(mesh)\n\t *\n\t * Compiles a shader program using the provided vertex and fragment shaders.\n\t */\n\tprotected constructor(vertexSource: string, fragmentSource: string, gl = currentGL()) {\n\t\t// const versionRegex = /^(?:\\s+|\\/\\/[\\s\\S]*?[\\r\\n]+|\\/\\*[\\s\\S]*?\\*\\/)+(#version\\s+(\\d+)\\s+es)/\n\t\t// Headers are prepended to the sources to provide some automatic functionality.\n\t\tconst header = `\n\t\tuniform mat3 ts_NormalMatrix;\n\t\tuniform mat4 ts_ModelViewMatrix;\n\t\tuniform mat4 ts_ProjectionMatrix;\n\t\tuniform mat4 ts_ModelViewProjectionMatrix;\n\t\tuniform mat4 ts_ModelViewMatrixInverse;\n\t\tuniform mat4 ts_ProjectionMatrixInverse;\n\t\tuniform mat4 ts_ModelViewProjectionMatrixInverse;\n\t`\n\t\tconst matrixNames = header.match(/\\bts_\\w+/g)\n\n\t\t// Compile and link errors are thrown as strings.\n\t\tfunction compileSource(type: GL.ShaderType, source: string) {\n\t\t\tconst shader = gl.createShader(type)!\n\t\t\tgl.shaderSource(shader, source)\n\t\t\tgl.compileShader(shader)\n\t\t\tif (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t\t\t\tthrow new Error('compile error: ' + gl.getShaderInfoLog(shader))\n\t\t\t}\n\t\t\treturn shader\n\t\t}\n\n\n\t\tthis.gl = gl\n\t\tthis.program = gl.createProgram()!\n\t\tgl.attachShader(this.program, compileSource(gl.VERTEX_SHADER, vertexSource))\n\t\tgl.attachShader(this.program, compileSource(gl.FRAGMENT_SHADER, fragmentSource))\n\t\tgl.linkProgram(this.program)\n\t\tif (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n\t\t\tthrow new Error('link error: ' + gl.getProgramInfoLog(this.program))\n\t\t}\n\t\tthis.attributeLocations = {}\n\t\tthis.uniformLocations = {}\n\t\tthis.constantAttributes = {}\n\n\t\t// Check for the use of built-in matrices that require expensive matrix\n\t\t// multiplications to compute, and record these in `activeMatrices`.\n\t\tthis.activeMatrices = {}\n\t\tmatrixNames && matrixNames.forEach(name => {\n\t\t\tif (gl.getUniformLocation(this.program, name)) {\n\t\t\t\tthis.activeMatrices[name] = true\n\t\t\t}\n\t\t})\n\n\t\tthis.uniformInfos = {}\n\t\tfor (let i = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS); i-- > 0;) {\n\t\t\t// see https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glGetActiveUniform.xml\n\t\t\t// this.program has already been checked\n\t\t\t// i is in bounds\n\t\t\tconst info = gl.getActiveUniform(this.program, i)!\n\t\t\tthis.uniformInfos[info.name] = info\n\t\t}\n\t}\n\n\n\t/**\n\t * Set a uniform for each property of `uniforms`. The correct `viewerGL.uniform*()` method is inferred from the\n\t * value types and from the stored uniform sampler flags.\n\t */\n\tuniforms(uniforms: Partial<{ [K in keyof UniformTypes]: UniformTypesMap[UniformTypes[K]] }>): this {\n\t\tconst gl = this.gl\n\t\tgl.useProgram(this.program)\n\n\t\tfor (const name in uniforms) {\n\t\t\tconst location = this.uniformLocations[name] || gl.getUniformLocation(this.program, name)\n\t\t\t// !location && console.warn(name + ' uniform is not used in shader')\n\t\t\tif (!location) continue\n\t\t\tthis.uniformLocations[name] = location\n\t\t\tlet value: any = uniforms[name] as any\n\t\t\tconst info = this.uniformInfos[name]\n\t\t\tif (NLA_DEBUG) {\n\t\t\t\t// TODO: better errors\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\n\t\t\t\t\tif (1 == info.size) {\n\t\t\t\t\t\tassert(Number.isInteger(value))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert(isIntArray(value) && value.length == info.size, 'value must be int array if info.size != 1')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassert(gl.FLOAT != info.type ||\n\t\t\t\t\t(1 == info.size && 'number' === typeof value || isFloatArray(value) && info.size == value.length))\n\t\t\t\tassert(gl.FLOAT_VEC3 != info.type ||\n\t\t\t\t\t(1 == info.size && value instanceof V3 ||\n\t\t\t\t\t\tArray.isArray(value) && info.size == value.length && assertVectors(...value)))\n\t\t\t\tassert(gl.FLOAT_VEC4 != info.type || 1 != info.size || isFloatArray(value) && value.length == 4)\n\t\t\t\tassert(gl.FLOAT_MAT4 != info.type || value instanceof M4, () => value.toSource())\n\t\t\t\tassert(gl.FLOAT_MAT3 != info.type || value.length == 9 || value instanceof M4)\n\t\t\t}\n\t\t\tif (value instanceof V3) {\n\t\t\t\tvalue = value.toArray()\n\t\t\t}\n\t\t\tif (gl.FLOAT_VEC4 == info.type && info.size != 1) {\n\t\t\t\tgl.uniform4fv(location, value.concatenated())\n\t\t\t} else if (gl.FLOAT == info.type && info.size != 1) {\n\t\t\t\tgl.uniform1fv(location, value)\n\t\t\t} else if (gl.FLOAT_VEC3 == info.type && info.size != 1) {\n\t\t\t\tgl.uniform3fv(location, V3.pack(value))\n\t\t\t} else if (value.length) {\n\t\t\t\tswitch (value.length) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tgl.uniform1fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tgl.uniform2fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tgl.uniform3fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tgl.uniform4fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// Matrices are automatically transposed, since WebGL uses column-major\n\t\t\t\t\t// indices instead of row-major indices.\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\tgl.uniformMatrix3fv(location, false, new Float32Array([\n\t\t\t\t\t\t\tvalue[0], value[3], value[6],\n\t\t\t\t\t\t\tvalue[1], value[4], value[7],\n\t\t\t\t\t\t\tvalue[2], value[5], value[8],\n\t\t\t\t\t\t]))\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\tgl.uniformMatrix4fv(location, false, new Float32Array([\n\t\t\t\t\t\t\tvalue[0], value[4], value[8], value[12],\n\t\t\t\t\t\t\tvalue[1], value[5], value[9], value[13],\n\t\t\t\t\t\t\tvalue[2], value[6], value[10], value[14],\n\t\t\t\t\t\t\tvalue[3], value[7], value[11], value[15],\n\t\t\t\t\t\t]))\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('don\\'t know how to load uniform \"' + name + '\" of length ' + value.length)\n\t\t\t\t}\n\t\t\t} else if ('number' == typeof value) {\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\n\t\t\t\t\tgl.uniform1i(location, value)\n\t\t\t\t} else {\n\t\t\t\t\tgl.uniform1f(location, value)\n\t\t\t\t}\n\t\t\t} else if ('boolean' == typeof value) {\n\t\t\t\tgl.uniform1i(location, +value)\n\t\t\t} else if (value instanceof M4) {\n\t\t\t\tconst m = value.m\n\t\t\t\tif (gl.FLOAT_MAT4 == info.type) {\n\t\t\t\t\tgl.uniformMatrix4fv(location, false, [\n\t\t\t\t\t\tm[0], m[4], m[8], m[12],\n\t\t\t\t\t\tm[1], m[5], m[9], m[13],\n\t\t\t\t\t\tm[2], m[6], m[10], m[14],\n\t\t\t\t\t\tm[3], m[7], m[11], m[15]])\n\t\t\t\t} else if (gl.FLOAT_MAT3 == info.type) {\n\t\t\t\t\tgl.uniformMatrix3fv(location, false, [\n\t\t\t\t\t\tm[0], m[4], m[8],\n\t\t\t\t\t\tm[1], m[5], m[9],\n\t\t\t\t\t\tm[2], m[6], m[10]])\n\t\t\t\t} else if (gl.FLOAT_MAT2 == info.type) {\n\t\t\t\t\tgl.uniformMatrix2fv(location, false, new Float32Array([\n\t\t\t\t\t\tm[0], m[4],\n\t\t\t\t\t\tm[1], m[5]]))\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`Can't assign M4 to ${info.type}`)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('attempted to set uniform \"' + name + '\" to invalid value ' + value)\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\tattributes(attributes: Partial<{ [K in keyof AttributeTypes]: UniformTypesMap[AttributeTypes[K]] }>): this {\n\t\tconst gl = this.gl\n\t\tgl.useProgram(this.program)\n\n\t\tfor (const name in attributes) {\n\t\t\tconst location = this.attributeLocations[name] || gl.getAttribLocation(this.program, name)\n\t\t\tif (location == -1) {\n\t\t\t\tif (!name.startsWith('ts_')) {\n\t\t\t\t\tconsole.warn(`Vertex buffer ${name} was not bound because the attribute is not active.`)\n\t\t\t\t}\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tthis.attributeLocations[name] = location\n\t\t\tgl.disableVertexAttribArray(location)\n\t\t\tlet value = attributes[name]\n\t\t\tif (value instanceof V3) {\n\t\t\t\tvalue = value.toArray()\n\t\t\t}\n\t\t\tif ('number' === typeof value) {\n\t\t\t\tgl.vertexAttrib1f(location, value)\n\t\t\t} else {\n\t\t\t\tgl.vertexAttrib4fv(location, value as number[])\n\t\t\t\t// switch ((value as number[]).length) {\n\t\t\t\t// \tcase 1:\n\t\t\t\t// \t\tgl.vertexAttrib1fv(location, value as number[])\n\t\t\t\t// \t\tbreak\n\t\t\t\t// \tcase 2:\n\t\t\t\t// \t\tgl.vertexAttrib2fv(location, value as number[])\n\t\t\t\t// \t\tbreak\n\t\t\t\t// \tcase 3:\n\t\t\t\t// \t\tgl.vertexAttrib3fv(location, value as number[])\n\t\t\t\t// \t\tbreak\n\t\t\t\t// \tcase 4:\n\t\t\t\t// \t\tbreak\n\t\t\t\t// }\n\t\t\t}\n\t\t\tthis.constantAttributes[name] = true\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the mesh geometry as indexed\n\t * triangles or indexed LINES. Set `mode` to `gl.LINES` (and either add indices to `LINES` or call\n\t * `computeWireframe()`) to draw the mesh in wireframe.\n\t *\n\t * @param mesh\n\t * @param mode Defaults to 'TRIANGLES'. Must be passed as string so the correct index buffer can be\n\t *     automatically drawn.\n\t * @param start int\n\t * @param count int\n\t */\n\tdraw(mesh: Mesh, mode: GL.DrawMode = WGL.TRIANGLES, start?: int, count?: int): this {\n\t\tassert(mesh.hasBeenCompiled, 'mesh.hasBeenCompiled')\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\n\t\tconst modeName: string = DRAW_MODE_NAMES[mode]\n\t\t// assert(mesh.indexBuffers[modeStr], `mesh.indexBuffers[${modeStr}] undefined`)\n\t\treturn this.drawBuffers(mesh.vertexBuffers, mesh.indexBuffers[modeName], mode, start, count)\n\t}\n\n\t/**\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the\n\t * indexed mesh geometry. The `vertexBuffers` argument is a map from attribute\n\t * names to `Buffer` objects of type `WGL.ARRAY_BUFFER`, `indexBuffer` is a `Buffer`\n\t * object of type `WGL.ELEMENT_ARRAY_BUFFER`, and `mode` is a WebGL primitive mode\n\t * like `WGL.TRIANGLES` or `WGL.LINES`. This method automatically creates and caches\n\t * vertex attribute pointers for attributes as needed.\n\t */\n\tdrawBuffers(vertexBuffers: { [attributeName: string]: Buffer },\n\t\t\t\tindexBuffer: Buffer | undefined,\n\t\t\t\tmode: GL.DrawMode = WGL.TRIANGLES,\n\t\t\t\tstart: int = 0, count?: int): this {\n\t\tconst gl = this.gl\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\n\t\tassertf(() => 1 <= Object.keys(vertexBuffers).length)\n\t\tObject.keys(vertexBuffers).forEach(key => assertInst(Buffer, vertexBuffers[key]))\n\n\t\t// Only varruct up the built-in matrices that are active in the shader\n\t\tconst on = this.activeMatrices\n\t\tconst modelViewMatrixInverse = (on['ts_ModelViewMatrixInverse'] || on['ts_NormalMatrix'])\n\t\t\t//&& this.modelViewMatrixVersion != gl.modelViewMatrixVersion\n\t\t\t&& gl.modelViewMatrix.inversed()\n\t\tconst projectionMatrixInverse = on['ts_ProjectionMatrixInverse']\n\t\t\t//&& this.projectionMatrixVersion != gl.projectionMatrixVersion\n\t\t\t&& gl.projectionMatrix.inversed()\n\t\tconst modelViewProjectionMatrix = (on['ts_ModelViewProjectionMatrix'] || on['ts_ModelViewProjectionMatrixInverse'])\n\t\t\t//&& (this.projectionMatrixVersion != gl.projectionMatrixVersion || this.modelViewMatrixVersion !=\n\t\t\t// gl.modelViewMatrixVersion)\n\t\t\t&& gl.projectionMatrix.times(gl.modelViewMatrix)\n\n\t\tconst uni: { [matrixName: string ]: M4 } = {} // Uniform Matrices\n\t\ton['ts_ModelViewMatrix']\n\t\t&& this.modelViewMatrixVersion != gl.modelViewMatrixVersion\n\t\t&& (uni['ts_ModelViewMatrix'] = gl.modelViewMatrix)\n\t\ton['ts_ModelViewMatrixInverse'] && (uni['ts_ModelViewMatrixInverse'] = modelViewMatrixInverse as M4)\n\t\ton['ts_ProjectionMatrix']\n\t\t&& this.projectionMatrixVersion != gl.projectionMatrixVersion\n\t\t&& (uni['ts_ProjectionMatrix'] = gl.projectionMatrix)\n\t\tprojectionMatrixInverse && (uni['ts_ProjectionMatrixInverse'] = projectionMatrixInverse)\n\t\tmodelViewProjectionMatrix && (uni['ts_ModelViewProjectionMatrix'] = modelViewProjectionMatrix)\n\t\tmodelViewProjectionMatrix && on['ts_ModelViewProjectionMatrixInverse']\n\t\t&& (uni['ts_ModelViewProjectionMatrixInverse'] = modelViewProjectionMatrix.inversed())\n\t\ton['ts_NormalMatrix']\n\t\t&& this.modelViewMatrixVersion != gl.modelViewMatrixVersion\n\t\t&& (uni['ts_NormalMatrix'] = (modelViewMatrixInverse as M4).transposed())\n\t\tthis.uniforms(uni as any)\n\t\tthis.projectionMatrixVersion = gl.projectionMatrixVersion\n\t\tthis.modelViewMatrixVersion = gl.modelViewMatrixVersion\n\n\t\t// Create and enable attribute pointers as necessary.\n\t\tlet minVertexBufferLength = Infinity\n\t\tfor (const attribute in vertexBuffers) {\n\t\t\tconst buffer = vertexBuffers[attribute]\n\t\t\tassert(buffer.hasBeenCompiled)\n\t\t\tconst location = this.attributeLocations[attribute] || gl.getAttribLocation(this.program, attribute)\n\t\t\tif (location == -1 || !buffer.buffer) {\n\t\t\t\tif (!attribute.startsWith('ts_')) {\n\t\t\t\t\tconsole.warn(`Vertex buffer ${attribute} was not bound because the attribute is not active.`)\n\t\t\t\t}\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tthis.attributeLocations[attribute] = location\n\t\t\tgl.bindBuffer(WGL.ARRAY_BUFFER, buffer.buffer)\n\n\t\t\tgl.enableVertexAttribArray(location)\n\n\t\t\tgl.vertexAttribPointer(location, buffer.spacing, WGL.FLOAT, false, 0, 0)\n\n\t\t\tminVertexBufferLength = Math.min(minVertexBufferLength, buffer.count)\n\t\t}\n\n\t\t// Disable unused attribute pointers.\n\t\tfor (const attribute in this.attributeLocations) {\n\t\t\tif (!(attribute in vertexBuffers)) {\n\t\t\t\tgl.disableVertexAttribArray(this.attributeLocations[attribute])\n\t\t\t}\n\t\t}\n\n\t\tif (NLA_DEBUG) {\n\t\t\tconst numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES)\n\t\t\tfor (let i = 0; i < numAttribs; ++i) {\n\t\t\t\tconst buffer=gl.getVertexAttrib(i, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)\n\t\t\t\tif (!buffer) {\n\t\t\t\t\tconst info = gl.getActiveAttrib(this.program, i)!\n\t\t\t\t\tif (!this.constantAttributes[info.name]) {\n\t\t\t\t\t\tconsole.warn('No buffer is bound to attribute ' + info.name + ' and it was not set with .attributes()')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// console.log('name:', info.name, 'type:', info.type, 'size:', info.size)\n\t\t\t}\n\t\t}\n\n\t\t// Draw the geometry.\n\t\tif (minVertexBufferLength) {\n\t\t\tif (undefined === count) {\n\t\t\t\tcount = (indexBuffer ? indexBuffer.count : minVertexBufferLength)\n\t\t\t}\n\t\t\tassert(DRAW_MODE_CHECKS[mode](count), 'count ' + count + ' doesn\\'t fulfill requirement '\n\t\t\t\t+ DRAW_MODE_CHECKS[mode].toString() + ' for mode ' + DRAW_MODE_NAMES[mode])\n\n\t\t\tif (indexBuffer) {\n\t\t\t\tassert(indexBuffer.hasBeenCompiled)\n\t\t\t\tassert(minVertexBufferLength > indexBuffer.maxValue!)\n\t\t\t\tassert(count % indexBuffer.spacing == 0)\n\t\t\t\tassert(start % indexBuffer.spacing == 0)\n\t\t\t\tif (start + count > indexBuffer.count) {\n\t\t\t\t\tthrow new Error('Buffer not long enough for passed parameters start/length/buffer length' + ' ' + start + ' ' + count + ' ' + indexBuffer.count)\n\t\t\t\t}\n\t\t\t\tgl.bindBuffer(WGL.ELEMENT_ARRAY_BUFFER, indexBuffer.buffer!)\n\t\t\t\t// start parameter has to be multiple of sizeof(WGL.UNSIGNED_SHORT)\n\t\t\t\tgl.drawElements(mode, count, WGL.UNSIGNED_SHORT, 2 * start)\n\t\t\t} else {\n\t\t\t\tif (start + count > minVertexBufferLength) {\n\t\t\t\t\tthrow new Error('invalid')\n\t\t\t\t}\n\t\t\t\tgl.drawArrays(mode, start, count)\n\t\t\t}\n\t\t\tgl.drawCallCount++\n\t\t}\n\n\t\treturn this\n\t}\n}","import {assert, int} from 'ts3dutils'\n\nimport {currentGL, TSGLContext} from './index'\nimport GL = WebGLRenderingContextStrict\nimport GL2 = WebGL2RenderingContext\n\nexport interface TextureOptions {\n\twrap?: GL.TextureWrap // defaults to WGL.CLAMP_TO_EDGE, or set wrapS and wrapT individually.\n\twrapS?: GL.TextureWrap\n\twrapT?: GL.TextureWrap\n\tfilter?: GL.TextureMagFilter // defaults to WGL.LINEAR, or set minFilter and magFilter individually.\n\tminFilter?: GL.TextureMinFilter\n\tmagFilter?: GL.TextureMagFilter\n\tformat?: GL2.TextureFormat // defaults to WGL.RGBA.\n\tinternalFormat?: GL2.TextureInternalFormat\n\ttype?: GL.ReadPixelsType // defaults to WGL.UNSIGNED_BYTE.\n\tdata?: any\n}\n\nexport class Texture {\n\theight: int\n\twidth: int\n\ttexture: WebGLTexture\n\t// e.g. viewerGL.UNSIGNED_BYTE, viewerGL.FLOAT\n\tinternalFormat: GL2.TextureInternalFormat\n\tformat: GL2.TextureFormat\n\t// e.g. viewerGL.RGBA\n\ttype: GL.ReadPixelsType\n\n\t/**\n\t * Provides a simple wrapper around WebGL textures that supports render-to-texture.\n\t *\n\t * The arguments `width` and `height` give the size of the texture in texels.\n\t * WebGL texture dimensions must be powers of two unless `filter` is set to\n\t * either `WGL.NEAREST` or `WGL.LINEAR` and `wrap` is set to `WGL.CLAMP_TO_EDGE`\n\t * (which they are by default).\n\t *\n\t * Texture parameters can be passed in via the `options` argument.\n\t * Example usage:\n\t *\n\t *      let tex = new GL.Texture(256, 256, {\n\t\t *       magFilter: WGL.NEAREST,\n\t\t *       minFilter: WGL.LINEAR,\n\t\t *\n\t\t *       wrapS: WGL.REPEAT,\n\t\t *       wrapT: WGL.REPEAT,\n\t\t *\n\t\t *       format: WGL.RGB, // Defaults to WGL.RGBA\n\t\t *       type: WGL.FLOAT // Defaults to WGL.UNSIGNED_BYTE\n\t\t *     })\n\t *\n\t */\n\tconstructor(width: int, height: int, options: TextureOptions = {}, readonly gl = currentGL()) {\n\t\tthis.width = width\n\t\tthis.height = height\n\t\tthis.format = options.format || gl.RGBA\n\t\tthis.internalFormat = options.internalFormat || gl.RGBA\n\t\tthis.type = options.type || gl.UNSIGNED_BYTE\n\t\tconst magFilter = options.filter || options.magFilter || gl.LINEAR\n\t\tconst minFilter = options.filter || options.minFilter || gl.LINEAR\n\t\tif (this.type === gl.FLOAT) {\n\t\t\tif (gl.version != 2 && !gl.getExtension('OES_texture_float')) {\n\t\t\t\tthrow new Error('OES_texture_float is required but not supported')\n\t\t\t}\n\t\t\tif ((minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) && !gl.getExtension('OES_texture_float_linear')) {\n\t\t\t\tthrow new Error('OES_texture_float_linear is required but not supported')\n\t\t\t}\n\t\t} else if (this.type === gl.HALF_FLOAT_OES) {\n\t\t\tif (!gl.getExtension('OES_texture_half_float')) {\n\t\t\t\tthrow new Error('OES_texture_half_float is required but not supported')\n\t\t\t}\n\t\t\tif ((minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) && !gl.getExtension('OES_texture_half_float_linear')) {\n\t\t\t\tthrow new Error('OES_texture_half_float_linear is required but not supported')\n\t\t\t}\n\t\t}\n\n\t\tthis.texture = gl.createTexture()!\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, options.wrap || options.wrapS || gl.CLAMP_TO_EDGE)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, options.wrap || options.wrapT || gl.CLAMP_TO_EDGE)\n\t\tgl.texImage2D(gl.TEXTURE_2D, 0, this.internalFormat as any, width, height, 0, this.format as any, this.type as any, options.data)\n\t}\n\n\tsetData(data: ArrayBufferView) {\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\n\t\tthis.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.format as any, this.width, this.height, 0, this.format as any, this.type as any, data as any)\n\t}\n\n\tbind(unit: int) {\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\n\t}\n\n\tunbind(unit: int) {\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, null)\n\t}\n\n\tprivate framebuffer: WebGLFramebuffer | undefined\n\tstatic checkerBoardCanvas: HTMLCanvasElement\n\n\tdrawTo(render: (gl: TSGLContext) => void): void {\n\t\tconst gl = this.gl\n\t\tconst prevFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING)\n\t\tif (!this.framebuffer) {\n\t\t\t// create a renderbuffer for the depth component\n\t\t\tconst prevRenderbuffer = gl.getParameter(gl.RENDERBUFFER_BINDING)\n\t\t\tconst depthRenderbuffer = gl.createRenderbuffer()\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderbuffer)\n\t\t\t// DEPTH_COMPONENT16 is the only depth format\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, prevRenderbuffer)\n\n\t\t\t// create a framebuffer to render to\n\t\t\tthis.framebuffer = gl.createFramebuffer()!\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0)\n\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthRenderbuffer)\n\t\t\tif (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\tthrow new Error('Rendering to this texture is not supported (incomplete this.framebuffer)')\n\t\t\t}\n\t\t} else if (prevFramebuffer !== this.framebuffer) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\n\t\t}\n\n\t\tconst prevViewport = gl.getParameter(gl.VIEWPORT)\n\n\t\tgl.viewport(0, 0, this.width, this.height)\n\t\trender(gl)\n\n\t\t// restore previous state\n\t\tprevFramebuffer !== this.framebuffer && gl.bindFramebuffer(gl.FRAMEBUFFER, prevFramebuffer)\n\t\tgl.viewport(prevViewport[0], prevViewport[1], prevViewport[2], prevViewport[3])\n\t}\n\n\tswapWith(other: Texture): void {\n\t\tassert(this.gl == other.gl)\n\t\tlet temp\n\t\ttemp = other.texture\n\t\tother.texture = this.texture\n\t\tthis.texture = temp\n\n\t\ttemp = other.width\n\t\tother.width = this.width\n\t\tthis.width = temp\n\n\t\ttemp = other.height\n\t\tother.height = this.height\n\t\tthis.height = temp\n\t}\n\n\t/**\n\t * Return a new texture created from `imgElement`, an `<img>` tag.\n\t */\n\tstatic fromImage(imgElement: HTMLImageElement | HTMLCanvasElement, options: TextureOptions = {}, gl: TSGLContext = currentGL()): Texture {\n\t\tconst texture = new Texture(imgElement.width, imgElement.height, options, gl)\n\t\ttry {\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, texture.format as any, texture.format as any, texture.type as any, imgElement)\n\t\t} catch (e) {\n\t\t\tif (location.protocol == 'file:') {\n\t\t\t\tthrow new Error('imgElement not loaded for security reasons (serve this page over \"http://\" instead)')\n\t\t\t} else {\n\t\t\t\tthrow new Error('imgElement not loaded for security reasons (imgElement must originate from the same ' +\n\t\t\t\t\t'domain as this page or use Cross-Origin Resource Sharing)')\n\t\t\t}\n\t\t}\n\t\tif (options.minFilter && options.minFilter != gl.NEAREST && options.minFilter != gl.LINEAR) {\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D)\n\t\t}\n\t\treturn texture\n\t}\n\n\t/**\n\t * Returns a checkerboard texture that will switch to the correct texture when it loads.\n\t */\n\tstatic fromURLSwitch(url: string, options?: TextureOptions, gl = currentGL()): Texture {\n\t\tTexture.checkerBoardCanvas = Texture.checkerBoardCanvas || (function () {\n\t\t\tconst c = document.createElement('canvas').getContext('2d')\n\t\t\tif (!c) throw new Error('Could not create 2d canvas.')\n\t\t\tc.canvas.width = c.canvas.height = 128\n\t\t\tfor (let y = 0; y < c.canvas.height; y += 16) {\n\t\t\t\tfor (let x = 0; x < c.canvas.width; x += 16) {\n\t\t\t\t\t//noinspection JSBitwiseOperatorUsage\n\t\t\t\t\tc.fillStyle = (x ^ y) & 16 ? '#FFF' : '#DDD'\n\t\t\t\t\tc.fillRect(x, y, 16, 16)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn c.canvas\n\t\t})()\n\t\tconst texture = Texture.fromImage(Texture.checkerBoardCanvas, options)\n\t\tconst image = new Image()\n\t\timage.onload = () => Texture.fromImage(image, options, gl).swapWith(texture)\n\t\t// error event doesn't return a reason. Most likely a 404.\n\t\timage.onerror = () => { throw new Error('Could not load image ' + image.src + '. 404?') }\n\t\timage.src = url\n\t\treturn texture\n\t}\n\n\tstatic fromURL(url: string, options?: TextureOptions, gl = currentGL()): Promise<Texture> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst image = new Image()\n\t\t\timage.onload = () => resolve(Texture.fromImage(image, options, gl))\n\t\t\timage.onerror = () => reject('Could not load image ' + image.src + '. 404?')\n\t\t\timage.src = url\n\t\t})\n\t}\n}","/*\r\n** Copyright (c) 2012 The Khronos Group Inc.\r\n**\r\n** Permission is hereby granted, free of charge, to any person obtaining a\r\n** copy of this software and/or associated documentation files (the\r\n** 'Materials'), to deal in the Materials without restriction, including\r\n** without limitation the rights to use, copy, modify, merge, publish,\r\n** distribute, sublicense, and/or sell copies of the Materials, and to\r\n** permit persons to whom the Materials are furnished to do so, subject to\r\n** the following conditions:\r\n**\r\n** The above copyright notice and this permission notice shall be included\r\n** in all copies or substantial portions of the Materials.\r\n**\r\n** THE MATERIALS ARE PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\r\n*/\r\n\r\n\r\n// tslint:disable\r\nimport GL = WebGLRenderingContextStrict\r\n\r\n// Various functions for helping debug WebGL apps.\r\n\r\n/**\r\n * Wrapped logging function.\r\n * @param msg Message to log.\r\n */\r\nfunction log(msg: string) {\r\n\tif (window.console && window.console.log) {\r\n\t\twindow.console.log(msg)\r\n\t}\r\n}\r\n\r\n/**\r\n * Wrapped error logging function.\r\n * @param msg Message to log.\r\n */\r\nfunction error(msg: string) {\r\n\tif (window.console && window.console.error) {\r\n\t\twindow.console.error(msg)\r\n\t} else {\r\n\t\tlog(msg)\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * Which arguments are enums based on the number of arguments to the function.\r\n * So\r\n *    'texImage2D': {\r\n *       9: { 0:true, 2:true, 6:true, 7:true },\r\n *       6: { 0:true, 2:true, 3:true, 4:true },\r\n *    },\r\n *\r\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\r\n * arguments 3 and 4 are enums\r\n *\r\n * @type {!Object.<number, !Object.<number, string>}\r\n */\r\nconst glValidEnumContexts: { [funcName: string]: { [argCount: number]: { [argIndex: number]: boolean | { enumBitwiseOr: string[] } } } } = {\r\n\t// Generic setters and getters\r\n\r\n\t'enable': { 1: { 0: true } },\r\n\t'disable': { 1: { 0: true } },\r\n\t'getParameter': { 1: { 0: true } },\r\n\r\n\t// Rendering\r\n\r\n\t'drawArrays': { 3: { 0: true } },\r\n\t'drawElements': { 4: { 0: true, 2: true } },\r\n\r\n\t// Shaders\r\n\r\n\t'createShader': { 1: { 0: true } },\r\n\t'getShaderParameter': { 2: { 1: true } },\r\n\t'getProgramParameter': { 2: { 1: true } },\r\n\t'getShaderPrecisionFormat': { 2: { 0: true, 1: true } },\r\n\r\n\t// Vertex attributes\r\n\r\n\t'getVertexAttrib': { 2: { 1: true } },\r\n\t'vertexAttribPointer': { 6: { 2: true } },\r\n\r\n\t// Textures\r\n\r\n\t'bindTexture': { 2: { 0: true } },\r\n\t'activeTexture': { 1: { 0: true } },\r\n\t'getTexParameter': { 2: { 0: true, 1: true } },\r\n\t'texParameterf': { 3: { 0: true, 1: true } },\r\n\t'texParameteri': { 3: { 0: true, 1: true, 2: true } },\r\n\t// texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\r\n\t'copyTexImage2D': { 8: { 0: true, 2: true } },\r\n\t'copyTexSubImage2D': { 8: { 0: true } },\r\n\t'generateMipmap': { 1: { 0: true } },\r\n\t// compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\r\n\r\n\t// Buffer objects\r\n\r\n\t'bindBuffer': { 2: { 0: true } },\r\n\t// bufferData and bufferSubData are defined below with WebGL 2 entrypoints\r\n\t'getBufferParameter': { 2: { 0: true, 1: true } },\r\n\r\n\t// Renderbuffers and framebuffers\r\n\r\n\t'pixelStorei': { 2: { 0: true, 1: true } },\r\n\t// readPixels is defined below with WebGL 2 entrypoints\r\n\t'bindRenderbuffer': { 2: { 0: true } },\r\n\t'bindFramebuffer': { 2: { 0: true } },\r\n\t'checkFramebufferStatus': { 1: { 0: true } },\r\n\t'framebufferRenderbuffer': { 4: { 0: true, 1: true, 2: true } },\r\n\t'framebufferTexture2D': { 5: { 0: true, 1: true, 2: true } },\r\n\t'getFramebufferAttachmentParameter': { 3: { 0: true, 1: true, 2: true } },\r\n\t'getRenderbufferParameter': { 2: { 0: true, 1: true } },\r\n\t'renderbufferStorage': { 4: { 0: true, 1: true } },\r\n\r\n\t// Frame buffer operations (clear, blend, depth test, stencil)\r\n\r\n\t'clear': { 1: { 0: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] } } },\r\n\t'depthFunc': { 1: { 0: true } },\r\n\t'blendFunc': { 2: { 0: true, 1: true } },\r\n\t'blendFuncSeparate': { 4: { 0: true, 1: true, 2: true, 3: true } },\r\n\t'blendEquation': { 1: { 0: true } },\r\n\t'blendEquationSeparate': { 2: { 0: true, 1: true } },\r\n\t'stencilFunc': { 3: { 0: true } },\r\n\t'stencilFuncSeparate': { 4: { 0: true, 1: true } },\r\n\t'stencilMaskSeparate': { 2: { 0: true } },\r\n\t'stencilOp': { 3: { 0: true, 1: true, 2: true } },\r\n\t'stencilOpSeparate': { 4: { 0: true, 1: true, 2: true, 3: true } },\r\n\r\n\t// Culling\r\n\r\n\t'cullFace': { 1: { 0: true } },\r\n\t'frontFace': { 1: { 0: true } },\r\n\r\n\t// ANGLE_instanced_arrays extension\r\n\r\n\t'drawArraysInstancedANGLE': { 4: { 0: true } },\r\n\t'drawElementsInstancedANGLE': { 5: { 0: true, 2: true } },\r\n\r\n\t// EXT_blend_minmax extension\r\n\r\n\t'blendEquationEXT': { 1: { 0: true } },\r\n\r\n\t// WebGL 2 Buffer objects\r\n\r\n\t'bufferData': {\r\n\t\t3: { 0: true, 2: true }, // WebGL 1\r\n\t\t4: { 0: true, 2: true }, // WebGL 2\r\n\t\t5: { 0: true, 2: true }  // WebGL 2\r\n\t},\r\n\t'bufferSubData': {\r\n\t\t3: { 0: true }, // WebGL 1\r\n\t\t4: { 0: true }, // WebGL 2\r\n\t\t5: { 0: true }  // WebGL 2\r\n\t},\r\n\t'copyBufferSubData': { 5: { 0: true, 1: true } },\r\n\t'getBufferSubData': { 3: { 0: true }, 4: { 0: true }, 5: { 0: true } },\r\n\r\n\t// WebGL 2 Framebuffer objects\r\n\r\n\t'blitFramebuffer': { 10: { 8: { 'enumBitwiseOr': ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9: true } },\r\n\t'framebufferTextureLayer': { 5: { 0: true, 1: true } },\r\n\t'invalidateFramebuffer': { 2: { 0: true } },\r\n\t'invalidateSubFramebuffer': { 6: { 0: true } },\r\n\t'readBuffer': { 1: { 0: true } },\r\n\r\n\t// WebGL 2 Renderbuffer objects\r\n\r\n\t'getInternalformatParameter': { 3: { 0: true, 1: true, 2: true } },\r\n\t'renderbufferStorageMultisample': { 5: { 0: true, 2: true } },\r\n\r\n\t// WebGL 2 Texture objects\r\n\r\n\t'texStorage2D': { 5: { 0: true, 2: true } },\r\n\t'texStorage3D': { 6: { 0: true, 2: true } },\r\n\t'texImage2D': {\r\n\t\t9: { 0: true, 2: true, 6: true, 7: true }, // WebGL 1 & 2\r\n\t\t6: { 0: true, 2: true, 3: true, 4: true }, // WebGL 1\r\n\t\t10: { 0: true, 2: true, 6: true, 7: true } // WebGL 2\r\n\t},\r\n\t'texImage3D': {\r\n\t\t10: { 0: true, 2: true, 7: true, 8: true },\r\n\t\t11: { 0: true, 2: true, 7: true, 8: true }\r\n\t},\r\n\t'texSubImage2D': {\r\n\t\t9: { 0: true, 6: true, 7: true }, // WebGL 1 & 2\r\n\t\t7: { 0: true, 4: true, 5: true }, // WebGL 1\r\n\t\t10: { 0: true, 6: true, 7: true } // WebGL 2\r\n\t},\r\n\t'texSubImage3D': {\r\n\t\t11: { 0: true, 8: true, 9: true },\r\n\t\t12: { 0: true, 8: true, 9: true }\r\n\t},\r\n\t'copyTexSubImage3D': { 9: { 0: true } },\r\n\t'compressedTexImage2D': {\r\n\t\t7: { 0: true, 2: true }, // WebGL 1 & 2\r\n\t\t8: { 0: true, 2: true }, // WebGL 2\r\n\t\t9: { 0: true, 2: true }  // WebGL 2\r\n\t},\r\n\t'compressedTexImage3D': {\r\n\t\t8: { 0: true, 2: true },\r\n\t\t9: { 0: true, 2: true },\r\n\t\t10: { 0: true, 2: true }\r\n\t},\r\n\t'compressedTexSubImage2D': {\r\n\t\t8: { 0: true, 6: true }, // WebGL 1 & 2\r\n\t\t9: { 0: true, 6: true }, // WebGL 2\r\n\t\t10: { 0: true, 6: true } // WebGL 2\r\n\t},\r\n\t'compressedTexSubImage3D': {\r\n\t\t10: { 0: true, 8: true },\r\n\t\t11: { 0: true, 8: true },\r\n\t\t12: { 0: true, 8: true }\r\n\t},\r\n\r\n\t// WebGL 2 Vertex attribs\r\n\r\n\t'vertexAttribIPointer': { 5: { 2: true } },\r\n\r\n\t// WebGL 2 Writing to the drawing buffer\r\n\r\n\t'drawArraysInstanced': { 4: { 0: true } },\r\n\t'drawElementsInstanced': { 5: { 0: true, 2: true } },\r\n\t'drawRangeElements': { 6: { 0: true, 4: true } },\r\n\r\n\t// WebGL 2 Reading back pixels\r\n\r\n\t'readPixels': {\r\n\t\t7: { 4: true, 5: true }, // WebGL 1 & 2\r\n\t\t8: { 4: true, 5: true }  // WebGL 2\r\n\t},\r\n\r\n\t// WebGL 2 Multiple Render Targets\r\n\r\n\t'clearBufferfv': { 3: { 0: true }, 4: { 0: true } },\r\n\t'clearBufferiv': { 3: { 0: true }, 4: { 0: true } },\r\n\t'clearBufferuiv': { 3: { 0: true }, 4: { 0: true } },\r\n\t'clearBufferfi': { 4: { 0: true } },\r\n\r\n\t// WebGL 2 Query objects\r\n\r\n\t'beginQuery': { 2: { 0: true } },\r\n\t'endQuery': { 1: { 0: true } },\r\n\t'getQuery': { 2: { 0: true, 1: true } },\r\n\t'getQueryParameter': { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Sampler objects\r\n\r\n\t'samplerParameteri': { 3: { 1: true, 2: true } },\r\n\t'samplerParameterf': { 3: { 1: true } },\r\n\t'getSamplerParameter': { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Sync objects\r\n\r\n\t'fenceSync': { 2: { 0: true, 1: { 'enumBitwiseOr': [] } } },\r\n\t'clientWaitSync': { 3: { 1: { 'enumBitwiseOr': ['SYNC_FLUSH_COMMANDS_BIT'] } } },\r\n\t'waitSync': { 3: { 1: { 'enumBitwiseOr': [] } } },\r\n\t'getSyncParameter': { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Transform Feedback\r\n\r\n\t'bindTransformFeedback': { 2: { 0: true } },\r\n\t'beginTransformFeedback': { 1: { 0: true } },\r\n\t'transformFeedbackVaryings': { 3: { 2: true } },\r\n\r\n\t// WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\r\n\r\n\t'bindBufferBase': { 3: { 0: true } },\r\n\t'bindBufferRange': { 5: { 0: true } },\r\n\t'getIndexedParameter': { 2: { 0: true } },\r\n\t'getActiveUniforms': { 3: { 2: true } },\r\n\t'getActiveUniformBlockParameter': { 3: { 2: true } }\r\n}\r\n\r\n/**\r\n * Map of numbers to names.\r\n * @type {Object}\r\n */\r\nlet glEnums: { [k: number]: string } = null as any\r\n\r\n/**\r\n * Map of names to numbers.\r\n * @type {Object}\r\n */\r\nlet enumStringToValue: { [k: string]: GL.GLenum<string> } = null as any\r\n\r\n/**\r\n * Initializes this module. Safe to call more than once.\r\n * @param ctx A WebGL context. If\r\n *    you have more than one context it doesn't matter which one\r\n *    you pass in, it is only used to pull out constants.\r\n */\r\nexport function init() {\r\n\tif (null === glEnums) {\r\n\t\tglEnums = {}\r\n\t\tenumStringToValue = {}\r\n\t\tconst c = (window as any).WebGL2RenderingContext || (window as any).WebGLRenderingContext\r\n\t\tif (!c) throw new Error('Neither WebGL2RenderingContext nor WebGLRenderingContext exists on window.')\r\n\t\tfor (const propertyName in c) {\r\n\t\t\tconst prop = c[propertyName]\r\n\t\t\tif ('number' === typeof prop) {\r\n\t\t\t\tglEnums[prop] = propertyName\r\n\t\t\t\tenumStringToValue[propertyName] = prop as any\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns true or false if value matches any WebGL enum\r\n * @param value Value to check if it might be an enum.\r\n * @return True if value matches one of the WebGL defined enums\r\n */\r\nexport function mightBeEnum(value: number): boolean {\r\n\tinit()\r\n\treturn (glEnums[value] !== undefined)\r\n}\r\n\r\n/**\r\n * Gets an string version of an WebGL enum.\r\n *\r\n * Example:\r\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError())\r\n *\r\n * @param value Value to return an enum for\r\n * @return The string version of the enum.\r\n */\r\nexport function glEnumToString(value: GL.GLenum<string>): string {\r\n\tinit()\r\n\tvar name = glEnums[value as any]\r\n\treturn (name !== undefined) ? ('gl.' + name) :\r\n\t\t('/*UNKNOWN WebGL ENUM*/ 0x' + (value as any).toString(16) + '')\r\n}\r\n\r\n/**\r\n * Converts the argument of a WebGL function to a string.\r\n * Attempts to convert enum arguments to strings.\r\n *\r\n * Example:\r\n *   WebGLDebugUtil.init(ctx)\r\n *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D)\r\n *\r\n * would return 'TEXTURE_2D'\r\n *\r\n * @param functionName the name of the WebGL function.\r\n * @param numArgs the number of arguments passed to the function.\r\n * @param argumentIndex the index of the argument.\r\n * @param value The value of the argument.\r\n * @return The value as a string.\r\n */\r\nexport function glFunctionArgToString(functionName: string, numArgs: number, argumentIndex: number, value: any): string {\r\n\tconst funcInfo = glValidEnumContexts[functionName]\r\n\tif (funcInfo !== undefined) {\r\n\t\tconst funcOverloadInfo = funcInfo[numArgs]\r\n\t\tif (funcOverloadInfo !== undefined) {\r\n\t\t\tconst argInfo = funcOverloadInfo[argumentIndex]\r\n\t\t\tif (argInfo) {\r\n\t\t\t\tif (typeof argInfo === 'object') {\r\n\t\t\t\t\tconst enums = argInfo.enumBitwiseOr\r\n\t\t\t\t\tconst orEnums = []\r\n\t\t\t\t\tlet orResult = 0\r\n\t\t\t\t\tfor (let i = 0; i < enums.length; ++i) {\r\n\t\t\t\t\t\tconst enumValue = enumStringToValue[enums[i]]\r\n\t\t\t\t\t\tif ((value & enumValue) !== 0) {\r\n\t\t\t\t\t\t\torResult |= enumValue\r\n\t\t\t\t\t\t\torEnums.push(glEnumToString(enumValue))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (orResult === value) {\r\n\t\t\t\t\t\treturn orEnums.join(' | ')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn glEnumToString(value)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn glEnumToString(value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (value === null) {\r\n\t\treturn 'null'\r\n\t} else if (value === undefined) {\r\n\t\treturn 'undefined'\r\n\t} else {\r\n\t\treturn value.toString()\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts the arguments of a WebGL function to a string.\r\n * Attempts to convert enum arguments to strings.\r\n *\r\n * @param functionName the name of the WebGL function.\r\n * @param args The arguments.\r\n * @return The arguments as a string.\r\n */\r\nexport function glFunctionArgsToString(functionName: string, args: number[]): string {\r\n\t// apparently we can't do args.join(',')\r\n\tvar argStr = ''\r\n\tvar numArgs = args.length\r\n\tfor (var ii = 0; ii < numArgs; ++ii) {\r\n\t\targStr += ((ii == 0) ? '' : ', ') +\r\n\t\t\tglFunctionArgToString(functionName, numArgs, ii, args[ii])\r\n\t}\r\n\treturn argStr\r\n}\r\n\r\n\r\nfunction makePropertyWrapper(wrapper:any , original: any, propertyName: string) {\r\n\t//log('wrap prop: ' + propertyName)\r\n\twrapper.__defineGetter__(propertyName, function () {\r\n\t\treturn original[propertyName]\r\n\t})\r\n\t// TODO(gmane): this needs to handle properties that take more than\r\n\t// one value?\r\n\twrapper.__defineSetter__(propertyName, function (value: any) {\r\n\t\t//log('set: ' + propertyName)\r\n\t\toriginal[propertyName] = value\r\n\t})\r\n}\r\n\r\n/**\r\n * Given a WebGL context returns a wrapped context that calls\r\n * gl.getError after every command and calls a function if the\r\n * result is not NO_ERROR.\r\n *\r\n * You can supply your own function if you want. For example, if you'd like\r\n * an exception thrown on any GL error you could do this\r\n *\r\n *    function throwOnGLError(err, funcName, args) {\r\n *      throw new Error(WebGLDebugUtils.glEnumToString(err) +\r\n *            ' was caused by call to ' + funcName)\r\n *    }\r\n *\r\n *    ctx = WebGLDebugUtils.makeDebugContext(\r\n *        canvas.getContext('webgl'), throwOnGLError)\r\n *\r\n * @param ctx The webgl context to wrap.\r\n * @param opt_onErrorFunc The function\r\n *     to call when gl.getError returns an error. If not specified the default\r\n *     function calls console.log with a message.\r\n * @param opt_onFunc The\r\n *     function to call when each webgl function is called. You\r\n *     can use this to log all calls for example.\r\n * @param opt_err_ctx The webgl context\r\n *        to call getError on if different than ctx.\r\n */\r\nexport function makeDebugContext(\r\n\tctx: WebGLRenderingContextStrict,\r\n\topt_onErrorFunc?: (err: GL.Error, funcName: string, args: any[]) => void,\r\n\topt_onFunc?: (funcName: string, args: any[]) => void,\r\n\topt_err_ctx: WebGLRenderingContextStrict = ctx\r\n): WebGLRenderingContext {\r\n\tinit()\r\n\topt_onErrorFunc = opt_onErrorFunc || function (err, functionName, args) {\r\n\t\t// apparently we can't do args.join(',')\r\n\t\tvar argStr = ''\r\n\t\tvar numArgs = args.length\r\n\t\tfor (let i = 0; i < numArgs; ++i) {\r\n\t\t\targStr += ((i == 0) ? '' : ', ') +\r\n\t\t\t\tglFunctionArgToString(functionName, numArgs, i, args[i])\r\n\t\t}\r\n\t\terror('WebGL error ' + glEnumToString(err) + ' in ' + functionName +\r\n\t\t\t'(' + argStr + ')')\r\n\t}\r\n\r\n\t// Holds booleans for each GL error so after we get the error ourselves\r\n\t// we can still return it to the client app.\r\n\tconst glErrorShadow: { [k: number]: boolean } = {}\r\n\r\n\t// Makes a function that calls a WebGL function and then calls getError.\r\n\tfunction makeErrorWrapper(ctx: WebGLRenderingContextStrict, functionName: string) {\r\n\t\treturn function (...args: any[]) {\r\n\t\t\tif (opt_onFunc) {\r\n\t\t\t\topt_onFunc(functionName, args)\r\n\t\t\t}\r\n\t\t\tconst result = (ctx as any)[functionName].apply(ctx, args)\r\n\t\t\tconst err = opt_err_ctx.getError()\r\n\t\t\tif (err != 0) {\r\n\t\t\t\tglErrorShadow[err] = true\r\n\t\t\t\topt_onErrorFunc!(err, functionName, args)\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t}\r\n\t}\r\n\r\n\t// Make a an object that has a copy of every property of the WebGL context\r\n\t// but wraps all functions.\r\n\tconst wrapper: any = {}\r\n\tfor (let propertyName in ctx) {\r\n\t\tconst prop = ctx[propertyName as keyof WebGLRenderingContextStrict]\r\n\t\tif ('function' === typeof prop) {\r\n\t\t\tif (propertyName != 'getExtension') {\r\n\t\t\t\twrapper[propertyName] = makeErrorWrapper(ctx, propertyName)\r\n\t\t\t} else {\r\n\t\t\t\tlet wrapped = makeErrorWrapper(ctx, propertyName)\r\n\t\t\t\twrapper[propertyName as any] = function () {\r\n\t\t\t\t\tconst result = wrapped.apply(ctx, arguments)\r\n\t\t\t\t\tif (!result) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmakePropertyWrapper(wrapper, ctx, propertyName)\r\n\t\t}\r\n\t}\r\n\r\n\t// Override the getError function with one that returns our saved results.\r\n\twrapper.getError = function () {\r\n\t\tfor (const err in glErrorShadow) {\r\n\t\t\tif (glErrorShadow.hasOwnProperty(err)) {\r\n\t\t\t\tif (glErrorShadow[err]) {\r\n\t\t\t\t\tglErrorShadow[err] = false\r\n\t\t\t\t\treturn parseInt(err)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ctx.NO_ERROR\r\n\t}\r\n\r\n\treturn wrapper\r\n}\r\nexport function isWebGL2RenderingContext(o: any): o is WebGL2RenderingContext {\r\n\treturn !!o.createTransformFeedback\r\n}\r\n/**\r\n * Resets a context to the initial state.\r\n * @param ctx The webgl context to\r\n *     reset.\r\n */\r\nexport function resetToInitialState(ctx2: WebGL2RenderingContext | WebGLRenderingContextStrict) {\r\n\r\n\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\tctx2.bindVertexArray(null)\r\n\t}\r\n\r\n\tconst numAttribs = ctx2.getParameter(ctx2.MAX_VERTEX_ATTRIBS)\r\n\tconst tmp = ctx2.createBuffer()\r\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, tmp)\r\n\tfor (let ii = 0; ii < numAttribs; ++ii) {\r\n\t\tctx2.disableVertexAttribArray(ii)\r\n\t\tctx2.vertexAttribPointer(ii, 4, ctx2.FLOAT, false, 0, 0)\r\n\t\tctx2.vertexAttrib1f(ii, 0)\r\n\t\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\t\tctx2.vertexAttribDivisor(ii, 0)\r\n\t\t}\r\n\t}\r\n\tctx2.deleteBuffer(tmp)\r\n\r\n\tconst numTextureUnits = ctx2.getParameter(ctx2.MAX_TEXTURE_IMAGE_UNITS)\r\n\tfor (let ii = 0; ii < numTextureUnits; ++ii) {\r\n\t\tctx2.activeTexture((ctx2.TEXTURE0 + ii) as GL.TextureUnit)\r\n\t\tctx2.bindTexture(ctx2.TEXTURE_CUBE_MAP, null)\r\n\t\tctx2.bindTexture(ctx2.TEXTURE_2D, null)\r\n\t\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_2D_ARRAY, null)\r\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_3D, null)\r\n\t\t\tctx2.bindSampler(ii, null)\r\n\t\t}\r\n\t}\r\n\r\n\tctx2.activeTexture(ctx2.TEXTURE0)\r\n\tctx2.useProgram(null)\r\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, null)\r\n\tctx2.bindBuffer(ctx2.ELEMENT_ARRAY_BUFFER, null)\r\n\tctx2.bindFramebuffer(ctx2.FRAMEBUFFER, null)\r\n\tctx2.bindRenderbuffer(ctx2.RENDERBUFFER, null)\r\n\tctx2.disable(ctx2.BLEND)\r\n\tctx2.disable(ctx2.CULL_FACE)\r\n\tctx2.disable(ctx2.DEPTH_TEST)\r\n\tctx2.disable(ctx2.DITHER)\r\n\tctx2.disable(ctx2.SCISSOR_TEST)\r\n\tctx2.blendColor(0, 0, 0, 0)\r\n\tctx2.blendEquation(ctx2.FUNC_ADD)\r\n\tctx2.blendFunc(ctx2.ONE, ctx2.ZERO)\r\n\tctx2.clearColor(0, 0, 0, 0)\r\n\tctx2.clearDepth(1)\r\n\tctx2.clearStencil(-1)\r\n\tctx2.colorMask(true, true, true, true)\r\n\tctx2.cullFace(ctx2.BACK)\r\n\tctx2.depthFunc(ctx2.LESS)\r\n\tctx2.depthMask(true)\r\n\tctx2.depthRange(0, 1)\r\n\tctx2.frontFace(ctx2.CCW)\r\n\tctx2.hint(ctx2.GENERATE_MIPMAP_HINT, ctx2.DONT_CARE)\r\n\tctx2.lineWidth(1)\r\n\tctx2.pixelStorei(ctx2.PACK_ALIGNMENT, 4)\r\n\tctx2.pixelStorei(ctx2.UNPACK_ALIGNMENT, 4)\r\n\tctx2.pixelStorei(ctx2.UNPACK_FLIP_Y_WEBGL, false)\r\n\tctx2.pixelStorei(ctx2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false)\r\n\tctx2.pixelStorei(ctx2.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx2.BROWSER_DEFAULT_WEBGL)\r\n\tctx2.polygonOffset(0, 0)\r\n\tctx2.sampleCoverage(1, false)\r\n\tctx2.scissor(0, 0, ctx2.canvas.width, ctx2.canvas.height)\r\n\tctx2.stencilFunc(ctx2.ALWAYS, 0, 0xFFFFFFFF)\r\n\tctx2.stencilMask(0xFFFFFFFF)\r\n\tctx2.stencilOp(ctx2.KEEP, ctx2.KEEP, ctx2.KEEP)\r\n\tctx2.viewport(0, 0, ctx2.canvas.width, ctx2.canvas.height)\r\n\tctx2.clear(ctx2.COLOR_BUFFER_BIT | ctx2.DEPTH_BUFFER_BIT | ctx2.STENCIL_BUFFER_BIT)\r\n\r\n\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\tctx2.drawBuffers([ctx2.BACK])\r\n\t\tctx2.readBuffer(ctx2.BACK)\r\n\t\tctx2.bindBuffer(ctx2.COPY_READ_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.COPY_WRITE_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.PIXEL_PACK_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.PIXEL_UNPACK_BUFFER, null)\r\n\t\tconst numTransformFeedbacks = ctx2.getParameter(ctx2.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)\r\n\t\tfor (let ii = 0; ii < numTransformFeedbacks; ++ii) {\r\n\t\t\tctx2.bindBufferBase(ctx2.TRANSFORM_FEEDBACK_BUFFER, ii, null)\r\n\t\t}\r\n\t\tconst numUBOs = ctx2.getParameter(ctx2.MAX_UNIFORM_BUFFER_BINDINGS)\r\n\t\tfor (let ii = 0; ii < numUBOs; ++ii) {\r\n\t\t\tctx2.bindBufferBase(ctx2.UNIFORM_BUFFER, ii, null)\r\n\t\t}\r\n\t\tctx2.disable(ctx2.RASTERIZER_DISCARD)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_IMAGE_HEIGHT, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_IMAGES, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_ROW_LENGTH, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_ROWS, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_PIXELS, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_ROW_LENGTH, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_ROWS, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_PIXELS, 0)\r\n\t\tctx2.hint(ctx2.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx2.DONT_CARE)\r\n\t}\r\n\r\n\t// TODO: This should NOT be needed but Firefox fails with 'hint'\r\n\twhile (ctx2.getError()) {}\r\n}\r\n\r\n/**\r\n * Given a canvas element returns a wrapped canvas element that will\r\n * simulate lost context. The canvas returned adds the following functions.\r\n *\r\n * loseContext:\r\n *   simulates a lost context event.\r\n *\r\n * restoreContext:\r\n *   simulates the context being restored.\r\n *\r\n * lostContextInNCalls:\r\n *   loses the context after N gl calls.\r\n *\r\n * getNumCalls:\r\n *   tells you how many gl calls there have been so far.\r\n *\r\n * setRestoreTimeout:\r\n *   sets the number of milliseconds until the context is restored\r\n *   after it has been lost. Defaults to 0. Pass -1 to prevent\r\n *   automatic restoring.\r\n *\r\n * @param canvas The canvas element to wrap.\r\n */\r\nexport function makeLostContextSimulatingCanvas(canvas: HTMLCanvasElement) {\r\n\tconst canvas2 = canvas as any\r\n\tlet unwrappedContext_: any\r\n\tconst onLost_: WebGLContextEventListener[] = []\r\n\tconst onRestored_: WebGLContextEventListener[] = []\r\n\tlet wrappedContext_: any = {}\r\n\tlet contextId_ = 1\r\n\tlet contextLost_ = false\r\n\t// const resourceId_ = 0\r\n\tconst resourceDb_: WebGLObject[] = []\r\n\tlet numCallsToLoseContext_ = 0\r\n\tlet numCalls_ = 0\r\n\tlet canRestore_ = false\r\n\tlet restoreTimeout_ = 0\r\n\r\n\t// Holds booleans for each GL error so can simulate errors.\r\n\tconst glErrorShadow_: { [e: number]: boolean } = {}\r\n\r\n\tcanvas2.getContext = function (f) {\r\n\t\treturn function () {\r\n\t\t\tconst ctx = f.apply(canvas2, arguments)\r\n\t\t\t// Did we get a context and is it a WebGL context?\r\n\t\t\t\t// @ts-ignore\r\n\t\t\tif ((ctx instanceof WebGLRenderingContext) || (window.WebGL2RenderingContext && (ctx instanceof WebGL2RenderingContext))) {\r\n\t\t\t\tif (ctx != unwrappedContext_) {\r\n\t\t\t\t\tif (unwrappedContext_) {\r\n\t\t\t\t\t\tthrow new Error('got different context')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tunwrappedContext_ = ctx\r\n\t\t\t\t\twrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_)\r\n\t\t\t\t}\r\n\t\t\t\treturn wrappedContext_\r\n\t\t\t}\r\n\t\t\treturn ctx\r\n\t\t}\r\n\t}(canvas2.getContext)\r\n\r\n\tfunction wrapEvent(listener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener }) {\r\n\t\tif (typeof (listener) == 'function') {\r\n\t\t\treturn listener\r\n\t\t} else {\r\n\t\t\treturn function (e: CustomWebGLContextEvent) {\r\n\t\t\t\tlistener.handleEvent(e)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addOnContextLostListener(listener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener }) {\r\n\t\tonLost_.push(wrapEvent(listener))\r\n\t}\r\n\r\n\tfunction addOnContextRestoredListener(listener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener }) {\r\n\t\tonRestored_.push(wrapEvent(listener))\r\n\t}\r\n\r\n\r\n\tfunction wrapAddEventListener(canvas: HTMLCanvasElement) {\r\n\t\tconst f = canvas.addEventListener\r\n\t\tcanvas.addEventListener = function (type: string, listener: any) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'webglcontextlost':\r\n\t\t\t\t\taddOnContextLostListener(listener)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'webglcontextrestored':\r\n\t\t\t\t\taddOnContextRestoredListener(listener)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tf.apply(canvas, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twrapAddEventListener(canvas2)\r\n\r\n\tcanvas2.loseContext = function () {\r\n\t\tif (!contextLost_) {\r\n\t\t\tcontextLost_ = true\r\n\t\t\tnumCallsToLoseContext_ = 0\r\n\t\t\t++contextId_\r\n\t\t\twhile (unwrappedContext_.getError())\r\n\t\t\t\tclearErrors()\r\n\t\t\tglErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true\r\n\t\t\tconst event = makeWebGLContextEvent('context lost')\r\n\t\t\tconst callbacks = onLost_.slice()\r\n\t\t\tsetTimeout(function () {\r\n\t\t\t\t//log('numCallbacks:' + callbacks.length)\r\n\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\r\n\t\t\t\t\t//log('calling callback:' + ii)\r\n\t\t\t\t\tcallbacks[ii](event)\r\n\t\t\t\t}\r\n\t\t\t\tif (restoreTimeout_ >= 0) {\r\n\t\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t\tcanvas2.restoreContext()\r\n\t\t\t\t\t}, restoreTimeout_)\r\n\t\t\t\t}\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t}\r\n\r\n\tcanvas2.restoreContext = function () {\r\n\t\tif (contextLost_) {\r\n\t\t\tif (onRestored_.length) {\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\tif (!canRestore_) {\r\n\t\t\t\t\t\tthrow new Error('can not restore. webglcontestlost listener did not call event.preventDefault')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfreeResources()\r\n\t\t\t\t\tresetToInitialState(unwrappedContext_)\r\n\t\t\t\t\tcontextLost_ = false\r\n\t\t\t\t\tnumCalls_ = 0\r\n\t\t\t\t\tcanRestore_ = false\r\n\t\t\t\t\tconst callbacks = onRestored_.slice()\r\n\t\t\t\t\tconst event = makeWebGLContextEvent('context restored')\r\n\t\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\r\n\t\t\t\t\t\tcallbacks[ii](event)\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcanvas2.loseContextInNCalls = function (numCalls: number) {\r\n\t\tif (contextLost_) {\r\n\t\t\tthrow new Error('You can not ask a lost context to be lost')\r\n\t\t}\r\n\t\tnumCallsToLoseContext_ = numCalls_ + numCalls\r\n\t}\r\n\r\n\tcanvas2.getNumCalls = function () {\r\n\t\treturn numCalls_\r\n\t}\r\n\r\n\tcanvas2.setRestoreTimeout = function (timeout: number) {\r\n\t\trestoreTimeout_ = timeout\r\n\t}\r\n\r\n\tfunction isWebGLObject(obj: any): obj is WebGLObject {\r\n\t\t//return false\r\n\t\treturn (obj instanceof WebGLBuffer ||\r\n\t\t\tobj instanceof WebGLFramebuffer ||\r\n\t\t\tobj instanceof WebGLProgram ||\r\n\t\t\tobj instanceof WebGLRenderbuffer ||\r\n\t\t\tobj instanceof WebGLShader ||\r\n\t\t\tobj instanceof WebGLTexture)\r\n\t}\r\n\r\n\tfunction checkResources(args: any[]) {\r\n\t\tfor (let i = 0; i < args.length; ++i) {\r\n\t\t\tconst arg = args[i]\r\n\t\t\tif (isWebGLObject(arg)) {\r\n\t\t\t\treturn (arg as any).__webglDebugContextLostId__ == contextId_\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true\r\n\t}\r\n\r\n\tfunction clearErrors() {\r\n\t\tconst k = Object.keys(glErrorShadow_) as any as number[]\r\n\t\tfor (let i = 0; i < k.length; ++i) {\r\n\t\t\tdelete glErrorShadow_[k[i]]\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loseContextIfTime() {\r\n\t\t++numCalls_\r\n\t\tif (!contextLost_) {\r\n\t\t\tif (numCallsToLoseContext_ == numCalls_) {\r\n\t\t\t\tcanvas2.loseContext()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Makes a function that simulates WebGL when out of context.\r\n\tfunction makeLostContextFunctionWrapper(ctx: WebGLRenderingContext, functionName: string) {\r\n\t\tconst f = (ctx as any)[functionName]\r\n\t\treturn function () {\r\n\t\t\t// log('calling:' + functionName)\r\n\t\t\t// Only call the functions if the context is not lost.\r\n\t\t\tloseContextIfTime()\r\n\t\t\tif (!contextLost_) {\r\n\t\t\t\t//if (!checkResources(arguments)) {\r\n\t\t\t\t//  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true\r\n\t\t\t\t//  return\r\n\t\t\t\t//}\r\n\t\t\t\tconst result = f.apply(ctx, arguments)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction freeResources() {\r\n\t\tfor (let ii = 0; ii < resourceDb_.length; ++ii) {\r\n\t\t\tconst resource = resourceDb_[ii]\r\n\t\t\tif (resource instanceof WebGLBuffer) {\r\n\t\t\t\tunwrappedContext_.deleteBuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLFramebuffer) {\r\n\t\t\t\tunwrappedContext_.deleteFramebuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLProgram) {\r\n\t\t\t\tunwrappedContext_.deleteProgram(resource)\r\n\t\t\t} else if (resource instanceof WebGLRenderbuffer) {\r\n\t\t\t\tunwrappedContext_.deleteRenderbuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLShader) {\r\n\t\t\t\tunwrappedContext_.deleteShader(resource)\r\n\t\t\t} else if (resource instanceof WebGLTexture) {\r\n\t\t\t\tunwrappedContext_.deleteTexture(resource)\r\n\t\t\t}\r\n\t\t\telse if (isWebGL2RenderingContext) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (resource instanceof WebGLQuery) {\r\n\t\t\t\t\tunwrappedContext_.deleteQuery(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLSampler) {\r\n\t\t\t\t\tunwrappedContext_.deleteSampler(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLSync) {\r\n\t\t\t\t\tunwrappedContext_.deleteSync(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLTransformFeedback) {\r\n\t\t\t\t\tunwrappedContext_.deleteTransformFeedback(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLVertexArrayObject) {\r\n\t\t\t\t\tunwrappedContext_.deleteVertexArray(resource)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tinterface CustomWebGLContextEvent {statusMessage: string, preventDefault: () => void}\r\n\ttype WebGLContextEventListener = (e: CustomWebGLContextEvent) => void\r\n\tfunction makeWebGLContextEvent(statusMessage: string): CustomWebGLContextEvent {\r\n\t\treturn {\r\n\t\t\tstatusMessage: statusMessage,\r\n\t\t\tpreventDefault: function () {\r\n\t\t\t\tcanRestore_ = true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn canvas2\r\n\r\n\tfunction makeLostContextSimulatingContext(ctx: WebGLRenderingContext) {\r\n\t\t// copy all functions and properties to wrapper\r\n\t\tfor (const propertyName in ctx) {\r\n\t\t\tif (typeof (ctx as any)[propertyName] == 'function') {\r\n\t\t\t\twrappedContext_[propertyName] = makeLostContextFunctionWrapper(\r\n\t\t\t\t\tctx, propertyName)\r\n\t\t\t} else {\r\n\t\t\t\tmakePropertyWrapper(wrappedContext_, ctx, propertyName)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Wrap a few functions specially.\r\n\t\twrappedContext_.getError = function () {\r\n\t\t\tloseContextIfTime()\r\n\t\t\tif (!contextLost_) {\r\n\t\t\t\tlet err\r\n\t\t\t\twhile (err = unwrappedContext_.getError()) {\r\n\t\t\t\t\tglErrorShadow_[err] = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const err in glErrorShadow_) {\r\n\t\t\t\tif (glErrorShadow_[err]) {\r\n\t\t\t\t\tdelete glErrorShadow_[err]\r\n\t\t\t\t\treturn err\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn wrappedContext_.NO_ERROR\r\n\t\t}\r\n\r\n\t\tconst creationFunctions = [\r\n\t\t\t'createBuffer',\r\n\t\t\t'createFramebuffer',\r\n\t\t\t'createProgram',\r\n\t\t\t'createRenderbuffer',\r\n\t\t\t'createShader',\r\n\t\t\t'createTexture'\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tcreationFunctions.push(\r\n\t\t\t\t'createQuery',\r\n\t\t\t\t'createSampler',\r\n\t\t\t\t'fenceSync',\r\n\t\t\t\t'createTransformFeedback',\r\n\t\t\t\t'createVertexArray'\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let i = 0; i < creationFunctions.length; ++i) {\r\n\t\t\tconst functionName = creationFunctions[i]\r\n\t\t\twrappedContext_[functionName] = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst obj = f.apply(ctx, arguments)\r\n\t\t\t\t\tobj.__webglDebugContextLostId__ = contextId_\r\n\t\t\t\t\tresourceDb_.push(obj)\r\n\t\t\t\t\treturn obj\r\n\t\t\t\t}\r\n\t\t\t}((ctx as any)[functionName])\r\n\t\t}\r\n\r\n\t\tconst functionsThatShouldReturnNull = [\r\n\t\t\t'getActiveAttrib',\r\n\t\t\t'getActiveUniform',\r\n\t\t\t'getBufferParameter',\r\n\t\t\t'getContextAttributes',\r\n\t\t\t'getAttachedShaders',\r\n\t\t\t'getFramebufferAttachmentParameter',\r\n\t\t\t'getParameter',\r\n\t\t\t'getProgramParameter',\r\n\t\t\t'getProgramInfoLog',\r\n\t\t\t'getRenderbufferParameter',\r\n\t\t\t'getShaderParameter',\r\n\t\t\t'getShaderInfoLog',\r\n\t\t\t'getShaderSource',\r\n\t\t\t'getTexParameter',\r\n\t\t\t'getUniform',\r\n\t\t\t'getUniformLocation',\r\n\t\t\t'getVertexAttrib'\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tfunctionsThatShouldReturnNull.push(\r\n\t\t\t\t'getInternalformatParameter',\r\n\t\t\t\t'getQuery',\r\n\t\t\t\t'getQueryParameter',\r\n\t\t\t\t'getSamplerParameter',\r\n\t\t\t\t'getSyncParameter',\r\n\t\t\t\t'getTransformFeedbackVarying',\r\n\t\t\t\t'getIndexedParameter',\r\n\t\t\t\t'getUniformIndices',\r\n\t\t\t\t'getActiveUniforms',\r\n\t\t\t\t'getActiveUniformBlockParameter',\r\n\t\t\t\t'getActiveUniformBlockName'\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\r\n\t\t\tconst functionName = functionsThatShouldReturnNull[ii]\r\n\t\t\twrappedContext_[functionName] = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t}(wrappedContext_[functionName])\r\n\t\t}\r\n\r\n\t\tconst isFunctions = [\r\n\t\t\t'isBuffer',\r\n\t\t\t'isEnabled',\r\n\t\t\t'isFramebuffer',\r\n\t\t\t'isProgram',\r\n\t\t\t'isRenderbuffer',\r\n\t\t\t'isShader',\r\n\t\t\t'isTexture'\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tisFunctions.push(\r\n\t\t\t\t'isQuery',\r\n\t\t\t\t'isSampler',\r\n\t\t\t\t'isSync',\r\n\t\t\t\t'isTransformFeedback',\r\n\t\t\t\t'isVertexArray'\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let ii = 0; ii < isFunctions.length; ++ii) {\r\n\t\t\tconst functionName = isFunctions[ii]\r\n\t\t\twrappedContext_[functionName] = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t}(wrappedContext_[functionName])\r\n\t\t}\r\n\r\n\t\twrappedContext_.checkFramebufferStatus = function (f) {\r\n\t\t\treturn function () {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn wrappedContext_.FRAMEBUFFER_UNSUPPORTED\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t}(wrappedContext_.checkFramebufferStatus)\r\n\r\n\t\twrappedContext_.getAttribLocation = function (f) {\r\n\t\t\treturn function () {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn -1\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t}(wrappedContext_.getAttribLocation)\r\n\r\n\t\twrappedContext_.getVertexAttribOffset = function (f) {\r\n\t\t\treturn function () {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn 0\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t}(wrappedContext_.getVertexAttribOffset)\r\n\r\n\t\twrappedContext_.isContextLost = function () {\r\n\t\t\treturn contextLost_\r\n\t\t}\r\n\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\twrappedContext_.getFragDataLocation = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t}(wrappedContext_.getFragDataLocation)\r\n\r\n\t\t\twrappedContext_.clientWaitSync = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn wrappedContext_.WAIT_FAILED\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t}(wrappedContext_.clientWaitSync)\r\n\r\n\t\t\twrappedContext_.getUniformBlockIndex = function (f) {\r\n\t\t\t\treturn function () {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn wrappedContext_.INVALID_INDEX\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t}(wrappedContext_.getUniformBlockIndex)\r\n\t\t}\r\n\r\n\t\treturn wrappedContext_\r\n\t}\r\n}\r\n\r\n","import chroma from 'chroma-js'\nimport { addOwnProperties, assert, DEG, int, M4, P3ZX, V, V3, } from 'ts3dutils'\nimport { glEnumToString } from './KhronosGroupWebGLDebug'\n\nimport { makeDebugContext, Mesh, Shader } from './index'\n\nimport GL = WebGLRenderingContextStrict\nexport type GL_COLOR = [number, number, number, number]\n/**\n * There's only one constant, use it for default values. Use chroma-js or similar for actual colors.\n */\nexport const GL_COLOR_BLACK: GL_COLOR = [0, 0, 0, 1]\n\nexport function currentGL(): TSGLContext {\n\treturn TSGLContextBase.gl\n}\n\nexport function isNumber(obj: any) {\n\tconst str = Object.prototype.toString.call(obj)\n\treturn str == '[object Number]' || str == '[object Boolean]'\n}\n\nexport type UniformType = V3 | M4 | number[] | boolean | number\nexport type TSGLContext = TSGLContextBase & (WebGLRenderingContextStrict | WebGL2RenderingContext)\nexport interface TSGLContextBase extends WebGLRenderingContextStrict {}\nexport class TSGLContextBase {\n\tmodelViewMatrix: M4 = M4.identity()\n\tprojectionMatrix: M4 = M4.identity()\n\tstatic readonly MODELVIEW: { __MATRIX_MODE_CONSTANT: any } = 0 as any\n\tstatic readonly PROJECTION: { __MATRIX_MODE_CONSTANT: any } = 1 as any\n\tMODELVIEW: typeof TSGLContextBase.MODELVIEW\n\tPROJECTION: typeof TSGLContextBase.PROJECTION\n\n\treadonly version: 1 | 2\n\n\tstatic HALF_FLOAT_OES: int = 0x8D61\n\tHALF_FLOAT_OES: int\n\n\tprivate tempMatrix = new M4()\n\tprivate resultMatrix = new M4()\n\tprivate modelViewStack: M4[] = []\n\tprivate projectionStack: M4[] = []\n\tprivate currentMatrixName: 'modelViewMatrix' | 'projectionMatrix'\n\tprivate stack: M4[]\n\n\tmeshes: { [name: string]: Mesh }\n\tshaders: { [name: string]: Shader }\n\tpublic drawCallCount: int = 0\n\tpublic projectionMatrixVersion: int = 0\n\tpublic modelViewMatrixVersion: int = 0\n\n\tprotected constructor(gl: TSGLContextBase, private immediate = {\n\t\tmesh: new Mesh()\n\t\t\t.addVertexBuffer('coords', 'ts_TexCoord')\n\t\t\t.addVertexBuffer('colors', 'ts_Color'),\n\t\tmode: -1 as GL.DrawMode | -1,\n\t\tcoord: [0, 0] as [number, number],\n\t\tcolor: [1, 1, 1, 1] as GL_COLOR,\n\t\tpointSize: 1,\n\t\tshader: Shader.create(`\n\t\t\tattribute vec4 ts_Color;\n\t\t\tattribute vec4 ts_Vertex;\n\t\t\tuniform mat4 ts_ModelViewProjectionMatrix;\n\t\t\tattribute vec2 ts_TexCoord;\n            uniform float pointSize;\n            varying vec4 color;\n            varying vec2 coord;\n            void main() {\n                color = ts_Color;\n                coord = ts_TexCoord;\n                gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n                gl_PointSize = pointSize;\n            }\n\t\t`, `\n\t\t\tprecision highp float;\n            uniform sampler2D texture;\n            uniform float pointSize;\n            // uniform bool useTexture;\n            varying vec4 color;\n            varying vec2 coord;\n            void main() {\n                gl_FragColor = color;\n                // if (useTexture) gl_FragColor *= texture2D(texture, coord.xy);\n            }\n        `, gl),\n\t}) {\n\t\tthis.matrixMode(TSGLContextBase.MODELVIEW)\n\t}\n\n\t/// Implement the OpenGL modelview and projection matrix stacks, along with some other useful GLU matrix functions.\n\tmatrixMode(mode: { __MATRIX_MODE_CONSTANT: any }): void {\n\t\tswitch (mode) {\n\t\t\tcase this.MODELVIEW:\n\t\t\t\tthis.currentMatrixName = 'modelViewMatrix'\n\t\t\t\tthis.stack = this.modelViewStack\n\t\t\t\tbreak\n\t\t\tcase this.PROJECTION:\n\t\t\t\tthis.currentMatrixName = 'projectionMatrix'\n\t\t\t\tthis.stack = this.projectionStack\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error('invalid matrix mode ' + mode)\n\t\t}\n\t}\n\n\tloadIdentity(): void {\n\t\tM4.identity(this[this.currentMatrixName])\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\tloadMatrix(m4: M4) {\n\t\tM4.copy(m4, this[this.currentMatrixName])\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\tmultMatrix(m4: M4) {\n\t\tM4.multiply(this[this.currentMatrixName], m4, this.resultMatrix)\n\t\tconst temp = this.resultMatrix\n\t\tthis.resultMatrix = this[this.currentMatrixName]\n\t\tthis[this.currentMatrixName] = temp\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\tmirror(plane: { normal1: V3, w: number }) {\n\t\tthis.multMatrix(M4.mirror(plane))\n\t}\n\n\tperspective(fovDegrees: number, aspect: number, near: number, far: number) {\n\t\tthis.multMatrix(M4.perspectiveRad(fovDegrees * DEG, aspect, near, far, this.tempMatrix))\n\t}\n\n\tfrustum(left: number, right: number, bottom: number, top: number, near: number, far: number) {\n\t\tthis.multMatrix(M4.frustum(left, right, bottom, top, near, far, this.tempMatrix))\n\t}\n\n\tortho(left: number, right: number, bottom: number, top: number, near: number, far: number) {\n\t\tthis.multMatrix(M4.ortho(left, right, bottom, top, near, far, this.tempMatrix))\n\t}\n\n\tscale(x: number, y: number, z?: number): void\n\tscale(scale: number): void\n\tscale(v: V3): void\n\tscale(...args: any[]) {\n\t\tthis.multMatrix((M4.scale as any)(...args, this.tempMatrix))\n\t}\n\n\tmirroredX() {\n\t\tthis.multMatrix(M4.mirror(P3ZX))\n\t}\n\n\ttranslate(x: number, y?: number, z?: number): void\n\ttranslate(v: V3): void\n\ttranslate(x: any, y?: any, z?: any) {\n\t\tif (undefined !== y) {\n\t\t\tthis.multMatrix(M4.translate(x, y, z, this.tempMatrix))\n\t\t} else {\n\t\t\tthis.multMatrix(M4.translate(x, this.tempMatrix))\n\t\t}\n\t}\n\n\trotate(angleDegrees: number, x: number, y: number, z: number) {\n\t\tthis.multMatrix(M4.rotate(angleDegrees * DEG, {x, y, z}, this.tempMatrix))\n\t}\n\n\tlookAt(eye: V3, center: V3, up: V3) {\n\t\tthis.multMatrix(M4.lookAt(eye, center, up, this.tempMatrix))\n\t}\n\n\tpushMatrix() {\n\t\tthis.stack.push(M4.copy(this[this.currentMatrixName]))\n\t}\n\n\tpopMatrix() {\n\t\tconst pop = this.stack.pop()\n\t\tassert(undefined !== pop)\n\t\tthis[this.currentMatrixName] = pop as M4\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\t/**\n\t * World coordinates (WC) to screen/window coordinates matrix\n\t */\n\twcToWindowMatrix() {\n\t\tconst viewport = this.getParameter(this.VIEWPORT)\n\t\tconst [x, y, w, h] = viewport\n\t\tconst viewportToScreenMatrix = new M4([\n\t\t\tw / 2, 0, 0, x + w / 2,\n\t\t\th / 2, 0, 0, y + h / 2,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t\treturn M4.multiplyMultiple(viewportToScreenMatrix, this.projectionMatrix, this.modelViewMatrix)\n\t}\n\n\t/////////// IMMEDIATE MODE\n\t// ### Immediate mode\n\t//\n\t// Provide an implementation of OpenGL's deprecated immediate mode. This is\n\t// deprecated for a reason: constantly re-specifying the geometry is a bad\n\t// idea for performance. You should use a `GL.Mesh` instead, which specifies\n\t// the geometry once and caches it on the graphics card. Still, nothing\n\t// beats a quick `viewerGL.begin(WGL.POINTS); viewerGL.vertex(1, 2, 3); viewerGL.end();` for\n\t// debugging. This intentionally doesn't implement fixed-function lighting\n\t// because it's only meant for quick debugging tasks.\n\n\n\tpointSize(pointSize: number): void {\n\t\tthis.immediate.shader.uniforms({pointSize: pointSize})\n\t}\n\n\tbegin(mode: GL.DrawMode) {\n\t\tif (this.immediate.mode != -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\n\t\tthis.immediate.mode = mode\n\t\tthis.immediate.mesh.colors = []\n\t\tthis.immediate.mesh.coords = []\n\t\tthis.immediate.mesh.vertices = []\n\t}\n\n\tcolor(cssColor: string): void\n\tcolor(r: number, g: number, b: number, a?: number): void\n\tcolor(hexInt: int): void\n\tcolor(glColor: GL_COLOR): void\n\tcolor(...args: any[]) {\n\t\tthis.immediate.color =\n\t\t\t(1 == args.length && Array.isArray(args[0]))\n\t\t\t\t? args[0]\n\t\t\t\t: (1 == args.length && 'number' == typeof args[0])\n\t\t\t\t? hexIntToGLColor(args[0])\n\t\t\t\t: (1 == args.length && 'string' == typeof args[0])\n\t\t\t\t\t? chroma(args[0]).gl()\n\t\t\t\t\t: [args[0], args[1], args[2], args[3] || 1]\n\t}\n\n\ttexCoord(s: number, t: number): void\n\ttexCoord(coords: [number, number]): void\n\ttexCoord(coords: { x: number, y: number }): void\n\ttexCoord(...args: any[]) {\n\t\tthis.immediate.coord = V.apply(undefined, args).toArray(2)\n\t}\n\n\tvertex(v: V3): void\n\tvertex(x: number, y: number, z: number): void\n\tvertex(...args: any[]) {\n\t\tthis.immediate.mesh.colors.push(this.immediate.color)\n\t\tthis.immediate.mesh.coords.push(this.immediate.coord)\n\t\tthis.immediate.mesh.vertices.push(V.apply(undefined, args))\n\t}\n\n\tend(): void {\n\t\tif (this.immediate.mode == -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\n\t\tthis.immediate.mesh.compile()\n\t\tthis.immediate.shader.uniforms({\n\t\t\tuseTexture: !!TSGLContextBase.gl.getParameter(this.TEXTURE_BINDING_2D),\n\t\t}).drawBuffers(this.immediate.mesh.vertexBuffers, undefined, this.immediate.mode)\n\t\tthis.immediate.mode = -1\n\t}\n\n\n\t////////// MISCELLANEOUS METHODS\n\tstatic gl: TSGLContextBase\n\n\tmakeCurrent() {\n\t\tTSGLContextBase.gl = this\n\t}\n\n\t/**\n\t * Starts an animation loop.\n\t */\n\tanimate(callback: (this: TSGLContextBase, domHighResTimeStamp: number, timeSinceLast: number) => void): () => void {\n\t\tconst requestAnimationFrame: typeof window.requestAnimationFrame =\n\t\t\twindow.requestAnimationFrame ||\n\t\t\t(window as any).mozRequestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\tfunction (callback: FrameRequestCallback) {\n\t\t\t\tsetTimeout(() => callback(performance.now()), 1000 / 60)\n\t\t\t}\n\t\tlet time = performance.now(), keepUpdating = true\n\t\tconst update = (now: number) => {\n\t\t\tif (keepUpdating) {\n\t\t\t\tcallback.call(this, now, now - time)\n\t\t\t\ttime = now\n\t\t\t\trequestAnimationFrame(update)\n\t\t\t}\n\t\t}\n\t\trequestAnimationFrame(update)\n\t\treturn () => { keepUpdating = false }\n\t}\n\n\n\t/**\n\t * Provide an easy way to get a fullscreen app running, including an\n\t * automatic 3D perspective projection matrix by default. This should be\n\t * called once.\n\t *\n\t * Just fullscreen, no automatic camera:\n\t *\n\t *     viewerGL.fullscreen({ camera: false })\n\t *\n\t * Adjusting field of view, near plane distance, and far plane distance:\n\t *\n\t *     viewerGL.fullscreen({ fov: 45, near: 0.1, far: 1000 })\n\t *\n\t * Adding padding from the edge of the window:\n\t *\n\t *     viewerGL.fullscreen({ paddingLeft: 250, paddingBottom: 60 })\n\t */\n\tfullscreen(options: {\n\t\tpaddingTop?: number,\n\t\tpaddingLeft?: number,\n\t\tpaddingRight?: number,\n\t\tpaddingBottom?: number,\n\t\tcamera?: boolean,\n\t\tfov?: number,\n\t\tnear?: number,\n\t\tfar?: number\n\t} = {}) {\n\n\t\tconst top = options.paddingTop || 0\n\t\tconst left = options.paddingLeft || 0\n\t\tconst right = options.paddingRight || 0\n\t\tconst bottom = options.paddingBottom || 0\n\t\tif (!document.body) {\n\t\t\tthrow new Error('document.body doesn\\'t exist yet (call viewerGL.fullscreen() from ' +\n\t\t\t\t'window.onload() or from inside the <body> tag)')\n\t\t}\n\t\tdocument.body.appendChild(this.canvas)\n\t\tdocument.body.style.overflow = 'hidden'\n\t\tthis.canvas.style.position = 'absolute'\n\t\tthis.canvas.style.left = left + 'px'\n\t\tthis.canvas.style.top = top + 'px'\n\t\tthis.canvas.style.width = window.innerWidth - left - right + 'px'\n\t\tthis.canvas.style.bottom = window.innerHeight - top - bottom + 'px'\n\n\t\tconst gl = this\n\n\t\tfunction windowOnResize() {\n\t\t\tgl.canvas.width = (window.innerWidth - left - right) * window.devicePixelRatio\n\t\t\tgl.canvas.height = (window.innerHeight - top - bottom) * window.devicePixelRatio\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n\t\t\tif (options.camera) {\n\t\t\t\tgl.matrixMode(TSGLContextBase.PROJECTION)\n\t\t\t\tgl.loadIdentity()\n\t\t\t\tgl.perspective(options.fov || 45, gl.canvas.width / gl.canvas.height,\n\t\t\t\t\toptions.near || 0.1, options.far || 1000)\n\t\t\t\tgl.matrixMode(TSGLContextBase.MODELVIEW)\n\t\t\t}\n\t\t}\n\n\t\twindow.addEventListener('resize', windowOnResize)\n\t\twindowOnResize()\n\t\treturn this\n\t}\n\n\tviewportFill() {\n\t\tthis.viewport(0, 0, this.canvas.width, this.canvas.height)\n\t}\n\n\tstatic create(options: Partial<GL.WebGLContextAttributes & {canvas: HTMLCanvasElement, throwOnError: boolean}> = {}): TSGLContext {\n\t\tconst canvas = options.canvas || document.createElement('canvas')\n\t\tif (!options.canvas) {\n\t\t\tcanvas.width = 800\n\t\t\tcanvas.height = 600\n\t\t}\n\t\tif (!('alpha' in options)) options.alpha = false\n\t\tlet newGL: any = undefined\n\t\ttry {\n\t\t\tnewGL = canvas.getContext('webgl2', options)\n\t\t\tnewGL && (newGL.version = 2)\n\t\t\tif (!newGL) {\n\t\t\t\tnewGL = (canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options))\n\t\t\t\tnewGL && (newGL.version = 1)\n\t\t\t}\n\t\t\tconsole.log('getting context')\n\t\t} catch (e) {\n\t\t\tconsole.log(e, 'Failed to get context')\n\t\t}\n\t\tif (!newGL) throw new Error('WebGL not supported')\n\t\tif (options.throwOnError) {\n\t\t\tnewGL = makeDebugContext(newGL, (err, funcName) => {\n\t\t\t\tthrow new Error(glEnumToString(err) + ' was caused by ' + funcName)\n\t\t\t})\n\t\t}\n\n\t\tTSGLContextBase.gl = newGL\n\t\taddOwnProperties(newGL, TSGLContextBase.prototype)\n\t\taddOwnProperties(newGL, new TSGLContextBase(newGL))\n\t\t//addEventListeners(newGL)\n\t\treturn newGL\n\t}\n}\nexport namespace TSGLContext {\n\t/**\n\t * `create()` creates a new WebGL context and augments it with more methods. The alpha channel is disabled\n\t * by default because it usually causes unintended transparencies in the canvas.\n\t */\n\texport const create = TSGLContextBase.create\n}\n\n// enum WGL_ERROR {\n// \tNO_ERROR = WGL.NO_ERROR,\n// \tINVALID_ENUM = WGL.INVALID_ENUM,\n// \tINVALID_VALUE = WGL.INVALID_VALUE,\n// \tINVALID_OPERATION = WGL.INVALID_OPERATION,\n// \tINVALID_FRAMEBUFFER_OPERATION = WGL.INVALID_FRAMEBUFFER_OPERATION,\n// \tOUT_OF_MEMORY = WGL.OUT_OF_MEMORY,\n// \tCONTEXT_LOST_WEBGL = WGL.CONTEXT_LOST_WEBGL,\n// }\n\nTSGLContextBase.prototype.MODELVIEW = TSGLContextBase.MODELVIEW\nTSGLContextBase.prototype.PROJECTION = TSGLContextBase.PROJECTION\nTSGLContextBase.prototype.HALF_FLOAT_OES = TSGLContextBase.HALF_FLOAT_OES\n\n\n/**\n *\n * Push two triangles:\n * c - d\n * | \\ |\n * a - b\n */\nexport function pushQuad(triangles: int[], flipped: boolean, a: int, b: int, c: int, d: int) {\n\tif (flipped) {\n\t\ttriangles.push(\n\t\t\ta, c, b,\n\t\t\tb, c, d)\n\t} else {\n\t\ttriangles.push(\n\t\t\ta, b, c,\n\t\t\tb, d, c)\n\t}\n}\n\nfunction hexIntToGLColor(color: int): GL_COLOR {\n\treturn [(color >> 16) / 255.0, ((color >> 8) & 0xff) / 255.0, (color & 0xff) / 255.0, 1.0]\n}\n","export const {\r\n\tabs,\r\n\tacos,\r\n\tacosh,\r\n\tasin,\r\n\tasinh,\r\n\tatan,\r\n\tatanh,\r\n\tatan2,\r\n\tceil,\r\n\tcbrt,\r\n\texpm1,\r\n\tclz32,\r\n\tcos,\r\n\tcosh,\r\n\texp,\r\n\tfloor,\r\n\tfround,\r\n\thypot,\r\n\timul,\r\n\tlog,\r\n\tlog1p,\r\n\tlog2,\r\n\tlog10,\r\n\tmax,\r\n\tmin,\r\n\tpow,\r\n\trandom,\r\n\tround,\r\n\tsign,\r\n\tsin,\r\n\tsinh,\r\n\tsqrt,\r\n\ttan,\r\n\ttanh,\r\n\ttrunc,\r\n\tE,\r\n\tLN10,\r\n\tLN2,\r\n\tLOG10E,\r\n\tLOG2E,\r\n\tPI,\r\n\tSQRT1_2,\r\n\tSQRT2,\r\n} = Math\r\n","import { Equalable } from 'javasetmap.ts'\r\nimport {\r\n\tAABB,\r\n\tarrayFromFunction,\r\n\tassert,\r\n\tassertNumbers,\r\n\tcallsce,\r\n\tclamp,\r\n\teq,\r\n\teq0,\r\n\tfuzzyUniquesF,\r\n\tgetIntervals,\r\n\tglqInSteps,\r\n\tint,\r\n\tle,\r\n\tM4,\r\n\tnewtonIterate2dWithDerivatives,\r\n\tnewtonIterateWithDerivative,\r\n\tNLA_PRECISION,\r\n\tTransformable,\r\n\tV,\r\n\tV3,\r\n} from 'ts3dutils'\r\n\r\nimport {\r\n\tcurvePointPP,\r\n\tfollowAlgorithm2d,\r\n\tfollowAlgorithmPP,\r\n\tISInfo,\r\n\tMathFunctionR2R,\r\n\tP3,\r\n\tParametricSurface,\r\n\tPPCurve,\r\n\tSurface,\r\n} from '../index'\r\n\r\nimport { abs, ceil, floor } from '../math'\r\n\r\nexport type ISInfo = { tThis: number; tOther: number; p: V3 }\r\n\r\nlet insideIsInfosWithCurve = false\r\n\r\nexport interface Curve {\r\n\t/**\r\n\t * Derivative of tangentAt for parameter t at t.\r\n\t */\r\n\tddt?(t: number): V3\r\n}\r\nexport abstract class Curve extends Transformable implements Equalable {\r\n\tstatic hlol = 0\r\n\ttIncrement!: number\r\n\thlol!: number;\r\n\treadonly ['constructor']: new (...args: any[]) => this\r\n\r\n\tconstructor(readonly tMin: number, readonly tMax: number) {\r\n\t\tsuper()\r\n\t\tassertNumbers(tMin, tMax)\r\n\t\tassert('number' == typeof tMin && !isNaN(tMin))\r\n\t\tassert('number' == typeof tMax && !isNaN(tMax))\r\n\t\tassert(tMin < tMax)\r\n\t}\r\n\r\n\tstatic integrate(curve: Curve, startT: number, endT: number, steps: int): number {\r\n\t\tconst step = (endT - startT) / steps\r\n\t\tlet length = 0\r\n\t\tlet p = curve.at(startT)\r\n\t\tlet i = 0,\r\n\t\t\tt = startT + step\r\n\t\tfor (; i < steps; i++, t += step) {\r\n\t\t\tconst next = curve.at(t)\r\n\t\t\tlength += p.distanceTo(next)\r\n\t\t\tp = next\r\n\t\t}\r\n\t\treturn length\r\n\t}\r\n\r\n\tstatic ispsRecursive(\r\n\t\tcurve1: Curve,\r\n\t\ttMin: number,\r\n\t\ttMax: number,\r\n\t\tcurve2: Curve,\r\n\t\tsMin: number,\r\n\t\tsMax: number,\r\n\t): ISInfo[] {\r\n\t\t// the recursive function finds good approximates for the intersection points\r\n\t\t// curve1 function uses newton iteration to improve the result as much as possible\r\n\t\tfunction handleStartTS(startT: number, startS: number) {\r\n\t\t\tif (!result.some(info => eq(info.tThis, startT) && eq(info.tOther, startS))) {\r\n\t\t\t\tconst f1 = (t: number, s: number) => curve1.tangentAt(t).dot(curve1.at(t).minus(curve2.at(s)))\r\n\t\t\t\tconst f2 = (t: number, s: number) => curve2.tangentAt(s).dot(curve1.at(t).minus(curve2.at(s)))\r\n\t\t\t\t// f = (b1, b2, t1, t2) = b1.tangentAt(t1).dot(b1.at(t1).minus(b2.at(t2)))\r\n\t\t\t\tconst dfdt1 = (b1: Curve, b2: Curve, t1: number, t2: number) =>\r\n\t\t\t\t\tb1.ddt!(t1).dot(b1.at(t1).minus(b2.at(t2))) + b1.tangentAt(t1).squared()\r\n\t\t\t\tconst dfdt2 = (b1: Curve, b2: Curve, t1: number, t2: number) => -b1.tangentAt(t1).dot(b2.tangentAt(t2))\r\n\t\t\t\tconst ni = newtonIterate2dWithDerivatives(\r\n\t\t\t\t\tf1,\r\n\t\t\t\t\tf2,\r\n\t\t\t\t\tstartT,\r\n\t\t\t\t\tstartS,\r\n\t\t\t\t\t16,\r\n\t\t\t\t\tdfdt1.bind(undefined, curve1, curve2),\r\n\t\t\t\t\tdfdt2.bind(undefined, curve1, curve2),\r\n\t\t\t\t\t(t, s) => -dfdt2(curve2, curve1, s, t),\r\n\t\t\t\t\t(t, s) => -dfdt1(curve2, curve1, s, t),\r\n\t\t\t\t)!\r\n\t\t\t\tassert(isFinite(ni.x))\r\n\t\t\t\tassert(isFinite(ni.y))\r\n\t\t\t\tif (ni == undefined) console.log(startT, startS, curve1.sce, curve2.sce)\r\n\t\t\t\tresult.push({ tThis: ni.x, tOther: ni.y, p: curve1.at(ni.x) })\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// returns whether an intersection was immediately found (i.e. without further recursion)\r\n\t\tfunction findRecursive(\r\n\t\t\ttMin: number,\r\n\t\t\ttMax: number,\r\n\t\t\tsMin: number,\r\n\t\t\tsMax: number,\r\n\t\t\tcurve1AABB: AABB,\r\n\t\t\tcurve2AABB: AABB,\r\n\t\t\tdepth = 0,\r\n\t\t) {\r\n\t\t\tconst EPS = NLA_PRECISION\r\n\t\t\tif (curve1AABB.fuzzyTouchesAABB(curve2AABB)) {\r\n\t\t\t\tconst tMid = (tMin + tMax) / 2\r\n\t\t\t\tconst sMid = (sMin + sMax) / 2\r\n\t\t\t\tif (Math.abs(tMax - tMin) < EPS || Math.abs(sMax - sMin) < EPS) {\r\n\t\t\t\t\thandleStartTS(tMid, sMid)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst curve1AABBleft = curve1.getAABB(tMin, tMid)\r\n\t\t\t\t\tconst curve2AABBleft = curve2.getAABB(sMin, sMid)\r\n\t\t\t\t\tlet curve1AABBright, curve2AABBright\r\n\t\t\t\t\t// if one of the following calls immediately finds an intersection, we don't want to call the others\r\n\t\t\t\t\t// as that will lead to the same intersection being output multiple times\r\n\t\t\t\t\tfindRecursive(tMin, tMid, sMin, sMid, curve1AABBleft, curve2AABBleft, depth + 1) ||\r\n\t\t\t\t\t\tfindRecursive(\r\n\t\t\t\t\t\t\ttMin,\r\n\t\t\t\t\t\t\ttMid,\r\n\t\t\t\t\t\t\tsMid,\r\n\t\t\t\t\t\t\tsMax,\r\n\t\t\t\t\t\t\tcurve1AABBleft,\r\n\t\t\t\t\t\t\t(curve2AABBright = curve2.getAABB(sMid, sMax)),\r\n\t\t\t\t\t\t\tdepth + 1,\r\n\t\t\t\t\t\t) ||\r\n\t\t\t\t\t\tfindRecursive(\r\n\t\t\t\t\t\t\ttMid,\r\n\t\t\t\t\t\t\ttMax,\r\n\t\t\t\t\t\t\tsMin,\r\n\t\t\t\t\t\t\tsMid,\r\n\t\t\t\t\t\t\t(curve1AABBright = curve1.getAABB(tMid, tMax)),\r\n\t\t\t\t\t\t\tcurve2AABBleft,\r\n\t\t\t\t\t\t\tdepth + 1,\r\n\t\t\t\t\t\t) ||\r\n\t\t\t\t\t\tfindRecursive(tMid, tMax, sMid, sMax, curve1AABBright, curve2AABBright, depth + 1)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false\r\n\t\t}\r\n\r\n\t\tconst result: ISInfo[] = []\r\n\t\tfindRecursive(tMin, tMax, sMin, sMax, curve1.getAABB(tMin, tMax), curve2.getAABB(sMin, sMax))\r\n\t\treturn fuzzyUniquesF(result, info => info.tThis)\r\n\t}\r\n\r\n\t/**\r\n\t * Searches a 2d area for (an) implicit curve(s).\r\n\t * @param implicitCurve\r\n\t * @param bounds Defines area to search.\r\n\t * @param sStep Granularity of search in s-direction.\r\n\t * @param tStep Granularity of search in t-direction.\r\n\t * @param stepSize step size to take along the curve\r\n\t * @return\r\n\t */\r\n\tstatic breakDownIC(\r\n\t\timplicitCurve: MathFunctionR2R,\r\n\t\tbounds: AABB2,\r\n\t\tsStep: number,\r\n\t\ttStep: number,\r\n\t\tstepSize: number,\r\n\t\tvalidST: R2<boolean>,\r\n\t): { points: V3[]; tangents: V3[] }[] {\r\n\t\t//undefined == dids && (dids = (s, t) => (implicitCurve(s + EPS, t) - implicitCurve(s, t)) / EPS)\r\n\t\t//undefined == didt && (didt = (s, t) => (implicitCurve(s, t + EPS) - implicitCurve(s, t)) / EPS)\r\n\r\n\t\tconst { sMin, sMax, tMin, tMax } = bounds\r\n\t\tconst deltaS = sMax - sMin,\r\n\t\t\tdeltaT = tMax - tMin\r\n\t\tconst sRes = ceil(deltaS / sStep),\r\n\t\t\ttRes = ceil(deltaT / tStep)\r\n\t\tconst grid = new Array(sRes * tRes).fill(0)\r\n\t\t// const printGrid = () =>\r\n\t\t// \tconsole.log(\r\n\t\t// \t\tarrayFromFunction(tRes, i =>\r\n\t\t// \t\t\tgrid\r\n\t\t// \t\t\t\t.slice(sRes * i, sRes * (i + 1))\r\n\t\t// \t\t\t\t.map(v => (v ? 'X' : '_'))\r\n\t\t// \t\t\t\t.join(''),\r\n\t\t// \t\t).join('\\n'),\r\n\t\t// \t)\r\n\t\tconst get = (i: int, j: int) => grid[j * sRes + i]\r\n\t\tconst set = (i: int, j: int) => 0 <= i && i < sRes && 0 <= j && j < tRes && (grid[j * sRes + i] = 1)\r\n\t\tconst result: { points: V3[]; tangents: V3[] }[] = []\r\n\t\tconst logTable = []\r\n\t\tfor (let i = 0; i < sRes; i++) {\r\n\t\t\tsearch: for (let j = 0; j < tRes; j++) {\r\n\t\t\t\tif (get(i, j)) continue\r\n\t\t\t\tset(i, j)\r\n\t\t\t\tlet s = sMin + (i + 0.5) * sStep,\r\n\t\t\t\t\tt = tMin + (j + 0.5) * tStep\r\n\t\t\t\tconst startS = s,\r\n\t\t\t\t\tstartT = t\r\n\t\t\t\t// basically curvePoint\r\n\t\t\t\tfor (let k = 0; k < 8; k++) {\r\n\t\t\t\t\tconst fp = implicitCurve(s, t)\r\n\t\t\t\t\tconst dfpdx = implicitCurve.x(s, t),\r\n\t\t\t\t\t\tdfpdy = implicitCurve.y(s, t)\r\n\t\t\t\t\tif (0 === dfpdx ** 2 + dfpdy ** 2) {\r\n\t\t\t\t\t\t// top of a hill, keep looking\r\n\t\t\t\t\t\tcontinue search\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst scale = fp / (dfpdx ** 2 + dfpdy ** 2)\r\n\t\t\t\t\ts -= scale * dfpdx\r\n\t\t\t\t\tt -= scale * dfpdy\r\n\t\t\t\t}\r\n\t\t\t\tconst li = floor((s - sMin) / sStep),\r\n\t\t\t\t\tlj = floor((t - tMin) / tStep)\r\n\t\t\t\tlogTable.push({\r\n\t\t\t\t\ti,\r\n\t\t\t\t\tj,\r\n\t\t\t\t\tli,\r\n\t\t\t\t\tlj,\r\n\t\t\t\t\tstartS,\r\n\t\t\t\t\tstartT,\r\n\t\t\t\t\ts,\r\n\t\t\t\t\tt,\r\n\t\t\t\t\t'bounds(s, t)': stInAABB2(bounds, s, t),\r\n\t\t\t\t\t'ic(s,t)': implicitCurve(s, t),\r\n\t\t\t\t})\r\n\t\t\t\tif (!(i == li && j == lj) && get(li, lj)) {\r\n\t\t\t\t\tcontinue search\r\n\t\t\t\t}\r\n\t\t\t\tset(li, lj)\r\n\t\t\t\t// s, t are now good starting coordinates to use follow algorithm\r\n\t\t\t\tif (stInAABB2(bounds, s, t) && validST(s, t) && eq0(implicitCurve(s, t))) {\r\n\t\t\t\t\tconst subResult = mkcurves(implicitCurve, s, t, stepSize, bounds, validST)\r\n\t\t\t\t\tfor (const curveData of subResult) {\r\n\t\t\t\t\t\tassert(curveData.points.length > 2)\r\n\t\t\t\t\t\tfor (const { x, y } of curveData.points) {\r\n\t\t\t\t\t\t\tconst lif = (x - sMin) / sStep,\r\n\t\t\t\t\t\t\t\tljf = (y - tMin) / tStep\r\n\t\t\t\t\t\t\tset((lif - 0.5) | 0, (ljf - 0.5) | 0)\r\n\t\t\t\t\t\t\tset((lif - 0.5) | 0, (ljf + 0.5) | 0)\r\n\t\t\t\t\t\t\tset((lif + 0.5) | 0, (ljf - 0.5) | 0)\r\n\t\t\t\t\t\t\tset((lif + 0.5) | 0, (ljf + 0.5) | 0)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//printGrid()\r\n\t\t\t\t\tresult.push(...subResult)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.table(logTable)\r\n\t\tfor (const { points } of result) {\r\n\t\t\tfor (let i = 0; i < points.length - 1; i++) {\r\n\t\t\t\tassert(!points[i].equals(points[i + 1]))\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn this.toSource()\r\n\t}\r\n\r\n\ttoSource(rounder: (x: number) => number = x => x): string {\r\n\t\treturn callsce.call(undefined, 'new ' + this.constructor.name, ...this.getConstructorParameters())\r\n\t}\r\n\r\n\tabstract getConstructorParameters(): any[]\r\n\r\n\twithBounds<T extends Curve>(this: T, tMin = this.tMin, tMax = this.tMax): T {\r\n\t\tassert(this.tMin <= tMin && tMin <= this.tMax)\r\n\t\tassert(this.tMin <= tMax && tMax <= this.tMax)\r\n\t\tassert(this.tMin <= tMax && tMax <= this.tMax)\r\n\t\treturn new this.constructor(...this.getConstructorParameters().slice(0, -2), tMin, tMax)\r\n\t}\r\n\r\n\t/**\r\n\t * Curve parameter t for point p on curve.\r\n\t */\r\n\tabstract pointT(p: V3, tMin?: number, tMax?: number): number\r\n\r\n\t/**\r\n\t * The point on the line that is closest to the given point.\r\n\t */\r\n\tclosestPointToPoint(p: V3): V3 {\r\n\t\treturn this.at(this.closestTToPoint(p))\r\n\t}\r\n\r\n\tisValidT(t: number): boolean {\r\n\t\treturn le(this.tMin, t) && le(t, this.tMax)\r\n\t}\r\n\r\n\tdiff(t: number, eps: number): V3 {\r\n\t\treturn this.at(t).to(this.at(t + eps))\r\n\t}\r\n\r\n\t// TODO: tmin/tmax first\r\n\tclosestTToPoint(p: V3, tStart?: number, tMin = this.tMin, tMax = this.tMax): number {\r\n\t\t// this.at(t) has minimal distance to p when this.tangentAt(t) is perpendicular to\r\n\t\t// the vector between this.at(t) and p. This is the case iff the dot product of the two is 0.\r\n\t\t// f = (this.at(t) - p) . (this.tangentAt(t)\r\n\t\t// df = this.tangentAt(t) . this.tangentAt(t) + (this.at(t) - p) . this.ddt(t)\r\n\t\t//    = this.tangentAt(t)² + (this.at(t) - p) . this.ddt(t)\r\n\t\tconst f = (t: number) =>\r\n\t\t\tthis.at(t)\r\n\t\t\t\t.minus(p)\r\n\t\t\t\t.dot(this.tangentAt(t)) // 5th degree polynomial\r\n\t\tconst df = (t: number) =>\r\n\t\t\tthis.tangentAt(t).squared() +\r\n\t\t\tthis.at(t)\r\n\t\t\t\t.minus(p)\r\n\t\t\t\t.dot(this.ddt!(t))\r\n\t\t//checkDerivate(f, df, tMin, tMax)\r\n\r\n\t\tconst STEPS = 32\r\n\t\tif (undefined === tStart) {\r\n\t\t\ttStart = arrayFromFunction(STEPS, i => tMin + (tMax - tMin) * i / (STEPS - 1)).withMax(\r\n\t\t\t\tt => -this.at(t).distanceTo(p),\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn newtonIterateWithDerivative(f, tStart, 16, df)\r\n\t}\r\n\r\n\t/**\r\n\t * So different edges on the same curve do not have different vertices, they are always generated\r\n\t * on fixed points this.at(k * this.tIncrement), with k taking integer values\r\n\t *\r\n\t */\r\n\tcalcSegmentPoints(aT: number, bT: number, a: V3, b: V3, reversed: boolean, includeFirst: boolean): V3[] {\r\n\t\tassert(this.tIncrement, 'tIncrement not defined on ' + this)\r\n\t\tconst inc = this.tIncrement\r\n\t\tconst result = []\r\n\t\tif (includeFirst) result.push(a)\r\n\t\tassert(reversed != aT < bT)\r\n\t\tif (aT < bT) {\r\n\t\t\tconst start = Math.ceil((aT + NLA_PRECISION) / inc)\r\n\t\t\tconst end = Math.floor((bT - NLA_PRECISION) / inc)\r\n\t\t\tfor (let i = start; i <= end; i++) {\r\n\t\t\t\tresult.push(this.at(i * inc))\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst start = Math.floor((aT - NLA_PRECISION) / inc)\r\n\t\t\tconst end = Math.ceil((bT + NLA_PRECISION) / inc)\r\n\t\t\tfor (let i = start; i >= end; i--) {\r\n\t\t\t\tresult.push(this.at(i * inc))\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult.push(b)\r\n\t\treturn result\r\n\t}\r\n\r\n\tcalcSegmentTs(aT: number, bT: number, reversed: boolean, includeFirst: boolean): number[] {\r\n\t\tassert(this.tIncrement, 'tIncrement not defined on ' + this)\r\n\t\tconst inc = this.tIncrement\r\n\t\tconst result = []\r\n\t\tif (includeFirst) result.push(aT)\r\n\t\tassert(reversed != aT < bT)\r\n\t\tif (aT < bT) {\r\n\t\t\tconst start = Math.ceil((aT + NLA_PRECISION) / inc)\r\n\t\t\tconst end = Math.floor((bT - NLA_PRECISION) / inc)\r\n\t\t\tfor (let i = start; i <= end; i++) {\r\n\t\t\t\tresult.push(i * inc)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst start = Math.floor((aT - NLA_PRECISION) / inc)\r\n\t\t\tconst end = Math.ceil((bT + NLA_PRECISION) / inc)\r\n\t\t\tfor (let i = start; i >= end; i--) {\r\n\t\t\t\tresult.push(i * inc)\r\n\t\t\t}\r\n\t\t}\r\n\t\tresult.push(bT)\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param p\r\n\t * @param tStart Defines interval with tEnd in which a start value for t will be searched.\r\n\t * Result is not necessarily in this interval.\r\n\t * @param tEnd\r\n\t */\r\n\tdistanceToPoint(p: V3, tStart?: number, tEnd?: number) {\r\n\t\tconst closestT = this.closestTToPoint(p, tStart, tEnd)\r\n\t\treturn this.at(closestT).distanceTo(p)\r\n\t}\r\n\r\n\tasSegmentDistanceToPoint(p: V3, tStart: number, tEnd: number) {\r\n\t\tlet t = this.closestTToPoint(p, tStart, tEnd)\r\n\t\tt = clamp(t, tStart, tEnd)\r\n\t\treturn this.at(t).distanceTo(p)\r\n\t}\r\n\r\n\t/**\r\n\t * Behavior when curves are colinear: self intersections\r\n\t */\r\n\tisInfosWithCurve(curve: Curve): ISInfo[] {\r\n\t\tif (insideIsInfosWithCurve) {\r\n\t\t\treturn Curve.ispsRecursive(this, this.tMin, this.tMax, curve, curve.tMin, curve.tMax)\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tinsideIsInfosWithCurve = true\r\n\t\t\t\tconst infos = curve.isInfosWithCurve(this)\r\n\t\t\t\treturn infos.map(info => {\r\n\t\t\t\t\tassert(info)\r\n\t\t\t\t\tconst { tThis, tOther, p } = info\r\n\t\t\t\t\treturn { tOther: tThis, tThis: tOther, p }\r\n\t\t\t\t})\r\n\t\t\t} finally {\r\n\t\t\t\tinsideIsInfosWithCurve = false\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Curve point at parameter t.\r\n\t */\r\n\tabstract at(t: number): V3\r\n\r\n\t/**\r\n\t * Tangent of curve at parameter t. This is also the first derivative of {@see at}\r\n\t */\r\n\tabstract tangentAt(t: number): V3\r\n\r\n\tabstract containsPoint(p: V3): boolean\r\n\r\n\tabstract isInfosWithLine(\r\n\t\tanchorWC: V3,\r\n\t\tdirWC: V3,\r\n\t\ttMin?: number,\r\n\t\ttMax?: number,\r\n\t\tlineMin?: number,\r\n\t\tlineMax?: number,\r\n\t): ISInfo[]\r\n\r\n\tabstract transform(m4: M4, desc?: string): this\r\n\r\n\tabstract isTsWithSurface(surface: Surface): number[]\r\n\r\n\tabstract isTsWithPlane(plane: P3): number[]\r\n\r\n\tarcLength(startT: number, endT: number, steps: int = 1): number {\r\n\t\tassert(startT < endT, 'startT < endT')\r\n\t\treturn glqInSteps(t => this.tangentAt(t).length(), startT, endT, steps)\r\n\t}\r\n\r\n\t/**\r\n\t * iff for any t, this.at(t) == curve.at(t)\r\n\t */\r\n\tabstract likeCurve(curve: Curve): boolean\r\n\r\n\tabstract equals(obj: any): boolean\r\n\r\n\tabstract hashCode(): int\r\n\r\n\t/**\r\n\t * Return whether the curves occupy the same points in space. They do\r\n\t * not necessarily need to share the same parameter values.\r\n\t *\r\n\t *\r\n\t * iff for every t, there is an s so that this.at(t) == curve.at(s)\r\n\t * and for every s, there is a t so that curve.at(s) == this.a(t)\r\n\t */\r\n\tabstract isColinearTo(curve: Curve): boolean\r\n\r\n\tgetAABB(tMin = this.tMin, tMax = this.tMax): AABB {\r\n\t\ttMin = isFinite(tMin) ? tMin : this.tMin\r\n\t\ttMax = isFinite(tMax) ? tMax : this.tMax\r\n\t\tconst tMinAt = this.at(tMin),\r\n\t\t\ttMaxAt = this.at(tMax)\r\n\t\tconst roots = this.roots()\r\n\t\tconst mins = new Array(3),\r\n\t\t\tmaxs = new Array(3)\r\n\t\tfor (let dim = 0; dim < 3; dim++) {\r\n\t\t\tconst tRoots = roots[dim]\r\n\t\t\tmins[dim] = Math.min(tMinAt.e(dim), tMaxAt.e(dim))\r\n\t\t\tmaxs[dim] = Math.max(tMinAt.e(dim), tMaxAt.e(dim))\r\n\t\t\tfor (const tRoot of tRoots) {\r\n\t\t\t\tif (tMin < tRoot && tRoot < tMax) {\r\n\t\t\t\t\tmins[dim] = Math.min(mins[dim], this.at(tRoot).e(dim))\r\n\t\t\t\t\tmaxs[dim] = Math.max(maxs[dim], this.at(tRoot).e(dim))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new AABB(V3.fromArray(mins), V3.fromArray(maxs))\r\n\t}\r\n\r\n\t/**\r\n\t * Calculates, for each dimension individually, the parameters at which the curve has\r\n\t * local extrema. This is mainly used for calculating the AABB of the curve.\r\n\t * @returns {number[][]}\r\n\t */\r\n\tabstract roots(): number[][]\r\n\r\n\treversed(): Curve {\r\n\t\tthrow new Error()\r\n\t}\r\n\r\n\tclipPlane(plane: P3): Curve[] {\r\n\t\tconst ists = this.isTsWithPlane(plane).filter(ist => this.tMin <= ist && ist <= this.tMax)\r\n\t\treturn getIntervals(ists, this.tMin, this.tMax).mapFilter(([a, b]) => {\r\n\t\t\tconst midT = (a + b) / 2\r\n\t\t\treturn !eq(a, b) && plane.distanceToPointSigned(this.at(midT)) < 0 && this.withBounds(a, b)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction mkcurves(\r\n\timplicitCurve: MathFunctionR2R,\r\n\tsStart: number,\r\n\ttStart: number,\r\n\tstepSize: number,\r\n\tbounds: AABB2,\r\n\tvalidST: R2<boolean>,\r\n): { points: V3[]; tangents: V3[] }[] {\r\n\tconst start = V(sStart, tStart)\r\n\tassert(stepSize > 0)\r\n\t// checkDerivate(s => implicitCurve(s, 0), s => dids(s, 0), -1, 1, 0)\r\n\t// checkDerivate(t => implicitCurve(0, t), t => didt(0, t), -1, 1, 0)\r\n\tconst { points, tangents } = followAlgorithm2d(implicitCurve, start, stepSize, bounds, validST)\r\n\tif (points.length > 4 && points[0].distanceTo(points.last) <= abs(stepSize)) {\r\n\t\t// this is a loop: split it\r\n\t\tfor (let i = 0; i < points.length - 1; i++) {\r\n\t\t\tassert(!points[i].equals(points[i + 1]))\r\n\t\t}\r\n\t\tconst half = floor(points.length / 2)\r\n\t\tconst points1 = points.slice(0, half),\r\n\t\t\tpoints2 = points.slice(half - 1, points.length)\r\n\t\tconst tangents1 = tangents.slice(0, half),\r\n\t\t\ttangents2 = tangents.slice(half - 1, tangents.length)\r\n\t\t//tangents2[tangents2.length - 1] = tangents1[0]\r\n\t\t//points2[tangents2.length - 1] = points1[0]\r\n\t\tfor (let i = 0; i < points1.length - 1; i++) {\r\n\t\t\tassert(!points1[i].equals(points1[i + 1]))\r\n\t\t}\r\n\t\tfor (let i = 0; i < points2.length - 1; i++) {\r\n\t\t\tassert(!points2[i].equals(points2[i + 1]))\r\n\t\t}\r\n\t\treturn [{ points: points1, tangents: tangents1 }, { points: points2, tangents: tangents2 }]\r\n\t} else {\r\n\t\t// not a loop: check in the other direction\r\n\t\tconst { points: reversePoints, tangents: reverseTangents } = followAlgorithm2d(\r\n\t\t\timplicitCurve,\r\n\t\t\tstart,\r\n\t\t\t-stepSize,\r\n\t\t\tbounds,\r\n\t\t\tvalidST,\r\n\t\t)\r\n\t\tconst result = followAlgorithm2d(\r\n\t\t\timplicitCurve,\r\n\t\t\treversePoints.last,\r\n\t\t\tstepSize,\r\n\t\t\tbounds,\r\n\t\t\tvalidST,\r\n\t\t\tundefined,\r\n\t\t\treverseTangents.last.negated(),\r\n\t\t)\r\n\t\tassert(result.points.length > 2)\r\n\t\treturn [result]\r\n\t}\r\n}\r\n\r\nexport function breakDownPPCurves(\r\n\tps1: ParametricSurface,\r\n\tps2: ParametricSurface,\r\n\tsStep: number,\r\n\ttStep: number,\r\n\tstepSize: number,\r\n): Curve[] {\r\n\tconst { sMin, sMax, tMin, tMax } = ps1\r\n\tconst bounds = stInAABB2.bind(undefined, ps1)\r\n\tconst bounds2 = stInAABB2.bind(undefined, ps2)\r\n\tconst deltaS = sMax - sMin,\r\n\t\tdeltaT = tMax - tMin\r\n\tconst sRes = ceil(deltaS / sStep),\r\n\t\ttRes = ceil(deltaT / tStep)\r\n\tconst grid = new Array(sRes * tRes).fill(0)\r\n\t//const printGrid = () => console.log(arrayFromFunction(tRes, i => grid.slice(sRes * i, sRes * (i + 1)).map(v => v ? 'X' : '_').join('')).join('\\n'))\r\n\tconst at = (i: int, j: int) => grid[j * sRes + i]\r\n\tconst set = (i: int, j: int) => 0 <= i && i < sRes && 0 <= j && j < tRes && (grid[j * sRes + i] = 1)\r\n\tconst result: { points: V3[]; tangents: V3[]; st1s: V3[] }[] = []\r\n\tconst logTable = []\r\n\tfor (let i = 0; i < sRes; i++) {\r\n\t\tsearch: for (let j = 0; j < tRes; j++) {\r\n\t\t\tif (at(i, j)) continue\r\n\t\t\tset(i, j)\r\n\t\t\tconst startS = sMin + (i + 0.5) * sStep,\r\n\t\t\t\tstartT = tMin + (j + 0.5) * tStep\r\n\t\t\t// assume point is valid, currently (TODO)\r\n\t\t\tconst curvePointPPResult = curvePointPP(ps1, ps2, ps1.pST(startS, startT))\r\n\t\t\tif (undefined === curvePointPPResult) {\r\n\t\t\t\tcontinue search\r\n\t\t\t}\r\n\t\t\tconst { p: startP, st1: { x: s, y: t }, st2: { x: s2, y: t2 } } = curvePointPPResult\r\n\t\t\tconst li = floor((s - sMin) / sStep),\r\n\t\t\t\tlj = floor((t - tMin) / tStep)\r\n\t\t\tlogTable.push({\r\n\t\t\t\ti,\r\n\t\t\t\tj,\r\n\t\t\t\tli,\r\n\t\t\t\tlj,\r\n\t\t\t\tstartS,\r\n\t\t\t\tstartT,\r\n\t\t\t\ts,\r\n\t\t\t\tt,\r\n\t\t\t\t'bounds(s, t)': bounds(s, t),\r\n\t\t\t})\r\n\t\t\tif (!(i == li && j == lj) && at(li, lj)) {\r\n\t\t\t\tcontinue search\r\n\t\t\t}\r\n\t\t\tset(li, lj)\r\n\t\t\t// s, t are now good starting coordinates to use follow algorithm\r\n\t\t\tif (bounds(s, t) && bounds2(s2, t2)) {\r\n\t\t\t\tconsole.log(V(s, t).sce)\r\n\t\t\t\tconst subResult = mkPPCurves(ps1, ps2, startP, stepSize, bounds, bounds2)\r\n\t\t\t\tfor (const curveData of subResult) {\r\n\t\t\t\t\tassert(curveData.st1s.length > 2)\r\n\t\t\t\t\tfor (const { x, y } of curveData.st1s) {\r\n\t\t\t\t\t\tconst lif = (x - sMin) / sStep,\r\n\t\t\t\t\t\t\tljf = (y - tMin) / tStep\r\n\t\t\t\t\t\tset((lif - 0.5) | 0, (ljf - 0.5) | 0)\r\n\t\t\t\t\t\tset((lif - 0.5) | 0, (ljf + 0.5) | 0)\r\n\t\t\t\t\t\tset((lif + 0.5) | 0, (ljf - 0.5) | 0)\r\n\t\t\t\t\t\tset((lif + 0.5) | 0, (ljf + 0.5) | 0)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t//printGrid()\r\n\t\t\t\tresult.push(...subResult)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tconsole.table(logTable)\r\n\tfor (const { points } of result) {\r\n\t\tfor (let i = 0; i < points.length - 1; i++) {\r\n\t\t\tassert(!points[i].equals(points[i + 1]))\r\n\t\t}\r\n\t}\r\n\treturn result.map(({ points, tangents, st1s }) => {\r\n\t\treturn new PPCurve(points, tangents, ps1, ps2, st1s, undefined, stepSize, 1)\r\n\t})\r\n}\r\n\r\nfunction mkPPCurves(\r\n\tps1: ParametricSurface,\r\n\tps2: ParametricSurface,\r\n\tstartPoint: V3,\r\n\tstepSize: number,\r\n\tbounds1: (s: number, t: number) => boolean,\r\n\tbounds2: (s: number, t: number) => boolean,\r\n): { points: V3[]; tangents: V3[]; st1s: V3[] }[] {\r\n\t// checkDerivate(s => implicitCurve(s, 0), s => dids(s, 0), -1, 1, 0)\r\n\t// checkDerivate(t => implicitCurve(0, t), t => didt(0, t), -1, 1, 0)\r\n\tconst { points, tangents, st1s } = followAlgorithmPP(ps1, ps2, startPoint, stepSize, bounds1, bounds2)\r\n\tif (points[0].distanceTo(points.last) < stepSize && points.length > 2) {\r\n\t\t// this is a loop: split it\r\n\t\tfor (let i = 0; i < points.length - 1; i++) {\r\n\t\t\tassert(!points[i].equals(points[i + 1]))\r\n\t\t}\r\n\t\tconst half = floor(points.length / 2)\r\n\t\tconst points1 = points.slice(0, half),\r\n\t\t\tpoints2 = points.slice(half - 1, points.length)\r\n\t\tconst tangents1 = tangents.slice(0, half),\r\n\t\t\ttangents2 = tangents.slice(half - 1, tangents.length)\r\n\t\tconst st1s1 = st1s.slice(0, half),\r\n\t\t\tst1s2 = st1s.slice(half - 1, tangents.length)\r\n\t\ttangents2[tangents2.length - 1] = tangents1[0]\r\n\t\tpoints2[tangents2.length - 1] = points1[0]\r\n\t\tst1s2[tangents2.length - 1] = st1s1[0]\r\n\t\tfor (let i = 0; i < points1.length - 1; i++) {\r\n\t\t\tassert(!points1[i].equals(points1[i + 1]))\r\n\t\t}\r\n\t\tfor (let i = 0; i < points2.length - 1; i++) {\r\n\t\t\tassert(!points2[i].equals(points2[i + 1]))\r\n\t\t}\r\n\t\treturn [\r\n\t\t\t{ points: points1, tangents: tangents1, st1s: st1s1 },\r\n\t\t\t{ points: points2, tangents: tangents2, st1s: st1s2 },\r\n\t\t]\r\n\t} else {\r\n\t\t// not a loop: check in the other direction\r\n\t\tconst { points: reversePoints } = followAlgorithmPP(ps1, ps2, startPoint, -stepSize, bounds1, bounds2)\r\n\t\tconst result = followAlgorithmPP(ps1, ps2, reversePoints.last, stepSize, bounds1, bounds2)\r\n\t\tassert(result.points.length > 2)\r\n\t\treturn [result]\r\n\t}\r\n}\r\n\r\nexport type R2_R = (s: number, t: number) => number\r\nexport type R2<R> = (s: number, t: number) => R\r\n\r\nexport interface AABB2 {\r\n\tsMin: number\r\n\tsMax: number\r\n\ttMin: number\r\n\ttMax: number\r\n}\r\n\r\nexport function AABB2(sMin: number, sMax: number, tMin: number, tMax: number): AABB2 {\r\n\treturn { sMin, sMax, tMin, tMax }\r\n}\r\n\r\nexport function stInAABB2(aabb2: AABB2, s: number, t: number) {\r\n\treturn aabb2.sMin <= s && s <= aabb2.sMax && aabb2.tMin <= t && t <= aabb2.tMax\r\n}\r\n\r\nexport function curvePoint(implicitCurve: R2_R, startPoint: V3, dids: R2_R, didt: R2_R) {\r\n\tlet p = startPoint\r\n\tfor (let i = 0; i < 8; i++) {\r\n\t\tconst fp = implicitCurve(p.x, p.y)\r\n\t\tconst dfpdx = dids(p.x, p.y),\r\n\t\t\tdfpdy = didt(p.x, p.y)\r\n\t\tconst scale = fp / (dfpdx * dfpdx + dfpdy * dfpdy)\r\n\t\tp = p.minus(new V3(scale * dfpdx, scale * dfpdy, 0))\r\n\t}\r\n\treturn p\r\n}\r\n\r\nexport function curvePointMF(mf: MathFunctionR2R, startPoint: V3, steps: int = 8, eps: number = 1 / (1 << 30)) {\r\n\tlet p = startPoint\r\n\tfor (let i = 0; i < steps; i++) {\r\n\t\tconst fp = mf(p.x, p.y)\r\n\t\tconst dfpdx = mf.x(p.x, p.y),\r\n\t\t\tdfpdy = mf.y(p.x, p.y)\r\n\t\tconst scale = fp / (dfpdx * dfpdx + dfpdy * dfpdy)\r\n\t\tp = p.minus(new V3(scale * dfpdx, scale * dfpdy, 0))\r\n\t\tif (abs(fp) <= eps) break\r\n\t}\r\n\treturn p\r\n}\r\n","import {\r\n\tarrayFromFunction,\r\n\tassertInst,\r\n\tassertNumbers,\r\n\tassertVectors,\r\n\teq0,\r\n\thasConstructor,\r\n\tint,\r\n\tM4,\r\n\tNLA_PRECISION,\r\n\tTAU,\r\n\tV,\r\n\tV3,\r\n} from 'ts3dutils'\r\nimport { Mesh, pushQuad } from 'tsgl'\r\n\r\nimport {\r\n\tBezierCurve,\r\n\tConicSurface,\r\n\tCurve,\r\n\tISInfo,\r\n\tL3,\r\n\tP3,\r\n\tPlaneSurface,\r\n\tProjectedCurveSurface,\r\n\tSemiEllipsoidSurface,\r\n\tSurface,\r\n} from '../index'\r\n\r\nimport { PI } from '../math'\r\n\r\nexport abstract class XiEtaCurve extends Curve {\r\n\treadonly normal: V3\r\n\treadonly matrix: M4\r\n\treadonly matrixInverse: M4;\r\n\treadonly ['constructor']: typeof XiEtaCurve & (new (center: V3, f1: V3, f2: V3, tMin: number, tMax: number) => this)\r\n\r\n\tconstructor(\r\n\t\treadonly center: V3,\r\n\t\treadonly f1: V3,\r\n\t\treadonly f2: V3,\r\n\t\treadonly tMin: number = -PI,\r\n\t\treadonly tMax: number = PI,\r\n\t) {\r\n\t\tsuper(tMin, tMax)\r\n\t\tassertVectors(center, f1, f2)\r\n\t\tthis.normal = f1.cross(f2)\r\n\t\tif (!this.normal.likeO()) {\r\n\t\t\tthis.normal = this.normal.unit()\r\n\t\t\tthis.matrix = M4.forSys(f1, f2, this.normal, center)\r\n\t\t\tthis.matrixInverse = this.matrix.inversed()\r\n\t\t} else {\r\n\t\t\tthis.matrix = M4.forSys(f1, f2, f1.unit(), center)\r\n\t\t\tconst f1p = f1.getPerpendicular()\r\n\t\t\t// prettier-ignore\r\n\t\t\tthis.matrixInverse = new M4(\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 0, 0, 0,\r\n\t\t\t\t0, 0, 0, 0,\r\n\t\t\t\t0, 0, 0, 1).times(M4.forSys(f1, f1p, f1.cross(f1p), center).inversed())\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Intersection of the unit curve with the line ax + by = c.\r\n\t */\r\n\tstatic intersectionUnitLine(a: number, b: number, c: number, tMin?: number, tMax?: number): number[] {\r\n\t\tthrow new Error('abstract')\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new EllipseCurve representing an ellipse parallel to the XY-plane\r\n\t * with semi-major/minor axes parallel t the X and Y axes.\r\n\t *\r\n\t * @param a length of the axis parallel to X axis.\r\n\t * @param b length of the axis parallel to Y axis.\r\n\t * @param center center of the ellipse.\r\n\t */\r\n\tstatic forAB(a: number, b: number, center: V3 = V3.O): XiEtaCurve {\r\n\t\treturn new (this as any)(center, V(a, 0, 0), V(0, b, 0))\r\n\t}\r\n\r\n\tstatic XYLCValid(pLC: V3): boolean {\r\n\t\tthrow new Error('abstract')\r\n\t}\r\n\r\n\tstatic XYLCPointT(pLC: V3, tMin?: number, tMax?: number): number {\r\n\t\tthrow new Error('abstract')\r\n\t}\r\n\r\n\tstatic unitIsInfosWithLine(\r\n\t\tanchorLC: V3,\r\n\t\tdirLC: V3,\r\n\t\tanchorWC: V3,\r\n\t\tdirWC: V3,\r\n\t\ttMin?: number,\r\n\t\ttMax?: number,\r\n\t): ISInfo[] {\r\n\t\tthrow new Error('abstract')\r\n\t}\r\n\r\n\taddToMesh(mesh: Mesh & { TRIANGLES: int[]; normals: V3[] }, res: int = 4, radius: number = 0, pointStep = 1): void {\r\n\t\tconst baseNormals = arrayFromFunction(res, i => V3.polar(1, TAU * i / res))\r\n\t\tconst baseVertices = arrayFromFunction(res, i => V3.polar(radius, TAU * i / res))\r\n\t\tconst inc = this.tIncrement\r\n\t\tconst start = Math.ceil((this.tMin + NLA_PRECISION) / inc)\r\n\t\tconst end = Math.floor((this.tMax - NLA_PRECISION) / inc)\r\n\t\tfor (let i = start; i <= end; i += pointStep) {\r\n\t\t\tconst t = i * inc\r\n\t\t\tconst start = mesh.vertices.length\r\n\t\t\tif (0 !== i) {\r\n\t\t\t\tfor (let j = 0; j < res; j++) {\r\n\t\t\t\t\tpushQuad(\r\n\t\t\t\t\t\tmesh.TRIANGLES,\r\n\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\tstart - res + j,\r\n\t\t\t\t\t\tstart + j,\r\n\t\t\t\t\t\tstart - res + (j + 1) % res,\r\n\t\t\t\t\t\tstart + (j + 1) % res,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst point = this.at(t),\r\n\t\t\t\ttangent = this.tangentAt(t)\r\n\t\t\tconst matrix = M4.forSys(this.normal, tangent.cross(this.normal), tangent, point)\r\n\t\t\tmesh.normals.push(...matrix.transformedVectors(baseNormals))\r\n\t\t\tmesh.vertices.push(...matrix.transformedPoints(baseVertices))\r\n\t\t}\r\n\t}\r\n\r\n\tgetConstructorParameters(): any[] {\r\n\t\treturn [this.center, this.f1, this.f2, this.tMin, this.tMax]\r\n\t}\r\n\r\n\tisInfosWithCurve(curve: Curve): ISInfo[] {\r\n\t\tif (curve instanceof L3) {\r\n\t\t\treturn this.isInfosWithLine(curve.anchor, curve.dir1, this.tMin, this.tMax, curve.tMin, curve.tMax)\r\n\t\t}\r\n\t\tif (curve instanceof BezierCurve) {\r\n\t\t\treturn this.isInfosWithBezier(curve)\r\n\t\t}\r\n\t\tif (curve instanceof XiEtaCurve) {\r\n\t\t\tif (!this.normal.isParallelTo(curve.normal)) {\r\n\t\t\t\treturn this.isTsWithPlane(curve.getPlane()).mapFilter(tThis => {\r\n\t\t\t\t\tconst p = this.at(tThis)\r\n\t\t\t\t\tif (curve.containsPoint(p)) {\r\n\t\t\t\t\t\treturn { tThis, tOther: curve.pointT(p), p }\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn undefined\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn super.isInfosWithCurve(curve)\r\n\t}\r\n\r\n\ttransform(m4: M4) {\r\n\t\treturn new this.constructor(\r\n\t\t\tm4.transformPoint(this.center),\r\n\t\t\tm4.transformVector(this.f1),\r\n\t\t\tm4.transformVector(this.f2),\r\n\t\t\tthis.tMin,\r\n\t\t\tthis.tMax,\r\n\t\t) as this\r\n\t}\r\n\r\n\tequals(obj: any): obj is this {\r\n\t\treturn (\r\n\t\t\tthis == obj ||\r\n\t\t\t(undefined != obj &&\r\n\t\t\t\tthis.constructor == obj.constructor &&\r\n\t\t\t\tthis.center.equals(obj.center) &&\r\n\t\t\t\tthis.f1.equals(obj.f1) &&\r\n\t\t\t\tthis.f2.equals(obj.f2))\r\n\t\t)\r\n\t}\r\n\r\n\thashCode(): int {\r\n\t\tlet hashCode = 0\r\n\t\thashCode = hashCode * 31 + this.center.hashCode()\r\n\t\thashCode = hashCode * 31 + this.f1.hashCode()\r\n\t\thashCode = hashCode * 31 + this.f2.hashCode()\r\n\t\treturn hashCode | 0\r\n\t}\r\n\r\n\tlikeCurve(curve: Curve): boolean {\r\n\t\treturn (\r\n\t\t\thasConstructor(curve, this.constructor) &&\r\n\t\t\tthis.center.like(curve.center) &&\r\n\t\t\tthis.f1.like(curve.f1) &&\r\n\t\t\tthis.f2.like(curve.f2)\r\n\t\t)\r\n\t}\r\n\r\n\tnormalP(t: number): V3 {\r\n\t\treturn this.tangentAt(t).cross(this.normal)\r\n\t}\r\n\r\n\tgetPlane(): P3 {\r\n\t\treturn P3.normalOnAnchor(this.normal, this.center)\r\n\t}\r\n\r\n\tisTsWithPlane(plane: P3): number[] {\r\n\t\tassertInst(P3, plane)\r\n\t\t/*\r\n\t\t this: x = center + f1 * cos t + f2 * sin t  (1)\r\n\t\t plane:\r\n\t\t n := plane.normal1\r\n\t\t n DOT x == plane.w           (2)\r\n\t\t plane defined by f1/f2\r\n\t\t x = center + f1 * xi + f2 * eta         (3)\r\n\t\t intersection plane and planef1/f2:\r\n\t\t insert (3) into (2):\r\n\t\t n DOT center + n DOT f1 * xi + n DOT f2 * eta = plane.w | -n DOT center\r\n\t\t n DOT f1 * xi + n DOT f2 * eta = plane.w - n DOT center (4)\r\n\t\t points on ellipse have additional condition\r\n\t\t eta * eta + xi * xi = 1 (5)\r\n\t\t g1 := n DOT f1\r\n\t\t g2 := n DOT f2\r\n\t\t g3 := w - n DOT center\r\n\t\t solve system (5)/(6)\r\n\t\t g1 * xi + g2 * eta = g3 (6)\r\n\t\t */\r\n\t\tif (plane.normal1.isParallelTo(this.normal)) {\r\n\t\t\treturn []\r\n\t\t}\r\n\t\tconst n = plane.normal1,\r\n\t\t\tw = plane.w,\r\n\t\t\tcenter = this.center,\r\n\t\t\tf1 = this.f1,\r\n\t\t\tf2 = this.f2,\r\n\t\t\tg1 = n.dot(f1),\r\n\t\t\tg2 = n.dot(f2),\r\n\t\t\tg3 = w - n.dot(center)\r\n\r\n\t\treturn this.constructor.intersectionUnitLine(g1, g2, g3, this.tMin, this.tMax)\r\n\t}\r\n\r\n\tpointT(p: V3): number {\r\n\t\tassertVectors(p)\r\n\t\tconst pLC = this.matrixInverse.transformPoint(p)\r\n\t\treturn this.constructor.XYLCPointT(pLC)\r\n\t}\r\n\r\n\tcontainsPoint(p: V3): boolean {\r\n\t\tconst pLC = this.matrixInverse.transformPoint(p)\r\n\t\treturn eq0(pLC.z) && this.isValidT(this.constructor.XYLCPointT(pLC, this.tMin, this.tMax))\r\n\t}\r\n\r\n\tisInfosWithLine(\r\n\t\tanchorWC: V3,\r\n\t\tdirWC: V3,\r\n\t\ttMin: number = this.tMin,\r\n\t\ttMax: number = this.tMax,\r\n\t\tlineMin = -100000,\r\n\t\tlineMax = 100000,\r\n\t): ISInfo[] {\r\n\t\tconst anchorLC = this.matrixInverse.transformPoint(anchorWC)\r\n\t\tconst dirLC = this.matrixInverse.transformVector(dirWC)\r\n\t\tif (eq0(dirLC.z)) {\r\n\t\t\t// local line parallel to XY-plane\r\n\t\t\tif (eq0(anchorLC.z)) {\r\n\t\t\t\t// local line lies in XY-plane\r\n\t\t\t\treturn this.constructor.unitIsInfosWithLine(anchorLC, dirLC, anchorWC, dirWC, tMin, tMax)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// if the line intersects the XY-plane in a single point, there can be an intersection there\r\n\t\t\t// find point, then check if distance from circle = 1\r\n\t\t\tconst otherTAtZ0 = anchorLC.z / dirLC.z\r\n\t\t\tconst isp = dirLC.times(otherTAtZ0).plus(anchorLC)\r\n\t\t\tif (this.constructor.XYLCValid(isp)) {\r\n\t\t\t\t// point lies on unit circle\r\n\t\t\t\treturn [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttThis: this.constructor.XYLCPointT(isp),\r\n\t\t\t\t\t\ttOther: otherTAtZ0,\r\n\t\t\t\t\t\tp: anchorWC.plus(dirWC.times(otherTAtZ0)),\r\n\t\t\t\t\t},\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn []\r\n\t}\r\n\r\n\tisTsWithSurface(surface: Surface): number[] {\r\n\t\tif (surface instanceof PlaneSurface) {\r\n\t\t\treturn this.isTsWithPlane(surface.plane)\r\n\t\t} else if (surface instanceof SemiEllipsoidSurface) {\r\n\t\t\tconst isEllipses = surface.isCurvesWithPlane(this.getPlane())\r\n\t\t\treturn isEllipses\r\n\t\t\t\t.flatMap(isEllipse => this.isInfosWithCurve(isEllipse))\r\n\t\t\t\t.filter(info => surface.containsPoint(info.p))\r\n\t\t\t\t.map(info => info.tThis)\r\n\t\t} else if (surface instanceof ProjectedCurveSurface || surface instanceof ConicSurface) {\r\n\t\t\treturn surface\r\n\t\t\t\t.isCurvesWithPlane(this.getPlane())\r\n\t\t\t\t.flatMap(curve => this.isInfosWithCurve(curve))\r\n\t\t\t\t.map(info => info.tThis)\r\n\t\t} else {\r\n\t\t\tthrow new Error()\r\n\t\t}\r\n\t}\r\n\r\n\tisInfosWithBezier(bezierWC: BezierCurve): ISInfo[] {\r\n\t\tconst bezierLC = bezierWC.transform(this.matrixInverse)\r\n\t\tif (new PlaneSurface(P3.XY).containsCurve(bezierLC)) {\r\n\t\t\treturn this.isInfosWithBezier2D(bezierWC)\r\n\t\t} else {\r\n\t\t\tconst infos = bezierLC.isTsWithPlane(P3.XY).mapFilter(tOther => {\r\n\t\t\t\tconst pLC = bezierLC.at(tOther)\r\n\t\t\t\tif (this.constructor.XYLCValid(pLC)) {\r\n\t\t\t\t\treturn { tOther: tOther, p: bezierWC.at(tOther), tThis: this.constructor.XYLCPointT(pLC) }\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined\r\n\t\t\t})\r\n\t\t\treturn infos\r\n\t\t}\r\n\t}\r\n\r\n\tisInfosWithBezier2D(bezierWC: BezierCurve, sMin: number = bezierWC.tMin, sMax: number = bezierWC.tMax): ISInfo[] {\r\n\t\treturn Curve.ispsRecursive(this, this.tMin, this.tMax, bezierWC, sMin, sMax)\r\n\t}\r\n\r\n\tisOrthogonal(): boolean {\r\n\t\treturn this.f1.isPerpendicularTo(this.f2)\r\n\t}\r\n\r\n\tat2(xi: number, eta: number): V3 {\r\n\t\tassertNumbers(xi, eta)\r\n\t\t// center + f1 xi + f2 eta\r\n\t\treturn this.center.plus(this.f1.times(xi)).plus(this.f2.times(eta))\r\n\t}\r\n\r\n\tdebugToMesh<T extends Record<string, V3[]>>(mesh: Mesh & T, bufferName: keyof T) {\r\n\t\tmesh[bufferName] || mesh.addVertexBuffer(bufferName, bufferName)\r\n\t\tfor (let t = 0; t < Math.PI; t += 0.1) {\r\n\t\t\tconst p = this.at(t)\r\n\t\t\tmesh[bufferName].push(p, p.plus(this.tangentAt(t).toLength(1)))\r\n\t\t\tmesh[bufferName].push(p, p.plus(this.normalP(t).toLength(1)))\r\n\t\t}\r\n\t\tmesh[bufferName].push(this.center, this.center.plus(this.f1.times(1.2)))\r\n\t\tmesh[bufferName].push(this.center, this.center.plus(this.f2))\r\n\t\tmesh[bufferName].push(this.center, this.center.plus(this.normal))\r\n\t}\r\n}\r\n","import {\r\n\tarrayFromFunction,\r\n\tarrayRange,\r\n\tassert,\r\n\tassertVectors,\r\n\tbisect,\r\n\tclamp,\r\n\teq0,\r\n\tint,\r\n\tM4,\r\n\tTAU,\r\n\tTuple3,\r\n\tV3,\r\n} from 'ts3dutils'\r\nimport { MeshWith, pushQuad } from 'tsgl'\r\n\r\nimport { Curve, PICurve } from '../index'\r\n\r\nimport { ceil, floor, max, min } from '../math'\r\n\r\nexport abstract class ImplicitCurve extends Curve {\r\n\tconstructor(\r\n\t\treadonly points: ReadonlyArray<V3>,\r\n\t\treadonly tangents: ReadonlyArray<V3>,\r\n\t\treadonly dir: number = 1,\r\n\t\treadonly generator?: string,\r\n\t\ttMin: number = 1 == dir ? 0 : -(points.length - 1),\r\n\t\ttMax: number = 1 == dir ? points.length - 1 : 0,\r\n\t) {\r\n\t\tsuper(tMin, tMax)\r\n\t\tassert(points.length > 2)\r\n\t\tassert(0 <= tMin && tMin <= points.length - 1, tMin, points.length)\r\n\t\tassert(0 <= tMax && tMax <= points.length - 1, tMax, points.length)\r\n\t}\r\n\r\n\tlikeCurve(curve: Curve): boolean {\r\n\t\tthrow new Error('Method not implemented.')\r\n\t}\r\n\r\n\ttoSource(rounder: (x: number) => number = x => x): string {\r\n\t\treturn this.generator || super.toSource(rounder)\r\n\t}\r\n\r\n\tcontainsPoint(p: V3): boolean {\r\n\t\tassertVectors(p)\r\n\t\treturn !isNaN(this.pointT(p))\r\n\t}\r\n\r\n\tequals(obj: any): boolean {\r\n\t\treturn (\r\n\t\t\tthis == obj ||\r\n\t\t\t(Object.getPrototypeOf(obj) == PICurve.prototype &&\r\n\t\t\t\tthis.points[0].equals(obj.points[0]) &&\r\n\t\t\t\tthis.tangents[0].equals(obj.tangents[0]))\r\n\t\t)\r\n\t}\r\n\r\n\thashCode(): int {\r\n\t\treturn [this.points[0], this.tangents[0]].hashCode()\r\n\t}\r\n\r\n\ttangentP(pWC: V3): V3 {\r\n\t\tassertVectors(pWC)\r\n\t\tassert(this.containsPoint(pWC), 'this.containsPoint(pWC)' + this.containsPoint(pWC))\r\n\t\tconst t = this.pointT(pWC)\r\n\t\treturn this.tangentAt(t)\r\n\t}\r\n\r\n\ttangentAt(t: number): V3 {\r\n\t\tt = clamp(t, this.tMin, this.tMax)\r\n\t\treturn V3.lerp(this.tangents[floor(t)], this.tangents[ceil(t)], t % 1)\r\n\t}\r\n\r\n\tat(t: number): V3 {\r\n\t\tassert(isFinite(t))\r\n\t\treturn V3.lerp(this.points[floor(t)], this.points[ceil(t)], t % 1)\r\n\t}\r\n\r\n\tgetConstructorParameters(): any[] {\r\n\t\tthrow new Error()\r\n\t}\r\n\r\n\troots(): [number[], number[], number[]] {\r\n\t\tconst allTs = arrayRange(0, this.points.length)\r\n\t\treturn [allTs, allTs, allTs]\r\n\t}\r\n\r\n\t/**\r\n\t * @param mesh\r\n\t * @param res\r\n\t * @param radius default to 0. Use the shader to achieve dynamic scaling.\r\n\t * @param pointStep\r\n\t */\r\n\taddToMesh(mesh: MeshWith<'normals' | 'TRIANGLES'>, res: int = 4, radius: number = 0, pointStep = 1): void {\r\n\t\tconst baseNormals = arrayFromFunction(res, i => V3.polar(1, TAU * i / res))\r\n\t\tconst baseVertices = arrayFromFunction(res, i => V3.polar(radius, TAU * i / res))\r\n\t\tlet prevTangent = V3.Z,\r\n\t\t\tprevMatrix = M4.IDENTITY\r\n\t\tfor (let i = 0; i < this.points.length; i += pointStep) {\r\n\t\t\tconst start = mesh.vertices.length\r\n\t\t\tif (0 !== i) {\r\n\t\t\t\tfor (let j = 0; j < res; j++) {\r\n\t\t\t\t\tpushQuad(\r\n\t\t\t\t\t\tmesh.TRIANGLES,\r\n\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\tstart - res + j,\r\n\t\t\t\t\t\tstart + j,\r\n\t\t\t\t\t\tstart - res + (j + 1) % res,\r\n\t\t\t\t\t\tstart + (j + 1) % res,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst point = this.points[i],\r\n\t\t\t\ttangent = this.tangents[i]\r\n\t\t\tconst tangentMatrix = M4.rotateAB(prevTangent, tangent).times(prevMatrix)\r\n\t\t\tmesh.normals.push(...tangentMatrix.transformedVectors(baseNormals))\r\n\t\t\tconst baseMatrix = M4.translate(point).times(tangentMatrix)\r\n\t\t\tmesh.vertices.push(...baseMatrix.transformedPoints(baseVertices))\r\n\t\t\tprevTangent = tangent\r\n\t\t\tprevMatrix = tangentMatrix\r\n\t\t}\r\n\t}\r\n\r\n\trootsApprox() {\r\n\t\tconst roots: Tuple3<number[]> = [[], [], []]\r\n\t\tconst points = this.points\r\n\t\tlet lastDiff = points[1].minus(points[0])\r\n\t\tfor (let i = 2; i < points.length; i++) {\r\n\t\t\tconst diff = points[i].minus(points[i - 1])\r\n\t\t\tfor (let dim = 0; dim < 3; dim++) {\r\n\t\t\t\tif (Math.sign(lastDiff.e(dim)) != Math.sign(diff.e(dim))) {\r\n\t\t\t\t\troots[dim].push(i)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlastDiff = diff\r\n\t\t}\r\n\t\treturn roots\r\n\t}\r\n\r\n\tpointT(pWC: V3): number {\r\n\t\tconst startT = arrayRange(floor(this.tMin), ceil(this.tMax), 1).withMax(t => -pWC.distanceTo(this.points[t]))\r\n\t\tif (undefined === startT) throw new Error()\r\n\t\tif (this.points[startT].like(pWC)) return startT\r\n\t\tconst a = max(0, startT - 1),\r\n\t\t\tb = min(this.points.length - 1, startT + 1)\r\n\t\tconst tangent = this.tangentAt(startT)\r\n\t\tconst f = (t: number) =>\r\n\t\t\tthis.at(t)\r\n\t\t\t\t.to(pWC)\r\n\t\t\t\t.dot(tangent)\r\n\t\t// const df = (t: number) => -this.tangentAt(clamp(t, 0, this.points.length - 1)).dot(tangent)\r\n\t\t//checkDerivate(f, df, 0, this.points.length - 2, 3)\r\n\t\tconst t = bisect(f, a, b, 32)\r\n\t\tif (!isFinite(t) || !eq0(this.at(t).distanceTo(pWC))) {\r\n\t\t\treturn NaN\r\n\t\t}\r\n\t\treturn t\r\n\t}\r\n}\r\n\r\nImplicitCurve.prototype.tIncrement = 1\r\n","import {\r\n\tarrayFromFunction,\r\n\tassert,\r\n\tassertf,\r\n\tassertInst,\r\n\tassertNever,\r\n\tassertNumbers,\r\n\tassertVectors,\r\n\tbetween,\r\n\tcombinations,\r\n\teq,\r\n\teq0,\r\n\tFloatArray,\r\n\tfuzzyUniques,\r\n\tfuzzyUniquesF,\r\n\thasConstructor,\r\n\tint,\r\n\tlerp,\r\n\tM4,\r\n\tMatrix,\r\n\tMINUS,\r\n\tnewtonIterate1d,\r\n\tnewtonIterate2dWithDerivatives,\r\n\tnewtonIterateWithDerivative,\r\n\tNLA_PRECISION,\r\n\tsolveCubicReal2,\r\n\tTuple3,\r\n\tV,\r\n\tV3,\r\n\tVector,\r\n} from 'ts3dutils'\r\nimport { Mesh } from 'tsgl'\r\n\r\nimport {\r\n\tCurve,\r\n\tEdge,\r\n\tISInfo,\r\n\tL3,\r\n\tP3,\r\n\tPlaneSurface,\r\n\tProjectedCurveSurface,\r\n\tR2_R,\r\n\tSemiCylinderSurface,\r\n\tSemiEllipseCurve,\r\n\tSemiEllipsoidSurface,\r\n\tSurface,\r\n} from '../index'\r\n\r\nimport { abs, cos, PI, sin } from '../math'\r\n\r\nexport class BezierCurve extends Curve {\r\n\t/**\r\n\t * https://en.wikipedia.org/wiki/Cubic_function#/media/File:Graph_of_cubic_polynomial.svg\r\n\t */\r\n\tstatic readonly EX2D = BezierCurve.graphXY(2, -3, -3, 2)\r\n\tstatic readonly EX3D = new BezierCurve(V3.O, V(-0.1, -1, 1), V(1.1, 1, 1), V3.X)\r\n\tstatic readonly QUARTER_CIRCLE = BezierCurve.approximateUnitArc(PI / 2)\r\n\treadonly p0: V3\r\n\treadonly p1: V3\r\n\treadonly p2: V3\r\n\treadonly p3: V3\r\n\r\n\tconstructor(p0: V3, p1: V3, p2: V3, p3: V3, tMin: number = -0.1, tMax: number = 1.1) {\r\n\t\tsuper(tMin, tMax)\r\n\t\tassertVectors(p0, p1, p2, p3)\r\n\t\tassert(isFinite(tMin) && isFinite(tMax))\r\n\t\t//assert(!L3.throughPoints(p0, p3).containsPoint(p1) || !L3.throughPoints(p0, p3).containsPoint(p2))\r\n\t\tthis.p0 = p0\r\n\t\tthis.p1 = p1\r\n\t\tthis.p2 = p2\r\n\t\tthis.p3 = p3\r\n\t}\r\n\r\n\tget points(): V3[] {\r\n\t\treturn [this.p0, this.p1, this.p2, this.p3]\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a curve with curve.at(x) == V(x, ax³ + bx² + cx + d, 0)\r\n\t */\r\n\tstatic graphXY(a: number, b: number, c: number, d: number, tMin?: number, tMax?: number): BezierCurve {\r\n\t\t// d = p0y\r\n\t\t// c = -3 p0y + 3 p1y => p1y = c/3 + p0y\r\n\t\t// b = 3 p0y - 6 p1y + 3 p2y => p2y = b/3 - p0y + 2 p1y\r\n\t\t// a = -p0y + 3 p1y -3 p2y + p3y => p3y = a + p0y - 3 p1y + 3 p2y\r\n\t\tconst p0y = d\r\n\t\tconst p1y = c / 3 + p0y\r\n\t\tconst p2y = b / 3 - p0y + 2 * p1y\r\n\t\tconst p3y = a + p0y - 3 * p1y + 3 * p2y\r\n\t\treturn new BezierCurve(V(0, p0y), V(1 / 3, p1y), V(2 / 3, p2y), V(1, p3y), tMin, tMax)\r\n\t}\r\n\r\n\tstatic quadratic(a: V3, b: V3, c: V3, tMin: number = 0, tMax: number = 1): BezierCurve | L3 {\r\n\t\tconst line = L3.throughPoints(a, c)\r\n\t\tif (line.containsPoint(b)) {\r\n\t\t\treturn line\r\n\t\t} else {\r\n\t\t\t// p1 = 1/3 a + 2/3 b\r\n\t\t\t// p2 = 1/3 c + 2/3 b\r\n\t\t\treturn new BezierCurve(\r\n\t\t\t\ta,\r\n\t\t\t\tb\r\n\t\t\t\t\t.times(2)\r\n\t\t\t\t\t.plus(a)\r\n\t\t\t\t\t.div(3),\r\n\t\t\t\tb\r\n\t\t\t\t\t.times(2)\r\n\t\t\t\t\t.plus(c)\r\n\t\t\t\t\t.div(3),\r\n\t\t\t\tc,\r\n\t\t\t\ttMin,\r\n\t\t\t\ttMax,\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a bezier curve which approximates a CCW unit circle arc starting at V3.X of angle phi\r\n\t * phi <= PI / 2 is recommended\r\n\t *\r\n\t * Formula from here: https://pomax.github.io/bezierinfo/#circles_cubic\r\n\t */\r\n\tstatic approximateUnitArc(phi: number): BezierCurve {\r\n\t\tconst f = 4 / 3 * Math.tan(phi / 4)\r\n\t\treturn new BezierCurve(\r\n\t\t\tV3.X,\r\n\t\t\tnew V3(1, f, 0),\r\n\t\t\tnew V3(cos(phi) + f * sin(phi), sin(phi) - f * cos(phi), 0),\r\n\t\t\tV3.sphere(phi, 0),\r\n\t\t\t0,\r\n\t\t\t1,\r\n\t\t)\r\n\t}\r\n\r\n\tgetConstructorParameters(): any[] {\r\n\t\treturn [this.p0, this.p1, this.p2, this.p3, this.tMin, this.tMax]\r\n\t}\r\n\r\n\tat(t: number): V3 {\r\n\t\t// = s^3 p0 + 3 s^2 t p1 + 3 s t^2 p2 + t^3 p3\r\n\t\tassertNumbers(t)\r\n\t\tconst p0 = this.p0,\r\n\t\t\tp1 = this.p1,\r\n\t\t\tp2 = this.p2,\r\n\t\t\tp3 = this.p3\r\n\t\tconst s = 1 - t,\r\n\t\t\tc0 = s * s * s,\r\n\t\t\tc1 = 3 * s * s * t,\r\n\t\t\tc2 = 3 * s * t * t,\r\n\t\t\tc3 = t * t * t\r\n\t\treturn new V3(\r\n\t\t\tp0.x * c0 + p1.x * c1 + p2.x * c2 + p3.x * c3,\r\n\t\t\tp0.y * c0 + p1.y * c1 + p2.y * c2 + p3.y * c3,\r\n\t\t\tp0.z * c0 + p1.z * c1 + p2.z * c2 + p3.z * c3,\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * s := (1 - t)\r\n\t * at(t) := s³ p0 + 3 s² t p1 + 3 s t² p2 + t³ p3\r\n\t * tangent(t) := 3 s² (p1 - p0) + 6 s t (p2 - p1) + 3 t² (p3 - p2)\r\n\t *            := 3 (1 - t)² (p1 - p0) + 6 (1 - t) t (p2 - p1) + 3 t² (p3 - p2)\r\n\t *            := 3 (1 - 2 t + t²) (p1 - p0) + 6 (t - t²) (p2 - p1) + 3 t² (p3 - p2)\r\n\t *            := (3 (p3 - p2) - 6 (p2 - p1) + 3 (p1 - p0)) t²*\r\n\t *                + (-6 (p1 - p0) + (p2 - p1)) t\r\n\t *                + 3 (p1 - p0)\r\n\t */\r\n\ttangentAt(t: number): V3 {\r\n\t\tassertNumbers(t)\r\n\t\tconst p0 = this.p0,\r\n\t\t\tp1 = this.p1,\r\n\t\t\tp2 = this.p2,\r\n\t\t\tp3 = this.p3\r\n\t\tconst s = 1 - t,\r\n\t\t\tc01 = 3 * s * s,\r\n\t\t\tc12 = 6 * s * t,\r\n\t\t\tc23 = 3 * t * t\r\n\t\treturn new V3(\r\n\t\t\t(p1.x - p0.x) * c01 + (p2.x - p1.x) * c12 + (p3.x - p2.x) * c23,\r\n\t\t\t(p1.y - p0.y) * c01 + (p2.y - p1.y) * c12 + (p3.y - p2.y) * c23,\r\n\t\t\t(p1.z - p0.z) * c01 + (p2.z - p1.z) * c12 + (p3.z - p2.z) * c23,\r\n\t\t)\r\n\t}\r\n\r\n\tddt(t: number): V3 {\r\n\t\tassertNumbers(t)\r\n\t\tconst p0 = this.p0,\r\n\t\t\tp1 = this.p1,\r\n\t\t\tp2 = this.p2,\r\n\t\t\tp3 = this.p3\r\n\t\tconst c012 = 6 * (1 - t),\r\n\t\t\tc123 = 6 * t\r\n\t\treturn new V3(\r\n\t\t\t(p2.x - 2 * p1.x + p0.x) * c012 + (p3.x - 2 * p2.x + p1.x) * c123,\r\n\t\t\t(p2.y - 2 * p1.y + p0.y) * c012 + (p3.y - 2 * p2.y + p1.y) * c123,\r\n\t\t\t(p2.z - 2 * p1.z + p0.z) * c012 + (p3.z - 2 * p2.z + p1.z) * c123,\r\n\t\t)\r\n\t}\r\n\r\n\tnormalP(t: number): V3 {\r\n\t\tconst tangent = this.tangentAt(t)\r\n\t\tconst rot = tangent.cross(this.ddt(t))\r\n\t\treturn rot.cross(tangent)\r\n\t}\r\n\r\n\tisTsWithPlane(plane: P3) {\r\n\t\tassertInst(P3, plane)\r\n\t\t/*\r\n\t\t We are solving for t:\r\n\t\t n := plane.normal1\r\n\t\t this.at(t) DOT n == plane.w // according to plane definition\r\n\t\t (a t³ + b t² + c t + d) DOT n == plane.w // bezier curve as cubic equation\r\n\t\t (a DOT n) t³ + (b DOT n) t³ + (c DOT n) t + d DOT n - plane.w == 0 // multiply out DOT n, minus plane.w\r\n\t\t */\r\n\r\n\t\tconst { p0, p1, p2, p3 } = this\r\n\t\tconst n = plane.normal1\r\n\t\tconst a = p1\r\n\t\t\t.minus(p2)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p0)\r\n\t\t\t.plus(p3)\r\n\t\tconst b = p0\r\n\t\t\t.plus(p2)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p1.times(6))\r\n\t\tconst c = p1.minus(p0).times(3)\r\n\t\tconst d = p0\r\n\r\n\t\treturn solveCubicReal2(a.dot(n), b.dot(n), c.dot(n), d.dot(n) - plane.w).filter(t =>\r\n\t\t\tbetween(t, this.tMin, this.tMax),\r\n\t\t)\r\n\t}\r\n\r\n\tisTsWithSurface(surface: Surface): number[] {\r\n\t\tif (surface instanceof PlaneSurface) {\r\n\t\t\treturn this.isTsWithPlane(surface.plane)\r\n\t\t}\r\n\t\tif (surface instanceof SemiCylinderSurface) {\r\n\t\t\tconst projPlane = new P3(surface.dir.unit(), 0)\r\n\t\t\tconst projThis = this.project(projPlane)\r\n\t\t\tconst projEllipse = surface.baseCurve.project(projPlane)\r\n\t\t\treturn projEllipse.isInfosWithBezier2D(projThis).map(info => info.tOther)\r\n\t\t}\r\n\t\tif (surface instanceof ProjectedCurveSurface) {\r\n\t\t\tconst projPlane = new P3(surface.dir.unit(), 0)\r\n\t\t\tconst projThis = this.project(projPlane)\r\n\t\t\tconst projEllipse = surface.baseCurve.project(projPlane)\r\n\t\t\treturn projEllipse.isInfosWithCurve(projThis).map(info => info.tOther)\r\n\t\t}\r\n\t\tif (surface instanceof SemiEllipsoidSurface) {\r\n\t\t\tconst thisOC = this.transform(surface.matrixInverse)\r\n\t\t\tconst f = (t: number) => thisOC.at(t).length() - 1\r\n\t\t\tconst df = (t: number) =>\r\n\t\t\t\tthisOC\r\n\t\t\t\t\t.at(t)\r\n\t\t\t\t\t.unit()\r\n\t\t\t\t\t.dot(thisOC.tangentAt(t))\r\n\r\n\t\t\tconst stepSize = 1 / (1 << 11)\r\n\t\t\tconst STEPS = (this.tMax - this.tMin) / stepSize\r\n\t\t\tconst result: number[] = []\r\n\t\t\tfor (let startT = this.tMin; startT <= this.tMax; startT += stepSize) {\r\n\t\t\t\tconst dt = stepSize * thisOC.tangentAt(startT).length()\r\n\t\t\t\tif (abs(f(startT)) <= dt) {\r\n\t\t\t\t\t//const t = newtonIterate1d(f, startT, 16)\r\n\t\t\t\t\tlet t = newtonIterateWithDerivative(f, startT, 16, df)\r\n\t\t\t\t\tif (!eq0(f(t)) || eq0(df(t))) {\r\n\t\t\t\t\t\tconst a = startT - dt,\r\n\t\t\t\t\t\t\tb = startT + dt\r\n\t\t\t\t\t\tt = newtonIterate1d(df, startT, 16)\r\n\t\t\t\t\t\t//if (f(a) * f(b) < 0) {\r\n\t\t\t\t\t\t//    t = bisect(f, a, b, 16)\r\n\t\t\t\t\t\t//} else if (df(a) * df(b) < 0) {\r\n\t\t\t\t\t\t//    t = bisect(df, a, b, 16)\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (eq0(f(t)) && !result.some(r => eq(r, t))) {\r\n\t\t\t\t\t\tresult.push(t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.filter(t => surface.containsPoint(this.at(t)))\r\n\t\t}\r\n\t\tthrow new Error()\r\n\t}\r\n\r\n\tlikeCurve(curve: Curve): boolean {\r\n\t\treturn (\r\n\t\t\tthis == curve ||\r\n\t\t\t(hasConstructor(curve, BezierCurve) &&\r\n\t\t\t\tthis.p0.like(curve.p0) &&\r\n\t\t\t\tthis.p1.like(curve.p1) &&\r\n\t\t\t\tthis.p2.like(curve.p2) &&\r\n\t\t\t\tthis.p3.like(curve.p3))\r\n\t\t)\r\n\t}\r\n\r\n\tequals(obj: any): boolean {\r\n\t\treturn (\r\n\t\t\tthis == obj ||\r\n\t\t\t(hasConstructor(obj, BezierCurve) &&\r\n\t\t\t\tthis.p0.equals(obj.p0) &&\r\n\t\t\t\tthis.p1.equals(obj.p1) &&\r\n\t\t\t\tthis.p2.equals(obj.p2) &&\r\n\t\t\t\tthis.p3.equals(obj.p3))\r\n\t\t)\r\n\t}\r\n\r\n\thashCode(): int {\r\n\t\tlet hashCode = 0\r\n\t\thashCode = hashCode * 31 + this.p0.hashCode()\r\n\t\thashCode = hashCode * 31 + this.p1.hashCode()\r\n\t\thashCode = hashCode * 31 + this.p2.hashCode()\r\n\t\thashCode = hashCode * 31 + this.p3.hashCode()\r\n\t\treturn hashCode | 0\r\n\t}\r\n\r\n\t/**\r\n\t * Checks if this curve is colinear to the passed curve, i.e.\r\n\t * for every t:number there exists a s:number with this.at(t) = curve.at(s)\r\n\t */\r\n\tisColinearTo(curve: BezierCurve): boolean {\r\n\t\tif (this === curve || this.likeCurve(curve)) return true\r\n\t\tif (!(curve instanceof BezierCurve)) return false\r\n\t\t// first, find out where/if curve.p0 and curve.p3 are on this\r\n\t\t// then split this at curve.p0 --> curve.p3 to compare points p1 and p2\r\n\t\tlet curveP0T, curveP3T\r\n\t\t// assign in if condition to exploit short-circuit\r\n\t\tif (isNaN((curveP0T = this.pointT(curve.p0))) || isNaN((curveP3T = this.pointT(curve.p3)))) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tlet thisSplit\r\n\t\tif (eq(1, curveP0T)) {\r\n\t\t\t// this.split(curveP0T).right is degenerate in this case, so we need to handle it separately\r\n\r\n\t\t\t// this.split(curveP3T): 0 --> curveP3T --> 1\r\n\t\t\t// .right: curveP3T --> 1\r\n\t\t\t// .reversed(): 1 --> curveP3T\r\n\t\t\tthisSplit = this.split(curveP3T)[1].reversed()\r\n\t\t} else {\r\n\t\t\t// curveP3T describes the point on this\r\n\t\t\t// adjust it so it describes the same point on this.split(curveP0T).right\r\n\t\t\t// this:                       0           p0t        p3t      1\r\n\t\t\t//                             |            |          |       |\r\n\t\t\t// this.split(curveP0T).right:              0        p3tad     1\r\n\t\t\tconst curveP3Tadjusted = (curveP3T - curveP0T) / (1 - curveP0T)\r\n\t\t\tthisSplit = this.split(curveP0T)[1].split(curveP3Tadjusted)[0]\r\n\t\t}\r\n\r\n\t\treturn curve.likeCurve(thisSplit)\r\n\t}\r\n\r\n\treversed(): BezierCurve {\r\n\t\treturn new BezierCurve(this.p3, this.p2, this.p1, this.p0, 1 - this.tMax, 1 - this.tMin)\r\n\t}\r\n\r\n\tgetCoefficients() {\r\n\t\tconst { p0, p1, p2, p3 } = this\r\n\t\t// calculate cubic equation coefficients\r\n\t\t// a t³ + b t² + c t + d = 0\r\n\t\t// multiplying out the cubic Bézier curve equation gives:\r\n\t\t// a = -p0 + 3 p1 - 3 p2 + p3\r\n\t\t// b = 3 p0 - 6 p1 + 3 p2\r\n\t\t// c = -3 p0 + 3 p1\r\n\t\t// d = p0 - p\r\n\t\tconst a = p1\r\n\t\t\t.minus(p2)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p0)\r\n\t\t\t.plus(p3)\r\n\t\tconst b = p0\r\n\t\t\t.plus(p2)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p1.times(6))\r\n\t\tconst c = p1.minus(p0).times(3)\r\n\t\tconst d = p0\r\n\t\treturn [a, b, c, d]\r\n\t}\r\n\r\n\ttangentCoefficients() {\r\n\t\tconst { p0, p1, p2, p3 } = this\r\n\t\tconst p01 = p1.minus(p0),\r\n\t\t\tp12 = p2.minus(p1),\r\n\t\t\tp23 = p3.minus(p2)\r\n\t\tconst a = p01\r\n\t\t\t.plus(p23)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p12.times(6))\r\n\t\tconst b = p12.minus(p01).times(6)\r\n\t\tconst c = p01.times(3)\r\n\t\treturn [V3.O, a, b, c]\r\n\t}\r\n\r\n\tpointT2(p: V3, tMin = this.tMin, tMax = this.tMax): number {\r\n\t\tconst t = this.closestTToPoint(p, undefined, tMin, tMax)\r\n\t\tassert(this.at(t).like(p))\r\n\t\treturn t\r\n\t}\r\n\r\n\tpointT(p: V3) {\r\n\t\tconst { p0, p1, p2, p3 } = this\r\n\t\t// calculate cubic equation coefficients\r\n\t\t// a t³ + b t² + c t + d = 0\r\n\t\t// multiplying out the cubic Bézier curve equation gives:\r\n\t\t// a = -p0 + 3 p1 - 3 p2 + p3\r\n\t\t// b = 3 p0 - 6 p1 + 3 p2\r\n\t\t// c = -3 p0 + 3 p1\r\n\t\t// d = p0 - p\r\n\t\tconst a = p1\r\n\t\t\t.minus(p2)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p0)\r\n\t\t\t.plus(p3)\r\n\t\tconst b = p0\r\n\t\t\t.plus(p2)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p1.times(6))\r\n\t\tconst c = p1.minus(p0).times(3)\r\n\t\tconst d = p0.minus(p)\r\n\r\n\t\t// a t³ + b t² + c t + d = 0 is 3 cubic equations, some of which can be degenerate\r\n\t\tconst maxDim =\r\n\t\t\tNLA_PRECISION < a.maxAbsElement()\r\n\t\t\t\t? a.maxAbsDim()\r\n\t\t\t\t: NLA_PRECISION < b.maxAbsElement()\r\n\t\t\t\t\t? b.maxAbsDim()\r\n\t\t\t\t\t: NLA_PRECISION < c.maxAbsElement() ? c.maxAbsDim() : assertNever()\r\n\r\n\t\tconst results = solveCubicReal2(a.e(maxDim), b.e(maxDim), c.e(maxDim), d.e(maxDim)).filter(t =>\r\n\t\t\tthis.at(t).like(p),\r\n\t\t)\r\n\t\tif (0 == results.length) return NaN\r\n\t\tif (1 == results.length) return results[0]\r\n\t\tthrow new Error('multiple intersection ' + this.toString() + p.sce)\r\n\t}\r\n\r\n\tpointT3(p: V3) {\r\n\t\tconst { p0, p1, p2, p3 } = this\r\n\t\t// calculate cubic equation coefficients\r\n\t\t// a t³ + b t² + c t + d = 0\r\n\t\t// multiplying out the cubic Bézier curve equation gives:\r\n\t\t// a = -p0 + 3 p1 - 3 p2 + p3\r\n\t\t// b = 3 p0 - 6 p1 + 3 p2\r\n\t\t// c = -3 p0 + 3 p1\r\n\t\t// d = p0 - p\r\n\t\tconst a = p1\r\n\t\t\t.minus(p2)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p0)\r\n\t\t\t.plus(p3)\r\n\t\t\t.els()\r\n\t\tconst b = p0\r\n\t\t\t.plus(p2)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p1.times(6))\r\n\t\t\t.els()\r\n\t\tconst c = p1\r\n\t\t\t.minus(p0)\r\n\t\t\t.times(3)\r\n\t\t\t.els()\r\n\t\tconst d = p0.minus(p).els()\r\n\t\tlet results = undefined\r\n\r\n\t\t// assume passed point is on curve and that curve does not self-intersect,\r\n\t\t// i.e. there is exactly one correct result for t\r\n\t\t// try to find a single result in the x-dimension, if multiple are found,\r\n\t\t// filter them by checking the other dimensions\r\n\t\tfor (let dim = 0; dim < 3; dim++) {\r\n\t\t\tif (eq0(a[dim]) && eq0(b[dim]) && eq0(c[dim])) {\r\n\t\t\t\t// for case x:\r\n\t\t\t\t// ax == bx == cx == 0 => x(t) = dx\r\n\t\t\t\t// x value is constant\r\n\t\t\t\t// if x == 0 for all t, this does not limit the result, otherwise, there is no result, i.e\r\n\t\t\t\t// the passed point is not on the curve\r\n\t\t\t\tif (!eq0(d[dim])) return NaN\r\n\t\t\t} else {\r\n\t\t\t\tconst newResults = solveCubicReal2(a[dim], b[dim], c[dim], d[dim])\r\n\t\t\t\tif (0 == newResults.length) return NaN\r\n\t\t\t\tif (1 == newResults.length) return newResults[0]\r\n\t\t\t\tif (results) {\r\n\t\t\t\t\tresults = results.filter(t => newResults.some(t2 => eq(t, t2)))\r\n\t\t\t\t\tif (0 == results.length) return NaN\r\n\t\t\t\t\tif (1 == results.length) return results[0]\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresults = newResults\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error('multiple intersection ' + results + this.toString() + p.sce)\r\n\t}\r\n\r\n\ttransform(m4: M4) {\r\n\t\treturn new BezierCurve(\r\n\t\t\tm4.transformPoint(this.p0),\r\n\t\t\tm4.transformPoint(this.p1),\r\n\t\t\tm4.transformPoint(this.p2),\r\n\t\t\tm4.transformPoint(this.p3),\r\n\t\t\tthis.tMin,\r\n\t\t\tthis.tMax,\r\n\t\t) as this\r\n\t}\r\n\r\n\tisClosed(): boolean {\r\n\t\treturn this.p0.like(this.p3)\r\n\t}\r\n\r\n\tisQuadratic(): boolean {\r\n\t\treturn this.p1.like(this.p2)\r\n\t}\r\n\r\n\tdebugToMesh<T extends string>(mesh: Mesh, bufferName: T) {\r\n\t\tconst result = mesh.addVertexBuffer(bufferName, bufferName) as any\r\n\t\tfor (let t = -2; t <= 2; t += 0.01) {\r\n\t\t\tconst p = this.at(t)\r\n\t\t\tresult[bufferName].push(p, p.plus(this.tangentAt(t).toLength(1)))\r\n\t\t\tresult[bufferName].push(p, p.plus(this.normalP(t).toLength(1)))\r\n\t\t}\r\n\t\tresult[bufferName].push(this.p0, this.p1)\r\n\t\tresult[bufferName].push(this.p1, this.p2)\r\n\t\tresult[bufferName].push(this.p2, this.p3)\r\n\t}\r\n\r\n\tsplit(t: number): [BezierCurve, BezierCurve] {\r\n\t\t// do de Casteljau's algorithm at t, the resulting points are the points needed to create 2 new curves\r\n\t\tconst s = 1 - t\r\n\t\tconst { p0, p1, p2, p3 } = this\r\n\t\t/*\r\n\t\tp3 // n3\r\n\t\tb01 = s p0 + t p1\r\n\t\tb11 = s p1 + t p2\r\n\t\tb21 = s p2 + t p3 // n2\r\n\t\tb02 = s b01 + t b11\r\n\t\tb12 = s b11 + t b21 // n1\r\n\t\tb03 = s b02 + t b12 // n0\r\n\r\n\t\tc01 =\r\n\t\t*/\r\n\t\tconst b01 = p0.times(s).plus(p1.times(t)),\r\n\t\t\tb11 = p1.times(s).plus(p2.times(t)),\r\n\t\t\tb21 = p2.times(s).plus(p3.times(t))\r\n\t\tconst b02 = b01.times(s).plus(b11.times(t)),\r\n\t\t\tb12 = b11.times(s).plus(b21.times(t))\r\n\t\tconst b03 = b02.times(s).plus(b12.times(t))\r\n\t\treturn [new BezierCurve(p0, b01, b02, b03), new BezierCurve(b03, b12, b21, p3)]\r\n\t}\r\n\r\n\tcontainsPoint(p: V3): boolean {\r\n\t\treturn isFinite(this.pointT(p))\r\n\t}\r\n\r\n\troots(): Tuple3<number[]> {\r\n\t\t/**\r\n\t\t *            := (3 (p3 - p2) - 6 (p2 - p1) + 3 (p1 - p0)) t²*\r\n\t\t *                + (-6 (p1 - p0) + 6 (p2 - p1)) t\r\n\t\t *                + 3 (p1 - p0)\r\n\t\t *                */\r\n\t\tconst { p0, p1, p2, p3 } = this\r\n\t\tconst p01 = p1.minus(p0),\r\n\t\t\tp12 = p2.minus(p1),\r\n\t\t\tp23 = p3.minus(p2)\r\n\t\tconst a = p01\r\n\t\t\t.plus(p23)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p12.times(6))\r\n\t\tconst b = p12.minus(p01).times(6)\r\n\t\tconst c = p01.times(3)\r\n\r\n\t\treturn arrayFromFunction(3, dim => solveCubicReal2(0, a.e(dim), b.e(dim), c.e(dim)))\r\n\t}\r\n\r\n\tisInfosWithLine(\r\n\t\tanchorWC: V3,\r\n\t\tdirWC: V3,\r\n\t\ttMin?: number,\r\n\t\ttMax?: number,\r\n\t\tlineMin = -100000,\r\n\t\tlineMax = 100000,\r\n\t): ISInfo[] {\r\n\t\tconst dirLength = dirWC.length()\r\n\t\t// TODO: no:\r\n\t\tlet result = Curve.ispsRecursive(this, this.tMin, this.tMax, new L3(anchorWC, dirWC.unit()), lineMin, lineMax)\r\n\t\tresult = fuzzyUniquesF(result, info => info.tOther)\r\n\t\tresult.forEach(info => (info.tOther /= dirLength))\r\n\t\treturn result\r\n\t\t// looking for this.at(t) == line.at(s)\r\n\t\t// this.at(t).x == anchorWC.x + dirWC.x * s\r\n\t\t// (this.at(t).x - anchorWC.x) / dirWC.x == s (analogue for y and z) (1x, 1y, 1z)\r\n\t\t// (1x) - (1y):\r\n\t\t// (this.at(t).x - anchorWC.x) / dirWC.x - (this.at(t).y - anchorWC.y) / dirWC.y == 0\r\n\t\t// (this.at(t).x - anchorWC.x) * dirWC.y - (this.at(t).y - anchorWC.y) * dirWC.x == 0 (2)\r\n\r\n\t\t// cubic equation params (see #pointT):\r\n\t\tconst { p0, p1, p2, p3 } = this\r\n\t\tconst a = p1\r\n\t\t\t.minus(p2)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p0)\r\n\t\t\t.plus(p3)\r\n\t\tconst b = p0\r\n\t\t\t.plus(p2)\r\n\t\t\t.times(3)\r\n\t\t\t.minus(p1.times(6))\r\n\t\tconst c = p1.minus(p0).times(3)\r\n\t\tconst d = p0\r\n\r\n\t\t// modifier cubic equation stP to get (1)\r\n\t\t// const w = a.x * dirWC.y - a.y * dirWC.x\r\n\t\t// const x = b.x * dirWC.y - b.y * dirWC.x\r\n\t\t// const y = c.x * dirWC.y - c.y * dirWC.x\r\n\t\t// const z = (d.x - anchorWC.x) * dirWC.y - (d.y - anchorWC.y) * dirWC.x\r\n\r\n\t\t// the above version doesn't work for dirWC.x == dirWC.y == 0, so:\r\n\t\tconst absMinDim = dirWC.minAbsDim()\r\n\t\tconst [coord0, coord1] = [[1, 2], [2, 0], [0, 1]][absMinDim]\r\n\r\n\t\tconst w = a.e(coord0) * dirWC.e(coord1) - a.e(coord1) * dirWC.e(coord0)\r\n\t\tconst x = b.e(coord0) * dirWC.e(coord1) - b.e(coord1) * dirWC.e(coord0)\r\n\t\tconst y = c.e(coord0) * dirWC.e(coord1) - c.e(coord1) * dirWC.e(coord0)\r\n\t\tconst z =\r\n\t\t\t(d.e(coord0) - anchorWC.e(coord0)) * dirWC.e(coord1) - (d.e(coord1) - anchorWC.e(coord1)) * dirWC.e(coord0)\r\n\r\n\t\ttMin = undefined !== tMin ? tMin : this.tMin\r\n\t\ttMax = undefined !== tMax ? tMax : this.tMax\r\n\r\n\t\t// we ignored a dimension in the previous step, so we need to check it too\r\n\t\treturn solveCubicReal2(w, x, y, z).mapFilter(tThis => {\r\n\t\t\tif (tMin! <= tThis && tThis <= tMax!) {\r\n\t\t\t\tconst p = this.at(tThis)\r\n\t\t\t\t// console.log(t*t*t*w+t*t*x+t*y+z, dirWC.length())\r\n\t\t\t\tconst s = p.minus(anchorWC).dot(dirWC) / dirWC.dot(dirWC)\r\n\t\t\t\tconst lineAtS = dirWC.times(s).plus(anchorWC)\r\n\t\t\t\tif (lineAtS.like(p)) return { tThis: tThis, tOther: s, p: p }\r\n\t\t\t}\r\n\t\t\treturn undefined\r\n\t\t})\r\n\t}\r\n\r\n\tclosestPointToLine(line: L3, tMin: number, tMax: number) {\r\n\t\t// (this(t)-line(s)) * line.dir == 0 (1)\r\n\t\t// (this(t)-line(s)) * this.tangentAt(t) == 0 (2)\r\n\t\t// this(t) * line.dir - line(s) * line.dir == 0\r\n\t\t// this(t) * line.dir - line.anchor * line.dir - s line.dir * line.dir == 0\r\n\t\t// this(t) * line.dir - line.anchor * line.dir == s (3)\r\n\t\t// insert (3) in (2)\r\n\t\t// (this(t)-line(this(t) * line.dir - line.anchor * line.dir)) * this.tangentAt(t) == 0 (4)\r\n\t\t// (4) is a 5th degree polynomial, solve numerically\r\n\r\n\t\ttMin = isFinite(tMin) ? tMin : this.tMin\r\n\t\ttMax = isFinite(tMax) ? tMax : this.tMax\r\n\r\n\t\tconst anchorDotDir1 = line.anchor.dot(line.dir1)\r\n\t\tconst f = (t: number) => {\r\n\t\t\tconst atT = this.at(t)\r\n\t\t\treturn atT.minus(line.at(atT.dot(line.dir1) - anchorDotDir1)).dot(this.tangentAt(t))\r\n\t\t}\r\n\r\n\t\tconst STEPS = 32\r\n\t\tconst startT = arrayFromFunction(STEPS, i => tMin + (tMax - tMin) * i / STEPS).withMax(t => -f(t))\r\n\r\n\t\treturn newtonIterate1d(f, startT, 8)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param bezier\r\n\t * @param tMin\r\n\t * @param tMax\r\n\t * @param sMin\r\n\t * @param {number=} sMax\r\n\t * @returns\r\n\t */\r\n\tisInfosWithBezier3(bezier: BezierCurve, tMin?: number, tMax?: number, sMin?: number, sMax?: number) {\r\n\t\tconst handleStartTS = (startT: number, startS: number) => {\r\n\t\t\tif (!result.some(info => eq(info.tThis, startT) && eq(info.tOther, startS))) {\r\n\t\t\t\tconst f1: R2_R = (t, s) => this.tangentAt(t).dot(this.at(t).minus(bezier.at(s)))\r\n\t\t\t\tconst f2: R2_R = (t, s) => bezier.tangentAt(s).dot(this.at(t).minus(bezier.at(s)))\r\n\t\t\t\t// f = (b1, b2, t1, t2) = b1.tangentAt(t1).dot(b1.at(t1).minus(b2.at(t2)))\r\n\t\t\t\tconst fdt1 = (b1: BezierCurve, b2: BezierCurve, t1: number, t2: number) =>\r\n\t\t\t\t\tb1.ddt(t1).dot(b1.at(t1).minus(b2.at(t2))) + b1.tangentAt(t1).squared()\r\n\t\t\t\tconst fdt2 = (b1: BezierCurve, b2: BezierCurve, t1: number, t2: number) =>\r\n\t\t\t\t\t-b1.tangentAt(t1).dot(b2.tangentAt(t2))\r\n\t\t\t\tconst ni = newtonIterate2dWithDerivatives(\r\n\t\t\t\t\tf1,\r\n\t\t\t\t\tf2,\r\n\t\t\t\t\tstartT,\r\n\t\t\t\t\tstartS,\r\n\t\t\t\t\t16,\r\n\t\t\t\t\tfdt1.bind(undefined, this, bezier),\r\n\t\t\t\t\tfdt2.bind(undefined, this, bezier),\r\n\t\t\t\t\t(t, s) => -fdt2(bezier, this, s, t),\r\n\t\t\t\t\t(t, s) => -fdt1(bezier, this, s, t),\r\n\t\t\t\t)!\r\n\t\t\t\tresult.push({ tThis: ni.x, tOther: ni.y, p: this.at(ni.x) })\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttMin = undefined !== tMin ? tMin : this.tMin\r\n\t\ttMax = undefined !== tMax ? tMax : this.tMax\r\n\t\tsMin = undefined !== sMin ? sMin : bezier.tMin\r\n\t\tsMax = undefined !== sMax ? sMax : bezier.tMax\r\n\r\n\t\t// stack of indices:\r\n\t\tconst indices = [tMin, tMax, sMin, sMax]\r\n\t\tconst tMid = (tMin + tMax) / 2\r\n\t\tconst sMid = (sMin + sMax) / 2\r\n\t\tconst aabbs = [\r\n\t\t\tthis.getAABB(tMin, tMid),\r\n\t\t\tthis.getAABB(tMid, tMax),\r\n\t\t\tbezier.getAABB(sMin, sMin),\r\n\t\t\tbezier.getAABB(sMid, sMax),\r\n\t\t]\r\n\t\tconst result: ISInfo[] = []\r\n\t\twhile (indices.length) {\r\n\t\t\tconst i = indices.length - 4\r\n\t\t\tconst tMin = indices[i],\r\n\t\t\t\ttMax = indices[i + 1],\r\n\t\t\t\tsMin = indices[i + 2],\r\n\t\t\t\tsMax = indices[i + 3]\r\n\t\t\tindices.length -= 4\r\n\t\t\tconst thisAABB = this.getAABB(tMin, tMax)\r\n\t\t\tconst otherAABB = bezier.getAABB(sMin, sMax)\r\n\t\t\t// console.log(tMin, tMax, sMin, sMax, thisAABB.sce, otherAABB.sce)\r\n\t\t\tif (thisAABB && otherAABB && thisAABB.intersectsAABB2d(otherAABB)) {\r\n\t\t\t\tconst tMid = (tMin + tMax) / 2\r\n\t\t\t\tconst sMid = (sMin + sMax) / 2\r\n\t\t\t\tconst EPS = 0.00001\r\n\t\t\t\tif (tMax - tMin < EPS || sMax - sMin < EPS) {\r\n\t\t\t\t\tconsole.log(tMin, tMax, sMin, sMax)\r\n\t\t\t\t\tconsole.log(thisAABB.sce)\r\n\t\t\t\t\tconsole.log(otherAABB.sce)\r\n\t\t\t\t\tconsole.log(tMid, sMid)\r\n\t\t\t\t\thandleStartTS(tMid, sMid)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindices.push(\r\n\t\t\t\t\t\ttMin,\r\n\t\t\t\t\t\ttMid,\r\n\t\t\t\t\t\tsMin,\r\n\t\t\t\t\t\tsMid,\r\n\t\t\t\t\t\ttMin,\r\n\t\t\t\t\t\ttMid,\r\n\t\t\t\t\t\tsMid,\r\n\t\t\t\t\t\tsMax,\r\n\t\t\t\t\t\ttMid,\r\n\t\t\t\t\t\ttMax,\r\n\t\t\t\t\t\tsMin,\r\n\t\t\t\t\t\tsMid,\r\n\t\t\t\t\t\ttMid,\r\n\t\t\t\t\t\ttMax,\r\n\t\t\t\t\t\tsMid,\r\n\t\t\t\t\t\tsMax,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tisInfosWithBezier(bezier: BezierCurve, tMin?: number, tMax?: number, sMin?: number, sMax?: number): ISInfo[] {\r\n\t\ttMin = undefined !== tMin ? tMin : this.tMin\r\n\t\ttMax = undefined !== tMax ? tMax : this.tMax\r\n\t\tsMin = undefined !== sMin ? sMin : bezier.tMin\r\n\t\tsMax = undefined !== sMax ? sMax : bezier.tMax\r\n\r\n\t\tassertf(() => tMin! < tMax!)\r\n\t\tassertf(() => sMin! < sMax!)\r\n\t\tconst result: ISInfo[] = []\r\n\r\n\t\tconst likeCurves = this.likeCurve(bezier),\r\n\t\t\tcolinearCurves = this.isColinearTo(bezier)\r\n\t\tif (likeCurves || colinearCurves) {\r\n\t\t\tif (!likeCurves) {\r\n\t\t\t\t// only colinear\r\n\t\t\t\t// recalculate sMin and sMax so they are valid on this, from then on we can ignore bezier\r\n\t\t\t\tsMin = this.pointT(bezier.at(sMin))\r\n\t\t\t\tsMax = this.pointT(bezier.at(sMax))\r\n\t\t\t}\r\n\t\t\ttMin = Math.min(tMin, sMin)\r\n\t\t\ttMax = Math.max(tMax, sMax)\r\n\t\t\tconst splits = fuzzyUniques(\r\n\t\t\t\tthis.roots()\r\n\t\t\t\t\t.concatenated()\r\n\t\t\t\t\t.filter(isFinite)\r\n\t\t\t\t\t.concat([tMin, tMax]),\r\n\t\t\t).sort(MINUS)\r\n\t\t\t//const aabbs = arrayFromFunction(splits.length - 1, i => this.getAABB(splits[i], splits[i + 1]))\r\n\t\t\tArray.from(combinations(splits.length - 1)).forEach(({ i, j }) => {\r\n\t\t\t\t// adjacent curves can't intersect\r\n\t\t\t\tif (Math.abs(i - j) > 2) {\r\n\t\t\t\t\t// console.log(splits[i], splits[i + 1], splits[j], splits[j + 1], aabbs[i], aabbs[j])\r\n\t\t\t\t\t//findRecursive(splits[i], splits[i + 1], splits[j], splits[j + 1], aabbs[i], aabbs[j])\r\n\t\t\t\t\tresult.push(\r\n\t\t\t\t\t\t...Curve.ispsRecursive(this, splits[i], splits[i + 1], bezier, splits[j], splits[j + 1]),\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\treturn Curve.ispsRecursive(this, tMin, tMax, bezier, sMin, sMax)\r\n\t\t}\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tselfIntersectionsInfo() {\r\n\t\treturn this.isInfosWithBezier(this)\r\n\t}\r\n\r\n\tisInfosWithCurve(curve: Curve): ISInfo[] {\r\n\t\tif (curve instanceof L3) {\r\n\t\t\treturn this.isInfosWithLine(curve.anchor, curve.dir1, curve.tMin, curve.tMax)\r\n\t\t}\r\n\t\tif (curve instanceof BezierCurve) {\r\n\t\t\treturn this.isInfosWithBezier(curve)\r\n\t\t}\r\n\t\treturn curve.isInfosWithCurve(this).map(({ tThis, tOther, p }) => ({ tThis: tOther, tOther: tThis, p }))\r\n\t}\r\n\r\n\tmagic(t0: number = this.tMin, t1: number = this.tMax, result: SemiEllipseCurve[] = []): SemiEllipseCurve[] {\r\n\t\tconst max3d = 0.01,\r\n\t\t\teps = 0.01\r\n\t\tconst splits = 20\r\n\t\tconst ts = arrayFromFunction(splits, i => lerp(t0, t1, i / (splits - 1)))\r\n\t\tconst ps = ts.map(t => this.at(t))\r\n\t\tconst ns = ts.map(t => this.normalP(t).unit())\r\n\t\tconst f = (ns: V3[]) => {\r\n\t\t\tconst ls = ts.map((t, i) => new L3(ps[i], ns[i].unit()))\r\n\t\t\tconst isInfos = arrayFromFunction(splits - 1, i => {\r\n\t\t\t\tconst j = i + 1\r\n\t\t\t\tconst li = ls[i],\r\n\t\t\t\t\tlj = ls[j]\r\n\t\t\t\treturn li.infoClosestToLine(lj)\r\n\t\t\t})\r\n\t\t\tconst a = isInfos.map(isInfo => isInfo.s! - isInfo.t)\r\n\t\t\tconst centers = isInfos.map(isInfo => V3.lerp(isInfo.closest!, isInfo.closest2!, 0.5))\r\n\t\t\tconst b = arrayFromFunction(splits - 1, i => {\r\n\t\t\t\tconst tMid = lerp(ts[i], ts[i + 1], 0.5)\r\n\t\t\t\tconst pMid = this.at(tMid)\r\n\t\t\t\treturn pMid.distanceTo(centers[i]) ** 0.5\r\n\t\t\t})\r\n\t\t\treturn a.concat(b)\r\n\t\t}\r\n\t\tconst startX = V3.packXY(ns)\r\n\t\tconst ff = (xs: FloatArray) => {\r\n\t\t\treturn f(V3.unpackXY(xs))\r\n\t\t}\r\n\t\tlet x = new Vector(new Float64Array(startX))\r\n\t\tfor (let i = 0; i < 2; i++) {\r\n\t\t\tconst Fx = new Vector(new Float64Array(ff(x.v)))\r\n\t\t\tconsole.log(Fx.v)\r\n\t\t\tconst jacobi = Matrix.jacobi(ff, x.v)\r\n\t\t\tconsole.log('jacobi\\n', jacobi.toString(x => '' + x))\r\n\t\t\tconst jacobiDependentRowIndexes = jacobi.getDependentRowIndexes()\r\n\t\t\t//if (0 != jacobiDependentRowIndexes.length) {\r\n\t\t\t//\tconst error:any = new Error()\r\n\t\t\t//\terror.jacobiDependentRowIndexes = jacobiDependentRowIndexes\r\n\t\t\t//\tthrow error\r\n\t\t\t//}\r\n\t\t\tconst jacobiTranspose = jacobi.transposed()\r\n\t\t\tconsole.log(jacobi.times(jacobiTranspose).str)\r\n\t\t\tconsole.log(jacobi.times(jacobiTranspose).inversed().str)\r\n\t\t\tconst matrix = jacobiTranspose.times(jacobi.times(jacobiTranspose).inversed())\r\n\t\t\tconst xDiff = matrix.timesVector(Fx)\r\n\t\t\tx = x.minus(xDiff)\r\n\t\t}\r\n\t\tconst ns2 = V3.unpackXY(x.v)\r\n\t\tconst ls2 = arrayFromFunction(splits, i => new L3(ps[i], ns2[i].unit()))\r\n\t\tconst curves = arrayFromFunction(splits - 1, i => {\r\n\t\t\tconst j = i + 1\r\n\t\t\tconst li = ls2[i],\r\n\t\t\t\tlj = ls2[j]\r\n\t\t\tconst isInfo = li.infoClosestToLine(lj)\r\n\t\t\treturn SemiEllipseCurve.circleForCenter2P(isInfo.closest!, ps[i], ps[j], isInfo.s!)\r\n\t\t})\r\n\t\treturn curves\r\n\t}\r\n\r\n\tmagic2(t0: number = this.tMin, t1: number = this.tMax, result: SemiEllipseCurve[] = []): SemiEllipseCurve[] {\r\n\t\tconst max3d = 0.01,\r\n\t\t\teps = 0.01\r\n\t\tconst a = this.at(t0),\r\n\t\t\tb = this.at(t1)\r\n\t\tconst aN = this.normalP(t0).unit(),\r\n\t\t\tbN = this.normalP(t1).unit()\r\n\t\tconst aL = new L3(a, aN),\r\n\t\t\tbL = new L3(b, bN)\r\n\t\tconst isInfo = aL.infoClosestToLine(bL)\r\n\t\tif (isInfo.s! < 0 || isInfo.t < 0 || isInfo.distance > max3d || !eq(isInfo.s!, isInfo.t, eps)) {\r\n\t\t} else {\r\n\t\t\tconst centerPoint = V3.lerp(isInfo.closest!, isInfo.closest2!, 0.5)\r\n\t\t\tconst testT1 = lerp(t0, t1, 1 / 2),\r\n\t\t\t\ttestP1 = this.at(testT1)\r\n\t\t\tconst testT2 = lerp(t0, t1, 2 / 3),\r\n\t\t\t\ttestP2 = this.at(testT2)\r\n\t\t\tconst radius = (isInfo.s! + isInfo.t) / 2\r\n\t\t\tif (eq(centerPoint.distanceTo(testP1), radius, eps)) {\r\n\t\t\t\tconst newCurve = SemiEllipseCurve.circleForCenter2P(centerPoint, a, b, radius)\r\n\t\t\t\tresult.push(newCurve)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst tMid = (t0 + t1) / 2\r\n\t\tthis.magic(t0, tMid, result)\r\n\t\tthis.magic(tMid, t1, result)\r\n\t\treturn result\r\n\t}\r\n}\r\n\r\nBezierCurve.prototype.hlol = Curve.hlol++\r\nBezierCurve.prototype.tIncrement = 1 / 80\r\n","import { arrayFromFunction, assertNumbers, eq, eq0, hasConstructor, le, snap0, V3 } from 'ts3dutils'\r\n\r\nimport { Curve, intersectionUnitHyperbolaLine, XiEtaCurve } from '../index'\r\n\r\nimport { abs, PI, sign } from '../math'\r\n\r\n/**\r\n * x² - y² = 1\r\n *\r\n */\r\nexport class HyperbolaCurve extends XiEtaCurve {\r\n\tstatic XY = new HyperbolaCurve(V3.O, V3.X, V3.Y)\r\n\r\n\tconstructor(center: V3, f1: V3, f2: V3, tMin: number = -7, tMax: number = 7) {\r\n\t\tsuper(center, f1, f2, tMin, tMax)\r\n\t}\r\n\r\n\tstatic XYLCValid(pLC: V3): boolean {\r\n\t\treturn pLC.x > 0 && eq(1, pLC.x * pLC.x - pLC.y * pLC.y)\r\n\t}\r\n\r\n\tstatic XYLCPointT(pLC: V3): number {\r\n\t\treturn Math.asinh(pLC.y)\r\n\t}\r\n\r\n\t/**\r\n\t * http://www.wolframalpha.com/input/?i=x%C2%BRep-y%C2%BRep%3D1,ax%2Bby%3Dc\r\n\t * Minor empiric test shows asinh(eta) consistently gets more accurate results than atanh(eta/xi)\r\n\t */\r\n\tstatic intersectionUnitLine(a: number, b: number, c: number): number[] {\r\n\t\tif (eq0(b)) {\r\n\t\t\tconst sqrtVal = snap0(c ** 2 / a ** 2 - 1)\r\n\t\t\tif (sqrtVal < 0 || c * a < 0) {\r\n\t\t\t\treturn []\r\n\t\t\t} else if (sqrtVal == 0) {\r\n\t\t\t\treturn [0]\r\n\t\t\t}\r\n\t\t\tconst eta1 = Math.sqrt(sqrtVal)\r\n\t\t\treturn [-Math.asinh(eta1), Math.asinh(eta1)]\r\n\t\t} else if (eq(abs(a), abs(b))) {\r\n\t\t\tif (le(c * a, 0)) {\r\n\t\t\t\treturn []\r\n\t\t\t}\r\n\t\t\tconst eta = sign(a * b) * (c ** 2 - a ** 2) / 2 / a / c\r\n\t\t\treturn [Math.asinh(eta)]\r\n\t\t} else {\r\n\t\t\tconst sqrtVal = snap0(b ** 2 * (-(a ** 2) + b ** 2 + c ** 2))\r\n\t\t\tif (sqrtVal < 0) {\r\n\t\t\t\treturn []\r\n\t\t\t}\r\n\t\t\tconst xi1 = (a * c - Math.sqrt(sqrtVal)) / (a ** 2 - b ** 2)\r\n\t\t\tconst xi2 = (a * c + Math.sqrt(sqrtVal)) / (a ** 2 - b ** 2)\r\n\t\t\tconst eta1 = (b ** 2 * c - a * Math.sqrt(sqrtVal)) / (b * (b ** 2 - a ** 2))\r\n\t\t\tconst eta2 = (b ** 2 * c + a * Math.sqrt(sqrtVal)) / (b * (b ** 2 - a ** 2))\r\n\t\t\treturn [xi1 > 0 && Math.asinh(eta1), xi2 > 0 && Math.asinh(eta2)].filter(\r\n\t\t\t\t(x: any): x is number => x !== false,\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\tat(t: number): V3 {\r\n\t\tassertNumbers(t)\r\n\t\t// = center + f1 cosh t + f2 sinh t\r\n\t\treturn this.center.plus(this.f1.times(Math.cosh(t))).plus(this.f2.times(Math.sinh(t)))\r\n\t}\r\n\r\n\ttoString() {\r\n\t\treturn `${this.center} + ${this.f1} * cosh(t) + ${this.f2} * sinh(t)`\r\n\t}\r\n\r\n\ttangentAt(t: number): V3 {\r\n\t\tassertNumbers(t)\r\n\t\t// = f1 sinh t + f2 cosh t\r\n\t\treturn this.f1.times(Math.sinh(t)).plus(this.f2.times(Math.cosh(t)))\r\n\t}\r\n\r\n\ttangentAt2(xi: number, eta: number): V3 {\r\n\t\tassertNumbers(xi, eta)\r\n\t\t// = f1 eta + f2 xi\r\n\t\treturn this.f1.times(eta).plus(this.f2.times(xi))\r\n\t}\r\n\r\n\tddt(t: number): V3 {\r\n\t\tassertNumbers(t)\r\n\t\treturn this.f1.times(Math.cosh(t)).plus(this.f2.times(Math.sinh(t)))\r\n\t}\r\n\r\n\tisColinearTo(curve: Curve): boolean {\r\n\t\tif (!hasConstructor(curve, HyperbolaCurve)) return false\r\n\t\tif (!curve.center || !this.center.like(curve.center)) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (this === curve) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tconst { f1: f1, f2: f2 } = this.rightAngled(),\r\n\t\t\t{ f1: c1, f2: c2 } = curve.rightAngled()\r\n\t\treturn eq(f1.squared(), Math.abs(f1.dot(c1))) && eq(f2.squared(), Math.abs(f2.dot(c2)))\r\n\t}\r\n\r\n\treversed() {\r\n\t\treturn new HyperbolaCurve(this.center, this.f1, this.f2.negated(), -this.tMax, -this.tMin)\r\n\t}\r\n\r\n\trightAngled(): HyperbolaCurve {\r\n\t\tconst f1 = this.f1,\r\n\t\t\tf2 = this.f2,\r\n\t\t\ta = f1.dot(f2),\r\n\t\t\tb = f2.squared() + f1.squared()\r\n\t\tif (eq0(a)) {\r\n\t\t\treturn this\r\n\t\t}\r\n\t\tconst g1 = 2 * a,\r\n\t\t\tg2 = b + Math.sqrt(b * b - 4 * a * a)\r\n\t\tconst { x1: xi, y1: eta } = intersectionUnitHyperbolaLine(g1, g2, 0)\r\n\t\treturn new HyperbolaCurve(this.center, f1.times(xi).plus(f2.times(eta)), f1.times(eta).plus(f2.times(xi)))\r\n\t}\r\n\r\n\teccentricity(): number {\r\n\t\tconst mainAxes = this.rightAngled()\r\n\t\tconst f1length = mainAxes.f1.length(),\r\n\t\t\tf2length = mainAxes.f1.length()\r\n\t\tconst [a, b] = f1length > f2length ? [f1length, f2length] : [f2length, f1length]\r\n\t\treturn Math.sqrt(1 + b * b / a / a)\r\n\t}\r\n\r\n\troots(): [number[], number[], number[]] {\r\n\t\t// tangent(t) = f1 sinh t + f2 cosh t = 0\r\n\t\t// tangentAt2(xi, eta) = f1 eta + f2 xi = V3.O\r\n\t\t// xi² - eta² = 1 (by def for hyperbola)\r\n\r\n\t\treturn arrayFromFunction(3, dim => {\r\n\t\t\tconst a = this.f2.e(dim),\r\n\t\t\t\tb = this.f1.e(dim)\r\n\t\t\treturn HyperbolaCurve.intersectionUnitLine(a, b, 0)\r\n\t\t})\r\n\t}\r\n}\r\n\r\nHyperbolaCurve.prototype.tIncrement = PI / 16\r\n","import {\r\n\tarrayFromFunction,\r\n\tassert,\r\n\tassertf,\r\n\tassertInst,\r\n\tassertNumbers,\r\n\tassertVectors,\r\n\tclamp,\r\n\teq,\r\n\teq0,\r\n\thasConstructor,\r\n\tint,\r\n\tM4,\r\n\tTAU,\r\n\tV3,\r\n} from 'ts3dutils'\r\nimport { pushQuad } from 'tsgl'\r\n\r\nimport { Curve, FaceMesh, ISInfo, P3, Surface } from '../index'\r\n\r\n/**\r\n * A 3-dimensional line. Defined by an anchor and a normalized direction vector.\r\n */\r\nexport class L3 extends Curve {\r\n\tisInfosWithLine(\r\n\t\tanchorWC: V3,\r\n\t\tdirWC: V3,\r\n\t\ttMin?: number,\r\n\t\ttMax?: number,\r\n\t\tlineMin?: number,\r\n\t\tlineMax?: number,\r\n\t): ISInfo[] {\r\n\t\tthrow new Error('Method not implemented.')\r\n\t}\r\n\tisTsWithSurface(surface: Surface): number[] {\r\n\t\treturn surface.isTsForLine(this)\r\n\t}\r\n\tstatic anchorDirection = (anchor: V3, dir: V3): L3 => new L3(anchor, dir.unit())\r\n\tstatic readonly X: L3 = new L3(V3.O, V3.X)\r\n\tstatic readonly Y: L3 = new L3(V3.O, V3.Y)\r\n\tstatic readonly Z: L3 = new L3(V3.O, V3.Z)\r\n\r\n\tconstructor(\r\n\t\treadonly anchor: V3, // line anchor\r\n\t\treadonly dir1: V3, // normalized line dir\r\n\t\ttMin: number = -4096,\r\n\t\ttMax: number = 4096,\r\n\t) {\r\n\t\tsuper(tMin, tMax)\r\n\t\tassertVectors(anchor, dir1)\r\n\t\tassert(dir1.hasLength(1), 'dir must be unit' + dir1)\r\n\t\tassertf(() => !Number.isNaN(anchor.x))\r\n\t}\r\n\r\n\tstatic throughPoints(anchor: V3, b: V3, tMin?: number, tMax?: number): L3 {\r\n\t\treturn new L3(anchor, b.minus(anchor).unit(), tMin, tMax)\r\n\t}\r\n\r\n\tstatic pointT(anchor: V3, dir: V3, x: V3) {\r\n\t\tassertVectors(anchor, dir, x)\r\n\t\treturn x.minus(anchor).dot(dir) / dir.squared()\r\n\t}\r\n\r\n\tstatic at(anchor: V3, dir: V3, t: number) {\r\n\t\treturn anchor.plus(dir.times(t))\r\n\t}\r\n\r\n\t/**\r\n\t * Create new line which is the intersection of two planes. Throws error if planes are parallel.\r\n\t * @param plane1\r\n\t * @param plane2\r\n\t */\r\n\tstatic fromPlanes(plane1: P3, plane2: P3): L3 {\r\n\t\tassertInst(P3, plane1, plane2)\r\n\t\tconst dir = plane1.normal1.cross(plane2.normal1)\r\n\t\tconst length = dir.length()\r\n\t\tif (length < 1e-10) {\r\n\t\t\tthrow new Error('Parallel planes')\r\n\t\t}\r\n\r\n\t\treturn plane1.intersectionWithPlane(plane2)!\r\n\t}\r\n\r\n\tstatic containsPoint(anchor: V3, dir: V3, p: V3) {\r\n\t\tconst closestT = L3.pointT(anchor, dir, p)\r\n\t\tconst distance = L3.at(anchor, dir, closestT).distanceTo(p)\r\n\t\treturn eq0(distance)\r\n\t}\r\n\r\n\taddToMesh(\r\n\t\tmesh: FaceMesh,\r\n\t\tres: int = 4,\r\n\t\tradius: number = 0,\r\n\t\tpointStep = 1,\r\n\t\ttMin = this.tMin,\r\n\t\ttMax = this.tMax,\r\n\t): void {\r\n\t\tconst baseNormals = arrayFromFunction(res, i => V3.polar(1, TAU * i / res))\r\n\t\tconst baseVertices = arrayFromFunction(res, i => V3.polar(radius, TAU * i / res))\r\n\t\tfor (let i = 0; i <= 1; i += this.tIncrement) {\r\n\t\t\tconst start = mesh.vertices.length\r\n\t\t\tif (0 !== i) {\r\n\t\t\t\tfor (let j = 0; j < res; j++) {\r\n\t\t\t\t\tpushQuad(\r\n\t\t\t\t\t\tmesh.TRIANGLES,\r\n\t\t\t\t\t\ttrue,\r\n\t\t\t\t\t\tstart - res + j,\r\n\t\t\t\t\t\tstart + j,\r\n\t\t\t\t\t\tstart - res + (j + 1) % res,\r\n\t\t\t\t\t\tstart + (j + 1) % res,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst t = 0 == i ? tMin : tMax\r\n\t\t\tconst point = this.at(t),\r\n\t\t\t\tx = this.dir1.getPerpendicular()\r\n\t\t\tconst matrix = M4.forSys(x, this.dir1.cross(x), this.dir1, point)\r\n\t\t\tmesh.normals.push(...matrix.transformedVectors(baseNormals))\r\n\t\t\tmesh.vertices.push(...matrix.transformedPoints(baseVertices))\r\n\t\t}\r\n\t}\r\n\r\n\troots(): [number[], number[], number[]] {\r\n\t\treturn [[], [], []]\r\n\t}\r\n\r\n\tcontainsPoint(p: V3): boolean {\r\n\t\tassertVectors(p)\r\n\t\tconst dist = this.distanceToPoint(p)\r\n\t\tassertNumbers(dist)\r\n\t\treturn eq0(dist)\r\n\t}\r\n\r\n\tlikeCurve(curve: Curve): boolean {\r\n\t\treturn (\r\n\t\t\tthis == curve || (hasConstructor(curve, L3) && this.anchor.like(curve.anchor) && this.dir1.like(curve.dir1))\r\n\t\t)\r\n\t}\r\n\r\n\tequals(obj: any): boolean {\r\n\t\treturn (\r\n\t\t\tthis == obj ||\r\n\t\t\t(Object.getPrototypeOf(obj) == L3.prototype && this.anchor.equals(obj.anchor) && this.dir1.equals(obj.dir1))\r\n\t\t)\r\n\t}\r\n\r\n\tisColinearTo(obj: Curve): boolean {\r\n\t\treturn obj instanceof L3 && this.containsPoint(obj.anchor) && eq(1, Math.abs(this.dir1.dot(obj.dir1)))\r\n\t}\r\n\r\n\tdistanceToLine(line: L3): number {\r\n\t\tassertInst(L3, line)\r\n\t\tif (this.isParallelToLine(line)) {\r\n\t\t\treturn this.distanceToPoint(line.anchor)\r\n\t\t}\r\n\t\tconst dirCross1 = this.dir1.cross(line.dir1).unit()\r\n\t\tconst anchorDiff = this.anchor.minus(line.anchor)\r\n\t\treturn Math.abs(anchorDiff.dot(dirCross1))\r\n\t}\r\n\r\n\tdistanceToPoint(x: V3): number {\r\n\t\tassertVectors(x)\r\n\t\t// See http://mathworld.wolfram.com/Point-LineDistance3-Dimensional.html\r\n\t\tconst t = x.minus(this.anchor).dot(this.dir1)\r\n\t\treturn this.at(t).distanceTo(x)\r\n\r\n\t\t//return x.minus(this.anchor).cross(x.minus(this.anchor.plus(this.dir1))).length()\r\n\t}\r\n\r\n\tasSegmentDistanceToPoint(x: V3, sStart: number, sEnd: number) {\r\n\t\tlet t = x.minus(this.anchor).dot(this.dir1)\r\n\t\tt = clamp(t, sStart, sEnd)\r\n\t\treturn this.at(t)\r\n\t\t\t.minus(x)\r\n\t\t\t.length()\r\n\t}\r\n\r\n\tasSegmentDistanceToLine(line: L3, sStart: number, sEnd: number) {\r\n\t\tassertInst(L3, line)\r\n\t\tconst dirCross = this.dir1.cross(line.dir1)\r\n\t\tconst div = dirCross.squared()\r\n\t\tif (eq0(div)) {\r\n\t\t\treturn undefined\r\n\t\t} // lines parallel\r\n\t\tconst anchorDiff = line.anchor.minus(this.anchor)\r\n\t\t// check if distance is zero (see also L3.distanceToLine)\r\n\t\tif (!eq0(anchorDiff.dot(dirCross.unit()))) {\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t\tlet t = this.infoClosestToLine(line).t\r\n\t\tt = clamp(t, sStart, sEnd)\r\n\t\treturn this.at(clamp(t, sStart, sEnd))\r\n\t}\r\n\r\n\tat(t: number): V3 {\r\n\t\tassertNumbers(t)\r\n\t\treturn this.anchor.plus(this.dir1.times(t))\r\n\t}\r\n\r\n\t/**\r\n\t * This function returns lambda for a given point x\r\n\t *\r\n\t * Every point x on this line is described by the equation\r\n\t *      x = this.anchor + lambda * this.dir1 | - this.anchor\r\n\t *      x - this.anchor = lambda * this.dir1 | DOT this.dir1\r\n\t *      (x - this.anchor) DOT this.dir1 = lambda (dir1² is 1 as |dir1| == 1)\r\n\t *\r\n\t *  @param x\r\n\t *  @returns\r\n\t */\r\n\tpointT(x: V3): number {\r\n\t\tassertVectors(x)\r\n\t\tconst t = x.minus(this.anchor).dot(this.dir1)\r\n\t\treturn t\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true if the line is parallel (this.dir = line.dir || this.dir = -line.dir) to the argument.\r\n\t */\r\n\tisParallelToLine(line: L3): boolean {\r\n\t\tassertInst(L3, line)\r\n\t\t// we know that 1 == this.dir1.length() == line.dir1.length(), we can check for parallelity simpler than\r\n\t\t// isParallelTo()\r\n\t\treturn eq(1, Math.abs(this.dir1.dot(line.dir1)))\r\n\t}\r\n\r\n\tangleToLine(line: L3): number {\r\n\t\tassertInst(L3, line)\r\n\t\treturn this.dir1.angleTo(line.dir1)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param line\r\n\t * @returns {boolean} If the distance between the lines is zero\r\n\t */\r\n\tintersectsLine(line: L3): boolean {\r\n\t\treturn eq0(this.distanceToLine(line))\r\n\t}\r\n\r\n\tisInfosWithCurve(curve: Curve): ISInfo[] {\r\n\t\tif (curve instanceof L3) {\r\n\t\t\tconst dirCross = this.dir1.cross(curve.dir1)\r\n\t\t\tconst div = dirCross.squared()\r\n\t\t\tif (eq0(div)) {\r\n\t\t\t\t// lines are parallel\r\n\t\t\t\treturn []\r\n\t\t\t}\r\n\t\t\tconst anchorDiff = curve.anchor.minus(this.anchor)\r\n\t\t\tif (eq0(anchorDiff.dot(dirCross))) {\r\n\t\t\t\tconst tThis = anchorDiff.cross(curve.dir1).dot(dirCross) / div\r\n\t\t\t\tconst tOther = anchorDiff.cross(this.dir1).dot(dirCross) / div\r\n\t\t\t\tconst p = this.at(tThis)\r\n\t\t\t\treturn [{ tThis: tThis, tOther: tOther, p: p }]\r\n\t\t\t}\r\n\t\t\treturn []\r\n\t\t}\r\n\t\treturn super.isInfosWithCurve(curve)\r\n\t}\r\n\r\n\tisInfoWithLine(line: L3): V3 | undefined {\r\n\t\t// todo infos?\r\n\t\tassertInst(L3, line)\r\n\t\tconst dirCross = this.dir1.cross(line.dir1)\r\n\t\tconst div = dirCross.squared()\r\n\t\tif (eq0(div)) {\r\n\t\t\treturn undefined\r\n\t\t} // lines parallel\r\n\t\tconst anchorDiff = line.anchor.minus(this.anchor)\r\n\t\t// check if distance is zero (see also L3.distanceToLine)\r\n\t\tif (!eq0(anchorDiff.dot(dirCross.unit()))) {\r\n\t\t\treturn undefined\r\n\t\t}\r\n\t\tconst t = anchorDiff.cross(line.dir1).dot(dirCross) / div\r\n\t\treturn this.at(t)\r\n\t}\r\n\r\n\t/**\r\n\t * returns s and t with this.at(s) == line.at(t)\r\n\t */\r\n\tintersectionLineST(line: L3): { s: number; t: number } {\r\n\t\t// the two points on two lines the closest two each other are the ones whose\r\n\t\t// connecting\r\n\t\t// TODO Where does this come from?\r\n\t\t// TODO: return value when no IS?\r\n\t\tassertInst(L3, line)\r\n\t\tconst dirCross = this.dir1.cross(line.dir1)\r\n\t\tconst div = dirCross.squared()\r\n\t\tconst anchorDiff = line.anchor.minus(this.anchor)\r\n\t\tconst s = anchorDiff.cross(this.dir1).dot(dirCross) / div\r\n\t\tconst t = anchorDiff.cross(line.dir1).dot(dirCross) / div\r\n\t\treturn { s: s, t: t }\r\n\t\t//console.log(segmentIntersectsRay, a, b, \"ab\", ab, \"p\", p, \"dir\", dir, s > 0 && t / div >= 0 && t / div <= 1,\r\n\t\t// \"s\", s, \"t\", t, \"div\", div)\r\n\t}\r\n\r\n\tddt(t: number): V3 {\r\n\t\treturn V3.O\r\n\t}\r\n\r\n\tgetConstructorParameters(): any[] {\r\n\t\treturn [this.anchor, this.dir1, this.tMin, this.tMax]\r\n\t}\r\n\r\n\tclosestTToPoint(p: V3): number {\r\n\t\t// similar logic as pointT; we project the vector (anchor -> p) onto dir1, then add anchor back to it\r\n\t\tconst nearestT = p.minus(this.anchor).dot(this.dir1)\r\n\t\treturn nearestT\r\n\t}\r\n\r\n\tinfoClosestToLine(line: L3): { t: number; s?: number; closest?: V3; closest2?: V3; distance: number } {\r\n\t\t/*\r\n\t\t line = a + s*b\r\n\t\t this = c + t*d\r\n\r\n\t\t (this - line) * b = 0\r\n\t\t (this - line) * d = 0\r\n\r\n\t\t (a + s*b - c - t*d) * b = 0\r\n\t\t (a + s*b - c - t*d) * d = 0\r\n\r\n\t\t (a - c + s*b - t*d) * b = 0\r\n\t\t (a - c + s*b - t*d) * d = 0\r\n\r\n\t\t (a - c)*b + (s*b - t*d)*b = 0\r\n\t\t (a - c)*d + (s*b - t*d)*d = 0\r\n\r\n\t\t (a - c)*b + s*(b*b) - t*(d*b) = 0\r\n\t\t (a - c)*d + s*(b*d) - t*(d*d) = 0\r\n\r\n\t\t s = (t*(d*b) - (a - c)*b) / (b*b)\r\n\t\t =>\r\n\t\t (a - c)*d + (t*(d*b) - (a - c)*b) / (b*b)*(b*d) - t*(d*d) = 0 | * (b*b)\r\n\t\t (a - c)*d * (b*b) + (t*(d*b) - (a - c)*b)*(b*d) - t*(d*d) * (b*b) = 0\r\n\t\t (a - c)*d * (b*b) + t*(d*b)*(b*d) - (a - c)*b*(b*d) - t*(d*d) * (b*b) = 0\r\n\t\t t = ((a - c)*b*(b*d) - (a - c)*d * (b*b)) / ((d*b)*(b*d) - (d*d) * (b*b))\r\n\t\t */\r\n\t\tif (this.isParallelToLine(line)) {\r\n\t\t\treturn { t: NaN, s: NaN, distance: this.distanceToLine(line) }\r\n\t\t}\r\n\t\tconst a = line.anchor,\r\n\t\t\tb = line.dir1,\r\n\t\t\tc = this.anchor,\r\n\t\t\td = this.dir1\r\n\t\tconst bd = b.dot(d),\r\n\t\t\tbb = b.squared(),\r\n\t\t\tdd = d.squared(),\r\n\t\t\tca = a.minus(c),\r\n\t\t\tdivisor = bd * bd - dd * bb\r\n\t\tconst t = (ca.dot(b) * bd - ca.dot(d) * bb) / divisor\r\n\t\tconst s = (ca.dot(b) * dd - ca.dot(d) * bd) / divisor\r\n\t\treturn {\r\n\t\t\tt: t,\r\n\t\t\ts: s,\r\n\t\t\tclosest: this.at(t),\r\n\t\t\tclosest2: line.at(s),\r\n\t\t\tdistance: this.at(t).distanceTo(line.at(s)),\r\n\t\t}\r\n\t}\r\n\r\n\tintersectionWithPlane(plane: P3): V3 {\r\n\t\t// plane: plane.normal1 * p = plane.w\r\n\t\t// line: p=line.point + lambda * line.dir1\r\n\t\tconst lambda = (plane.w - plane.normal1.dot(this.anchor)) / plane.normal1.dot(this.dir1)\r\n\t\tconst point = this.anchor.plus(this.dir1.times(lambda))\r\n\t\treturn point\r\n\t}\r\n\r\n\ttangentAt(t: number): V3 {\r\n\t\treturn this.dir1\r\n\t}\r\n\r\n\tisTWithPlane(plane: P3): number {\r\n\t\t// plane: plane.normal1 * p = plane.w\r\n\t\t// line: p=line.point + lambda * line.dir1\r\n\t\tconst div = plane.normal1.dot(this.dir1)\r\n\t\tif (eq0(div)) return NaN\r\n\t\tconst lambda = (plane.w - plane.normal1.dot(this.anchor)) / div\r\n\t\treturn lambda\r\n\t}\r\n\r\n\treversed() {\r\n\t\treturn new L3(this.anchor, this.dir1.negated(), -this.tMax, -this.tMin)\r\n\t}\r\n\r\n\tisTsWithPlane(plane: P3) {\r\n\t\treturn [this.isTWithPlane(plane)]\r\n\t}\r\n\r\n\tflipped() {\r\n\t\treturn new L3(this.anchor, this.dir1.negated())\r\n\t}\r\n\r\n\ttransform(m4: M4) {\r\n\t\tconst newAnchor = m4.transformPoint(this.anchor)\r\n\t\tconst newDir = m4.transformVector(this.dir1)\r\n\t\treturn new L3(newAnchor, newDir.unit(), this.tMin * newDir.length(), this.tMax * newDir.length()) as this\r\n\t}\r\n\r\n\thashCode(): int {\r\n\t\treturn this.anchor.hashCode() * 31 + this.dir1.hashCode()\r\n\t}\r\n}\r\n\r\nL3.prototype.hlol = Curve.hlol++\r\nL3.prototype.tIncrement = 256\r\n","import {\r\n\tarrayRange,\r\n\tassert,\r\n\tassertVectors,\r\n\tbisect,\r\n\tcallsce,\r\n\tclamp,\r\n\tfuzzyUniques,\r\n\tint,\r\n\tM4,\r\n\tnewtonIterate2dWithDerivatives,\r\n\tV3,\r\n} from 'ts3dutils'\r\n\r\nimport {\r\n\tCurve,\r\n\tcurvePoint,\r\n\tfollowAlgorithm2d,\r\n\tImplicitCurve,\r\n\tImplicitSurface,\r\n\tMathFunctionR2R,\r\n\tP3,\r\n\tParametricSurface,\r\n\tPlaneSurface,\r\n\tProjectedCurveSurface,\r\n\tR2_R,\r\n\tSemiEllipsoidSurface,\r\n\tSurface,\r\n} from '../index'\r\n\r\nimport { abs, ceil, floor, max, min } from '../math'\r\n\r\nexport class PICurve extends ImplicitCurve {\r\n\tdids: (s: number, t: number) => number\r\n\tdidt: (s: number, t: number) => number\r\n\r\n\tconstructor(\r\n\t\tpoints: ReadonlyArray<V3>,\r\n\t\ttangents: ReadonlyArray<V3>,\r\n\t\treadonly parametricSurface: ParametricSurface,\r\n\t\treadonly implicitSurface: ImplicitSurface,\r\n\t\treadonly pmPoints: ReadonlyArray<V3>,\r\n\t\treadonly pmTangents: ReadonlyArray<V3>,\r\n\t\treadonly stepSize: number,\r\n\t\tdir: number = 1,\r\n\t\tgenerator?: string,\r\n\t\ttMin?: number,\r\n\t\ttMax?: number,\r\n\t) {\r\n\t\tsuper(points, tangents, dir, generator, tMin, tMax)\r\n\t\tassert(Array.isArray(pmPoints))\r\n\t\tassert(dir == 1)\r\n\t\tassert(stepSize <= 1)\r\n\t\tconst pf = parametricSurface.pSTFunc()\r\n\t\tconst dpds = parametricSurface.dpds()\r\n\t\tconst dpdt = parametricSurface.dpdt()\r\n\t\tconst didp = implicitSurface.didp.bind(implicitSurface)\r\n\t\tthis.dids = (s, t) => didp(pf(s, t)).dot(dpds(s, t))\r\n\t\tthis.didt = (s, t) => didp(pf(s, t)).dot(dpdt(s, t))\r\n\t\tfor (let i = 0; i < points.length - 1; i++) {\r\n\t\t\tassert(!points[i].equals(points[i + 1]))\r\n\t\t\t//assert(parametricSurface.pST(pmPoints[i].x, pmPoints[i].y).equals(points[i]))\r\n\t\t}\r\n\t\t{\r\n\t\t\tconst ps = this.parametricSurface\r\n\t\t\tconst is = implicitSurface\r\n\t\t\tconst pFunc = ps.pSTFunc(),\r\n\t\t\t\tiFunc = is.implicitFunction()\r\n\t\t\tconst dpds = ps.dpds()\r\n\t\t\tconst dpdt = ps.dpdt()\r\n\t\t\tconst didp = is.didp.bind(is)\r\n\t\t\tconst mf = MathFunctionR2R.forFFxFy(\r\n\t\t\t\t(x, y) => iFunc(pFunc(x, y)),\r\n\t\t\t\t(s, t) => didp(pFunc(s, t)).dot(dpds(s, t)),\r\n\t\t\t\t(s, t) => didp(pFunc(s, t)).dot(dpdt(s, t)),\r\n\t\t\t)\r\n\t\t\tconst { points } = followAlgorithm2d(\r\n\t\t\t\tmf,\r\n\t\t\t\tthis.pmPoints[0],\r\n\t\t\t\tstepSize,\r\n\t\t\t\tps,\r\n\t\t\t\t(s, t) => is.containsPoint(pFunc(s, t)),\r\n\t\t\t\tthis.pmPoints.last,\r\n\t\t\t\tthis.pmTangents[0],\r\n\t\t\t)\r\n\t\t\tif (points.length !== this.points.length) {\r\n\t\t\t\tfollowAlgorithm2d(\r\n\t\t\t\t\tmf,\r\n\t\t\t\t\tthis.pmPoints[0],\r\n\t\t\t\t\tstepSize,\r\n\t\t\t\t\tps,\r\n\t\t\t\t\t(s, t) => is.containsPoint(pFunc(s, t)),\r\n\t\t\t\t\tthis.pmPoints.last,\r\n\t\t\t\t\tthis.pmTangents[0],\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t\tassert(points.length == this.points.length, points.length, this.points.length)\r\n\t\t}\r\n\t}\r\n\r\n\tstatic forParametricStartEnd(\r\n\t\tps: ParametricSurface,\r\n\t\tis: ImplicitSurface,\r\n\t\tpmStart: V3,\r\n\t\tpmEnd: V3,\r\n\t\tstepSize: number = 0.02,\r\n\t\tstartPMTangent?: V3,\r\n\t\ttMin?: number,\r\n\t\ttMax?: number,\r\n\t): PICurve {\r\n\t\tconst pFunc = ps.pSTFunc(),\r\n\t\t\tiFunc = is.implicitFunction()\r\n\t\tconst dpds = ps.dpds()\r\n\t\tconst dpdt = ps.dpdt()\r\n\t\tconst didp = is.didp.bind(is)\r\n\t\tconst mf = MathFunctionR2R.forFFxFy(\r\n\t\t\t(x, y) => iFunc(pFunc(x, y)),\r\n\t\t\t(s, t) => didp(pFunc(s, t)).dot(dpds(s, t)),\r\n\t\t\t(s, t) => didp(pFunc(s, t)).dot(dpdt(s, t)),\r\n\t\t)\r\n\t\tconst { points, tangents } = followAlgorithm2d(\r\n\t\t\tmf,\r\n\t\t\tpmStart,\r\n\t\t\tstepSize,\r\n\t\t\tps,\r\n\t\t\t(s, t) => is.containsPoint(pFunc(s, t)),\r\n\t\t\tpmEnd,\r\n\t\t\tstartPMTangent,\r\n\t\t)\r\n\t\treturn PICurve.forParametricPointsTangents(ps, is, points, tangents, stepSize, 1, tMin, tMax)\r\n\t}\r\n\r\n\tstatic forStartEnd(\r\n\t\tps: ParametricSurface,\r\n\t\tis: ImplicitSurface,\r\n\t\tstart: V3,\r\n\t\tend: V3,\r\n\t\tstepSize: number = 0.02,\r\n\t\tstartTangent?: V3,\r\n\t\tmin?: V3,\r\n\t\tmax?: V3,\r\n\t): PICurve {\r\n\t\tconst startPM = ps.stP(start)\r\n\t\tconst dpds = ps.dpds()(startPM.x, startPM.y),\r\n\t\t\tdpdt = ps.dpdt()(startPM.x, startPM.y)\r\n\t\tconst startPMTangent =\r\n\t\t\tstartTangent &&\r\n\t\t\tM4.forSys(dpds, dpdt)\r\n\t\t\t\t.inversed()\r\n\t\t\t\t.transformVector(startTangent)\r\n\t\t// assert(dpds.times(startPMTangent.x).plus(dpdt.times(startPMTangent.y)).like(startTangent))\r\n\t\tconst curve = PICurve.forParametricStartEnd(ps, is, startPM, ps.stP(end), stepSize, startPMTangent)\r\n\r\n\t\treturn curve.withBounds(min && curve.pointT(min), max && curve.pointT(max))\r\n\t}\r\n\r\n\tstatic forParametricPointsTangents(\r\n\t\tps: ParametricSurface,\r\n\t\tis: ImplicitSurface,\r\n\t\tpmPoints: V3[],\r\n\t\tpmTangents: V3[],\r\n\t\tstepSize: number,\r\n\t\tdir: number = 1,\r\n\t\ttMin?: number,\r\n\t\ttMax?: number,\r\n\t): PICurve {\r\n\t\tconst pFunc = ps.pSTFunc(),\r\n\t\t\tdpds = ps.dpds()\r\n\t\tconst dpdt = ps.dpdt()\r\n\t\tconst points = pmPoints.map(({ x, y }) => pFunc(x, y))\r\n\t\tconst tangents = pmPoints.map(({ x: s, y: t }, i) => {\r\n\t\t\tconst ds = dpds(s, t)\r\n\t\t\tconst dt = dpdt(s, t)\r\n\t\t\treturn ds.times(pmTangents[i].x).plus(dt.times(pmTangents[i].y))\r\n\t\t\t//const p = points[i]\r\n\t\t\t//return cs.normalP(p).cross(ses.normalP(p))\r\n\t\t\t//\t.toLength(ds.times(pmTangents[i].x).plus(dt.times(pmTangents[i].y)).length())\r\n\t\t})\r\n\t\treturn new PICurve(points, tangents, ps, is, pmPoints, pmTangents, stepSize, dir, undefined, tMin, tMax)\r\n\t}\r\n\r\n\tgetConstructorParameters(): any[] {\r\n\t\treturn [\r\n\t\t\tthis.points,\r\n\t\t\tthis.tangents,\r\n\t\t\tthis.parametricSurface,\r\n\t\t\tthis.implicitSurface,\r\n\t\t\tthis.pmPoints,\r\n\t\t\tthis.pmTangents,\r\n\t\t\tthis.stepSize,\r\n\t\t\tthis.dir,\r\n\t\t\tthis.generator,\r\n\t\t\tthis.tMin,\r\n\t\t\tthis.tMax,\r\n\t\t]\r\n\t}\r\n\r\n\timplicitCurve(): R2_R {\r\n\t\tconst pF = this.parametricSurface.pSTFunc()\r\n\t\tconst iF = this.implicitSurface.implicitFunction()\r\n\t\treturn (s, t) => iF(pF(s, t))\r\n\t}\r\n\r\n\tisColinearTo(curve: Curve) {\r\n\t\tif (curve instanceof PICurve) {\r\n\t\t\tif (this.equals(curve)) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tthis.parametricSurface.isCoplanarTo(curve.parametricSurface) &&\r\n\t\t\t\tthis.implicitSurface.isCoplanarTo(curve.implicitSurface)\r\n\t\t\t) {\r\n\t\t\t\t// TODO\r\n\t\t\t}\r\n\t\t\treturn false\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\tcontainsPoint(p: V3): boolean {\r\n\t\tassertVectors(p)\r\n\t\tconst t = this.pointT(p)\r\n\t\treturn !isNaN(t) && this.isValidT(t)\r\n\t}\r\n\r\n\tequals(obj: any): boolean {\r\n\t\treturn (\r\n\t\t\tObject.getPrototypeOf(obj) == PICurve.prototype &&\r\n\t\t\tthis.parametricSurface.equals(obj.parametricSurface) &&\r\n\t\t\tthis.implicitSurface.equals(obj.implicitSurface) &&\r\n\t\t\tthis.points[0].equals(obj.points[0]) &&\r\n\t\t\tthis.tangents[0].equals(obj.tangents[0]) &&\r\n\t\t\tthis.dir === obj.dir\r\n\t\t)\r\n\t}\r\n\r\n\thashCode(): int {\r\n\t\tlet hashCode = 0\r\n\t\thashCode = hashCode * 31 + this.parametricSurface.hashCode()\r\n\t\thashCode = hashCode * 31 + this.implicitSurface.hashCode()\r\n\t\thashCode = hashCode * 31 + this.points[0].hashCode()\r\n\t\thashCode = hashCode * 31 + this.tangents[0].hashCode()\r\n\t\treturn hashCode | 0\r\n\t}\r\n\r\n\ttangentP(point: V3): V3 {\r\n\t\tassertVectors(point)\r\n\t\tassert(this.containsPoint(point), 'this.containsPoint(point)')\r\n\t\tconst t = this.pointT(point)\r\n\t\treturn this.tangentAt(t)\r\n\t}\r\n\r\n\ttangentAt(t: number): V3 {\r\n\t\tassert(!isNaN(t))\r\n\t\tif (0 === t % 1) return this.tangents[t]\r\n\t\tconst st = this.stT(t)\r\n\t\tconst stTangent = new V3(-this.didt(st.x, st.y), this.dids(st.x, st.y), 0).toLength(this.stepSize)\r\n\t\tconst ds = this.parametricSurface.dpds()(st.x, st.y)\r\n\t\tconst dt = this.parametricSurface.dpdt()(st.x, st.y)\r\n\t\treturn ds.times(stTangent.x).plus(dt.times(stTangent.y))\r\n\t}\r\n\r\n\tat(t: number): V3 {\r\n\t\tassert(!isNaN(t))\r\n\t\tif (0 === t % 1) return this.points[t]\r\n\t\tconst startParams = V3.lerp(this.pmPoints[floor(t)], this.pmPoints[ceil(t)], t % 1)\r\n\t\treturn this.closestPointToParams(startParams)\r\n\t}\r\n\r\n\tstT(t: number): V3 {\r\n\t\tassert(!isNaN(t))\r\n\t\tif (0 === t % 1) return this.pmPoints[t]\r\n\t\tconst startParams = V3.lerp(this.pmPoints[floor(t)], this.pmPoints[ceil(t)], t % 1)\r\n\t\treturn curvePoint(this.implicitCurve(), startParams, this.dids, this.didt)\r\n\t}\r\n\r\n\tclosestTToPoint(p: V3, tStart?: number): number {\r\n\t\treturn 0\r\n\t}\r\n\r\n\tclosestPointToParams(startParams: V3): V3 {\r\n\t\tconst pointParams = curvePoint(this.implicitCurve(), startParams, this.dids, this.didt)\r\n\t\treturn this.parametricSurface.pSTFunc()(pointParams.x, pointParams.y)\r\n\t}\r\n\r\n\tisTsWithSurface(surface: Surface): number[] {\r\n\t\tif (surface instanceof PlaneSurface) {\r\n\t\t\treturn this.isTsWithPlane(surface.plane)\r\n\t\t} else if (surface instanceof SemiEllipsoidSurface) {\r\n\t\t\tconst ps = this.parametricSurface,\r\n\t\t\t\tis = this.implicitSurface\r\n\t\t\tif (ps instanceof ProjectedCurveSurface && is instanceof SemiEllipsoidSurface) {\r\n\t\t\t\tconst iscs = is.isCurvesWithSurface(surface)\r\n\t\t\t\tconst points = iscs.flatMap(isc => isc.isTsWithSurface(ps).map(t => isc.at(t)))\r\n\t\t\t\tconst ts = fuzzyUniques(points.map(p => this.pointT(p)))\r\n\t\t\t\treturn ts.filter(t => !isNaN(t) && this.isValidT(t))\r\n\t\t\t}\r\n\t\t}\r\n\t\tthrow new Error()\r\n\t}\r\n\r\n\tisTsWithPlane(planeWC: P3): number[] {\r\n\t\tconst result: number[] = []\r\n\t\tlet prevSignedDistance = planeWC.distanceToPointSigned(this.points[0])\r\n\t\tfor (let i = 1; i < this.points.length; i++) {\r\n\t\t\tconst point = this.points[i]\r\n\t\t\tconst signedDistance = planeWC.distanceToPointSigned(point)\r\n\t\t\tif (prevSignedDistance * signedDistance <= 0) {\r\n\t\t\t\tconst pF = this.parametricSurface.pSTFunc()\r\n\t\t\t\tconst dpds = this.parametricSurface.dpds()\r\n\t\t\t\tconst dpdt = this.parametricSurface.dpdt()\r\n\t\t\t\tconst startST = this.pmPoints[abs(prevSignedDistance) < abs(signedDistance) ? i - 1 : i]\r\n\t\t\t\tconst isST = newtonIterate2dWithDerivatives(\r\n\t\t\t\t\tthis.implicitCurve(),\r\n\t\t\t\t\t(s, t) => planeWC.distanceToPointSigned(pF(s, t)),\r\n\t\t\t\t\tstartST.x,\r\n\t\t\t\t\tstartST.y,\r\n\t\t\t\t\t4,\r\n\t\t\t\t\tthis.dids,\r\n\t\t\t\t\tthis.didt,\r\n\t\t\t\t\t(s, t) => dpds(s, t).dot(planeWC.normal1),\r\n\t\t\t\t\t(s, t) => dpdt(s, t).dot(planeWC.normal1),\r\n\t\t\t\t)!\r\n\t\t\t\tresult.push(this.pointT(this.parametricSurface.pST(isST.x, isST.y)))\r\n\t\t\t}\r\n\t\t\tprevSignedDistance = signedDistance\r\n\t\t}\r\n\t\treturn result\r\n\t\t// version which intersects the plane with the defining surfaces of this PICurve, but this causes\r\n\t\t// issues when they are PICurves too:\r\n\t\t// assertInst(P3, planeWC)\r\n\t\t// const ps = this.parametricSurface,\r\n\t\t// \tis = this.implicitSurface\r\n\t\t// const pscs = ps.isCurvesWithPlane(planeWC)\r\n\t\t// const iscs = is.isCurvesWithPlane(planeWC)\r\n\t\t// const infos = iscs.flatMap(isc => pscs.flatMap(psc => isc.isInfosWithCurve(psc)))\r\n\t\t// const ts = fuzzyUniques(infos.map(info => this.pointT(info.p)))\r\n\t\t// return ts.filter(t => !isNaN(t) && this.isValidT(t))\r\n\t}\r\n\r\n\tpointT(p: V3): number {\r\n\t\tassertVectors(p)\r\n\t\tif (!this.parametricSurface.containsPoint(p) || !this.implicitSurface.containsPoint(p)) {\r\n\t\t\treturn NaN\r\n\t\t}\r\n\t\tconst pmPoint = this.parametricSurface.stPFunc()(p)\r\n\t\tconst ps = this.points,\r\n\t\t\tpmps = this.pmPoints\r\n\t\tlet t = 0,\r\n\t\t\tpmDistance = pmPoint.distanceTo(pmps[0])\r\n\t\twhile (pmDistance > abs(this.stepSize) && t < ps.length - 1) {\r\n\t\t\t// TODO -1?\r\n\t\t\t//console.log(t, pmps[t].$, pmDistance)\r\n\t\t\tt = min(pmps.length - 1, t + max(1, Math.round(pmDistance / abs(this.stepSize) / 2 / 2)))\r\n\t\t\tpmDistance = pmPoint.distanceTo(pmps[t])\r\n\t\t}\r\n\t\t// if (t < this.pmPoints.length - 1 && pmDistance > pmPoint.distanceTo(pmps[t + 1])) {\r\n\t\t//     t++\r\n\t\t// }\r\n\t\tif (pmDistance > abs(this.stepSize) * 1.1) {\r\n\t\t\t// p is not on this curve\r\n\t\t\treturn NaN\r\n\t\t}\r\n\t\tif (t == ps.length - 1) {\r\n\t\t\tt--\r\n\t\t}\r\n\t\tif (ps[t].like(p)) return t\r\n\t\tif (ps[t + 1].like(p)) return t + 1\r\n\t\tconst startT = arrayRange(floor(this.tMin), ceil(this.tMax), 1).withMax(t => -pmPoint.distanceTo(pmps[t]))\r\n\t\tif (undefined === startT) throw new Error()\r\n\t\tif (ps[startT].like(p)) return startT\r\n\t\t//const [a, b] = 0 === startT\r\n\t\t//    ? [0, 1]\r\n\t\t//    : this.points.length - 1 === startT\r\n\t\t//        ? [startT - 1, startT]\r\n\t\t//        : pmPoint.distanceTo(pmps[startT - 1]) < pmPoint.distanceTo(pmps[startT + 1])\r\n\t\t//            ? [startT - 1, startT]\r\n\t\t//            : [startT, startT + 1]\r\n\t\tconst a = max(0, startT - 1),\r\n\t\t\tb = min(this.points.length - 1, startT + 1)\r\n\t\tconst tangent = this.tangentAt(startT)\r\n\t\tconst f = (t: number) =>\r\n\t\t\tthis.at(clamp(t, 0, this.points.length - 1))\r\n\t\t\t\t.to(p)\r\n\t\t\t\t.dot(tangent)\r\n\t\t// const df = (t: number) => -this.tangentAt(clamp(t, 0, this.points.length - 1)).dot(tangent)\r\n\t\t//checkDerivate(f, df, 0, this.points.length - 2, 3)\r\n\t\t// 8 steps necessary because df can currently be way off\r\n\t\tt = bisect(f, a, b, 32)\r\n\t\tif (!isFinite(t) || this.at(t).distanceTo(p) > abs(this.stepSize)) {\r\n\t\t\treturn NaN\r\n\t\t}\r\n\t\treturn t\r\n\t}\r\n\r\n\ttransform(m4: M4): this {\r\n\t\tconst dirFactor = m4.isMirroring() ? -1 : 1\r\n\t\treturn PICurve.forStartEnd(\r\n\t\t\tthis.parametricSurface.transform(m4),\r\n\t\t\tthis.implicitSurface.transform(m4),\r\n\t\t\tm4.transformPoint(this.points[0]),\r\n\t\t\tm4.transformPoint(this.points.last),\r\n\t\t\tthis.stepSize * dirFactor,\r\n\t\t\tm4.transformVector(this.tangents[0]),\r\n\t\t\tm4.transformPoint(this.at(this.tMin)),\r\n\t\t\tm4.transformPoint(this.at(this.tMax)),\r\n\t\t) as this\r\n\t\t//return PICurve.forParametricStartEnd(\r\n\t\t//\tthis.parametricSurface.transform(m4),\r\n\t\t//\tthis.implicitSurface.transform(m4),\r\n\t\t//\tthis.pmPoints[0],\r\n\t\t//\tthis.pmPoints.last,\r\n\t\t//\tthis.stepSize,\r\n\t\t//\tthis.dir,\r\n\t\t//\tthis.tMin,\r\n\t\t//\tthis.tMax)\r\n\t\t// TODO: pass transformed points?\r\n\t\t//return new PICurve(\r\n\t\t//\tm4.transformedPoints(this.points),\r\n\t\t//\tm4.transformedVectors(this.tangents),\r\n\t\t//    this.parametricSurface.transform(m4),\r\n\t\t//   this.implicitSurface.transform(m4),\r\n\t\t//   this.pmPoints,\r\n\t\t//   this.pmTangents,\r\n\t\t//this.stepSize,\r\n\t\t//   this.dir,\r\n\t\t//this.generator,\r\n\t\t//this.tMin, this.tMax)\r\n\t}\r\n\r\n\troots(): [number[], number[], number[]] {\r\n\t\tconst allTs = arrayRange(0, this.points.length)\r\n\t\treturn [allTs, allTs, allTs]\r\n\t}\r\n\r\n\tisInfosWithLine(\r\n\t\tanchorWC: V3,\r\n\t\tdirWC: V3,\r\n\t\ttMin?: number | undefined,\r\n\t\ttMax?: number | undefined,\r\n\t\tlineMin?: number | undefined,\r\n\t\tlineMax?: number | undefined,\r\n\t): { tThis: number; tOther: number; p: V3 }[] {\r\n\t\tthrow new Error('Method not implemented.')\r\n\t}\r\n\r\n\ttoSource(rounder: (x: number) => number = x => x): string {\r\n\t\tconst result = callsce(\r\n\t\t\t'PICurve.forParametricStartEnd',\r\n\t\t\tthis.parametricSurface,\r\n\t\t\tthis.implicitSurface,\r\n\t\t\tthis.pmPoints[0],\r\n\t\t\tthis.pmPoints.last,\r\n\t\t\tthis.stepSize,\r\n\t\t\tthis.pmTangents[0],\r\n\t\t\tthis.tMin,\r\n\t\t\tthis.tMax,\r\n\t\t)\r\n\t\treturn result\r\n\t}\r\n}\r\n\r\nPICurve.prototype.tIncrement = 1\r\n","import { assert, assertVectors, callsce, M4, newtonIterate, Tuple3, V3 } from 'ts3dutils'\r\nimport { Curve, curvePointPP, followAlgorithmPP, ImplicitCurve, ParametricSurface } from '../index'\r\n\r\nimport { ceil, floor } from '../math'\r\n\r\nexport class PPCurve extends ImplicitCurve {\r\n\tconstructor(\r\n\t\tpoints: ReadonlyArray<V3>,\r\n\t\ttangents: ReadonlyArray<V3>,\r\n\t\treadonly parametricSurface1: ParametricSurface,\r\n\t\treadonly parametricSurface2: ParametricSurface,\r\n\t\treadonly st1s: ReadonlyArray<V3>,\r\n\t\treadonly pmTangents: ReadonlyArray<V3> | undefined,\r\n\t\treadonly stepSize: number,\r\n\t\tdir: number = 1,\r\n\t\tgenerator?: string,\r\n\t\ttMin?: number,\r\n\t\ttMax?: number,\r\n\t) {\r\n\t\tsuper(points, tangents, dir, generator, tMin, tMax)\r\n\t\tassert(ParametricSurface.is(parametricSurface1))\r\n\t\tassert(ParametricSurface.is(parametricSurface2))\r\n\t\tassert(Array.isArray(st1s))\r\n\t\tassert(dir == 1)\r\n\t\tassert(stepSize <= 1)\r\n\t}\r\n\r\n\tat(t: number) {\r\n\t\tassert(!isNaN(t))\r\n\t\tif (0 === t % 1) return this.points[t]\r\n\t\tconst startPoint = V3.lerp(this.points[floor(t)], this.points[ceil(t)], t % 1)\r\n\t\treturn curvePointPP(this.parametricSurface1, this.parametricSurface2, startPoint)!.p\r\n\t}\r\n\r\n\tisColinearTo(curve: Curve) {\r\n\t\tif (curve instanceof PPCurve) {\r\n\t\t\tif (this.equals(curve)) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\tthis.parametricSurface1.isCoplanarTo(curve.parametricSurface1) &&\r\n\t\t\t\tthis.parametricSurface1.isCoplanarTo(curve.parametricSurface2)\r\n\t\t\t) {\r\n\t\t\t\t// TODO\r\n\t\t\t}\r\n\t\t\treturn false\r\n\t\t} else {\r\n\t\t\treturn false\r\n\t\t}\r\n\t}\r\n\r\n\tcontainsPoint(p: V3) {\r\n\t\tassertVectors(p)\r\n\t\t// TODO: wrong, as there could be another curve\r\n\t\treturn (\r\n\t\t\tthis.parametricSurface1.containsPoint(p) &&\r\n\t\t\tthis.parametricSurface2.containsPoint(p) &&\r\n\t\t\t!isNaN(this.pointT(p))\r\n\t\t)\r\n\t}\r\n\r\n\trootPoints() {\r\n\t\tconst pF1 = this.parametricSurface1.pSTFunc()\r\n\t\tconst pF2 = this.parametricSurface2.pSTFunc()\r\n\t\tconst pN1 = this.parametricSurface1.normalSTFunc()\r\n\t\tconst pN2 = this.parametricSurface2.normalSTFunc()\r\n\r\n\t\tconst rootsApprox = this.rootsApprox()\r\n\t\tconst results: Tuple3<V3[]> = [[], [], []]\r\n\t\tfor (let dim = 0; dim < 3; dim++) {\r\n\t\t\tfor (let i = 0; i < rootsApprox[dim].length; i++) {\r\n\t\t\t\tconst lambda = rootsApprox[dim][i]\r\n\t\t\t\tconst p = this.at(lambda)\r\n\t\t\t\tassert(this.parametricSurface1.containsPoint(p))\r\n\t\t\t\tconst pp1 = this.parametricSurface1.stP(p)\r\n\t\t\t\tconst { x: u, y: v } = this.parametricSurface2.stP(p)\r\n\t\t\t\tconst startValues = [pp1.x, pp1.y, u, v]\r\n\r\n\t\t\t\tfunction f(vals: number[]) {\r\n\t\t\t\t\tconst [s, t, u, v] = vals\r\n\t\t\t\t\tconst diff = pF1(s, t).minus(pF2(u, v))\r\n\t\t\t\t\tconst n1 = pN1(s, t)\r\n\t\t\t\t\tconst n2 = pN2(u, v)\r\n\t\t\t\t\tconst tangent = n1.cross(n2)\r\n\t\t\t\t\treturn [diff.x, diff.y, diff.z, tangent.e(dim)]\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pps = newtonIterate(f, startValues, 8)\r\n\t\t\t\t// assert(pF1(pps[0], pps[1]).like(pF2(pps[2], pps[3])),\r\n\t\t\t\t// \tpF1(pps[0], pps[1]).sce + pF2(pps[2], pps[3]).sce)\r\n\t\t\t\tconst result = pF1(pps[0], pps[1])\r\n\t\t\t\tresults[dim].push(result)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn results\r\n\t}\r\n\r\n\troots(): Tuple3<number[]> {\r\n\t\treturn this.rootPoints().map(ps => ps.map(p => this.pointT(p)))\r\n\t}\r\n\r\n\tpointTangent(pWC: V3): V3 {\r\n\t\tassertVectors(pWC)\r\n\t\tassert(this.containsPoint(pWC), 'this.containsPoint(pWC)')\r\n\t\tconst n1 = this.parametricSurface1.normalP(pWC)\r\n\t\tconst n2 = this.parametricSurface2.normalP(pWC)\r\n\t\treturn n1.cross(n2)\r\n\t}\r\n\r\n\ttransform(m4: M4, desc?: string) {\r\n\t\treturn new PPCurve(\r\n\t\t\tm4.transformedPoints(this.points),\r\n\t\t\tm4.transformedVectors(this.tangents),\r\n\t\t\tthis.parametricSurface1.transform(m4),\r\n\t\t\tthis.parametricSurface2.transform(m4),\r\n\t\t\tthis.st1s,\r\n\t\t\tundefined,\r\n\t\t\tthis.stepSize,\r\n\t\t\tthis.dir,\r\n\t\t\tundefined,\r\n\t\t) as this\r\n\t}\r\n\r\n\ttoSource(rounder: (x: number) => number = x => x): string {\r\n\t\tconst result = callsce(\r\n\t\t\t'PPCurve.forStartEnd',\r\n\t\t\tthis.parametricSurface1,\r\n\t\t\tthis.parametricSurface2,\r\n\t\t\tthis.points[0],\r\n\t\t\tthis.points.last,\r\n\t\t\tthis.stepSize,\r\n\t\t)\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic forStartEnd(ps1: ParametricSurface, ps2: ParametricSurface, startPoint: V3, end: V3, stepSize = 0.02) {\r\n\t\tconst { points, tangents, st1s } = followAlgorithmPP(ps1, ps2, startPoint, stepSize)\r\n\t\treturn new PPCurve(points, tangents, ps1, ps2, st1s, undefined, stepSize, 1)\r\n\t}\r\n}\r\n","import { arrayFromFunction, assertNumbers, eq, eq0, hasConstructor, int, le, pqFormula, V3 } from 'ts3dutils'\r\n\r\nimport { BezierCurve, Curve, ISInfo, L3, XiEtaCurve } from '../index'\r\n\r\n/**\r\n * eta = xi²\r\n */\r\nexport class ParabolaCurve extends XiEtaCurve {\r\n\tstatic readonly XY = new ParabolaCurve(V3.O, V3.X, V3.Y)\r\n\tstatic readonly YZ = new ParabolaCurve(V3.O, V3.Y, V3.Z)\r\n\tstatic readonly ZX = new ParabolaCurve(V3.O, V3.Z, V3.X)\r\n\r\n\tconstructor(center: V3, f1: V3, f2: V3, tMin: number = -10, tMax: number = 10) {\r\n\t\tsuper(center, f1, f2, tMin, tMax)\r\n\t}\r\n\r\n\tstatic eccentricity() {\r\n\t\treturn 1\r\n\t}\r\n\r\n\tstatic unitIsInfosWithLine(anchorLC: V3, dirLC: V3, anchorWC: V3, dirWC: V3): ISInfo[] {\r\n\t\t// para: x² = y\r\n\t\t// line(t) = anchor + t dir\r\n\t\t// (ax + t dx)² = ay + t dy\r\n\t\t// ax² + t ax dx + t² dx² = ay + t dy\r\n\t\t// t² dx² + t (ax dx + dy) + ay² + ay = 0\r\n\t\tconst pqDiv = dirLC.x ** 2\r\n\t\tconst lineTs = pqFormula((anchorLC.x * dirLC.x + dirLC.y) / pqDiv, (anchorLC.x ** 2 + anchorLC.y) / pqDiv)\r\n\t\treturn lineTs.filter(tOther => le(0, anchorLC.y + tOther * dirLC.y)).map(tOther => ({\r\n\t\t\ttThis: dirLC.x * tOther + anchorLC.x,\r\n\t\t\ttOther: tOther,\r\n\t\t\tp: L3.at(anchorWC, dirWC, tOther),\r\n\t\t}))\r\n\t}\r\n\r\n\tstatic intersectionUnitLine(a: number, b: number, c: number): number[] {\r\n\t\t/*\r\n\t\t solve system (5)/(6)\r\n\t\t g1 * xi + g2 * eta = g3 (6)\r\n\t\t g1 * xi + g2 * xi * xi = g3\r\n\t\t xi² + xi * g1/g2 - g3/g2 = 0\r\n\t\t */\r\n\t\treturn pqFormula(a / b, -c / b)\r\n\t}\r\n\r\n\tstatic XYLCValid(pLC: V3): boolean {\r\n\t\treturn eq(pLC.x ** 2, pLC.y)\r\n\t}\r\n\r\n\tstatic XYLCPointT(pLC: V3): number {\r\n\t\treturn pLC.x\r\n\t}\r\n\r\n\tstatic quadratic(a: V3, b: V3, c: V3): ParabolaCurve {\r\n\t\t// (1 - t)² a + 2 * t * (1 - t) b + t² c\r\n\t\t// (1 -2t +t²)a + (2t -2t²) b + t² c\r\n\t\t// = t²(a - 2b + c) + t (-2a + 2b) + a\r\n\t\t// (2t - 2) a + (1 - 2t) b + 2t c = t(2a + 2b - 2c) - 2a + b\r\n\t\t// 2 a + -2 b + 2 c\r\n\t\tconst f2 = a.plus(c).minus(b.times(2))\r\n\t\tconst f1 = b.minus(a).times(2)\r\n\t\tconst center = a\r\n\t\treturn new ParabolaCurve(center, f1, f2, 0, 1)\r\n\t}\r\n\r\n\tat(t: number): V3 {\r\n\t\t// center + f1 t + f2 t²\r\n\t\treturn this.center.plus(this.f1.times(t)).plus(this.f2.times(t * t))\r\n\t}\r\n\r\n\ttangentAt(t: number): V3 {\r\n\t\tassertNumbers(t)\r\n\t\t// f1 + f2 2 t\r\n\t\treturn this.f1.plus(this.f2.times(2 * t))\r\n\t}\r\n\r\n\tddt(t: number): V3 {\r\n\t\tassertNumbers(t)\r\n\t\treturn this.f2.times(2)\r\n\t}\r\n\r\n\ttangentAt2(xi: number, eta: number): V3 {\r\n\t\tassertNumbers(xi, eta)\r\n\t\treturn this.f1.plus(this.f2.times(2 * eta))\r\n\t}\r\n\r\n\treversed() {\r\n\t\treturn new this.constructor(this.center, this.f1.negated(), this.f2, -this.tMax, -this.tMin)\r\n\t}\r\n\r\n\t/**\r\n\t * tangent: f1 + 2 * t * f2 = 0\r\n\t * t = -f1 / 2 / f2 (for individual dimensions)\r\n\t */\r\n\troots(): [number[], number[], number[]] {\r\n\t\tconst dimRoots = (dim: int) => (eq0(this.f2.e(dim)) ? [] : [-this.f1.e(dim) / 2 / this.f2.e(dim)])\r\n\t\treturn arrayFromFunction(3, dimRoots) as [number[], number[], number[]]\r\n\t}\r\n\r\n\tisColinearTo(curve: Curve): boolean {\r\n\t\tif (!hasConstructor(curve, ParabolaCurve)) return false\r\n\t\tconst thisRA = this.rightAngled(),\r\n\t\t\tcurveRA = curve.rightAngled()\r\n\t\treturn thisRA.center.like(curveRA.center) && thisRA.f2.like(curveRA.f2) && thisRA.f1.likeOrReversed(curveRA.f1)\r\n\t}\r\n\r\n\trightAngled() {\r\n\t\t// looking for vertex of parabola\r\n\t\t// this is the point where the tangent is perpendicular to the main axis (f2)\r\n\t\t// tangent = f1 + f2 * 2 * t0\r\n\t\t// f2 DOT (f1 + f2 * 2 * t0) == 0\r\n\t\t// f1 DOT f2 + f2 DOT f2 * 2 * t0 == 0\r\n\t\t// t0 == -(f1 DOT f2) / (f2 DOT f2 * 2)\r\n\t\tconst f1 = this.f1,\r\n\t\t\tf2 = this.f2\r\n\t\tconst f1DOTf2 = f1.dot(f2)\r\n\t\tif (eq0(f1DOTf2) && f1.hasLength(1)) {\r\n\t\t\treturn this\r\n\t\t}\r\n\t\tconst t0 = -f1DOTf2 / f2.squared() / 2\r\n\t\t// we need to rearange tMin/tMax\r\n\t\t// tMin' = pointT(at(tMin)) =\r\n\t\tconst raCenter = this.at(t0)\r\n\t\tconst raF1 = this.tangentAt(t0),\r\n\t\t\traF1Length = raF1.length(),\r\n\t\t\traF11 = raF1.unit()\r\n\t\tconst repos = (t: number) =>\r\n\t\t\tthis.at(t)\r\n\t\t\t\t.minus(raCenter)\r\n\t\t\t\t.dot(raF11)\r\n\t\treturn new ParabolaCurve(raCenter, raF11, f2.div(raF1Length ** 2), repos(this.tMin), repos(this.tMax))\r\n\t}\r\n\r\n\tarcLength(startT: number, endT: number): number {\r\n\t\tlet f1 = this.f1\r\n\t\tconst f2 = this.f2\r\n\t\tconst f1DOTf2 = f1.dot(f2)\r\n\t\tlet t0 = 0\r\n\t\tif (!eq0(f1DOTf2)) {\r\n\t\t\tt0 = -f1DOTf2 / f2.squared() / 2\r\n\t\t\tf1 = f1.plus(f2.times(2 * t0))\r\n\t\t}\r\n\t\tconst f1Length = f1.length()\r\n\t\tconst a = f2.length() / f1Length\r\n\r\n\t\tfunction F(x: number) {\r\n\t\t\treturn Math.asinh(a * 2 * x) / 4 / a + x * Math.sqrt(1 + a * a * 4 * x * x) / 2\r\n\t\t}\r\n\r\n\t\treturn f1Length * (F(endT - t0) - F(startT - t0))\r\n\t}\r\n\r\n\tasBezier() {\r\n\t\treturn BezierCurve.quadratic(\r\n\t\t\tthis.at(-1),\r\n\t\t\tnew L3(this.at(-1), this.tangentAt(-1).unit()).isInfoWithLine(\r\n\t\t\t\tnew L3(this.at(1), this.tangentAt(1).unit()),\r\n\t\t\t)!,\r\n\t\t\tthis.at(1),\r\n\t\t)\r\n\t}\r\n}\r\n\r\nParabolaCurve.prototype.tIncrement = 1 / 32\r\n","import {\n\tarrayFromFunction,\n\tassert,\n\tassertf,\n\tassertNumbers,\n\tassertVectors,\n\tbetween,\n\tcheckDerivate,\n\teq,\n\teq0,\n\tfuzzyBetween,\n\thasConstructor,\n\tint,\n\tle,\n\tlerp,\n\tlt,\n\tM4,\n\tnewtonIterate1d,\n\tnewtonIterateSmart,\n\tpqFormula,\n\tTAU,\n\tV3,\n} from 'ts3dutils'\n\nimport { Curve, intersectionUnitCircleLine, intersectionUnitCircleLine2, ISInfo, L3, P3, XiEtaCurve } from '../index'\n\nimport { atan2, max, min, PI } from '../math'\n\nexport class SemiEllipseCurve extends XiEtaCurve {\n\tstatic readonly UNIT = new SemiEllipseCurve(V3.O, V3.X, V3.Y)\n\n\tconstructor(center: V3, f1: V3, f2: V3, tMin: number = 0, tMax: number = PI) {\n\t\tsuper(center, f1, f2, tMin, tMax)\n\t\tassert(-PI <= this.tMin && this.tMin < PI)\n\t\tassert(-PI < this.tMax && this.tMax <= PI)\n\t}\n\n\tstatic XYLCValid(pLC: V3): boolean {\n\t\tconst { x, y } = pLC\n\t\treturn eq0(x ** 2 + y ** 2 - 1)\n\t}\n\n\tstatic XYLCPointT(pLC: V3, tMin: number, tMax: number): number {\n\t\tassertNumbers(tMin, tMax)\n\t\tconst t = atan2(pLC.y, pLC.x)\n\t\tconst lowSplitter = lerp(tMin, tMax - TAU, 0.5)\n\t\tif (t < lowSplitter) {\n\t\t\treturn t + TAU\n\t\t}\n\t\tconst highSplitter = lerp(tMax, tMin + TAU, 0.5)\n\t\tif (t > highSplitter) {\n\t\t\treturn t - TAU\n\t\t}\n\t\treturn t\n\t}\n\n\tstatic intersectionUnitLine(a: number, b: number, c: number, tMin: number, tMax: number): number[] {\n\t\tconst isLC = intersectionUnitCircleLine2(a, b, c)\n\t\tconst result = []\n\t\tfor (const [xi, eta] of isLC) {\n\t\t\tconst t = SemiEllipseCurve.XYLCPointT(new V3(xi, eta, 0), tMin, tMax)\n\t\t\tfuzzyBetween(t, tMin, tMax) && result.push(t)\n\t\t}\n\t\treturn result\n\t}\n\n\tstatic unitIsInfosWithLine(anchorLC: V3, dirLC: V3, anchorWC: V3, dirWC: V3, tMin: number, tMax: number): ISInfo[] {\n\t\t// ell: x² + y² = 1 = p²\n\t\t// line(t) = anchor + t dir\n\t\t// anchor² - 1 + 2 t dir anchor + t² dir² = 0\n\t\tconst pqDiv = dirLC.squared()\n\t\tconst lineTs = pqFormula(2 * dirLC.dot(anchorLC) / pqDiv, (anchorLC.squared() - 1) / pqDiv)\n\t\treturn lineTs.filter(tOther => le(0, anchorLC.y + tOther * dirLC.y)).map(tOther => ({\n\t\t\ttThis: SemiEllipseCurve.XYLCPointT(dirLC.times(tOther).plus(anchorLC), tMin, tMax),\n\t\t\ttOther: tOther,\n\t\t\tp: L3.at(anchorWC, dirWC, tOther),\n\t\t}))\n\t}\n\n\t/**\n\t * Returns a new SemiEllipseCurve representing a circle parallel to the XY-plane.`\n\t */\n\tstatic semicircle(radius: number, center: V3 = V3.O, tMin?: number, tMax?: number): SemiEllipseCurve {\n\t\treturn new SemiEllipseCurve(center, new V3(radius, 0, 0), new V3(0, radius, 0), tMin, tMax)\n\t}\n\n\tstatic circleForCenter2P(center: V3, a: V3, b: V3, radius: number, tMin?: number, tMax?: number) {\n\t\tconst f1 = center.to(a)\n\t\tconst normal = f1.cross(center.to(b))\n\t\tconst f2 = normal.cross(f1).toLength(f1.length())\n\t\treturn new SemiEllipseCurve(\n\t\t\tcenter,\n\t\t\tf1,\n\t\t\tf2,\n\t\t\tundefined !== tMin ? tMin : 0,\n\t\t\tundefined !== tMax ? tMax : f1.angleTo(center.to(b)),\n\t\t)\n\t}\n\n\tsplit(tMin = this.tMin, tMax = this.tMax): SemiEllipseCurve[] {\n\t\tconst result: SemiEllipseCurve[] = []\n\t\ttMin < 0 &&\n\t\t\tresult.push(\n\t\t\t\tnew SemiEllipseCurve(this.center, this.f1.negated(), this.f2.negated(), tMin + PI, min(0, tMax) + PI),\n\t\t\t)\n\t\ttMax > 0 && result.push(new SemiEllipseCurve(this.center, this.f1, this.f2, max(0, tMin), tMax))\n\t\treturn result\n\t}\n\n\tstatic forAB(a: number, b: number, center: V3 = V3.O): SemiEllipseCurve {\n\t\treturn super.forAB(a, b, center) as SemiEllipseCurve\n\t}\n\n\t/**\n\t * Create a circle curve which has a, b and c on it. a, b, c can't be on a straight line.\n\t * tMin defaults to 0, tMax defaults to the value for c\n\t */\n\tstatic circleThroughPoints(a: V3, b: V3, c: V3, tMin = 0, tMax?: number) {\n\t\tassertf(() => !L3.throughPoints(a, c).containsPoint(b))\n\t\tconst normal = a.to(b).cross(b.to(c))\n\t\tconst center = new L3(a.lerp(b, 0.5), normal.cross(a.to(b)).unit()).isInfoWithLine(\n\t\t\tnew L3(b.lerp(c, 0.5), normal.cross(b.to(c)).unit()),\n\t\t)!\n\t\tconst f1 = center.to(a)\n\t\treturn new SemiEllipseCurve(\n\t\t\tcenter,\n\t\t\tf1,\n\t\t\tnormal.unit().cross(f1),\n\t\t\t0,\n\t\t\tundefined === tMax ? f1.angleRelativeNormal(center.to(c), normal.unit()) : tMax,\n\t\t)\n\t}\n\n\tgetAreaInDir(right: V3, up: V3, tStart: number, tEnd: number): { area: number; centroid: V3 } {\n\t\t//assertf(() => tStart < tEnd)\n\t\tassertf(() => right.isPerpendicularTo(this.normal))\n\t\tassertf(() => up.isPerpendicularTo(this.normal))\n\t\t//assertf(() => EllipseCurve.isValidT(tStart), tStart)\n\t\t//assertf(() => EllipseCurve.isValidT(tEnd), tEnd)\n\n\t\tconst upLC = this.matrixInverse.transformVector(up)\n\t\tconst rightLC = upLC.cross(V3.Z)\n\t\tconst normTStart = tStart - rightLC.angleXY()\n\t\tconst normTEnd = tEnd - rightLC.angleXY()\n\t\tconst transformedOriginY = this.matrixInverse.getTranslation().dot(upLC.unit())\n\t\t// integral of sqrt(1 - x²) from 0 to cos(t)\n\t\t// Basically, we want\n\t\t// INTEGRAL[cos(t); PI/2] sqrt(1 - x²) dx\n\t\t// INTEGRAL[PI/2: cos(t)] -sqrt(1 - x²) dx\n\t\t// = INTEGRAL[cos(0); cos(t)] -sqrt(1 - x²) dx\n\t\t// = INTEGRAL[0; t] -sqrt(1 - cos²(t)) * -sin(t) dt\n\t\t// = INTEGRAL[0; t] -sin(t) * -sin(t) dt\n\t\t// = INTEGRAL[0; t] sin²(t) dt (partial integration / wolfram alpha)\n\t\t// = (1/2 * (t - sin(t) * cos(t)))[0; t] (this form has the distinct advantage of being defined everywhere)\n\t\tfunction fArea(t: number) {\n\t\t\treturn (t - Math.sin(t) * Math.cos(t)) / 2\n\t\t}\n\n\t\t// for the centroid, we want\n\t\t// cx = 1 / area * INTEGRAL[cos(t); PI/2] x * f(x) dx\n\t\t// cx = 1 / area * INTEGRAL[cos(t); PI/2] x * sqrt(1 - x²) dx\n\t\t// cx = 1 / area * INTEGRAL[cos(0); cos(t)] x * -sqrt(1 - x²) dx\n\t\t// ...\n\t\t// cx = 1 / area * INTEGRAL[0; t] cos(t) * sin²(t) dt // WA\n\t\t// cx = 1 / area * (sin^3(t) / 3)[0; t]\n\t\tfunction cxTimesArea(t: number) {\n\t\t\treturn Math.pow(Math.sin(t), 3) / 3\n\t\t}\n\n\t\t// cy = 1 / area * INTEGRAL[cos(t); PI/2] f²(x) / 2 dx\n\t\t// cy = 1 / area * INTEGRAL[cos(0); cos(t)] -(1 - x²) / 2 dx\n\t\t// cy = 1 / area * INTEGRAL[0; t] (cos²(t) - 1) * -sin(t) / 2 dt\n\t\t// cy = 1 / area * (cos (3 * t) - 9 * cos(t)) / 24 )[0; t]\n\t\tfunction cyTimesArea(t: number) {\n\t\t\treturn (Math.cos(3 * t) - 9 * Math.cos(t)) / 24\n\t\t}\n\n\t\tconst restArea = -transformedOriginY * (-Math.cos(normTEnd) + Math.cos(normTStart))\n\t\tconst area = fArea(normTEnd) - fArea(normTStart) + restArea\n\t\tconst cxt =\n\t\t\t(cxTimesArea(normTEnd) -\n\t\t\t\tcxTimesArea(normTStart) +\n\t\t\t\t-transformedOriginY * (-Math.cos(normTEnd) - Math.cos(normTStart)) / 2 * restArea) /\n\t\t\tarea\n\t\tconst cyt = (cyTimesArea(normTEnd) - cyTimesArea(normTStart) - -transformedOriginY / 2 * restArea) / area\n\t\tconst factor = this.matrix.xyAreaFactor() // * upLC.length()\n\t\t//console.log('fctor', factor, 'area', area, 'resultarea', area* factor)\n\t\tassert(!eq0(factor))\n\t\treturn {\n\t\t\tarea: area * factor,\n\t\t\tcentroid: this.matrix.transformPoint(M4.rotateZ(rightLC.angleXY()).transformPoint(new V3(cxt, cyt, 0))),\n\t\t}\n\t}\n\n\tat(t: number): V3 {\n\t\tassertNumbers(t)\n\t\t//assert(this.isValidT(t))\n\t\t// = center + f1 cos t + f2 sin t\n\t\treturn this.center.plus(this.f1.times(Math.cos(t))).plus(this.f2.times(Math.sin(t)))\n\t}\n\n\ttangentAt(t: number): V3 {\n\t\tassertNumbers(t)\n\t\t//assert(this.isValidT(t))\n\t\t// ) f2 cos(t) - f1 sin(t)\n\t\treturn this.f2.times(Math.cos(t)).minus(this.f1.times(Math.sin(t)))\n\t}\n\n\tddt(t: number): V3 {\n\t\tassertNumbers(t)\n\t\tassert(this.isValidT(t))\n\t\treturn this.f2.times(-Math.sin(t)).minus(this.f1.times(Math.cos(t)))\n\t}\n\n\ttangentAt2(xi: number, eta: number): V3 {\n\t\treturn this.f2.times(xi).minus(this.f1.times(eta))\n\t}\n\n\tisCircular(): boolean {\n\t\treturn eq(this.f1.length(), this.f2.length()) && this.f1.isPerpendicularTo(this.f2)\n\t}\n\n\tisColinearTo(curve: Curve): boolean {\n\t\tif (!hasConstructor(curve, SemiEllipseCurve)) return false\n\t\tif (!this.center.like(curve.center)) {\n\t\t\treturn false\n\t\t}\n\t\tif (this == curve) {\n\t\t\treturn true\n\t\t}\n\t\tif (this.isCircular()) {\n\t\t\treturn (\n\t\t\t\tcurve.isCircular() && eq(this.f1.length(), curve.f1.length()) && this.normal.isParallelTo(curve.normal)\n\t\t\t)\n\t\t} else {\n\t\t\tlet { f1: f1, f2: f2 } = this.rightAngled(),\n\t\t\t\t{ f1: c1, f2: c2 } = curve.rightAngled()\n\t\t\tif (f1.length() > f2.length()) {\n\t\t\t\t;[f1, f2] = [f2, f1]\n\t\t\t}\n\t\t\tif (c1.length() > c2.length()) {\n\t\t\t\t;[c1, c2] = [c2, c1]\n\t\t\t}\n\t\t\treturn eq(f1.squared(), Math.abs(f1.dot(c1))) && eq(f2.squared(), Math.abs(f2.dot(c2)))\n\t\t}\n\t}\n\n\tpointT(pWC: V3) {\n\t\tassertVectors(pWC)\n\t\tassert(this.containsPoint(pWC))\n\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\tconst t = SemiEllipseCurve.XYLCPointT(pLC, this.tMin, this.tMax)\n\t\tassert(this.isValidT(t))\n\t\treturn t\n\t}\n\n\treversed(): SemiEllipseCurve {\n\t\treturn new SemiEllipseCurve(this.center, this.f1.negated(), this.f2, PI - this.tMax, PI - this.tMin)\n\t}\n\n\teccentricity() {\n\t\tconst mainAxes = this.rightAngled()\n\t\tconst f1length = mainAxes.f1.length(),\n\t\t\tf2length = mainAxes.f1.length()\n\t\tconst [a, b] = f1length > f2length ? [f1length, f2length] : [f2length, f1length]\n\t\treturn Math.sqrt(1 - b * b / a / a)\n\t}\n\n\tcircumference(): number {\n\t\treturn this.arcLength(-Math.PI, Math.PI)\n\t}\n\n\tarcLength(tStart: number = this.tMin, tEnd: number = this.tMax, steps: int = 2): number {\n\t\tassert(tStart < tEnd, 'startT < endT')\n\t\tconst f1Length = this.f1.length()\n\t\tif (eq(f1Length, this.f2.length())) {\n\t\t\treturn f1Length * (tEnd - tStart)\n\t\t}\n\t\treturn super.arcLength(tStart, tEnd, steps)\n\t}\n\n\tcircumferenceApproximate(): number {\n\t\t// approximate circumference by Ramanujan\n\t\t// https://en.wikipedia.org/wiki/Ellipse#Circumference\n\t\tconst { f1, f2 } = this.rightAngled(),\n\t\t\ta = f1.length(),\n\t\t\tb = f2.length()\n\t\tconst h = (a - b) ** 2 / (a + b) ** 2\n\t\treturn Math.PI * (a + b) * (1 + 3 * h / (10 + Math.sqrt(4 - 3 * h)))\n\t}\n\n\t/**\n\t * Radii of the ellipse are described by\n\t * q(phi) = f1 * cos(phi) + f2 * sin(phi)\n\t * or q(xi, eta) = f1 * xi + f2 * eta (1) with the added condition\n\t * xi² + eta² = 1 (2)\n\t * we want to find the radius where the corresponding tangent is perpendicular\n\t * tangent: q'(phi) = f1 * -sin(phi) + f2 * cos(phi)\n\t * tangent: q'(xi, eta) = f1 * -eta + f2 * xi\n\t * perpendicular when: q'(xi, eta) DOT q(xi, eta) = 0\n\t * (f1 * -eta + f2 * xi) DOT (f1 * xi + f2 * eta) = 0\n\t * DOT is distributive:\n\t * f1² * (-eta * xi) + f1 * f2 * (-eta² + xi²) + f2² * (xi * eta) = 0\n\t * (f2² - f1²) * (eta * xi) + f1 * f2 * (-eta² + xi²) = 0\n\t * a * (xi² - eta²) + b * xi * eta = 0 (2)\n\t * with a = f1 * f2, b = f2² - f1²\n\t * => (xi/eta)² + xi/eta * b/a + 1 = 0 (divide by a * eta²)\n\t * xi/eta = b/a/2 +- sqrt(b²/a²/4 - 1) | * 2*a*eta\n\t * 2 * a * xi = eta * (b +- sqrt(b² - 4 * a²))\n\t * g1 * xi - g2 * eta = 0 (3)\n\t * with g1 = 2 * a, g2 = b +- sqrt(b² - 4 * a²)\n\t * Solve (3), (2) with intersectionUnitCircleLine\n\t */\n\trightAngled(): SemiEllipseCurve {\n\t\tconst f1 = this.f1,\n\t\t\tf2 = this.f2,\n\t\t\ta = f1.dot(f2),\n\t\t\tb = f2.squared() - f1.squared()\n\t\tif (eq0(a)) {\n\t\t\treturn this\n\t\t}\n\t\tconst g1 = 2 * a,\n\t\t\tg2 = b + Math.sqrt(b * b + 4 * a * a)\n\t\tconst { x1: xi, y1: eta } = intersectionUnitCircleLine(g1, g2, 0)\n\t\tconst f1RA = f1.times(xi).plus(f2.times(eta))\n\t\tconst f2RA = f1.times(-eta).plus(f2.times(xi))\n\t\treturn new SemiEllipseCurve(this.center, f1RA, f2RA, -PI, PI)\n\t}\n\n\tisInfosWithEllipse(ellipse: SemiEllipseCurve): ISInfo[] {\n\t\tif (this.normal.isParallelTo(ellipse.normal) && eq0(this.center.minus(ellipse.center).dot(ellipse.normal))) {\n\t\t\t// ellipses are coplanar\n\t\t\tconst ellipseLCRA = ellipse.transform(this.matrixInverse).rightAngled()\n\n\t\t\tconst r1 = ellipseLCRA.f1.lengthXY(),\n\t\t\t\tr2 = ellipseLCRA.f2.lengthXY(),\n\t\t\t\tcenterDist = ellipseLCRA.center.lengthXY()\n\t\t\tconst rMin = min(r1, r2),\n\t\t\t\trMax = max(r1, r2)\n\t\t\tif (\n\t\t\t\tlt(centerDist + rMax, 1) || // entirely inside unit circle\n\t\t\t\tlt(1, centerDist - rMax) || // entirely outside unit circle\n\t\t\t\tlt(1, rMin - centerDist) || // contains unit circle\n\t\t\t\t(eq(1, r1) && eq(1, r2) && eq0(centerDist)) // also unit circle, return no IS\n\t\t\t) {\n\t\t\t\treturn []\n\t\t\t}\n\n\t\t\tconst f = (t: number) => ellipseLCRA.at(t).lengthXY() - 1\n\t\t\tconst df = (t: number) =>\n\t\t\t\tellipseLCRA\n\t\t\t\t\t.at(t)\n\t\t\t\t\t.xy()\n\t\t\t\t\t.dot(ellipseLCRA.tangentAt(t)) / ellipseLCRA.at(t).lengthXY()\n\t\t\tcheckDerivate(f, df, -PI, PI, 1)\n\t\t\tconst ellipseLCRATs: number[] = []\n\t\t\tfor (let startT = -4 / 5 * PI; startT < PI; startT += PI / 4) {\n\t\t\t\tlet t = newtonIterateSmart(f, startT, 16, df, 1e-4)\n\t\t\t\tle(t, -PI) && (t += TAU)\n\t\t\t\tassert(!isNaN(t))\n\t\t\t\tif (between(t, -PI, PI) && eq0(f(t)) && !ellipseLCRATs.some(r => eq(t, r))) {\n\t\t\t\t\tellipseLCRATs.push(t)\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result: ISInfo[] = []\n\t\t\tfor (const ellipseLCRAT of ellipseLCRATs) {\n\t\t\t\tconst p = this.matrix.transformPoint(ellipseLCRA.at(ellipseLCRAT))\n\t\t\t\tif (this.containsPoint(p) && ellipse.containsPoint(p)) {\n\t\t\t\t\tresult.push({ tThis: this.pointT(p), tOther: ellipse.pointT(p), p })\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result\n\n\t\t\t//const angle = ellipseLCRA.f1.angleXY()\n\t\t\t//const aSqr = ellipseLCRA.f1.squared(), bSqr = ellipseLCRA.f2.squared()\n\t\t\t//const a = Math.sqrt(aSqr), b = Math.sqrt(bSqr)\n\t\t\t//const {x: centerX, y: centerY} = ellipseLCRA.center\n\t\t\t//const rotCenterX = centerX * Math.cos(-angle) + centerY * -Math.sin(-angle)\n\t\t\t//const rotCenterY = centerX * Math.sin(-angle) + centerY * Math.cos(-angle)\n\t\t\t//const rotCenter = V(rotCenterX, rotCenterY)\n\t\t\t//const f = t => {\n\t\t\t//\tconst lex = Math.cos(t) - rotCenterX, ley = Math.sin(t) - rotCenterY\n\t\t\t//\treturn lex * lex / aSqr + ley * ley / bSqr - 1\n\t\t\t//}\n\t\t\t//const f2 = (x, y) => (x * x + y * y - 1)\n\t\t\t//const f3 = (x, y) => ((x - rotCenterX) * (x - rotCenterX) / aSqr + (y - rotCenterY) * (y - rotCenterY) /\n\t\t\t// bSqr - 1) const results = [] const resetMatrix = this.matrix.times(M4.rotateZ(angle)) for (let startT =\n\t\t\t// Math.PI / 4; startT < 2 * Math.PI; startT += Math.PI / 2) { const startP = EllipseCurve.XY.at(startT)\n\t\t\t// const p = newtonIterate2d(f3, f2, startP.x, startP.y, 10) if (p && !results.some(r => r.like(p))) {\n\t\t\t// results.push(p) } } const rotEl = new EllipseCurve(rotCenter, V(a, 0, 0), V(0, b, 0)) return\n\t\t\t// results.map(pLC => { const p = resetMatrix.transformPoint(pLC) return {tThis: this.pointT(p, PI),\n\t\t\t// tOther: ellipse.pointT(p, PI), p} })\n\t\t} else {\n\t\t\treturn this.isTsWithPlane(P3.normalOnAnchor(ellipse.normal.unit(), ellipse.center)).mapFilter(t => {\n\t\t\t\tconst p = this.at(t)\n\t\t\t\tif (ellipse.containsPoint(p)) {\n\t\t\t\t\treturn { tThis: t, tOther: ellipse.pointT(p), p }\n\t\t\t\t}\n\t\t\t\treturn undefined\n\t\t\t})\n\t\t}\n\t}\n\n\tisInfosWithCurve(curve: Curve): ISInfo[] {\n\t\tif (curve instanceof SemiEllipseCurve) {\n\t\t\treturn this.isInfosWithEllipse(curve)\n\t\t}\n\t\treturn super.isInfosWithCurve(curve)\n\t}\n\n\troots(): [number[], number[], number[]] {\n\t\t// tangent(t) = f2 cos t - f1 sin t\n\t\t// solve for each dimension separately\n\t\t// tangent(eta, xi) = f2 eta - f1 xi\n\n\t\treturn arrayFromFunction(3, dim => {\n\t\t\tconst a = this.f2.e(dim),\n\t\t\t\tb = -this.f1.e(dim)\n\t\t\treturn intersectionUnitCircleLine2(a, b, 0)\n\t\t\t\t.map(([xi, eta]) => Math.atan2(eta, xi))\n\t\t\t\t.filter(t => this.isValidT(t))\n\t\t})\n\t}\n\n\tclosestTToPoint(p: V3, tStart?: number): number {\n\t\t// (at(t) - p) * tangentAt(t) = 0\n\t\t// (xi f1 + eta f2 + q) * (xi f2 - eta f1) = 0\n\t\t// xi eta (f2^2-f1^2) + xi f2 q - eta² f1 f2 + xi² f1 f2 - eta f1 q = 0\n\t\t//  (xi² - eta²) f1 f2 + xi eta (f2^2-f1^2) + xi f2 q - eta f1 q = 0\n\n\t\t// atan2 of p is a good first approximation for the searched t\n\t\ttStart = tStart || this.matrixInverse.transformPoint(p).angleXY()\n\t\tconst pRelCenter = p.minus(this.center)\n\t\tconst f = (t: number) =>\n\t\t\tthis.tangentAt(t).dot(\n\t\t\t\tthis.f1\n\t\t\t\t\t.times(Math.cos(t))\n\t\t\t\t\t.plus(this.f2.times(Math.sin(t)))\n\t\t\t\t\t.minus(pRelCenter),\n\t\t\t)\n\t\treturn newtonIterate1d(f, tStart, 8)\n\t}\n\n\tarea(): number {\n\t\t// see\n\t\t// https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Cross_product_parallelogram.svg/220px-Cross_product_parallelogram.svg.png\n\t\treturn Math.PI * this.f1.cross(this.f2).length()\n\t}\n\n\tangleToT(phi: number): number {\n\t\t// atan2(y, x) = phi\n\t\tconst phiDir = this.f1\n\t\t\t.unit()\n\t\t\t.times(Math.cos(phi))\n\t\t\t.plus(\n\t\t\t\tthis.f2\n\t\t\t\t\t.rejectedFrom(this.f1)\n\t\t\t\t\t.unit()\n\t\t\t\t\t.times(Math.sin(phi)),\n\t\t\t)\n\t\tconst dirLC = this.matrixInverse.transformVector(phiDir)\n\t\treturn dirLC.angleXY()\n\t}\n}\n\nSemiEllipseCurve.prototype.hlol = Curve.hlol++\nSemiEllipseCurve.prototype.tIncrement = 2 * Math.PI / (4 * 32)\n","import {\r\n\tassert,\r\n\tassertInst,\r\n\tassertNumbers,\r\n\tassertVectors,\r\n\tcallsce,\r\n\teq,\r\n\teq0,\r\n\tfloatHashCode,\r\n\thasConstructor,\r\n\tint,\r\n\tM4,\r\n\tTransformable,\r\n\tV3,\r\n} from 'ts3dutils'\r\n\r\nimport { BezierCurve, Curve, HyperbolaCurve, L3, ParabolaCurve, SemiEllipseCurve } from './index'\r\n\r\nexport class P3 extends Transformable {\r\n\tstatic readonly YZ = new P3(V3.X, 0)\r\n\tstatic readonly ZX = new P3(V3.Y, 0)\r\n\tstatic readonly XY = new P3(V3.Z, 0)\r\n\r\n\t/**\r\n\t * Oriented plane, i.e. splits R^3 in half, with one half being \"in front\" of the plane.\r\n\t * Leads to multiple comparisons: isCoplanarToPlane returns if the plane occupies the same space,\r\n\t * like returns if the plane occupies the same space and has the same orientation\r\n\t *\r\n\t * Points x on the plane fulfill the equation: normal1 DOT x = w\r\n\t *\r\n\t * @param normal1 unit plane normal1\r\n\t * @param w signed (rel to normal1) distance from the origin\r\n\t */\r\n\tconstructor(readonly normal1: V3, readonly w: number = 0) {\r\n\t\tsuper()\r\n\t\tassertVectors(normal1)\r\n\t\tassertNumbers(w)\r\n\t\tassert(normal1.hasLength(1), 'normal1.hasLength(1)' + normal1)\r\n\t}\r\n\r\n\tget anchor(): V3 {\r\n\t\treturn this.normal1.times(this.w)\r\n\t}\r\n\r\n\tstatic throughPoints(a: V3, b: V3, c: V3): P3 {\r\n\t\tassertVectors(a, b, c)\r\n\t\tconst n1 = b\r\n\t\t\t.minus(a)\r\n\t\t\t.cross(c.minus(a))\r\n\t\t\t.unit()\r\n\t\treturn new P3(n1, n1.dot(a))\r\n\t}\r\n\r\n\tstatic normalOnAnchor(normal: V3, anchor: V3): P3 {\r\n\t\tassertVectors(normal, anchor)\r\n\t\tconst n1 = normal.unit()\r\n\t\treturn new this(n1, n1.dot(anchor))\r\n\t}\r\n\r\n\t/**\r\n\t * Create a plane which intersects the X, Y and Z axes at the specified offsets.\r\n\t * x/x0 + y/y0 + y/y0 = 1\r\n\t */\r\n\tstatic forAxisIntercepts(x0: number, y0: number, z0: number): P3 {\r\n\t\tassertNumbers(x0, y0, z0)\r\n\t\tconst normal = new V3(1 / x0, 1 / y0, 1 / z0)\r\n\t\treturn new P3(normal.unit(), normal.length())\r\n\t}\r\n\r\n\t/**\r\n\t * Create a plane containing `anchor` and extending in directions `v0` and `v1`.\r\n\t * `v0` and `v1` may not be parallel.\r\n\t * @param anchor\r\n\t * @param v0\r\n\t * @param v1\r\n\t */\r\n\tstatic forAnchorAndPlaneVectors(anchor: V3, v0: V3, v1: V3): P3 {\r\n\t\tassertVectors(anchor, v0, v1)\r\n\t\tassert(!v0.isParallelTo(v1))\r\n\t\treturn this.normalOnAnchor(v0.cross(v1), anchor)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a plane which contains botha point and a line. The point may not lie on the line.\r\n\t * @param p\r\n\t * @param line\r\n\t */\r\n\tstatic forPointAndLine(p: V3, line: L3) {\r\n\t\treturn this.forAnchorAndPlaneVectors(line.anchor, line.dir1, line.anchor.to(p))\r\n\t}\r\n\r\n\taxisIntercepts(): V3 {\r\n\t\tconst w = this.w,\r\n\t\t\tn = this.normal1\r\n\t\treturn new V3(w / n.x, w / n.y, w / n.z)\r\n\t}\r\n\r\n\tisCoplanarToPlane(plane: P3): boolean {\r\n\t\tassertInst(P3, plane)\r\n\t\treturn this.like(plane) || this.likeFlipped(plane)\r\n\t}\r\n\r\n\tlike(plane: P3): boolean {\r\n\t\tassertInst(P3, plane)\r\n\t\treturn eq(this.w, plane.w) && this.normal1.like(plane.normal1)\r\n\t}\r\n\r\n\tlikeFlipped(plane: P3): boolean {\r\n\t\tassertInst(P3, plane)\r\n\t\treturn eq(this.w, -plane.w) && this.normal1.like(plane.normal1.negated())\r\n\t}\r\n\r\n\t/**\r\n\t * True iff plane.normal1 is equal to this.normal1 or it's negation.\r\n\t *\r\n\t */\r\n\tisParallelToPlane(plane: P3): boolean {\r\n\t\tassertInst(P3, plane)\r\n\t\treturn eq(1, Math.abs(this.normal1.dot(plane.normal1)))\r\n\t}\r\n\r\n\tisParallelToLine(line: L3): boolean {\r\n\t\tassertInst(L3, line)\r\n\t\treturn eq0(this.normal1.dot(line.dir1))\r\n\t}\r\n\r\n\tisPerpendicularToLine(line: L3): boolean {\r\n\t\tassertInst(L3, line)\r\n\t\t// this.normal1 || line.dir1\r\n\t\treturn eq(1, Math.abs(this.normal1.dot(line.dir1)))\r\n\t}\r\n\r\n\tisPerpendicularToPlane(plane: P3): boolean {\r\n\t\tassertInst(P3, plane)\r\n\t\treturn eq0(this.normal1.dot(plane.normal1))\r\n\t}\r\n\r\n\ttoSource(): string {\r\n\t\treturn callsce('new P3', this.normal1, this.w)\r\n\t}\r\n\r\n\ttranslated(offset: V3): P3 {\r\n\t\treturn new P3(this.normal1, this.w + offset.dot(this.normal1))\r\n\t}\r\n\r\n\ttransform(m4: M4) {\r\n\t\tconst mirror = m4.isMirroring()\r\n\t\t// get two vectors in the plane:\r\n\t\tconst u = this.normal1.getPerpendicular()\r\n\t\tconst v = u.cross(this.normal1)\r\n\t\t// get 3 points in the plane:\r\n\t\tconst p1 = m4.transformPoint(this.anchor),\r\n\t\t\tp2 = m4.transformPoint(this.anchor.plus(v)),\r\n\t\t\tp3 = m4.transformPoint(this.anchor.plus(u))\r\n\t\t// and create a new plane from the transformed points:\r\n\t\treturn P3.throughPoints(p1, !mirror ? p2 : p3, !mirror ? p3 : p2) as this\r\n\t}\r\n\r\n\tdistanceToLine(line: L3): number {\r\n\t\tassertInst(L3, line)\r\n\t\tif (!this.isParallelToLine(line)) {\r\n\t\t\treturn this.distanceToPoint(line.anchor)\r\n\t\t} else {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t}\r\n\r\n\tcontainsPoint(x: V3): boolean {\r\n\t\tassertVectors(x)\r\n\t\treturn eq(this.w, this.normal1.dot(x))\r\n\t}\r\n\r\n\tcontainsLine(line: L3): boolean {\r\n\t\tassertInst(L3, line)\r\n\t\treturn this.containsPoint(line.anchor) && this.isParallelToLine(line)\r\n\t}\r\n\r\n\tdistanceToPointSigned(point: V3): number {\r\n\t\tassertInst(V3, point)\r\n\t\treturn this.normal1.dot(point) - this.w\r\n\t}\r\n\r\n\tdistanceToPoint(point: V3): number {\r\n\t\tassertInst(V3, point)\r\n\t\treturn Math.abs(this.normal1.dot(point) - this.w)\r\n\t}\r\n\r\n\tintersectionWithLine(line: L3): V3 {\r\n\t\treturn line.intersectionWithPlane(this)\r\n\t}\r\n\r\n\tintersectionWithPlane(plane: P3): L3 | undefined {\r\n\t\t/*\r\n\r\n\t\t this: n0 * x = w0\r\n\t\t plane: n1 * x = w1\r\n\t\t plane perpendicular to both which goes through origin:\r\n\t\t n2 := n0 X x1\r\n\t\t n2 * x = 0\r\n\t\t */\r\n\t\tassertInst(P3, plane)\r\n\t\tassert(!this.isParallelToPlane(plane), '!this.isParallelToPlane(plane)')\r\n\t\t/*\r\n\t\t var n0 = this.normal1, n1 = plane.normal1, n2 = n0.cross(n1).unit(), m = M4.forSys(n0, n1, n2)\r\n\t\t var x0 = this.anchor, x1 = plane.anchor, x2 = V3.O\r\n\t\t var p = n2.times(x2.dot(n2))\r\n\t\t .plus(n1.cross(n2).times(x0.dot(n0)))\r\n\t\t .plus(n2.cross(n0).times(x1.dot(n1)))\r\n\t\t .div(m.determinant())\r\n\t\t */\r\n\t\tconst n0 = this.normal1,\r\n\t\t\tn1 = plane.normal1,\r\n\t\t\tn2 = n0.cross(n1).unit()\r\n\t\tconst p = M4.forRows(n0, n1, n2)\r\n\t\t\t.inversed()\r\n\t\t\t.transformVector(new V3(this.w, plane.w, 0))\r\n\t\treturn new L3(p, n2)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the point in the plane closest to the given point\r\n\t *\r\n\t */\r\n\tprojectedPoint(x: V3): V3 {\r\n\t\t// See http://math.stackexchange.com/questions/444968/project-a-point-in-3d-on-a-given-plane\r\n\t\t// p = x - ((x - planeAnchor) * normal1) * normal1\r\n\t\treturn x.minus(this.normal1.times(x.minus(this.anchor).dot(this.normal1)))\r\n\t}\r\n\r\n\tprojectedVector(x: V3): V3 {\r\n\t\t// See V3.rejectedFrom. Simplified, as this.normal1.length() == 1\r\n\t\treturn x.minus(this.normal1.times(x.dot(this.normal1)))\r\n\t}\r\n\r\n\tflipped(): P3 {\r\n\t\treturn new P3(this.normal1.negated(), -this.w)\r\n\t}\r\n\r\n\tcontainsCurve(curve: Curve): boolean {\r\n\t\tif (curve instanceof L3) {\r\n\t\t\treturn this.containsLine(curve)\r\n\t\t} else if (\r\n\t\t\tcurve instanceof SemiEllipseCurve ||\r\n\t\t\tcurve instanceof HyperbolaCurve ||\r\n\t\t\tcurve instanceof ParabolaCurve\r\n\t\t) {\r\n\t\t\treturn this.containsPoint(curve.center) && this.normal1.isParallelTo(curve.normal)\r\n\t\t} else if (curve instanceof BezierCurve) {\r\n\t\t\treturn curve.points.every(p => this.containsPoint(p))\r\n\t\t} else {\r\n\t\t\tthrow new Error('' + curve)\r\n\t\t}\r\n\t}\r\n\r\n\tequals(obj: any) {\r\n\t\treturn hasConstructor(obj, P3) && this.normal1.equals(obj.normal1) && this.w == obj.w\r\n\t}\r\n\r\n\thashCode(): int {\r\n\t\treturn (this.normal1.hashCode() * 31) | (0 + floatHashCode(this.w))\r\n\t}\r\n}\r\n","import { Equalable } from 'javasetmap.ts'\nimport { callsce, eq, eq0, int, le, NLA_PRECISION, Transformable, V3 } from 'ts3dutils'\n\nimport {\n\tCalculateAreaVisitor,\n\tCurve,\n\tdotCurve2,\n\tEdge,\n\tImplicitCurve,\n\tL3,\n\tP3,\n\tPICurve,\n\tPPCurve,\n\tSemiEllipseCurve,\n\tZDirVolumeVisitor,\n} from '../index'\n\nimport { ceil, floor, PI, sign } from '../math'\n\nexport abstract class Surface extends Transformable implements Equalable {\n\treadonly ['constructor']: new (...args: any[]) => this\n\tstatic loopContainsPointGeneral(loop: Edge[], pWC: V3, testLine: L3, lineOut: V3): PointVsFace {\n\t\tconst testPlane = P3.normalOnAnchor(lineOut, pWC)\n\t\t// edges colinear to the testing line; these will always be counted as \"inside\" relative to the testing line\n\t\tconst colinearEdges = loop.map(edge => edge.colinearToLine(testLine))\n\t\tlet inside = false\n\n\t\tfunction logIS(isP: V3) {\n\t\t\tconst isT = testLine.pointT(isP)\n\t\t\tif (eq0(isT)) {\n\t\t\t\treturn true\n\t\t\t} else if (isT > 0) {\n\t\t\t\tinside = !inside\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\n\t\tfor (let edgeIndex = 0; edgeIndex < loop.length; edgeIndex++) {\n\t\t\tconst edge = loop[edgeIndex]\n\t\t\tconst nextEdgeIndex = (edgeIndex + 1) % loop.length,\n\t\t\t\tnextEdge = loop[nextEdgeIndex]\n\t\t\t//console.log(edge.toSource()) {p:V(2, -2.102, 0),\n\t\t\tif (colinearEdges[edgeIndex]) {\n\t\t\t\tconst lineAT = testLine.pointT(edge.a),\n\t\t\t\t\tlineBT = testLine.pointT(edge.b)\n\t\t\t\tif (Math.min(lineAT, lineBT) <= NLA_PRECISION && -NLA_PRECISION <= Math.max(lineAT, lineBT)) {\n\t\t\t\t\treturn PointVsFace.ON_EDGE\n\t\t\t\t}\n\t\t\t\t// edge colinear to intersection\n\t\t\t\tconst nextInside =\n\t\t\t\t\tcolinearEdges[nextEdgeIndex] ||\n\t\t\t\t\tdotCurve2(nextEdge.curve, nextEdge.aT, lineOut, sign(nextEdge.deltaT())) < 0\n\t\t\t\tif (!nextInside) {\n\t\t\t\t\tif (logIS(edge.b)) return PointVsFace.ON_EDGE\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const edgeT of edge.edgeISTsWithPlane(testPlane)) {\n\t\t\t\t\tif (edgeT == edge.bT) {\n\t\t\t\t\t\tif (!testLine.containsPoint(edge.b)) continue\n\t\t\t\t\t\t// endpoint lies on intersection line\n\t\t\t\t\t\tif (edge.b.like(pWC)) {\n\t\t\t\t\t\t\t// TODO: refactor, dont check for different sides, just logIs everything\n\t\t\t\t\t\t\treturn PointVsFace.ON_EDGE\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst edgeInside = dotCurve2(edge.curve, edge.bT, lineOut, -sign(edge.deltaT())) < 0\n\t\t\t\t\t\tconst nextInside =\n\t\t\t\t\t\t\tcolinearEdges[nextEdgeIndex] ||\n\t\t\t\t\t\t\tdotCurve2(nextEdge.curve, nextEdge.aT, lineOut, sign(nextEdge.deltaT())) < 0\n\t\t\t\t\t\tif (edgeInside != nextInside) {\n\t\t\t\t\t\t\tif (logIS(edge.b)) return PointVsFace.ON_EDGE\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (edgeT != edge.aT) {\n\t\t\t\t\t\tconst p = edge.curve.at(edgeT)\n\t\t\t\t\t\tif (!testLine.containsPoint(p)) continue\n\t\t\t\t\t\t// edge crosses line, neither starts nor ends on it\n\t\t\t\t\t\tif (logIS(p)) return PointVsFace.ON_EDGE\n\t\t\t\t\t\t// TODO: tangents?\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn inside ? PointVsFace.INSIDE : PointVsFace.OUTSIDE\n\t}\n\n\tstatic loopContainsPointEllipse(loop: Edge[], pWC: V3, testLine: SemiEllipseCurve, pWCT?: number): PointVsFace {\n\t\tconst lineOut = testLine.normal\n\t\tconst testPlane = P3.normalOnAnchor(testLine.normal, pWC)\n\t\tconst colinearEdges = loop.map(edge => testLine.isColinearTo(edge.curve))\n\t\tlet inside = false\n\t\tif (undefined === pWCT) {\n\t\t\tpWCT = testLine.pointT(pWC)\n\t\t}\n\t\tconst pT = pWCT!\n\n\t\tfunction logIS(isP: V3) {\n\t\t\tconst isT = testLine.pointT(isP)\n\t\t\tif (eq(pT, isT)) {\n\t\t\t\treturn true\n\t\t\t} else if (pT < isT && le(isT, PI)) {\n\t\t\t\tinside = !inside\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\n\t\tfor (let edgeIndex = 0; edgeIndex < loop.length; edgeIndex++) {\n\t\t\tconst edge = loop[edgeIndex]\n\t\t\tconst nextEdgeIndex = (edgeIndex + 1) % loop.length,\n\t\t\t\tnextEdge = loop[nextEdgeIndex]\n\t\t\t//console.log(edge.toSource()) {p:V(2, -2.102, 0),\n\t\t\tif (colinearEdges[edgeIndex]) {\n\t\t\t\tlet edgeT\n\t\t\t\tif (\n\t\t\t\t\tedge.curve.containsPoint(pWC) &&\n\t\t\t\t\tle(edge.minT, (edgeT = edge.curve.pointT(pWC))) &&\n\t\t\t\t\tle(edgeT, edge.maxT)\n\t\t\t\t) {\n\t\t\t\t\treturn PointVsFace.ON_EDGE\n\t\t\t\t}\n\t\t\t\t// edge colinear to intersection\n\t\t\t\tconst nextInside =\n\t\t\t\t\tcolinearEdges[nextEdgeIndex] ||\n\t\t\t\t\tdotCurve2(nextEdge.curve, nextEdge.aT, lineOut, sign(nextEdge.deltaT())) < 0\n\t\t\t\tif (!nextInside && testLine.containsPoint(edge.b)) {\n\t\t\t\t\tif (logIS(edge.b)) return PointVsFace.ON_EDGE\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (const edgeT of edge.edgeISTsWithPlane(testPlane)) {\n\t\t\t\t\tif (edgeT == edge.bT) {\n\t\t\t\t\t\tif (!testLine.containsPoint(edge.b)) continue\n\t\t\t\t\t\t// endpoint lies on intersection testLine\n\t\t\t\t\t\tconst edgeInside = dotCurve2(edge.curve, edge.bT, lineOut, -sign(edge.deltaT())) < 0\n\t\t\t\t\t\tconst nextInside =\n\t\t\t\t\t\t\tcolinearEdges[nextEdgeIndex] ||\n\t\t\t\t\t\t\tdotCurve2(nextEdge.curve, nextEdge.aT, lineOut, sign(nextEdge.deltaT())) < 0\n\t\t\t\t\t\tif (edgeInside != nextInside) {\n\t\t\t\t\t\t\tif (logIS(edge.b)) return PointVsFace.ON_EDGE\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (edgeT != edge.aT) {\n\t\t\t\t\t\tconst p = edge.curve.at(edgeT)\n\t\t\t\t\t\tif (!testLine.containsPoint(p)) continue\n\t\t\t\t\t\t// edge crosses testLine, neither starts nor ends on it\n\t\t\t\t\t\tif (logIS(p)) return PointVsFace.ON_EDGE\n\t\t\t\t\t\t// TODO: tangents?\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn inside ? PointVsFace.INSIDE : PointVsFace.OUTSIDE\n\t}\n\n\ttoString(): string {\n\t\treturn this.toSource()\n\t}\n\n\ttoSource(rounder: (x: number) => number = x => x): string {\n\t\treturn callsce.call(undefined, 'new ' + this.constructor.name, ...this.getConstructorParameters())\n\t}\n\n\t/**\n\t * Return points which would touch AABB. Doesnt include borders due to paramtetric bounds, for example.\n\t */\n\tgetExtremePoints(): V3[] {\n\t\treturn []\n\t}\n\n\tabstract normalP(p: V3): V3\n\n\tabstract getConstructorParameters(): any[]\n\n\tabstract isTsForLine(line: L3): number[]\n\n\t/**\n\t * TODO remove constraint\n\t * IMPORTANT: The tangents of the resulting curves need to be equal to the cross product of this and surface in the\n\t * point. I.e.: for every point p p on a returned curve: curve.tangentAt(curve.pointT(p)) == this.normalP(p)\n\t * X surface.normalP(p)\n\t *\n\t * Cross product is not commutative, so curve.tangentAt(curve.pointT(p)) == surface.normalP(p) X\n\t * this.normalP(p) is not valid.\n\t */\n\tabstract isCurvesWithPlane(plane: P3): Curve[]\n\n\tisCurvesWithSurface(surface: Surface): Curve[] {\n\t\treturn surface.isCurvesWithSurface(this) //.map(curve => curve.reversed())\n\t}\n\n\tcontainsCurve(curve: Curve): boolean {\n\t\tif (curve instanceof PICurve) {\n\t\t\t// if (this.equals(curve.parametricSurface) || this.equals(curve.implicitSurface)) {\n\t\t\t// \treturn true\n\t\t\t// }\n\t\t}\n\t\tif (curve instanceof PPCurve) {\n\t\t\tif (this.equals(curve.parametricSurface1) || this.equals(curve.parametricSurface2)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\tif (curve instanceof ImplicitCurve) {\n\t\t\tfor (let i = ceil(curve.tMin) + 1; i <= floor(curve.tMax) - 1; i++) {\n\t\t\t\tif (!this.containsPoint(curve.points[i])) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\tabstract containsPoint(pWC: V3): boolean\n\n\tabstract flipped(): this\n\n\tflipped2(doFlip: boolean): this {\n\t\treturn doFlip ? this.flipped() : this\n\t}\n\n\tabstract loopContainsPoint(contour: Edge[], point: V3): PointVsFace\n\n\t/**\n\t * Returns true iff the surface occupies the same space as the argument (not necessarily same normal1)\n\t */\n\tabstract isCoplanarTo(surface: Surface): boolean\n\n\t/**\n\t * coplanar and same normals\n\t */\n\tabstract like(object: any): boolean\n\n\tabstract edgeLoopCCW(loop: Edge[]): boolean\n\n\tclipCurves(curves: Curve[]): Curve[] {\n\t\treturn curves\n\t}\n\n\tequals(obj: any): boolean {\n\t\treturn (\n\t\t\tthis === obj ||\n\t\t\t(this.constructor === obj.constructor &&\n\t\t\t\tthis.getConstructorParameters().equals(obj.getConstructorParameters()))\n\t\t)\n\t}\n\n\thashCode(): int {\n\t\treturn this.getConstructorParameters().hashCode()\n\t}\n\n\tzDirVolume(allEdges: Edge[]): { centroid: V3; volume: number } {\n\t\treturn this.visit(ZDirVolumeVisitor, allEdges)\n\t}\n\n\tcalculateArea(allEdges: Edge[]): number {\n\t\treturn this.visit(CalculateAreaVisitor as any, allEdges)\n\t}\n}\n\nexport enum PointVsFace {\n\tINSIDE,\n\tOUTSIDE,\n\tON_EDGE,\n}\n\nexport abstract class ImplicitSurface extends Surface {\n\tstatic is(obj: any): obj is ImplicitSurface {\n\t\treturn obj.implicitFunction && obj.didp\n\t}\n\n\tabstract implicitFunction(): (pWC: V3) => number\n\n\t/**\n\t * partial derivatives of this.implicitFunction in point pWC\n\t * @param pWC\n\t * @return\n\t */\n\tabstract didp(pWC: V3): V3\n}\n","import { assert, assertNumbers, between, isCCW, V3 } from 'ts3dutils'\r\nimport { Mesh } from 'tsgl'\r\n\r\nimport { breakDownPPCurves, Curve, Edge, ImplicitSurface, MathFunctionR2R, PICurve, Surface } from '../index'\r\n\r\nimport { ceil, min } from '../math'\r\n\r\nexport abstract class ParametricSurface extends Surface {\r\n\tuStep: number\r\n\tvStep: number\r\n\r\n\tconstructor(readonly sMin: number, readonly sMax: number, readonly tMin: number, readonly tMax: number) {\r\n\t\tsuper()\r\n\t\tassertNumbers(sMin, sMax, tMin, tMax)\r\n\t\tassert(sMin < sMax)\r\n\t\tassert(tMin < tMax)\r\n\t\tassert(\r\n\t\t\t(x => x[x.length - 4])(this.getConstructorParameters()) == this.sMin,\r\n\t\t\tthis.getConstructorParameters(),\r\n\t\t\tthis.sMin,\r\n\t\t)\r\n\t}\r\n\r\n\tstatic isCurvesParametricImplicitSurface(\r\n\t\tps: ParametricSurface,\r\n\t\tis: ImplicitSurface,\r\n\t\tsStep: number,\r\n\t\ttStep: number = sStep,\r\n\t\tcurveStepSize: number,\r\n\t): Curve[] {\r\n\t\tconst pf = ps.pSTFunc(),\r\n\t\t\ticc = is.implicitFunction()\r\n\t\tconst dpds = ps.dpds()\r\n\t\tconst dpdt = ps.dpdt()\r\n\t\tconst didp = is.didp.bind(is)\r\n\t\tconst ist = (x: number, y: number) => icc(pf(x, y))\r\n\t\tconst dids = (s: number, t: number) => didp(pf(s, t)).dot(dpds(s, t))\r\n\t\tconst didt = (s: number, t: number) => didp(pf(s, t)).dot(dpdt(s, t))\r\n\t\tconst mf = MathFunctionR2R.forFFxFy(ist, dids, didt)\r\n\t\tconst curves = Curve.breakDownIC(mf, ps, sStep, tStep, curveStepSize, (s, t) => is.containsPoint(pf(s, t))).map(\r\n\t\t\t({ points, tangents }, i) => PICurve.forParametricPointsTangents(ps, is, points, tangents, curveStepSize),\r\n\t\t)\r\n\t\treturn curves\r\n\t}\r\n\r\n\tstatic isCurvesParametricParametricSurface(\r\n\t\tps1: ParametricSurface,\r\n\t\tps2: ParametricSurface,\r\n\t\ts1Step: number,\r\n\t\tt1Step: number = s1Step,\r\n\t\tcurveStepSize: number,\r\n\t): Curve[] {\r\n\t\treturn breakDownPPCurves(ps1, ps2, s1Step, t1Step, curveStepSize)\r\n\t}\r\n\r\n\tstatic is(obj: any): obj is ParametricSurface {\r\n\t\treturn obj.pSTFunc\r\n\t}\r\n\r\n\tpST(s: number, t: number): V3 {\r\n\t\treturn this.pSTFunc()(s, t)\r\n\t}\r\n\r\n\tpSTFunc(): (s: number, t: number) => V3 {\r\n\t\treturn this.pST.bind(this)\r\n\t}\r\n\r\n\tabstract dpds(): (s: number, t: number) => V3\r\n\r\n\tabstract dpdt(): (s: number, t: number) => V3\r\n\r\n\tstP(pWC: V3): V3 {\r\n\t\treturn this.stPFunc()(pWC)\r\n\t}\r\n\r\n\tstPFunc(): (pWC: V3) => V3 {\r\n\t\treturn this.stP.bind(this)\r\n\t}\r\n\r\n\tbounds(s: number, t: number): boolean {\r\n\t\treturn this.sMin <= s && s <= this.sMax && this.tMin <= t && t <= this.tMax\r\n\t}\r\n\r\n\t/**\r\n\t * Positive values are inside bounds.\r\n\t */\r\n\tboundsSigned(s: number, t: number): number {\r\n\t\treturn min(s - this.sMin, this.sMax - s, t - this.tMin, this.tMax - t)\r\n\t}\r\n\r\n\tnormalP(p: V3): V3 {\r\n\t\tconst pmPoint = this.stPFunc()(p)\r\n\t\treturn this.normalST(pmPoint.x, pmPoint.y)\r\n\t}\r\n\r\n\tnormalSTFunc(): (s: number, t: number) => V3 {\r\n\t\treturn this.normalST.bind(this)\r\n\t}\r\n\r\n\tnormalST(s: number, t: number): V3 {\r\n\t\treturn this.normalSTFunc()(s, t)\r\n\t}\r\n\r\n\tparametersValid(s: number, t: number): boolean {\r\n\t\treturn between(s, this.sMin, this.sMax) && between(t, this.tMin, this.tMax)\r\n\t}\r\n\r\n\tabstract pointFoot(pWC: V3, ss?: number, st?: number): V3\r\n\r\n\ttoMesh() {\r\n\t\tassert(isFinite(this.tMin) && isFinite(this.tMax) && isFinite(this.sMin) && isFinite(this.sMax))\r\n\t\tassert(isFinite(this.uStep) && isFinite(this.vStep))\r\n\t\treturn Mesh.parametric(\r\n\t\t\tthis.pSTFunc(),\r\n\t\t\tthis.normalSTFunc(),\r\n\t\t\tthis.sMin,\r\n\t\t\tthis.sMax,\r\n\t\t\tthis.tMin,\r\n\t\t\tthis.tMax,\r\n\t\t\tceil((this.sMax - this.sMin) / this.uStep),\r\n\t\t\tceil((this.tMax - this.tMin) / this.vStep),\r\n\t\t)\r\n\t}\r\n\r\n\tisCurvesWithImplicitSurface(is: ImplicitSurface, sStep: number, tStep: number, stepSize: number): Curve[] {\r\n\t\treturn ParametricSurface.isCurvesParametricImplicitSurface(this, is, sStep, tStep, stepSize)\r\n\t}\r\n\r\n\tedgeLoopCCW(contour: Edge[]): boolean {\r\n\t\tconst ptpF = this.stPFunc()\r\n\t\treturn isCCW(contour.flatMap(e => e.getVerticesNo0()).map(v => ptpF(v)), V3.Z)\r\n\t}\r\n\r\n\tlike(object: any): boolean {\r\n\t\tif (!this.isCoplanarTo(object)) return false\r\n\t\t// normals need to point in the same direction (outwards or inwards) for both\r\n\t\tconst pSMinTMin = this.pSTFunc()(this.sMin, this.tMin)\r\n\t\tconst thisNormal = this.normalSTFunc()(this.sMin, this.tMin)\r\n\t\tconst otherNormal = object.normalP(pSMinTMin)\r\n\t\treturn 0 < thisNormal.dot(otherNormal)\r\n\t}\r\n}\r\n","import {\n\tassert,\n\tassertInst,\n\tassertVectors,\n\teq,\n\teq0,\n\tgetIntervals,\n\tM4,\n\tnewtonIterate,\n\tpqFormula,\n\tTAU,\n\tV3,\n} from 'ts3dutils'\n\nimport {\n\tCurve,\n\tEdge,\n\tHyperbolaCurve,\n\tImplicitSurface,\n\tL3,\n\tP3,\n\tParabolaCurve,\n\tParametricSurface,\n\tPlaneSurface,\n\tPointVsFace,\n\tSemiEllipseCurve,\n\tSurface,\n} from '../index'\n\nimport { abs, cos, PI, sign, sin, sqrt } from '../math'\n\nexport class ConicSurface extends ParametricSurface implements ImplicitSurface {\n\tpointFoot(pWC: V3, ss?: number, st?: number): V3 {\n\t\tif (undefined === ss || undefined === st) {\n\t\t\t// similar to stP\n\t\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\t\tconst angle = pLC.angleXY()\n\t\t\tif (undefined === ss) {\n\t\t\t\tss = angle < -PI / 2 ? angle + TAU : angle\n\t\t\t}\n\t\t\tif (undefined === st) {\n\t\t\t\tst = pLC.z + (pLC.lengthXY() - pLC.z) * sqrt(2) / 2\n\t\t\t}\n\t\t}\n\t\tconst f = ([s, t]: number[]) => {\n\t\t\tconst pSTToPWC = this.pST(s, t).to(pWC)\n\t\t\treturn [this.dpds()(s, t).dot(pSTToPWC), this.dpdt()(s).dot(pSTToPWC)]\n\t\t}\n\t\tconst { 0: x, 1: y } = newtonIterate(f, [ss, st])\n\t\treturn new V3(x, y, 0)\n\t}\n\t/**\n\t * Unit cone. x² + y² = z², 0 <= z\n\t */\n\tstatic readonly UNIT = new ConicSurface(V3.O, V3.X, V3.Y, V3.Z)\n\treadonly matrix: M4\n\treadonly matrixInverse: M4\n\treadonly pLCNormalWCMatrix: M4\n\treadonly normalDir: number // -1 | 1\n\n\t/**\n\t * returns new cone C = {apex + f1 * z * cos(d) + f2 * z * sin(d) + f3 * z | -PI <= d <= PI, 0 <= z}\n\t * @param f1\n\t * @param f2\n\t * @param dir Direction in which the cone opens. The ellipse spanned by f1, f2 is contained at (apex + f1).\n\t */\n\tconstructor(\n\t\treadonly center: V3,\n\t\treadonly f1: V3,\n\t\treadonly f2: V3,\n\t\treadonly dir: V3,\n\t\tsMin: number = 0,\n\t\tsMax: number = PI,\n\t\ttMin: number = 0,\n\t\ttMax: number = 16,\n\t) {\n\t\tsuper(sMin, sMax, tMin, tMax)\n\t\tassertVectors(center, f1, f2, dir)\n\t\tassert(0 <= tMin)\n\t\tthis.matrix = M4.forSys(f1, f2, dir, center)\n\t\tthis.matrixInverse = this.matrix.inversed()\n\t\tthis.normalDir = sign(this.f1.cross(this.f2).dot(this.dir))\n\t\tthis.pLCNormalWCMatrix = this.matrix\n\t\t\t.as3x3()\n\t\t\t.inversed()\n\t\t\t.transposed()\n\t\t\t.scale(this.normalDir)\n\t}\n\n\tget apex() {\n\t\treturn this.center\n\t}\n\n\tstatic atApexThroughEllipse(\n\t\tapex: V3,\n\t\tellipse: SemiEllipseCurve,\n\t\tsMin?: number,\n\t\tsMax?: number,\n\t\ttMin?: number,\n\t\ttMax?: number,\n\t): ConicSurface {\n\t\tassertVectors(apex)\n\t\tassertInst(SemiEllipseCurve, ellipse)\n\t\treturn new ConicSurface(apex, ellipse.f1, ellipse.f2, apex.to(ellipse.center), sMin, sMax, tMin, tMax)\n\t}\n\n\tstatic unitISLineTs(anchor: V3, dir: V3): number[] {\n\t\tconst { x: ax, y: ay, z: az } = anchor\n\t\tconst { x: dx, y: dy, z: dz } = dir\n\n\t\t// this cone: x² + y² = z²\n\t\t// line: p = anchor + t * dir1\n\t\t// split line equation into 3 component equations, insert into cone equation\n\t\t// transform to form (a t² + b t + c = 0) and solve with pqFormula\n\t\tconst a = dx * dx + dy * dy - dz * dz\n\t\tconst b = 2 * (ax * dx + ay * dy - az * dz)\n\t\tconst c = ax * ax + ay * ay - az * az\n\t\t// cone only defined for 0 <= z, so filter invalid values\n\t\treturn pqFormula(b / a, c / a).filter(t => 0 < az + t * dz)\n\t}\n\n\t// calculate intersection of plane ax + cz = d and cone x² + y² = z²\n\tstatic unitISPlane(a: number, c: number, d: number): Curve[] {\n\t\tif (eq0(c)) {\n\t\t\t// plane is \"vertical\", i.e. parallel to Y and Z axes\n\t\t\tassert(!eq0(a)) // normal would be zero, which is invalid\n\t\t\t// z² - y² = d²/a²\n\t\t\tif (eq0(d)) {\n\t\t\t\t// d = 0 => z² - y² = 0 => z² = y² => z = y\n\t\t\t\t// plane goes through origin/V3.O\n\t\t\t\treturn [\n\t\t\t\t\tnew L3(V3.O, new V3(0, -sqrt(2) / 2, -sqrt(2) / 2), undefined, 0),\n\t\t\t\t\tnew L3(V3.O, new V3(0, -sqrt(2) / 2, sqrt(2) / 2), 0),\n\t\t\t\t]\n\t\t\t} else {\n\t\t\t\t// hyperbola\n\t\t\t\tconst center = new V3(d / a, 0, 0)\n\t\t\t\tconst f1 = new V3(0, 0, abs(d / a)) // abs, because we always want the hyperbola to be pointing up\n\t\t\t\tconst f2 = new V3(0, d / a, 0)\n\t\t\t\treturn [new HyperbolaCurve(center, f1, f2)]\n\t\t\t}\n\t\t} else {\n\t\t\t// c != 0\n\t\t\tconst aa = a * a,\n\t\t\t\tcc = c * c\n\t\t\tif (eq0(d)) {\n\t\t\t\t// ax + cz = d => x = d - cz / a => x² = d² - 2cdz/a + c²z²/a²\n\t\t\t\t// x² + y² = z²\n\t\t\t\t// => d² - 2cdz/a + c²z²/a² + y² = z²\n\n\t\t\t\tif (eq(aa, cc)) {\n\t\t\t\t\treturn [new L3(V3.O, new V3(c, 0, -a).unit())]\n\t\t\t\t} else if (aa < cc) {\n\t\t\t\t\tthrow new Error('intersection is single point V3.O')\n\t\t\t\t} else if (aa > cc) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew L3(V3.O, new V3(c, sqrt(aa - cc), -a).unit()),\n\t\t\t\t\t\tnew L3(V3.O, new V3(c, -sqrt(aa - cc), -a).unit()),\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (eq(aa, cc)) {\n\t\t\t\t\t// parabola\n\t\t\t\t\tconst parabolaVertex = new V3(d / 2 / a, 0, d / 2 / c)\n\t\t\t\t\tconst parabolaVertexTangentPoint = new V3(d / 2 / a, d / c, d / 2 / c)\n\t\t\t\t\tconst p2 = new V3(0, 0, d / c)\n\t\t\t\t\tconst f2 = p2.minus(parabolaVertex)\n\t\t\t\t\treturn [\n\t\t\t\t\t\tnew ParabolaCurve(\n\t\t\t\t\t\t\tparabolaVertex,\n\t\t\t\t\t\t\tparabolaVertexTangentPoint.minus(parabolaVertex),\n\t\t\t\t\t\t\tf2.z < 0 ? f2.negated() : f2,\n\t\t\t\t\t\t),\n\t\t\t\t\t]\n\t\t\t\t} else if (aa < cc) {\n\t\t\t\t\t// ellipse\n\t\t\t\t\tconst center = new V3(-a * d / (cc - aa), 0, d * c / (cc - aa))\n\t\t\t\t\tif (center.z < 0) {\n\t\t\t\t\t\treturn []\n\t\t\t\t\t}\n\t\t\t\t\tconst p1 = new V3(d / (a - c), 0, -d / (a - c))\n\t\t\t\t\tconst p2 = new V3(-a * d / (cc - aa), d / sqrt(cc - aa), d * c / (cc - aa))\n\t\t\t\t\treturn [new SemiEllipseCurve(center, center.to(p1), center.to(p2), -PI, PI)]\n\t\t\t\t} else if (aa > cc) {\n\t\t\t\t\t// hyperbola\n\t\t\t\t\tconst center = new V3(-a * d / (cc - aa), 0, d * c / (cc - aa))\n\t\t\t\t\tconst p1 = new V3(d / (a - c), 0, -d / (a - c))\n\t\t\t\t\tconst p2 = new V3(-a * d / (cc - aa), d / sqrt(aa - cc), d * c / (cc - aa))\n\t\t\t\t\t// const f1 = center.to(p1)\n\t\t\t\t\tconst f1 = new V3(d * c / (aa - cc), 0, -d * a / (aa - cc))\n\t\t\t\t\tconst f2 = new V3(0, d / sqrt(aa - cc), 0)\n\t\t\t\t\treturn [new HyperbolaCurve(center, f1.z > 0 ? f1 : f1.negated(), f2)]\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthrow new Error('???')\n\t}\n\n\tequals(obj: any): boolean {\n\t\treturn (\n\t\t\tthis == obj ||\n\t\t\t(Object.getPrototypeOf(this) == Object.getPrototypeOf(obj) &&\n\t\t\t\tthis.center.equals(obj.center) &&\n\t\t\t\tthis.f1.equals(obj.f1) &&\n\t\t\t\tthis.f2.equals(obj.f2) &&\n\t\t\t\tthis.dir.equals(obj.dir))\n\t\t)\n\t}\n\n\tlike(object: any): boolean {\n\t\tif (!this.isCoplanarTo(object)) return false\n\t\t// normals need to point in the same direction (outwards or inwards) for both\n\t\treturn this.normalDir == object.normalDir\n\t}\n\n\tgetVectors() {\n\t\treturn [\n\t\t\t{ anchor: this.center, dir1: this.dir },\n\t\t\t{ anchor: this.center.plus(this.dir), dir1: this.f1 },\n\t\t\t{ anchor: this.center.plus(this.dir), dir1: this.f2 },\n\t\t]\n\t}\n\n\tgetSeamPlane(): P3 {\n\t\treturn P3.forAnchorAndPlaneVectors(this.center, this.f1, this.dir)\n\t}\n\n\tloopContainsPoint(contour: Edge[], p: V3): PointVsFace {\n\t\tassertVectors(p)\n\t\tconst line = this.center.like(p)\n\t\t\t? new L3(p, this.matrix.transformVector(new V3(0, 1, 1)).unit())\n\t\t\t: L3.throughPoints(p, this.apex)\n\t\tconst lineOut = line.dir1.cross(this.dir)\n\n\t\treturn Surface.loopContainsPointGeneral(contour, p, line, lineOut)\n\t}\n\n\tgetConstructorParameters(): any[] {\n\t\treturn [this.center, this.f1, this.f2, this.dir, this.sMin, this.sMax, this.tMin, this.tMax]\n\t}\n\n\tisTsForLine(line: L3): number[] {\n\t\t// transforming line manually has advantage that dir1 will not be renormalized,\n\t\t// meaning that calculated values t for lineLC are directly transferable to line\n\t\tconst anchorLC = this.matrixInverse.transformPoint(line.anchor)\n\t\tconst dirLC = this.matrixInverse.transformVector(line.dir1)\n\t\treturn ConicSurface.unitISLineTs(anchorLC, dirLC)\n\t}\n\n\t/**\n\t * Interestingly, two cones don't need to have parallel dirs to be coplanar.\n\t */\n\tisCoplanarTo(surface: Surface): boolean {\n\t\tif (this === surface) return true\n\t\tif (!(surface instanceof ConicSurface) || !this.apex.like(surface.apex)) return false\n\t\t// at this point apexes are equal\n\t\treturn this.containsEllipse(new SemiEllipseCurve(surface.center.plus(surface.dir), surface.f1, surface.f2))\n\t}\n\n\tcontainsEllipse(ellipse: SemiEllipseCurve): boolean {\n\t\tconst ellipseLC = ellipse.transform(this.matrixInverse)\n\t\tif (ellipseLC.center.z < 0) {\n\t\t\treturn false\n\t\t}\n\t\tconst { f1, f2 } = ellipseLC.rightAngled()\n\t\tconst p1 = ellipseLC.center.plus(f1),\n\t\t\tp2 = ellipseLC.center.plus(f2)\n\t\t// check if both endpoints are on the cone's surface\n\t\t// and that one main axis is perpendicular to the Z-axis\n\t\treturn eq(p1.x ** 2 + p1.y ** 2, p1.z ** 2) && eq(p2.x ** 2 + p2.y ** 2, p2.z ** 2) && (eq0(f1.z) || eq0(f2.z))\n\t}\n\n\tcontainsLine(line: L3): boolean {\n\t\tconst lineLC = line.transform(this.matrixInverse)\n\t\tconst d = lineLC.dir1\n\t\treturn lineLC.containsPoint(V3.O) && eq(d.x * d.x + d.y * d.y, d.z * d.z)\n\t}\n\n\tcontainsParabola(curve: ParabolaCurve): boolean {\n\t\tassertInst(ParabolaCurve, curve)\n\t\tconst curveLC = curve.transform(this.matrixInverse)\n\t\tif (curveLC.center.z < 0 || curveLC.f2.z < 0) {\n\t\t\treturn false\n\t\t}\n\t\tconst { center, f1, f2 } = curveLC.rightAngled()\n\t\t// check if center is on the surface,\n\t\t// that tangent is perpendicular to the Z-axis\n\t\t// and that \"y\" axis is parallel to surface\n\t\treturn (\n\t\t\teq(center.x * center.x + center.y * center.y, center.z * center.z) &&\n\t\t\teq0(f1.z) &&\n\t\t\teq(f2.x * f2.x + f2.y * f2.y, f2.z * f2.z)\n\t\t)\n\t}\n\n\tcontainsHyperbola(curve: HyperbolaCurve): boolean {\n\t\t// calculate intersection of plane ax + cz = 1 and cone x² + y² = z²\n\t\t// const center = new V3(-a / (cc - aa), 0, 1 / (cc - aa))\n\t\t// const p1 = new V3(1 / (a - c), 0, -1 / (a - c))\n\t\t// const p2 = new V3(-a / (cc - aa), 1 / sqrt(aa - cc), 1 / (cc - aa))\n\t\t// const f1 = new V3(1 * c / (aa - cc), 0, -a / (aa - cc) )\n\t\t// const f2 = new V3(0, 1 / sqrt(aa - cc), 0)\n\t\tassertInst(HyperbolaCurve, curve)\n\t\tconst curveLC = curve.transform(this.matrixInverse).rightAngled()\n\t\tconst centerXY = curveLC.center.xy()\n\t\tif (centerXY.likeO()) {\n\t\t\treturn false\n\t\t}\n\t\tconst rot = centerXY.angleXY()\n\t\tconst { center, f1, f2 } = curveLC.rotateZ(-rot)\n\n\t\t// s = a / (aa - cc)\n\t\t// t = -c / (aa - cc)\n\t\t// s + t = 1 / (a + c)\n\t\t// s - t = 1 / (a - c)\n\t\t// (s + t)(s - t) = (ss - tt) = 1 / (aa - cc)\n\t\t// u = 1 / sqrt(aa - cc) = sqrt(ss - tt)\n\t\t// check if center is on the surface,\n\t\t// that tangent is perpendicular to the Z-axis\n\t\treturn (\n\t\t\tf1.z > 0 &&\n\t\t\teq(center.x, f1.z) &&\n\t\t\teq(center.z, f1.x) &&\n\t\t\teq0(center.y) &&\n\t\t\teq0(f1.y) &&\n\t\t\teq(sqrt(abs(center.x ** 2 - center.z ** 2)), abs(f2.y)) &&\n\t\t\teq0(f2.x) &&\n\t\t\teq0(f2.z)\n\t\t)\n\t}\n\n\tcontainsCurve(curve: Curve): boolean {\n\t\tif (curve instanceof SemiEllipseCurve) {\n\t\t\treturn this.containsEllipse(curve)\n\t\t} else if (curve instanceof L3) {\n\t\t\treturn this.containsLine(curve)\n\t\t} else if (curve instanceof HyperbolaCurve) {\n\t\t\treturn this.containsHyperbola(curve)\n\t\t} else if (curve instanceof ParabolaCurve) {\n\t\t\treturn this.containsParabola(curve)\n\t\t} else {\n\t\t\treturn super.containsCurve(curve)\n\t\t}\n\t}\n\n\ttransform(m4: M4): this {\n\t\treturn new ConicSurface(\n\t\t\tm4.transformPoint(this.center),\n\t\t\tm4.transformVector(this.f1).times(m4.isMirroring() ? -1 : 1),\n\t\t\tm4.transformVector(this.f2),\n\t\t\tm4.transformVector(this.dir),\n\t\t) as this\n\t}\n\n\tflipped(): this {\n\t\treturn new ConicSurface(this.center, this.f1.negated(), this.f2, this.dir) as this\n\t}\n\n\tnormalSTFunc(): (s: number, t: number) => V3 {\n\t\tconst { f1, f2 } = this,\n\t\t\tf3 = this.dir\n\t\treturn (d, z) => {\n\t\t\treturn f2\n\t\t\t\t.cross(f1)\n\t\t\t\t.plus(f2.cross(f3.times(Math.cos(d))))\n\t\t\t\t.plus(f3.cross(f1.times(Math.sin(d))))\n\t\t\t\t.unit()\n\t\t}\n\t}\n\n\tnormalP(p: V3): V3 {\n\t\t//TODO assert(!p.like(this.center))\n\t\tconst pLC = this.matrixInverse.transformPoint(p)\n\t\treturn this.normalSTFunc()(pLC.angleXY(), pLC.z)\n\t}\n\n\tpSTFunc(): (s: number, t: number) => V3 {\n\t\treturn (s, t) => {\n\t\t\t// center + f1 t cos s + f2 t sin s + t dir\n\t\t\tconst resultLC = new V3(t * cos(s), t * sin(s), t)\n\t\t\treturn this.matrix.transformPoint(resultLC)\n\t\t}\n\t}\n\n\tdpds(): (s: number, t: number) => V3 {\n\t\treturn (s, t) => {\n\t\t\tconst resultLC = new V3(t * -sin(s), t * cos(s), 0)\n\t\t\treturn this.matrix.transformVector(resultLC)\n\t\t}\n\t}\n\n\tdpdt(): (s: number) => V3 {\n\t\treturn s => {\n\t\t\tconst resultLC = new V3(cos(s), sin(s), 1)\n\t\t\treturn this.matrix.transformVector(resultLC)\n\t\t}\n\t}\n\n\timplicitFunction(): (pWC: V3) => number {\n\t\treturn pWC => {\n\t\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\t\tconst radiusLC = pLC.lengthXY()\n\t\t\treturn this.normalDir * (radiusLC - pLC.z)\n\t\t}\n\t}\n\n\tdidp(pWC: V3): V3 {\n\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\treturn this.pLCNormalWCMatrix.transformVector(\n\t\t\tpLC\n\t\t\t\t.xy()\n\t\t\t\t.unit()\n\t\t\t\t.withElement('z', -1)\n\t\t\t\t.times(this.normalDir),\n\t\t)\n\t}\n\n\tcontainsPoint(p: V3) {\n\t\treturn eq0(this.implicitFunction()(p))\n\t}\n\n\tstP(pWC: V3) {\n\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\tconst angle = pLC.angleXY()\n\t\treturn new V3(angle < -PI / 2 ? angle + TAU : angle, pLC.z, 0)\n\t}\n\n\tisCurvesWithSurface(surface: Surface): Curve[] {\n\t\tif (surface instanceof PlaneSurface) {\n\t\t\treturn this.isCurvesWithPlane(surface.plane)\n\t\t} else if (ImplicitSurface.is(surface)) {\n\t\t\treturn ParametricSurface.isCurvesParametricImplicitSurface(\n\t\t\t\tthis,\n\t\t\t\tsurface,\n\t\t\t\t0.1,\n\t\t\t\t0.1 / this.dir.length(),\n\t\t\t\t0.02,\n\t\t\t)\n\t\t}\n\t\treturn super.isCurvesWithSurface(surface)\n\t}\n\n\tgetCenterLine() {\n\t\treturn new L3(this.center, this.dir)\n\t}\n\n\tisCurvesWithPlane(plane: P3): Curve[] {\n\t\tassertInst(P3, plane)\n\t\tconst planeLC = plane.transform(this.matrixInverse)\n\t\tconst planeNormal = planeLC.normal1\n\t\tconst c = planeNormal.z\n\t\t/** \"rotate\" plane normal1 when passing to {@link ConicSurface.unitISPlane} so that\n\t\t *  y-component of normal1 is 0 */\n\t\tconst a = planeNormal.lengthXY()\n\t\tconst d = planeLC.w\n\t\t// generated curves need to be rotated back before transforming to world coordinates\n\t\tconst rotationMatrix = M4.rotateZ(planeNormal.angleXY())\n\t\tconst wcMatrix = eq0(planeNormal.lengthXY()) ? this.matrix : this.matrix.times(rotationMatrix)\n\t\treturn ConicSurface.unitISPlane(a, c, d).flatMap<Curve>(curve => {\n\t\t\tconst curveWC = curve.transform(wcMatrix)\n\t\t\tif (curve instanceof SemiEllipseCurve) {\n\t\t\t\tconst curveLC = curve.transform(rotationMatrix)\n\t\t\t\tconst ts = curveLC.isTsWithPlane(P3.ZX)\n\t\t\t\tconst intervals = getIntervals(ts, -PI, PI).filter(([a, b]) => curveLC.at((a + b) / 2).y > 0)\n\t\t\t\treturn intervals.flatMap(([a, b]) => (curveWC as SemiEllipseCurve).split(a, b))\n\t\t\t}\n\t\t\tconst p = curveWC.at(0.2)\n\t\t\treturn this.normalP(p)\n\t\t\t\t.cross(plane.normal1)\n\t\t\t\t.dot(curveWC.tangentAt(0.2)) > 0\n\t\t\t\t? curveWC\n\t\t\t\t: curveWC.reversed()\n\t\t})\n\t}\n}\n\nConicSurface.prototype.uStep = PI / 16\nConicSurface.prototype.vStep = 256\n","import { assert, assertInst, assertNumbers, assertVectors, hasConstructor, int, M4, V3 } from 'ts3dutils'\r\n\r\nimport {\r\n\tCurve,\r\n\tEdge,\r\n\tImplicitCurve,\r\n\tImplicitSurface,\r\n\tL3,\r\n\tP3,\r\n\tParametricSurface,\r\n\tPlaneSurface,\r\n\tPointVsFace,\r\n\tSemiEllipsoidSurface,\r\n\tSurface,\r\n} from '../index'\r\n\r\nimport { sign } from '../math'\r\n\r\n/**\r\n * Surface normal1 is (t, z) => this.baseCurve.tangentAt(t) X this.dir\r\n * Choose dir appropriately to select surface orientation.\r\n */\r\nexport class ProjectedCurveSurface extends ParametricSurface {\r\n\treadonly ['constructor']: typeof ProjectedCurveSurface & {\r\n\t\tnew <T extends ProjectedCurveSurface>(\r\n\t\t\tbaseCurve: Curve,\r\n\t\t\tdir: V3,\r\n\t\t\tsMin: number,\r\n\t\t\tsMax: number,\r\n\t\t\ttMin: number,\r\n\t\t\ttMax: number,\r\n\t\t): T\r\n\t}\r\n\r\n\tconstructor(\r\n\t\treadonly baseCurve: Curve,\r\n\t\treadonly dir: V3,\r\n\t\tsMin: number = baseCurve.tMin,\r\n\t\tsMax: number = baseCurve.tMax,\r\n\t\ttMin: number = -100,\r\n\t\ttMax: number = 100,\r\n\t) {\r\n\t\tsuper(sMin, sMax, tMin, tMax)\r\n\t\tassertInst(Curve, baseCurve)\r\n\t\tassertInst(V3, dir)\r\n\t\tassert(sMin < sMax)\r\n\t\tassert(tMin < tMax)\r\n\t}\r\n\r\n\tgetConstructorParameters() {\r\n\t\treturn [this.baseCurve, this.dir, this.sMin, this.sMax, this.tMin, this.tMax]\r\n\t}\r\n\r\n\tequals(obj: any): boolean {\r\n\t\treturn (\r\n\t\t\tthis == obj ||\r\n\t\t\t(Object.getPrototypeOf(this) == Object.getPrototypeOf(obj) &&\r\n\t\t\t\tthis.dir.equals(obj.dir) &&\r\n\t\t\t\tthis.baseCurve.equals(obj.baseCurve))\r\n\t\t)\r\n\t}\r\n\r\n\thashCode(): int {\r\n\t\treturn [this.dir, this.baseCurve].hashCode()\r\n\t}\r\n\r\n\tcontainsLine(line: L3): boolean {\r\n\t\treturn this.dir.isParallelTo(line.dir1) && this.containsPoint(line.anchor)\r\n\t}\r\n\r\n\tdpds(): (s: number, t: number) => V3 {\r\n\t\treturn (s, t) => this.baseCurve.tangentAt(s)\r\n\t}\r\n\r\n\tdpdt(): (s: number, t: number) => V3 {\r\n\t\treturn (s, t) => this.dir\r\n\t}\r\n\r\n\tnormalST(s: number, t: number): V3 {\r\n\t\treturn this.baseCurve\r\n\t\t\t.tangentAt(s)\r\n\t\t\t.cross(this.dir)\r\n\t\t\t.unit()\r\n\t}\r\n\r\n\tpST(s: number, t: number): V3 {\r\n\t\treturn this.baseCurve.at(s).plus(this.dir.times(t))\r\n\t}\r\n\r\n\tpointFoot(pWC: V3, ss?: number): V3 {\r\n\t\tconst basePlane = new P3(this.dir.unit(), 0)\r\n\t\tconst projCurve = this.baseCurve.project(basePlane)\r\n\t\tconst projPoint = basePlane.projectedPoint(pWC)\r\n\t\tconst t = projCurve.closestTToPoint(projPoint, ss, this.sMin, this.sMax)\r\n\t\tconst z = L3.pointT(this.baseCurve.at(t), this.dir, pWC)\r\n\t\treturn new V3(t, z, 0)\r\n\t}\r\n\r\n\tstPFunc(): (pWC: V3) => V3 {\r\n\t\tconst projPlane = new P3(this.dir.unit(), 0)\r\n\t\tconst projBaseCurve = this.baseCurve.project(projPlane)\r\n\t\treturn pWC => {\r\n\t\t\tconst projPoint = projPlane.projectedPoint(pWC)\r\n\t\t\tassertNumbers(this.sMin)\r\n\t\t\tconst t = projBaseCurve.pointT(projPoint, this.sMin, this.sMax)\r\n\t\t\tconst z = L3.pointT(this.baseCurve.at(t), this.dir, pWC)\r\n\t\t\treturn new V3(t, z, 0)\r\n\t\t}\r\n\t}\r\n\r\n\tisCurvesWithPlane(plane: P3): Curve[] {\r\n\t\tassertInst(P3, plane)\r\n\t\tif (this.dir.isPerpendicularTo(plane.normal1)) {\r\n\t\t\tconst ts = this.baseCurve.isTsWithPlane(plane)\r\n\t\t\treturn ts.map(t => {\r\n\t\t\t\tconst l3dir = 0 < this.baseCurve.tangentAt(t).dot(plane.normal1) ? this.dir : this.dir.negated()\r\n\t\t\t\treturn new L3(this.baseCurve.at(t), l3dir.unit())\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tlet projCurve = this.baseCurve.transform(M4.project(plane, this.dir))\r\n\t\t\tif (this.dir.dot(plane.normal1) > 0) {\r\n\t\t\t\t// we need to flip the ellipse so the tangent is correct\r\n\t\t\t\tprojCurve = projCurve.reversed()\r\n\t\t\t}\r\n\t\t\treturn [projCurve]\r\n\t\t}\r\n\t}\r\n\r\n\tisCurvesWithSurface(surface: Surface): Curve[] {\r\n\t\tif (surface instanceof PlaneSurface) {\r\n\t\t\treturn this.isCurvesWithPlane(surface.plane)\r\n\t\t}\r\n\t\tif (surface instanceof ProjectedCurveSurface) {\r\n\t\t\tconst dir1 = surface.dir\r\n\t\t\tif (this.dir.isParallelTo(dir1)) {\r\n\t\t\t\tconst ts = surface.baseCurve.isTsWithSurface(this)\r\n\t\t\t\treturn ts.map(t => {\r\n\t\t\t\t\tconst p = surface.baseCurve.at(t)\r\n\t\t\t\t\tconst correctDir = this.normalP(p).cross(surface.normalP(p))\r\n\t\t\t\t\treturn new L3(p, dir1.times(sign(correctDir.dot(dir1))))\r\n\t\t\t\t})\r\n\t\t\t} else if (ImplicitSurface.is(surface)) {\r\n\t\t\t\tlet curves2 = ParametricSurface.isCurvesParametricImplicitSurface(\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\tsurface,\r\n\t\t\t\t\t0.1,\r\n\t\t\t\t\t0.1 / surface.dir.length(),\r\n\t\t\t\t\t0.05,\r\n\t\t\t\t)\r\n\t\t\t\tcurves2 = surface.clipCurves(curves2)\r\n\t\t\t\treturn curves2\r\n\t\t\t} else {\r\n\t\t\t\tlet curves2 = ParametricSurface.isCurvesParametricParametricSurface(\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\tsurface,\r\n\t\t\t\t\t0.05,\r\n\t\t\t\t\t0.1 / surface.dir.length(),\r\n\t\t\t\t\t0.05,\r\n\t\t\t\t)\r\n\t\t\t\tcurves2 = this.clipCurves(curves2)\r\n\t\t\t\tcurves2 = surface.clipCurves(curves2)\r\n\t\t\t\treturn curves2\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (surface instanceof SemiEllipsoidSurface) {\r\n\t\t\treturn surface.isCurvesWithSurface(this)\r\n\t\t}\r\n\t\treturn super.isCurvesWithSurface(surface)\r\n\t}\r\n\r\n\tcontainsPoint(pWC: V3): boolean {\r\n\t\tconst uv = this.stPFunc()(pWC)\r\n\t\treturn this.pSTFunc()(uv.x, uv.y).like(pWC)\r\n\t}\r\n\r\n\tcontainsCurve(curve: Curve): boolean {\r\n\t\tif (curve instanceof L3) {\r\n\t\t\treturn this.dir.isParallelTo(curve.dir1) && this.containsPoint(curve.anchor)\r\n\t\t}\r\n\t\tif (curve instanceof ImplicitCurve) {\r\n\t\t\treturn super.containsCurve(curve)\r\n\t\t}\r\n\t\t// project baseCurve and test curve onto a common plane and check if the curves are alike\r\n\t\tconst projPlane = new P3(this.dir.unit(), 0)\r\n\t\tconst projBaseCurve = this.baseCurve.project(projPlane)\r\n\t\tconst projCurve = curve.project(projPlane)\r\n\r\n\t\treturn projBaseCurve.isColinearTo(projCurve)\r\n\t}\r\n\r\n\tisCoplanarTo(surface: Surface): boolean {\r\n\t\treturn (\r\n\t\t\tthis == surface ||\r\n\t\t\t(hasConstructor(surface, ProjectedCurveSurface) &&\r\n\t\t\t\tthis.dir.isParallelTo(surface.dir) &&\r\n\t\t\t\tthis.containsCurve(surface.baseCurve))\r\n\t\t)\r\n\t}\r\n\r\n\tlike(object: any): boolean {\r\n\t\tif (!this.isCoplanarTo(object)) return false\r\n\t\t// normals need to point in the same direction (outwards or inwards) for both\r\n\t\tconst p00 = this.pSTFunc()(0, 0)\r\n\t\tconst thisNormal = this.normalSTFunc()(0, 0)\r\n\t\tconst otherNormal = object.normalP(p00)\r\n\t\treturn 0 < thisNormal.dot(otherNormal)\r\n\t}\r\n\r\n\tloopContainsPoint(loop: Edge[], p: V3): PointVsFace {\r\n\t\tassertVectors(p)\r\n\t\tassert(isFinite(p.x), p.y, p.z)\r\n\t\tconst line = new L3(p, this.dir.unit())\r\n\t\tconst ptpf = this.stPFunc()\r\n\t\tconst pp = ptpf(p)\r\n\t\tif (isNaN(pp.x)) {\r\n\t\t\tconsole.log(this.sce, p.sce)\r\n\t\t\tassert(false)\r\n\t\t}\r\n\t\tconst lineOut = this.baseCurve.tangentAt(pp.x).rejectedFrom(this.dir)\r\n\r\n\t\treturn Surface.loopContainsPointGeneral(loop, p, line, lineOut)\r\n\t}\r\n\r\n\ttransform(m4: M4): this {\r\n\t\tconst f = m4.isMirroring() ? -1 : 1\r\n\t\treturn new this.constructor<this>(\r\n\t\t\tthis.baseCurve.transform(m4),\r\n\t\t\tm4.transformVector(this.dir).times(f),\r\n\t\t\tthis.sMin,\r\n\t\t\tthis.sMax,\r\n\t\t\t1 == f ? this.tMin : -this.tMax,\r\n\t\t\t1 == f ? this.tMax : -this.tMin,\r\n\t\t)\r\n\t}\r\n\r\n\tisTsForLine(line: L3): number[] {\r\n\t\tassertInst(L3, line)\r\n\t\tconst projPlane = new P3(this.dir.unit(), 0)\r\n\t\tconst projDir = projPlane.projectedVector(line.dir1)\r\n\t\tif (projDir.likeO()) {\r\n\t\t\t// line is parallel to this.dir\r\n\t\t\treturn []\r\n\t\t}\r\n\t\tconst projAnchor = projPlane.projectedPoint(line.anchor)\r\n\t\tconst projBaseCurve = this.baseCurve.project(projPlane)\r\n\t\treturn projBaseCurve\r\n\t\t\t.isInfosWithLine(projAnchor, projDir, this.sMin, this.sMax, line.tMin, line.tMax)\r\n\t\t\t.map(info => info.tOther)\r\n\t}\r\n\r\n\tflipped(): this {\r\n\t\treturn new this.constructor<this>(\r\n\t\t\tthis.baseCurve,\r\n\t\t\tthis.dir.negated(),\r\n\t\t\tthis.sMin,\r\n\t\t\tthis.sMax,\r\n\t\t\t-this.tMax,\r\n\t\t\t-this.tMin,\r\n\t\t)\r\n\t}\r\n}\r\nProjectedCurveSurface.prototype.uStep = 1 / 128\r\nProjectedCurveSurface.prototype.vStep = 256\r\n","import { assert, assertInst, DEG, eq0, fuzzyBetween, hasConstructor, lerp, lt, M4, V3 } from 'ts3dutils'\n\nimport {\n\tCurve,\n\tEdge,\n\tHyperbolaCurve,\n\tintersectionUnitCircleLine2,\n\tL3,\n\tP3,\n\tParametricSurface,\n\tPlaneSurface,\n\tPointVsFace,\n\tSemiEllipseCurve,\n\tSurface,\n} from '../index'\n\nimport { abs, cos, PI, sin } from '../math'\n\n/**\n * Rotation surface with r = f(z)\n */\nexport class RotatedCurveSurface extends ParametricSurface {\n\treadonly matrixInverse: M4\n\n\tconstructor(\n\t\treadonly curve: Curve,\n\t\treadonly matrix: M4 = M4.IDENTITY,\n\t\tsMin: number = 0,\n\t\tsMax: number = PI,\n\t\ttMin: number = curve.tMin,\n\t\ttMax: number = curve.tMax,\n\t) {\n\t\t// d/dz (r(z))\n\t\tsuper(sMin, sMax, tMin, tMax)\n\t\tassertInst(M4, matrix)\n\t\tassert(matrix.isNoProj())\n\t\tassert(eq0(curve.at(tMin).y))\n\t\tthis.matrixInverse = matrix.inversed()\n\t\tthis.vStep = this.curve.tIncrement\n\t}\n\n\tgetConstructorParameters(): any[] {\n\t\treturn [this.curve, this.matrix, this.sMin, this.sMax, this.tMin, this.tMax]\n\t}\n\n\tflipped(): this {\n\t\treturn new RotatedCurveSurface(\n\t\t\tthis.curve,\n\t\t\tthis.matrix.times(M4.mirror(P3.YZ)),\n\t\t\tthis.sMin,\n\t\t\tthis.sMax,\n\t\t\tthis.tMin,\n\t\t\tthis.tMax,\n\t\t) as this\n\t}\n\n\ttransform(m4: M4): this {\n\t\treturn new RotatedCurveSurface(\n\t\t\tthis.curve,\n\t\t\tm4.isMirroring() ? m4.times(this.matrix).times(M4.mirror(P3.YZ)) : m4.times(this.matrix),\n\t\t\tthis.sMin,\n\t\t\tthis.sMax,\n\t\t\tthis.tMin,\n\t\t\tthis.tMax,\n\t\t) as this\n\t}\n\n\tcontainsPoint(pWC: V3): boolean {\n\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\tconst radius = pLC.lengthXY()\n\t\treturn this.curve.containsPoint(new V3(radius, 0, pLC.z))\n\t}\n\n\tpSTFunc(): (s: number, t: number) => V3 {\n\t\treturn (s, t) => {\n\t\t\tconst { x: radius, z: z } = this.curve.at(t)\n\t\t\treturn this.matrix.transformPoint(V3.polar(radius, s, z))\n\t\t}\n\t}\n\n\tdpds(): (s: number, t: number) => V3 {\n\t\treturn (s, t) => {\n\t\t\tconst radius = this.curve.at(t).x\n\t\t\tconst resultLC = new V3(radius * -sin(s), radius * cos(s), 0)\n\t\t\treturn this.matrix.transformVector(resultLC)\n\t\t}\n\t}\n\n\tdpdt(): (s: number, t: number) => V3 {\n\t\treturn (s, t) => {\n\t\t\tconst { x: drdt, z: dzdt } = this.curve.tangentAt(t)\n\t\t\treturn this.matrix.transformVector(V3.polar(drdt, s, dzdt))\n\t\t}\n\t}\n\n\tnormalSTFunc(): (s: number, t: number) => V3 {\n\t\tconst matrix = this.matrix\n\t\t\t.inversed()\n\t\t\t.transposed()\n\t\t\t.as3x3()\n\t\tconst normalLength = this.matrix.isMirroring() ? -1 : 1\n\t\treturn (s, t) => {\n\t\t\tconst { x: drdt, z: dzdt } = this.curve.tangentAt(t)\n\t\t\treturn matrix.transformVector(V3.polar(dzdt, s, -drdt)).toLength(normalLength)\n\t\t}\n\t}\n\n\tstPFunc(): (pWC: V3) => V3 {\n\t\treturn pWC => {\n\t\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\t\tconst angle = SemiEllipseCurve.XYLCPointT(pLC, this.sMin, this.sMax)\n\t\t\tconst radius = pLC.lengthXY()\n\t\t\treturn new V3(angle, this.curve.pointT(new V3(radius, 0, pLC.z)), 0)\n\t\t}\n\t}\n\n\tpointFoot(pWC: V3, startS?: number, startT?: number): V3 {\n\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\tconst angle = abs(pLC.angleXY())\n\t\tconst radius = pLC.lengthXY()\n\t\treturn new V3(angle, this.curve.closestTToPoint(new V3(radius, 0, pLC.z)), 0)\n\t}\n\n\tisTsForLine(line: L3): number[] {\n\t\tconst anchorLC = this.matrixInverse.transformPoint(line.anchor)\n\t\tconst dirLC = this.matrixInverse.transformVector(line.dir1)\n\t\tif (dirLC.isParallelTo(V3.Z)) {\n\t\t\tif (!fuzzyBetween(anchorLC.angleXY(), this.sMin, this.sMax)) return []\n\t\t\treturn this.curve\n\t\t\t\t.isInfosWithLine(new V3(anchorLC.lengthXY(), 0, anchorLC.z), dirLC)\n\t\t\t\t.map(info => info.tOther)\n\t\t} else if (L3.containsPoint(anchorLC.xy(), dirLC.xy(), V3.O)) {\n\t\t\t// line goes through Z axis\n\t\t\tconst dotter = dirLC.xy().unit()\n\t\t\treturn [\n\t\t\t\t...this.curve.isInfosWithLine(\n\t\t\t\t\tnew V3(dotter.dot(anchorLC), 0, anchorLC.z),\n\t\t\t\t\tnew V3(dotter.dot(dirLC), 0, dirLC.z),\n\t\t\t\t),\n\t\t\t\t...this.curve.isInfosWithLine(\n\t\t\t\t\tnew V3(-dotter.dot(anchorLC), 0, anchorLC.z),\n\t\t\t\t\tnew V3(-dotter.dot(dirLC), 0, dirLC.z),\n\t\t\t\t),\n\t\t\t]\n\t\t\t\t.map(info => info.tOther)\n\t\t\t\t.filter(t => fuzzyBetween(L3.at(anchorLC, dirLC, t).angleXY(), this.sMin, this.sMax))\n\t\t} else if (dirLC.isPerpendicularTo(V3.Z)) {\n\t\t\tconst secs = this.isCurvesWithPlaneLC(new P3(V3.Z, anchorLC.z))\n\t\t\tif (!secs) return []\n\t\t\treturn secs.flatMap(sec => sec.isInfosWithLine(anchorLC, dirLC).map(info => info.tOther))\n\t\t} else {\n\t\t\t// transform into hyperbola\n\t\t\t// f(t) = V(((ax + t dx)² + (ay + t dy)²) ** 1/2, 0, az + t dz)\n\t\t\t// f(t) = V((ax² + 2 ax t dx + t² dx² + ay² + 2 ay t dy + t² dy²) ** 1/2, 0, az + t dz)\n\t\t\t// f(t) = V((t² (dx² + dy²) + 2 t (ax dx + ay dy) + ax² + ay²) ** 1/2, 0, az + t * dz)\n\n\t\t\t// (anchorLC.xy + t * dirLC.xy) * dir.xy = 0\n\t\t\t// t * dirLC.xy² = -anchorLC.xy * dirLC.xy\n\t\t\tconst closestTToZ = -anchorLC.xy().dot(dirLC.xy()) / dirLC.xy().squared()\n\t\t\tconst closestPointToZ = L3.at(anchorLC, dirLC, closestTToZ)\n\t\t\tconst scaleX = closestPointToZ.lengthXY()\n\t\t\tconst lineGradientWC = dirLC.z / dirLC.lengthXY()\n\t\t\tconst scaleZ = scaleX * lineGradientWC\n\t\t\tconst hc = HyperbolaCurve.XY.transform(\n\t\t\t\tM4.rotateX(90 * DEG)\n\t\t\t\t\t.scale(scaleX, 0, scaleZ)\n\t\t\t\t\t.translate(0, 0, closestPointToZ.z),\n\t\t\t)\n\n\t\t\tconst infos = hc.isInfosWithCurve(this.curve)\n\t\t\treturn infos\n\t\t\t\t.map(info => (info.p.z - anchorLC.z) / dirLC.z)\n\t\t\t\t.filter(t => fuzzyBetween(L3.at(anchorLC, dirLC, t).angleXY(), this.sMin, this.sMax))\n\t\t}\n\t}\n\n\tprivate isCurvesWithPlaneLC(planeLC: P3): Curve[] | undefined {\n\t\tif (planeLC.normal1.isParallelTo(V3.Z)) {\n\t\t\treturn this.curve.isTsWithPlane(planeLC).map(t => {\n\t\t\t\tconst { x: radius } = this.curve.at(t)\n\t\t\t\treturn new SemiEllipseCurve(\n\t\t\t\t\tnew V3(0, 0, planeLC.w),\n\t\t\t\t\tnew V3(radius, 0, 0),\n\t\t\t\t\tnew V3(0, radius, 0),\n\t\t\t\t\tthis.sMin,\n\t\t\t\t\tthis.sMax,\n\t\t\t\t).transform(this.matrix)\n\t\t\t})\n\t\t} else if (planeLC.normal1.isPerpendicularTo(V3.Z) && planeLC.containsPoint(V3.O)) {\n\t\t\treturn [this.curve.rotateZ(V3.Y.angleRelativeNormal(planeLC.normal1, V3.Z)).transform(this.matrix)]\n\t\t}\n\t\treturn undefined\n\t}\n\n\tisCurvesWithPlane(plane: P3): Curve[] {\n\t\tconst planeLC = plane.transform(this.matrixInverse)\n\t\tconst planeLCCurves = this.isCurvesWithPlaneLC(planeLC)\n\t\tif (planeLCCurves) {\n\t\t\treturn planeLCCurves.map(curve => curve.transform(this.matrix))\n\t\t} else {\n\t\t\treturn ParametricSurface.isCurvesParametricImplicitSurface(this, new PlaneSurface(plane), 0.05, 0.05, 0.02)\n\t\t}\n\t}\n\n\tloopContainsPoint(loop: Edge[], pWC: V3): PointVsFace {\n\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\tconst angle = SemiEllipseCurve.XYLCPointT(pLC, this.sMin, this.sMax)\n\t\tconst testCurveLC = SemiEllipseCurve.semicircle(pLC.lengthXY(), new V3(0, 0, pLC.z))\n\t\tconst testCurveWC = testCurveLC.transform(this.matrix)\n\t\treturn Surface.loopContainsPointEllipse(loop, pWC, testCurveWC, angle)\n\t}\n\n\tisCoplanarTo(surface: Surface): boolean {\n\t\tif (this === surface) return true\n\t\tif (!hasConstructor(surface, RotatedCurveSurface)) return false\n\t\tconst surfaceLCToThisLC = this.matrixInverse.times(surface.matrix)\n\t\tassert(!surfaceLCToThisLC.X.xy().likeO())\n\t\tconst zRotation = surfaceLCToThisLC.X.angleXY()\n\t\treturn surface.curve.transform(M4.rotateZ(-zRotation).times(surfaceLCToThisLC)).isColinearTo(this.curve)\n\t}\n\n\tisCurvesWithSurface(surface: Surface): Curve[] {\n\t\tif (surface instanceof PlaneSurface) {\n\t\t\treturn this.isCurvesWithPlane(surface.plane)\n\t\t}\n\t\treturn super.isCurvesWithSurface(surface)\n\t}\n\n\tcontainsCurve(curve: Curve): boolean {\n\t\tif (curve.constructor == this.curve.constructor) {\n\t\t\tconst curveLC = curve.transform(this.matrixInverse)\n\t\t\t// find a point on curveLC which isn't on the Z-axis\n\t\t\tconst t = [0, 0.5, 1].map(x => lerp(curveLC.tMin, curveLC.tMax, x)).withMax(t => curveLC.at(t).lengthXY())\n\t\t\tconst angle = curveLC.at(t).angleXY()\n\t\t\tconst curveLCRotated = curveLC.rotateZ(-angle)\n\t\t\tif (this.curve.isColinearTo(curveLCRotated)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\tif (curve instanceof SemiEllipseCurve) {\n\t\t\tconst curveLC = curve.transform(this.matrixInverse)\n\t\t\tif (curveLC.normal.isParallelTo(V3.Z)) {\n\t\t\t\treturn (\n\t\t\t\t\tcurveLC.isCircular() && this.curve.containsPoint(new V3(curveLC.f1.length(), 0, curveLC.center.z))\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\t\treturn super.containsCurve(curve)\n\t}\n\n\tgetExtremePoints(): V3[] {\n\t\treturn getExtremePointsHelper.call(this, this.curve)\n\t}\n}\n\nRotatedCurveSurface.prototype.uStep = SemiEllipseCurve.prototype.tIncrement\n\nexport function getExtremePointsHelper(this: RotatedCurveSurface & { matrix: M4 }, curve: Curve) {\n\t// this logic comes from EllipseCurve.roots\n\tconst f1 = this.matrix.X\n\tconst f2 = this.matrix.Y\n\treturn [0, 1, 2].flatMap(dim => {\n\t\tconst a = f2.e(dim),\n\t\t\tb = -f1.e(dim)\n\t\tconst xiEtas = eq0(a) && eq0(b) ? [[1, 0]] : intersectionUnitCircleLine2(a, b, 0)\n\t\treturn xiEtas.flatMap(([xi, eta]) => {\n\t\t\tconst s = Math.atan2(eta, xi)\n\t\t\tif (!(lt(this.sMin, s) && lt(s, this.sMax))) return []\n\t\t\tconst testCurve = curve.transform(this.matrix.times(M4.rotateZ(s)))\n\t\t\treturn testCurve.roots()[dim].map(t => this.pST(s, t))\n\t\t})\n\t})\n}\n","import { assert, assertInst, assertVectors, eq0, hasConstructor, M4, pqFormula, TAU, V3 } from 'ts3dutils'\n\nimport {\n\tBezierCurve,\n\tCurve,\n\tEdge,\n\tImplicitSurface,\n\tL3,\n\tOUTSIDE,\n\tP3,\n\tPointVsFace,\n\tProjectedCurveSurface,\n\tSemiEllipseCurve,\n\tSurface,\n} from '../index'\n\nimport { sign } from '../math'\n\nexport class SemiCylinderSurface extends ProjectedCurveSurface implements ImplicitSurface {\n\tstatic readonly UNIT = new SemiCylinderSurface(SemiEllipseCurve.UNIT, V3.Z, undefined, undefined, 0, 1)\n\treadonly matrix: M4\n\treadonly matrixInverse: M4\n\treadonly pLCNormalWCMatrix: M4\n\treadonly pWCNormalWCMatrix: M4\n\treadonly normalDir: number\n\t// @ts-ignore\n\t// readonly baseCurve: SemiEllipseCurve\n\n\tconstructor(\n\t\treadonly baseCurve: SemiEllipseCurve,\n\t\tdir1: V3,\n\t\tsMin: number = baseCurve.tMin,\n\t\tsMax: number = baseCurve.tMax,\n\t\tzMin = -Infinity,\n\t\tzMax = Infinity,\n\t) {\n\t\tsuper(baseCurve, dir1, sMin, sMax, zMin, zMax)\n\t\tassertInst(SemiEllipseCurve, baseCurve)\n\t\t//assert(!baseCurve.normal1.isPerpendicularTo(dir1), !baseCurve.normal1.isPerpendicularTo(dir1))\n\t\tthis.matrix = M4.forSys(baseCurve.f1, baseCurve.f2, dir1, baseCurve.center)\n\t\tthis.matrixInverse = this.matrix.inversed()\n\t\tthis.normalDir = sign(this.baseCurve.normal.dot(this.dir))\n\t\tthis.pLCNormalWCMatrix = this.matrix\n\t\t\t.as3x3()\n\t\t\t.inversed()\n\t\t\t.transposed()\n\t\t\t.scale(this.normalDir)\n\t\tthis.pWCNormalWCMatrix = this.pLCNormalWCMatrix.times(this.matrixInverse)\n\t}\n\n\tstatic semicylinder(radius: number): SemiCylinderSurface {\n\t\treturn new SemiCylinderSurface(\n\t\t\tnew SemiEllipseCurve(V3.O, new V3(radius, 0, 0), new V3(0, radius, 0)),\n\t\t\tV3.Z,\n\t\t\tundefined,\n\t\t\tundefined,\n\t\t)\n\t}\n\n\t/**\n\t *\n\t * @param anchorLC\n\t * @param dirLC not necessarily unit\n\t */\n\tstatic unitISLineTs(anchorLC: V3, dirLC: V3): number[] {\n\t\tconst { x: ax, y: ay } = anchorLC\n\t\tconst { x: dx, y: dy } = dirLC\n\n\t\t// this cylinder: x² + y² = 1\n\t\t// line: p = anchorLC + t * dirLC\n\t\t// split line equation into 3 component equations, insert into cylinder equation\n\t\t// x = ax + t * dx\n\t\t// y = ay + t * dy\n\t\t// (ax² + 2 ax t dx + t²dx²) + (ay² + 2 ay t dy + t²dy²) = 1\n\t\t// transform to form (a t² + b t + c = 0) and solve with pqFormula\n\t\tconst a = dx ** 2 + dy ** 2\n\t\tconst b = 2 * (ax * dx + ay * dy)\n\t\tconst c = ax ** 2 + ay ** 2 - 1\n\t\treturn pqFormula(b / a, c / a).filter(t => SemiEllipseCurve.XYLCValid(new V3(ax + dx * t, ay + dy * t, 0)))\n\t}\n\n\tnormalP(p: V3): V3 {\n\t\treturn this.pLCNormalWCMatrix.transformVector(this.matrixInverse.transformPoint(p).xy()).unit()\n\t}\n\n\tloopContainsPoint(loop: Edge[], p: V3): PointVsFace {\n\t\tassertVectors(p)\n\t\tif (!this.containsPoint(p)) return OUTSIDE\n\t\tconst line = new L3(p, this.dir.unit())\n\t\tconst lineOut = this.dir.cross(this.normalP(p))\n\t\treturn Surface.loopContainsPointGeneral(loop, p, line, lineOut)\n\t}\n\n\tisTsForLine(line: L3) {\n\t\tassertInst(L3, line)\n\t\t// transforming line manually has advantage that dir1 will not be renormalized,\n\t\t// meaning that calculated values t for localLine are directly transferable to line\n\t\tconst dirLC = this.matrixInverse.transformVector(line.dir1)\n\t\tif (dirLC.isParallelTo(V3.Z)) {\n\t\t\t// line is parallel to this.dir\n\t\t\treturn []\n\t\t}\n\t\tconst anchorLC = this.matrixInverse.transformPoint(line.anchor)\n\t\tassert(\n\t\t\t!SemiCylinderSurface.unitISLineTs(anchorLC, dirLC).length ||\n\t\t\t\t!isNaN(SemiCylinderSurface.unitISLineTs(anchorLC, dirLC)[0]),\n\t\t\t'sad ' + dirLC,\n\t\t)\n\t\treturn SemiCylinderSurface.unitISLineTs(anchorLC, dirLC)\n\t}\n\n\tisCoplanarTo(surface: Surface): surface is SemiCylinderSurface {\n\t\treturn (\n\t\t\tthis == surface ||\n\t\t\t(hasConstructor(surface, SemiCylinderSurface) &&\n\t\t\t\tthis.dir.isParallelTo(surface.dir) &&\n\t\t\t\tthis.containsSemiEllipse(surface.baseCurve, false))\n\t\t)\n\t}\n\n\tlike(surface: Surface): boolean {\n\t\tif (!this.isCoplanarTo(surface)) return false\n\t\t// normals need to point in the same direction (outwards or inwards) for both\n\t\tconst thisFacesOut = 0 < this.baseCurve.normal.dot(this.dir)\n\t\tconst objectFacesOut = 0 < surface.baseCurve.normal.dot(surface.dir)\n\t\treturn thisFacesOut == objectFacesOut\n\t}\n\n\tcontainsSemiEllipse(ellipse: SemiEllipseCurve, checkAABB: boolean = true) {\n\t\tconst projEllipse = ellipse.transform(M4.project(this.baseCurve.getPlane(), this.dir))\n\t\treturn this.baseCurve == ellipse || this.baseCurve.isColinearTo(projEllipse)\n\t}\n\n\tcontainsCurve(curve: Curve) {\n\t\tif (curve instanceof L3) {\n\t\t\treturn this.containsLine(curve)\n\t\t} else if (curve instanceof SemiEllipseCurve) {\n\t\t\treturn this.containsSemiEllipse(curve)\n\t\t} else if (curve instanceof BezierCurve) {\n\t\t\treturn false\n\t\t} else {\n\t\t\treturn super.containsCurve(curve)\n\t\t}\n\t}\n\n\timplicitFunction() {\n\t\treturn (pWC: V3) => {\n\t\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\t\treturn (pLC.lengthXY() - 1) * this.normalDir\n\t\t}\n\t}\n\n\tdidp(pWC: V3) {\n\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\tconst pLCLengthXY = pLC.lengthXY()\n\t\tconst didpLC = new V3(pLC.x / pLCLengthXY, pLC.y / pLCLengthXY, 0)\n\t\treturn this.pLCNormalWCMatrix.transformVector(didpLC)\n\t}\n\n\tcontainsPoint(pWC: V3): boolean {\n\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\treturn this.baseCurve.isValidT(SemiEllipseCurve.XYLCPointT(pLC, this.sMin, this.sMax))\n\t}\n\n\tstP(pWC: V3): V3 {\n\t\tassert(arguments.length == 1)\n\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\tconst u = SemiEllipseCurve.XYLCPointT(pLC, this.tMin, this.tMax)\n\t\treturn new V3(u, pLC.z, 0)\n\t}\n\n\tisCurvesWithSurface(surface2: Surface): Curve[] {\n\t\tif (surface2 instanceof ProjectedCurveSurface) {\n\t\t\tif (surface2.dir.isParallelTo(this.dir)) {\n\t\t\t\tconst projectedCurve = surface2.baseCurve.transform(M4.project(this.baseCurve.getPlane(), this.dir))\n\t\t\t\treturn this.baseCurve.isInfosWithCurve(projectedCurve).map(info => {\n\t\t\t\t\tconst lineDir =\n\t\t\t\t\t\tsign(\n\t\t\t\t\t\t\tthis.normalP(info.p)\n\t\t\t\t\t\t\t\t.cross(surface2.normalP(info.p))\n\t\t\t\t\t\t\t\t.dot(this.dir),\n\t\t\t\t\t\t) || 1\n\t\t\t\t\treturn new L3(info.p, this.dir.times(lineDir))\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tif (surface2 instanceof SemiCylinderSurface) {\n\t\t\tif (eq0(this.getCenterLine().distanceToLine(surface2.getCenterLine()))) {\n\t\t\t\tthrow new Error()\n\t\t\t}\n\t\t}\n\t\treturn super.isCurvesWithSurface(surface2)\n\t}\n\n\tgetCenterLine(): L3 {\n\t\treturn new L3(this.baseCurve.center, this.dir)\n\t}\n\n\tfacesOutwards(): boolean {\n\t\treturn this.baseCurve.normal.dot(this.dir) > 0\n\t}\n\n\tgetSeamPlane(): P3 {\n\t\tlet normal = this.baseCurve.f1.cross(this.dir)\n\t\tnormal = normal.times(-sign(normal.dot(this.baseCurve.f2)))\n\t\treturn P3.normalOnAnchor(normal, this.baseCurve.center)\n\t}\n\n\tclipCurves(curves: Curve[]): Curve[] {\n\t\treturn curves.flatMap(curve => curve.clipPlane(this.getSeamPlane()))\n\t}\n}\n\nSemiCylinderSurface.prototype.uStep = TAU / 32\nSemiCylinderSurface.prototype.vStep = 256\n","import {\n\tarrayFromFunction,\n\tassert,\n\tassertf,\n\tassertInst,\n\tassertNumbers,\n\tassertVectors,\n\tbetween,\n\tcheckDerivate,\n\tclamp,\n\teq,\n\teq0,\n\tfuzzyBetween,\n\tgaussLegendreQuadrature24,\n\tgetIntervals,\n\tgetRoots,\n\tglqInSteps,\n\thasConstructor,\n\tle,\n\tlt,\n\tM4,\n\tMINUS,\n\tnewtonIterate,\n\tNLA_PRECISION,\n\tpqFormula,\n\tsnap,\n\ttoSource,\n\tV3,\n} from 'ts3dutils'\n\nimport {\n\tCurve,\n\tdotCurve2,\n\tEdge,\n\tgetExtremePointsHelper,\n\tImplicitSurface,\n\tL3,\n\tP3,\n\tParametricSurface,\n\tPICurve,\n\tPlaneSurface,\n\tPointVsFace,\n\tProjectedCurveSurface,\n\tSemiCylinderSurface,\n\tSemiEllipseCurve,\n\tSurface,\n} from '../index'\n\nimport { abs, cos, max, min, PI, sign, sin, sqrt } from '../math'\n\nexport class SemiEllipsoidSurface extends ParametricSurface implements ImplicitSurface {\n\tstatic readonly UNIT = new SemiEllipsoidSurface(V3.O, V3.X, V3.Y, V3.Z)\n\treadonly matrix: M4\n\treadonly matrixInverse: M4\n\treadonly pLCNormalWCMatrix: M4\n\treadonly pWCNormalWCMatrix: M4\n\treadonly normalDir: number // -1 | 1\n\n\tconstructor(\n\t\treadonly center: V3,\n\t\treadonly f1: V3,\n\t\treadonly f2: V3,\n\t\treadonly f3: V3,\n\t\tsMin: number = 0,\n\t\tsMax: number = PI,\n\t\ttMin: number = -PI / 2,\n\t\ttMax: number = PI / 2,\n\t) {\n\t\tsuper(sMin, sMax, tMin, tMax)\n\t\tassert(0 <= sMin && sMin <= PI)\n\t\tassert(0 <= sMax && sMax <= PI)\n\t\tassert(-PI / 2 <= tMin && tMin <= PI / 2)\n\t\tassert(-PI / 2 <= tMax && tMax <= PI / 2)\n\t\tassertVectors(center, f1, f2, f3)\n\t\tthis.matrix = M4.forSys(f1, f2, f3, center)\n\t\tthis.matrixInverse = this.matrix.inversed()\n\t\tthis.normalDir = sign(this.f1.cross(this.f2).dot(this.f3))\n\t\tthis.pLCNormalWCMatrix = this.matrix\n\t\t\t.as3x3()\n\t\t\t.inversed()\n\t\t\t.transposed()\n\t\t\t.scale(this.normalDir)\n\t\tthis.pWCNormalWCMatrix = this.pLCNormalWCMatrix.times(this.matrixInverse)\n\t}\n\n\tstatic unitArea(contour: Edge[]) {\n\t\tconst totalArea = contour\n\t\t\t.map(edge => {\n\t\t\t\tif (edge.curve instanceof PICurve) {\n\t\t\t\t\tconst points = edge.curve.calcSegmentPoints(\n\t\t\t\t\t\tedge.aT,\n\t\t\t\t\t\tedge.bT,\n\t\t\t\t\t\tedge.a,\n\t\t\t\t\t\tedge.b,\n\t\t\t\t\t\tedge.aT > edge.bT,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t)\n\t\t\t\t\tlet sum = 0\n\t\t\t\t\tfor (let i = 0; i < points.length - 1; i++) {\n\t\t\t\t\t\tconst p = points[i],\n\t\t\t\t\t\t\tppp = points[i + 1]\n\t\t\t\t\t\tsum += (abs(p.angleXY()) + abs(ppp.angleXY())) / 2 * (ppp.z - p.z)\n\t\t\t\t\t}\n\t\t\t\t\treturn sum\n\t\t\t\t} else if (edge.curve instanceof SemiEllipseCurve) {\n\t\t\t\t\tconst f = (t: number) => {\n\t\t\t\t\t\tconst at = edge.curve.at(t),\n\t\t\t\t\t\t\ttangent = edge.curve.tangentAt(t)\n\t\t\t\t\t\tconst angleXY = abs(at.angleXY())\n\t\t\t\t\t\t//const arcLength = angleXY * Math.sqrt(1 - at.z ** 2) ( == at.lengthXY())\n\t\t\t\t\t\t//const scaling = tangent.z / at.lengthXY()\n\t\t\t\t\t\treturn angleXY * tangent.z\n\t\t\t\t\t}\n\t\t\t\t\tconst val = glqInSteps(f, edge.aT, edge.bT, 1)\n\t\t\t\t\treturn val\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.sum()\n\t\treturn totalArea\n\t}\n\n\t/**\n\t * unit sphere: x² + y² + z² = 1\n\t * line: p = anchor + t * dir |^2\n\t * p² = (anchor + t * dir)^2\n\t * 1 == (anchor + t * dir)^2\n\t * 1 == anchor DOT anchor + 2 * anchor * t * dir + t² * dir DOT dir\n\t */\n\tstatic unitISTsWithLine(anchor: V3, dir: V3): number[] {\n\t\t// for 0 = a t² + b t + c\n\t\tconst a = dir.dot(dir)\n\t\tconst b = 2 * anchor.dot(dir)\n\t\tconst c = anchor.dot(anchor) - 1\n\t\treturn pqFormula(b / a, c / a).filter(t => le(0, anchor.y + t * dir.y))\n\t}\n\n\t/**\n\t * unit sphere: x² + y² + z² = 1\n\t * plane: normal1 DOT p = w\n\t */\n\tstatic unitISCurvesWithPlane(plane: P3): SemiEllipseCurve[] {\n\t\tconst distPlaneCenter = Math.abs(plane.w)\n\t\tif (lt(distPlaneCenter, 1)) {\n\t\t\t// result is a circle\n\t\t\t// radius of circle: imagine right angled triangle (origin -> center of intersection circle -> point on\n\t\t\t// intersection circle) pythagoras: 1² == distPlaneCenter² + isCircleRadius² => isCircleRadius == sqrt(1 -\n\t\t\t// distPlaneCenter²)\n\t\t\tconst isCircleRadius = Math.sqrt(1 - distPlaneCenter ** 2)\n\t\t\tconst anchorY = plane.normal1.y * plane.w\n\t\t\tconst d = abs(distPlaneCenter * isCircleRadius)\n\t\t\tif (le(anchorY, -d) && !eq0(distPlaneCenter)) {\n\t\t\t\treturn []\n\t\t\t} else if (le(anchorY, 0) && !plane.normal1.isParallelTo(V3.Y)) {\n\t\t\t\tconst f1 = plane.normal1.isParallelTo(V3.Y) ? V3.Z : plane.normal1.cross(V3.Y).toLength(isCircleRadius)\n\t\t\t\tconst f2 = f1.cross(plane.normal1)\n\t\t\t\tconst minEta = -anchorY / f2.y,\n\t\t\t\t\tminT = max(0, Math.asin(minEta))\n\t\t\t\treturn [new SemiEllipseCurve(plane.anchor, f1, f2, minT, PI - minT)]\n\t\t\t} else {\n\t\t\t\tconst f2 = (plane.normal1.isParallelTo(V3.Y) ? V3.X : plane.normal1.cross(V3.Y)).toLength(\n\t\t\t\t\tisCircleRadius,\n\t\t\t\t)\n\t\t\t\tconst f1 = f2.cross(plane.normal1)\n\t\t\t\tconst minXi = eq0(f1.y) ? -1 : -anchorY / f1.y,\n\t\t\t\t\tmaxT = Math.acos(max(-1, minXi - NLA_PRECISION))\n\t\t\t\treturn [\n\t\t\t\t\tnew SemiEllipseCurve(plane.anchor, f1.negated(), f2, PI - maxT, PI),\n\t\t\t\t\tnew SemiEllipseCurve(plane.anchor, f1, f2.negated(), 0, maxT),\n\t\t\t\t]\n\t\t\t}\n\t\t} else {\n\t\t\treturn []\n\t\t}\n\t}\n\n\tstatic unitISCurvesWithEllipsoidSurface(surface: SemiEllipsoidSurface): Curve[] {\n\t\tif (surface.isSphere()) {\n\t\t\tconst surfaceRadius = surface.f1.length()\n\t\t\tconst surfaceCenterDist = surface.center.length()\n\t\t\tif (\n\t\t\t\tle(1, surfaceCenterDist - surfaceRadius) ||\n\t\t\t\tle(surfaceCenterDist + surfaceRadius, 1) ||\n\t\t\t\tle(surfaceCenterDist - surfaceRadius, -1)\n\t\t\t) {\n\t\t\t\treturn []\n\t\t\t} else {\n\t\t\t\t// origin, surface.center and points on the intersection curves form a triangle.\n\t\t\t\t// the height on the segment origin - surface.center is the radius of the is curves\n\t\t\t\t// the distance from the origin to the lot point is the distance to the intersection plane\n\t\t\t\tfunction heron(a: number, b: number, c: number) {\n\t\t\t\t\tconst p = (a + b + c) / 2\n\t\t\t\t\treturn sqrt(p * (p - a) * (p - b) * (p - c))\n\t\t\t\t}\n\n\t\t\t\tconst triangleArea = heron(1, surfaceRadius, surfaceCenterDist)\n\t\t\t\tconst radius = triangleArea * 2 / surfaceCenterDist\n\t\t\t\tconst isCurvesCenterDist = sign(1 + surfaceCenterDist ** 2 - surfaceRadius ** 2) * sqrt(1 - radius ** 2)\n\t\t\t\tconst plane = new P3(surface.center.unit(), isCurvesCenterDist)\n\t\t\t\treturn SemiEllipsoidSurface.unitISCurvesWithPlane(plane.flipped())\n\t\t\t}\n\t\t}\n\t\tthrow new Error()\n\t}\n\n\tstatic unitISCurvesWithSemiCylinderSurface(surface: SemiCylinderSurface): SemiEllipseCurve[] {\n\t\tif (new L3(surface.baseCurve.center, surface.dir).containsPoint(V3.O)) {\n\t\t\tconst projEllipse = surface.baseCurve.transform(M4.project(new P3(surface.dir, 0)))\n\t\t\tconst f1Length = projEllipse.f1.length(),\n\t\t\t\tf2Length = projEllipse.f2.length()\n\t\t\tif (lt(1, min(f1Length, f2Length))) return []\n\t\t\tif (projEllipse.isCircular()) {\n\t\t\t\tconst distISCurveCenter = Math.sqrt(1 - min(1, f1Length) ** 2)\n\t\t\t\tconst isCurveCenter = (surface.dir.y < 0 ? surface.dir.negated() : surface.dir).times(distISCurveCenter)\n\t\t\t\t// isCurve.at(t).y = isCurveCenter.y + projEllipse.f1.y * cos(t) + projEllipse.f2.y * sin(t) = 0\n\t\t\t\treturn [new SemiEllipseCurve(isCurveCenter, projEllipse.f1, projEllipse.f2)]\n\t\t\t}\n\t\t}\n\t\tthrow new Error()\n\t}\n\n\tstatic sphere(radius: number, center: V3 = V3.O): SemiEllipsoidSurface {\n\t\tassertNumbers(radius)\n\t\treturn new SemiEllipsoidSurface(center, new V3(radius, 0, 0), new V3(0, radius, 0), new V3(0, 0, radius))\n\t}\n\n\t/**\n\t * x²/a² + y²/b² + z²/c² = 1\n\t */\n\tstatic forABC(a: number, b: number, c: number, center: V3 = V3.O): SemiEllipsoidSurface {\n\t\treturn new SemiEllipsoidSurface(center, new V3(a, 0, 0), new V3(0, b, 0), new V3(0, 0, c))\n\t}\n\n\tstatic calculateAreaSpheroid(a: V3, b: V3, c: V3, edges: Edge[]): number {\n\t\tassertf(() => a.isPerpendicularTo(b))\n\t\tassertf(() => b.isPerpendicularTo(c))\n\t\tassertf(() => c.isPerpendicularTo(a))\n\n\t\t// handling discontinuities:\n\t\t// option 1: check for intersections with baseline, if there are any integrate parts separetely\n\t\t// \"rotate\" the edge so that there are no overlaps\n\t\tconst matrix = M4.forSys(a, b, c),\n\t\t\tmatrixInverse = matrix.inversed()\n\t\tconst circleRadius = a.length()\n\t\tconst c1 = c.unit()\n\t\tconst totalArea = edges\n\t\t\t.map(edge => {\n\t\t\t\tif (edge.curve instanceof SemiEllipseCurve) {\n\t\t\t\t\tconst f = (t: number) => {\n\t\t\t\t\t\tconst at = edge.curve.at(t),\n\t\t\t\t\t\t\ttangent = edge.tangentAt(t)\n\t\t\t\t\t\tconst localAt = matrixInverse.transformPoint(at)\n\t\t\t\t\t\tconst angleXY = localAt.angleXY()\n\t\t\t\t\t\tconst arcLength = angleXY * circleRadius * Math.sqrt(1 + localAt.z ** 2)\n\t\t\t\t\t\tconst scaling = Math.sqrt(1 + c1.dot(tangent) ** 2)\n\t\t\t\t\t\treturn arcLength * scaling\n\t\t\t\t\t}\n\t\t\t\t\tconst val = glqInSteps(f, edge.aT, edge.bT, 1)\n\t\t\t\t\treturn val\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.sum()\n\n\t\treturn totalArea\n\t}\n\n\tgetConstructorParameters(): any[] {\n\t\treturn [this.center, this.f1, this.f2, this.f3, this.sMin, this.sMax, this.tMin, this.tMax]\n\t}\n\n\tequals(obj: any): boolean {\n\t\treturn (\n\t\t\tthis == obj || (Object.getPrototypeOf(obj) == this.constructor.prototype && this.matrix.equals(obj.matrix))\n\t\t)\n\t}\n\n\tedgeLoopCCW(loop: Edge[]): boolean {\n\t\treturn SemiEllipsoidSurface.unitArea(loop.map(edge => edge.transform(this.matrixInverse))) > 0\n\t\t//let totalAngle = 0\n\t\t//for (let i = 0; i < contour.length; i++) {\n\t\t//    const ipp = (i + 1) % contour.length\n\t\t//    const edge = contour[i], nextEdge = contour[ipp]\n\t\t//    totalAngle += edge.bDir.angleRelativeNormal(nextEdge.aDir, this.normalP(edge.b))\n\t\t//}\n\t\t//return le(0, totalAngle)\n\t}\n\n\tlike(object: any) {\n\t\tif (!this.isCoplanarTo(object)) return false\n\t\t// normals need to point in the same direction (outwards or inwards) for both\n\t\treturn this.matrix.determinant3() * object.matrix.determinant3() > 0\n\t}\n\n\trootPoints() {}\n\n\ttoMesh() {\n\t\treturn ParametricSurface.prototype.toMesh.call(this)\n\t}\n\n\tclipCurves(curves: Curve[]): Curve[] {\n\t\treturn curves.flatMap(curve => curve.clipPlane(this.getSeamPlane()))\n\t}\n\tdpds(): (s: number, t: number) => V3 {\n\t\t// dp(s, t) = new V3(cos(t) * cos(s), cos(t) * sin(s), sin(t)\n\t\treturn (s: number, t: number) => this.matrix.transformVector(new V3(cos(t) * -sin(s), cos(t) * cos(s), 0))\n\t}\n\n\tdpdt(): (s: number, t: number) => V3 {\n\t\treturn (s: number, t: number) => this.matrix.transformVector(new V3(-sin(t) * cos(s), -sin(t) * sin(s), cos(t)))\n\t}\n\n\tisCurvesWithPCS(surface: ProjectedCurveSurface): Curve[] {\n\t\tlet curves2 = ParametricSurface.isCurvesParametricImplicitSurface(\n\t\t\tsurface,\n\t\t\tthis,\n\t\t\t0.1,\n\t\t\t0.1 / surface.dir.length(),\n\t\t\t0.05,\n\t\t)\n\t\tcurves2 = this.clipCurves(curves2)\n\t\treturn curves2\n\n\t\tfunction iii(ists: number[], surface: Surface, curve: Curve, min: number, max: number) {\n\t\t\tists.sort((a, b) => a - b)\n\t\t\tif (!eq(ists[0], min)) {\n\t\t\t\tists.splice(0, 0, min)\n\t\t\t}\n\t\t\tif (!eq(ists.last, max)) {\n\t\t\t\tists.push(max)\n\t\t\t}\n\t\t\tconst result = []\n\t\t\tfor (let i = 0; i < ists.length - 1; i++) {\n\t\t\t\tconst aT = ists[i],\n\t\t\t\t\tbT = ists[i + 1]\n\t\t\t\tconst a = curve.at(aT),\n\t\t\t\t\tb = curve.at(bT)\n\t\t\t\tconst aNormal = surface.normalP(a),\n\t\t\t\t\tbNormal = surface.normalP(b)\n\t\t\t\tconst aInside = dotCurve2(curve, aT, aNormal, 1) < 0\n\t\t\t\tconst bInside = dotCurve2(curve, bT, bNormal, -1) < 0\n\t\t\t\t//assert(bInside == aInside)\n\t\t\t\tif (surface.containsPoint(a) ? aInside : bInside) {\n\t\t\t\t\tresult.push([aT, ists[i + 1]])\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result\n\t\t}\n\n\t\t//return []\n\t\tconst surfaceLC = surface.transform(this.matrixInverse)\n\t\t//const lcMinZ0RelO =\n\t\tconst baseCurveLC = surfaceLC.baseCurve.project(new P3(surfaceLC.dir, 0))\n\t\tconst ists = baseCurveLC.isTsWithSurface(SemiEllipsoidSurface.UNIT)\n\t\tconst insideIntervals = getIntervals(ists, baseCurveLC.tMin, baseCurveLC.tMax).filter(\n\t\t\t([a, b]) => baseCurveLC.at((a + b) / 2).length() < 1,\n\t\t)\n\t\tconst projectedCurves = [0, 1].map(id => {\n\t\t\treturn (t: number) => {\n\t\t\t\tconst atSqr = snap(baseCurveLC.at(t).squared(), 1)\n\t\t\t\tconst lineISTs = /* +- */ sqrt(1 - atSqr)\n\t\t\t\t//assert(!isNaN(lineISTs))\n\t\t\t\treturn eq0(lineISTs)\n\t\t\t\t\t? baseCurveLC.at(t)\n\t\t\t\t\t: baseCurveLC.at(t).plus(surfaceLC.dir.times(sign(id - 0.5) * lineISTs))\n\t\t\t}\n\t\t})\n\t\tconst dProjectedCurves = [0, 1].map(id => {\n\t\t\treturn (t: number) => {\n\t\t\t\t// d/dt sqrt(1 - baseCurveLC.at(t).squared())\n\t\t\t\t// = -1/2 * 1/sqrt(1 - baseCurveLC.at(t).squared()) * -2*baseCurveLC.at(t) * baseCurveLC.tangentAt(t)\n\t\t\t\tconst atSqr = snap(baseCurveLC.at(t).squared(), 1)\n\t\t\t\tconst lineISTs = /* +- */ baseCurveLC\n\t\t\t\t\t.at(t)\n\t\t\t\t\t.times(-1 / sqrt(1 - atSqr))\n\t\t\t\t\t.dot(baseCurveLC.tangentAt(t))\n\t\t\t\t//assert(!isNaN(lineISTs))\n\t\t\t\treturn baseCurveLC.tangentAt(t).plus(surfaceLC.dir.times(sign(id - 0.5) * lineISTs))\n\t\t\t}\n\t\t})\n\t\t//const f2 = t => sqrt(1 - baseCurveLC.at(t).squared())\n\t\t//const df2 = t => baseCurveLC.at(t).times(-1 / sqrt(1 -\n\t\t// baseCurveLC.at(t).squared())).dot(baseCurveLC.tangentAt(t)) checkDerivate(f2, df2, 0.31, 0.60)\n\t\tconst curves = []\n\t\tfor (const [aT, bT] of insideIntervals) {\n\t\t\t//const aLine = new L3(baseCurveLC.at(aT), surfaceLC.dir1)\n\t\t\t//const a = EllipsoidSurface.UNIT.isTsForLine(aLine).map(t => aLine.at(t))\n\t\t\t//const bLine = new L3(baseCurveLC.at(bT), surfaceLC.dir1)\n\t\t\t//const b = EllipsoidSurface.UNIT.isTsForLine(bLine).map(t => bLine.at(t))\n\t\t\tfor (const i of [0, 1]) {\n\t\t\t\tconst f = (t: number) => projectedCurves[i](t).y\n\t\t\t\tconst df = (t: number) => dProjectedCurves[i](t).y\n\t\t\t\tcheckDerivate(f, df, aT + 0.1, bT - 0.1)\n\t\t\t\tconst tsAtY0 = getRoots(f, aT + NLA_PRECISION, bT - NLA_PRECISION, 1 / (1 << 11), df)\n\t\t\t\tconst ii2 = getIntervals(tsAtY0, aT, bT).filter(([a, b]) => f((a + b) / 2) > 0)\n\t\t\t\tfor (const [aT2, bT2] of ii2) {\n\t\t\t\t\tlet aP = projectedCurves[i](aT2),\n\t\t\t\t\t\tbP = projectedCurves[i](bT2)\n\t\t\t\t\t0 === i && ([aP, bP] = [bP, aP])\n\t\t\t\t\tassert(SemiEllipsoidSurface.UNIT.containsPoint(aP))\n\t\t\t\t\tassert(SemiEllipsoidSurface.UNIT.containsPoint(bP))\n\t\t\t\t\tcurves.push(\n\t\t\t\t\t\tPICurve.forStartEnd(\n\t\t\t\t\t\t\tsurface,\n\t\t\t\t\t\t\tthis,\n\t\t\t\t\t\t\tthis.matrix.transformPoint(bP),\n\t\t\t\t\t\t\tthis.matrix.transformPoint(aP),\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t),\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconst f = (t: number) => baseCurveLC.at(t).length() - 1\n\t\tconst fRoots = undefined\n\n\t\treturn surface.clipCurves(curves)\n\t}\n\n\tisCurvesWithSurface(surface: Surface): Curve[] {\n\t\tif (surface instanceof PlaneSurface) {\n\t\t\treturn this.isCurvesWithPlane(surface.plane)\n\t\t} else if (surface instanceof SemiCylinderSurface) {\n\t\t\treturn this.isCurvesWithSemiCylinderSurface(surface)\n\t\t} else if (surface instanceof SemiEllipsoidSurface) {\n\t\t\tconst surfaceLC = surface.transform(this.matrixInverse)\n\t\t\tconst curves = SemiEllipsoidSurface.unitISCurvesWithEllipsoidSurface(surfaceLC).map(c =>\n\t\t\t\tc.transform(this.matrix),\n\t\t\t)\n\t\t\treturn surface.clipCurves(curves)\n\t\t} else if (surface instanceof ProjectedCurveSurface) {\n\t\t\treturn this.isCurvesWithPCS(surface)\n\t\t} else if (surface instanceof ParametricSurface) {\n\t\t\tlet curves2 = ParametricSurface.isCurvesParametricImplicitSurface(surface, this, 0.1, 0.1, 0.05)\n\t\t\tcurves2 = this.clipCurves(curves2)\n\t\t\tcurves2 = surface.clipCurves(curves2)\n\t\t\treturn curves2\n\t\t} else {\n\t\t\tthrow new Error()\n\t\t}\n\t}\n\n\tisCurvesWithPlane(plane: P3) {\n\t\tconst planeLC = plane.transform(this.matrixInverse)\n\t\treturn SemiEllipsoidSurface.unitISCurvesWithPlane(planeLC).map(c => c.transform(this.matrix))\n\t}\n\n\tisCurvesWithSemiCylinderSurface(surface: SemiCylinderSurface): Curve[] {\n\t\tif (L3.containsPoint(surface.baseCurve.center, surface.dir, this.center)) {\n\t\t\tassert(this.isSphere())\n\t\t\tconst ellipseProjected = surface.baseCurve.transform(M4.project(surface.baseCurve.getPlane(), surface.dir))\n\t\t\tif (ellipseProjected.isCircular()) {\n\t\t\t\tconst thisRadius = this.f1.length()\n\t\t\t\tconst surfaceRadius = ellipseProjected.f1.length()\n\t\t\t\t// sphereRadius² = distanceISFromCenter² + isRadius²\n\t\t\t\tif (eq(thisRadius, surfaceRadius)) {\n\t\t\t\t\t// return\n\t\t\t\t} else if (surfaceRadius < thisRadius) {\n\t\t\t\t}\n\t\t\t\tassert(false)\n\t\t\t}\n\t\t}\n\t\treturn this.isCurvesWithPCS(surface)\n\t}\n\n\tisTsForLine(line: L3) {\n\t\tassertInst(L3, line)\n\t\t// transforming line manually has advantage that dir1 will not be renormalized,\n\t\t// meaning that calculated values t for localLine are directly transferable to line\n\t\tconst anchorLC = this.matrixInverse.transformPoint(line.anchor)\n\t\tconst dirLC = this.matrixInverse.transformVector(line.dir1)\n\t\treturn SemiEllipsoidSurface.unitISTsWithLine(anchorLC, dirLC)\n\t}\n\n\tisCoplanarTo(surface: Surface): boolean {\n\t\tif (this === surface) return true\n\t\tif (!hasConstructor(surface, SemiEllipsoidSurface)) return false\n\t\tif (!this.center.like(surface.center)) return false\n\t\tif (this.isSphere()) return surface.isSphere() && eq(this.f1.length(), this.f2.length())\n\n\t\tconst otherMatrixLC = this.matrixInverse.times(surface.matrix)\n\t\t// Ellipsoid with matrix otherMatrixLC is unit sphere iff otherMatrixLC is orthogonal\n\t\treturn otherMatrixLC.like3x3() && otherMatrixLC.isOrthogonal()\n\t}\n\n\tcontainsEllipse(ellipse: SemiEllipseCurve): boolean {\n\t\tconst ellipseLC = ellipse.transform(this.matrixInverse)\n\t\tconst distEllipseLCCenter = ellipseLC.center.length()\n\t\tconst correctRadius = Math.sqrt(1 - distEllipseLCCenter ** 2)\n\t\treturn lt(distEllipseLCCenter, 1) && ellipseLC.isCircular() && ellipseLC.f1.hasLength(correctRadius)\n\t\t//&& le(0, ellipseLC.getAABB().min.y)\n\t}\n\n\tcontainsCurve(curve: Curve): boolean {\n\t\tif (curve instanceof SemiEllipseCurve) {\n\t\t\treturn this.containsEllipse(curve)\n\t\t} else {\n\t\t\treturn super.containsCurve(curve)\n\t\t}\n\t}\n\n\ttransform(m4: M4): this {\n\t\treturn new SemiEllipsoidSurface(\n\t\t\tm4.transformPoint(this.center),\n\t\t\tm4.transformVector(this.f1),\n\t\t\tm4.transformVector(this.f2),\n\t\t\tm4.transformVector(this.f3).times(m4.isMirroring() ? -1 : 1),\n\t\t) as this\n\t}\n\n\tisInsideOut(): boolean {\n\t\treturn this.f1.cross(this.f2).dot(this.f3) < 0\n\t}\n\n\t//implicitFunction() {\n\t//    return (pWC) => {\n\t//        const pLC = this.inverseMatrix.transformPoint(pWC)\n\t//        return (pLC.y > 0\n\t//            ? pLC.length() - 1\n\t//            : (-pLC.y + Math.hypot(pLC.x, pLC.z) - 1)) * this.normalDir\n\t//    }\n\t//}\n\t//didp(pWC) {\n\t//    const pLC = this.inverseMatrix.transformPoint(pWC)\n\t//    const didpLC = (pLC.y > 0\n\t//                ? pLC.unit()\n\t//                : V(pLC.x / Math.hypot(pLC.x, pLC.z), -1, pLC.z / Math.hypot(pLC.x, pLC.z))).times(this.normalDir)\n\t//    return this.inverseMatrix.transformVector(didpLC)\n\t//}\n\n\tflipped(): this {\n\t\treturn new SemiEllipsoidSurface(this.center, this.f1, this.f2, this.f3.negated()) as this\n\t}\n\n\tnormalSTFunc(): (s: number, t: number) => V3 {\n\t\t// ugh\n\t\t// paramtric ellipsoid point q(a, b)\n\t\t// normal1 == (dq(a, b) / da) X (dq(a, b) / db) (cross product of partial derivatives)\n\t\t// normal1 == cos b * (f2 X f3 * cos b * cos a + f3 X f1 * cos b * sin a + f1 X f2 * sin b)\n\t\treturn (a, b) => {\n\t\t\tconst { f1, f2, f3 } = this\n\t\t\tconst normal = f2\n\t\t\t\t.cross(f3)\n\t\t\t\t.times(Math.cos(b) * Math.cos(a))\n\t\t\t\t.plus(f3.cross(f1).times(Math.cos(b) * Math.sin(a)))\n\t\t\t\t.plus(f1.cross(f2).times(Math.sin(b)))\n\t\t\t\t//.times(Math.cos(b))\n\t\t\t\t.unit()\n\t\t\treturn normal\n\t\t}\n\t}\n\n\tnormalP(p: V3): V3 {\n\t\treturn this.pLCNormalWCMatrix.transformVector(this.matrixInverse.transformPoint(p)).unit()\n\t}\n\n\tnormalST(s: number, t: number): V3 {\n\t\treturn this.pLCNormalWCMatrix.transformVector(V3.sphere(s, t)).unit()\n\t}\n\n\tstPFunc() {\n\t\treturn (pWC: V3) => {\n\t\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\t\tconst alpha = abs(pLC.angleXY())\n\t\t\tconst beta = Math.asin(clamp(pLC.z, -1, 1))\n\t\t\tassert(isFinite(alpha))\n\t\t\tassert(isFinite(beta))\n\t\t\treturn new V3(alpha, beta, 0)\n\t\t}\n\t}\n\n\tpSTFunc() {\n\t\t// this(a, b) = f1 cos a cos b + f2 sin a cos b + f2 sin b\n\t\treturn (alpha: number, beta: number) => {\n\t\t\treturn this.matrix.transformPoint(V3.sphere(alpha, beta))\n\t\t}\n\t}\n\n\tisSphere(): boolean {\n\t\treturn (\n\t\t\teq(this.f1.length(), this.f2.length()) &&\n\t\t\teq(this.f2.length(), this.f3.length()) &&\n\t\t\teq(this.f3.length(), this.f1.length()) &&\n\t\t\tthis.f1.isPerpendicularTo(this.f2) &&\n\t\t\tthis.f2.isPerpendicularTo(this.f3) &&\n\t\t\tthis.f3.isPerpendicularTo(this.f1)\n\t\t)\n\t}\n\n\tisVerticalSpheroid(): boolean {\n\t\treturn (\n\t\t\teq(this.f1.length(), this.f2.length()) &&\n\t\t\tthis.f1.isPerpendicularTo(this.f2) &&\n\t\t\tthis.f2.isPerpendicularTo(this.f3) &&\n\t\t\tthis.f3.isPerpendicularTo(this.f1)\n\t\t)\n\t}\n\n\tmainAxes(): SemiEllipsoidSurface {\n\t\t// q(a, b) = f1 cos a cos b + f2 sin a cos b + f3 sin b\n\t\t// q(s, t, u) = s * f1 + t * f2 + u * f3 with s² + t² + u² = 1\n\t\t// (del q(a, b) / del a) = f1 (-sin a) cos b  + f2 cos a cos b\n\t\t// (del q(a, b) / del b) = f1 cos a (-sin b) + f2 sin a (-sin b) + f2 cos b\n\t\t// del q(s, t, u) / del a = -t f1 + s f2\n\t\t// (del q(a, b) / del a) DOT q(a, b) == 0\n\t\t// (f1 (-sin a) cos b  + f2 cos a cos b) DOT (f1 cos a cos b + f2 sin a cos b + f2 sin b) == 0\n\t\t// (del q(a, b) / del b) DOT q(a, b) == 0\n\t\t// (f1 cos a (-sin b) + f2 sin a (-sin b) + f2 cos b) DOT (f1 cos a cos b + f2 sin a cos b + f2 sin b) == 0\n\n\t\t// Solve[\n\t\t// (f1 (-sin a) cos b  + f2 cos a cos b) * (f1 cos a cos b + f2 sin a cos b + f2 sin b) = 0,\n\t\t// (f1 cos a (-sin b) + f2 sin a (-sin b) + f2 cos b) * (f1 cos a cos b + f2 sin a cos b + f2 sin b) = 0}, a, b]\n\t\tconst { f1, f2, f3 } = this\n\n\t\tif (eq0(f1.dot(f2)) && eq0(f2.dot(f3)) && eq0(f3.dot(f1))) {\n\t\t\treturn this\n\t\t}\n\n\t\t//const f = ([a, b], x?) => {\n\t\t//    const sinA = Math.sin(a), cosA = Math.cos(a), sinB = Math.sin(b), cosB = Math.cos(b)\n\t\t//    const centerToP = V3.add(f1.times(cosA * cosB), f2.times(sinA * cosB), f3.times(sinB))\n\t\t//    const centerToPdelA = f1.times(-sinA * cosB).plus(f2.times(cosA * cosB))\n\t\t//    const centerToPdelB = V3.add(f1.times(cosA * -sinB), f2.times(sinA * -sinB), f3.times(cosB))\n\t\t//    x && console.log(centerToP.sce, centerToPdelA.sce, centerToPdelB.sce)\n\t\t//    return [centerToP.dot(centerToPdelA), centerToP.dot(centerToPdelB)]\n\t\t//}\n\t\t//const mainF1Params = newtonIterate(f, [0, 0], 8), mainF1 = this.pSTFunc()(mainF1Params[0], mainF1Params[1])\n\t\t//console.log(f(mainF1Params, 1).sce)\n\t\t//const mainF2Params = newtonIterate(f, this.stPFunc()(f2.rejectedFrom(mainF1)).toArray(2), 8),\n\t\t//   mainF2 = this.pSTFunc()(mainF2Params[0], mainF2Params[1])\n\t\t//console.log(this.normalSTFunc()(mainF2Params[0], mainF2Params[1]).sce)\n\t\t//assert(mainF1.isPerpendicularTo(mainF2), mainF1, mainF2, mainF1.dot(mainF2), mainF1Params)\n\t\t//const mainF3Params = this.stPFunc()(mainF1.cross(mainF2)), mainF3 = this.pSTFunc()(mainF3Params[0],\n\t\t// mainF3Params[1]) return new EllipsoidSurface(this.center, mainF1, mainF2, mainF3)\n\n\t\tconst { U, SIGMA } = this.matrix.svd3()\n\t\tassert(SIGMA.isDiagonal())\n\t\tassert(U.isOrthogonal())\n\t\tconst U_SIGMA = U.times(SIGMA)\n\t\t// column vectors of U_SIGMA\n\t\tconst [mainF1, mainF2, mainF3] = arrayFromFunction(\n\t\t\t3,\n\t\t\ti => new V3(U_SIGMA.m[i], U_SIGMA.m[i + 4], U_SIGMA.m[i + 8]),\n\t\t)\n\t\treturn new SemiEllipsoidSurface(this.center, mainF1, mainF2, mainF3)\n\t}\n\n\tcontainsPoint(p: V3) {\n\t\treturn eq0(this.implicitFunction()(p))\n\t}\n\n\tboundsFunction() {\n\t\treturn (a: number, b: number) => between(a, 0, PI) && between(b, -PI, PI)\n\t}\n\n\tvolume(): number {\n\t\treturn 4 / 3 * Math.PI * this.f1.dot(this.f2.cross(this.f3))\n\t}\n\n\tloopContainsPoint(loop: Edge[], pWC: V3): PointVsFace {\n\t\tif (!this.containsPoint(pWC)) return PointVsFace.OUTSIDE\n\t\tassertVectors(pWC)\n\t\tassert(Edge.isLoop(loop))\n\t\tconst pLCXY = this.matrixInverse.transformPoint(pWC).xy()\n\t\tconst testLine = new SemiEllipseCurve(\n\t\t\tthis.center,\n\t\t\tthis.f3,\n\t\t\tpLCXY.likeO() ? this.f2 : this.matrix.transformVector(pLCXY.unit()),\n\t\t)\n\n\t\tif (P3.normalOnAnchor(this.f2.unit(), this.center).containsPoint(pWC)) {\n\t\t\treturn loop.some(\n\t\t\t\tedge => edge.curve.containsPoint(pWC) && fuzzyBetween(edge.curve.pointT(pWC), edge.minT, edge.maxT),\n\t\t\t)\n\t\t\t\t? PointVsFace.ON_EDGE\n\t\t\t\t: PointVsFace.OUTSIDE\n\t\t}\n\n\t\treturn Surface.loopContainsPointEllipse(loop, pWC, testLine)\n\t}\n\n\tsurfaceAreaApprox(): number {\n\t\t// See https://en.wikipedia.org/wiki/Ellipsoid#Surface_area\n\t\tconst mainAxes = this.mainAxes(),\n\t\t\ta = mainAxes.f1.length(),\n\t\t\tb = mainAxes.f2.length(),\n\t\t\tc = mainAxes.f3.length()\n\t\tconst p = 1.6075\n\t\treturn 4 * PI * Math.pow((Math.pow(a * b, p) + Math.pow(b * c, p) + Math.pow(c * a, p)) / 3, 1 / p)\n\t}\n\n\tsurfaceArea(): number {\n\t\t// See https://en.wikipedia.org/wiki/Ellipsoid#Surface_area\n\t\tconst mainAxes = this.mainAxes(),\n\t\t\tf1l = mainAxes.f1.length(),\n\t\t\tf2l = mainAxes.f2.length(),\n\t\t\tf3l = mainAxes.f3.length(),\n\t\t\t[c, b, a] = [f1l, f2l, f3l].sort(MINUS)\n\n\t\t// https://en.wikipedia.org/w/index.php?title=Spheroid&oldid=761246800#Area\n\t\tfunction spheroidArea(a: number, c: number) {\n\t\t\tif (c < a) {\n\t\t\t\tconst eccentricity2 = 1 - c ** 2 / a ** 2\n\t\t\t\tconst eccentricity = Math.sqrt(eccentricity2)\n\t\t\t\treturn 2 * PI * a ** 2 * (1 + (1 - eccentricity2) / Math.sqrt(eccentricity) * Math.atanh(eccentricity))\n\t\t\t} else {\n\t\t\t\tconst eccentricity = Math.sqrt(1 - a ** 2 / c ** 2)\n\t\t\t\treturn 2 * PI * a ** 2 * (1 + c / a / eccentricity * Math.asin(eccentricity))\n\t\t\t}\n\t\t}\n\n\t\tif (eq(a, b)) {\n\t\t\treturn spheroidArea(a, c)\n\t\t} else if (eq(b, c)) {\n\t\t\treturn spheroidArea(b, a)\n\t\t} else if (eq(c, a)) {\n\t\t\treturn spheroidArea(c, b)\n\t\t}\n\n\t\tconst phi = Math.acos(c / a)\n\t\tconst kk = a ** 2 * (b ** 2 - c ** 2) / (b ** 2 * (a ** 2 - c ** 2))\n\t\tconst incompleteEllipticInt1 = gaussLegendreQuadrature24(\n\t\t\tphi => Math.pow(1 - kk * Math.sin(phi) ** 2, -0.5),\n\t\t\t0,\n\t\t\tphi,\n\t\t)\n\t\tconst incompleteEllipticInt2 = gaussLegendreQuadrature24(\n\t\t\tphi => Math.pow(1 - kk * Math.sin(phi) ** 2, 0.5),\n\t\t\t0,\n\t\t\tphi,\n\t\t)\n\t\treturn (\n\t\t\t(2 * PI * c ** 2 + 2 * PI * a * b / Math.sin(phi)) *\n\t\t\t(incompleteEllipticInt2 * Math.sin(phi) ** 2 + incompleteEllipticInt1 * Math.cos(phi) ** 2)\n\t\t)\n\t}\n\n\tgetSeamPlane(): P3 {\n\t\tconst plane = P3.forAnchorAndPlaneVectors(this.center, this.f1, this.f3)\n\t\treturn plane.normal1.dot(this.f2) < 0 ? plane : plane.flipped()\n\t}\n\n\tgetExtremePoints(): V3[] {\n\t\treturn getExtremePointsHelper.call(this, new SemiEllipseCurve(V3.O, V3.X, V3.Z, -PI / 2, PI / 2))\n\t}\n\n\tpointFoot(pWC: V3, startS?: number, startT?: number): V3 {\n\t\tconsole.log(pWC.sce)\n\t\tif (undefined === startS || undefined === startT) {\n\t\t\tlet pLC1 = this.matrixInverse.transformPoint(pWC).unit()\n\t\t\tif (pLC1.y < 0) pLC1 = pLC1.negated()\n\t\t\t;({ x: startS, y: startT } = SemiEllipsoidSurface.UNIT.stP(pLC1))\n\t\t}\n\t\tconst dpds = this.dpds()\n\t\tconst dpdt = this.dpdt()\n\t\tconst [s, t] = newtonIterate(\n\t\t\t([s, t]) => {\n\t\t\t\tconst p = this.pST(s, t)\n\t\t\t\tconsole.log([p, p.plus(dpds(s, t)), p, p.plus(dpdt(s, t))].map(toSource).join() + ',')\n\t\t\t\tconst pSTToPWC = this.pST(s, t).to(pWC)\n\t\t\t\treturn [pSTToPWC.dot(dpds(s, t)), pSTToPWC.dot(dpdt(s, t))]\n\t\t\t},\n\t\t\t[startS, startT],\n\t\t\t8,\n\t\t\tundefined,\n\t\t\t0.1,\n\t\t)\n\t\treturn new V3(s, t, 0)\n\t}\n\n\timplicitFunction() {\n\t\treturn (pWC: V3) => {\n\t\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\t\treturn (pLC.length() - 1) * this.normalDir\n\t\t}\n\t}\n\n\t// = this.inverseMatrix.transformPoint(this.inverseMatrix.transformPoint(pWC).unit())\n\tdidp(pWC: V3) {\n\t\t// i(pWC) = this.inverseMatrix.transformPoint(pWC).length() - 1\n\t\t// chain diff rule\n\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\treturn this.pLCNormalWCMatrix.transformVector(pLC.unit()) //.times(this.normalDir)\n\t}\n}\nSemiEllipsoidSurface.prototype.uStep = PI / 32\nSemiEllipsoidSurface.prototype.vStep = PI / 32\n","import { assert, assertInst, callsce, hasConstructor, isCCW, M4, V3 } from 'ts3dutils'\r\n\r\nimport { Curve, Edge, ImplicitCurve, ImplicitSurface, L3, P3, ParametricSurface, PointVsFace, Surface } from '../index'\r\n\r\nexport class PlaneSurface extends ParametricSurface implements ImplicitSurface {\r\n\treadonly matrix: M4\r\n\r\n\tconstructor(\r\n\t\treadonly plane: P3,\r\n\t\treadonly right: V3 = plane.normal1.getPerpendicular().unit(),\r\n\t\treadonly up: V3 = plane.normal1.cross(right).unit(),\r\n\t\tsMin: number = -100,\r\n\t\tsMax: number = 100,\r\n\t\ttMin: number = -100,\r\n\t\ttMax: number = 100,\r\n\t) {\r\n\t\tsuper(sMin, sMax, tMin, tMax)\r\n\t\tassertInst(P3, plane)\r\n\t\tassert(this.right.cross(this.up).like(this.plane.normal1))\r\n\t\tthis.matrix = M4.forSys(right, up, plane.normal1, plane.anchor)\r\n\t}\r\n\r\n\ttoSource(rounder: (x: number) => number = x => x): string {\r\n\t\treturn callsce.call(undefined, 'new PlaneSurface', ...this.getConstructorParameters())\r\n\t}\r\n\r\n\tstatic throughPoints(a: V3, b: V3, c: V3): PlaneSurface {\r\n\t\treturn new PlaneSurface(P3.throughPoints(a, b, c))\r\n\t}\r\n\r\n\tstatic forAnchorAndPlaneVectors(\r\n\t\tanchor: V3,\r\n\t\tv0: V3,\r\n\t\tv1: V3,\r\n\t\tsMin?: number,\r\n\t\tsMax?: number,\r\n\t\ttMin?: number,\r\n\t\ttMax?: number,\r\n\t): PlaneSurface {\r\n\t\treturn new PlaneSurface(P3.forAnchorAndPlaneVectors(anchor, v0, v1), v0, v1, sMin, sMax, tMin, tMax)\r\n\t}\r\n\tisCoplanarTo(surface: Surface): boolean {\r\n\t\treturn hasConstructor(surface, PlaneSurface) && this.plane.isCoplanarToPlane(surface.plane)\r\n\t}\r\n\r\n\tisTsForLine(line: L3): number[] {\r\n\t\treturn line.isTsWithPlane(this.plane)\r\n\t}\r\n\r\n\tlike(surface: Surface): boolean {\r\n\t\treturn hasConstructor(surface, PlaneSurface) && this.plane.like(surface.plane)\r\n\t}\r\n\r\n\tpST(s: number, t: number): V3 {\r\n\t\treturn this.matrix.transformPoint(new V3(s, t, 0))\r\n\t}\r\n\r\n\timplicitFunction(): (pWC: V3) => number {\r\n\t\treturn p => this.plane.distanceToPointSigned(p)\r\n\t}\r\n\r\n\tisCurvesWithSurface(surface2: Surface): Curve[] {\r\n\t\tif (surface2 instanceof PlaneSurface) {\r\n\t\t\treturn this.isCurvesWithPlane(surface2.plane)\r\n\t\t}\r\n\t\treturn super.isCurvesWithSurface(surface2)\r\n\t}\r\n\r\n\tisCurvesWithPlane(plane: P3): L3[] {\r\n\t\tif (this.plane.isParallelToPlane(plane)) {\r\n\t\t\treturn []\r\n\t\t}\r\n\t\treturn [this.plane.intersectionWithPlane(plane)]\r\n\t}\r\n\r\n\tedgeLoopCCW(contour: Edge[]): boolean {\r\n\t\tassert(Edge.isLoop(contour), 'isLoop')\r\n\t\treturn isCCW(contour.flatMap(edge => edge.points()), this.plane.normal1)\r\n\t}\r\n\r\n\tloopContainsPoint(loop: Edge[], p: V3): PointVsFace {\r\n\t\tconst dir = this.right.plus(this.up.times(0.123)).unit()\r\n\t\tconst line = new L3(p, dir)\r\n\t\tconst lineOut = dir.cross(this.plane.normal1)\r\n\t\treturn Surface.loopContainsPointGeneral(loop, p, line, lineOut)\r\n\t}\r\n\r\n\tstPFunc() {\r\n\t\tconst matrixInverse = this.matrix.inversed()\r\n\t\treturn function(pWC: V3) {\r\n\t\t\treturn matrixInverse.transformPoint(pWC)\r\n\t\t}\r\n\t}\r\n\r\n\tpointFoot(pWC: V3): V3 {\r\n\t\treturn this.stP(pWC)\r\n\t}\r\n\r\n\tnormalP(pWC: V3): V3 {\r\n\t\treturn this.plane.normal1\r\n\t}\r\n\r\n\tcontainsPoint(p: V3) {\r\n\t\treturn this.plane.containsPoint(p)\r\n\t}\r\n\r\n\tcontainsCurve(curve: Curve): boolean {\r\n\t\treturn curve instanceof ImplicitCurve ? super.containsCurve(curve) : this.plane.containsCurve(curve)\r\n\t}\r\n\r\n\ttransform(m4: M4) {\r\n\t\treturn new PlaneSurface(this.plane.transform(m4)) as this\r\n\t}\r\n\r\n\tflipped() {\r\n\t\treturn new PlaneSurface(this.plane.flipped(), this.right, this.up.negated()) as this\r\n\t}\r\n\r\n\tgetConstructorParameters(): any[] {\r\n\t\treturn [this.plane, this.right, this.up, this.sMin, this.sMax, this.tMin, this.tMax]\r\n\t}\r\n\r\n\tdpds(): (s: number, t: number) => V3 {\r\n\t\treturn () => this.right\r\n\t}\r\n\r\n\tdpdt(): (s: number, t: number) => V3 {\r\n\t\treturn () => this.up\r\n\t}\r\n\r\n\tdidp(pWC: V3): V3 {\r\n\t\treturn this.plane.normal1\r\n\t}\r\n\r\n\tnormalST() {\r\n\t\treturn this.plane.normal1\r\n\t}\r\n}\r\n\r\nPlaneSurface.prototype.uStep = 1e6\r\nPlaneSurface.prototype.vStep = 1e6\r\n","import {\n\tassert,\n\tgaussLegendre24Weights,\n\tgaussLegendre24Xs,\n\tgaussLegendreQuadrature24,\n\tglqInSteps,\n\tM4,\n\tV,\n\tV3,\n} from 'ts3dutils'\nimport {\n\tConicSurface,\n\tEdge,\n\tHyperbolaCurve,\n\tImplicitCurve,\n\tL3,\n\tParabolaCurve,\n\tParametricSurface,\n\tPlaneSurface,\n\tProjectedCurveSurface,\n\tRotatedCurveSurface,\n\tSemiEllipseCurve,\n\tSemiEllipsoidSurface,\n} from '../index'\n\nimport { cos, sin } from '../math'\n\n/**\n * In general: the z-dir shadow volume of a face is the integral: SURFACE_INTEGRAL[p in face] (normal(p).z * p.z) dp\n * In general: the centroid of the z-dir shadow volume of a face is the integral:\n *     SURFACE_INTEGRAL[p in face] ((p schur (1, 1, 0.5)) * normal(p).z * p.z) dp\n *     dividing the z component by 2 is usually done at the very end\n */\n\nexport const ZDirVolumeVisitor: { [className: string]: (edges: Edge[]) => { volume: number; centroid: V3 } } = {\n\t[ConicSurface.name](this: ConicSurface, edges: Edge[]): { volume: number; centroid: V3 } {\n\t\tconsole.log(this)\n\t\tconst dpds = this.dpds()\n\t\tconst dpdt = this.dpdt()\n\t\t// INT[edge.at; edge.bT] (at(t) DOT dir) * (at(t) - at(t).projectedOn(dir) / 2).z dt\n\t\tconst totalVolume = edges\n\t\t\t.map(edgeWC => {\n\t\t\t\tconst curveWC = edgeWC.curve\n\t\t\t\tif (\n\t\t\t\t\tcurveWC instanceof SemiEllipseCurve ||\n\t\t\t\t\tcurveWC instanceof HyperbolaCurve ||\n\t\t\t\t\tcurveWC instanceof ParabolaCurve\n\t\t\t\t) {\n\t\t\t\t\tconst f = (curveT: number) => {\n\t\t\t\t\t\tconst at = curveWC.at(curveT),\n\t\t\t\t\t\t\ttangentWC = curveWC.tangentAt(curveT)\n\t\t\t\t\t\tconst stOfPWC = this.stP(at)\n\t\t\t\t\t\t// INTEGRATE [0; atST.y] (dpds(atST.x, t) X dpdt(atST.x)).z * pST(atST.x, t).z dt\n\t\t\t\t\t\t// dpds(s, t) === t * dpds(s, 1)\n\t\t\t\t\t\t// => INTEGRATE [0; atST.y] (t * dpds(atST.x, 1) X dpdt(atST.x)).z * pST(atST.x, t).z dt\n\t\t\t\t\t\t// => (dpds(atST.x, 1) X dpdt(atST.x)).z * INTEGRATE [0; atST.y] t * pST(atST.x, t).z dt\n\t\t\t\t\t\t// pST(s, t) === t * (pST(s, 1) - center) + center\n\t\t\t\t\t\t// => (dpds(atST.x, 1) X dpdt(atST.x)).z\n\t\t\t\t\t\t//      * INTEGRATE [0; atST.y] t² * (pST(atST.x, t) - center).z + t * center.z dt\n\t\t\t\t\t\t// => (dpds(atST.x, 1) X dpdt(atST.x)).z\n\t\t\t\t\t\t//      * INTEGRATE [0; atST.y] t² * (pST(atST.x, t) - center).z + t * center.z dt\n\t\t\t\t\t\t// => (dpds(atST.x, 1) X dpdt(atST.x)).z\n\t\t\t\t\t\t//      * (1/3 t³ pST(atST.x, 1).z + 1/2 t² center.z)[0; atST.y]\n\n\t\t\t\t\t\tconst ds = -M4.forSys(dpds(stOfPWC.x, stOfPWC.y), dpdt(stOfPWC.x))\n\t\t\t\t\t\t\t.inversed()\n\t\t\t\t\t\t\t.transformVector(tangentWC).x\n\t\t\t\t\t\tconst factor =\n\t\t\t\t\t\t\tstOfPWC.y ** 3 / 3 * (this.pST(stOfPWC.x, 1).z - this.center.z) +\n\t\t\t\t\t\t\tstOfPWC.y ** 2 / 2 * this.center.z\n\t\t\t\t\t\tconst actual = dpds(stOfPWC.x, factor).cross(dpdt(stOfPWC.x)).z\n\t\t\t\t\t\treturn actual * ds\n\t\t\t\t\t}\n\t\t\t\t\tconst val = glqInSteps(f, edgeWC.aT, edgeWC.bT, 1)\n\t\t\t\t\treturn val\n\t\t\t\t} else if (curveWC instanceof L3) {\n\t\t\t\t\treturn 0\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.sum()\n\t\tconst centroidZX2Parts = edges.map(edgeWC => {\n\t\t\tconst curveWC = edgeWC.curve\n\t\t\tif (\n\t\t\t\tcurveWC instanceof SemiEllipseCurve ||\n\t\t\t\tcurveWC instanceof HyperbolaCurve ||\n\t\t\t\tcurveWC instanceof ParabolaCurve\n\t\t\t) {\n\t\t\t\tconst f = (curveT: number) => {\n\t\t\t\t\tconst at = curveWC.at(curveT),\n\t\t\t\t\t\ttangentWC = curveWC.tangentAt(curveT)\n\t\t\t\t\tconst stOfPWC = this.stP(at)\n\t\t\t\t\t// INTEGRATE [0; atST.y] dpds(atST.x, t) X dpdt(atST.x, t) * pST(atST.x, t).z dt\n\t\t\t\t\t// dpdt is constant with respect to t\n\t\t\t\t\t// => (dpds(atST.x, t) X dpdt(atST.x, t)).z\n\t\t\t\t\t//      * (INTEGRATE [0; atST.y] t * pST(atST.x, t) * pST(atST.x, t).z dt)\n\t\t\t\t\t// dpds(s, t) === t * dpds(s, 1)\n\t\t\t\t\t// pST(s, t) === t * (pST(s, 1) - center) + center\n\t\t\t\t\t// INTEGRATE [0; atST.y] t * pST(atST.x, t) * pST(atST.x, t).z dt\n\t\t\t\t\t// = INTEGRATE [0; atST.y] t *\n\t\t\t\t\t//                         (t * (pST(s, 1) - center) + center) *\n\t\t\t\t\t//                         (t (pST(s, 1) - center).z + center.z) dt\n\t\t\t\t\t// = INTEGRATE [0; atST.y] t³ (pST(s, 1) - center) * (pST(s, 1) - center).z\n\t\t\t\t\t//                       + t² ((pST(s, 1) - center) * center.z + (pST(s, 1) - center).z * center)\n\t\t\t\t\t//                       + t center center.z dt\n\t\t\t\t\t// = (1/4 t^4 (pST(s, 1) - center) * (pST(s, 1) - center).z\n\t\t\t\t\t//   (1/3 t³ ((pST(s, 1) - center) * center.z + (pST(s, 1) - center).z * center)\n\t\t\t\t\t//   (1/2 t² center center.z dt)[0; atST.y]\n\t\t\t\t\tconst pSTS1V = this.pST(stOfPWC.x, 1).minus(this.center)\n\t\t\t\t\tconst factor = V3.add(\n\t\t\t\t\t\tpSTS1V.times(1 / 4 * stOfPWC.y ** 4 * pSTS1V.z + 1 / 3 * stOfPWC.y ** 3 * this.center.z),\n\t\t\t\t\t\tthis.center.times(1 / 3 * stOfPWC.y ** 3 * pSTS1V.z + 1 / 2 * stOfPWC.y ** 2 * this.center.z),\n\t\t\t\t\t)\n\t\t\t\t\tconst partialCentroid = factor.times(dpds(stOfPWC.x, 1).cross(dpdt(stOfPWC.x)).z)\n\n\t\t\t\t\tconst ds = -M4.forSys(dpds(stOfPWC.x, stOfPWC.y), dpdt(stOfPWC.x))\n\t\t\t\t\t\t.inversed()\n\t\t\t\t\t\t.transformVector(tangentWC).x\n\n\t\t\t\t\treturn partialCentroid.times(ds)\n\t\t\t\t}\n\t\t\t\treturn glqV3(f, edgeWC.aT, edgeWC.bT)\n\t\t\t} else if (curveWC instanceof L3) {\n\t\t\t\treturn V3.O\n\t\t\t} else {\n\t\t\t\tthrow new Error()\n\t\t\t}\n\t\t})\n\n\t\tconst centroid = V3.add(...centroidZX2Parts)\n\t\t\t.schur(new V3(1, 1, 0.5))\n\t\t\t.div(totalVolume)\n\t\treturn { volume: totalVolume, centroid: centroid }\n\t},\n\n\t[PlaneSurface.name](this: PlaneSurface, edges: Edge[]): { centroid: V3; volume: number } {\n\t\tconst r1 = this.right\n\t\tconst u1 = this.up\n\t\tconst c = this.plane.anchor\n\t\tassert(r1.hasLength(1))\n\t\tassert(u1.hasLength(1))\n\t\tassert(r1.isPerpendicularTo(u1))\n\t\tconst volumeAndCentroidZX2Parts = edges.map((edgeWC): [number, V3] => {\n\t\t\tconst curveWC = edgeWC.curve\n\t\t\tif (curveWC instanceof L3) {\n\t\t\t\t// split shadow volume into two triangle shadow volumes and use the same logic as for mesh triangles:\n\t\t\t\tfunction triangleShadowVolumeAndCentroid(a: V3, b: V3, c: V3): [number, V3] {\n\t\t\t\t\tconst ab = b.minus(a),\n\t\t\t\t\t\tac = c.minus(a)\n\t\t\t\t\tconst normal = ab.cross(ac)\n\t\t\t\t\tconst faceCentroid = V3.add(a, b, c).div(3)\n\t\t\t\t\treturn [\n\t\t\t\t\t\tfaceCentroid.z * normal.z / 2,\n\t\t\t\t\t\tV3.add(\n\t\t\t\t\t\t\ta.times(2 * a.z + b.z + c.z),\n\t\t\t\t\t\t\tb.times(a.z + 2 * b.z + c.z),\n\t\t\t\t\t\t\tc.times(a.z + b.z + 2 * c.z),\n\t\t\t\t\t\t).times(normal.z), // 1/24 factor is done at very end\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\tconst a = edgeWC.a,\n\t\t\t\t\tb = edgeWC.b\n\t\t\t\tconst as = a.dot(r1)\n\t\t\t\tconst bs = b.dot(r1)\n\t\t\t\tconst aBase = this.pST(as, 0)\n\t\t\t\tconst bBase = this.pST(bs, 0)\n\t\t\t\tconst [v1, c1] = triangleShadowVolumeAndCentroid(a, b, aBase)\n\t\t\t\tconst [v2, c2] = triangleShadowVolumeAndCentroid(bBase, aBase, b)\n\t\t\t\treturn [v1 + v2, c1.plus(c2).div(24)]\n\t\t\t} else if (curveWC instanceof ImplicitCurve) {\n\t\t\t\tthrow new Error()\n\t\t\t} else {\n\t\t\t\tconst sliceAreaAndCentroidZX2TimesDs = (curveT: number) => {\n\t\t\t\t\tconst p = curveWC.at(curveT)\n\t\t\t\t\tconst s = p.dot(r1)\n\t\t\t\t\tconst t = p.dot(u1)\n\t\t\t\t\tconst area = t * c.z + s * t * r1.z + 1 / 2 * t ** 2 * u1.z\n\t\t\t\t\tconst ds = -curveWC.tangentAt(curveT).dot(r1)\n\t\t\t\t\treturn [\n\t\t\t\t\t\tarea * ds,\n\t\t\t\t\t\t...V3.add(\n\t\t\t\t\t\t\tc.times(area),\n\t\t\t\t\t\t\tr1.times(c.z * s * t + r1.z * s ** 2 * t + 1 / 2 * s * t ** 2 * u1.z),\n\t\t\t\t\t\t\tu1.times(1 / 2 * c.z * t ** 2 + 1 / 2 * r1.z * s * t ** 2 + 1 / 3 * t ** 3 * u1.z),\n\t\t\t\t\t\t).times(ds),\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\tconst [vol, cx, cy, cz] = glqArray(sliceAreaAndCentroidZX2TimesDs, edgeWC.aT, edgeWC.bT, 4)\n\t\t\t\treturn [vol * this.plane.normal1.z, new V3(cx, cy, cz).times(this.plane.normal1.z)]\n\t\t\t}\n\t\t})\n\t\treturn mergeVolumeAndCentroidZX2Parts(volumeAndCentroidZX2Parts)\n\t},\n\n\t/**\n\t * Generic implementation.\n\t */\n\t[ParametricSurface.name](this: ParametricSurface, edges: Edge[]): { centroid: V3; volume: number } {\n\t\tconst dpds = this.dpds()\n\t\tconst dpdt = this.dpdt()\n\t\tconst volume = edges.map((edgeWC): [number, V3] => {\n\t\t\tconst curveWC = edgeWC.curve\n\t\t\tif (curveWC instanceof ImplicitCurve) {\n\t\t\t\tthrow new Error()\n\t\t\t} else {\n\t\t\t\tconst sliceAreaAndCentroidZX2TimesDs = (curveT: number) => {\n\t\t\t\t\t// use curve.tangent not edge.tangent, reverse edges are handled by the integration boundaries\n\t\t\t\t\tconst pWC = curveWC.at(curveT),\n\t\t\t\t\t\ttangentWC = curveWC.tangentAt(curveT)\n\t\t\t\t\tconst stOfPWC = this.stP(pWC)\n\t\t\t\t\tconst slice = (t: number) => {\n\t\t\t\t\t\tconst p = this.pST(stOfPWC.x, t)\n\t\t\t\t\t\tconst normal = dpds(stOfPWC.x, t).cross(dpdt(stOfPWC.x, t))\n\t\t\t\t\t\treturn p.z * normal.z\n\t\t\t\t\t}\n\t\t\t\t\tconst sliceIntegral0ToPWCT = glqInSteps(slice, 0, stOfPWC.y, 1)\n\t\t\t\t\t// const dt = tangentWC.dot(scalingVector)\n\t\t\t\t\tconst dt = -M4.forSys(dpds(stOfPWC.x, stOfPWC.y), dpdt(stOfPWC.x, stOfPWC.y))\n\t\t\t\t\t\t.inversed()\n\t\t\t\t\t\t.transformVector(tangentWC).x\n\t\t\t\t\tconst sliceAreaTimesDs = sliceIntegral0ToPWCT * dt\n\t\t\t\t\tconst slice2 = (t: number) => {\n\t\t\t\t\t\tconst p = this.pST(stOfPWC.x, t)\n\t\t\t\t\t\tconst normal = dpds(stOfPWC.x, t).cross(dpdt(stOfPWC.x, t))\n\t\t\t\t\t\treturn p.times(p.z * normal.z)\n\t\t\t\t\t}\n\t\t\t\t\tconst sliceIntegral0ToPWCT2 = glqV3(slice2, 0, stOfPWC.y)\n\t\t\t\t\t// const dt = tangentWC.dot(scalingVector)\n\t\t\t\t\tconst sliceCentroidZX2TimesDs = sliceIntegral0ToPWCT2.times(dt)\n\t\t\t\t\treturn [sliceAreaTimesDs, ...sliceCentroidZX2TimesDs.toArray()]\n\t\t\t\t}\n\t\t\t\tconst [vol, cx, cy, cz] = glqArray(sliceAreaAndCentroidZX2TimesDs, edgeWC.aT, edgeWC.bT, 4)\n\t\t\t\treturn [vol, new V3(cx, cy, cz)]\n\t\t\t}\n\t\t})\n\t\treturn mergeVolumeAndCentroidZX2Parts(volume)\n\t},\n\n\t/**\n\t * at(t)\n\t * |\\                                    ^\n\t * | \\ at(t).projectedOn(dir1)            \\  dir1\n\t * |  \\                                    \\\n\t * |   \\ at(t).rejectedFrom(dir1) = b\n\t * |   |\n\t * |___|\n\t *        z = 0\n\t *\n\t *\n\t * A = ((at(t) + at(t).rejectedFrom(dir1)) / 2).z * at(t).projectedOn(dir1).lengthXY()\n\t * scaling = tangentAt(t) DOT dir1.cross(V3.Z).unit()\n\t */\n\t[ProjectedCurveSurface.name](this: ProjectedCurveSurface, edges: Edge[]) {\n\t\tif (V3.Z.cross(this.dir).likeO()) return { volume: 0, centroid: V3.O }\n\t\t// normalize this.dir so it always points up\n\t\tconst upDir1 = this.dir.toLength(Math.sign(this.dir.z) || 1)\n\t\tconst scalingVector = V3.Z.cross(upDir1).unit()\n\t\t// the length of the base of the trapezoid is calculated by dotting with the baseVector\n\t\tconst baseVector = upDir1.rejectedFrom(V3.Z).unit()\n\t\t// INT[edge.at; edge.bT] (at(t) DOT dir1) * (at(t) - at(t).projectedOn(dir) / 2).z\n\t\tconst volume = edges.map((edgeWC): [number, V3] => {\n\t\t\tif (edgeWC.curve instanceof L3) {\n\t\t\t\treturn [0, V3.O]\n\t\t\t} else if (edgeWC.curve instanceof ImplicitCurve) {\n\t\t\t\treturn [0, V3.O]\n\t\t\t\t// \tconst { points, tangents } = edgeWC.curve\n\t\t\t\t// \tconst minT = edgeWC.minT,\n\t\t\t\t// \t\tmaxT = edgeWC.maxT\n\t\t\t\t// \tlet sum = 0\n\t\t\t\t// \tconst start = Math.ceil(minT + NLA_PRECISION)\n\t\t\t\t// \tconst end = Math.floor(maxT - NLA_PRECISION)\n\t\t\t\t// \tfor (let i = start; i <= end; i++) {\n\t\t\t\t// \t\tconst at = points[i],\n\t\t\t\t// \t\t\ttangent = tangents[i]\n\t\t\t\t// \t\tconst area = (at.z + at.rejectedFrom1(upDir1).z) / 2 * at.projectedOn(upDir1).dot(baseVector)\n\t\t\t\t// \t\tconst scale = tangent.dot(scalingVector)\n\t\t\t\t// \t\tsum += area * scale\n\t\t\t\t// \t}\n\t\t\t\t// \tconst f = (t: number) => {\n\t\t\t\t// \t\tconst at = edgeWC.curve.at(t),\n\t\t\t\t// \t\t\ttangent = edgeWC.curve.tangentAt(t)\n\t\t\t\t// \t\tconst area = (at.z + at.rejectedFrom1(upDir1).z) / 2 * at.projectedOn(upDir1).dot(baseVector)\n\t\t\t\t// \t\tconst scale = tangent.dot(scalingVector)\n\t\t\t\t// \t\treturn area * scale\n\t\t\t\t// \t}\n\t\t\t\t// \tsum += f(minT) * (start - minT - 0.5)\n\t\t\t\t// \tsum += f(maxT) * (maxT - end - 0.5)\n\t\t\t\t// \treturn sum * Math.sign(edgeWC.deltaT())\n\t\t\t} else {\n\t\t\t\tconst f = (curveT: number) => {\n\t\t\t\t\t// use curve.tangent not edge.tangent, reverse edges are handled by the integration boundaries\n\t\t\t\t\tconst at = edgeWC.curve.at(curveT),\n\t\t\t\t\t\ttangent = edgeWC.curve.tangentAt(curveT)\n\t\t\t\t\tconst b = at.rejectedFrom1(upDir1)\n\t\t\t\t\tconst area = at.z * b.to(at).dot(baseVector) / 2 + b.z * b.to(at).dot(baseVector) / 2\n\t\t\t\t\tconst areaCentroidA = V3.add(at.xy(), b, at).times(at.z * b.to(at).dot(baseVector) / 2 / 3)\n\t\t\t\t\tconst areaCentroidB = V3.add(at.xy(), b, b.xy()).times(b.z * b.to(at).dot(baseVector) / 2 / 3)\n\t\t\t\t\tconst scale = tangent.dot(scalingVector)\n\t\t\t\t\treturn [\n\t\t\t\t\t\tarea * scale,\n\t\t\t\t\t\t...areaCentroidA\n\t\t\t\t\t\t\t.plus(areaCentroidB)\n\t\t\t\t\t\t\t.times(scale)\n\t\t\t\t\t\t\t.schur(V(1, 1, 2)),\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\tconst [vol, cx, cy, cz] = glqArray(f, edgeWC.aT, edgeWC.bT, 4)\n\t\t\t\treturn [vol, new V3(cx, cy, cz)]\n\t\t\t}\n\t\t})\n\t\treturn mergeVolumeAndCentroidZX2Parts(volume)\n\t},\n\n\t// volume does scale linearly, so this could be done in the local coordinate system\n\t// however, shear matrices lead to point-to-plane distances having to be calculated along a vector other than\n\t// the plane normal\n\t[RotatedCurveSurface.name](this: RotatedCurveSurface, edges: Edge[]): { volume: number; centroid: V3 } {\n\t\tconst dpds = this.dpds()\n\t\tconst dpdt = this.dpdt()\n\t\tconst totalVolume = edges\n\t\t\t.map(edgeWC => {\n\t\t\t\tconst curveWC = edgeWC.curve\n\n\t\t\t\tconst f = (curveT: number) => {\n\t\t\t\t\tconst pWC = curveWC.at(curveT),\n\t\t\t\t\t\ttangentWC = curveWC.tangentAt(curveT)\n\t\t\t\t\tconst stOfPWC = this.stP(pWC)\n\t\t\t\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\t\t\t\tconst dpdtAtS0 =\n\t\t\t\t\t\tthis instanceof RotatedCurveSurface\n\t\t\t\t\t\t\t? this.curve.tangentAt(stOfPWC.y)\n\t\t\t\t\t\t\t: V(-pLC.z, 0, pLC.lengthXY())\n\t\t\t\t\t// const slice = (phi: number) => {\n\t\t\t\t\t// \tconst p = this.pST(phi, stOfPWC.y)\n\t\t\t\t\t// \tconst normal = dpds(phi, stOfPWC.y).cross(dpdt(phi, stOfPWC.y))\n\t\t\t\t\t// \treturn p.z * normal.z\n\t\t\t\t\t// }\n\t\t\t\t\t// const z = this.curve.at(stOfPWC.y).z\n\t\t\t\t\t// const r = this.curve.at(stOfPWC.y).lengthXY()\n\t\t\t\t\t// const pz =\n\t\t\t\t\t// \tthis.f1.z * r * cos(s) +\n\t\t\t\t\t// \tthis.f2.z * r * sin(s) +\n\t\t\t\t\t// \tthis.f3.z * z +\n\t\t\t\t\t// \tthis.center.z\n\t\t\t\t\t// const dpdsx = this.f1.x * r * -sin(s) + this.f2.x * r * cos(s)\n\t\t\t\t\t// const dpdsy = this.f1.y * r * -sin(s) + this.f2.y * r * cos(s)\n\t\t\t\t\t// const dpdtx = this.f1.x * dr * cos(s) + this.f2.x * dr * sin(s) + this.f3.x * dz\n\t\t\t\t\t// const dpdty = this.f1.y * dr * cos(s) + this.f2.y * dr * sin(s) + this.f3.y * dz\n\t\t\t\t\t// const normalz = dpdsx * dpdty - dpdsy * dpdtx\n\t\t\t\t\t// result = pz * normalz\n\t\t\t\t\tconst r = pLC.lengthXY(),\n\t\t\t\t\t\tz = pLC.z\n\t\t\t\t\tconst dr = dpdtAtS0.x\n\t\t\t\t\tconst dz = dpdtAtS0.z\n\t\t\t\t\tconst a = this.matrix.X.z * r,\n\t\t\t\t\t\tb = this.matrix.Y.z * r,\n\t\t\t\t\t\tc = this.matrix.Z.z * z + this.matrix.O.z\n\t\t\t\t\tconst t0 = (this.matrix.X.x * this.matrix.Y.y - this.matrix.X.y * this.matrix.Y.x) * r * dr\n\t\t\t\t\tconst t1 = (this.matrix.Y.x * this.matrix.X.y - this.matrix.Y.y * this.matrix.X.x) * r * dr\n\t\t\t\t\tconst t2 = (this.matrix.X.x * this.matrix.X.y - this.matrix.X.y * this.matrix.X.x) * r * dr\n\t\t\t\t\tconst t3 = (this.matrix.Y.x * this.matrix.Y.y - this.matrix.Y.y * this.matrix.Y.x) * r * dr\n\t\t\t\t\tconst t4 = (this.matrix.Y.x * this.matrix.Z.y - this.matrix.Y.y * this.matrix.Z.x) * r * dz\n\t\t\t\t\tconst t5 = (this.matrix.X.x * this.matrix.Z.y - this.matrix.X.y * this.matrix.Z.x) * r * dz\n\t\t\t\t\tconst sliceIntegral = (p: number) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t(6 * (c * (-t0 + t1) + a * t4 - b * t5) * p +\n\t\t\t\t\t\t\t\t3 * (3 * b * t0 - b * t1 + a * (t2 - t3) + 4 * c * t5) * cos(p) +\n\t\t\t\t\t\t\t\t3 * (3 * a * t1 - a * t0 - b * (t2 - t3) + 4 * c * t4) * sin(p) +\n\t\t\t\t\t\t\t\t3 * (a * t5 - b * t4 + c * (t2 - t3)) * cos(2 * p) +\n\t\t\t\t\t\t\t\t3 * (a * t4 + b * t5 + c * (t0 + t1)) * sin(2 * p) +\n\t\t\t\t\t\t\t\t(a * (t2 - t3) - b * (t0 + t1)) * cos(3 * p) +\n\t\t\t\t\t\t\t\t(a * (t0 + t1) + b * (t2 - t3)) * sin(3 * p)) /\n\t\t\t\t\t\t\t12\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\tconst dt = M4.forSys(dpds(stOfPWC.x, stOfPWC.y), dpdt(stOfPWC.x, stOfPWC.y))\n\t\t\t\t\t\t.inversed()\n\t\t\t\t\t\t.transformVector(tangentWC).y\n\t\t\t\t\tconst sliceIntegral0ToPWCS = sliceIntegral(stOfPWC.x) //- sliceIntegral(0) //(always 0)\n\t\t\t\t\tconst result = sliceIntegral0ToPWCS * dt\n\t\t\t\t\treturn result\n\t\t\t\t}\n\n\t\t\t\treturn gaussLegendreQuadrature24(f, edgeWC.aT, edgeWC.bT)\n\t\t\t})\n\t\t\t.sum()\n\n\t\t// calc centroid:\n\t\tconst centroidZX2Parts = edges.map(edgeWC => {\n\t\t\tconst f = (curveT: number) => {\n\t\t\t\tconst curveWC = edgeWC.curve\n\t\t\t\tconst pWC = curveWC.at(curveT),\n\t\t\t\t\ttangentWC = curveWC.tangentAt(curveT)\n\t\t\t\tconst stOfPWC = this.stP(pWC)\n\t\t\t\tconst slice = (phi: number) => {\n\t\t\t\t\tconst p = this.pST(phi, stOfPWC.y)\n\t\t\t\t\tconst normal = dpds(phi, stOfPWC.y).cross(dpdt(phi, stOfPWC.y))\n\t\t\t\t\treturn p.times(p.z * normal.z)\n\t\t\t\t}\n\t\t\t\tconst sliceIntegral0ToPWCS = glqV3(slice, 0, stOfPWC.x)\n\t\t\t\tconst dt = M4.forSys(dpds(stOfPWC.x, stOfPWC.y), dpdt(stOfPWC.x, stOfPWC.y))\n\t\t\t\t\t.inversed()\n\t\t\t\t\t.transformVector(tangentWC).y\n\t\t\t\tconst result = sliceIntegral0ToPWCS.times(dt)\n\t\t\t\treturn result\n\t\t\t}\n\n\t\t\treturn glqV3(f, edgeWC.aT, edgeWC.bT)\n\t\t})\n\t\tconst centroid = V3.add(...centroidZX2Parts)\n\t\t\t.schur(new V3(1, 1, 0.5))\n\t\t\t.div(totalVolume)\n\t\treturn { volume: totalVolume, centroid: centroid }\n\t},\n}\nZDirVolumeVisitor[SemiEllipsoidSurface.name] = ZDirVolumeVisitor[RotatedCurveSurface.name]\n\nexport function glqV3(f: (x: number) => V3, startT: number, endT: number) {\n\treturn gaussLegendre24Xs\n\t\t.reduce((val, currVal, index) => {\n\t\t\tconst x = startT + (currVal + 1) / 2 * (endT - startT)\n\t\t\treturn val.plus(f(x).times(gaussLegendre24Weights[index]))\n\t\t}, V3.O)\n\t\t.times((endT - startT) / 2)\n}\nexport function glqArray(f: (x: number) => number[], startT: number, endT: number, numEls = 3) {\n\tconst result = new Array(numEls).fill(0)\n\tfor (let i = 0; i < 24; i++) {\n\t\tconst x = startT + (gaussLegendre24Xs[i] + 1) / 2 * (endT - startT)\n\t\tconst fx = f(x)\n\t\tfor (let j = 0; j < numEls; j++) {\n\t\t\tresult[j] += fx[j] * gaussLegendre24Weights[i]\n\t\t}\n\t}\n\tfor (let j = 0; j < numEls; j++) {\n\t\tresult[j] *= (endT - startT) / 2\n\t}\n\treturn result\n}\n\nfunction mergeVolumeAndCentroidZX2Parts(volumeAndCentroidZX2Parts: [number, V3][]) {\n\tconst volume = volumeAndCentroidZX2Parts.reduce((result, [volume]) => result + volume, 0)\n\tconst weightedCentroid = V3.add(...volumeAndCentroidZX2Parts.map(([, centroidZX2]) => centroidZX2)).schur(\n\t\tnew V3(1, 1, 0.5),\n\t)\n\treturn { volume, centroid: weightedCentroid.div(volume) }\n}\n","import { assert, assertf, eq, glqInSteps, M4, NLA_PRECISION } from 'ts3dutils'\n\nimport {\n\tConicSurface,\n\tEdge,\n\tHyperbolaCurve,\n\tImplicitCurve,\n\tL3,\n\tParabolaCurve,\n\tPlaneSurface,\n\tProjectedCurveSurface,\n\tRotatedCurveSurface,\n\tSemiEllipseCurve,\n\tSemiEllipsoidSurface,\n} from '../index'\nimport { ceil, cos, floor, sign, sin } from '../math'\n\nexport const CalculateAreaVisitor = {\n\t[ConicSurface.name](this: ConicSurface, edges: Edge[]): number {\n\t\tconst dpds = this.dpds()\n\t\tconst dpdt = this.dpdt()\n\t\t// calculation cannot be done in local coordinate system, as the area doesnt scale proportionally\n\t\tconst totalArea = edges\n\t\t\t.map(edge => {\n\t\t\t\tif (\n\t\t\t\t\tedge.curve instanceof SemiEllipseCurve ||\n\t\t\t\t\tedge.curve instanceof HyperbolaCurve ||\n\t\t\t\t\tedge.curve instanceof ParabolaCurve\n\t\t\t\t) {\n\t\t\t\t\tconst f = (t: number) => {\n\t\t\t\t\t\tconst at = edge.curve.at(t),\n\t\t\t\t\t\t\ttangentWC = edge.tangentAt(t)\n\t\t\t\t\t\tconst stOfPWC = this.stP(at)\n\t\t\t\t\t\t// INTEGRATE [0; atST.y]\n\t\t\t\t\t\t//   dpds(atST.x, t) X dpdt(atST.x, t)\n\t\t\t\t\t\t// dt\n\t\t\t\t\t\t// dpdt is constant with respect to t\n\t\t\t\t\t\t// => dpdt(atST.x, 0) X (INTEGRATE [0; atST.y] dpds(atST.x, t) dt)\n\t\t\t\t\t\t// dpds(s, t) === t * dpds(s, 1)\n\t\t\t\t\t\t// => dpdt(atST.x, 0) X (1/2 t² dpds(atST.x, 1))[0; atST.y]\n\t\t\t\t\t\t// => dpdt(atST.x, 0) X dpds(atST.x, atST.y² / 2)\n\n\t\t\t\t\t\tconst ds = -M4.forSys(dpds(stOfPWC.x, stOfPWC.y), dpdt(stOfPWC.x))\n\t\t\t\t\t\t\t.inversed()\n\t\t\t\t\t\t\t.transformVector(tangentWC).x\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\tdpds(stOfPWC.x, stOfPWC.y ** 2 / 2)\n\t\t\t\t\t\t\t\t.cross(dpdt(stOfPWC.x))\n\t\t\t\t\t\t\t\t.length() * ds\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\treturn glqInSteps(f, edge.aT, edge.bT, 1)\n\t\t\t\t} else if (edge.curve instanceof L3) {\n\t\t\t\t\treturn 0\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.sum()\n\t\treturn totalArea * this.normalDir\n\t},\n\n\t[PlaneSurface.name](this: PlaneSurface, edges: Edge[]) {\n\t\tlet totalArea = 0\n\t\tconst r1 = this.right,\n\t\t\tu1 = this.up\n\t\tfor (const edge of edges) {\n\t\t\tlet edgeArea: number\n\t\t\tconst curve = edge.curve\n\t\t\tif (curve instanceof L3) {\n\t\t\t\tedgeArea = (edge.a.dot(u1) + edge.b.dot(u1)) / 2 * edge.b.to(edge.a).dot(r1)\n\t\t\t} else if (curve instanceof SemiEllipseCurve) {\n\t\t\t\t// INTEGRATE[aT; bT] (curve.at(t) * u1) * (tangent(t) * r1) dt\n\t\t\t\t// INTEGRATE[aT; bT] (u1 f1 cos t + u1 f2 sin t + u1 c) * (r1 f1 (-sin t) + r1 f2 cos t) dt\n\t\t\t\tconst { f1, f2, center } = curve\n\t\t\t\tconst a = u1.dot(f1),\n\t\t\t\t\tb = u1.dot(f2),\n\t\t\t\t\tc = u1.dot(center),\n\t\t\t\t\td = r1.dot(f1),\n\t\t\t\t\te = r1.dot(f2)\n\t\t\t\tfunction fArea(t: number) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t0.25 *\n\t\t\t\t\t\t(2 * (-b * d + a * e) * t +\n\t\t\t\t\t\t\t4 * c * d * cos(t) +\n\t\t\t\t\t\t\t4 * c * e * sin(t) +\n\t\t\t\t\t\t\t(a * d - b * e) * cos(2 * t) +\n\t\t\t\t\t\t\t(b * d + a * e) * sin(2 * t))\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tedgeArea = -(fArea(edge.bT) - fArea(edge.aT))\n\t\t\t} else if (curve instanceof ImplicitCurve) {\n\t\t\t\tthrow new Error('implement for implicitCurve')\n\t\t\t} else {\n\t\t\t\tconst dir1 = u1\n\t\t\t\tassertf(() => dir1.hasLength(1))\n\t\t\t\t// INT[aT; bT] at(t) * dir1 * tangentAt(t).rejectedFrom(dir1) dt\n\t\t\t\tconst f = (curveT: number) => {\n\t\t\t\t\tconst at = curve.at(curveT)\n\t\t\t\t\tconst tangent = curve.tangentAt(curveT)\n\t\t\t\t\tconst ds = r1.dot(tangent)\n\t\t\t\t\tconst t = u1.dot(at)\n\t\t\t\t\treturn ds * t\n\t\t\t\t}\n\t\t\t\tedgeArea = glqInSteps(f, edge.aT, edge.bT, 3)\n\t\t\t}\n\n\t\t\ttotalArea += edgeArea\n\t\t}\n\t\tassert(isFinite(totalArea))\n\t\treturn totalArea\n\t},\n\n\t[RotatedCurveSurface.name](this: RotatedCurveSurface, edges: Edge[], canApproximate = true): number {\n\t\tconst f1 = this.matrix.X,\n\t\t\tf2 = this.matrix.Y,\n\t\t\tf3 = this.matrix.Z\n\t\tconst likeVerticalSpheroid =\n\t\t\teq(f1.length(), f2.length()) &&\n\t\t\tf1.isPerpendicularTo(f2) &&\n\t\t\tf2.isPerpendicularTo(f3) &&\n\t\t\tf3.isPerpendicularTo(f1)\n\n\t\tconst areaParts = edges.map((edgeWC, ei) => {\n\t\t\tconsole.log('edge', ei, edgeWC.sce)\n\t\t\tconst curveWC = edgeWC.curve\n\t\t\tif (edgeWC.curve instanceof ImplicitCurve) {\n\t\t\t\tthrow new Error()\n\t\t\t} else {\n\t\t\t\tif (likeVerticalSpheroid) {\n\t\t\t\t\tconst f = (curveT: number) => {\n\t\t\t\t\t\tconst pWC = curveWC.at(curveT),\n\t\t\t\t\t\t\ttangent = curveWC.tangentAt(curveT)\n\t\t\t\t\t\tconst pLC = this.matrixInverse.transformPoint(pWC)\n\t\t\t\t\t\tconst { x: angleXY, y: t } = this.stP(pWC)\n\t\t\t\t\t\tconst arcRadius = this.matrix.transformVector(pLC.xy()).length()\n\t\t\t\t\t\tconst arcLength = angleXY * arcRadius\n\t\t\t\t\t\tconst dpdt = this.dpdt()(angleXY, t).unit()\n\t\t\t\t\t\tconst scaling = dpdt.dot(tangent)\n\t\t\t\t\t\treturn arcLength * scaling\n\t\t\t\t\t}\n\t\t\t\t\treturn glqInSteps(f, edgeWC.aT, edgeWC.bT, 1)\n\t\t\t\t} else {\n\t\t\t\t\tconst dpds = this.dpds(),\n\t\t\t\t\t\tdpdt = this.dpdt()\n\t\t\t\t\tconst f2 = (curveT: number) => {\n\t\t\t\t\t\tconst pWC = curveWC.at(curveT),\n\t\t\t\t\t\t\ttangentWC = curveWC.tangentAt(curveT)\n\t\t\t\t\t\tconst stPWC = this.stP(pWC)\n\t\t\t\t\t\tconst slice = (phi: number) => {\n\t\t\t\t\t\t\t//return this.dpds()(phi, st.y).length() * this.dpdt()(phi, st.y).length()\n\t\t\t\t\t\t\treturn dpds(phi, stPWC.y)\n\t\t\t\t\t\t\t\t.cross(dpdt(phi, stPWC.y))\n\t\t\t\t\t\t\t\t.length()\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// we need to do a coordinate transform from curveT to dt, as that is what we are integrating\n\t\t\t\t\t\tconst dt = M4.forSys(dpds(stPWC.x, stPWC.y), dpdt(stPWC.x, stPWC.y))\n\t\t\t\t\t\t\t.inversed()\n\t\t\t\t\t\t\t.transformVector(tangentWC).y\n\t\t\t\t\t\treturn glqInSteps(slice, 0, stPWC.x, 1) * dt\n\t\t\t\t\t}\n\t\t\t\t\treturn glqInSteps(f2, edgeWC.aT, edgeWC.bT, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\treturn areaParts.sum()\n\t},\n\n\t[ProjectedCurveSurface.name](this: ProjectedCurveSurface, edges: Edge[]): number {\n\t\t// calculation cannot be done in local coordinate system, as the area doesn't scale proportionally\n\t\tconst thisDir1 = this.dir.unit()\n\t\tconst totalArea = edges\n\t\t\t.map(edge => {\n\t\t\t\tif (edge.curve instanceof L3) {\n\t\t\t\t\treturn 0\n\t\t\t\t} else if (edge.curve instanceof ImplicitCurve) {\n\t\t\t\t\tconst { points, tangents } = edge.curve\n\t\t\t\t\tconst minT = edge.minT,\n\t\t\t\t\t\tmaxT = edge.maxT\n\t\t\t\t\tlet sum = 0\n\t\t\t\t\tconst start = ceil(minT + NLA_PRECISION)\n\t\t\t\t\tconst end = floor(maxT - NLA_PRECISION)\n\t\t\t\t\tfor (let i = start; i <= end; i++) {\n\t\t\t\t\t\tconst at = points[i],\n\t\t\t\t\t\t\ttangent = tangents[i].toLength(edge.curve.stepSize)\n\t\t\t\t\t\tconst scaling = this.normalP(at)\n\t\t\t\t\t\t\t.cross(thisDir1)\n\t\t\t\t\t\t\t.unit()\n\t\t\t\t\t\t\t.dot(tangent)\n\t\t\t\t\t\tsum += at.dot(thisDir1) * scaling\n\t\t\t\t\t}\n\t\t\t\t\tconst f = (t: number) => {\n\t\t\t\t\t\tconst at = edge.curve.at(t),\n\t\t\t\t\t\t\ttangent = edge.curve.tangentAt(t)\n\t\t\t\t\t\tconst scaling = this.normalP(at)\n\t\t\t\t\t\t\t.cross(thisDir1)\n\t\t\t\t\t\t\t.unit()\n\t\t\t\t\t\t\t.dot(tangent)\n\t\t\t\t\t\treturn at.dot(thisDir1) * scaling\n\t\t\t\t\t}\n\t\t\t\t\tsum += f(minT) * (start - minT - 0.5)\n\t\t\t\t\tsum += f(maxT) * (maxT - end - 0.5)\n\t\t\t\t\treturn sum * sign(edge.deltaT())\n\t\t\t\t} else {\n\t\t\t\t\tconst f = (t: number) => {\n\t\t\t\t\t\tconst at = edge.curve.at(t)\n\t\t\t\t\t\tconst tangent = edge.tangentAt(t)\n\t\t\t\t\t\tconst scaling = tangent.rejected1Length(thisDir1)\n\t\t\t\t\t\treturn at.dot(thisDir1) * scaling\n\t\t\t\t\t}\n\t\t\t\t\tconst val = glqInSteps(f, edge.aT, edge.bT, 1)\n\t\t\t\t\tconst sign = Math.sign(\n\t\t\t\t\t\tthis.normalP(edge.a)\n\t\t\t\t\t\t\t.cross(this.dir)\n\t\t\t\t\t\t\t.dot(edge.curve.tangentAt(edge.aT)),\n\t\t\t\t\t)\n\t\t\t\t\tassert(0 !== sign)\n\t\t\t\t\treturn val * sign\n\t\t\t\t}\n\t\t\t})\n\t\t\t.sum()\n\t\tconsole.log('totalArea', totalArea)\n\t\treturn totalArea\n\t},\n\n\t//[SemiCylinderSurface.name](this: SemiCylinderSurface, edges: Edge[]): number {\n\t//\t// calculation cannot be done in local coordinate system, as the area doesnt scale proportionally\n\t//\tconst totalArea = edges.map(edge => {\n\t//\t\tif (edge.curve instanceof SemiEllipseCurve) {\n\t//\t\t\tconst f = (t: number) => {\n\t//\t\t\t\tconst at = edge.curve.at(t), tangent = edge.tangentAt(t)\n\t//\t\t\t\treturn at.dot(this.dir) * tangent.rejectedLength(this.dir)\n\t//\t\t\t}\n\t//\t\t\t// ellipse with normal parallel to dir1 need to be counted negatively so CCW faces result in a\n\t// positive // area const sign = -Math.sign(edge.curve.normal.dot(this.dir)) const val = glqInSteps(f, edge.aT,\n\t// edge.bT, 4) return val * sign } else if (edge.curve instanceof L3) { return 0 } else { assertNever() } }).sum()\n\t// // if the cylinder faces inwards, CCW faces will have been CW, so we need to reverse that here //abs is\n\t// not an option as \"holes\" may also be passed return totalArea *sign(this.baseCurve.normal.dot(this.dir)) },\n}\nCalculateAreaVisitor[SemiEllipsoidSurface.name] = CalculateAreaVisitor[RotatedCurveSurface.name]\n","var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n","// The Bounding Box object\n\nfunction derive(v0, v1, v2, v3, t) {\n    return Math.pow(1 - t, 3) * v0 +\n        3 * Math.pow(1 - t, 2) * t * v1 +\n        3 * (1 - t) * Math.pow(t, 2) * v2 +\n        Math.pow(t, 3) * v3;\n}\n/**\n * A bounding box is an enclosing box that describes the smallest measure within which all the points lie.\n * It is used to calculate the bounding box of a glyph or text path.\n *\n * On initialization, x1/y1/x2/y2 will be NaN. Check if the bounding box is empty using `isEmpty()`.\n *\n * @exports opentype.BoundingBox\n * @class\n * @constructor\n */\nfunction BoundingBox() {\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n}\n\n/**\n * Returns true if the bounding box is empty, that is, no points have been added to the box yet.\n */\nBoundingBox.prototype.isEmpty = function() {\n    return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);\n};\n\n/**\n * Add the point to the bounding box.\n * The x1/y1/x2/y2 coordinates of the bounding box will now encompass the given point.\n * @param {number} x - The X coordinate of the point.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addPoint = function(x, y) {\n    if (typeof x === 'number') {\n        if (isNaN(this.x1) || isNaN(this.x2)) {\n            this.x1 = x;\n            this.x2 = x;\n        }\n        if (x < this.x1) {\n            this.x1 = x;\n        }\n        if (x > this.x2) {\n            this.x2 = x;\n        }\n    }\n    if (typeof y === 'number') {\n        if (isNaN(this.y1) || isNaN(this.y2)) {\n            this.y1 = y;\n            this.y2 = y;\n        }\n        if (y < this.y1) {\n            this.y1 = y;\n        }\n        if (y > this.y2) {\n            this.y2 = y;\n        }\n    }\n};\n\n/**\n * Add a X coordinate to the bounding box.\n * This extends the bounding box to include the X coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} x - The X coordinate of the point.\n */\nBoundingBox.prototype.addX = function(x) {\n    this.addPoint(x, null);\n};\n\n/**\n * Add a Y coordinate to the bounding box.\n * This extends the bounding box to include the Y coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addY = function(y) {\n    this.addPoint(null, y);\n};\n\n/**\n * Add a Bézier curve to the bounding box.\n * This extends the bounding box to include the entire Bézier.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the first control point.\n * @param {number} y1 - The Y coordinate of the first control point.\n * @param {number} x2 - The X coordinate of the second control point.\n * @param {number} y2 - The Y coordinate of the second control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addBezier = function(x0, y0, x1, y1, x2, y2, x, y) {\n    // This code is based on http://nishiohirokazu.blogspot.com/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // and https://github.com/icons8/svg-path-bounding-box\n\n    const p0 = [x0, y0];\n    const p1 = [x1, y1];\n    const p2 = [x2, y2];\n    const p3 = [x, y];\n\n    this.addPoint(x0, y0);\n    this.addPoint(x, y);\n\n    for (let i = 0; i <= 1; i++) {\n        const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n        const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n        const c = 3 * p1[i] - 3 * p0[i];\n\n        if (a === 0) {\n            if (b === 0) continue;\n            const t = -c / b;\n            if (0 < t && t < 1) {\n                if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t));\n                if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t));\n            }\n            continue;\n        }\n\n        const b2ac = Math.pow(b, 2) - 4 * c * a;\n        if (b2ac < 0) continue;\n        const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t1 && t1 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t1));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t1));\n        }\n        const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t2 && t2 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t2));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t2));\n        }\n    }\n};\n\n/**\n * Add a quadratic curve to the bounding box.\n * This extends the bounding box to include the entire quadratic curve.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the control point.\n * @param {number} y1 - The Y coordinate of the control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addQuad = function(x0, y0, x1, y1, x, y) {\n    const cp1x = x0 + 2 / 3 * (x1 - x0);\n    const cp1y = y0 + 2 / 3 * (y1 - y0);\n    const cp2x = cp1x + 1 / 3 * (x - x0);\n    const cp2y = cp1y + 1 / 3 * (y - y0);\n    this.addBezier(x0, y0, cp1x, cp1y, cp2x, cp2y, x, y);\n};\n\nexport default BoundingBox;\n","// Geometric objects\n\nimport BoundingBox from './bbox';\n\n/**\n * A bézier path containing a set of path commands similar to a SVG path.\n * Paths can be drawn on a context using `draw`.\n * @exports opentype.Path\n * @class\n * @constructor\n */\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws cubic curve\n * @function\n * curveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws cubic curve\n * @function\n * bezierCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n * @see curveTo\n */\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws quadratic curve\n * @function\n * quadraticCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws quadratic curve\n * @function\n * quadTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Closes the path\n * @function closePath\n * @memberof opentype.Path.prototype\n */\n\n/**\n * Close the path\n * @function close\n * @memberof opentype.Path.prototype\n */\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n/**\n * Add the given path or list of commands to the commands of this path.\n * @param  {Array} pathOrCommands - another opentype.Path, an opentype.BoundingBox, or an array of commands.\n */\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    } else if (pathOrCommands instanceof BoundingBox) {\n        const box = pathOrCommands;\n        this.moveTo(box.x1, box.y1);\n        this.lineTo(box.x2, box.y1);\n        this.lineTo(box.x2, box.y2);\n        this.lineTo(box.x1, box.y2);\n        this.close();\n        return;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n/**\n * Calculate the bounding box of the path.\n * @returns {opentype.BoundingBox}\n */\nPath.prototype.getBoundingBox = function() {\n    const box = new BoundingBox();\n\n    let startX = 0;\n    let startY = 0;\n    let prevX = 0;\n    let prevY = 0;\n    for (let i = 0; i < this.commands.length; i++) {\n        const cmd = this.commands[i];\n        switch (cmd.type) {\n            case 'M':\n                box.addPoint(cmd.x, cmd.y);\n                startX = prevX = cmd.x;\n                startY = prevY = cmd.y;\n                break;\n            case 'L':\n                box.addPoint(cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Q':\n                box.addQuad(prevX, prevY, cmd.x1, cmd.y1, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'C':\n                box.addBezier(prevX, prevY, cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Z':\n                prevX = startX;\n                prevY = startY;\n                break;\n            default:\n                throw new Error('Unexpected path command ' + cmd.type);\n        }\n    }\n    if (box.isEmpty()) {\n        box.addPoint(0, 0);\n    }\n    return box;\n};\n\n/**\n * Draw the path to a 2D context.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context.\n */\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n/**\n * Convert the Path to a string of path data instructions\n * See http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        let s = '';\n        for (let i = 0; i < arguments.length; i += 1) {\n            const v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    let d = '';\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n/**\n * Convert the path to an SVG <path> element, as a string.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toSVG = function(decimalPlaces) {\n    let svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill && this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\n/**\n * Convert the path to a DOM element.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {SVGPathElement}\n */\nPath.prototype.toDOMElement = function(decimalPlaces) {\n    const temporaryPath = this.toPathData(decimalPlaces);\n    const newPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n    newPath.setAttribute('d', temporaryPath);\n\n    return newPath;\n};\n\nexport default Path;\n","// Run-time checking of preconditions.\n\nfunction fail(message) {\n    throw new Error(message);\n}\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nfunction argument(predicate, message) {\n    if (!predicate) {\n        fail(message);\n    }\n}\n\nexport { fail, argument, argument as assert };\nexport default { fail, argument, assert: argument };\n","// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\nimport check from './check';\n\nconst LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nconst LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\n/**\n * @exports opentype.decode\n * @class\n */\nconst decode = {};\n/**\n * @exports opentype.encode\n * @class\n */\nconst encode = {};\n/**\n * @exports opentype.sizeOf\n * @class\n */\nconst sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n/**\n * Convert an 8-bit unsigned integer to a list of 1 byte.\n * @param {number}\n * @returns {Array}\n */\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n/**\n * @constant\n * @type {number}\n */\nsizeOf.BYTE = constant(1);\n\n/**\n * Convert a 8-bit signed integer to a list of 1 byte.\n * @param {string}\n * @returns {Array}\n */\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.CHAR = constant(1);\n\n/**\n * Convert an ASCII string to a list of bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.CHARARRAY = function(v) {\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        b[i] = v.charCodeAt(i);\n    }\n\n    return b;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n/**\n * Convert a 16-bit unsigned integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.USHORT = constant(2);\n\n/**\n * Convert a 16-bit signed integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.SHORT = constant(2);\n\n/**\n * Convert a 24-bit unsigned integer to a list of 3 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.UINT24 = constant(3);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.ULONG = constant(4);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n/**\n * Convert a 32-bit Apple Mac timestamp integer to a list of 8 bytes, 64-bit timestamp.\n * @param {number}\n * @returns {Array}\n */\nencode.LONGDATETIME = function(v) {\n    return [0, 0, 0, 0, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONGDATETIME = constant(8);\n\n/**\n * Convert a 4-char tag to a list of 4 bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\n/**\n * Convert a numeric operand or charstring number to a variable-size list of bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n/**\n * Convert a signed number between -32768 and +32767 to a three-byte value.\n * This ensures we always use three bytes, but is not the most compact format.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER16 = constant(3);\n\n/**\n * Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.\n * This is useful if you want to be sure you always use four bytes,\n * at the expense of wasting a few bytes for smaller numbers.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER32 = constant(5);\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.REAL = function(v) {\n    let value = v.toString();\n\n    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n    // This code converts it back to a number without the epsilon.\n    const m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n    if (m) {\n        const epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(v * epsilon) / epsilon).toString();\n    }\n\n    let nibbles = '';\n    for (let i = 0, ii = value.length; i < ii; i += 1) {\n        const c = value[i];\n        if (c === 'e') {\n            nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (c === '.') {\n            nibbles += 'a';\n        } else if (c === '-') {\n            nibbles += 'e';\n        } else {\n            nibbles += c;\n        }\n    }\n\n    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n    const out = [30];\n    for (let i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n    }\n\n    return out;\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.REAL = function(v) {\n    return encode.REAL(v).length;\n};\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF8 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes;\n    for (let j = 0; j < numChars; j++, offset += 1) {\n        codePoints[j] = data.getUint8(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF16 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes / 2;\n    for (let j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * Convert a JavaScript string to UTF16-BE.\n * @param {string}\n * @returns {Array}\n */\nencode.UTF16 = function(v) {\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        const codepoint = v.charCodeAt(i);\n        b[b.length] = (codepoint >> 8) & 0xFF;\n        b[b.length] = codepoint & 0xFF;\n    }\n\n    return b;\n};\n\n/**\n * @param {string}\n * @returns {number}\n */\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comparatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\n/**\n * @private\n */\nconst eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n    '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n    'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n    'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n    'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n    'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n    'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n    'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n    'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n    'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n    'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n/**\n * Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n * string, or 'undefined' if the encoding is unsupported. For example, we do\n * not support Chinese, Japanese or Korean because these would need large\n * mapping tables.\n * @param {DataView} dataView\n * @param {number} offset\n * @param {number} dataLength\n * @param {string} encoding\n * @returns {string}\n */\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    const table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    let result = '';\n    for (let i = 0; i < dataLength; i++) {\n        const c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// Helper function for encode.MACSTRING. Returns a dictionary for mapping\n// Unicode character codes to their 8-bit MacOS equivalent. This table\n// is not exactly a super cheap data structure, but we do not care because\n// encoding Macintosh strings is only rarely needed in typical applications.\nconst macEncodingTableCache = typeof WeakMap === 'function' && new WeakMap();\nlet macEncodingCacheKeys;\nconst getMacEncodingTable = function (encoding) {\n    // Since we use encoding as a cache key for WeakMap, it has to be\n    // a String object and not a literal. And at least on NodeJS 2.10.1,\n    // WeakMap requires that the same String instance is passed for cache hits.\n    if (!macEncodingCacheKeys) {\n        macEncodingCacheKeys = {};\n        for (let e in eightBitMacEncodings) {\n            /*jshint -W053 */  // Suppress \"Do not use String as a constructor.\"\n            macEncodingCacheKeys[e] = new String(e);\n        }\n    }\n\n    const cacheKey = macEncodingCacheKeys[encoding];\n    if (cacheKey === undefined) {\n        return undefined;\n    }\n\n    // We can't do \"if (cache.has(key)) {return cache.get(key)}\" here:\n    // since garbage collection may run at any time, it could also kick in\n    // between the calls to cache.has() and cache.get(). In that case,\n    // we would return 'undefined' even though we do support the encoding.\n    if (macEncodingTableCache) {\n        const cachedTable = macEncodingTableCache.get(cacheKey);\n        if (cachedTable !== undefined) {\n            return cachedTable;\n        }\n    }\n\n    const decodingTable = eightBitMacEncodings[encoding];\n    if (decodingTable === undefined) {\n        return undefined;\n    }\n\n    const encodingTable = {};\n    for (let i = 0; i < decodingTable.length; i++) {\n        encodingTable[decodingTable.charCodeAt(i)] = i + 0x80;\n    }\n\n    if (macEncodingTableCache) {\n        macEncodingTableCache.set(cacheKey, encodingTable);\n    }\n\n    return encodingTable;\n};\n\n/**\n * Encodes an old-style Macintosh string. Returns a byte array upon success.\n * If the requested encoding is unsupported, or if the input string contains\n * a character that cannot be expressed in the encoding, the function returns\n * 'undefined'.\n * @param {string} str\n * @param {string} encoding\n * @returns {Array}\n */\nencode.MACSTRING = function(str, encoding) {\n    const table = getMacEncodingTable(encoding);\n    if (table === undefined) {\n        return undefined;\n    }\n\n    const result = [];\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charCodeAt(i);\n\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c >= 0x80) {\n            c = table[c];\n            if (c === undefined) {\n                // str contains a Unicode character that cannot be encoded\n                // in the requested encoding.\n                return undefined;\n            }\n        }\n        result[i] = c;\n        // result.push(c);\n    }\n\n    return result;\n};\n\n/**\n * @param {string} str\n * @param {string} encoding\n * @returns {number}\n */\nsizeOf.MACSTRING = function(str, encoding) {\n    const b = encode.MACSTRING(str, encoding);\n    if (b !== undefined) {\n        return b.length;\n    } else {\n        return 0;\n    }\n};\n\n// Helper for encode.VARDELTAS\nfunction isByteEncodable(value) {\n    return value >= -128 && value <= 127;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsZeroes(deltas, pos, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    while (pos < numDeltas && runLength < 64 && deltas[pos] === 0) {\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x80 | (runLength - 1));\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsBytes(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n        if (!isByteEncodable(value)) {\n            break;\n        }\n\n        // Within a byte-encoded run of deltas, a single zero is best\n        // stored literally as 0x00 value. However, if we have two or\n        // more zeroes in a sequence, it is better to start a new run.\n        // Fore example, the sequence of deltas [15, 15, 0, 15, 15]\n        // becomes 6 bytes (04 0F 0F 00 0F 0F) when storing the zero\n        // within the current run, but 7 bytes (01 0F 0F 80 01 0F 0F)\n        // when starting a new run.\n        if (value === 0 && pos + 1 < numDeltas && deltas[pos + 1] === 0) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(runLength - 1);\n    for (let i = offset; i < pos; ++i) {\n        result.push((deltas[i] + 256) & 0xff);\n    }\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsWords(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n\n        // Within a word-encoded run of deltas, it is easiest to start\n        // a new run (with a different encoding) whenever we encounter\n        // a zero value. For example, the sequence [0x6666, 0, 0x7777]\n        // needs 7 bytes when storing the zero inside the current run\n        // (42 66 66 00 00 77 77), and equally 7 bytes when starting a\n        // new run (40 66 66 80 40 77 77).\n        if (value === 0) {\n            break;\n        }\n\n        // Within a word-encoded run of deltas, a single value in the\n        // range (-128..127) should be encoded within the current run\n        // because it is more compact. For example, the sequence\n        // [0x6666, 2, 0x7777] becomes 7 bytes when storing the value\n        // literally (42 66 66 00 02 77 77), but 8 bytes when starting\n        // a new run (40 66 66 00 02 40 77 77).\n        if (isByteEncodable(value) && pos + 1 < numDeltas && isByteEncodable(deltas[pos + 1])) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x40 | (runLength - 1));\n    for (let i = offset; i < pos; ++i) {\n        const val = deltas[i];\n        result.push(((val + 0x10000) >> 8) & 0xff, (val + 0x100) & 0xff);\n    }\n    return pos;\n}\n\n/**\n * Encode a list of variation adjustment deltas.\n *\n * Variation adjustment deltas are used in ‘gvar’ and ‘cvar’ tables.\n * They indicate how points (in ‘gvar’) or values (in ‘cvar’) get adjusted\n * when generating instances of variation fonts.\n *\n * @see https://www.microsoft.com/typography/otspec/gvar.htm\n * @see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6gvar.html\n * @param {Array}\n * @return {Array}\n */\nencode.VARDELTAS = function(deltas) {\n    let pos = 0;\n    const result = [];\n    while (pos < deltas.length) {\n        const value = deltas[pos];\n        if (value === 0) {\n            pos = encodeVarDeltaRunAsZeroes(deltas, pos, result);\n        } else if (value >= -128 && value <= 127) {\n            pos = encodeVarDeltaRunAsBytes(deltas, pos, result);\n        } else {\n            pos = encodeVarDeltaRunAsWords(deltas, pos, result);\n        }\n    }\n    return result;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\n/**\n * @param {Array} l\n * @returns {Array}\n */\nencode.INDEX = function(l) {\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offsets, then again to encode the offsets using the fitting data type.\n    let offset = 1; // First offset is always 1.\n    const offsets = [offset];\n    const data = [];\n    for (let i = 0; i < l.length; i += 1) {\n        const v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    const encodedOffsets = [];\n    const offSize = (1 + Math.floor(Math.log(offset) / Math.log(2)) / 8) | 0;\n    const offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (let i = 0; i < offsets.length; i += 1) {\n        const encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n/**\n * Convert an object to a CFF DICT structure.\n * The keys should be numeric.\n * The values should be objects containing name / type / value.\n * @param {Object} m\n * @returns {Array}\n */\nencode.DICT = function(m) {\n    let d = [];\n    const keys = Object.keys(m);\n    const length = keys.length;\n\n    for (let i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        const k = parseInt(keys[i], 0);\n        const v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\n/**\n * @param {Array} v\n * @param {string}\n * @returns {Array}\n */\nencode.OPERAND = function(v, type) {\n    let d = [];\n    if (Array.isArray(type)) {\n        for (let i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else if (type === 'number') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'real') {\n            d = d.concat(encode.REAL(v));\n        } else {\n            throw new Error('Unknown operand type ' + type);\n            // FIXME Add support for booleans\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nconst wmm = typeof WeakMap === 'function' && new WeakMap();\n\n/**\n * Convert a list of CharString operations to bytes.\n * @param {Array}\n * @returns {Array}\n */\nencode.CHARSTRING = function(ops) {\n    // See encode.MACSTRING for why we don't do \"if (wmm && wmm.has(ops))\".\n    if (wmm) {\n        const cachedValue = wmm.get(ops);\n        if (cachedValue !== undefined) {\n            return cachedValue;\n        }\n    }\n\n    let d = [];\n    const length = ops.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n/**\n * Convert an object containing name / type / value to bytes.\n * @param {Object}\n * @returns {Array}\n */\nencode.OBJECT = function(v) {\n    const encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.OBJECT = function(v) {\n    const sizeOfFunction = sizeOf[v.type];\n    check.argument(sizeOfFunction !== undefined, 'No sizeOf function for type ' + v.type);\n    return sizeOfFunction(v.value);\n};\n\n/**\n * Convert a table object to bytes.\n * A table contains a list of fields containing the metadata (name, type and default value).\n * The table itself has the field values set as attributes.\n * @param {opentype.Table}\n * @returns {Array}\n */\nencode.TABLE = function(table) {\n    let d = [];\n    const length = table.fields.length;\n    const subtables = [];\n    const subtableOffsets = [];\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        const bytes = encodingFunction(value);\n\n        if (field.type === 'TABLE') {\n            subtableOffsets.push(d.length);\n            d = d.concat([0, 0]);\n            subtables.push(bytes);\n        } else {\n            d = d.concat(bytes);\n        }\n    }\n\n    for (let i = 0; i < subtables.length; i += 1) {\n        const o = subtableOffsets[i];\n        const offset = d.length;\n        check.argument(offset < 65536, 'Table ' + table.tableName + ' too big.');\n        d[o] = offset >> 8;\n        d[o + 1] = offset & 0xff;\n        d = d.concat(subtables[i]);\n    }\n\n    return d;\n};\n\n/**\n * @param {opentype.Table}\n * @returns {number}\n */\nsizeOf.TABLE = function(table) {\n    let numBytes = 0;\n    const length = table.fields.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const sizeOfFunction = sizeOf[field.type];\n        check.argument(sizeOfFunction !== undefined, 'No sizeOf function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        numBytes += sizeOfFunction(value);\n\n        // Subtables take 2 more bytes for offsets.\n        if (field.type === 'TABLE') {\n            numBytes += 2;\n        }\n    }\n\n    return numBytes;\n};\n\nencode.RECORD = encode.TABLE;\nsizeOf.RECORD = sizeOf.TABLE;\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexport { decode, encode, sizeOf };\n","// Table metadata\n\nimport check from './check';\nimport { encode, sizeOf } from './types';\n\n/**\n * @exports opentype.Table\n * @class\n * @param {string} tableName\n * @param {Array} fields\n * @param {Object} options\n * @constructor\n */\nfunction Table(tableName, fields, options) {\n    for (let i = 0; i < fields.length; i += 1) {\n        const field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        const optionKeys = Object.keys(options);\n        for (let i = 0; i < optionKeys.length; i += 1) {\n            const k = optionKeys[i];\n            const v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\n/**\n * Encodes the table and returns an array of bytes\n * @return {Array}\n */\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\n/**\n * Get the size of the table.\n * @return {number}\n */\nTable.prototype.sizeOf = function() {\n    return sizeOf.TABLE(this);\n};\n\n/**\n * @private\n */\nfunction ushortList(itemName, list, count) {\n    if (count === undefined) {\n        count = list.length;\n    }\n    const fields = new Array(list.length + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < list.length; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'USHORT', value: list[i]};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction tableList(itemName, records, itemCallback) {\n    const count = records.length;\n    const fields = new Array(count + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'TABLE', value: itemCallback(records[i], i)};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction recordList(itemName, records, itemCallback) {\n    const count = records.length;\n    let fields = [];\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields = fields.concat(itemCallback(records[i], i));\n    }\n    return fields;\n}\n\n// Common Layout Tables\n\n/**\n * @exports opentype.Coverage\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction Coverage(coverageTable) {\n    if (coverageTable.format === 1) {\n        Table.call(this, 'coverageTable',\n            [{name: 'coverageFormat', type: 'USHORT', value: 1}]\n            .concat(ushortList('glyph', coverageTable.glyphs))\n        );\n    } else {\n        check.assert(false, 'Can\\'t create coverage table format 2 yet.');\n    }\n}\nCoverage.prototype = Object.create(Table.prototype);\nCoverage.prototype.constructor = Coverage;\n\nfunction ScriptList(scriptListTable) {\n    Table.call(this, 'scriptListTable',\n        recordList('scriptRecord', scriptListTable, function(scriptRecord, i) {\n            const script = scriptRecord.script;\n            let defaultLangSys = script.defaultLangSys;\n            check.assert(!!defaultLangSys, 'Unable to write GSUB: script ' + scriptRecord.tag + ' has no default language system.');\n            return [\n                {name: 'scriptTag' + i, type: 'TAG', value: scriptRecord.tag},\n                {name: 'script' + i, type: 'TABLE', value: new Table('scriptTable', [\n                    {name: 'defaultLangSys', type: 'TABLE', value: new Table('defaultLangSys', [\n                        {name: 'lookupOrder', type: 'USHORT', value: 0},\n                        {name: 'reqFeatureIndex', type: 'USHORT', value: defaultLangSys.reqFeatureIndex}]\n                        .concat(ushortList('featureIndex', defaultLangSys.featureIndexes)))}\n                    ].concat(recordList('langSys', script.langSysRecords, function(langSysRecord, i) {\n                        const langSys = langSysRecord.langSys;\n                        return [\n                            {name: 'langSysTag' + i, type: 'TAG', value: langSysRecord.tag},\n                            {name: 'langSys' + i, type: 'TABLE', value: new Table('langSys', [\n                                {name: 'lookupOrder', type: 'USHORT', value: 0},\n                                {name: 'reqFeatureIndex', type: 'USHORT', value: langSys.reqFeatureIndex}\n                                ].concat(ushortList('featureIndex', langSys.featureIndexes)))}\n                        ];\n                    })))}\n            ];\n        })\n    );\n}\nScriptList.prototype = Object.create(Table.prototype);\nScriptList.prototype.constructor = ScriptList;\n\n/**\n * @exports opentype.FeatureList\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction FeatureList(featureListTable) {\n    Table.call(this, 'featureListTable',\n        recordList('featureRecord', featureListTable, function(featureRecord, i) {\n            const feature = featureRecord.feature;\n            return [\n                {name: 'featureTag' + i, type: 'TAG', value: featureRecord.tag},\n                {name: 'feature' + i, type: 'TABLE', value: new Table('featureTable', [\n                    {name: 'featureParams', type: 'USHORT', value: feature.featureParams},\n                    ].concat(ushortList('lookupListIndex', feature.lookupListIndexes)))}\n            ];\n        })\n    );\n}\nFeatureList.prototype = Object.create(Table.prototype);\nFeatureList.prototype.constructor = FeatureList;\n\n/**\n * @exports opentype.LookupList\n * @class\n * @param {opentype.Table}\n * @param {Object}\n * @constructor\n * @extends opentype.Table\n */\nfunction LookupList(lookupListTable, subtableMakers) {\n    Table.call(this, 'lookupListTable', tableList('lookup', lookupListTable, function(lookupTable) {\n        let subtableCallback = subtableMakers[lookupTable.lookupType];\n        check.assert(!!subtableCallback, 'Unable to write GSUB lookup type ' + lookupTable.lookupType + ' tables.');\n        return new Table('lookupTable', [\n            {name: 'lookupType', type: 'USHORT', value: lookupTable.lookupType},\n            {name: 'lookupFlag', type: 'USHORT', value: lookupTable.lookupFlag}\n        ].concat(tableList('subtable', lookupTable.subtables, subtableCallback)));\n    }));\n}\nLookupList.prototype = Object.create(Table.prototype);\nLookupList.prototype.constructor = LookupList;\n\n// Record = same as Table, but inlined (a Table has an offset and its data is further in the stream)\n// Don't use offsets inside Records (probable bug), only in Tables.\nexport default {\n    Table,\n    Record: Table,\n    Coverage,\n    ScriptList,\n    FeatureList,\n    LookupList,\n    ushortList,\n    tableList,\n    recordList,\n};\n","// Parsing utility functions\n\nimport check from './check';\n\n// Retrieve an unsigned byte from the DataView.\nfunction getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getUShort(dataView, offset) {\n    return dataView.getUint16(offset, false);\n}\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getShort(dataView, offset) {\n    return dataView.getInt16(offset, false);\n}\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nfunction getULong(dataView, offset) {\n    return dataView.getUint32(offset, false);\n}\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nfunction getFixed(dataView, offset) {\n    const decimal = dataView.getInt16(offset, false);\n    const fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n}\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nfunction getTag(dataView, offset) {\n    let tag = '';\n    for (let i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n}\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nfunction getOffset(dataView, offset, offSize) {\n    let v = 0;\n    for (let i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n}\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nfunction getBytes(dataView, startOffset, endOffset) {\n    const bytes = [];\n    for (let i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n}\n\n// Convert the list of bytes to a string.\nfunction bytesToString(bytes) {\n    let s = '';\n    for (let i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n}\n\nconst typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    const v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    const v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    const v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    const v = getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseFixed = function() {\n    const v = getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseString = function(length) {\n    const dataView = this.data;\n    const offset = this.offset + this.relativeOffset;\n    let string = '';\n    this.relativeOffset += length;\n    for (let i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\n// + Since until 2038 those bits will be filled by zeros we can ignore them.\nParser.prototype.parseLongDateTime = function() {\n    let v = getULong(this.data, this.offset + this.relativeOffset + 4);\n    // Subtract seconds between 01/01/1904 and 01/01/1970\n    // to convert Apple Mac timestamp to Standard Unix timestamp\n    v -= 2082844800;\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseVersion = function() {\n    const major = getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // This returns the correct number if minor = 0xN000 where N is 0-9\n    const minor = getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    return major + minor / 0x1000 / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\n///// Parsing lists and records ///////////////////////////////\n\n// Parse a list of 16 bit unsigned integers. The length of the list can be read on the stream\n// or provided as an argument.\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    if (count === undefined) { count = this.parseUShort(); }\n    const offsets = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\n// Parses a list of 16 bit signed integers.\nParser.prototype.parseShortList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getInt16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return list;\n};\n\n// Parses a list of bytes.\nParser.prototype.parseByteList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getUint8(offset++);\n    }\n\n    this.relativeOffset += count;\n    return list;\n};\n\n/**\n * Parse a list of items.\n * Record count is optional, if omitted it is read from the stream.\n * itemCallback is one of the Parser methods.\n */\nParser.prototype.parseList = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseUShort();\n    }\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\n/**\n * Parse a list of records.\n * Record count is optional, if omitted it is read from the stream.\n * Example of recordDescription: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\n */\nParser.prototype.parseRecordList = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseUShort();\n    }\n    const records = new Array(count);\n    const fields = Object.keys(recordDescription);\n    for (let i = 0; i < count; i++) {\n        const rec = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\n// Parse a data structure into an object\n// Example of description: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\nParser.prototype.parseStruct = function(description) {\n    if (typeof description === 'function') {\n        return description.call(this);\n    } else {\n        const fields = Object.keys(description);\n        const struct = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = description[fieldName];\n            struct[fieldName] = fieldType.call(this);\n        }\n        return struct;\n    }\n};\n\nParser.prototype.parsePointer = function(description) {\n    const structOffset = this.parseOffset16();\n    if (structOffset > 0) {                         // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\n/**\n * Parse a list of offsets to lists of 16-bit integers,\n * or a list of offsets to lists of offsets to any kind of items.\n * If itemCallback is not provided, a list of list of UShort is assumed.\n * If provided, itemCallback is called on each item and must parse the item.\n * See examples in tables/gsub.js\n */\nParser.prototype.parseListOfLists = function(itemCallback) {\n    const offsets = this.parseOffset16List();\n    const count = offsets.length;\n    const relativeOffset = this.relativeOffset;\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const start = offsets[i];\n        if (start === 0) {                  // NULL offset\n            list[i] = undefined;            // Add i as owned property to list. Convenient with assert.\n            continue;\n        }\n        this.relativeOffset = start;\n        if (itemCallback) {\n            const subOffsets = this.parseOffset16List();\n            const subList = new Array(subOffsets.length);\n            for (let j = 0; j < subOffsets.length; j++) {\n                this.relativeOffset = start + subOffsets[j];\n                subList[j] = itemCallback.call(this);\n            }\n            list[i] = subList;\n        } else {\n            list[i] = this.parseUShortList();\n        }\n    }\n    this.relativeOffset = relativeOffset;\n    return list;\n};\n\n///// Complex tables parsing //////////////////////////////////\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n// parser.offset must point to the start of the table containing the coverage.\nParser.prototype.parseCoverage = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    const count = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            glyphs: this.parseUShortList(count)\n        };\n    } else if (format === 2) {\n        const ranges = new Array(count);\n        for (let i = 0; i < count; i++) {\n            ranges[i] = {\n                start: this.parseUShort(),\n                end: this.parseUShort(),\n                index: this.parseUShort()\n            };\n        }\n        return {\n            format: 2,\n            ranges: ranges\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': Coverage format must be 1 or 2.');\n};\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\nParser.prototype.parseClassDef = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            startGlyph: this.parseUShort(),\n            classes: this.parseUShortList()\n        };\n    } else if (format === 2) {\n        return {\n            format: 2,\n            ranges: this.parseRecordList({\n                start: Parser.uShort,\n                end: Parser.uShort,\n                classId: Parser.uShort\n            })\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': ClassDef format must be 1 or 2.');\n};\n\n///// Static methods ///////////////////////////////////\n// These convenience methods can be used as callbacks and should be called with \"this\" context set to a Parser instance.\n\nParser.list = function(count, itemCallback) {\n    return function() {\n        return this.parseList(count, itemCallback);\n    };\n};\n\nParser.recordList = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList(count, recordDescription);\n    };\n};\n\nParser.pointer = function(description) {\n    return function() {\n        return this.parsePointer(description);\n    };\n};\n\nParser.tag = Parser.prototype.parseTag;\nParser.byte = Parser.prototype.parseByte;\nParser.uShort = Parser.offset16 = Parser.prototype.parseUShort;\nParser.uShortList = Parser.prototype.parseUShortList;\nParser.struct = Parser.prototype.parseStruct;\nParser.coverage = Parser.prototype.parseCoverage;\nParser.classDef = Parser.prototype.parseClassDef;\n\n///// Script, Feature, Lookup lists ///////////////////////////////////////////////\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n\nconst langSysTable = {\n    reserved: Parser.uShort,\n    reqFeatureIndex: Parser.uShort,\n    featureIndexes: Parser.uShortList\n};\n\nParser.prototype.parseScriptList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        script: Parser.pointer({\n            defaultLangSys: Parser.pointer(langSysTable),\n            langSysRecords: Parser.recordList({\n                tag: Parser.tag,\n                langSys: Parser.pointer(langSysTable)\n            })\n        })\n    }));\n};\n\nParser.prototype.parseFeatureList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        feature: Parser.pointer({\n            featureParams: Parser.offset16,\n            lookupListIndexes: Parser.uShortList\n        })\n    }));\n};\n\nParser.prototype.parseLookupList = function(lookupTableParsers) {\n    return this.parsePointer(Parser.list(Parser.pointer(function() {\n        const lookupType = this.parseUShort();\n        check.argument(1 <= lookupType && lookupType <= 8, 'GSUB lookup type ' + lookupType + ' unknown.');\n        const lookupFlag = this.parseUShort();\n        const useMarkFilteringSet = lookupFlag & 0x10;\n        return {\n            lookupType: lookupType,\n            lookupFlag: lookupFlag,\n            subtables: this.parseList(Parser.pointer(lookupTableParsers[lookupType])),\n            markFilteringSet: useMarkFilteringSet ? this.parseUShort() : undefined\n        };\n    })));\n};\n\nexport default {\n    getByte,\n    getCard8: getByte,\n    getUShort,\n    getCard16: getUShort,\n    getShort,\n    getULong,\n    getFixed,\n    getTag,\n    getOffset,\n    getBytes,\n    bytesToString,\n    Parser,\n};\n\nexport { Parser };\n","// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction parseCmapTableFormat12(cmap, p) {\n    //Skip reserved.\n    p.parseUShort();\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseULong();\n    cmap.language = p.parseULong();\n\n    let groupCount;\n    cmap.groupCount = groupCount = p.parseULong();\n    cmap.glyphIndexMap = {};\n\n    for (let i = 0; i < groupCount; i += 1) {\n        const startCharCode = p.parseULong();\n        const endCharCode = p.parseULong();\n        let startGlyphId = p.parseULong();\n\n        for (let c = startCharCode; c <= endCharCode; c += 1) {\n            cmap.glyphIndexMap[c] = startGlyphId;\n            startGlyphId++;\n        }\n    }\n}\n\nfunction parseCmapTableFormat4(cmap, p, data, start, offset) {\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    let segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n    const endCountParser = new parse.Parser(data, start + offset + 14);\n    const startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    const idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    const idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    let glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (let i = 0; i < segCount - 1; i += 1) {\n        let glyphIndex;\n        const endCount = endCountParser.parseUShort();\n        const startCount = startCountParser.parseUShort();\n        const idDelta = idDeltaParser.parseShort();\n        const idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (let c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n}\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4 and 12.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    const cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 3\" table. This is a Windows format.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    let offset = -1;\n    for (let i = cmap.numTables - 1; i >= 0; i -= 1) {\n        const platformId = parse.getUShort(data, start + 4 + (i * 8));\n        const encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if (platformId === 3 && (encodingId === 0 || encodingId === 1 || encodingId === 10)) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support.\n        throw new Error('No valid cmap sub-tables found.');\n    }\n\n    const p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n\n    if (cmap.format === 12) {\n        parseCmapTableFormat12(cmap, p);\n    } else if (cmap.format === 4) {\n        parseCmapTableFormat4(cmap, p, data, start, offset);\n    } else {\n        throw new Error('Only format 4 and 12 cmap tables are supported (found format ' + cmap.format + ').');\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\nfunction makeCmapTable(glyphs) {\n    const t = new table.Table('cmap', [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: 1},\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: 12},\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    t.segments = [];\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        for (let j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function(a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    let segCount;\n    segCount = t.segments.length;\n    t.segCountX2 = segCount * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log(segCount) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    // Set up parallel segment arrays.\n    let endCounts = [];\n    let startCounts = [];\n    let idDeltas = [];\n    let idRangeOffsets = [];\n    let glyphIds = [];\n\n    for (let i = 0; i < segCount; i += 1) {\n        const segment = t.segments[i];\n        endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n        startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n        idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n        idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n        if (segment.glyphId !== undefined) {\n            glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n        }\n    }\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    return t;\n}\n\nexport default { parse: parseCmapTable, make: makeCmapTable };\n","// Glyph encoding\n\nconst cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nconst cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nconst cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nconst standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n/**\n * This is the encoding used for fonts created from scratch.\n * It loops through all glyphs and finds the appropriate unicode value.\n * Since it's linear time, other encodings will be faster.\n * @exports opentype.DefaultEncoding\n * @class\n * @constructor\n * @param {opentype.Font}\n */\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    const code = c.charCodeAt(0);\n    const glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (let i = 0; i < glyphs.length; i += 1) {\n            const glyph = glyphs.get(i);\n            for (let j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    }\n    return null;\n};\n\n/**\n * @exports opentype.CmapEncoding\n * @class\n * @constructor\n * @param {Object} cmap - a object with the cmap encoded data\n */\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\n/**\n * @param  {string} c - the character\n * @return {number} The glyph index.\n */\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.charCodeAt(0)] || 0;\n};\n\n/**\n * @exports opentype.CffEncoding\n * @class\n * @constructor\n * @param {string} encoding - The encoding\n * @param {Array} charset - The character set.\n */\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\n/**\n * @param  {string} s - The character\n * @return {number} The index.\n */\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    const code = s.charCodeAt(0);\n    const charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\n/**\n * @exports opentype.GlyphNames\n * @class\n * @constructor\n * @param {Object} post\n */\nfunction GlyphNames(post) {\n    switch (post.version) {\n        case 1:\n            this.names = standardNames.slice();\n            break;\n        case 2:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] < standardNames.length) {\n                    this.names[i] = standardNames[post.glyphNameIndex[i]];\n                } else {\n                    this.names[i] = post.names[post.glyphNameIndex[i] - standardNames.length];\n                }\n            }\n\n            break;\n        case 2.5:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                this.names[i] = standardNames[i + post.glyphNameIndex[i]];\n            }\n\n            break;\n        case 3:\n            this.names = [];\n            break;\n        default:\n            this.names = [];\n            break;\n    }\n}\n\n/**\n * Gets the index of a glyph by name.\n * @param  {string} name - The glyph name\n * @return {number} The index\n */\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\n/**\n * @param  {number} gid\n * @return {string}\n */\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\n/**\n * @alias opentype.addGlyphNames\n * @param {opentype.Font}\n */\nfunction addGlyphNames(font) {\n    let glyph;\n    const glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    const charCodes = Object.keys(glyphIndexMap);\n\n    for (let i = 0; i < charCodes.length; i += 1) {\n        const c = charCodes[i];\n        const glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs.get(glyphIndex);\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs.get(i);\n        if (font.cffEncoding) {\n            if (font.isCIDFont) {\n                glyph.name = 'gid' + i;\n            } else {\n                glyph.name = font.cffEncoding.charset[i];\n            }\n        } else if (font.glyphNames.names) {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nexport {\n    cffStandardStrings,\n    cffStandardEncoding,\n    cffExpertEncoding,\n    standardNames,\n    DefaultEncoding,\n    CmapEncoding,\n    CffEncoding,\n    GlyphNames,\n    addGlyphNames\n};\n","// Drawing utility functions.\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexport default { line };\n","// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\nimport check from '../check';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    let v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(glyph, data, start) {\n    const p = new parse.Parser(data, start);\n    glyph.numberOfContours = p.parseShort();\n    glyph._xMin = p.parseShort();\n    glyph._yMin = p.parseShort();\n    glyph._xMax = p.parseShort();\n    glyph._yMax = p.parseShort();\n    let flags;\n    let flag;\n\n    if (glyph.numberOfContours > 0) {\n        // This glyph is not a composite.\n        const endPointIndices = glyph.endPointIndices = [];\n        for (let i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (let i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        const numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (let i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                const repeatCount = p.parseByte();\n                for (let j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            const points = [];\n            let point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                let px = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                let py = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        let moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            const component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseShort();\n                    component.dy = p.parseShort();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseUShort(), p.parseUShort()];\n                }\n\n            } else {\n                // The arguments are bytes\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseChar();\n                    component.dy = p.parseChar();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseByte(), p.parseByte()];\n                }\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n        if (flags & 0x100) {\n            // We have instructions\n            glyph.instructionLength = p.parseUShort();\n            glyph.instructions = [];\n            for (let i = 0; i < glyph.instructionLength; i += 1) {\n                glyph.instructions.push(p.parseByte());\n            }\n        }\n    }\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    const newPoints = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        const newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    const p = new Path();\n    if (!points) {\n        return p;\n    }\n\n    const contours = getContours(points);\n\n    for (let contourIndex = 0; contourIndex < contours.length; ++contourIndex) {\n        const contour = contours[contourIndex];\n\n        let prev = null;\n        let curr = contour[contour.length - 1];\n        let next = contour[0];\n\n        if (curr.onCurve) {\n            p.moveTo(curr.x, curr.y);\n        } else {\n            if (next.onCurve) {\n                p.moveTo(next.x, next.y);\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                const start = {x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5};\n                p.moveTo(start.x, start.y);\n            }\n        }\n\n        for (let i = 0; i < contour.length; ++i) {\n            prev = curr;\n            curr = next;\n            next = contour[(i + 1) % contour.length];\n\n            if (curr.onCurve) {\n                // This is a straight line.\n                p.lineTo(curr.x, curr.y);\n            } else {\n                let prev2 = prev;\n                let next2 = next;\n\n                if (!prev.onCurve) {\n                    prev2 = { x: (curr.x + prev.x) * 0.5, y: (curr.y + prev.y) * 0.5 };\n                    p.lineTo(prev2.x, prev2.y);\n                }\n\n                if (!next.onCurve) {\n                    next2 = { x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5 };\n                }\n\n                p.lineTo(prev2.x, prev2.y);\n                p.quadraticCurveTo(curr.x, curr.y, next2.x, next2.y);\n            }\n        }\n\n        p.closePath();\n    }\n    return p;\n}\n\nfunction buildPath(glyphs, glyph) {\n    if (glyph.isComposite) {\n        for (let j = 0; j < glyph.components.length; j += 1) {\n            const component = glyph.components[j];\n            const componentGlyph = glyphs.get(component.glyphIndex);\n            // Force the ttfGlyphLoader to parse the glyph.\n            componentGlyph.getPath();\n            if (componentGlyph.points) {\n                let transformedPoints;\n                if (component.matchedPoints === undefined) {\n                    // component positioned by offset\n                    transformedPoints = transformPoints(componentGlyph.points, component);\n                } else {\n                    // component positioned by matched points\n                    if ((component.matchedPoints[0] > glyph.points.length - 1) ||\n                        (component.matchedPoints[1] > componentGlyph.points.length - 1)) {\n                        throw Error('Matched points out of range in ' + glyph.name);\n                    }\n                    const firstPt = glyph.points[component.matchedPoints[0]];\n                    let secondPt = componentGlyph.points[component.matchedPoints[1]];\n                    const transform = {\n                        xScale: component.xScale, scale01: component.scale01,\n                        scale10: component.scale10, yScale: component.yScale,\n                        dx: 0, dy: 0\n                    };\n                    secondPt = transformPoints([secondPt], transform)[0];\n                    transform.dx = firstPt.x - secondPt.x;\n                    transform.dy = firstPt.y - secondPt.y;\n                    transformedPoints = transformPoints(componentGlyph.points, transform);\n                }\n                glyph.points = glyph.points.concat(transformedPoints);\n            }\n        }\n    }\n\n    return getPath(glyph.points);\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font) {\n    const glyphs = new glyphset.GlyphSet(font);\n\n    // The last element of the loca table is invalid.\n    for (let i = 0; i < loca.length - 1; i += 1) {\n        const offset = loca[i];\n        const nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    }\n\n    return glyphs;\n}\n\nexport default { getPath, parse: parseGlyfTable };\n","// The Glyph object\n\nimport check from './check';\nimport draw from './draw';\nimport Path from './path';\nimport glyf from './tables/glyf';\n\nfunction getPathDefinition(glyph, path) {\n    let _path = path || {commands: []};\n    return {\n        configurable: true,\n\n        get: function() {\n            if (typeof _path === 'function') {\n                _path = _path();\n            }\n\n            return _path;\n        },\n\n        set: function(p) {\n            _path = p;\n        }\n    };\n}\n/**\n * @typedef GlyphOptions\n * @type Object\n * @property {string} [name] - The glyph name\n * @property {number} [unicode]\n * @property {Array} [unicodes]\n * @property {number} [xMin]\n * @property {number} [yMin]\n * @property {number} [xMax]\n * @property {number} [yMax]\n * @property {number} [advanceWidth]\n */\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\n/**\n * @exports opentype.Glyph\n * @class\n * @param {GlyphOptions}\n * @constructor\n */\nfunction Glyph(options) {\n    // By putting all the code on a prototype function (which is only declared once)\n    // we reduce the memory requirements for larger fonts by some 2%\n    this.bindConstructorValues(options);\n}\n\n/**\n * @param  {GlyphOptions}\n */\nGlyph.prototype.bindConstructorValues = function(options) {\n    this.index = options.index || 0;\n\n    // These three values cannot be deferred for memory optimization:\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n\n    // But by binding these values only when necessary, we reduce can\n    // the memory requirements by almost 3% for larger fonts.\n    if (options.xMin) {\n        this.xMin = options.xMin;\n    }\n\n    if (options.yMin) {\n        this.yMin = options.yMin;\n    }\n\n    if (options.xMax) {\n        this.xMax = options.xMax;\n    }\n\n    if (options.yMax) {\n        this.yMax = options.yMax;\n    }\n\n    if (options.advanceWidth) {\n        this.advanceWidth = options.advanceWidth;\n    }\n\n    // The path for a glyph is the most memory intensive, and is bound as a value\n    // with a getter/setter to ensure we actually do path parsing only once the\n    // path is actually needed by anything.\n    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n};\n\n/**\n * @param {number}\n */\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n/**\n * Calculate the minimum bounding box for this glyph.\n * @return {opentype.BoundingBox}\n */\nGlyph.prototype.getBoundingBox = function() {\n    return this.path.getBoundingBox();\n};\n\n/**\n * Convert the glyph to a Path we can draw on a drawing context.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n * @param  {opentype.Font} if hinting is to be used, the font\n * @return {opentype.Path}\n */\nGlyph.prototype.getPath = function(x, y, fontSize, options, font) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    let commands;\n    let hPoints;\n    if (!options) options = { };\n    let xScale = options.xScale;\n    let yScale = options.yScale;\n\n    if (options.hinting && font && font.hinting) {\n        // in case of hinting, the hinting engine takes care\n        // of scaling the points (not the path) before hinting.\n        hPoints = this.path && font.hinting.exec(this, fontSize);\n        // in case the hinting engine failed hPoints is undefined\n        // and thus reverts to plain rending\n    }\n\n    if (hPoints) {\n        commands = glyf.getPath(hPoints).commands;\n        x = Math.round(x);\n        y = Math.round(y);\n        // TODO in case of hinting xyScaling is not yet supported\n        xScale = yScale = 1;\n    } else {\n        commands = this.path.commands;\n        const scale = 1 / this.path.unitsPerEm * fontSize;\n        if (xScale === undefined) xScale = scale;\n        if (yScale === undefined) yScale = scale;\n    }\n\n    const p = new Path();\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                               x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                      x + (cmd.x2 * xScale), y + (-cmd.y2 * yScale),\n                      x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n/**\n * Split the glyph into contours.\n * This function is here for backwards compatibility, and to\n * provide raw access to the TrueType glyph outlines.\n * @return {Array}\n */\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < this.points.length; i += 1) {\n        const pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n/**\n * Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\n * @return {Object}\n */\nGlyph.prototype.getMetrics = function() {\n    const commands = this.path.commands;\n    const xCoords = [];\n    const yCoords = [];\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    const metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: this.leftSideBearing\n    };\n\n    if (!isFinite(metrics.xMin)) {\n        metrics.xMin = 0;\n    }\n\n    if (!isFinite(metrics.xMax)) {\n        metrics.xMax = this.advanceWidth;\n    }\n\n    if (!isFinite(metrics.yMin)) {\n        metrics.yMin = 0;\n    }\n\n    if (!isFinite(metrics.yMax)) {\n        metrics.yMax = 0;\n    }\n\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n/**\n * Draw the glyph on the given context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n */\nGlyph.prototype.draw = function(ctx, x, y, fontSize, options) {\n    this.getPath(x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of the glyph.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n    function drawCircles(l, x, y, scale) {\n        const PI_SQ = Math.PI * 2;\n        ctx.beginPath();\n        for (let j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, PI_SQ, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    const scale = 1 / this.path.unitsPerEm * fontSize;\n\n    const blueCircles = [];\n    const redCircles = [];\n    const path = this.path;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        const cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n/**\n * Draw lines indicating important font measurements.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    let scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.path.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // This code is here due to memory optimization: by not using\n    // defaults in the constructor, we save a notable amount of memory.\n    const xMin = this.xMin || 0;\n    let yMin = this.yMin || 0;\n    const xMax = this.xMax || 0;\n    let yMax = this.yMax || 0;\n    const advanceWidth = this.advanceWidth || 0;\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (xMin * scale), -10000, x + (xMin * scale), 10000);\n    draw.line(ctx, x + (xMax * scale), -10000, x + (xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-yMin * scale), 10000, y + (-yMin * scale));\n    draw.line(ctx, -10000, y + (-yMax * scale), 10000, y + (-yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (advanceWidth * scale), -10000, x + (advanceWidth * scale), 10000);\n};\n\nexport default Glyph;\n","// The GlyphSet object\n\nimport Glyph from './glyph';\n\n// Define a property on the glyph that depends on the path being loaded.\nfunction defineDependentProperty(glyph, externalName, internalName) {\n    Object.defineProperty(glyph, externalName, {\n        get: function() {\n            // Request the path property to make sure the path is loaded.\n            glyph.path; // jshint ignore:line\n            return glyph[internalName];\n        },\n        set: function(newValue) {\n            glyph[internalName] = newValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n}\n\n/**\n * A GlyphSet represents all glyphs available in the font, but modelled using\n * a deferred glyph loader, for retrieving glyphs only once they are absolutely\n * necessary, to keep the memory footprint down.\n * @exports opentype.GlyphSet\n * @class\n * @param {opentype.Font}\n * @param {Array}\n */\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (let i = 0; i < glyphs.length; i++) {\n            this.glyphs[i] = glyphs[i];\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\n/**\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nGlyphSet.prototype.get = function(index) {\n    if (typeof this.glyphs[index] === 'function') {\n        this.glyphs[index] = this.glyphs[index]();\n    }\n\n    return this.glyphs[index];\n};\n\n/**\n * @param  {number} index\n * @param  {Object}\n */\nGlyphSet.prototype.push = function(index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\n/**\n * @alias opentype.glyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nfunction glyphLoader(font, index) {\n    return new Glyph({index: index, font: font});\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n * @alias opentype.ttfGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseGlyph\n * @param  {Object} data\n * @param  {number} position\n * @param  {Function} buildPath\n * @return {opentype.Glyph}\n */\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            parseGlyph(glyph, data, position);\n            const path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        defineDependentProperty(glyph, 'xMin', '_xMin');\n        defineDependentProperty(glyph, 'xMax', '_xMax');\n        defineDependentProperty(glyph, 'yMin', '_yMin');\n        defineDependentProperty(glyph, 'yMax', '_yMax');\n\n        return glyph;\n    };\n}\n/**\n * @alias opentype.cffGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseCFFCharstring\n * @param  {string} charstring\n * @return {opentype.Glyph}\n */\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            const path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nexport default { GlyphSet, glyphLoader, ttfGlyphLoader, cffGlyphLoader };\n","// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\nimport { CffEncoding, cffStandardEncoding, cffExpertEncoding, cffStandardStrings } from '../encoding';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\nimport table from '../table';\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (let i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    let bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    const offsets = [];\n    const objects = [];\n    const count = parse.getCard16(data, start);\n    let objectOffset;\n    let endOffset;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        let pos = start + 3;\n        for (let i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (let i = 0; i < offsets.length - 1; i += 1) {\n        let value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    let s = '';\n    const eof = 15;\n    const lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        const b = parser.parseByte();\n        const n1 = b >> 4;\n        const n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    let b1;\n    let b2;\n    let b3;\n    let b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    const o = {};\n    for (let i = 0; i < entries.length; i += 1) {\n        const key = entries[i][0];\n        const values = entries[i][1];\n        let value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key) && !isNaN(o[key])) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    const parser = new parse.Parser(data, start);\n    const entries = [];\n    let operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        let op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    const newDict = {};\n    let value;\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (let i = 0; i < meta.length; i += 1) {\n        const m = meta[i];\n\n        if (Array.isArray(m.type)) {\n            const values = [];\n            values.length = m.type.length;\n            for (let j = 0; j < m.type.length; j++) {\n                value = dict[m.op] !== undefined ? dict[m.op][j] : undefined;\n                if (value === undefined) {\n                    value = m.value !== undefined && m.value[j] !== undefined ? m.value[j] : null;\n                }\n                if (m.type[j] === 'SID') {\n                    value = getCFFString(strings, value);\n                }\n                values[j] = value;\n            }\n            newDict[m.name] = values;\n        } else {\n            value = dict[m.op];\n            if (value === undefined) {\n                value = m.value !== undefined ? m.value : null;\n            }\n\n            if (m.type === 'SID') {\n                value = getCFFString(strings, value);\n            }\n            newDict[m.name] = value;\n        }\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    const header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nconst TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {\n        name: 'fontMatrix',\n        op: 1207,\n        type: ['real', 'real', 'real', 'real', 'real', 'real'],\n        value: [0.001, 0, 0, 0.001, 0, 0]\n    },\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]},\n    {name: 'ros', op: 1230, type: ['SID', 'SID', 'number']},\n    {name: 'cidFontVersion', op: 1231, type: 'number', value: 0},\n    {name: 'cidFontRevision', op: 1232, type: 'number', value: 0},\n    {name: 'cidFontType', op: 1233, type: 'number', value: 0},\n    {name: 'cidCount', op: 1234, type: 'number', value: 8720},\n    {name: 'uidBase', op: 1235, type: 'number'},\n    {name: 'fdArray', op: 1236, type: 'offset'},\n    {name: 'fdSelect', op: 1237, type: 'offset'},\n    {name: 'fontName', op: 1238, type: 'SID'}\n];\n\nconst PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    const dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    const dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Returns a list of \"Top DICT\"s found using an INDEX list.\n// Used to read both the usual high-level Top DICTs and also the FDArray\n// discovered inside CID-keyed fonts.  When a Top DICT has a reference to\n// a Private DICT that is read and saved into the Top DICT.\n//\n// In addition to the expected/optional values as outlined in TOP_DICT_META\n// the following values might be saved into the Top DICT.\n//\n//    _subrs []        array of local CFF subroutines from Private DICT\n//    _subrsBias       bias value computed from number of subroutines\n//                      (see calcCFFSubroutineBias() and parseCFFCharstring())\n//    _defaultWidthX   default widths for CFF characters\n//    _nominalWidthX   bias added to width embedded within glyph description\n//\n//    _privateDict     saved copy of parsed Private DICT from Top DICT\nfunction gatherCFFTopDicts(data, start, cffIndex, strings) {\n    const topDictArray = [];\n    for (let iTopDict = 0; iTopDict < cffIndex.length; iTopDict += 1) {\n        const topDictData = new DataView(new Uint8Array(cffIndex[iTopDict]).buffer);\n        const topDict = parseCFFTopDict(topDictData, strings);\n        topDict._subrs = [];\n        topDict._subrsBias = 0;\n        const privateSize = topDict.private[0];\n        const privateOffset = topDict.private[1];\n        if (privateSize !== 0 && privateOffset !== 0) {\n            const privateDict = parseCFFPrivateDict(data, privateOffset + start, privateSize, strings);\n            topDict._defaultWidthX = privateDict.defaultWidthX;\n            topDict._nominalWidthX = privateDict.nominalWidthX;\n            if (privateDict.subrs !== 0) {\n                const subrOffset = privateOffset + privateDict.subrs;\n                const subrIndex = parseCFFIndex(data, subrOffset + start);\n                topDict._subrs = subrIndex.objects;\n                topDict._subrsBias = calcCFFSubroutineBias(topDict._subrs);\n            }\n            topDict._privateDict = privateDict;\n        }\n        topDictArray.push(topDict);\n    }\n    return topDictArray;\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    let sid;\n    let count;\n    const parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    const charset = ['.notdef'];\n\n    const format = parser.parseCard8();\n    if (format === 0) {\n        for (let i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    let code;\n    const enc = {};\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        const nCodes = parser.parseCard8();\n        for (let i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        const nRanges = parser.parseCard8();\n        code = 1;\n        for (let i = 0; i < nRanges; i += 1) {\n            const first = parser.parseCard8();\n            const nLeft = parser.parseCard8();\n            for (let j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(font, glyph, code) {\n    let c1x;\n    let c1y;\n    let c2x;\n    let c2y;\n    const p = new Path();\n    const stack = [];\n    let nStems = 0;\n    let haveWidth = false;\n    let open = false;\n    let x = 0;\n    let y = 0;\n    let subrs;\n    let subrsBias;\n    let defaultWidthX;\n    let nominalWidthX;\n    if (font.isCIDFont) {\n        const fdIndex = font.tables.cff.topDict._fdSelect[glyph.index];\n        const fdDict = font.tables.cff.topDict._fdArray[fdIndex];\n        subrs = fdDict._subrs;\n        subrsBias = fdDict._subrsBias;\n        defaultWidthX = fdDict._defaultWidthX;\n        nominalWidthX = fdDict._nominalWidthX;\n    } else {\n        subrs = font.tables.cff.topDict._subrs;\n        subrsBias = font.tables.cff.topDict._subrsBias;\n        defaultWidthX = font.tables.cff.topDict._defaultWidthX;\n        nominalWidthX = font.tables.cff.topDict._nominalWidthX;\n    }\n    let width = defaultWidthX;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        let hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        let b1;\n        let b2;\n        let b3;\n        let b4;\n        let codeIndex;\n        let subrCode;\n        let jpx;\n        let jpy;\n        let c3x;\n        let c3y;\n        let c4x;\n        let c4y;\n\n        let i = 0;\n        while (i < code.length) {\n            let v = code[i];\n            i += 1;\n            switch (v) {\n                case 1: // hstem\n                    parseStems();\n                    break;\n                case 3: // vstem\n                    parseStems();\n                    break;\n                case 4: // vmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 5: // rlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 6: // hlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 7: // vlineto\n                    while (stack.length > 0) {\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 8: // rrcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 10: // callsubr\n                    codeIndex = stack.pop() + subrsBias;\n                    subrCode = subrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 11: // return\n                    return;\n                case 12: // flex operators\n                    v = code[i];\n                    i += 1;\n                    switch (v) {\n                        case 35: // flex\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x   + stack.shift();    // dx6\n                            y = c4y   + stack.shift();    // dy6\n                            stack.shift();                // flex depth\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 34: // hflex\n                            // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y;                      // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = y;                      // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 36: // hflex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 37: // flex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                                x = c4x + stack.shift();\n                            } else {\n                                y = c4y + stack.shift();\n                            }\n\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        default:\n                            console.log('Glyph ' + glyph.index + ': unknown operator ' + 1200 + v);\n                            stack.length = 0;\n                    }\n                    break;\n                case 14: // endchar\n                    if (stack.length > 0 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    if (open) {\n                        p.closePath();\n                        open = false;\n                    }\n\n                    break;\n                case 18: // hstemhm\n                    parseStems();\n                    break;\n                case 19: // hintmask\n                case 20: // cntrmask\n                    parseStems();\n                    i += (nStems + 7) >> 3;\n                    break;\n                case 21: // rmoveto\n                    if (stack.length > 2 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 22: // hmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 23: // vstemhm\n                    parseStems();\n                    break;\n                case 24: // rcurveline\n                    while (stack.length > 2) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    break;\n                case 25: // rlinecurve\n                    while (stack.length > 6) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    break;\n                case 26: // vvcurveto\n                    if (stack.length % 2) {\n                        x += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x;\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 27: // hhcurveto\n                    if (stack.length % 2) {\n                        y += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y;\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 28: // shortint\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                    i += 2;\n                    break;\n                case 29: // callgsubr\n                    codeIndex = stack.pop() + font.gsubrsBias;\n                    subrCode = font.gsubrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 30: // vhcurveto\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 31: // hvcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                default:\n                    if (v < 32) {\n                        console.log('Glyph ' + glyph.index + ': unknown operator ' + v);\n                    } else if (v < 247) {\n                        stack.push(v - 139);\n                    } else if (v < 251) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push((v - 247) * 256 + b1 + 108);\n                    } else if (v < 255) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push(-(v - 251) * 256 - b1 - 108);\n                    } else {\n                        b1 = code[i];\n                        b2 = code[i + 1];\n                        b3 = code[i + 2];\n                        b4 = code[i + 3];\n                        i += 4;\n                        stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                    }\n            }\n        }\n    }\n\n    parse(code);\n\n    glyph.advanceWidth = width;\n    return p;\n}\n\nfunction parseCFFFDSelect(data, start, nGlyphs, fdArrayCount) {\n    const fdSelect = [];\n    let fdIndex;\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        // Simple list of nGlyphs elements\n        for (let iGid = 0; iGid < nGlyphs; iGid++) {\n            fdIndex = parser.parseCard8();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            fdSelect.push(fdIndex);\n        }\n    } else if (format === 3) {\n        // Ranges\n        const nRanges = parser.parseCard16();\n        let first = parser.parseCard16();\n        if (first !== 0) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad initial GID ' + first);\n        }\n        let next;\n        for (let iRange = 0; iRange < nRanges; iRange++) {\n            fdIndex = parser.parseCard8();\n            next = parser.parseCard16();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            if (next > nGlyphs) {\n                throw new Error('CFF Table CID Font FDSelect format 3 range has bad GID ' + next);\n            }\n            for (; first < next; first++) {\n                fdSelect.push(fdIndex);\n            }\n            first = next;\n        }\n        if (next !== nGlyphs) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad final GID ' + next);\n        }\n    } else {\n        throw new Error('CFF Table CID Font FDSelect table has unsupported format ' + format);\n    }\n    return fdSelect;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font) {\n    font.tables.cff = {};\n    const header = parseCFFHeader(data, start);\n    const nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    const topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    const stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    const globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    const topDictArray = gatherCFFTopDicts(data, start, topDictIndex.objects, stringIndex.objects);\n    if (topDictArray.length !== 1) {\n        throw new Error('CFF table has too many fonts in \\'FontSet\\' - count of fonts NameIndex.length = ' + topDictArray.length);\n    }\n\n    const topDict = topDictArray[0];\n    font.tables.cff.topDict = topDict;\n\n    if (topDict._privateDict) {\n        font.defaultWidthX = topDict._privateDict.defaultWidthX;\n        font.nominalWidthX = topDict._privateDict.nominalWidthX;\n    }\n\n    if (topDict.ros[0] !== undefined && topDict.ros[1] !== undefined) {\n        font.isCIDFont = true;\n    }\n\n    if (font.isCIDFont) {\n        let fdArrayOffset = topDict.fdArray;\n        let fdSelectOffset = topDict.fdSelect;\n        if (fdArrayOffset === 0 || fdSelectOffset === 0) {\n            throw new Error('Font is marked as a CID font, but FDArray and/or FDSelect information is missing');\n        }\n        fdArrayOffset += start;\n        const fdArrayIndex = parseCFFIndex(data, fdArrayOffset);\n        const fdArray = gatherCFFTopDicts(data, start, fdArrayIndex.objects, stringIndex.objects);\n        topDict._fdArray = fdArray;\n        fdSelectOffset += start;\n        topDict._fdSelect = parseCFFFDSelect(data, fdSelectOffset, font.numGlyphs, fdArray.length);\n    }\n\n    const privateDictOffset = start + topDict.private[1];\n    const privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict.private[0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        const subrOffset = privateDictOffset + privateDict.subrs;\n        const subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    const charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n    font.nGlyphs = charStringsIndex.objects.length;\n\n    const charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) { // Standard encoding\n        font.cffEncoding = new CffEncoding(cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) { // Expert encoding\n        font.cffEncoding = new CffEncoding(cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = new glyphset.GlyphSet(font);\n    for (let i = 0; i < font.nGlyphs; i += 1) {\n        const charString = charStringsIndex.objects[i];\n        font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    let sid;\n\n    // Is the string in the CFF standard strings?\n    let i = cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + cffStandardStrings.length;\n    } else {\n        sid = cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Record('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    const t = new table.Record('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (let i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    const m = {};\n    for (let i = 0; i < meta.length; i += 1) {\n        const entry = meta[i];\n        let value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    const t = new table.Record('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    const t = new table.Record('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    const t = new table.Record('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (let i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Record('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    const t = new table.Record('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (let i = 0; i < glyphNames.length; i += 1) {\n        const glyphName = glyphNames[i];\n        const glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    const ops = [];\n    const path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    let x = 0;\n    let y = 0;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        let dx;\n        let dy;\n        let cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            const _13 = 1 / 3;\n            const _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            const dx1 = Math.round(cmd.x1 - x);\n            const dy1 = Math.round(cmd.y1 - y);\n            const dx2 = Math.round(cmd.x2 - cmd.x1);\n            const dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    const t = new table.Record('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    const t = new table.Record('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    const t = new table.Table('CFF ', [\n        {name: 'header', type: 'RECORD'},\n        {name: 'nameIndex', type: 'RECORD'},\n        {name: 'topDictIndex', type: 'RECORD'},\n        {name: 'stringIndex', type: 'RECORD'},\n        {name: 'globalSubrIndex', type: 'RECORD'},\n        {name: 'charsets', type: 'RECORD'},\n        {name: 'charStringsIndex', type: 'RECORD'},\n        {name: 'privateDict', type: 'RECORD'}\n    ]);\n\n    const fontScale = 1 / options.unitsPerEm;\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    const attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        fontBBox: options.fontBBox || [0, 0, 0, 0],\n        fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    const privateAttrs = {};\n\n    const glyphNames = [];\n    let glyph;\n\n    // Skip first glyph (.notdef)\n    for (let i = 1; i < glyphs.length; i += 1) {\n        glyph = glyphs.get(i);\n        glyphNames.push(glyph.name);\n    }\n\n    const strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    let topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    t.privateDict = makePrivateDict(privateAttrs, strings);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    const startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexport default { parse: parseCFFTable, make: makeCFFTable };\n","// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    const head = {};\n    const p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    // Apple Mac timestamp epoch is 01/01/1904 not 01/01/1970\n    const timestamp = Math.round(new Date().getTime() / 1000) + 2082844800;\n    let createdTimestamp = timestamp;\n\n    if (options.createdTimestamp) {\n        createdTimestamp = options.createdTimestamp + 2082844800;\n    }\n\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: createdTimestamp},\n        {name: 'modified', type: 'LONGDATETIME', value: timestamp},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHeadTable, make: makeHeadTable };\n","// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    const hhea = {};\n    const p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHheaTable, make: makeHheaTable };\n","// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(data, start, numMetrics, numGlyphs, glyphs) {\n    let advanceWidth;\n    let leftSideBearing;\n    const p = new parse.Parser(data, start);\n    for (let i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        const glyph = glyphs.get(i);\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction makeHmtxTable(glyphs) {\n    const t = new table.Table('hmtx', []);\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const advanceWidth = glyph.advanceWidth || 0;\n        const leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexport default { parse: parseHmtxTable, make: makeHmtxTable };\n","// The `ltag` table stores IETF BCP-47 language tags. It allows supporting\n// languages for which TrueType does not assign a numeric code.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6ltag.html\n// http://www.w3.org/International/articles/language-tags/\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction makeLtagTable(tags) {\n    const result = new table.Table('ltag', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'numTags', type: 'ULONG', value: tags.length}\n    ]);\n\n    let stringPool = '';\n    const stringPoolOffset = 12 + tags.length * 4;\n    for (let i = 0; i < tags.length; ++i) {\n        let pos = stringPool.indexOf(tags[i]);\n        if (pos < 0) {\n            pos = stringPool.length;\n            stringPool += tags[i];\n        }\n\n        result.fields.push({name: 'offset ' + i, type: 'USHORT', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + i, type: 'USHORT', value: tags[i].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n    return result;\n}\n\nfunction parseLtagTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported ltag table version.');\n    // The 'ltag' specification does not define any flags; skip the field.\n    p.skip('uLong', 1);\n    const numTags = p.parseULong();\n\n    const tags = [];\n    for (let i = 0; i < numTags; i++) {\n        let tag = '';\n        const offset = start + p.parseUShort();\n        const length = p.parseUShort();\n        for (let j = offset; j < offset + length; ++j) {\n            tag += String.fromCharCode(data.getInt8(j));\n        }\n\n        tags.push(tag);\n    }\n\n    return tags;\n}\n\nexport default { make: makeLtagTable, parse: parseLtagTable };\n","// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    const maxp = {};\n    const p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexport default { parse: parseMaxpTable, make: makeMaxpTable };\n","// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\nimport { decode, encode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// NameIDs for the name table.\nconst nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'license',                // 13\n    'licenseURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\nconst macLanguages = {\n    0: 'en',\n    1: 'fr',\n    2: 'de',\n    3: 'it',\n    4: 'nl',\n    5: 'sv',\n    6: 'es',\n    7: 'da',\n    8: 'pt',\n    9: 'no',\n    10: 'he',\n    11: 'ja',\n    12: 'ar',\n    13: 'fi',\n    14: 'el',\n    15: 'is',\n    16: 'mt',\n    17: 'tr',\n    18: 'hr',\n    19: 'zh-Hant',\n    20: 'ur',\n    21: 'hi',\n    22: 'th',\n    23: 'ko',\n    24: 'lt',\n    25: 'pl',\n    26: 'hu',\n    27: 'es',\n    28: 'lv',\n    29: 'se',\n    30: 'fo',\n    31: 'fa',\n    32: 'ru',\n    33: 'zh',\n    34: 'nl-BE',\n    35: 'ga',\n    36: 'sq',\n    37: 'ro',\n    38: 'cz',\n    39: 'sk',\n    40: 'si',\n    41: 'yi',\n    42: 'sr',\n    43: 'mk',\n    44: 'bg',\n    45: 'uk',\n    46: 'be',\n    47: 'uz',\n    48: 'kk',\n    49: 'az-Cyrl',\n    50: 'az-Arab',\n    51: 'hy',\n    52: 'ka',\n    53: 'mo',\n    54: 'ky',\n    55: 'tg',\n    56: 'tk',\n    57: 'mn-CN',\n    58: 'mn',\n    59: 'ps',\n    60: 'ks',\n    61: 'ku',\n    62: 'sd',\n    63: 'bo',\n    64: 'ne',\n    65: 'sa',\n    66: 'mr',\n    67: 'bn',\n    68: 'as',\n    69: 'gu',\n    70: 'pa',\n    71: 'or',\n    72: 'ml',\n    73: 'kn',\n    74: 'ta',\n    75: 'te',\n    76: 'si',\n    77: 'my',\n    78: 'km',\n    79: 'lo',\n    80: 'vi',\n    81: 'id',\n    82: 'tl',\n    83: 'ms',\n    84: 'ms-Arab',\n    85: 'am',\n    86: 'ti',\n    87: 'om',\n    88: 'so',\n    89: 'sw',\n    90: 'rw',\n    91: 'rn',\n    92: 'ny',\n    93: 'mg',\n    94: 'eo',\n    128: 'cy',\n    129: 'eu',\n    130: 'ca',\n    131: 'la',\n    132: 'qu',\n    133: 'gn',\n    134: 'ay',\n    135: 'tt',\n    136: 'ug',\n    137: 'dz',\n    138: 'jv',\n    139: 'su',\n    140: 'gl',\n    141: 'af',\n    142: 'br',\n    143: 'iu',\n    144: 'gd',\n    145: 'gv',\n    146: 'ga',\n    147: 'to',\n    148: 'el-polyton',\n    149: 'kl',\n    150: 'az',\n    151: 'nn'\n};\n\n// MacOS language ID → MacOS script ID\n//\n// Note that the script ID is not sufficient to determine what encoding\n// to use in TrueType files. For some languages, MacOS used a modification\n// of a mainstream script. For example, an Icelandic name would be stored\n// with smRoman in the TrueType naming table, but the actual encoding\n// is a special Icelandic version of the normal Macintosh Roman encoding.\n// As another example, Inuktitut uses an 8-bit encoding for Canadian Aboriginal\n// Syllables but MacOS had run out of available script codes, so this was\n// done as a (pretty radical) \"modification\" of Ethiopic.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageToScript = {\n    0: 0,  // langEnglish → smRoman\n    1: 0,  // langFrench → smRoman\n    2: 0,  // langGerman → smRoman\n    3: 0,  // langItalian → smRoman\n    4: 0,  // langDutch → smRoman\n    5: 0,  // langSwedish → smRoman\n    6: 0,  // langSpanish → smRoman\n    7: 0,  // langDanish → smRoman\n    8: 0,  // langPortuguese → smRoman\n    9: 0,  // langNorwegian → smRoman\n    10: 5,  // langHebrew → smHebrew\n    11: 1,  // langJapanese → smJapanese\n    12: 4,  // langArabic → smArabic\n    13: 0,  // langFinnish → smRoman\n    14: 6,  // langGreek → smGreek\n    15: 0,  // langIcelandic → smRoman (modified)\n    16: 0,  // langMaltese → smRoman\n    17: 0,  // langTurkish → smRoman (modified)\n    18: 0,  // langCroatian → smRoman (modified)\n    19: 2,  // langTradChinese → smTradChinese\n    20: 4,  // langUrdu → smArabic\n    21: 9,  // langHindi → smDevanagari\n    22: 21,  // langThai → smThai\n    23: 3,  // langKorean → smKorean\n    24: 29,  // langLithuanian → smCentralEuroRoman\n    25: 29,  // langPolish → smCentralEuroRoman\n    26: 29,  // langHungarian → smCentralEuroRoman\n    27: 29,  // langEstonian → smCentralEuroRoman\n    28: 29,  // langLatvian → smCentralEuroRoman\n    29: 0,  // langSami → smRoman\n    30: 0,  // langFaroese → smRoman (modified)\n    31: 4,  // langFarsi → smArabic (modified)\n    32: 7,  // langRussian → smCyrillic\n    33: 25,  // langSimpChinese → smSimpChinese\n    34: 0,  // langFlemish → smRoman\n    35: 0,  // langIrishGaelic → smRoman (modified)\n    36: 0,  // langAlbanian → smRoman\n    37: 0,  // langRomanian → smRoman (modified)\n    38: 29,  // langCzech → smCentralEuroRoman\n    39: 29,  // langSlovak → smCentralEuroRoman\n    40: 0,  // langSlovenian → smRoman (modified)\n    41: 5,  // langYiddish → smHebrew\n    42: 7,  // langSerbian → smCyrillic\n    43: 7,  // langMacedonian → smCyrillic\n    44: 7,  // langBulgarian → smCyrillic\n    45: 7,  // langUkrainian → smCyrillic (modified)\n    46: 7,  // langByelorussian → smCyrillic\n    47: 7,  // langUzbek → smCyrillic\n    48: 7,  // langKazakh → smCyrillic\n    49: 7,  // langAzerbaijani → smCyrillic\n    50: 4,  // langAzerbaijanAr → smArabic\n    51: 24,  // langArmenian → smArmenian\n    52: 23,  // langGeorgian → smGeorgian\n    53: 7,  // langMoldavian → smCyrillic\n    54: 7,  // langKirghiz → smCyrillic\n    55: 7,  // langTajiki → smCyrillic\n    56: 7,  // langTurkmen → smCyrillic\n    57: 27,  // langMongolian → smMongolian\n    58: 7,  // langMongolianCyr → smCyrillic\n    59: 4,  // langPashto → smArabic\n    60: 4,  // langKurdish → smArabic\n    61: 4,  // langKashmiri → smArabic\n    62: 4,  // langSindhi → smArabic\n    63: 26,  // langTibetan → smTibetan\n    64: 9,  // langNepali → smDevanagari\n    65: 9,  // langSanskrit → smDevanagari\n    66: 9,  // langMarathi → smDevanagari\n    67: 13,  // langBengali → smBengali\n    68: 13,  // langAssamese → smBengali\n    69: 11,  // langGujarati → smGujarati\n    70: 10,  // langPunjabi → smGurmukhi\n    71: 12,  // langOriya → smOriya\n    72: 17,  // langMalayalam → smMalayalam\n    73: 16,  // langKannada → smKannada\n    74: 14,  // langTamil → smTamil\n    75: 15,  // langTelugu → smTelugu\n    76: 18,  // langSinhalese → smSinhalese\n    77: 19,  // langBurmese → smBurmese\n    78: 20,  // langKhmer → smKhmer\n    79: 22,  // langLao → smLao\n    80: 30,  // langVietnamese → smVietnamese\n    81: 0,  // langIndonesian → smRoman\n    82: 0,  // langTagalog → smRoman\n    83: 0,  // langMalayRoman → smRoman\n    84: 4,  // langMalayArabic → smArabic\n    85: 28,  // langAmharic → smEthiopic\n    86: 28,  // langTigrinya → smEthiopic\n    87: 28,  // langOromo → smEthiopic\n    88: 0,  // langSomali → smRoman\n    89: 0,  // langSwahili → smRoman\n    90: 0,  // langKinyarwanda → smRoman\n    91: 0,  // langRundi → smRoman\n    92: 0,  // langNyanja → smRoman\n    93: 0,  // langMalagasy → smRoman\n    94: 0,  // langEsperanto → smRoman\n    128: 0,  // langWelsh → smRoman (modified)\n    129: 0,  // langBasque → smRoman\n    130: 0,  // langCatalan → smRoman\n    131: 0,  // langLatin → smRoman\n    132: 0,  // langQuechua → smRoman\n    133: 0,  // langGuarani → smRoman\n    134: 0,  // langAymara → smRoman\n    135: 7,  // langTatar → smCyrillic\n    136: 4,  // langUighur → smArabic\n    137: 26,  // langDzongkha → smTibetan\n    138: 0,  // langJavaneseRom → smRoman\n    139: 0,  // langSundaneseRom → smRoman\n    140: 0,  // langGalician → smRoman\n    141: 0,  // langAfrikaans → smRoman\n    142: 0,  // langBreton → smRoman (modified)\n    143: 28,  // langInuktitut → smEthiopic (modified)\n    144: 0,  // langScottishGaelic → smRoman (modified)\n    145: 0,  // langManxGaelic → smRoman (modified)\n    146: 0,  // langIrishGaelicScript → smRoman (modified)\n    147: 0,  // langTongan → smRoman\n    148: 6,  // langGreekAncient → smRoman\n    149: 0,  // langGreenlandic → smRoman\n    150: 0,  // langAzerbaijanRoman → smRoman\n    151: 0   // langNynorsk → smRoman\n};\n\n// While Microsoft indicates a region/country for all its language\n// IDs, we omit the region code if it's equal to the \"most likely\n// region subtag\" according to Unicode CLDR. For scripts, we omit\n// the subtag if it is equal to the Suppress-Script entry in the\n// IANA language subtag registry for IETF BCP 47.\n//\n// For example, Microsoft states that its language code 0x041A is\n// Croatian in Croatia. We transform this to the BCP 47 language code 'hr'\n// and not 'hr-HR' because Croatia is the default country for Croatian,\n// according to Unicode CLDR. As another example, Microsoft states\n// that 0x101A is Croatian (Latin) in Bosnia-Herzegovina. We transform\n// this to 'hr-BA' and not 'hr-Latn-BA' because Latin is the default script\n// for the Croatian language, according to IANA.\n//\n// http://www.unicode.org/cldr/charts/latest/supplemental/likely_subtags.html\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\nconst windowsLanguages = {\n    0x0436: 'af',\n    0x041C: 'sq',\n    0x0484: 'gsw',\n    0x045E: 'am',\n    0x1401: 'ar-DZ',\n    0x3C01: 'ar-BH',\n    0x0C01: 'ar',\n    0x0801: 'ar-IQ',\n    0x2C01: 'ar-JO',\n    0x3401: 'ar-KW',\n    0x3001: 'ar-LB',\n    0x1001: 'ar-LY',\n    0x1801: 'ary',\n    0x2001: 'ar-OM',\n    0x4001: 'ar-QA',\n    0x0401: 'ar-SA',\n    0x2801: 'ar-SY',\n    0x1C01: 'aeb',\n    0x3801: 'ar-AE',\n    0x2401: 'ar-YE',\n    0x042B: 'hy',\n    0x044D: 'as',\n    0x082C: 'az-Cyrl',\n    0x042C: 'az',\n    0x046D: 'ba',\n    0x042D: 'eu',\n    0x0423: 'be',\n    0x0845: 'bn',\n    0x0445: 'bn-IN',\n    0x201A: 'bs-Cyrl',\n    0x141A: 'bs',\n    0x047E: 'br',\n    0x0402: 'bg',\n    0x0403: 'ca',\n    0x0C04: 'zh-HK',\n    0x1404: 'zh-MO',\n    0x0804: 'zh',\n    0x1004: 'zh-SG',\n    0x0404: 'zh-TW',\n    0x0483: 'co',\n    0x041A: 'hr',\n    0x101A: 'hr-BA',\n    0x0405: 'cs',\n    0x0406: 'da',\n    0x048C: 'prs',\n    0x0465: 'dv',\n    0x0813: 'nl-BE',\n    0x0413: 'nl',\n    0x0C09: 'en-AU',\n    0x2809: 'en-BZ',\n    0x1009: 'en-CA',\n    0x2409: 'en-029',\n    0x4009: 'en-IN',\n    0x1809: 'en-IE',\n    0x2009: 'en-JM',\n    0x4409: 'en-MY',\n    0x1409: 'en-NZ',\n    0x3409: 'en-PH',\n    0x4809: 'en-SG',\n    0x1C09: 'en-ZA',\n    0x2C09: 'en-TT',\n    0x0809: 'en-GB',\n    0x0409: 'en',\n    0x3009: 'en-ZW',\n    0x0425: 'et',\n    0x0438: 'fo',\n    0x0464: 'fil',\n    0x040B: 'fi',\n    0x080C: 'fr-BE',\n    0x0C0C: 'fr-CA',\n    0x040C: 'fr',\n    0x140C: 'fr-LU',\n    0x180C: 'fr-MC',\n    0x100C: 'fr-CH',\n    0x0462: 'fy',\n    0x0456: 'gl',\n    0x0437: 'ka',\n    0x0C07: 'de-AT',\n    0x0407: 'de',\n    0x1407: 'de-LI',\n    0x1007: 'de-LU',\n    0x0807: 'de-CH',\n    0x0408: 'el',\n    0x046F: 'kl',\n    0x0447: 'gu',\n    0x0468: 'ha',\n    0x040D: 'he',\n    0x0439: 'hi',\n    0x040E: 'hu',\n    0x040F: 'is',\n    0x0470: 'ig',\n    0x0421: 'id',\n    0x045D: 'iu',\n    0x085D: 'iu-Latn',\n    0x083C: 'ga',\n    0x0434: 'xh',\n    0x0435: 'zu',\n    0x0410: 'it',\n    0x0810: 'it-CH',\n    0x0411: 'ja',\n    0x044B: 'kn',\n    0x043F: 'kk',\n    0x0453: 'km',\n    0x0486: 'quc',\n    0x0487: 'rw',\n    0x0441: 'sw',\n    0x0457: 'kok',\n    0x0412: 'ko',\n    0x0440: 'ky',\n    0x0454: 'lo',\n    0x0426: 'lv',\n    0x0427: 'lt',\n    0x082E: 'dsb',\n    0x046E: 'lb',\n    0x042F: 'mk',\n    0x083E: 'ms-BN',\n    0x043E: 'ms',\n    0x044C: 'ml',\n    0x043A: 'mt',\n    0x0481: 'mi',\n    0x047A: 'arn',\n    0x044E: 'mr',\n    0x047C: 'moh',\n    0x0450: 'mn',\n    0x0850: 'mn-CN',\n    0x0461: 'ne',\n    0x0414: 'nb',\n    0x0814: 'nn',\n    0x0482: 'oc',\n    0x0448: 'or',\n    0x0463: 'ps',\n    0x0415: 'pl',\n    0x0416: 'pt',\n    0x0816: 'pt-PT',\n    0x0446: 'pa',\n    0x046B: 'qu-BO',\n    0x086B: 'qu-EC',\n    0x0C6B: 'qu',\n    0x0418: 'ro',\n    0x0417: 'rm',\n    0x0419: 'ru',\n    0x243B: 'smn',\n    0x103B: 'smj-NO',\n    0x143B: 'smj',\n    0x0C3B: 'se-FI',\n    0x043B: 'se',\n    0x083B: 'se-SE',\n    0x203B: 'sms',\n    0x183B: 'sma-NO',\n    0x1C3B: 'sms',\n    0x044F: 'sa',\n    0x1C1A: 'sr-Cyrl-BA',\n    0x0C1A: 'sr',\n    0x181A: 'sr-Latn-BA',\n    0x081A: 'sr-Latn',\n    0x046C: 'nso',\n    0x0432: 'tn',\n    0x045B: 'si',\n    0x041B: 'sk',\n    0x0424: 'sl',\n    0x2C0A: 'es-AR',\n    0x400A: 'es-BO',\n    0x340A: 'es-CL',\n    0x240A: 'es-CO',\n    0x140A: 'es-CR',\n    0x1C0A: 'es-DO',\n    0x300A: 'es-EC',\n    0x440A: 'es-SV',\n    0x100A: 'es-GT',\n    0x480A: 'es-HN',\n    0x080A: 'es-MX',\n    0x4C0A: 'es-NI',\n    0x180A: 'es-PA',\n    0x3C0A: 'es-PY',\n    0x280A: 'es-PE',\n    0x500A: 'es-PR',\n\n    // Microsoft has defined two different language codes for\n    // “Spanish with modern sorting” and “Spanish with traditional\n    // sorting”. This makes sense for collation APIs, and it would be\n    // possible to express this in BCP 47 language tags via Unicode\n    // extensions (eg., es-u-co-trad is Spanish with traditional\n    // sorting). However, for storing names in fonts, the distinction\n    // does not make sense, so we give “es” in both cases.\n    0x0C0A: 'es',\n    0x040A: 'es',\n\n    0x540A: 'es-US',\n    0x380A: 'es-UY',\n    0x200A: 'es-VE',\n    0x081D: 'sv-FI',\n    0x041D: 'sv',\n    0x045A: 'syr',\n    0x0428: 'tg',\n    0x085F: 'tzm',\n    0x0449: 'ta',\n    0x0444: 'tt',\n    0x044A: 'te',\n    0x041E: 'th',\n    0x0451: 'bo',\n    0x041F: 'tr',\n    0x0442: 'tk',\n    0x0480: 'ug',\n    0x0422: 'uk',\n    0x042E: 'hsb',\n    0x0420: 'ur',\n    0x0843: 'uz-Cyrl',\n    0x0443: 'uz',\n    0x042A: 'vi',\n    0x0452: 'cy',\n    0x0488: 'wo',\n    0x0485: 'sah',\n    0x0478: 'ii',\n    0x046A: 'yo'\n};\n\n// Returns a IETF BCP 47 language code, for example 'zh-Hant'\n// for 'Chinese in the traditional script'.\nfunction getLanguageCode(platformID, languageID, ltag) {\n    switch (platformID) {\n        case 0:  // Unicode\n            if (languageID === 0xFFFF) {\n                return 'und';\n            } else if (ltag) {\n                return ltag[languageID];\n            }\n\n            break;\n\n        case 1:  // Macintosh\n            return macLanguages[languageID];\n\n        case 3:  // Windows\n            return windowsLanguages[languageID];\n    }\n\n    return undefined;\n}\n\nconst utf16 = 'utf-16';\n\n// MacOS script ID → encoding. This table stores the default case,\n// which can be overridden by macLanguageEncodings.\nconst macScriptEncodings = {\n    0: 'macintosh',           // smRoman\n    1: 'x-mac-japanese',      // smJapanese\n    2: 'x-mac-chinesetrad',   // smTradChinese\n    3: 'x-mac-korean',        // smKorean\n    6: 'x-mac-greek',         // smGreek\n    7: 'x-mac-cyrillic',      // smCyrillic\n    9: 'x-mac-devanagai',     // smDevanagari\n    10: 'x-mac-gurmukhi',     // smGurmukhi\n    11: 'x-mac-gujarati',     // smGujarati\n    12: 'x-mac-oriya',        // smOriya\n    13: 'x-mac-bengali',      // smBengali\n    14: 'x-mac-tamil',        // smTamil\n    15: 'x-mac-telugu',       // smTelugu\n    16: 'x-mac-kannada',      // smKannada\n    17: 'x-mac-malayalam',    // smMalayalam\n    18: 'x-mac-sinhalese',    // smSinhalese\n    19: 'x-mac-burmese',      // smBurmese\n    20: 'x-mac-khmer',        // smKhmer\n    21: 'x-mac-thai',         // smThai\n    22: 'x-mac-lao',          // smLao\n    23: 'x-mac-georgian',     // smGeorgian\n    24: 'x-mac-armenian',     // smArmenian\n    25: 'x-mac-chinesesimp',  // smSimpChinese\n    26: 'x-mac-tibetan',      // smTibetan\n    27: 'x-mac-mongolian',    // smMongolian\n    28: 'x-mac-ethiopic',     // smEthiopic\n    29: 'x-mac-ce',           // smCentralEuroRoman\n    30: 'x-mac-vietnamese',   // smVietnamese\n    31: 'x-mac-extarabic'     // smExtArabic\n};\n\n// MacOS language ID → encoding. This table stores the exceptional\n// cases, which override macScriptEncodings. For writing MacOS naming\n// tables, we need to emit a MacOS script ID. Therefore, we cannot\n// merge macScriptEncodings into macLanguageEncodings.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageEncodings = {\n    15: 'x-mac-icelandic',    // langIcelandic\n    17: 'x-mac-turkish',      // langTurkish\n    18: 'x-mac-croatian',     // langCroatian\n    24: 'x-mac-ce',           // langLithuanian\n    25: 'x-mac-ce',           // langPolish\n    26: 'x-mac-ce',           // langHungarian\n    27: 'x-mac-ce',           // langEstonian\n    28: 'x-mac-ce',           // langLatvian\n    30: 'x-mac-icelandic',    // langFaroese\n    37: 'x-mac-romanian',     // langRomanian\n    38: 'x-mac-ce',           // langCzech\n    39: 'x-mac-ce',           // langSlovak\n    40: 'x-mac-ce',           // langSlovenian\n    143: 'x-mac-inuit',       // langInuktitut\n    146: 'x-mac-gaelic'       // langIrishGaelicScript\n};\n\nfunction getEncoding(platformID, encodingID, languageID) {\n    switch (platformID) {\n        case 0:  // Unicode\n            return utf16;\n\n        case 1:  // Apple Macintosh\n            return macLanguageEncodings[languageID] || macScriptEncodings[encodingID];\n\n        case 3:  // Microsoft Windows\n            if (encodingID === 1 || encodingID === 10) {\n                return utf16;\n            }\n\n            break;\n    }\n\n    return undefined;\n}\n\n// Parse the naming `name` table.\n// FIXME: Format 1 additional fields are not supported yet.\n// ltag is the content of the `ltag' table, such as ['en', 'zh-Hans', 'de-CH-1904'].\nfunction parseNameTable(data, start, ltag) {\n    const name = {};\n    const p = new parse.Parser(data, start);\n    const format = p.parseUShort();\n    const count = p.parseUShort();\n    const stringOffset = p.offset + p.parseUShort();\n    for (let i = 0; i < count; i++) {\n        const platformID = p.parseUShort();\n        const encodingID = p.parseUShort();\n        const languageID = p.parseUShort();\n        const nameID = p.parseUShort();\n        const property = nameTableNames[nameID] || nameID;\n        const byteLength = p.parseUShort();\n        const offset = p.parseUShort();\n        const language = getLanguageCode(platformID, languageID, ltag);\n        const encoding = getEncoding(platformID, encodingID, languageID);\n        if (encoding !== undefined && language !== undefined) {\n            let text;\n            if (encoding === utf16) {\n                text = decode.UTF16(data, stringOffset + offset, byteLength);\n            } else {\n                text = decode.MACSTRING(data, stringOffset + offset, byteLength, encoding);\n            }\n\n            if (text) {\n                let translations = name[property];\n                if (translations === undefined) {\n                    translations = name[property] = {};\n                }\n\n                translations[language] = text;\n            }\n        }\n    }\n\n    let langTagCount = 0;\n    if (format === 1) {\n        // FIXME: Also handle Microsoft's 'name' table 1.\n        langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\n// {23: 'foo'} → {'foo': 23}\n// ['bar', 'baz'] → {'bar': 0, 'baz': 1}\nfunction reverseDict(dict) {\n    const result = {};\n    for (let key in dict) {\n        result[dict[key]] = parseInt(key);\n    }\n\n    return result;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Record('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\n// Finds the position of needle in haystack, or -1 if not there.\n// Like String.indexOf(), but for arrays.\nfunction findSubArray(needle, haystack) {\n    const needleLength = needle.length;\n    const limit = haystack.length - needleLength + 1;\n\n    loop:\n    for (let pos = 0; pos < limit; pos++) {\n        for (; pos < limit; pos++) {\n            for (let k = 0; k < needleLength; k++) {\n                if (haystack[pos + k] !== needle[k]) {\n                    continue loop;\n                }\n            }\n\n            return pos;\n        }\n    }\n\n    return -1;\n}\n\nfunction addStringToPool(s, pool) {\n    let offset = findSubArray(s, pool);\n    if (offset < 0) {\n        offset = pool.length;\n        let i = 0;\n        const len = s.length;\n        for (; i < len; ++i) {\n            pool.push(s[i]);\n        }\n\n    }\n\n    return offset;\n}\n\nfunction makeNameTable(names, ltag) {\n    let nameID;\n    const nameIDs = [];\n\n    const namesWithNumericKeys = {};\n    const nameTableIds = reverseDict(nameTableNames);\n    for (let key in names) {\n        let id = nameTableIds[key];\n        if (id === undefined) {\n            id = key;\n        }\n\n        nameID = parseInt(id);\n\n        if (isNaN(nameID)) {\n            throw new Error('Name table entry \"' + key + '\" does not exist, see nameTableNames for complete list.');\n        }\n\n        namesWithNumericKeys[nameID] = names[key];\n        nameIDs.push(nameID);\n    }\n\n    const macLanguageIds = reverseDict(macLanguages);\n    const windowsLanguageIds = reverseDict(windowsLanguages);\n\n    const nameRecords = [];\n    const stringPool = [];\n\n    for (let i = 0; i < nameIDs.length; i++) {\n        nameID = nameIDs[i];\n        const translations = namesWithNumericKeys[nameID];\n        for (let lang in translations) {\n            const text = translations[lang];\n\n            // For MacOS, we try to emit the name in the form that was introduced\n            // in the initial version of the TrueType spec (in the late 1980s).\n            // However, this can fail for various reasons: the requested BCP 47\n            // language code might not have an old-style Mac equivalent;\n            // we might not have a codec for the needed character encoding;\n            // or the name might contain characters that cannot be expressed\n            // in the old-style Macintosh encoding. In case of failure, we emit\n            // the name in a more modern fashion (Unicode encoding with BCP 47\n            // language tags) that is recognized by MacOS 10.5, released in 2009.\n            // If fonts were only read by operating systems, we could simply\n            // emit all names in the modern form; this would be much easier.\n            // However, there are many applications and libraries that read\n            // 'name' tables directly, and these will usually only recognize\n            // the ancient form (silently skipping the unrecognized names).\n            let macPlatform = 1;  // Macintosh\n            let macLanguage = macLanguageIds[lang];\n            let macScript = macLanguageToScript[macLanguage];\n            const macEncoding = getEncoding(macPlatform, macScript, macLanguage);\n            let macName = encode.MACSTRING(text, macEncoding);\n            if (macName === undefined) {\n                macPlatform = 0;  // Unicode\n                macLanguage = ltag.indexOf(lang);\n                if (macLanguage < 0) {\n                    macLanguage = ltag.length;\n                    ltag.push(lang);\n                }\n\n                macScript = 4;  // Unicode 2.0 and later\n                macName = encode.UTF16(text);\n            }\n\n            const macNameOffset = addStringToPool(macName, stringPool);\n            nameRecords.push(makeNameRecord(macPlatform, macScript, macLanguage,\n                                            nameID, macName.length, macNameOffset));\n\n            const winLanguage = windowsLanguageIds[lang];\n            if (winLanguage !== undefined) {\n                const winName = encode.UTF16(text);\n                const winNameOffset = addStringToPool(winName, stringPool);\n                nameRecords.push(makeNameRecord(3, 1, winLanguage,\n                                                nameID, winName.length, winNameOffset));\n            }\n        }\n    }\n\n    nameRecords.sort(function(a, b) {\n        return ((a.platformID - b.platformID) ||\n                (a.encodingID - b.encodingID) ||\n                (a.languageID - b.languageID) ||\n                (a.nameID - b.nameID));\n    });\n\n    const t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: nameRecords.length},\n        {name: 'stringOffset', type: 'USHORT', value: 6 + nameRecords.length * 12}\n    ]);\n\n    for (let r = 0; r < nameRecords.length; r++) {\n        t.fields.push({name: 'record_' + r, type: 'RECORD', value: nameRecords[r]});\n    }\n\n    t.fields.push({name: 'strings', type: 'LITERAL', value: stringPool});\n    return t;\n}\n\nexport default { parse: parseNameTable, make: makeNameTable };\n","// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\nconst unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (let i = 0; i < unicodeRanges.length; i += 1) {\n        const range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    const os2 = {};\n    const p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (let i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseOS2Table, make: makeOS2Table, unicodeRanges, getUnicodeRange };\n","// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\nimport { standardNames } from '../encoding';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    const post = {};\n    const p = new parse.Parser(data, start);\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n        case 1:\n            post.names = standardNames.slice();\n            break;\n        case 2:\n            post.numberOfGlyphs = p.parseUShort();\n            post.glyphNameIndex = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.glyphNameIndex[i] = p.parseUShort();\n            }\n\n            post.names = [];\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] >= standardNames.length) {\n                    const nameLength = p.parseChar();\n                    post.names.push(p.parseString(nameLength));\n                }\n            }\n\n            break;\n        case 2.5:\n            post.numberOfGlyphs = p.parseUShort();\n            post.offset = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.offset[i] = p.parseChar();\n            }\n\n            break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexport default { parse: parsePostTable, make: makePostTable };\n","// The `GSUB` table contains ligatures, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\n\nimport check from '../check';\nimport { Parser } from '../parse';\nimport table from '../table';\n\nconst subtableParsers = new Array(9);         // subtableParsers[0] is unused\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#SS\nsubtableParsers[1] = function parseLookup1() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            deltaGlyphId: this.parseUShort()\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            substitute: this.parseOffset16List()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 1 format must be 1 or 2.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#MS\nsubtableParsers[2] = function parseLookup2() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Multiple Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        sequences: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#AS\nsubtableParsers[3] = function parseLookup3() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Alternate Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        alternateSets: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#LS\nsubtableParsers[4] = function parseLookup4() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB ligature table identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        ligatureSets: this.parseListOfLists(function() {\n            return {\n                ligGlyph: this.parseUShort(),\n                components: this.parseUShortList(this.parseUShort() - 1)\n            };\n        })\n    };\n};\n\nconst lookupRecordDesc = {\n    sequenceIndex: Parser.uShort,\n    lookupListIndex: Parser.uShort\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CSF\nsubtableParsers[5] = function parseLookup5() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n\n    if (substFormat === 1) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            ruleSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    input: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            classDef: this.parsePointer(Parser.classDef),\n            classSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    classes: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        const glyphCount = this.parseUShort();\n        const substCount = this.parseUShort();\n        return {\n            substFormat: substFormat,\n            coverages: this.parseList(glyphCount, Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 5 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CC\nsubtableParsers[6] = function parseLookup6() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            chainRuleSets: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            backtrackClassDef: this.parsePointer(Parser.classDef),\n            inputClassDef: this.parsePointer(Parser.classDef),\n            lookaheadClassDef: this.parsePointer(Parser.classDef),\n            chainClassSet: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        return {\n            substFormat: 3,\n            backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 6 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#ES\nsubtableParsers[7] = function parseLookup7() {\n    // Extension Substitution subtable\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Extension Substitution subtable identifier-format must be 1');\n    const extensionLookupType = this.parseUShort();\n    const extensionParser = new Parser(this.data, this.offset + this.parseULong());\n    return {\n        substFormat: 1,\n        lookupType: extensionLookupType,\n        extension: subtableParsers[extensionLookupType].call(extensionParser)\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#RCCS\nsubtableParsers[8] = function parseLookup8() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        substitutes: this.parseUShortList()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\nfunction parseGsubTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion();\n    check.argument(tableVersion === 1, 'Unsupported GSUB table version.');\n    return {\n        version: tableVersion,\n        scripts: p.parseScriptList(),\n        features: p.parseFeatureList(),\n        lookups: p.parseLookupList(subtableParsers)\n    };\n}\n\n// GSUB Writing //////////////////////////////////////////////\nconst subtableMakers = new Array(9);\n\nsubtableMakers[1] = function makeLookup1(subtable) {\n    if (subtable.substFormat === 1) {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 1},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)},\n            {name: 'deltaGlyphID', type: 'USHORT', value: subtable.deltaGlyphId}\n        ]);\n    } else {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 2},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n        ].concat(table.ushortList('substitute', subtable.substitute)));\n    }\n    check.fail('Lookup type 1 substFormat must be 1 or 2.');\n};\n\nsubtableMakers[3] = function makeLookup3(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 3 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('altSet', subtable.alternateSets, function(alternateSet) {\n        return new table.Table('alternateSetTable', table.ushortList('alternate', alternateSet));\n    })));\n};\n\nsubtableMakers[4] = function makeLookup4(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 4 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('ligSet', subtable.ligatureSets, function(ligatureSet) {\n        return new table.Table('ligatureSetTable', table.tableList('ligature', ligatureSet, function(ligature) {\n            return new table.Table('ligatureTable',\n                [{name: 'ligGlyph', type: 'USHORT', value: ligature.ligGlyph}]\n                .concat(table.ushortList('component', ligature.components, ligature.components.length + 1))\n            );\n        }));\n    })));\n};\n\nfunction makeGsubTable(gsub) {\n    return new table.Table('GSUB', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gsub.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gsub.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gsub.lookups, subtableMakers)}\n    ]);\n}\n\nexport default { parse: parseGsubTable, make: makeGsubTable };\n","// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\nimport check from '../check';\nimport { decode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the metadata `meta` table.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6meta.html\nfunction parseMetaTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported META table version.');\n    p.parseULong(); // flags - currently unused and set to 0\n    p.parseULong(); // tableOffset\n    const numDataMaps = p.parseULong();\n\n    const tags = {};\n    for (let i = 0; i < numDataMaps; i++) {\n        const tag = p.parseTag();\n        const dataOffset = p.parseULong();\n        const dataLength = p.parseULong();\n        const text = decode.UTF8(data, start + dataOffset, dataLength);\n\n        tags[tag] = text;\n    }\n    return tags;\n}\n\nfunction makeMetaTable(tags) {\n    const numTags = Object.keys(tags).length;\n    let stringPool = '';\n    const stringPoolOffset = 16 + numTags * 12;\n\n    const result = new table.Table('meta', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'offset', type: 'ULONG', value: stringPoolOffset},\n        {name: 'numTags', type: 'ULONG', value: numTags}\n    ]);\n\n    for (let tag in tags) {\n        const pos = stringPool.length;\n        stringPool += tags[tag];\n\n        result.fields.push({name: 'tag ' + tag, type: 'TAG', value: tag});\n        result.fields.push({name: 'offset ' + tag, type: 'ULONG', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + tag, type: 'ULONG', value: tags[tag].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n\n    return result;\n}\n\nexport default { parse: parseMetaTable, make: makeMetaTable };\n","// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\nimport check from '../check';\nimport table from '../table';\n\nimport cmap from './cmap';\nimport cff from './cff';\nimport head from './head';\nimport hhea from './hhea';\nimport hmtx from './hmtx';\nimport ltag from './ltag';\nimport maxp from './maxp';\nimport _name from './name';\nimport os2 from './os2';\nimport post from './post';\nimport gsub from './gsub';\nimport meta from './meta';\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    let sum = 0;\n    for (let i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Record('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    const sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    const highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    const recordFields = [];\n    const tableFields = [];\n\n    let offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (let i = 0; i < tables.length; i += 1) {\n        const t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        const tableLength = t.sizeOf();\n        const tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'RECORD', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'RECORD', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (let i = 0; i < chars.length; i += 1) {\n        const glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            const glyph = font.glyphs.get(glyphIndex);\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    let sum = 0;\n    for (let i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    const xMins = [];\n    const yMins = [];\n    const xMaxs = [];\n    const yMaxs = [];\n    const advanceWidths = [];\n    const leftSideBearings = [];\n    const rightSideBearings = [];\n    let firstCharIndex;\n    let lastCharIndex = 0;\n    let ulUnicodeRange1 = 0;\n    let ulUnicodeRange2 = 0;\n    let ulUnicodeRange3 = 0;\n    let ulUnicodeRange4 = 0;\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        const glyph = font.glyphs.get(i);\n        const unicode = glyph.unicode | 0;\n\n        if (isNaN(glyph.advanceWidth)) {\n            throw new Error('Glyph ' + glyph.name + ' (' + i + '): advanceWidth is not a number.');\n        }\n\n        if (firstCharIndex > unicode || firstCharIndex === undefined) {\n            // ignore .notdef char\n            if (unicode > 0) {\n                firstCharIndex = unicode;\n            }\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        const position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        const metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    const globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender;\n    globals.descender = font.descender;\n\n    const headTable = head.make({\n        flags: 3, // 00000011 (baseline for font at y=0; left sidebearing point at x=0)\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax,\n        lowestRecPPEM: 3,\n        createdTimestamp: font.createdTimestamp\n    });\n\n    const hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    const maxpTable = maxp.make(font.glyphs.length);\n\n    const os2Table = os2.make({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usWeightClass: font.tables.os2.usWeightClass,\n        usWidthClass: font.tables.os2.usWidthClass,\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        fsSelection: font.tables.os2.fsSelection, // REGULAR\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.yMax,\n        usWinDescent: Math.abs(globals.yMin),\n        ulCodePageRange1: 1, // FIXME: hard-code Latin 1 support for now\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: Math.round(globals.ascender / 2)}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usDefaultChar: font.hasChar(' ') ? 32 : 0, // Use space as the default character, if available.\n        usBreakChar: font.hasChar(' ') ? 32 : 0 // Use space as the break character, if available.\n    });\n\n    const hmtxTable = hmtx.make(font.glyphs);\n    const cmapTable = cmap.make(font.glyphs);\n\n    const englishFamilyName = font.getEnglishName('fontFamily');\n    const englishStyleName = font.getEnglishName('fontSubfamily');\n    const englishFullName = englishFamilyName + ' ' + englishStyleName;\n    let postScriptName = font.getEnglishName('postScriptName');\n    if (!postScriptName) {\n        postScriptName = englishFamilyName.replace(/\\s/g, '') + '-' + englishStyleName;\n    }\n\n    const names = {};\n    for (let n in font.names) {\n        names[n] = font.names[n];\n    }\n\n    if (!names.uniqueID) {\n        names.uniqueID = {en: font.getEnglishName('manufacturer') + ':' + englishFullName};\n    }\n\n    if (!names.postScriptName) {\n        names.postScriptName = {en: postScriptName};\n    }\n\n    if (!names.preferredFamily) {\n        names.preferredFamily = font.names.fontFamily;\n    }\n\n    if (!names.preferredSubfamily) {\n        names.preferredSubfamily = font.names.fontSubfamily;\n    }\n\n    const languageTags = [];\n    const nameTable = _name.make(names, languageTags);\n    const ltagTable = (languageTags.length > 0 ? ltag.make(languageTags) : undefined);\n\n    const postTable = post.make();\n    const cffTable = cff.make(font.glyphs, {\n        version: font.getEnglishName('version'),\n        fullName: englishFullName,\n        familyName: englishFamilyName,\n        weightName: englishStyleName,\n        postScriptName: postScriptName,\n        unitsPerEm: font.unitsPerEm,\n        fontBBox: [0, globals.yMin, globals.ascender, globals.advanceWidthMax]\n    });\n\n    const metaTable = (font.metas && Object.keys(font.metas).length > 0) ? meta.make(font.metas) : undefined;\n\n    // The order does not matter because makeSfntTable() will sort them.\n    const tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n    if (ltagTable) {\n        tables.push(ltagTable);\n    }\n    // Optional tables\n    if (font.tables.gsub) {\n        tables.push(gsub.make(font.tables.gsub));\n    }\n    if (metaTable) {\n        tables.push(metaTable);\n    }\n\n    const sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    const bytes = sfntTable.encode();\n    const checkSum = computeCheckSum(bytes);\n    const tableFields = sfntTable.fields;\n    let checkSumAdjusted = false;\n    for (let i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexport default { make: makeSfntTable, fontToTable: fontToSfntTable, computeCheckSum };\n","// The Layout object is the prototype of Substitution objects, and provides\n// utility methods to manipulate common layout tables (GPOS, GSUB, GDEF...)\n\nimport check from './check';\n\nfunction searchTag(arr, tag) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid].tag;\n        if (val === tag) {\n            return imid;\n        } else if (val < tag) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\nfunction binSearch(arr, value) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid];\n        if (val === value) {\n            return imid;\n        } else if (val < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\n/**\n * @exports opentype.Layout\n * @class\n */\nfunction Layout(font, tableName) {\n    this.font = font;\n    this.tableName = tableName;\n}\n\nLayout.prototype = {\n\n    /**\n     * Binary search an object by \"tag\" property\n     * @instance\n     * @function searchTag\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {string} tag\n     * @return {number}\n     */\n    searchTag: searchTag,\n\n    /**\n     * Binary search in a list of numbers\n     * @instance\n     * @function binSearch\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {number} value\n     * @return {number}\n     */\n    binSearch: binSearch,\n\n    /**\n     * Get or create the Layout table (GSUB, GPOS etc).\n     * @param  {boolean} create - Whether to create a new one.\n     * @return {Object} The GSUB or GPOS table.\n     */\n    getTable: function(create) {\n        let layout = this.font.tables[this.tableName];\n        if (!layout && create) {\n            layout = this.font.tables[this.tableName] = this.createDefaultTable();\n        }\n        return layout;\n    },\n\n    /**\n     * Returns all scripts in the substitution table.\n     * @instance\n     * @return {Array}\n     */\n    getScriptNames: function() {\n        let layout = this.getTable();\n        if (!layout) { return []; }\n        return layout.scripts.map(function(script) {\n            return script.tag;\n        });\n    },\n\n    /**\n     * Returns the best bet for a script name.\n     * Returns 'DFLT' if it exists.\n     * If not, returns 'latn' if it exists.\n     * If neither exist, returns undefined.\n     */\n    getDefaultScriptName: function() {\n        let layout = this.getTable();\n        if (!layout) { return; }\n        let hasLatn = false;\n        for (let i = 0; i < layout.scripts.length; i++) {\n            const name = layout.scripts[i].tag;\n            if (name === 'DFLT') return name;\n            if (name === 'latn') hasLatn = true;\n        }\n        if (hasLatn) return 'latn';\n    },\n\n    /**\n     * Returns all LangSysRecords in the given script.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {boolean} create - forces the creation of this script table if it doesn't exist.\n     * @return {Object} An object with tag and script properties.\n     */\n    getScriptTable: function(script, create) {\n        const layout = this.getTable(create);\n        if (layout) {\n            script = script || 'DFLT';\n            const scripts = layout.scripts;\n            const pos = searchTag(layout.scripts, script);\n            if (pos >= 0) {\n                return scripts[pos].script;\n            } else if (create) {\n                const scr = {\n                    tag: script,\n                    script: {\n                        defaultLangSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []},\n                        langSysRecords: []\n                    }\n                };\n                scripts.splice(-1 - pos, 0, scr);\n                return scr.script;\n            }\n        }\n    },\n\n    /**\n     * Returns a language system table\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.\n     * @return {Object}\n     */\n    getLangSysTable: function(script, language, create) {\n        const scriptTable = this.getScriptTable(script, create);\n        if (scriptTable) {\n            if (!language || language === 'dflt' || language === 'DFLT') {\n                return scriptTable.defaultLangSys;\n            }\n            const pos = searchTag(scriptTable.langSysRecords, language);\n            if (pos >= 0) {\n                return scriptTable.langSysRecords[pos].langSys;\n            } else if (create) {\n                const langSysRecord = {\n                    tag: language,\n                    langSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []}\n                };\n                scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);\n                return langSysRecord.langSys;\n            }\n        }\n    },\n\n    /**\n     * Get a specific feature table.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm\n     * @param {boolean} create - forces the creation of the feature table if it doesn't exist.\n     * @return {Object}\n     */\n    getFeatureTable: function(script, language, feature, create) {\n        const langSysTable = this.getLangSysTable(script, language, create);\n        if (langSysTable) {\n            let featureRecord;\n            const featIndexes = langSysTable.featureIndexes;\n            const allFeatures = this.font.tables[this.tableName].features;\n            // The FeatureIndex array of indices is in arbitrary order,\n            // even if allFeatures is sorted alphabetically by feature tag.\n            for (let i = 0; i < featIndexes.length; i++) {\n                featureRecord = allFeatures[featIndexes[i]];\n                if (featureRecord.tag === feature) {\n                    return featureRecord.feature;\n                }\n            }\n            if (create) {\n                const index = allFeatures.length;\n                // Automatic ordering of features would require to shift feature indexes in the script list.\n                check.assert(index === 0 || feature >= allFeatures[index - 1].tag, 'Features must be added in alphabetical order.');\n                featureRecord = {\n                    tag: feature,\n                    feature: { params: 0, lookupListIndexes: [] }\n                };\n                allFeatures.push(featureRecord);\n                featIndexes.push(index);\n                return featureRecord.feature;\n            }\n        }\n    },\n\n    /**\n     * Get the lookup tables of a given type for a script/language/feature.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - 4-letter feature code\n     * @param {number} lookupType - 1 to 8\n     * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.\n     * @return {Object[]}\n     */\n    getLookupTables: function(script, language, feature, lookupType, create) {\n        const featureTable = this.getFeatureTable(script, language, feature, create);\n        const tables = [];\n        if (featureTable) {\n            let lookupTable;\n            const lookupListIndexes = featureTable.lookupListIndexes;\n            const allLookups = this.font.tables[this.tableName].lookups;\n            // lookupListIndexes are in no particular order, so use naive search.\n            for (let i = 0; i < lookupListIndexes.length; i++) {\n                lookupTable = allLookups[lookupListIndexes[i]];\n                if (lookupTable.lookupType === lookupType) {\n                    tables.push(lookupTable);\n                }\n            }\n            if (tables.length === 0 && create) {\n                lookupTable = {\n                    lookupType: lookupType,\n                    lookupFlag: 0,\n                    subtables: [],\n                    markFilteringSet: undefined\n                };\n                const index = allLookups.length;\n                allLookups.push(lookupTable);\n                lookupListIndexes.push(index);\n                return [lookupTable];\n            }\n        }\n        return tables;\n    },\n\n    /**\n     * Returns the list of glyph indexes of a coverage table.\n     * Format 1: the list is stored raw\n     * Format 2: compact list as range records.\n     * @instance\n     * @param  {Object} coverageTable\n     * @return {Array}\n     */\n    expandCoverage: function(coverageTable) {\n        if (coverageTable.format === 1) {\n            return coverageTable.glyphs;\n        } else {\n            const glyphs = [];\n            const ranges = coverageTable.ranges;\n            for (let i = 0; i < ranges.length; i++) {\n                const range = ranges[i];\n                const start = range.start;\n                const end = range.end;\n                for (let j = start; j <= end; j++) {\n                    glyphs.push(j);\n                }\n            }\n            return glyphs;\n        }\n    }\n\n};\n\nexport default Layout;\n","// The Substitution object provides utility methods to manipulate\n// the GSUB substitution table.\n\nimport check from './check';\nimport Layout from './layout';\n\n/**\n * @exports opentype.Substitution\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Substitution(font) {\n    Layout.call(this, font, 'gsub');\n}\n\n// Check if 2 arrays of primitives are equal.\nfunction arraysEqual(ar1, ar2) {\n    const n = ar1.length;\n    if (n !== ar2.length) { return false; }\n    for (let i = 0; i < n; i++) {\n        if (ar1[i] !== ar2[i]) { return false; }\n    }\n    return true;\n}\n\n// Find the first subtable of a lookup table in a particular format.\nfunction getSubstFormat(lookupTable, format, defaultSubtable) {\n    const subtables = lookupTable.subtables;\n    for (let i = 0; i < subtables.length; i++) {\n        const subtable = subtables[i];\n        if (subtable.substFormat === format) {\n            return subtable;\n        }\n    }\n    if (defaultSubtable) {\n        subtables.push(defaultSubtable);\n        return defaultSubtable;\n    }\n    return undefined;\n}\n\nSubstitution.prototype = Layout.prototype;\n\n/**\n * Create a default GSUB table.\n * @return {Object} gsub - The GSUB table.\n */\nSubstitution.prototype.createDefaultTable = function() {\n    // Generate a default empty GSUB table with just a DFLT script and dflt lang sys.\n    return {\n        version: 1,\n        scripts: [{\n            tag: 'DFLT',\n            script: {\n                defaultLangSys: { reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: [] },\n                langSysRecords: []\n            }\n        }],\n        features: [],\n        lookups: []\n    };\n};\n\n/**\n * List all single substitutions (lookup type 1) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt', 'ss01'...)\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getSingle = function(feature, script, language) {\n    const substitutions = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 1);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            let j;\n            if (subtable.substFormat === 1) {\n                const delta = subtable.deltaGlyphId;\n                for (j = 0; j < glyphs.length; j++) {\n                    const glyph = glyphs[j];\n                    substitutions.push({ sub: glyph, by: glyph + delta });\n                }\n            } else {\n                const substitute = subtable.substitute;\n                for (j = 0; j < glyphs.length; j++) {\n                    substitutions.push({ sub: glyphs[j], by: substitute[j] });\n                }\n            }\n        }\n    }\n    return substitutions;\n};\n\n/**\n * List all alternates (lookup type 3) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt'...)\n * @return {Array} alternates - The list of alternates\n */\nSubstitution.prototype.getAlternates = function(feature, script, language) {\n    const alternates = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 3);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const alternateSets = subtable.alternateSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                alternates.push({ sub: glyphs[j], by: alternateSets[j] });\n            }\n        }\n    }\n    return alternates;\n};\n\n/**\n * List all ligatures (lookup type 4) for a given script, language, and feature.\n * The result is an array of ligature objects like { sub: [ids], by: id }\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} ligatures - The list of ligatures.\n */\nSubstitution.prototype.getLigatures = function(feature, script, language) {\n    const ligatures = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 4);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const ligatureSets = subtable.ligatureSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                const startGlyph = glyphs[j];\n                const ligSet = ligatureSets[j];\n                for (let k = 0; k < ligSet.length; k++) {\n                    const lig = ligSet[k];\n                    ligatures.push({\n                        sub: [startGlyph].concat(lig.components),\n                        by: lig.ligGlyph\n                    });\n                }\n            }\n        }\n    }\n    return ligatures;\n};\n\n/**\n * Add or modify a single substitution (lookup type 1)\n * Format 2, more flexible, is always used.\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, delta: number } for format 1 or { sub: id, by: id } for format 2.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addSingle = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 1, true)[0];\n    const subtable = getSubstFormat(lookupTable, 2, {                // lookup type 1 subtable, format 2, coverage format 1\n        substFormat: 2,\n        coverage: {format: 1, glyphs: []},\n        substitute: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.substitute.splice(pos, 0, 0);\n    }\n    subtable.substitute[pos] = substitution.by;\n};\n\n/**\n * Add or modify an alternate substitution (lookup type 1)\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, by: [ids] }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addAlternate = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 3, true)[0];\n    const subtable = getSubstFormat(lookupTable, 1, {                // lookup type 3 subtable, format 1, coverage format 1\n        substFormat: 1,\n        coverage: {format: 1, glyphs: []},\n        alternateSets: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.alternateSets.splice(pos, 0, 0);\n    }\n    subtable.alternateSets[pos] = substitution.by;\n};\n\n/**\n * Add a ligature (lookup type 4)\n * Ligatures with more components must be stored ahead of those with fewer components in order to be found\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} ligature - { sub: [ids], by: id }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addLigature = function(feature, ligature, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 4, true)[0];\n    let subtable = lookupTable.subtables[0];\n    if (!subtable) {\n        subtable = {                // lookup type 4 subtable, format 1, coverage format 1\n            substFormat: 1,\n            coverage: { format: 1, glyphs: [] },\n            ligatureSets: []\n        };\n        lookupTable.subtables[0] = subtable;\n    }\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = ligature.sub[0];\n    const ligComponents = ligature.sub.slice(1);\n    const ligatureTable = {\n        ligGlyph: ligature.by,\n        components: ligComponents\n    };\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos >= 0) {\n        // ligatureSet already exists\n        const ligatureSet = subtable.ligatureSets[pos];\n        for (let i = 0; i < ligatureSet.length; i++) {\n            // If ligature already exists, return.\n            if (arraysEqual(ligatureSet[i].components, ligComponents)) {\n                return;\n            }\n        }\n        // ligature does not exist: add it.\n        ligatureSet.push(ligatureTable);\n    } else {\n        // Create a new ligatureSet and add coverage for the first glyph.\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.ligatureSets.splice(pos, 0, [ligatureTable]);\n    }\n};\n\n/**\n * List all feature data for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getFeature = function(feature, script, language) {\n    if (/ss\\d\\d/.test(feature)) {               // ss01 - ss20\n        return this.getSingle(feature, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            return this.getSingle(feature, script, language)\n                    .concat(this.getAlternates(feature, script, language));\n        case 'dlig':\n        case 'liga':\n        case 'rlig': return this.getLigatures(feature, script, language);\n    }\n    return undefined;\n};\n\n/**\n * Add a substitution to a feature for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {Object} sub - the substitution to add (an object like { sub: id or [ids], by: id or [ids] })\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.add = function(feature, sub, script, language) {\n    if (/ss\\d\\d/.test(feature)) {               // ss01 - ss20\n        return this.addSingle(feature, sub, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            if (typeof sub.by === 'number') {\n                return this.addSingle(feature, sub, script, language);\n            }\n            return this.addAlternate(feature, sub, script, language);\n        case 'dlig':\n        case 'liga':\n        case 'rlig':\n            return this.addLigature(feature, sub, script, language);\n    }\n    return undefined;\n};\n\nexport default Substitution;\n","function isBrowser() {\n    return typeof window !== 'undefined';\n}\n\nfunction isNode() {\n    return typeof window === 'undefined';\n}\n\nfunction nodeBufferToArrayBuffer(buffer) {\n    const ab = new ArrayBuffer(buffer.length);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        view[i] = buffer[i];\n    }\n\n    return ab;\n}\n\nfunction arrayBufferToNodeBuffer(ab) {\n    const buffer = new Buffer(ab.byteLength);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n\n    return buffer;\n}\n\nfunction checkArgument(expression, message) {\n    if (!expression) {\n        throw message;\n    }\n}\n\nexport { isBrowser, isNode, nodeBufferToArrayBuffer, arrayBufferToNodeBuffer, checkArgument };\n","/* A TrueType font hinting interpreter.\n*\n* (c) 2017 Axel Kittenberger\n*\n* This interpreter has been implemented according to this documentation:\n* https://developer.apple.com/fonts/TrueType-Reference-Manual/RM05/Chap5.html\n*\n* According to the documentation F24DOT6 values are used for pixels.\n* That means calculation is 1/64 pixel accurate and uses integer operations.\n* However, Javascript has floating point operations by default and only\n* those are available. One could make a case to simulate the 1/64 accuracy\n* exactly by truncating after every division operation\n* (for example with << 0) to get pixel exactly results as other TrueType\n* implementations. It may make sense since some fonts are pixel optimized\n* by hand using DELTAP instructions. The current implementation doesn't\n* and rather uses full floating point precision.\n*\n* xScale, yScale and rotation is currently ignored.\n*\n* A few non-trivial instructions are missing as I didn't encounter yet\n* a font that used them to test a possible implementation.\n*\n* Some fonts seem to use undocumented features regarding the twilight zone.\n* Only some of them are implemented as they were encountered.\n*\n* The exports.DEBUG statements are removed on the minified distribution file.\n*/\n'use strict';\n\nlet instructionTable;\nlet exec;\nlet execGlyph;\nlet execComponent;\n\n/*\n* Creates a hinting object.\n*\n* There ought to be exactly one\n* for each truetype font that is used for hinting.\n*/\nfunction Hinting(font) {\n    // the font this hinting object is for\n    this.font = font;\n\n    // cached states\n    this._fpgmState  =\n    this._prepState  =\n        undefined;\n\n    // errorState\n    // 0 ... all okay\n    // 1 ... had an error in a glyf,\n    //       continue working but stop spamming\n    //       the console\n    // 2 ... error at prep, stop hinting at this ppem\n    // 3 ... error at fpeg, stop hinting for this font at all\n    this._errorState = 0;\n}\n\n/*\n* Not rounding.\n*/\nfunction roundOff(v) {\n    return v;\n}\n\n/*\n* Rounding to grid.\n*/\nfunction roundToGrid(v) {\n    //Rounding in TT is supposed to \"symmetrical around zero\"\n    return Math.sign(v) * Math.round(Math.abs(v));\n}\n\n/*\n* Rounding to double grid.\n*/\nfunction roundToDoubleGrid(v) {\n    return Math.sign(v) * Math.round(Math.abs(v * 2)) / 2;\n}\n\n/*\n* Rounding to half grid.\n*/\nfunction roundToHalfGrid(v) {\n    return Math.sign(v) * (Math.round(Math.abs(v) + 0.5) - 0.5);\n}\n\n/*\n* Rounding to up to grid.\n*/\nfunction roundUpToGrid(v) {\n    return Math.sign(v) * Math.ceil(Math.abs(v));\n}\n\n/*\n* Rounding to down to grid.\n*/\nfunction roundDownToGrid(v) {\n    return Math.sign(v) * Math.floor(Math.abs(v));\n}\n\n/*\n* Super rounding.\n*/\nconst roundSuper = function (v) {\n    const period = this.srPeriod;\n    let phase = this.srPhase;\n    const threshold = this.srThreshold;\n    let sign = 1;\n\n    if (v < 0) {\n        v = -v;\n        sign = -1;\n    }\n\n    v += threshold - phase;\n\n    v = Math.trunc(v / period) * period;\n\n    v += phase;\n\n    // according to http://xgridfit.sourceforge.net/round.html\n    if (sign > 0 && v < 0) return phase;\n    if (sign < 0 && v > 0) return -phase;\n\n    return v * sign;\n};\n\n/*\n* Unit vector of x-axis.\n*/\nconst xUnitVector = {\n    x: 1,\n\n    y: 0,\n\n    axis: 'x',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.xo : p1.x) - (o2 ? p2.xo : p2.x);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.xo - rp1.xo;\n            do2 = p.xo - rp2.xo;\n            dm1 = rp1.x - rp1.xo;\n            dm2 = rp2.x - rp2.xo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.x = p.xo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.x = p.xo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            xUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        xUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this\n    normalSlope: Number.NEGATIVE_INFINITY,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'.\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.x = (org ? rp.xo : rp.x) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.x = rpdx + (p.y - rpdy) / pv.normalSlope;\n    },\n\n    // Slope of vector line.\n    slope: 0,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.xTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.xTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.xTouched = false;\n    }\n};\n\n/*\n* Unit vector of y-axis.\n*/\nconst yUnitVector = {\n    x: 0,\n\n    y: 1,\n\n    axis: 'y',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.yo : p1.y) - (o2 ? p2.yo : p2.y);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.yo - rp1.yo;\n            do2 = p.yo - rp2.yo;\n            dm1 = rp1.y - rp1.yo;\n            dm2 = rp2.y - rp2.yo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.y = p.yo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.y = p.yo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            yUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        yUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this.\n    normalSlope: 0,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.y = (org ? rp.yo : rp.y) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.y = rpdy + pv.normalSlope * (p.x - rpdx);\n    },\n\n    // Slope of vector line.\n    slope: Number.POSITIVE_INFINITY,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.yTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.yTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.yTouched = false;\n    }\n};\n\nObject.freeze(xUnitVector);\nObject.freeze(yUnitVector);\n\n/*\n* Creates a unit vector that is not x- or y-axis.\n*/\nfunction UnitVector(x, y) {\n    this.x = x;\n    this.y = y;\n    this.axis = undefined;\n    this.slope = y / x;\n    this.normalSlope = -x / y;\n    Object.freeze(this);\n}\n\n/*\n* Gets the projected distance between two points.\n* o1/o2 ... if true, respective original position is used.\n*/\nUnitVector.prototype.distance = function(p1, p2, o1, o2) {\n    return (\n        this.x * xUnitVector.distance(p1, p2, o1, o2) +\n        this.y * yUnitVector.distance(p1, p2, o1, o2)\n    );\n};\n\n/*\n* Moves point p so the moved position has the same relative\n* position to the moved positions of rp1 and rp2 than the\n* original positions had.\n*\n* See APPENDIX on INTERPOLATE at the bottom of this file.\n*/\nUnitVector.prototype.interpolate = function(p, rp1, rp2, pv) {\n    let dm1;\n    let dm2;\n    let do1;\n    let do2;\n    let doa1;\n    let doa2;\n    let dt;\n\n    do1 = pv.distance(p, rp1, true, true);\n    do2 = pv.distance(p, rp2, true, true);\n    dm1 = pv.distance(rp1, rp1, false, true);\n    dm2 = pv.distance(rp2, rp2, false, true);\n    doa1 = Math.abs(do1);\n    doa2 = Math.abs(do2);\n    dt = doa1 + doa2;\n\n    if (dt === 0) {\n        this.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n        return;\n    }\n\n    this.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n};\n\n/*\n* Sets the point 'p' relative to point 'rp'\n* by the distance 'd'\n*\n* See APPENDIX on SETRELATIVE at the bottom of this file.\n*\n* p   ...  point to set\n* rp  ... reference point\n* d   ... distance on projection vector\n* pv  ... projection vector (undefined = this)\n* org ... if true, uses the original position of rp as reference.\n*/\nUnitVector.prototype.setRelative = function(p, rp, d, pv, org) {\n    pv = pv || this;\n\n    const rpx = org ? rp.xo : rp.x;\n    const rpy = org ? rp.yo : rp.y;\n    const rpdx = rpx + d * pv.x;\n    const rpdy = rpy + d * pv.y;\n\n    const pvns = pv.normalSlope;\n    const fvs = this.slope;\n\n    const px = p.x;\n    const py = p.y;\n\n    p.x = (fvs * px - pvns * rpdx + rpdy - py) / (fvs - pvns);\n    p.y = fvs * (p.x - px) + py;\n};\n\n/*\n* Touches the point p.\n*/\nUnitVector.prototype.touch = function(p) {\n    p.xTouched = true;\n    p.yTouched = true;\n};\n\n/*\n* Returns a unit vector with x/y coordinates.\n*/\nfunction getUnitVector(x, y) {\n    const d = Math.sqrt(x * x + y * y);\n\n    x /= d;\n    y /= d;\n\n    if (x === 1 && y === 0) return xUnitVector;\n    else if (x === 0 && y === 1) return yUnitVector;\n    else return new UnitVector(x, y);\n}\n\n/*\n* Creates a point in the hinting engine.\n*/\nfunction HPoint(\n    x,\n    y,\n    lastPointOfContour,\n    onCurve\n) {\n    this.x = this.xo = Math.round(x * 64) / 64; // hinted x value and original x-value\n    this.y = this.yo = Math.round(y * 64) / 64; // hinted y value and original y-value\n\n    this.lastPointOfContour = lastPointOfContour;\n    this.onCurve = onCurve;\n    this.prevPointOnContour = undefined;\n    this.nextPointOnContour = undefined;\n    this.xTouched = false;\n    this.yTouched = false;\n\n    Object.preventExtensions(this);\n}\n\n/*\n* Returns the next touched point on the contour.\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.nextTouched = function(v) {\n    let p = this.nextPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.nextPointOnContour;\n\n    return p;\n};\n\n/*\n* Returns the previous touched point on the contour\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.prevTouched = function(v) {\n    let p = this.prevPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.prevPointOnContour;\n\n    return p;\n};\n\n/*\n* The zero point.\n*/\nconst HPZero = Object.freeze(new HPoint(0, 0));\n\n/*\n* The default state of the interpreter.\n*\n* Note: Freezing the defaultState and then deriving from it\n* makes the V8 Javascript engine going awkward,\n* so this is avoided, albeit the defaultState shouldn't\n* ever change.\n*/\nconst defaultState = {\n    cvCutIn: 17 / 16,    // control value cut in\n    deltaBase: 9,\n    deltaShift: 0.125,\n    loop: 1,             // loops some instructions\n    minDis: 1,           // minimum distance\n    autoFlip: true\n};\n\n/*\n* The current state of the interpreter.\n*\n* env  ... 'fpgm' or 'prep' or 'glyf'\n* prog ... the program\n*/\nfunction State(env, prog) {\n    this.env = env;\n    this.stack = [];\n    this.prog = prog;\n\n    switch (env) {\n        case 'glyf' :\n            this.zp0 = this.zp1 = this.zp2 = 1;\n            this.rp0 = this.rp1 = this.rp2 = 0;\n            /* fall through */\n        case 'prep' :\n            this.fv = this.pv = this.dpv = xUnitVector;\n            this.round = roundToGrid;\n    }\n}\n\n/*\n* Executes a glyph program.\n*\n* This does the hinting for each glyph.\n*\n* Returns an array of moved points.\n*\n* glyph: the glyph to hint\n* ppem: the size the glyph is rendered for\n*/\nHinting.prototype.exec = function(glyph, ppem) {\n    if (typeof ppem !== 'number') {\n        throw new Error('Point size is not a number!');\n    }\n\n    // Received a fatal error, don't do any hinting anymore.\n    if (this._errorState > 2) return;\n\n    const font = this.font;\n    let prepState = this._prepState;\n\n    if (!prepState || prepState.ppem !== ppem) {\n        let fpgmState = this._fpgmState;\n\n        if (!fpgmState) {\n            // Executes the fpgm state.\n            // This is used by fonts to define functions.\n            State.prototype = defaultState;\n\n            fpgmState =\n            this._fpgmState =\n                new State('fpgm', font.tables.fpgm);\n\n            fpgmState.funcs = [ ];\n            fpgmState.font = font;\n\n            if (exports.DEBUG) {\n                console.log('---EXEC FPGM---');\n                fpgmState.step = -1;\n            }\n\n            try {\n                exec(fpgmState);\n            } catch (e) {\n                console.log('Hinting error in FPGM:' + e);\n                this._errorState = 3;\n                return;\n            }\n        }\n\n        // Executes the prep program for this ppem setting.\n        // This is used by fonts to set cvt values\n        // depending on to be rendered font size.\n\n        State.prototype = fpgmState;\n        prepState =\n        this._prepState =\n            new State('prep', font.tables.prep);\n\n        prepState.ppem = ppem;\n\n        // Creates a copy of the cvt table\n        // and scales it to the current ppem setting.\n        const oCvt = font.tables.cvt;\n        if (oCvt) {\n            const cvt = prepState.cvt = new Array(oCvt.length);\n            const scale = ppem / font.unitsPerEm;\n            for (let c = 0; c < oCvt.length; c++) {\n                cvt[c] = oCvt[c] * scale;\n            }\n        } else {\n            prepState.cvt = [];\n        }\n\n        if (exports.DEBUG) {\n            console.log('---EXEC PREP---');\n            prepState.step = -1;\n        }\n\n        try {\n            exec(prepState);\n        } catch (e) {\n            if (this._errorState < 2) {\n                console.log('Hinting error in PREP:' + e);\n            }\n            this._errorState = 2;\n        }\n    }\n\n    if (this._errorState > 1) return;\n\n    try {\n        return execGlyph(glyph, prepState);\n    } catch (e) {\n        if (this._errorState < 1) {\n            console.log('Hinting error:' + e);\n            console.log('Note: further hinting errors are silenced');\n        }\n        this._errorState = 1;\n        return undefined;\n    }\n};\n\n/*\n* Executes the hinting program for a glyph.\n*/\nexecGlyph = function(glyph, prepState) {\n    // original point positions\n    const xScale = prepState.ppem / prepState.font.unitsPerEm;\n    const yScale = xScale;\n    let components = glyph.components;\n    let contours;\n    let gZone;\n    let state;\n\n    State.prototype = prepState;\n    if (!components) {\n        state = new State('glyf', glyph.instructions);\n        if (exports.DEBUG) {\n            console.log('---EXEC GLYPH---');\n            state.step = -1;\n        }\n        execComponent(glyph, state, xScale, yScale);\n        gZone = state.gZone;\n    } else {\n        const font = prepState.font;\n        gZone = [];\n        contours = [];\n        for (let i = 0; i < components.length; i++) {\n            const c = components[i];\n            const cg = font.glyphs.get(c.glyphIndex);\n\n            state = new State('glyf', cg.instructions);\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMP ' + i + '---');\n                state.step = -1;\n            }\n\n            execComponent(cg, state, xScale, yScale);\n            // appends the computed points to the result array\n            // post processes the component points\n            const dx = Math.round(c.dx * xScale);\n            const dy = Math.round(c.dy * yScale);\n            const gz = state.gZone;\n            const cc = state.contours;\n            for (let pi = 0; pi < gz.length; pi++) {\n                const p = gz[pi];\n                p.xTouched = p.yTouched = false;\n                p.xo = p.x = p.x + dx;\n                p.yo = p.y = p.y + dy;\n            }\n\n            const gLen = gZone.length;\n            gZone.push.apply(gZone, gz);\n            for (let j = 0; j < cc.length; j++) {\n                contours.push(cc[j] + gLen);\n            }\n        }\n\n        if (glyph.instructions && !state.inhibitGridFit) {\n            // the composite has instructions on its own\n            state = new State('glyf', glyph.instructions);\n\n            state.gZone = state.z0 = state.z1 = state.z2 = gZone;\n\n            state.contours = contours;\n\n            // note: HPZero cannot be used here, since\n            //       the point might be modified\n            gZone.push(\n                new HPoint(0, 0),\n                new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n            );\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMPOSITE---');\n                state.step = -1;\n            }\n\n            exec(state);\n\n            gZone.length -= 2;\n        }\n    }\n\n    return gZone;\n};\n\n/*\n* Executes the hinting program for a component of a multi-component glyph\n* or of the glyph itself by a non-component glyph.\n*/\nexecComponent = function(glyph, state, xScale, yScale)\n{\n    const points = glyph.points || [];\n    const pLen = points.length;\n    const gZone = state.gZone = state.z0 = state.z1 = state.z2 = [];\n    const contours = state.contours = [];\n\n    // Scales the original points and\n    // makes copies for the hinted points.\n    let cp; // current point\n    for (let i = 0; i < pLen; i++) {\n        cp = points[i];\n\n        gZone[i] = new HPoint(\n            cp.x * xScale,\n            cp.y * yScale,\n            cp.lastPointOfContour,\n            cp.onCurve\n        );\n    }\n\n    // Chain links the contours.\n    let sp; // start point\n    let np; // next point\n\n    for (let i = 0; i < pLen; i++) {\n        cp = gZone[i];\n\n        if (!sp) {\n            sp = cp;\n            contours.push(i);\n        }\n\n        if (cp.lastPointOfContour) {\n            cp.nextPointOnContour = sp;\n            sp.prevPointOnContour = cp;\n            sp = undefined;\n        } else {\n            np = gZone[i + 1];\n            cp.nextPointOnContour = np;\n            np.prevPointOnContour = cp;\n        }\n    }\n\n    if (state.inhibitGridFit) return;\n\n    gZone.push(\n        new HPoint(0, 0),\n        new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n    );\n\n    exec(state);\n\n    // Removes the extra points.\n    gZone.length -= 2;\n\n    if (exports.DEBUG) {\n        console.log('FINISHED GLYPH', state.stack);\n        for (let i = 0; i < pLen; i++) {\n            console.log(i, gZone[i].x, gZone[i].y);\n        }\n    }\n};\n\n/*\n* Executes the program loaded in state.\n*/\nexec = function(state) {\n    let prog = state.prog;\n\n    if (!prog) return;\n\n    const pLen = prog.length;\n    let ins;\n\n    for (state.ip = 0; state.ip < pLen; state.ip++) {\n        if (exports.DEBUG) state.step++;\n        ins = instructionTable[prog[state.ip]];\n\n        if (!ins) {\n            throw new Error(\n                'unknown instruction: 0x' +\n                Number(prog[state.ip]).toString(16)\n            );\n        }\n\n        ins(state);\n\n        // very extensive debugging for each step\n        /*\n        if (exports.DEBUG) {\n            var da;\n            if (state.gZone) {\n                da = [];\n                for (let i = 0; i < state.gZone.length; i++)\n                {\n                    da.push(i + ' ' +\n                        state.gZone[i].x * 64 + ' ' +\n                        state.gZone[i].y * 64 + ' ' +\n                        (state.gZone[i].xTouched ? 'x' : '') +\n                        (state.gZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('GZ', da);\n            }\n\n            if (state.tZone) {\n                da = [];\n                for (let i = 0; i < state.tZone.length; i++) {\n                    da.push(i + ' ' +\n                        state.tZone[i].x * 64 + ' ' +\n                        state.tZone[i].y * 64 + ' ' +\n                        (state.tZone[i].xTouched ? 'x' : '') +\n                        (state.tZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('TZ', da);\n            }\n\n            if (state.stack.length > 10) {\n                console.log(\n                    state.stack.length,\n                    '...', state.stack.slice(state.stack.length - 10)\n                );\n            } else {\n                console.log(state.stack.length, state.stack);\n            }\n        }\n        */\n    }\n};\n\n/*\n* Initializes the twilight zone.\n*\n* This is only done if a SZPx instruction\n* refers to the twilight zone.\n*/\nfunction initTZone(state)\n{\n    const tZone = state.tZone = new Array(state.gZone.length);\n\n    // no idea if this is actually correct...\n    for (let i = 0; i < tZone.length; i++)\n    {\n        tZone[i] = new HPoint(0, 0);\n    }\n}\n\n/*\n* Skips the instruction pointer ahead over an IF/ELSE block.\n* handleElse .. if true breaks on matching ELSE\n*/\nfunction skip(state, handleElse)\n{\n    const prog = state.prog;\n    let ip = state.ip;\n    let nesting = 1;\n    let ins;\n\n    do {\n        ins = prog[++ip];\n        if (ins === 0x58) // IF\n            nesting++;\n        else if (ins === 0x59) // EIF\n            nesting--;\n        else if (ins === 0x40) // NPUSHB\n            ip += prog[ip + 1] + 1;\n        else if (ins === 0x41) // NPUSHW\n            ip += 2 * prog[ip + 1] + 1;\n        else if (ins >= 0xB0 && ins <= 0xB7) // PUSHB\n            ip += ins - 0xB0 + 1;\n        else if (ins >= 0xB8 && ins <= 0xBF) // PUSHW\n            ip += (ins - 0xB8 + 1) * 2;\n        else if (handleElse && nesting === 1 && ins === 0x1B) // ELSE\n            break;\n    } while (nesting > 0);\n\n    state.ip = ip;\n}\n\n/*----------------------------------------------------------*\n*          And then a lot of instructions...                *\n*----------------------------------------------------------*/\n\n// SVTCA[a] Set freedom and projection Vectors To Coordinate Axis\n// 0x00-0x01\nfunction SVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SVTCA[' + v.axis + ']');\n\n    state.fv = state.pv = state.dpv = v;\n}\n\n// SPVTCA[a] Set Projection Vector to Coordinate Axis\n// 0x02-0x03\nfunction SPVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SPVTCA[' + v.axis + ']');\n\n    state.pv = state.dpv = v;\n}\n\n// SFVTCA[a] Set Freedom Vector to Coordinate Axis\n// 0x04-0x05\nfunction SFVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SFVTCA[' + v.axis + ']');\n\n    state.fv = v;\n}\n\n// SPVTL[a] Set Projection Vector To Line\n// 0x06-0x07\nfunction SPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.pv = state.dpv = getUnitVector(dx, dy);\n}\n\n// SFVTL[a] Set Freedom Vector To Line\n// 0x08-0x09\nfunction SFVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SFVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.fv = getUnitVector(dx, dy);\n}\n\n// SPVFS[] Set Projection Vector From Stack\n// 0x0A\nfunction SPVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.pv = state.dpv = getUnitVector(x, y);\n}\n\n// SFVFS[] Set Freedom Vector From Stack\n// 0x0B\nfunction SFVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.fv = getUnitVector(x, y);\n}\n\n// GPV[] Get Projection Vector\n// 0x0C\nfunction GPV(state) {\n    const stack = state.stack;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'GPV[]');\n\n    stack.push(pv.x * 0x4000);\n    stack.push(pv.y * 0x4000);\n}\n\n// GFV[] Get Freedom Vector\n// 0x0C\nfunction GFV(state) {\n    const stack = state.stack;\n    const fv = state.fv;\n\n    if (exports.DEBUG) console.log(state.step, 'GFV[]');\n\n    stack.push(fv.x * 0x4000);\n    stack.push(fv.y * 0x4000);\n}\n\n// SFVTPV[] Set Freedom Vector To Projection Vector\n// 0x0E\nfunction SFVTPV(state) {\n    state.fv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'SFVTPV[]');\n}\n\n// ISECT[] moves point p to the InterSECTion of two lines\n// 0x0F\nfunction ISECT(state)\n{\n    const stack = state.stack;\n    const pa0i = stack.pop();\n    const pa1i = stack.pop();\n    const pb0i = stack.pop();\n    const pb1i = stack.pop();\n    const pi = stack.pop();\n    const z0 = state.z0;\n    const z1 = state.z1;\n    const pa0 = z0[pa0i];\n    const pa1 = z0[pa1i];\n    const pb0 = z1[pb0i];\n    const pb1 = z1[pb1i];\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log('ISECT[], ', pa0i, pa1i, pb0i, pb1i, pi);\n\n    // math from\n    // en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n\n    const x1 = pa0.x;\n    const y1 = pa0.y;\n    const x2 = pa1.x;\n    const y2 = pa1.y;\n    const x3 = pb0.x;\n    const y3 = pb0.y;\n    const x4 = pb1.x;\n    const y4 = pb1.y;\n\n    const div = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    const f1 = x1 * y2 - y1 * x2;\n    const f2 = x3 * y4 - y3 * x4;\n\n    p.x = (f1 * (x3 - x4) - f2 * (x1 - x2)) / div;\n    p.y = (f1 * (y3 - y4) - f2 * (y1 - y2)) / div;\n}\n\n// SRP0[] Set Reference Point 0\n// 0x10\nfunction SRP0(state) {\n    state.rp0 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP0[]', state.rp0);\n}\n\n// SRP1[] Set Reference Point 1\n// 0x11\nfunction SRP1(state) {\n    state.rp1 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP1[]', state.rp1);\n}\n\n// SRP1[] Set Reference Point 2\n// 0x12\nfunction SRP2(state) {\n    state.rp2 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP2[]', state.rp2);\n}\n\n// SZP0[] Set Zone Pointer 0\n// 0x13\nfunction SZP0(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP0[]', n);\n\n    state.zp0 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP1[] Set Zone Pointer 1\n// 0x14\nfunction SZP1(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP1[]', n);\n\n    state.zp1 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z1 = state.tZone;\n            break;\n        case 1 :\n            state.z1 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP2[] Set Zone Pointer 2\n// 0x15\nfunction SZP2(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP2[]', n);\n\n    state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZPS[] Set Zone PointerS\n// 0x16\nfunction SZPS(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZPS[]', n);\n\n    state.zp0 = state.zp1 = state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.z1 = state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.z1 = state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SLOOP[] Set LOOP variable\n// 0x17\nfunction SLOOP(state) {\n    state.loop = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SLOOP[]', state.loop);\n}\n\n// RTG[] Round To Grid\n// 0x18\nfunction RTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTG[]');\n\n    state.round = roundToGrid;\n}\n\n// RTHG[] Round To Half Grid\n// 0x19\nfunction RTHG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTHG[]');\n\n    state.round = roundToHalfGrid;\n}\n\n// SMD[] Set Minimum Distance\n// 0x1A\nfunction SMD(state) {\n    const d = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SMD[]', d);\n\n    state.minDis = d / 0x40;\n}\n\n// ELSE[] ELSE clause\n// 0x1B\nfunction ELSE(state) {\n    // This instruction has been reached by executing a then branch\n    // so it just skips ahead until matching EIF.\n    //\n    // In case the IF was negative the IF[] instruction already\n    // skipped forward over the ELSE[]\n\n    if (exports.DEBUG) console.log(state.step, 'ELSE[]');\n\n    skip(state, false);\n}\n\n// JMPR[] JuMP Relative\n// 0x1C\nfunction JMPR(state) {\n    const o = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'JMPR[]', o);\n\n    // A jump by 1 would do nothing.\n    state.ip += o - 1;\n}\n\n// SCVTCI[] Set Control Value Table Cut-In\n// 0x1D\nfunction SCVTCI(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SCVTCI[]', n);\n\n    state.cvCutIn = n / 0x40;\n}\n\n// DUP[] DUPlicate top stack element\n// 0x20\nfunction DUP(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DUP[]');\n\n    stack.push(stack[stack.length - 1]);\n}\n\n// POP[] POP top stack element\n// 0x21\nfunction POP(state) {\n    if (exports.DEBUG) console.log(state.step, 'POP[]');\n\n    state.stack.pop();\n}\n\n// CLEAR[] CLEAR the stack\n// 0x22\nfunction CLEAR(state) {\n    if (exports.DEBUG) console.log(state.step, 'CLEAR[]');\n\n    state.stack.length = 0;\n}\n\n// SWAP[] SWAP the top two elements on the stack\n// 0x23\nfunction SWAP(state) {\n    const stack = state.stack;\n\n    const a = stack.pop();\n    const b = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SWAP[]');\n\n    stack.push(a);\n    stack.push(b);\n}\n\n// DEPTH[] DEPTH of the stack\n// 0x24\nfunction DEPTH(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DEPTH[]');\n\n    stack.push(stack.length);\n}\n\n// LOOPCALL[] LOOPCALL function\n// 0x2A\nfunction LOOPCALL(state) {\n    const stack = state.stack;\n    const fn = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LOOPCALL[]', fn, c);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    for (let i = 0; i < c; i++) {\n        exec(state);\n\n        if (exports.DEBUG) console.log(\n            ++state.step,\n            i + 1 < c ? 'next loopcall' : 'done loopcall',\n            i\n        );\n    }\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n}\n\n// CALL[] CALL function\n// 0x2B\nfunction CALL(state) {\n    const fn = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CALL[]', fn);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    exec(state);\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n\n    if (exports.DEBUG) console.log(++state.step, 'returning from', fn);\n}\n\n// CINDEX[] Copy the INDEXed element to the top of the stack\n// 0x25\nfunction CINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CINDEX[]', k);\n\n    // In case of k == 1, it copies the last element after popping\n    // thus stack.length - k.\n    stack.push(stack[stack.length - k]);\n}\n\n// MINDEX[] Move the INDEXed element to the top of the stack\n// 0x26\nfunction MINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MINDEX[]', k);\n\n    stack.push(stack.splice(stack.length - k, 1)[0]);\n}\n\n// FDEF[] Function DEFinition\n// 0x2C\nfunction FDEF(state) {\n    if (state.env !== 'fpgm') throw new Error('FDEF not allowed here');\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    const fn = stack.pop();\n    const ipBegin = ip;\n\n    if (exports.DEBUG) console.log(state.step, 'FDEF[]', fn);\n\n    while (prog[++ip] !== 0x2D);\n\n    state.ip = ip;\n    state.funcs[fn] = prog.slice(ipBegin + 1, ip);\n}\n\n// MDAP[a] Move Direct Absolute Point\n// 0x2E-0x2F\nfunction MDAP(round, state) {\n    const pi = state.stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'MDAP[' + round + ']', pi);\n\n    let d = pv.distance(p, HPZero);\n\n    if (round) d = state.round(d);\n\n    fv.setRelative(p, HPZero, d, pv);\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// IUP[a] Interpolate Untouched Points through the outline\n// 0x30\nfunction IUP(v, state) {\n    const z2 = state.z2;\n    const pLen = z2.length - 2;\n    let cp;\n    let pp;\n    let np;\n\n    if (exports.DEBUG) console.log(state.step, 'IUP[' + v.axis + ']');\n\n    for (let i = 0; i < pLen; i++) {\n        cp = z2[i]; // current point\n\n        // if this point has been touched go on\n        if (v.touched(cp)) continue;\n\n        pp = cp.prevTouched(v);\n\n        // no point on the contour has been touched?\n        if (pp === cp) continue;\n\n        np = cp.nextTouched(v);\n\n        if (pp === np) {\n            // only one point on the contour has been touched\n            // so simply moves the point like that\n\n            v.setRelative(cp, cp, v.distance(pp, pp, false, true), v, true);\n        }\n\n        v.interpolate(cp, pp, np, v);\n    }\n}\n\n// SHP[] SHift Point using reference point\n// 0x32-0x33\nfunction SHP(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let loop = state.loop;\n    const z2 = state.z2;\n\n    while (loop--)\n    {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        const d = pv.distance(rp, rp, false, true);\n        fv.setRelative(p, p, d, pv);\n        fv.touch(p);\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ?\n                   'loop ' + (state.loop - loop) + ': ' :\n                   ''\n                ) +\n                'SHP[' + (a ? 'rp1' : 'rp2') + ']', pi\n            );\n        }\n    }\n\n    state.loop = 1;\n}\n\n// SHC[] SHift Contour using reference point\n// 0x36-0x37\nfunction SHC(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    const ci = stack.pop();\n    const sp = state.z2[state.contours[ci]];\n    let p = sp;\n\n    if (exports.DEBUG) console.log(state.step, 'SHC[' + a + ']', ci);\n\n    const d = pv.distance(rp, rp, false, true);\n\n    do {\n        if (p !== rp) fv.setRelative(p, p, d, pv);\n        p = p.nextPointOnContour;\n    } while (p !== sp);\n}\n\n// SHZ[] SHift Zone using reference point\n// 0x36-0x37\nfunction SHZ(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SHZ[' + a + ']', e);\n\n    let z;\n    switch (e) {\n        case 0 : z = state.tZone; break;\n        case 1 : z = state.gZone; break;\n        default : throw new Error('Invalid zone');\n    }\n\n    let p;\n    const d = pv.distance(rp, rp, false, true);\n    const pLen = z.length - 2;\n    for (let i = 0; i < pLen; i++)\n    {\n        p = z[i];\n        if (p !== rp) fv.setRelative(p, p, d, pv);\n    }\n}\n\n// SHPIX[] SHift point by a PIXel amount\n// 0x38\nfunction SHPIX(state) {\n    const stack = state.stack;\n    let loop = state.loop;\n    const fv = state.fv;\n    const d = stack.pop() / 0x40;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'SHPIX[]', pi, d\n            );\n        }\n\n        fv.setRelative(p, p, d);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// IP[] Interpolate Point\n// 0x39\nfunction IP(state) {\n    const stack = state.stack;\n    const rp1i = state.rp1;\n    const rp2i = state.rp2;\n    let loop = state.loop;\n    const rp1 = state.z0[rp1i];\n    const rp2 = state.z1[rp2i];\n    const fv = state.fv;\n    const pv = state.dpv;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'IP[]', pi, rp1i, '<->', rp2i\n            );\n        }\n\n        fv.interpolate(p, rp1, rp2, pv);\n\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// MSIRP[a] Move Stack Indirect Relative Point\n// 0x3A-0x3B\nfunction MSIRP(a, state) {\n    const stack = state.stack;\n    const d = stack.pop() / 64;\n    const pi = stack.pop();\n    const p = state.z1[pi];\n    const rp0 = state.z0[state.rp0];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    fv.setRelative(p, rp0, d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) console.log(state.step, 'MSIRP[' + a + ']', d, pi);\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (a) state.rp0 = pi;\n}\n\n// ALIGNRP[] Align to reference point.\n// 0x3C\nfunction ALIGNRP(state) {\n    const stack = state.stack;\n    const rp0i = state.rp0;\n    const rp0 = state.z0[rp0i];\n    let loop = state.loop;\n    const fv = state.fv;\n    const pv = state.pv;\n    const z1 = state.z1;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z1[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'ALIGNRP[]', pi\n            );\n        }\n\n        fv.setRelative(p, rp0, 0, pv);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// RTG[] Round To Double Grid\n// 0x3D\nfunction RTDG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTDG[]');\n\n    state.round = roundToDoubleGrid;\n}\n\n// MIAP[a] Move Indirect Absolute Point\n// 0x3E-0x3F\nfunction MIAP(round, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const pi = stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let cv = state.cvt[n];\n\n    // TODO cvtcutin should be considered here\n    if (round) cv = state.round(cv);\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            'MIAP[' + round + ']',\n            n, '(', cv, ')', pi\n        );\n    }\n\n    fv.setRelative(p, HPZero, cv, pv);\n\n    if (state.zp0 === 0) {\n        p.xo = p.x;\n        p.yo = p.y;\n    }\n\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// NPUSB[] PUSH N Bytes\n// 0x40\nfunction NPUSHB(state) {\n    const prog = state.prog;\n    let ip = state.ip;\n    const stack = state.stack;\n\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHB[]', n);\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// NPUSHW[] PUSH N Words\n// 0x41\nfunction NPUSHW(state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHW[]', n);\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// WS[] Write Store\n// 0x42\nfunction WS(state) {\n    const stack = state.stack;\n    let store = state.store;\n\n    if (!store) store = state.store = [];\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WS', v, l);\n\n    store[l] = v;\n}\n\n// RS[] Read Store\n// 0x43\nfunction RS(state) {\n    const stack = state.stack;\n    const store = state.store;\n\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RS', l);\n\n    const v = (store && store[l]) || 0;\n\n    stack.push(v);\n}\n\n// WCVTP[] Write Control Value Table in Pixel units\n// 0x44\nfunction WCVTP(state) {\n    const stack = state.stack;\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTP', v, l);\n\n    state.cvt[l] = v / 0x40;\n}\n\n// RCVT[] Read Control Value Table entry\n// 0x45\nfunction RCVT(state) {\n    const stack = state.stack;\n    const cvte = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RCVT', cvte);\n\n    stack.push(state.cvt[cvte] * 0x40);\n}\n\n// GC[] Get Coordinate projected onto the projection vector\n// 0x46-0x47\nfunction GC(a, state) {\n    const stack = state.stack;\n    const pi = stack.pop();\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log(state.step, 'GC[' + a + ']', pi);\n\n    stack.push(state.dpv.distance(p, HPZero, a, false) * 0x40);\n}\n\n// MD[a] Measure Distance\n// 0x49-0x4A\nfunction MD(a, state) {\n    const stack = state.stack;\n    const pi2 = stack.pop();\n    const pi1 = stack.pop();\n    const p2 = state.z1[pi2];\n    const p1 = state.z0[pi1];\n    const d = state.dpv.distance(p1, p2, a, a);\n\n    if (exports.DEBUG) console.log(state.step, 'MD[' + a + ']', pi2, pi1, '->', d);\n\n    state.stack.push(Math.round(d * 64));\n}\n\n// MPPEM[] Measure Pixels Per EM\n// 0x4B\nfunction MPPEM(state) {\n    if (exports.DEBUG) console.log(state.step, 'MPPEM[]');\n    state.stack.push(state.ppem);\n}\n\n// FLIPON[] set the auto FLIP Boolean to ON\n// 0x4D\nfunction FLIPON(state) {\n    if (exports.DEBUG) console.log(state.step, 'FLIPON[]');\n    state.autoFlip = true;\n}\n\n// LT[] Less Than\n// 0x50\nfunction LT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LT[]', e2, e1);\n\n    stack.push(e1 < e2 ? 1 : 0);\n}\n\n// LTEQ[] Less Than or EQual\n// 0x53\nfunction LTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LTEQ[]', e2, e1);\n\n    stack.push(e1 <= e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than\n// 0x52\nfunction GT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GT[]', e2, e1);\n\n    stack.push(e1 > e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than or EQual\n// 0x53\nfunction GTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GTEQ[]', e2, e1);\n\n    stack.push(e1 >= e2 ? 1 : 0);\n}\n\n// EQ[] EQual\n// 0x54\nfunction EQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EQ[]', e2, e1);\n\n    stack.push(e2 === e1 ? 1 : 0);\n}\n\n// NEQ[] Not EQual\n// 0x55\nfunction NEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEQ[]', e2, e1);\n\n    stack.push(e2 !== e1 ? 1 : 0);\n}\n\n// ODD[] ODD\n// 0x56\nfunction ODD(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ODD[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 1 : 0);\n}\n\n// EVEN[] EVEN\n// 0x57\nfunction EVEN(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EVEN[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 0 : 1);\n}\n\n// IF[] IF test\n// 0x58\nfunction IF(state) {\n    let test = state.stack.pop();\n    let ins;\n\n    if (exports.DEBUG) console.log(state.step, 'IF[]', test);\n\n    // if test is true it just continues\n    // if not the ip is skipped until matching ELSE or EIF\n    if (!test) {\n        skip(state, true);\n\n        if (exports.DEBUG) console.log(state.step, ins === 0x1B ? 'ELSE[]' : 'EIF[]');\n    }\n}\n\n// EIF[] End IF\n// 0x59\nfunction EIF(state) {\n    // this can be reached normally when\n    // executing an else branch.\n    // -> just ignore it\n\n    if (exports.DEBUG) console.log(state.step, 'EIF[]');\n}\n\n// AND[] logical AND\n// 0x5A\nfunction AND(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'AND[]', e2, e1);\n\n    stack.push(e2 && e1 ? 1 : 0);\n}\n\n// OR[] logical OR\n// 0x5B\nfunction OR(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'OR[]', e2, e1);\n\n    stack.push(e2 || e1 ? 1 : 0);\n}\n\n// NOT[] logical NOT\n// 0x5C\nfunction NOT(state) {\n    const stack = state.stack;\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NOT[]', e);\n\n    stack.push(e ? 0 : 1);\n}\n\n// DELTAP1[] DELTA exception P1\n// DELTAP2[] DELTA exception P2\n// DELTAP3[] DELTA exception P3\n// 0x5D, 0x71, 0x72\nfunction DELTAP123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const fv = state.fv;\n    const pv = state.pv;\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n    const z0 = state.z0;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAP[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++)\n    {\n        const pi = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n        if (exports.DEBUG) console.log(state.step, 'DELTAPFIX', pi, 'by', mag * ds);\n\n        const p = z0[pi];\n        fv.setRelative(p, p, mag * ds, pv);\n    }\n}\n\n// SDB[] Set Delta Base in the graphics state\n// 0x5E\nfunction SDB(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDB[]', n);\n\n    state.deltaBase = n;\n}\n\n// SDS[] Set Delta Shift in the graphics state\n// 0x5F\nfunction SDS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDS[]', n);\n\n    state.deltaShift = Math.pow(0.5, n);\n}\n\n// ADD[] ADD\n// 0x60\nfunction ADD(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ADD[]', n2, n1);\n\n    stack.push(n1 + n2);\n}\n\n// SUB[] SUB\n// 0x61\nfunction SUB(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SUB[]', n2, n1);\n\n    stack.push(n1 - n2);\n}\n\n// DIV[] DIV\n// 0x62\nfunction DIV(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'DIV[]', n2, n1);\n\n    stack.push(n1 * 64 / n2);\n}\n\n// MUL[] MUL\n// 0x63\nfunction MUL(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MUL[]', n2, n1);\n\n    stack.push(n1 * n2 / 64);\n}\n\n// ABS[] ABSolute value\n// 0x64\nfunction ABS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ABS[]', n);\n\n    stack.push(Math.abs(n));\n}\n\n// NEG[] NEGate\n// 0x65\nfunction NEG(state) {\n    const stack = state.stack;\n    let n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEG[]', n);\n\n    stack.push(-n);\n}\n\n// FLOOR[] FLOOR\n// 0x66\nfunction FLOOR(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'FLOOR[]', n);\n\n    stack.push(Math.floor(n / 0x40) * 0x40);\n}\n\n// CEILING[] CEILING\n// 0x67\nfunction CEILING(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CEILING[]', n);\n\n    stack.push(Math.ceil(n / 0x40) * 0x40);\n}\n\n// ROUND[ab] ROUND value\n// 0x68-0x6B\nfunction ROUND(dt, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROUND[]');\n\n    stack.push(state.round(n / 0x40) * 0x40);\n}\n\n// WCVTF[] Write Control Value Table in Funits\n// 0x70\nfunction WCVTF(state) {\n    const stack = state.stack;\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTF[]', v, l);\n\n    state.cvt[l] = v * state.ppem / state.font.unitsPerEm;\n}\n\n// DELTAC1[] DELTA exception C1\n// DELTAC2[] DELTA exception C2\n// DELTAC3[] DELTA exception C3\n// 0x73, 0x74, 0x75\nfunction DELTAC123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAC[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++) {\n        const c = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n\n        const delta = mag * ds;\n\n        if (exports.DEBUG) console.log(state.step, 'DELTACFIX', c, 'by', delta);\n\n        state.cvt[c] += delta;\n    }\n}\n\n// SROUND[] Super ROUND\n// 0x76\nfunction SROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = 0.5;\n            break;\n        case 0x40:\n            period = 1;\n            break;\n        case 0x80:\n            period = 2;\n            break;\n        default:\n            throw new Error('invalid SROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default: throw new Error('invalid SROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// S45ROUND[] Super ROUND 45 degrees\n// 0x77\nfunction S45ROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'S45ROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = Math.sqrt(2) / 2;\n            break;\n        case 0x40:\n            period = Math.sqrt(2);\n            break;\n        case 0x80:\n            period = 2 * Math.sqrt(2);\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// ROFF[] Round Off\n// 0x7A\nfunction ROFF(state) {\n    if (exports.DEBUG) console.log(state.step, 'ROFF[]');\n\n    state.round = roundOff;\n}\n\n// RUTG[] Round Up To Grid\n// 0x7C\nfunction RUTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RUTG[]');\n\n    state.round = roundUpToGrid;\n}\n\n// RDTG[] Round Down To Grid\n// 0x7D\nfunction RDTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RDTG[]');\n\n    state.round = roundDownToGrid;\n}\n\n// SCANCTRL[] SCAN conversion ConTRoL\n// 0x85\nfunction SCANCTRL(state) {\n    const n = state.stack.pop();\n\n    // ignored by opentype.js\n\n    if (exports.DEBUG) console.log(state.step, 'SCANCTRL[]', n);\n}\n\n// SDPVTL[a] Set Dual Projection Vector To Line\n// 0x86-0x87\nfunction SDPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SDPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.dpv = getUnitVector(dx, dy);\n}\n\n// GETINFO[] GET INFOrmation\n// 0x88\nfunction GETINFO(state) {\n    const stack = state.stack;\n    const sel = stack.pop();\n    let r = 0;\n\n    if (exports.DEBUG) console.log(state.step, 'GETINFO[]', sel);\n\n    // v35 as in no subpixel hinting\n    if (sel & 0x01) r = 35;\n\n    // TODO rotation and stretch currently not supported\n    // and thus those GETINFO are always 0.\n\n    // opentype.js is always gray scaling\n    if (sel & 0x20) r |= 0x1000;\n\n    stack.push(r);\n}\n\n// ROLL[] ROLL the top three stack elements\n// 0x8A\nfunction ROLL(state) {\n    const stack = state.stack;\n    const a = stack.pop();\n    const b = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROLL[]');\n\n    stack.push(b);\n    stack.push(a);\n    stack.push(c);\n}\n\n// MAX[] MAXimum of top two stack elements\n// 0x8B\nfunction MAX(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MAX[]', e2, e1);\n\n    stack.push(Math.max(e1, e2));\n}\n\n// MIN[] MINimum of top two stack elements\n// 0x8C\nfunction MIN(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MIN[]', e2, e1);\n\n    stack.push(Math.min(e1, e2));\n}\n\n// SCANTYPE[] SCANTYPE\n// 0x8D\nfunction SCANTYPE(state) {\n    const n = state.stack.pop();\n    // ignored by opentype.js\n    if (exports.DEBUG) console.log(state.step, 'SCANTYPE[]', n);\n}\n\n// INSTCTRL[] INSTCTRL\n// 0x8D\nfunction INSTCTRL(state) {\n    const s = state.stack.pop();\n    let v = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'INSTCTRL[]', s, v);\n\n    switch (s) {\n        case 1 : state.inhibitGridFit = !!v; return;\n        case 2 : state.ignoreCvt = !!v; return;\n        default: throw new Error('invalid INSTCTRL[] selector');\n    }\n}\n\n// PUSHB[abc] PUSH Bytes\n// 0xB0-0xB7\nfunction PUSHB(n, state) {\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    if (exports.DEBUG) console.log(state.step, 'PUSHB[' + n + ']');\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// PUSHW[abc] PUSH Words\n// 0xB8-0xBF\nfunction PUSHW(n, state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.ip, 'PUSHW[' + n + ']');\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// MDRP[abcde] Move Direct Relative Point\n// 0xD0-0xEF\n// (if indirect is 0)\n//\n// and\n//\n// MIRP[abcde] Move Indirect Relative Point\n// 0xE0-0xFF\n// (if indirect is 1)\n\nfunction MDRP_MIRP(indirect, setRp0, keepD, ro, dt, state) {\n    const stack = state.stack;\n    const cvte = indirect && stack.pop();\n    const pi = stack.pop();\n    const rp0i = state.rp0;\n    const rp = state.z0[rp0i];\n    const p = state.z1[pi];\n\n    const md = state.minDis;\n    const fv = state.fv;\n    const pv = state.dpv;\n    let od; // original distance\n    let d; // moving distance\n    let sign; // sign of distance\n    let cv;\n\n    d = od = pv.distance(p, rp, true, true);\n    sign = d >= 0 ? 1 : -1; // Math.sign would be 0 in case of 0\n\n    // TODO consider autoFlip\n    d = Math.abs(d);\n\n    if (indirect) {\n        cv = state.cvt[cvte];\n\n        if (ro && Math.abs(d - cv) < state.cvCutIn) d = cv;\n    }\n\n    if (keepD && d < md) d = md;\n\n    if (ro) d = state.round(d);\n\n    fv.setRelative(p, rp, sign * d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            (indirect ? 'MIRP[' : 'MDRP[') +\n            (setRp0 ? 'M' : 'm') +\n            (keepD ? '>' : '_') +\n            (ro ? 'R' : '_') +\n            (dt === 0 ? 'Gr' : (dt === 1 ? 'Bl' : (dt === 2 ? 'Wh' : ''))) +\n            ']',\n            indirect ?\n                cvte + '(' + state.cvt[cvte] + ',' +  cv + ')' :\n                '',\n            pi,\n            '(d =', od, '->', sign * d, ')'\n        );\n    }\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (setRp0) state.rp0 = pi;\n}\n\n/*\n* The instruction table.\n*/\ninstructionTable = [\n    /* 0x00 */ SVTCA.bind(undefined, yUnitVector),\n    /* 0x01 */ SVTCA.bind(undefined, xUnitVector),\n    /* 0x02 */ SPVTCA.bind(undefined, yUnitVector),\n    /* 0x03 */ SPVTCA.bind(undefined, xUnitVector),\n    /* 0x04 */ SFVTCA.bind(undefined, yUnitVector),\n    /* 0x05 */ SFVTCA.bind(undefined, xUnitVector),\n    /* 0x06 */ SPVTL.bind(undefined, 0),\n    /* 0x07 */ SPVTL.bind(undefined, 1),\n    /* 0x08 */ SFVTL.bind(undefined, 0),\n    /* 0x09 */ SFVTL.bind(undefined, 1),\n    /* 0x0A */ SPVFS,\n    /* 0x0B */ SFVFS,\n    /* 0x0C */ GPV,\n    /* 0x0D */ GFV,\n    /* 0x0E */ SFVTPV,\n    /* 0x0F */ ISECT,\n    /* 0x10 */ SRP0,\n    /* 0x11 */ SRP1,\n    /* 0x12 */ SRP2,\n    /* 0x13 */ SZP0,\n    /* 0x14 */ SZP1,\n    /* 0x15 */ SZP2,\n    /* 0x16 */ SZPS,\n    /* 0x17 */ SLOOP,\n    /* 0x18 */ RTG,\n    /* 0x19 */ RTHG,\n    /* 0x1A */ SMD,\n    /* 0x1B */ ELSE,\n    /* 0x1C */ JMPR,\n    /* 0x1D */ SCVTCI,\n    /* 0x1E */ undefined,   // TODO SSWCI\n    /* 0x1F */ undefined,   // TODO SSW\n    /* 0x20 */ DUP,\n    /* 0x21 */ POP,\n    /* 0x22 */ CLEAR,\n    /* 0x23 */ SWAP,\n    /* 0x24 */ DEPTH,\n    /* 0x25 */ CINDEX,\n    /* 0x26 */ MINDEX,\n    /* 0x27 */ undefined,   // TODO ALIGNPTS\n    /* 0x28 */ undefined,\n    /* 0x29 */ undefined,   // TODO UTP\n    /* 0x2A */ LOOPCALL,\n    /* 0x2B */ CALL,\n    /* 0x2C */ FDEF,\n    /* 0x2D */ undefined,   // ENDF (eaten by FDEF)\n    /* 0x2E */ MDAP.bind(undefined, 0),\n    /* 0x2F */ MDAP.bind(undefined, 1),\n    /* 0x30 */ IUP.bind(undefined, yUnitVector),\n    /* 0x31 */ IUP.bind(undefined, xUnitVector),\n    /* 0x32 */ SHP.bind(undefined, 0),\n    /* 0x33 */ SHP.bind(undefined, 1),\n    /* 0x34 */ SHC.bind(undefined, 0),\n    /* 0x35 */ SHC.bind(undefined, 1),\n    /* 0x36 */ SHZ.bind(undefined, 0),\n    /* 0x37 */ SHZ.bind(undefined, 1),\n    /* 0x38 */ SHPIX,\n    /* 0x39 */ IP,\n    /* 0x3A */ MSIRP.bind(undefined, 0),\n    /* 0x3B */ MSIRP.bind(undefined, 1),\n    /* 0x3C */ ALIGNRP,\n    /* 0x3D */ RTDG,\n    /* 0x3E */ MIAP.bind(undefined, 0),\n    /* 0x3F */ MIAP.bind(undefined, 1),\n    /* 0x40 */ NPUSHB,\n    /* 0x41 */ NPUSHW,\n    /* 0x42 */ WS,\n    /* 0x43 */ RS,\n    /* 0x44 */ WCVTP,\n    /* 0x45 */ RCVT,\n    /* 0x46 */ GC.bind(undefined, 0),\n    /* 0x47 */ GC.bind(undefined, 1),\n    /* 0x48 */ undefined,   // TODO SCFS\n    /* 0x49 */ MD.bind(undefined, 0),\n    /* 0x4A */ MD.bind(undefined, 1),\n    /* 0x4B */ MPPEM,\n    /* 0x4C */ undefined,   // TODO MPS\n    /* 0x4D */ FLIPON,\n    /* 0x4E */ undefined,   // TODO FLIPOFF\n    /* 0x4F */ undefined,   // TODO DEBUG\n    /* 0x50 */ LT,\n    /* 0x51 */ LTEQ,\n    /* 0x52 */ GT,\n    /* 0x53 */ GTEQ,\n    /* 0x54 */ EQ,\n    /* 0x55 */ NEQ,\n    /* 0x56 */ ODD,\n    /* 0x57 */ EVEN,\n    /* 0x58 */ IF,\n    /* 0x59 */ EIF,\n    /* 0x5A */ AND,\n    /* 0x5B */ OR,\n    /* 0x5C */ NOT,\n    /* 0x5D */ DELTAP123.bind(undefined, 1),\n    /* 0x5E */ SDB,\n    /* 0x5F */ SDS,\n    /* 0x60 */ ADD,\n    /* 0x61 */ SUB,\n    /* 0x62 */ DIV,\n    /* 0x63 */ MUL,\n    /* 0x64 */ ABS,\n    /* 0x65 */ NEG,\n    /* 0x66 */ FLOOR,\n    /* 0x67 */ CEILING,\n    /* 0x68 */ ROUND.bind(undefined, 0),\n    /* 0x69 */ ROUND.bind(undefined, 1),\n    /* 0x6A */ ROUND.bind(undefined, 2),\n    /* 0x6B */ ROUND.bind(undefined, 3),\n    /* 0x6C */ undefined,   // TODO NROUND[ab]\n    /* 0x6D */ undefined,   // TODO NROUND[ab]\n    /* 0x6E */ undefined,   // TODO NROUND[ab]\n    /* 0x6F */ undefined,   // TODO NROUND[ab]\n    /* 0x70 */ WCVTF,\n    /* 0x71 */ DELTAP123.bind(undefined, 2),\n    /* 0x72 */ DELTAP123.bind(undefined, 3),\n    /* 0x73 */ DELTAC123.bind(undefined, 1),\n    /* 0x74 */ DELTAC123.bind(undefined, 2),\n    /* 0x75 */ DELTAC123.bind(undefined, 3),\n    /* 0x76 */ SROUND,\n    /* 0x77 */ S45ROUND,\n    /* 0x78 */ undefined,   // TODO JROT[]\n    /* 0x79 */ undefined,   // TODO JROF[]\n    /* 0x7A */ ROFF,\n    /* 0x7B */ undefined,\n    /* 0x7C */ RUTG,\n    /* 0x7D */ RDTG,\n    /* 0x7E */ POP, // actually SANGW, supposed to do only a pop though\n    /* 0x7F */ POP, // actually AA, supposed to do only a pop though\n    /* 0x80 */ undefined,   // TODO FLIPPT\n    /* 0x81 */ undefined,   // TODO FLIPRGON\n    /* 0x82 */ undefined,   // TODO FLIPRGOFF\n    /* 0x83 */ undefined,\n    /* 0x84 */ undefined,\n    /* 0x85 */ SCANCTRL,\n    /* 0x86 */ SDPVTL.bind(undefined, 0),\n    /* 0x87 */ SDPVTL.bind(undefined, 1),\n    /* 0x88 */ GETINFO,\n    /* 0x89 */ undefined,   // TODO IDEF\n    /* 0x8A */ ROLL,\n    /* 0x8B */ MAX,\n    /* 0x8C */ MIN,\n    /* 0x8D */ SCANTYPE,\n    /* 0x8E */ INSTCTRL,\n    /* 0x8F */ undefined,\n    /* 0x90 */ undefined,\n    /* 0x91 */ undefined,\n    /* 0x92 */ undefined,\n    /* 0x93 */ undefined,\n    /* 0x94 */ undefined,\n    /* 0x95 */ undefined,\n    /* 0x96 */ undefined,\n    /* 0x97 */ undefined,\n    /* 0x98 */ undefined,\n    /* 0x99 */ undefined,\n    /* 0x9A */ undefined,\n    /* 0x9B */ undefined,\n    /* 0x9C */ undefined,\n    /* 0x9D */ undefined,\n    /* 0x9E */ undefined,\n    /* 0x9F */ undefined,\n    /* 0xA0 */ undefined,\n    /* 0xA1 */ undefined,\n    /* 0xA2 */ undefined,\n    /* 0xA3 */ undefined,\n    /* 0xA4 */ undefined,\n    /* 0xA5 */ undefined,\n    /* 0xA6 */ undefined,\n    /* 0xA7 */ undefined,\n    /* 0xA8 */ undefined,\n    /* 0xA9 */ undefined,\n    /* 0xAA */ undefined,\n    /* 0xAB */ undefined,\n    /* 0xAC */ undefined,\n    /* 0xAD */ undefined,\n    /* 0xAE */ undefined,\n    /* 0xAF */ undefined,\n    /* 0xB0 */ PUSHB.bind(undefined, 1),\n    /* 0xB1 */ PUSHB.bind(undefined, 2),\n    /* 0xB2 */ PUSHB.bind(undefined, 3),\n    /* 0xB3 */ PUSHB.bind(undefined, 4),\n    /* 0xB4 */ PUSHB.bind(undefined, 5),\n    /* 0xB5 */ PUSHB.bind(undefined, 6),\n    /* 0xB6 */ PUSHB.bind(undefined, 7),\n    /* 0xB7 */ PUSHB.bind(undefined, 8),\n    /* 0xB8 */ PUSHW.bind(undefined, 1),\n    /* 0xB9 */ PUSHW.bind(undefined, 2),\n    /* 0xBA */ PUSHW.bind(undefined, 3),\n    /* 0xBB */ PUSHW.bind(undefined, 4),\n    /* 0xBC */ PUSHW.bind(undefined, 5),\n    /* 0xBD */ PUSHW.bind(undefined, 6),\n    /* 0xBE */ PUSHW.bind(undefined, 7),\n    /* 0xBF */ PUSHW.bind(undefined, 8),\n    /* 0xC0 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 0),\n    /* 0xC1 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 1),\n    /* 0xC2 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 2),\n    /* 0xC3 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 3),\n    /* 0xC4 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 0),\n    /* 0xC5 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 1),\n    /* 0xC6 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 2),\n    /* 0xC7 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 3),\n    /* 0xC8 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 0),\n    /* 0xC9 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 1),\n    /* 0xCA */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 2),\n    /* 0xCB */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 3),\n    /* 0xCC */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 0),\n    /* 0xCD */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 1),\n    /* 0xCE */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 2),\n    /* 0xCF */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 3),\n    /* 0xD0 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 0),\n    /* 0xD1 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 1),\n    /* 0xD2 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 2),\n    /* 0xD3 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 3),\n    /* 0xD4 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 0),\n    /* 0xD5 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 1),\n    /* 0xD6 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 2),\n    /* 0xD7 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 3),\n    /* 0xD8 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 0),\n    /* 0xD9 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 1),\n    /* 0xDA */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 2),\n    /* 0xDB */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 3),\n    /* 0xDC */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 0),\n    /* 0xDD */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 1),\n    /* 0xDE */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 2),\n    /* 0xDF */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 3),\n    /* 0xE0 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 0),\n    /* 0xE1 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 1),\n    /* 0xE2 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 2),\n    /* 0xE3 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 3),\n    /* 0xE4 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 0),\n    /* 0xE5 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 1),\n    /* 0xE6 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 2),\n    /* 0xE7 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 3),\n    /* 0xE8 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 0),\n    /* 0xE9 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 1),\n    /* 0xEA */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 2),\n    /* 0xEB */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 3),\n    /* 0xEC */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 0),\n    /* 0xED */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 1),\n    /* 0xEE */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 2),\n    /* 0xEF */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 3),\n    /* 0xF0 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 0),\n    /* 0xF1 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 1),\n    /* 0xF2 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 2),\n    /* 0xF3 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 3),\n    /* 0xF4 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 0),\n    /* 0xF5 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 1),\n    /* 0xF6 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 2),\n    /* 0xF7 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 3),\n    /* 0xF8 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 0),\n    /* 0xF9 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 1),\n    /* 0xFA */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 2),\n    /* 0xFB */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 3),\n    /* 0xFC */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 0),\n    /* 0xFD */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 1),\n    /* 0xFE */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 2),\n    /* 0xFF */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 3)\n];\n\nexport default Hinting;\n\n/*****************************\n  Mathematical Considerations\n******************************\n\nfv ... refers to freedom vector\npv ... refers to projection vector\nrp ... refers to reference point\np  ... refers to to point being operated on\nd  ... refers to distance\n\nSETRELATIVE:\n============\n\ncase freedom vector == x-axis:\n------------------------------\n\n                        (pv)\n                     .-'\n              rpd .-'\n               .-*\n          d .-'90°'\n         .-'       '\n      .-'           '\n   *-'               ' b\n  rp                  '\n                       '\n                        '\n            p *----------*-------------- (fv)\n                          pm\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b\n\n   y - rpdy = pvns * (x- rpdx)\n\n   y = p.y\n\n   x = rpdx + ( p.y - rpdy ) / pvns\n\n\ncase freedom vector == y-axis:\n------------------------------\n\n    * pm\n    |\\\n    | \\\n    |  \\\n    |   \\\n    |    \\\n    |     \\\n    |      \\\n    |       \\\n    |        \\\n    |         \\ b\n    |          \\\n    |           \\\n    |            \\    .-' (pv)\n    |         90° \\.-'\n    |           .-'* rpd\n    |        .-'\n    *     *-'  d\n    p     rp\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b:\n           pvns ... normal slope to pv\n\n   y - rpdy = pvns * (x - rpdx)\n\n   x = p.x\n\n   y = rpdy +  pvns * (p.x - rpdx)\n\n\n\ngeneric case:\n-------------\n\n\n                              .'(fv)\n                            .'\n                          .* pm\n                        .' !\n                      .'    .\n                    .'      !\n                  .'         . b\n                .'           !\n               *              .\n              p               !\n                         90°   .    ... (pv)\n                           ...-*-'''\n                  ...---'''    rpd\n         ...---'''   d\n   *--'''\n  rp\n\n    rpdx = rpx + d * pv.x\n    rpdy = rpy + d * pv.y\n\n equation of line b:\n    pvns... normal slope to pv\n\n    y - rpdy = pvns * (x - rpdx)\n\n equation of freedom vector line:\n    fvs ... slope of freedom vector (=fy/fx)\n\n    y - py = fvs * (x - px)\n\n\n  on pm both equations are true for same x/y\n\n    y - rpdy = pvns * (x - rpdx)\n\n    y - py = fvs * (x - px)\n\n  form to y and set equal:\n\n    pvns * (x - rpdx) + rpdy = fvs * (x - px) + py\n\n  expand:\n\n    pvns * x - pvns * rpdx + rpdy = fvs * x - fvs * px + py\n\n  switch:\n\n    fvs * x - fvs * px + py = pvns * x - pvns * rpdx + rpdy\n\n  solve for x:\n\n    fvs * x - pvns * x = fvs * px - pvns * rpdx - py + rpdy\n\n\n\n          fvs * px - pvns * rpdx + rpdy - py\n    x =  -----------------------------------\n                 fvs - pvns\n\n  and:\n\n    y = fvs * (x - px) + py\n\n\n\nINTERPOLATE:\n============\n\nExamples of point interpolation.\n\nThe weight of the movement of the reference point gets bigger\nthe further the other reference point is away, thus the safest\noption (that is avoiding 0/0 divisions) is to weight the\noriginal distance of the other point by the sum of both distances.\n\nIf the sum of both distances is 0, then move the point by the\narithmetic average of the movement of both reference points.\n\n\n\n\n           (+6)\n    rp1o *---->*rp1\n         .     .                          (+12)\n         .     .                  rp2o *---------->* rp2\n         .     .                       .           .\n         .     .                       .           .\n         .    10          20           .           .\n         |.........|...................|           .\n               .   .                               .\n               .   . (+8)                          .\n                po *------>*p                      .\n               .           .                       .\n               .    12     .          24           .\n               |...........|.......................|\n                                  36\n\n\n-------\n\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .                      (-10)\n         .         .              rp2 *<---------* rpo2\n         .         .                   .         .\n         .         .                   .         .\n         .    10   .          30       .         .\n         |.........|.............................|\n                   .                   .\n                   . (+5)              .\n                po *--->* p            .\n                   .    .              .\n                   .    .   20         .\n                   |....|..............|\n                     5        15\n\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .\n    rp2o *-------->*rp2\n\n\n                               (+10)\n                          po *-------->* p\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .(+30)\n    rp2o *---------------------------->*rp2\n\n\n                                        (+25)\n                          po *----------------------->* p\n\n\n\nvim: set ts=4 sw=4 expandtab:\n*****/\n","// The Font object\n\nimport Path from './path';\nimport sfnt from './tables/sfnt';\nimport { DefaultEncoding } from './encoding';\nimport glyphset from './glyphset';\nimport Substitution from './substitution';\nimport { isBrowser, checkArgument, arrayBufferToNodeBuffer } from './util';\nimport HintingTrueType from './hintingtt';\n\n/**\n * @typedef FontOptions\n * @type Object\n * @property {Boolean} empty - whether to create a new empty font\n * @property {string} familyName\n * @property {string} styleName\n * @property {string=} fullName\n * @property {string=} postScriptName\n * @property {string=} designer\n * @property {string=} designerURL\n * @property {string=} manufacturer\n * @property {string=} manufacturerURL\n * @property {string=} license\n * @property {string=} licenseURL\n * @property {string=} version\n * @property {string=} description\n * @property {string=} copyright\n * @property {string=} trademark\n * @property {Number} unitsPerEm\n * @property {Number} ascender\n * @property {Number} descender\n * @property {Number} createdTimestamp\n * @property {string=} weightClass\n * @property {string=} widthClass\n * @property {string=} fsSelection\n */\n\n/**\n * A Font represents a loaded OpenType font file.\n * It contains a set of glyphs and methods to draw text on a drawing context,\n * or to get a path representing the text.\n * @exports opentype.Font\n * @class\n * @param {FontOptions}\n * @constructor\n */\nfunction Font(options) {\n    options = options || {};\n\n    if (!options.empty) {\n        // Check that we've provided the minimum set of names.\n        checkArgument(options.familyName, 'When creating a new Font object, familyName is required.');\n        checkArgument(options.styleName, 'When creating a new Font object, styleName is required.');\n        checkArgument(options.unitsPerEm, 'When creating a new Font object, unitsPerEm is required.');\n        checkArgument(options.ascender, 'When creating a new Font object, ascender is required.');\n        checkArgument(options.descender, 'When creating a new Font object, descender is required.');\n        checkArgument(options.descender < 0, 'Descender should be negative (e.g. -512).');\n\n        // OS X will complain if the names are empty, so we put a single space everywhere by default.\n        this.names = {\n            fontFamily: {en: options.familyName || ' '},\n            fontSubfamily: {en: options.styleName || ' '},\n            fullName: {en: options.fullName || options.familyName + ' ' + options.styleName},\n            postScriptName: {en: options.postScriptName || options.familyName + options.styleName},\n            designer: {en: options.designer || ' '},\n            designerURL: {en: options.designerURL || ' '},\n            manufacturer: {en: options.manufacturer || ' '},\n            manufacturerURL: {en: options.manufacturerURL || ' '},\n            license: {en: options.license || ' '},\n            licenseURL: {en: options.licenseURL || ' '},\n            version: {en: options.version || 'Version 0.1'},\n            description: {en: options.description || ' '},\n            copyright: {en: options.copyright || ' '},\n            trademark: {en: options.trademark || ' '}\n        };\n        this.unitsPerEm = options.unitsPerEm || 1000;\n        this.ascender = options.ascender;\n        this.descender = options.descender;\n        this.createdTimestamp = options.createdTimestamp;\n        this.tables = { os2: {\n            usWeightClass: options.weightClass || this.usWeightClasses.MEDIUM,\n            usWidthClass: options.widthClass || this.usWidthClasses.MEDIUM,\n            fsSelection: options.fsSelection || this.fsSelectionValues.REGULAR\n        } };\n    }\n\n    this.supported = true; // Deprecated: parseBuffer will throw an error if font is not supported.\n    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n    this.encoding = new DefaultEncoding(this);\n    this.substitution = new Substitution(this);\n    this.tables = this.tables || {};\n\n    Object.defineProperty(this, 'hinting', {\n        get: function() {\n            if (this._hinting) return this._hinting;\n            if (this.outlinesFormat === 'truetype') {\n                return (this._hinting = new HintingTrueType(this));\n            }\n        }\n    });\n}\n\n/**\n * Check if the font has a glyph for the given character.\n * @param  {string}\n * @return {Boolean}\n */\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n/**\n * Convert the given character to a single glyph index.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n/**\n * Convert the given character to a single Glyph object.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.charToGlyph = function(c) {\n    const glyphIndex = this.charToGlyphIndex(c);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * Convert the given text to a list of Glyph objects.\n * Note that there is no strict one-to-one mapping between characters and\n * glyphs, so the list of returned glyphs can be larger or smaller than the\n * length of the given string.\n * @param  {string}\n * @param  {GlyphRenderOptions} [options]\n * @return {opentype.Glyph[]}\n */\nFont.prototype.stringToGlyphs = function(s, options) {\n    options = options || this.defaultRenderOptions;\n    // Get glyph indexes\n    const indexes = [];\n    for (let i = 0; i < s.length; i += 1) {\n        const c = s[i];\n        indexes.push(this.charToGlyphIndex(c));\n    }\n    let length = indexes.length;\n\n    // Apply substitutions on glyph indexes\n    if (options.features) {\n        const script = options.script || this.substitution.getDefaultScriptName();\n        let manyToOne = [];\n        if (options.features.liga) manyToOne = manyToOne.concat(this.substitution.getFeature('liga', script, options.language));\n        if (options.features.rlig) manyToOne = manyToOne.concat(this.substitution.getFeature('rlig', script, options.language));\n        for (let i = 0; i < length; i += 1) {\n            for (let j = 0; j < manyToOne.length; j++) {\n                const ligature = manyToOne[j];\n                const components = ligature.sub;\n                const compCount = components.length;\n                let k = 0;\n                while (k < compCount && components[k] === indexes[i + k]) k++;\n                if (k === compCount) {\n                    indexes.splice(i, compCount, ligature.by);\n                    length = length - compCount + 1;\n                }\n            }\n        }\n    }\n\n    // convert glyph indexes to glyph objects\n    const glyphs = new Array(length);\n    const notdef = this.glyphs.get(0);\n    for (let i = 0; i < length; i += 1) {\n        glyphs[i] = this.glyphs.get(indexes[i]) || notdef;\n    }\n    return glyphs;\n};\n\n/**\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\n/**\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.nameToGlyph = function(name) {\n    const glyphIndex = this.nameToGlyphIndex(name);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * @param  {Number}\n * @return {String}\n */\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n/**\n * Retrieve the value of the kerning pair between the left glyph (or its index)\n * and the right glyph (or its index). If no kerning pair is found, return 0.\n * The kerning value gets added to the advance width when calculating the spacing\n * between glyphs.\n * @param  {opentype.Glyph} leftGlyph\n * @param  {opentype.Glyph} rightGlyph\n * @return {Number}\n */\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    const gposKerning = this.getGposKerningValue;\n    return gposKerning ? gposKerning(leftGlyph, rightGlyph) :\n        (this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0);\n};\n\n/**\n * @typedef GlyphRenderOptions\n * @type Object\n * @property {string} [script] - script used to determine which features to apply. By default, 'DFLT' or 'latn' is used.\n *                               See https://www.microsoft.com/typography/otspec/scripttags.htm\n * @property {string} [language='dflt'] - language system used to determine which features to apply.\n *                                        See https://www.microsoft.com/typography/developers/opentype/languagetags.aspx\n * @property {boolean} [kerning=true] - whether to include kerning values\n * @property {object} [features] - OpenType Layout feature tags. Used to enable or disable the features of the given script/language system.\n *                                 See https://www.microsoft.com/typography/otspec/featuretags.htm\n */\nFont.prototype.defaultRenderOptions = {\n    kerning: true,\n    features: {\n        liga: true,\n        rlig: true\n    }\n};\n\n/**\n * Helper function that invokes the given callback for each glyph in the given text.\n * The callback gets `(glyph, x, y, fontSize, options)`.* @param  {string} text\n * @param {string} text - The text to apply.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @param  {Function} callback\n */\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = options || this.defaultRenderOptions;\n    const fontScale = 1 / this.unitsPerEm * fontSize;\n    const glyphs = this.stringToGlyphs(text, options);\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs[i];\n        callback.call(this, glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (options.kerning && i < glyphs.length - 1) {\n            const kerningValue = this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n\n        if (options.letterSpacing) {\n            x += options.letterSpacing * fontSize;\n        } else if (options.tracking) {\n            x += (options.tracking / 1000) * fontSize;\n        }\n    }\n    return x;\n};\n\n/**\n * Create a Path object that represents the given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path}\n */\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    const fullPath = new Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        fullPath.extend(glyphPath);\n    });\n    return fullPath;\n};\n\n/**\n * Create an array of Path objects that represent the glyphs of a given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path[]}\n */\nFont.prototype.getPaths = function(text, x, y, fontSize, options) {\n    const glyphPaths = [];\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        glyphPaths.push(glyphPath);\n    });\n\n    return glyphPaths;\n};\n\n/**\n * Returns the advance width of a text.\n *\n * This is something different than Path.getBoundingBox() as for example a\n * suffixed whitespace increases the advanceWidth but not the bounding box\n * or an overhanging letter like a calligraphic 'f' might have a quite larger\n * bounding box than its advance width.\n *\n * This corresponds to canvas2dContext.measureText(text).width\n *\n * @param  {string} text - The text to create.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return advance width\n */\nFont.prototype.getAdvanceWidth = function(text, fontSize, options) {\n    return this.forEachGlyph(text, 0, 0, fontSize, options, function() {});\n};\n\n/**\n * Draw the text on the given drawing context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n */\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of all glyphs in the text.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * Draw lines indicating important font measurements for all glyphs in the text.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * @param  {string}\n * @return {string}\n */\nFont.prototype.getEnglishName = function(name) {\n    const translations = this.names[name];\n    if (translations) {\n        return translations.en;\n    }\n};\n\n/**\n * Validate\n */\nFont.prototype.validate = function() {\n    const warnings = [];\n    const _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertNamePresent(name) {\n        const englishName = _this.getEnglishName(name);\n        assert(englishName && englishName.trim().length > 0,\n               'No English ' + name + ' specified.');\n    }\n\n    // Identification information\n    assertNamePresent('fontFamily');\n    assertNamePresent('weightName');\n    assertNamePresent('manufacturer');\n    assertNamePresent('copyright');\n    assertNamePresent('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n/**\n * Convert the font object to a SFNT data structure.\n * This structure contains all the necessary tables and metadata to create a binary OTF file.\n * @return {opentype.Table}\n */\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n/**\n * @deprecated Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.\n */\nFont.prototype.toBuffer = function() {\n    console.warn('Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.');\n    return this.toArrayBuffer();\n};\n/**\n * Converts a `opentype.Font` into an `ArrayBuffer`\n * @return {ArrayBuffer}\n */\nFont.prototype.toArrayBuffer = function() {\n    const sfntTable = this.toTables();\n    const bytes = sfntTable.encode();\n    const buffer = new ArrayBuffer(bytes.length);\n    const intArray = new Uint8Array(buffer);\n    for (let i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n/**\n * Initiate a download of the OpenType font.\n */\nFont.prototype.download = function(fileName) {\n    const familyName = this.getEnglishName('fontFamily');\n    const styleName = this.getEnglishName('fontSubfamily');\n    fileName = fileName || familyName.replace(/\\s/g, '') + '-' + styleName + '.otf';\n    const arrayBuffer = this.toArrayBuffer();\n\n    if (isBrowser()) {\n        window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem;\n        window.requestFileSystem(window.TEMPORARY, arrayBuffer.byteLength, function(fs) {\n            fs.root.getFile(fileName, {create: true}, function(fileEntry) {\n                fileEntry.createWriter(function(writer) {\n                    const dataView = new DataView(arrayBuffer);\n                    const blob = new Blob([dataView], {type: 'font/opentype'});\n                    writer.write(blob);\n\n                    writer.addEventListener('writeend', function() {\n                        // Navigating to the file will download it.\n                        location.href = fileEntry.toURL();\n                    }, false);\n                });\n            });\n        },\n        function(err) {\n            throw new Error(err.name + ': ' + err.message);\n        });\n    } else {\n        const fs = require('fs');\n        const buffer = arrayBufferToNodeBuffer(arrayBuffer);\n        fs.writeFileSync(fileName, buffer);\n    }\n};\n/**\n * @private\n */\nFont.prototype.fsSelectionValues = {\n    ITALIC:              0x001, //1\n    UNDERSCORE:          0x002, //2\n    NEGATIVE:            0x004, //4\n    OUTLINED:            0x008, //8\n    STRIKEOUT:           0x010, //16\n    BOLD:                0x020, //32\n    REGULAR:             0x040, //64\n    USER_TYPO_METRICS:   0x080, //128\n    WWS:                 0x100, //256\n    OBLIQUE:             0x200  //512\n};\n\n/**\n * @private\n */\nFont.prototype.usWidthClasses = {\n    ULTRA_CONDENSED: 1,\n    EXTRA_CONDENSED: 2,\n    CONDENSED: 3,\n    SEMI_CONDENSED: 4,\n    MEDIUM: 5,\n    SEMI_EXPANDED: 6,\n    EXPANDED: 7,\n    EXTRA_EXPANDED: 8,\n    ULTRA_EXPANDED: 9\n};\n\n/**\n * @private\n */\nFont.prototype.usWeightClasses = {\n    THIN: 100,\n    EXTRA_LIGHT: 200,\n    LIGHT: 300,\n    NORMAL: 400,\n    MEDIUM: 500,\n    SEMI_BOLD: 600,\n    BOLD: 700,\n    EXTRA_BOLD: 800,\n    BLACK:    900\n};\n\nexport default Font;\n","// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction addName(name, names) {\n    const nameString = JSON.stringify(name);\n    let nameID = 256;\n    for (let nameKey in names) {\n        let n = parseInt(nameKey);\n        if (!n || n < 256) {\n            continue;\n        }\n\n        if (JSON.stringify(names[nameKey]) === nameString) {\n            return n;\n        }\n\n        if (nameID <= n) {\n            nameID = n + 1;\n        }\n    }\n\n    names[nameID] = name;\n    return nameID;\n}\n\nfunction makeFvarAxis(n, axis, names) {\n    const nameID = addName(axis.name, names);\n    return [\n        {name: 'tag_' + n, type: 'TAG', value: axis.tag},\n        {name: 'minValue_' + n, type: 'FIXED', value: axis.minValue << 16},\n        {name: 'defaultValue_' + n, type: 'FIXED', value: axis.defaultValue << 16},\n        {name: 'maxValue_' + n, type: 'FIXED', value: axis.maxValue << 16},\n        {name: 'flags_' + n, type: 'USHORT', value: 0},\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID}\n    ];\n}\n\nfunction parseFvarAxis(data, start, names) {\n    const axis = {};\n    const p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction makeFvarInstance(n, inst, axes, names) {\n    const nameID = addName(inst.name, names);\n    const fields = [\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID},\n        {name: 'flags_' + n, type: 'USHORT', value: 0}\n    ];\n\n    for (let i = 0; i < axes.length; ++i) {\n        const axisTag = axes[i].tag;\n        fields.push({\n            name: 'axis_' + n + ' ' + axisTag,\n            type: 'FIXED',\n            value: inst.coordinates[axisTag] << 16\n        });\n    }\n\n    return fields;\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    const inst = {};\n    const p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (let i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction makeFvarTable(fvar, names) {\n    const result = new table.Table('fvar', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'offsetToData', type: 'USHORT', value: 0},\n        {name: 'countSizePairs', type: 'USHORT', value: 2},\n        {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n        {name: 'axisSize', type: 'USHORT', value: 20},\n        {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n        {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n    ]);\n    result.offsetToData = result.sizeOf();\n\n    for (let i = 0; i < fvar.axes.length; i++) {\n        result.fields = result.fields.concat(makeFvarAxis(i, fvar.axes[i], names));\n    }\n\n    for (let j = 0; j < fvar.instances.length; j++) {\n        result.fields = result.fields.concat(makeFvarInstance(j, fvar.instances[j], fvar.axes, names));\n    }\n\n    return result;\n}\n\nfunction parseFvarTable(data, start, names) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n    const offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    const axisCount = p.parseUShort();\n    const axisSize = p.parseUShort();\n    const instanceCount = p.parseUShort();\n    const instanceSize = p.parseUShort();\n\n    const axes = [];\n    for (let i = 0; i < axisCount; i++) {\n        axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n    }\n\n    const instances = [];\n    const instanceStart = start + offsetToData + axisCount * axisSize;\n    for (let j = 0; j < instanceCount; j++) {\n        instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n    }\n\n    return {axes: axes, instances: instances};\n}\n\nexport default { make: makeFvarTable, parse: parseFvarTable };\n","// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\nimport check from '../check';\nimport parse from '../parse';\n\n// Parse ScriptList and FeatureList tables of GPOS, GSUB, GDEF, BASE, JSTF tables.\n// These lists are unused by now, this function is just the basis for a real parsing.\nfunction parseTaggedListTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const n = p.parseUShort();\n    const list = [];\n    for (let i = 0; i < n; i++) {\n        list[p.parseTag()] = { offset: p.parseUShort() };\n    }\n\n    return list;\n}\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// Format 1 is a simple list of glyph ids,\n// Format 2 is a list of ranges. It is expanded in a list of glyphs, maybe not the best idea.\nfunction parseCoverageTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const format = p.parseUShort();\n    let count = p.parseUShort();\n    if (format === 1) {\n        return p.parseUShortList(count);\n    } else if (format === 2) {\n        const coverage = [];\n        for (; count--;) {\n            const begin = p.parseUShort();\n            const end = p.parseUShort();\n            let index = p.parseUShort();\n            for (let i = begin; i <= end; i++) {\n                coverage[index++] = i;\n            }\n        }\n\n        return coverage;\n    }\n}\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// Returns a function that gets a class value from a glyph ID.\nfunction parseClassDefTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const format = p.parseUShort();\n    if (format === 1) {\n        // Format 1 specifies a range of consecutive glyph indices, one class per glyph ID.\n        const startGlyph = p.parseUShort();\n        const glyphCount = p.parseUShort();\n        const classes = p.parseUShortList(glyphCount);\n        return function(glyphID) {\n            return classes[glyphID - startGlyph] || 0;\n        };\n    } else if (format === 2) {\n        // Format 2 defines multiple groups of glyph indices that belong to the same class.\n        const rangeCount = p.parseUShort();\n        const startGlyphs = [];\n        const endGlyphs = [];\n        const classValues = [];\n        for (let i = 0; i < rangeCount; i++) {\n            startGlyphs[i] = p.parseUShort();\n            endGlyphs[i] = p.parseUShort();\n            classValues[i] = p.parseUShort();\n        }\n\n        return function(glyphID) {\n            let l = 0;\n            let r = startGlyphs.length - 1;\n            while (l < r) {\n                const c = (l + r + 1) >> 1;\n                if (glyphID < startGlyphs[c]) {\n                    r = c - 1;\n                } else {\n                    l = c;\n                }\n            }\n\n            if (startGlyphs[l] <= glyphID && glyphID <= endGlyphs[l]) {\n                return classValues[l] || 0;\n            }\n\n            return 0;\n        };\n    }\n}\n\n// Parse a pair adjustment positioning subtable, format 1 or format 2\n// The subtable is returned in the form of a lookup function.\nfunction parsePairPosSubTable(data, start) {\n    const p = new parse.Parser(data, start);\n    // This part is common to format 1 and format 2 subtables\n    const format = p.parseUShort();\n    const coverageOffset = p.parseUShort();\n    const coverage = parseCoverageTable(data, start + coverageOffset);\n    // valueFormat 4: XAdvance only, 1: XPlacement only, 0: no ValueRecord for second glyph\n    // Only valueFormat1=4 and valueFormat2=0 is supported.\n    const valueFormat1 = p.parseUShort();\n    const valueFormat2 = p.parseUShort();\n    let value1;\n    let value2;\n    if (valueFormat1 !== 4 || valueFormat2 !== 0) return;\n    const sharedPairSets = {};\n    if (format === 1) {\n        // Pair Positioning Adjustment: Format 1\n        const pairSetCount = p.parseUShort();\n        const pairSet = [];\n        // Array of offsets to PairSet tables-from beginning of PairPos subtable-ordered by Coverage Index\n        const pairSetOffsets = p.parseOffset16List(pairSetCount);\n        for (let firstGlyph = 0; firstGlyph < pairSetCount; firstGlyph++) {\n            const pairSetOffset = pairSetOffsets[firstGlyph];\n            let sharedPairSet = sharedPairSets[pairSetOffset];\n            if (!sharedPairSet) {\n                // Parse a pairset table in a pair adjustment subtable format 1\n                sharedPairSet = {};\n                p.relativeOffset = pairSetOffset;\n                let pairValueCount = p.parseUShort();\n                for (; pairValueCount--;) {\n                    const secondGlyph = p.parseUShort();\n                    if (valueFormat1) value1 = p.parseShort();\n                    if (valueFormat2) value2 = p.parseShort();\n                    // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                    // so value1 is the XAdvance and value2 is empty.\n                    sharedPairSet[secondGlyph] = value1;\n                }\n            }\n\n            pairSet[coverage[firstGlyph]] = sharedPairSet;\n        }\n\n        return function(leftGlyph, rightGlyph) {\n            const pairs = pairSet[leftGlyph];\n            if (pairs) return pairs[rightGlyph];\n        };\n    } else if (format === 2) {\n        // Pair Positioning Adjustment: Format 2\n        const classDef1Offset = p.parseUShort();\n        const classDef2Offset = p.parseUShort();\n        const class1Count = p.parseUShort();\n        const class2Count = p.parseUShort();\n        const getClass1 = parseClassDefTable(data, start + classDef1Offset);\n        const getClass2 = parseClassDefTable(data, start + classDef2Offset);\n\n        // Parse kerning values by class pair.\n        const kerningMatrix = [];\n        for (let i = 0; i < class1Count; i++) {\n            const kerningRow = kerningMatrix[i] = [];\n            for (let j = 0; j < class2Count; j++) {\n                if (valueFormat1) value1 = p.parseShort();\n                if (valueFormat2) value2 = p.parseShort();\n                // We only support valueFormat1 = 4 and valueFormat2 = 0,\n                // so value1 is the XAdvance and value2 is empty.\n                kerningRow[j] = value1;\n            }\n        }\n\n        // Convert coverage list to a hash\n        const covered = {};\n        for (let i = 0; i < coverage.length; i++) {\n            covered[coverage[i]] = 1;\n        }\n\n        // Get the kerning value for a specific glyph pair.\n        return function(leftGlyph, rightGlyph) {\n            if (!covered[leftGlyph]) return;\n            const class1 = getClass1(leftGlyph);\n            const class2 = getClass2(rightGlyph);\n            const kerningRow = kerningMatrix[class1];\n\n            if (kerningRow) {\n                return kerningRow[class2];\n            }\n        };\n    }\n}\n\n// Parse a LookupTable (present in of GPOS, GSUB, GDEF, BASE, JSTF tables).\nfunction parseLookupTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const lookupType = p.parseUShort();\n    const lookupFlag = p.parseUShort();\n    const useMarkFilteringSet = lookupFlag & 0x10;\n    const subTableCount = p.parseUShort();\n    const subTableOffsets = p.parseOffset16List(subTableCount);\n    const table = {\n        lookupType: lookupType,\n        lookupFlag: lookupFlag,\n        markFilteringSet: useMarkFilteringSet ? p.parseUShort() : -1\n    };\n    // LookupType 2, Pair adjustment\n    if (lookupType === 2) {\n        const subtables = [];\n        for (let i = 0; i < subTableCount; i++) {\n            const pairPosSubTable = parsePairPosSubTable(data, start + subTableOffsets[i]);\n            if (pairPosSubTable) subtables.push(pairPosSubTable);\n        }\n        // Return a function which finds the kerning values in the subtables.\n        table.getKerningValue = function(leftGlyph, rightGlyph) {\n            for (let i = subtables.length; i--;) {\n                const value = subtables[i](leftGlyph, rightGlyph);\n                if (value !== undefined) return value;\n            }\n\n            return 0;\n        };\n    }\n\n    return table;\n}\n\n// Parse the `GPOS` table which contains, among other things, kerning pairs.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\nfunction parseGposTable(data, start, font) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseFixed();\n    check.argument(tableVersion === 1, 'Unsupported GPOS table version.');\n\n    // ScriptList and FeatureList - ignored for now\n    parseTaggedListTable(data, start + p.parseUShort());\n    // 'kern' is the feature we are looking for.\n    parseTaggedListTable(data, start + p.parseUShort());\n\n    // LookupList\n    const lookupListOffset = p.parseUShort();\n    p.relativeOffset = lookupListOffset;\n    const lookupCount = p.parseUShort();\n    const lookupTableOffsets = p.parseOffset16List(lookupCount);\n    const lookupListAbsoluteOffset = start + lookupListOffset;\n    for (let i = 0; i < lookupCount; i++) {\n        const table = parseLookupTable(data, lookupListAbsoluteOffset + lookupTableOffsets[i]);\n        if (table.lookupType === 2 && !font.getGposKerningValue) font.getGposKerningValue = table.getKerningValue;\n    }\n}\n\nexport default { parse: parseGposTable };\n","// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\nimport check from '../check';\nimport parse from '../parse';\n\nfunction parseWindowsKernTable(p) {\n    const pairs = {};\n    // Skip nTables.\n    p.skip('uShort');\n    const subtableVersion = p.parseUShort();\n    check.argument(subtableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subtableLength, subtableCoverage\n    p.skip('uShort', 2);\n    const nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (let i = 0; i < nPairs; i += 1) {\n        const leftIndex = p.parseUShort();\n        const rightIndex = p.parseUShort();\n        const value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n    return pairs;\n}\n\nfunction parseMacKernTable(p) {\n    const pairs = {};\n    // The Mac kern table stores the version as a fixed (32 bits) but we only loaded the first 16 bits.\n    // Skip the rest.\n    p.skip('uShort');\n    const nTables = p.parseULong();\n    //check.argument(nTables === 1, 'Only 1 subtable is supported (got ' + nTables + ').');\n    if (nTables > 1) {\n        console.warn('Only the first kern subtable is supported.');\n    }\n    p.skip('uLong');\n    const coverage = p.parseUShort();\n    const subtableVersion = coverage & 0xFF;\n    p.skip('uShort');\n    if (subtableVersion === 0) {\n        const nPairs = p.parseUShort();\n        // Skip searchRange, entrySelector, rangeShift.\n        p.skip('uShort', 3);\n        for (let i = 0; i < nPairs; i += 1) {\n            const leftIndex = p.parseUShort();\n            const rightIndex = p.parseUShort();\n            const value = p.parseShort();\n            pairs[leftIndex + ',' + rightIndex] = value;\n        }\n    }\n    return pairs;\n}\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseUShort();\n    if (tableVersion === 0) {\n        return parseWindowsKernTable(p);\n    } else if (tableVersion === 1) {\n        return parseMacKernTable(p);\n    } else {\n        throw new Error('Unsupported kern table version (' + tableVersion + ').');\n    }\n}\n\nexport default { parse: parseKernTable };\n","// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\nimport parse from '../parse';\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    const p = new parse.Parser(data, start);\n    const parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    const glyphOffsets = [];\n    for (let i = 0; i < numGlyphs + 1; i += 1) {\n        let glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexport default { parse: parseLocaTable };\n","// opentype.js\n// https://github.com/nodebox/opentype.js\n// (c) 2015 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global DataView, Uint8Array, XMLHttpRequest  */\n\nimport inflate from 'tiny-inflate';\nimport Font from './font';\nimport Glyph from './glyph';\nimport { CmapEncoding, GlyphNames, addGlyphNames } from './encoding';\nimport parse from './parse';\nimport BoundingBox from './bbox';\nimport Path from './path';\nimport { nodeBufferToArrayBuffer } from './util';\nimport cmap from './tables/cmap';\nimport cff from './tables/cff';\nimport fvar from './tables/fvar';\nimport glyf from './tables/glyf';\nimport gpos from './tables/gpos';\nimport gsub from './tables/gsub';\nimport head from './tables/head';\nimport hhea from './tables/hhea';\nimport hmtx from './tables/hmtx';\nimport kern from './tables/kern';\nimport ltag from './tables/ltag';\nimport loca from './tables/loca';\nimport maxp from './tables/maxp';\nimport _name from './tables/name';\nimport os2 from './tables/os2';\nimport post from './tables/post';\nimport meta from './tables/meta';\n\n/**\n * The opentype library.\n * @namespace opentype\n */\n\n// File loaders /////////////////////////////////////////////////////////\n/**\n * Loads a font from a file. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} path - The path of the file\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromFile(path, callback) {\n    const fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, nodeBufferToArrayBuffer(buffer));\n    });\n}\n/**\n * Loads a font from a URL. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} url - The URL of the font file.\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromUrl(url, callback) {\n    const request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.status !== 200) {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n\n        return callback(null, request.response);\n    };\n\n    request.onerror = function () {\n        callback('Font could not be loaded');\n    };\n\n    request.send();\n}\n\n// Table Directory Entries //////////////////////////////////////////////\n/**\n * Parses OpenType table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseOpenTypeTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 12;\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const checksum = parse.getULong(data, p + 4);\n        const offset = parse.getULong(data, p + 8);\n        const length = parse.getULong(data, p + 12);\n        tableEntries.push({tag: tag, checksum: checksum, offset: offset, length: length, compression: false});\n        p += 16;\n    }\n\n    return tableEntries;\n}\n\n/**\n * Parses WOFF table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseWOFFTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 44; // offset to the first table directory entry.\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const offset = parse.getULong(data, p + 4);\n        const compLength = parse.getULong(data, p + 8);\n        const origLength = parse.getULong(data, p + 12);\n        let compression;\n        if (compLength < origLength) {\n            compression = 'WOFF';\n        } else {\n            compression = false;\n        }\n\n        tableEntries.push({tag: tag, offset: offset, compression: compression,\n            compressedLength: compLength, length: origLength});\n        p += 20;\n    }\n\n    return tableEntries;\n}\n\n/**\n * @typedef TableData\n * @type Object\n * @property {DataView} data - The DataView\n * @property {number} offset - The data offset.\n */\n\n/**\n * @param  {DataView}\n * @param  {Object}\n * @return {TableData}\n */\nfunction uncompressTable(data, tableEntry) {\n    if (tableEntry.compression === 'WOFF') {\n        const inBuffer = new Uint8Array(data.buffer, tableEntry.offset + 2, tableEntry.compressedLength - 2);\n        const outBuffer = new Uint8Array(tableEntry.length);\n        inflate(inBuffer, outBuffer);\n        if (outBuffer.byteLength !== tableEntry.length) {\n            throw new Error('Decompression error: ' + tableEntry.tag + ' decompressed length doesn\\'t match recorded length');\n        }\n\n        const view = new DataView(outBuffer.buffer, 0);\n        return {data: view, offset: 0};\n    } else {\n        return {data: data, offset: tableEntry.offset};\n    }\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n/**\n * Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n * Throws an error if the font could not be parsed.\n * @param  {ArrayBuffer}\n * @return {opentype.Font}\n */\nfunction parseBuffer(buffer) {\n    let indexToLocFormat;\n    let ltagTable;\n\n    // Since the constructor can also be called to create new fonts from scratch, we indicate this\n    // should be an empty font that we'll fill with our own data.\n    const font = new Font({empty: true});\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n    const data = new DataView(buffer, 0);\n    let numTables;\n    let tableEntries = [];\n    const signature = parse.getTag(data, 0);\n    if (signature === String.fromCharCode(0, 1, 0, 0) || signature === 'true' || signature === 'typ1') {\n        font.outlinesFormat = 'truetype';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'OTTO') {\n        font.outlinesFormat = 'cff';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'wOFF') {\n        const flavor = parse.getTag(data, 4);\n        if (flavor === String.fromCharCode(0, 1, 0, 0)) {\n            font.outlinesFormat = 'truetype';\n        } else if (flavor === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType flavor ' + signature);\n        }\n\n        numTables = parse.getUShort(data, 12);\n        tableEntries = parseWOFFTableEntries(data, numTables);\n    } else {\n        throw new Error('Unsupported OpenType signature ' + signature);\n    }\n\n    let cffTableEntry;\n    let fvarTableEntry;\n    let glyfTableEntry;\n    let gposTableEntry;\n    let gsubTableEntry;\n    let hmtxTableEntry;\n    let kernTableEntry;\n    let locaTableEntry;\n    let nameTableEntry;\n    let metaTableEntry;\n    let p;\n\n    for (let i = 0; i < numTables; i += 1) {\n        const tableEntry = tableEntries[i];\n        let table;\n        switch (tableEntry.tag) {\n            case 'cmap':\n                table = uncompressTable(data, tableEntry);\n                font.tables.cmap = cmap.parse(table.data, table.offset);\n                font.encoding = new CmapEncoding(font.tables.cmap);\n                break;\n            case 'cvt ' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.cvt = p.parseShortList(tableEntry.length / 2);\n                break;\n            case 'fvar':\n                fvarTableEntry = tableEntry;\n                break;\n            case 'fpgm' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.fpgm = p.parseByteList(tableEntry.length);\n                break;\n            case 'head':\n                table = uncompressTable(data, tableEntry);\n                font.tables.head = head.parse(table.data, table.offset);\n                font.unitsPerEm = font.tables.head.unitsPerEm;\n                indexToLocFormat = font.tables.head.indexToLocFormat;\n                break;\n            case 'hhea':\n                table = uncompressTable(data, tableEntry);\n                font.tables.hhea = hhea.parse(table.data, table.offset);\n                font.ascender = font.tables.hhea.ascender;\n                font.descender = font.tables.hhea.descender;\n                font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n                break;\n            case 'hmtx':\n                hmtxTableEntry = tableEntry;\n                break;\n            case 'ltag':\n                table = uncompressTable(data, tableEntry);\n                ltagTable = ltag.parse(table.data, table.offset);\n                break;\n            case 'maxp':\n                table = uncompressTable(data, tableEntry);\n                font.tables.maxp = maxp.parse(table.data, table.offset);\n                font.numGlyphs = font.tables.maxp.numGlyphs;\n                break;\n            case 'name':\n                nameTableEntry = tableEntry;\n                break;\n            case 'OS/2':\n                table = uncompressTable(data, tableEntry);\n                font.tables.os2 = os2.parse(table.data, table.offset);\n                break;\n            case 'post':\n                table = uncompressTable(data, tableEntry);\n                font.tables.post = post.parse(table.data, table.offset);\n                font.glyphNames = new GlyphNames(font.tables.post);\n                break;\n            case 'prep' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.prep = p.parseByteList(tableEntry.length);\n                break;\n            case 'glyf':\n                glyfTableEntry = tableEntry;\n                break;\n            case 'loca':\n                locaTableEntry = tableEntry;\n                break;\n            case 'CFF ':\n                cffTableEntry = tableEntry;\n                break;\n            case 'kern':\n                kernTableEntry = tableEntry;\n                break;\n            case 'GPOS':\n                gposTableEntry = tableEntry;\n                break;\n            case 'GSUB':\n                gsubTableEntry = tableEntry;\n                break;\n            case 'meta':\n                metaTableEntry = tableEntry;\n                break;\n        }\n    }\n\n    const nameTable = uncompressTable(data, nameTableEntry);\n    font.tables.name = _name.parse(nameTable.data, nameTable.offset, ltagTable);\n    font.names = font.tables.name;\n\n    if (glyfTableEntry && locaTableEntry) {\n        const shortVersion = indexToLocFormat === 0;\n        const locaTable = uncompressTable(data, locaTableEntry);\n        const locaOffsets = loca.parse(locaTable.data, locaTable.offset, font.numGlyphs, shortVersion);\n        const glyfTable = uncompressTable(data, glyfTableEntry);\n        font.glyphs = glyf.parse(glyfTable.data, glyfTable.offset, locaOffsets, font);\n    } else if (cffTableEntry) {\n        const cffTable = uncompressTable(data, cffTableEntry);\n        cff.parse(cffTable.data, cffTable.offset, font);\n    } else {\n        throw new Error('Font doesn\\'t contain TrueType or CFF outlines.');\n    }\n\n    const hmtxTable = uncompressTable(data, hmtxTableEntry);\n    hmtx.parse(hmtxTable.data, hmtxTable.offset, font.numberOfHMetrics, font.numGlyphs, font.glyphs);\n    addGlyphNames(font);\n\n    if (kernTableEntry) {\n        const kernTable = uncompressTable(data, kernTableEntry);\n        font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);\n    } else {\n        font.kerningPairs = {};\n    }\n\n    if (gposTableEntry) {\n        const gposTable = uncompressTable(data, gposTableEntry);\n        gpos.parse(gposTable.data, gposTable.offset, font);\n    }\n\n    if (gsubTableEntry) {\n        const gsubTable = uncompressTable(data, gsubTableEntry);\n        font.tables.gsub = gsub.parse(gsubTable.data, gsubTable.offset);\n    }\n\n    if (fvarTableEntry) {\n        const fvarTable = uncompressTable(data, fvarTableEntry);\n        font.tables.fvar = fvar.parse(fvarTable.data, fvarTable.offset, font.names);\n    }\n\n    if (metaTableEntry) {\n        const metaTable = uncompressTable(data, metaTableEntry);\n        font.tables.meta = meta.parse(metaTable.data, metaTable.offset);\n        font.metas = font.tables.meta;\n    }\n\n    return font;\n}\n\n/**\n * Asynchronously load the font from a URL or a filesystem. When done, call the callback\n * with two arguments `(err, font)`. The `err` will be null on success,\n * the `font` is a Font object.\n * We use the node.js callback convention so that\n * opentype.js can integrate with frameworks like async.js.\n * @alias opentype.load\n * @param  {string} url - The URL of the font to load.\n * @param  {Function} callback - The callback.\n */\nfunction load(url, callback) {\n    const isNode = typeof window === 'undefined';\n    const loadFn = isNode ? loadFromFile : loadFromUrl;\n    loadFn(url, function(err, arrayBuffer) {\n        if (err) {\n            return callback(err);\n        }\n        let font;\n        try {\n            font = parseBuffer(arrayBuffer);\n        } catch (e) {\n            return callback(e, null);\n        }\n        return callback(null, font);\n    });\n}\n\n/**\n * Synchronously load the font from a URL or file.\n * When done, returns the font object or throws an error.\n * @alias opentype.loadSync\n * @param  {string} url - The URL of the font to load.\n * @return {opentype.Font}\n */\nfunction loadSync(url) {\n    const fs = require('fs');\n    const buffer = fs.readFileSync(url);\n    return parseBuffer(nodeBufferToArrayBuffer(buffer));\n}\n\nexport {\n    Font,\n    Glyph,\n    Path,\n    BoundingBox,\n    parse as _parse,\n    parseBuffer as parse,\n    load,\n    loadSync\n};\n","import * as opentype from 'opentype.js'\r\nimport {\r\n\tarrayFromFunction,\r\n\tassert,\r\n\tassertf,\r\n\tassertInst,\r\n\tassertNumbers,\r\n\tassertVectors,\r\n\tcallsce,\r\n\teq,\r\n\teq0,\r\n\tGOLDEN_RATIO,\r\n\tint,\r\n\tle,\r\n\tlerp,\r\n\tlt,\r\n\tM4,\r\n\tMINUS,\r\n\traddd,\r\n\tsnap,\r\n\tTAU,\r\n\tV,\r\n\tV3,\r\n} from 'ts3dutils'\r\n\r\nimport {\r\n\tBezierCurve,\r\n\tBRep,\r\n\tConicSurface,\r\n\tCurve,\r\n\tEdge,\r\n\tFace,\r\n\tFaceInfoFactory,\r\n\tgetGlobalId,\r\n\tL3,\r\n\tP3,\r\n\tPCurveEdge,\r\n\tPlaneFace,\r\n\tPlaneSurface,\r\n\tProjectedCurveSurface,\r\n\tRotatedCurveSurface,\r\n\tSemiCylinderSurface,\r\n\tSemiEllipseCurve,\r\n\tSemiEllipsoidSurface,\r\n\tStraightEdge,\r\n\tSurface,\r\n\tXiEtaCurve,\r\n} from './index'\r\n\r\nimport { max, min, PI } from './math'\r\n\r\n/**\r\n * Create a surface by projecting a curve in a direction.\r\n *\r\n * @param curve The curve to project.\r\n * @param offset The direction and distance to project curve.\r\n * @param flipped Whether the surface's default orientation (normal = curve tangent cross offset) should be flipped.\r\n */\r\nexport function projectCurve(curve: Curve, offset: V3, flipped: boolean): Surface {\r\n\tif (curve instanceof L3) {\r\n\t\tconst surfaceNormal = offset.cross(curve.dir1).toLength(flipped ? -1 : 1)\r\n\t\treturn new PlaneSurface(P3.normalOnAnchor(surfaceNormal, curve.anchor))\r\n\t}\r\n\tif (curve instanceof SemiEllipseCurve) {\r\n\t\tconst curveDir = flipped ? offset : offset.negated()\r\n\t\treturn new SemiCylinderSurface(curve, curveDir.unit(), undefined, undefined)\r\n\t}\r\n\tif (curve instanceof BezierCurve || curve instanceof XiEtaCurve) {\r\n\t\tconst curveDir = offset.times(flipped ? 1 : -1)\r\n\t\treturn new ProjectedCurveSurface(curve, curveDir, undefined, undefined, flipped ? 0 : -1, flipped ? 1 : 0)\r\n\t}\r\n\tthrow new Error()\r\n}\r\n\r\n/**\r\n * Create a surface by projecting a curve onto a point.\r\n */\r\nexport function projectPointCurve(\r\n\tcurve: Curve,\r\n\ttMin = curve.tMin,\r\n\ttMax = curve.tMax,\r\n\tp: V3,\r\n\tflipped: boolean,\r\n): Surface {\r\n\tif (curve instanceof L3) {\r\n\t\tconst up = curve.anchor.to(p).rejectedFrom(curve.dir1)\r\n\t\treturn PlaneSurface.forAnchorAndPlaneVectors(curve.anchor, curve.dir1, up.unit(), tMin, tMax, 0, up.length())\r\n\t} else if (curve instanceof SemiEllipseCurve) {\r\n\t\t// flip f2 by default\r\n\t\tconst factor = -1 * (flipped ? -1 : 1)\r\n\t\treturn new ConicSurface(p, curve.f1.times(factor), curve.f2, p.to(curve.center), tMin, tMax, 0, 1)\r\n\t} else {\r\n\t\tthrow new Error('projectPointCurve not implemented for ' + curve.constructor.name)\r\n\t}\r\n}\r\n\r\n/**\r\n * Create a surface by rotating a curve in the XZ-plane, with X > 0, around the Z-axis according to the right-hand rule.\r\n * @param curve The curve to rotate.\r\n * @param rotationAxis The line around which to rotate the curve.\r\n * @param flipped Whether the surface's default orientation (normal = curve tangent cross rotation tangent) should be\r\n * flipped.\r\n */\r\nexport function rotateCurve(\r\n\tcurve: Curve,\r\n\ttMin = curve.tMin,\r\n\ttMax = curve.tMax,\r\n\tdegrees: raddd,\r\n\tflipped: boolean,\r\n): Surface {\r\n\tassertf(() => new PlaneSurface(P3.ZX).containsCurve(curve))\r\n\tif (curve instanceof L3) {\r\n\t\tif (curve.dir1.isParallelTo(V3.Z)) {\r\n\t\t\tif (eq0(curve.anchor.x)) {\r\n\t\t\t\treturn undefined\r\n\t\t\t}\r\n\t\t\tconst baseEllipse = new SemiEllipseCurve(\r\n\t\t\t\tV3.O,\r\n\t\t\t\tcurve.anchor.xy(),\r\n\t\t\t\tcurve.anchor.xy().getPerpendicular(),\r\n\t\t\t\t0,\r\n\t\t\t\tdegrees,\r\n\t\t\t)\r\n\t\t\t// if curve.dir1 is going up (+Z), it the cylinder surface should face inwards\r\n\t\t\tconst factor = (curve.dir1.z > 0 ? -1 : 1) * (flipped ? -1 : 1)\r\n\t\t\tconst [zMin, zMax] = [curve.at(tMin).z * factor, curve.at(tMax).z * factor].sort(MINUS)\r\n\t\t\treturn new SemiCylinderSurface(baseEllipse, V3.Z.times(factor), 0, degrees, zMin, zMax)\r\n\t\t}\r\n\t\tif (\r\n\t\t\tcurve\r\n\t\t\t\t.at(tMin)\r\n\t\t\t\t.xy()\r\n\t\t\t\t.dot(curve.dir1) *\r\n\t\t\t\tcurve\r\n\t\t\t\t\t.at(tMax)\r\n\t\t\t\t\t.xy()\r\n\t\t\t\t\t.dot(curve.dir1) <\r\n\t\t\t0\r\n\t\t) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t'line cannot cross the Z axis in the [tMin, tMax] interval, as conic surfaces cannot have an hourglass shape.',\r\n\t\t\t)\r\n\t\t}\r\n\t\tif (curve.dir1.isPerpendicularTo(V3.Z)) {\r\n\t\t\t// if line.dir1 is pointing aways from V3.Z, then the surface should face up\r\n\t\t\tconst factor = (curve.at(lerp(tMin, tMax, 0.5)).dot(curve.dir1) > 0 ? 1 : -1) * (flipped ? -1 : 1)\r\n\t\t\treturn new PlaneSurface(new P3(V3.Z.times(factor), curve.anchor.z * factor))\r\n\t\t} else {\r\n\t\t\t// apex is intersection of segment with Z-axis\r\n\t\t\tconst a = curve.at(tMin),\r\n\t\t\t\tb = curve.at(tMax)\r\n\t\t\tconst apexZ = a.z - a.x * (b.z - a.z) / (b.x - a.x)\r\n\t\t\tconst apex = new V3(0, 0, apexZ)\r\n\t\t\tconst factor = -(a.x > b.x ? -1 : 1) * (flipped ? -1 : 1)\r\n\t\t\tconst s = new ConicSurface(\r\n\t\t\t\tapex,\r\n\t\t\t\tnew V3(curve.dir1.lengthXY(), 0, 0),\r\n\t\t\t\tnew V3(0, curve.dir1.lengthXY(), 0),\r\n\t\t\t\tnew V3(0, 0, (a.x > b.x ? -1 : 1) * curve.dir1.z),\r\n\t\t\t\t0,\r\n\t\t\t\tdegrees,\r\n\t\t\t\t0,\r\n\t\t\t\t1,\r\n\t\t\t)\r\n\t\t\treturn factor > 0 ? s : s.flipped()\r\n\t\t}\r\n\t}\r\n\tif (curve instanceof SemiEllipseCurve) {\r\n\t\tconst a = curve.at(tMin),\r\n\t\t\tb = curve.at(tMax)\r\n\t\tconst ell = curve.rightAngled()\r\n\t\tconst f1Perp = ell.f1.isPerpendicularTo(V3.Z),\r\n\t\t\tf2Perp = ell.f2.isPerpendicularTo(V3.Z)\r\n\t\tif (L3.Z.containsPoint(ell.center) && (f1Perp || f2Perp)) {\r\n\t\t\tflipped = flipped == a.z > b.z\r\n\t\t\tlet width = ell.f1.length(),\r\n\t\t\t\theight = ell.f2.length()\r\n\t\t\tif (ell.f1.isParallelTo(V3.Z)) {\r\n\t\t\t\t;[width, height] = [height, width]\r\n\t\t\t}\r\n\t\t\treturn SemiEllipsoidSurface.forABC(width, (!flipped ? 1 : -1) * width, height, ell.center)\r\n\t\t} else {\r\n\t\t\tconst s = new RotatedCurveSurface(curve, M4.IDENTITY, tMin, tMax)\r\n\t\t\treturn s\r\n\t\t}\r\n\t}\r\n\tthrow new Error()\r\n}\r\n\r\nexport namespace B2T {\r\n\t/**\r\n\t * Create a [BRep] of an axis-aligned box width starting at the origin and extending into +XYZ space.\r\n\t * @param width x-direction size.\r\n\t * @param height y-direction size.\r\n\t * @param depth z-direction size.\r\n\t * @param name\r\n\t */\r\n\texport function box(\r\n\t\twidth: number = 1,\r\n\t\theight: number = 1,\r\n\t\tdepth: number = 1,\r\n\t\tname: string = 'box' + getGlobalId(),\r\n\t): BRep {\r\n\t\tassertNumbers(width, height, depth)\r\n\t\tassert('string' === typeof name)\r\n\t\tconst baseVertices = [new V3(0, 0, 0), new V3(0, height, 0), new V3(width, height, 0), new V3(width, 0, 0)]\r\n\t\tconst generator = callsce('B2T.box', width, height, depth, name)\r\n\t\treturn B2T.extrudeVertices(baseVertices, P3.XY.flipped(), new V3(0, 0, depth), name, generator)\r\n\t}\r\n\r\n\texport function puckman(\r\n\t\tradius: number,\r\n\t\trads: raddd,\r\n\t\theight: number,\r\n\t\tname: string = 'puckman' + getGlobalId(),\r\n\t): BRep {\r\n\t\tassertf(() => lt(0, radius))\r\n\t\tassertf(() => lt(0, rads) && le(rads, TAU))\r\n\t\tassertf(() => lt(0, height))\r\n\t\tconst edges = StraightEdge.chain(\r\n\t\t\t[V3.O, new V3(radius, 0, 0), new V3(radius, 0, height), new V3(0, 0, height)],\r\n\t\t\ttrue,\r\n\t\t)\r\n\t\treturn B2T.rotateEdges(edges, rads, name)\r\n\t}\r\n\r\n\texport function registerVertexName(map: Map<V3, string>, name: string, p: V3) {\r\n\t\t// TODO\r\n\t\tif (!Array.from(map.keys()).some(p2 => p2.like(p))) {\r\n\t\t\tmap.set(p, name)\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Create a [BRep] by projecting a number of edges in a direction.\r\n\t * @param baseFaceEdges\r\n\t * @param baseFacePlane\r\n\t * @param offset\r\n\t * @param name\r\n\t * @param gen\r\n\t * @param infoFactory\r\n\t */\r\n\texport function extrudeEdges(\r\n\t\tbaseFaceEdges: Edge[],\r\n\t\tbaseFacePlane: P3 = P3.XY,\r\n\t\toffset: V3 = V3.Z,\r\n\t\tname: string = 'extrude' + getGlobalId(),\r\n\t\tgen?: string,\r\n\t\tinfoFactory?: FaceInfoFactory<any>,\r\n\t): BRep {\r\n\t\tbaseFaceEdges = fixEdges(baseFaceEdges)\r\n\t\t//Array.from(combinations(baseFaceEdges.length)).forEach(({i, j}) => {\r\n\t\t//\tassertf(() => !Edge.edgesIntersect(baseFaceEdges[i], baseFaceEdges[j]), baseFaceEdges[i].sce +\r\n\t\t// baseFaceEdges[j].sce) })\r\n\t\tassertf(() => Edge.isLoop(baseFaceEdges))\r\n\t\t// TODO checks..\r\n\t\t//if (offset.dot(baseFacePlane.normal1) > 0) {\r\n\t\t//\tbaseFacePlane = baseFacePlane.flipped()\r\n\t\t//}\r\n\t\tconst vertexNames = new Map()\r\n\t\tconst basePlaneSurface = new PlaneSurface(baseFacePlane)\r\n\t\t//assert(basePlaneSurface.edgeLoopCCW(baseFaceEdges), 'edges not CCW on baseFacePlane')\r\n\t\tconst translationMatrix = M4.translate(offset)\r\n\t\tconst topEdges = baseFaceEdges.map(edge => edge.transform(translationMatrix, 'top')) as Edge[]\r\n\t\tconst edgeCount = baseFaceEdges.length\r\n\r\n\t\tconst bottomInfo = infoFactory && infoFactory.extrudeBottom(basePlaneSurface, baseFaceEdges)\r\n\t\tconst bottomFace = new PlaneFace(basePlaneSurface, baseFaceEdges, [], name + 'Bottom', bottomInfo)\r\n\r\n\t\tconst topFaceEdges = topEdges.map(edge => edge.flipped()).reverse()\r\n\t\tconst topSurface = new PlaneSurface(baseFacePlane.flipped().translated(offset))\r\n\t\tconst topInfo = infoFactory && infoFactory.extrudeBottom(topSurface, topFaceEdges)\r\n\t\tconst topFace = new PlaneFace(topSurface, topFaceEdges, [], name + 'Top', topInfo)\r\n\r\n\t\tbaseFaceEdges.forEach(edge => B2T.registerVertexName(vertexNames, edge.name + 'A', edge.a))\r\n\t\ttopFaceEdges.forEach(edge => B2T.registerVertexName(vertexNames, edge.name + 'A', edge.a))\r\n\r\n\t\tconst ribs = arrayFromFunction(edgeCount, i =>\r\n\t\t\tStraightEdge.throughPoints(baseFaceEdges[i].a, topEdges[i].a, name + 'Rib' + i),\r\n\t\t)\r\n\r\n\t\tconst faces = baseFaceEdges.map((edge, i) => {\r\n\t\t\tconst faceName = name + 'Wall' + i\r\n\t\t\tconst j = (i + 1) % edgeCount\r\n\t\t\tconst faceEdges = [baseFaceEdges[i].flipped(), ribs[i], topEdges[i], ribs[j].flipped()]\r\n\t\t\tconst surface = projectCurve(edge.curve, offset, edge.reversed)\r\n\t\t\tconst info = infoFactory && infoFactory.extrudeWall(i, surface, faceEdges)\r\n\t\t\treturn Face.create(surface, faceEdges, undefined, faceName, info)\r\n\t\t}) as Face[]\r\n\t\tfaces.push(bottomFace, topFace)\r\n\t\tgen = gen || callsce('B2T.extrudeEdges', baseFaceEdges, baseFacePlane, offset, name)\r\n\t\treturn new BRep(faces, baseFacePlane.normal1.dot(offset) > 0, gen, vertexNames)\r\n\t}\r\n\r\n\texport function cylinder(\r\n\t\tradius: number = 1,\r\n\t\theight: number = 1,\r\n\t\trads: raddd = TAU,\r\n\t\tname: string = 'cylinder' + getGlobalId(),\r\n\t): BRep {\r\n\t\tconst vertices = [new V3(0, 0, 0), new V3(radius, 0, 0), new V3(radius, 0, height), new V3(0, 0, height)]\r\n\t\treturn rotateEdges(StraightEdge.chain(vertices, true), rads, name)\r\n\t}\r\n\r\n\texport function cone(\r\n\t\tradius: number = 1,\r\n\t\theight: number = 1,\r\n\t\trads: raddd = TAU,\r\n\t\tname: string = 'cone' + getGlobalId(),\r\n\t): BRep {\r\n\t\tconst vertices = [new V3(0, 0, 0), new V3(radius, 0, height), new V3(0, 0, height)]\r\n\t\treturn rotateEdges(StraightEdge.chain(vertices, true), rads, name)\r\n\t}\r\n\r\n\texport function sphere(radius: number = 1, name: string = 'sphere' + getGlobalId(), rot: raddd = TAU): BRep {\r\n\t\tconst ee = PCurveEdge.create(\r\n\t\t\tnew SemiEllipseCurve(V3.O, new V3(0, 0, -radius), new V3(radius, 0, 0)),\r\n\t\t\tnew V3(0, 0, -radius),\r\n\t\t\tnew V3(0, 0, radius),\r\n\t\t\t0,\r\n\t\t\tPI,\r\n\t\t\tundefined,\r\n\t\t\tnew V3(radius, 0, 0),\r\n\t\t\tnew V3(-radius, 0, 0),\r\n\t\t)\r\n\t\tconst generator = callsce('B2T.sphere', radius, name, rot)\r\n\t\treturn rotateEdges([StraightEdge.throughPoints(ee.b, ee.a), ee], rot, name, generator)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a [[BRep]] of a menger sponge.\r\n\t * @param res 0: just a cube, 1: every cube face has one hole, 2: 9 holes, etc\r\n\t * @param name\r\n\t */\r\n\texport function menger(res: int = 2, name: string = 'menger' + getGlobalId()): BRep {\r\n\t\tlet result = B2T.box(1, 1, 1)\r\n\t\tif (0 == res) return result\r\n\t\tconst punch = B2T.box(1 / 3, 1 / 3, 2)\r\n\t\t\t.translate(1 / 3, 1 / 3, -1 / 2)\r\n\t\t\t.flipped()\r\n\r\n\t\tfunction recurse(steps: int, m4: M4) {\r\n\t\t\tresult = result.and(punch.transform(m4))\r\n\t\t\tif (steps > 1) {\r\n\t\t\t\tconst scaled = m4.times(M4.scale(1 / 3, 1 / 3, 1))\r\n\t\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\t\tif (4 == i) continue\r\n\t\t\t\t\trecurse(steps - 1, scaled.times(M4.translate(i % 3, (i / 3) | 0, 0)))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trecurse(res, M4.IDENTITY)\r\n\t\trecurse(res, M4.YZX)\r\n\t\trecurse(res, M4.ZXY)\r\n\t\treturn result\r\n\t}\r\n\r\n\texport function menger2(res: int = 2, name: string = 'menger' + getGlobalId()): BRep {\r\n\t\tif (0 == res) return B2T.box(1, 1, 1)\r\n\r\n\t\tconst punch = B2T.box(1 / 3, 1 / 3, 2)\r\n\t\t\t.translate(1 / 3, 1 / 3, -1 / 2)\r\n\t\t\t.flipped()\r\n\t\tconst stencilFaces: Face[] = []\r\n\r\n\t\tfunction recurse(steps: int, m4: M4) {\r\n\t\t\tstencilFaces.push(...punch.transform(m4).faces)\r\n\t\t\tif (steps > 1) {\r\n\t\t\t\tconst scaled = m4.times(M4.scale(1 / 3, 1 / 3, 1))\r\n\t\t\t\tfor (let i = 0; i < 9; i++) {\r\n\t\t\t\t\tif (4 == i) continue\r\n\t\t\t\t\trecurse(steps - 1, scaled.times(M4.translate(i % 3, (i / 3) | 0, 0)))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\trecurse(res, M4.IDENTITY)\r\n\t\tconst stencil = new BRep(stencilFaces, true)\r\n\r\n\t\treturn B2T.box()\r\n\t\t\t.and(stencil)\r\n\t\t\t.and(stencil.transform(M4.YZX))\r\n\t\t\t.and(stencil.transform(M4.ZXY))\r\n\t}\r\n\r\n\t/**\r\n\t * Create a [BRep] of a torus.\r\n\t * @param rSmall The radius to the surface of the torus.\r\n\t * @param rLarge The radius from the origin to the inside of the torus.\r\n\t * @param rads\r\n\t * @param name\r\n\t */\r\n\texport function torus(\r\n\t\trSmall: number,\r\n\t\trLarge: number,\r\n\t\trads: raddd = TAU,\r\n\t\tname: string = 'torus' + getGlobalId(),\r\n\t): BRep {\r\n\t\tassertNumbers(rSmall, rLarge, rads)\r\n\t\tassertf(() => rLarge > rSmall)\r\n\t\tconst curves = [\r\n\t\t\tSemiEllipseCurve.semicircle(rSmall, new V3(rLarge, 0, 0)),\r\n\t\t\tSemiEllipseCurve.semicircle(-rSmall, new V3(rLarge, 0, 0)),\r\n\t\t]\r\n\t\tconst baseEdges = curves.map(c => PCurveEdge.forCurveAndTs(c, 0, Math.PI).rotateX(PI / 2))\r\n\t\treturn B2T.rotateEdges(baseEdges, rads, name)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a [BRep] by smoothly rotating edges around Z.\r\n\t * baseLoop should be CCW on XZ plane for a bounded BRep\r\n\t */\r\n\texport function rotateEdges(\r\n\t\tbaseLoop: Edge[],\r\n\t\ttotalRads: raddd,\r\n\t\tname: string = 'rotateEdges' + getGlobalId(),\r\n\t\tgenerator?: string,\r\n\t\tinfoFactory?: FaceInfoFactory<any>,\r\n\t): BRep {\r\n\t\tassert(baseLoop.every(e => new PlaneSurface(P3.ZX).containsCurve(e.curve)))\r\n\t\tassert(!eq(PI, totalRads) || PI == totalRads) // URHGJ\r\n\t\tassertf(() => lt(0, totalRads) && le(totalRads, TAU))\r\n\t\ttotalRads = snap(totalRads, TAU)\r\n\t\tassertf(() => Edge.isLoop(baseLoop))\r\n\t\tconst basePlane = new PlaneSurface(P3.ZX.flipped()).edgeLoopCCW(baseLoop)\r\n\t\t\t? new PlaneSurface(P3.ZX.flipped())\r\n\t\t\t: new PlaneSurface(P3.ZX)\r\n\t\t// const rotationSteps = ceil((totalRads - NLA_PRECISION) / PI)\r\n\t\t// const angles = rotationSteps == 1 ? [-PI, -PI + totalRads] : [-PI, 0, totalRads - PI]\r\n\t\tconst open = !eq(totalRads, 2 * PI)\r\n\t\tconst baseRibCurves = baseLoop.map(edge => {\r\n\t\t\tconst a = edge.a,\r\n\t\t\t\tradius = a.lengthXY()\r\n\t\t\tif (!eq0(radius)) {\r\n\t\t\t\treturn new SemiEllipseCurve(V(0, 0, a.z), V(radius, 0, 0), V(0, radius, 0))\r\n\t\t\t}\r\n\t\t\treturn undefined\r\n\t\t})\r\n\t\tconst baseSurfaces = baseLoop.map((edge, i) => {\r\n\t\t\tconst s = rotateCurve(edge.curve, edge.minT, edge.maxT, PI, edge.deltaT() > 0)\r\n\t\t\tconst t = lerp(edge.aT, edge.bT, 0.5)\r\n\t\t\ts &&\r\n\t\t\t\tassert(\r\n\t\t\t\t\tedge\r\n\t\t\t\t\t\t.tangentAt(t)\r\n\t\t\t\t\t\t.cross(V3.Y)\r\n\t\t\t\t\t\t.dot(s.normalP(edge.curve.at(t))) < 0,\r\n\t\t\t\t)\r\n\t\t\treturn s\r\n\t\t})\r\n\t\tlet stepStartEdges = baseLoop,\r\n\t\t\tstepEndEdges: Edge[]\r\n\t\tconst faces = []\r\n\t\tfor (let rot = 0; rot < totalRads; rot += PI) {\r\n\t\t\tconst aT = 0,\r\n\t\t\t\tbT = min(totalRads - rot, PI)\r\n\t\t\tconst rotation = M4.rotateZ(rot + bT)\r\n\t\t\tstepEndEdges = rot + bT == TAU ? baseLoop : baseLoop.map(edge => edge.transform(rotation))\r\n\t\t\tconst ribs = arrayFromFunction(baseLoop.length, i => {\r\n\t\t\t\tconst a = stepStartEdges[i].a,\r\n\t\t\t\t\tradius = a.lengthXY()\r\n\t\t\t\tconst b = stepEndEdges[i].a\r\n\t\t\t\tif (!eq0(radius)) {\r\n\t\t\t\t\tconst curve = 0 === rot ? baseRibCurves[i]! : baseRibCurves[i]!.rotateZ(rot)\r\n\t\t\t\t\treturn new PCurveEdge(\r\n\t\t\t\t\t\tcurve,\r\n\t\t\t\t\t\ta,\r\n\t\t\t\t\t\tb,\r\n\t\t\t\t\t\taT,\r\n\t\t\t\t\t\tbT,\r\n\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\tcurve.tangentAt(aT),\r\n\t\t\t\t\t\tcurve.tangentAt(bT),\r\n\t\t\t\t\t\tname + 'rib' + i,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined\r\n\t\t\t})\r\n\t\t\tfor (let edgeIndex = 0; edgeIndex < baseLoop.length; edgeIndex++) {\r\n\t\t\t\tif (baseSurfaces[edgeIndex]) {\r\n\t\t\t\t\tconst edge = stepStartEdges[edgeIndex]\r\n\t\t\t\t\tconst ipp = (edgeIndex + 1) % baseLoop.length\r\n\t\t\t\t\tconst faceEdges = [\r\n\t\t\t\t\t\tstepStartEdges[edgeIndex].flipped(),\r\n\t\t\t\t\t\t!eq0(edge.a.x) && ribs[edgeIndex],\r\n\t\t\t\t\t\tstepEndEdges[edgeIndex],\r\n\t\t\t\t\t\t!eq0(edge.b.x) && ribs[ipp]!.flipped(),\r\n\t\t\t\t\t].filter((x: any): x is Edge => x)\r\n\t\t\t\t\tconst surface = 0 === rot ? baseSurfaces[edgeIndex] : baseSurfaces[edgeIndex].rotateZ(rot)\r\n\t\t\t\t\tconst info = infoFactory && infoFactory.extrudeWall(edgeIndex, surface, faceEdges, undefined)\r\n\t\t\t\t\tfaces.push(Face.create(surface, faceEdges, undefined, name + 'Wall' + edgeIndex, info))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tstepStartEdges = stepEndEdges\r\n\t\t}\r\n\t\tif (open) {\r\n\t\t\tconst endFaceEdges = Edge.reversePath(stepEndEdges!)\r\n\t\t\tconst infoStart = infoFactory && infoFactory.rotationStart(basePlane, baseLoop, undefined)\r\n\t\t\tconst infoEnd =\r\n\t\t\t\tinfoFactory && infoFactory.rotationEnd(basePlane.flipped().rotateZ(totalRads), endFaceEdges, undefined)\r\n\t\t\tfaces.push(\r\n\t\t\t\tnew PlaneFace(basePlane, baseLoop, undefined, name + 'start', infoStart),\r\n\t\t\t\tnew PlaneFace(basePlane.flipped().rotateZ(totalRads), endFaceEdges, undefined, name + 'end', infoEnd),\r\n\t\t\t)\r\n\t\t}\r\n\t\tconst infiniteVolume = new PlaneSurface(P3.ZX).edgeLoopCCW(baseLoop)\r\n\t\treturn new BRep(faces, infiniteVolume, generator)\r\n\t}\r\n\r\n\t/**\r\n\t * loop should be CCW on XZ plane for a bounded BRep\r\n\t */\r\n\t//export function rotateEdgesUnsplit(loop: Edge[], rads: raddd, name: string): BRep {\r\n\t//\tassert(Edge.isLoop(loop))\r\n\t//\tconst rotationMatrix = M4.rotateZ(rads)\r\n\t//\tconst open = !eq(rads, 2 * PI)\r\n\t//\tconst endEdges = open ? loop.map(edge => edge.transform(rotationMatrix)) : loop\r\n\t//\tconst edgeCount = loop.length\r\n\t//\tconst ribs = arrayFromFunction(edgeCount, i => {\r\n\t//\t\tconst a = loop[i].a, radius = a.lengthXY()\r\n\t//\t\tconst b = endEdges[i].a\r\n\t//\t\tif (!eq0(radius)) {\r\n\t//\t\t\tconst curve = new SemiEllipseCurve(V(0, 0, a.z), V(-radius, 0, 0), V(0, -radius, 0))\r\n\t//\t\t\tconst aT = -PI, bT = -PI + rads\r\n\t//\t\t\treturn new PCurveEdge(curve, a, b, aT, bT, undefined, curve.tangentAt(aT), curve.tangentAt(bT), name\r\n\t// + 'rib' + i) } }) const faces = loop.map((edge, i) => { const ipp = (i + 1) % edgeCount console.log('ljl', i,\r\n\t// ipp, ribs) const faceEdges = [ edge.flipped(), !eq0(edge.a.x) && ribs[i], endEdges[i], !eq0(edge.b.x) &&\r\n\t// ribs[ipp].flipped()].filter(x => x) if (edge instanceof StraightEdge) { const line = edge.curve let surface if\r\n\t// (line.dir1.isParallelTo(V3.Z)) { if (eq0(edge.a.x)) { return } let flipped = edge.a.z > edge.b.z surface = new\r\n\t// SemiCylinderSurface(ribs[i].curve, !flipped ? V3.Z : V3.Z.negated()) } else if\r\n\t// (line.dir1.isPerpendicularTo(V3.Z)) { let flipped = edge.a.x > edge.b.x let surface = new PlaneSurface(new\r\n\t// P3(V3.Z, edge.a.z)) if (!flipped) surface = surface.flipped() if (!open) { const hole = flipped ? !eq0(edge.b.x)\r\n\t// && ribs[ipp].flipped() : !eq0(edge.a.x) && ribs[i] return new PlaneFace(surface, [flipped ? ribs[i] :\r\n\t// ribs[ipp].flipped()], hole && [[hole]]) } return new PlaneFace(surface, faceEdges) } else { // apex is\r\n\t// intersection of segment with Z-axis let a = edge.a, b = edge.b let apexZ = a.z - a.x * (b.z - a.z) / (b.x - a.x)\r\n\t// let apex = new V3(0, 0, apexZ) let flipped = edge.a.z > edge.b.z surface =\r\n\t// ConicSurface.atApexThroughEllipse(apex, ribs[a.x > b.x ? i : ipp].curve as SemiEllipseCurve, !flipped ? 1 : -1)\r\n\t// } return Face.create(surface, faceEdges) } if (edge.curve instanceof SemiEllipseCurve) { let flipped = undefined\r\n\t// let ell = edge.curve.rightAngled() let f1Perp = ell.f1.isPerpendicularTo(V3.Z), f2Perp =\r\n\t// ell.f2.isPerpendicularTo(V3.Z) if (L3.Z.containsPoint(ell.center) && (f1Perp || f2Perp)) { let f3length = f1Perp\r\n\t// ? ell.f1.length() : ell.f2.length() if (flipped) { f3length *= -1 } let surface = new\r\n\t// SemiEllipsoidSurface(ell.center, ell.f1, ell.f2, ell.f1.cross(ell.f2).toLength(f3length)) return new\r\n\t// RotationFace(surface, faceEdges) } } else { assert(false, edge) } }).filter(x => x) if (open) { const\r\n\t// endFaceEdges = endEdges.map(edge => edge.flipped()).reverse() faces.push( new PlaneFace(new\r\n\t// PlaneSurface(P3.ZX.flipped()), loop), new PlaneFace(new PlaneSurface(P3.ZX.rotateZ(rads)), endFaceEdges)) }\r\n\t// return new BRep(faces, undefined) }\r\n\r\n\texport function quaffle() {\r\n\t\tconst baseK = B2T.sphere(1)\r\n\t\t\t.translate(0, 1.7)\r\n\t\t\t.flipped()\r\n\t\t//const baseK = B2T.box().scale(0.2).translate(0, 0.95).flipped()\r\n\t\t// const vs = B2T.DODECAHEDRON_VERTICES.concat(\r\n\t\t// B2T.DODECAHEDRON_FACE_VERTICES.map(fis => fis\r\n\t\t// .map(vi => B2T.DODECAHEDRON_VERTICES[vi])\r\n\t\t// .reduce((a,b) => a.plus(b), V3.O)\r\n\t\t// .unit()))\r\n\t\tconst ss = new BRep(TETRAHEDRON_VERTICES.flatMap(v => baseK.rotateAB(V3.Y, v).faces), false)\r\n\t\t//return ss\r\n\t\treturn B2T.sphere().and(ss)\r\n\t}\r\n\r\n\texport function extrudeFace(face: PlaneFace, dir: V3) {\r\n\t\treturn new BRep(\r\n\t\t\textrudeEdges(face.contour, face.surface.plane, dir)\r\n\t\t\t\t.faces.slice(0, -2)\r\n\t\t\t\t.concat(\r\n\t\t\t\t\tface,\r\n\t\t\t\t\tface.translate(dir.x, dir.y, dir.z).flipped(),\r\n\t\t\t\t\tface.holes.flatMap(hole =>\r\n\t\t\t\t\t\textrudeEdges(hole, face.surface.plane.flipped(), dir).faces.slice(0, -2),\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\tfalse,\r\n\t\t)\r\n\t}\r\n\r\n\texport let defaultFont: opentype.Font\r\n\r\n\texport function loadFonts(): Promise<opentype.Font> {\r\n\t\treturn loadFont('fonts/FiraSansMedium.woff').then(font => (defaultFont = font))\r\n\t}\r\n\r\n\tconst loadedFonts = new Map<string, opentype.Font>()\r\n\r\n\texport function loadFont(fontPath: string): Promise<opentype.Font> {\r\n\t\treturn new Promise<opentype.Font>(function(resolve, reject) {\r\n\t\t\tconst font = loadedFonts.get(fontPath)\r\n\t\t\tif (font) {\r\n\t\t\t\tresolve(font)\r\n\t\t\t} else {\r\n\t\t\t\topentype.load(fontPath, function(err, f) {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\treject(err)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tloadedFonts.set(fontPath, f!)\r\n\t\t\t\t\t\tresolve(f)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\texport function loadFontsAsync(callback: () => void) {\r\n\t\tif (defaultFont) {\r\n\t\t\tcallback()\r\n\t\t} else {\r\n\t\t\topentype.load('fonts/FiraSansMedium.woff', function(err, font) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tthrow new Error('Could not load font: ' + err)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdefaultFont = font!\r\n\t\t\t\t\tcallback()\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Create the [BRep] of a string rendered in a font.\r\n\t * @param text\r\n\t * @param size\r\n\t * @param depth\r\n\t * @param font An opentype.js font.\r\n\t */\r\n\texport function text(text: string, size: number, depth: number = 1, font: opentype.Font = defaultFont) {\r\n\t\tconst path = font.getPath(text, 0, 0, size)\r\n\t\tconst subpaths: opentype.PathCommand[][] = []\r\n\t\tpath.commands.forEach(c => {\r\n\t\t\tif (c.type == 'M') {\r\n\t\t\t\tsubpaths.push([])\r\n\t\t\t}\r\n\t\t\tsubpaths.last.push(c)\r\n\t\t})\r\n\t\tconst loops = subpaths.map(sp => {\r\n\t\t\tconst path = new opentype.Path()\r\n\t\t\tpath.commands = sp\r\n\t\t\tconst loop = Edge.reversePath(Edge.pathFromSVG(path.toPathData(13))).map(e => e.mirrorY())\r\n\t\t\tassert(Edge.isLoop(loop))\r\n\t\t\treturn loop\r\n\t\t})\r\n\t\tconst faces = Face.assembleFacesFromLoops(loops, new PlaneSurface(P3.XY), PlaneFace as any)\r\n\t\tconst generator = callsce('B2T.text', text, size, depth)\r\n\t\treturn BRep.join(faces.map(face => B2T.extrudeFace(face as PlaneFace, V(0, 0, -depth))), generator)\r\n\t}\r\n\r\n\texport function minorityReport() {\r\n\t\tconst a = B2T.sphere()\r\n\t\tconst b = B2T.text('LEO CROW', 64, 128)\r\n\t\t\t.scale(0.1 / 32)\r\n\t\t\t.translate(-0.5, -0.05, 1.2)\r\n\t\t\t.flipped()\r\n\t\tconst c = B2T.sphere(0.98)\r\n\t\treturn a.and(b).plus(c)\r\n\t}\r\n\r\n\texport function whatever() {\r\n\t\tconst iso = isocahedron()\r\n\t\tconst numbersBRep = BRep.join(\r\n\t\t\tiso.faces.map((face, i) => {\r\n\t\t\t\tconst numberBRep = text('' + (i + 1), 0.4, -2)\r\n\t\t\t\tconst centroid = face.contour\r\n\t\t\t\t\t.map(edge => edge.a)\r\n\t\t\t\t\t.reduce((a, b) => a.plus(b), V3.O)\r\n\t\t\t\t\t.div(3)\r\n\r\n\t\t\t\tconst sys = M4.forSys(\r\n\t\t\t\t\tface.contour[0].aDir,\r\n\t\t\t\t\tcentroid.cross(face.contour[0].aDir),\r\n\t\t\t\t\tcentroid.unit(),\r\n\t\t\t\t\tcentroid,\r\n\t\t\t\t)\r\n\t\t\t\treturn numberBRep.transform(sys.times(M4.translate(-numberBRep.getAABB().size().x / 2, -0.1, -0.04)))\r\n\t\t\t}),\r\n\t\t)\r\n\t\tconst s = sphere(0.9)\r\n\t\t//return iso.and(numbersBRep)\r\n\t\treturn iso.and(s).and(numbersBRep)\r\n\t\t//return numbersBRep\r\n\t}\r\n\r\n\texport function whatever3() {\r\n\t\tconst t = B2T.torus(1, 2)\r\n\t\treturn B2T.box(5, 5, 2)\r\n\t\t\t.translate(-2.5, -2.5)\r\n\t\t\t.minus(t)\r\n\t}\r\n\r\n\texport function d20() {\r\n\t\tconst iso = isocahedron()\r\n\t\tconst numbersBRep = BRep.join(\r\n\t\t\tiso.faces.map((face, i) => {\r\n\t\t\t\tconst numberBRep = text('' + (i + 1), 0.4, -2)\r\n\t\t\t\tconst centroid = face.contour\r\n\t\t\t\t\t.map(edge => edge.a)\r\n\t\t\t\t\t.reduce((a, b) => a.plus(b), V3.O)\r\n\t\t\t\t\t.div(3)\r\n\r\n\t\t\t\tconst sys = M4.forSys(\r\n\t\t\t\t\tface.contour[0].aDir,\r\n\t\t\t\t\tcentroid.cross(face.contour[0].aDir),\r\n\t\t\t\t\tcentroid.unit(),\r\n\t\t\t\t\tcentroid,\r\n\t\t\t\t)\r\n\t\t\t\treturn numberBRep.transform(sys.times(M4.translate(-numberBRep.getAABB().size().x / 2, -0.1, -0.04)))\r\n\t\t\t}),\r\n\t\t)\r\n\t\tconst s = sphere(0.9)\r\n\t\t//return iso.and(numbersBRep)\r\n\t\treturn iso.and(s).and(numbersBRep)\r\n\t\t//return numbersBRep\r\n\t}\r\n\r\n\t/**\r\n\t * Create a [BRep] by rotating a number of edges in steps in the ZX plane, with X > 0\r\n\t * around the Z axis according to the right-hand rule. The edges from each rotation step\r\n\t * (\"ribs\") are connected by projecting a rib onto the next. For example, line edges\r\n\t * will always be connected by [PlaneSurface]s\r\n\t *\r\n\t * @example Roundabout way of creating a cube:\r\n\t * ```ts\r\n\t * B2T.rotStep(StraightEdge.rect(Math.sqrt(2) / 2, 1), 360 * DEG, 4)\r\n\t * ```\r\n\t * @param the edges to rotate.\r\n\t * @param totalRads The angle between the original and last rib. [0; TAU]\r\n\t * @param count The number of steps to take. If totalRads == TAU, it must be >= 3, otherwise >= 2.\r\n\t */\r\n\texport function rotStep(edges: Edge[], totalRads: raddd, count: int): BRep\r\n\texport function rotStep(edges: Edge[], angles: raddd[]): BRep\r\n\texport function rotStep(edges: Edge[], totalRadsOrAngles: raddd | raddd[], countO?: int): BRep {\r\n\t\tconst angles: number[] =\r\n\t\t\t'number' === typeof totalRadsOrAngles\r\n\t\t\t\t? arrayFromFunction(countO!, i => (i + 1) / countO! * totalRadsOrAngles)\r\n\t\t\t\t: totalRadsOrAngles\r\n\t\tconst count = angles.length\r\n\t\tconst open = !eq(TAU, angles.last)\r\n\t\tconst ribs = [\r\n\t\t\tedges,\r\n\t\t\t...angles.map(phi => {\r\n\t\t\t\tif (eq(TAU, phi)) {\r\n\t\t\t\t\treturn edges\r\n\t\t\t\t}\r\n\t\t\t\tconst matrix = M4.rotateZ(phi)\r\n\t\t\t\treturn edges.map(edge => edge.transform(matrix))\r\n\t\t\t}),\r\n\t\t]\r\n\t\tconst horizontalEdges = arrayFromFunction(count, i => {\r\n\t\t\tconst ipp = (i + 1) % (count + 1)\r\n\t\t\treturn arrayFromFunction(edges.length, j => {\r\n\t\t\t\tif (!eq0(edges[j].a.lengthXY())) {\r\n\t\t\t\t\treturn StraightEdge.throughPoints(ribs[i][j].a, ribs[ipp][j].a)\r\n\t\t\t\t}\r\n\t\t\t\treturn undefined!\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\tconst faces: Face[] = []\r\n\t\tlet face: Face\r\n\t\tedges.forEach((edge, i) => {\r\n\t\t\tconst ipp = (i + 1) % edges.length\r\n\t\t\t// for straight edges perpendicular to the Z-axis, we only create one face.\r\n\t\t\tif (edge instanceof StraightEdge && edge.curve.dir1.isPerpendicularTo(V3.Z)) {\r\n\t\t\t\tconst flipped = edge.a.x > edge.b.x\r\n\t\t\t\tconst surface = new PlaneSurface(flipped ? new P3(V3.Z, edge.a.z) : new P3(V3.Z.negated(), -edge.a.z))\r\n\t\t\t\tif (open) {\r\n\t\t\t\t\tconst faceEdges: Edge[] = []\r\n\t\t\t\t\tif (!eq0(edge.a.x)) {\r\n\t\t\t\t\t\tfaceEdges.push(...arrayFromFunction(count, j => horizontalEdges[j][i]!))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfaceEdges.push(ribs[count][i])\r\n\t\t\t\t\tif (!eq0(edge.b.x)) {\r\n\t\t\t\t\t\tfaceEdges.push(...arrayFromFunction(count, j => horizontalEdges[count - j - 1][ipp]!.flipped()))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfaceEdges.push(edge.flipped())\r\n\t\t\t\t\tface = new PlaneFace(surface, faceEdges)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst contour = flipped\r\n\t\t\t\t\t\t? arrayFromFunction(count, j => horizontalEdges[j][i])\r\n\t\t\t\t\t\t: arrayFromFunction(count, j => horizontalEdges[count - j - 1][ipp]!.flipped())\r\n\t\t\t\t\tlet hole\r\n\t\t\t\t\tif (flipped && !eq0(edge.b.x)) {\r\n\t\t\t\t\t\thole = arrayFromFunction(count, j => horizontalEdges[count - j - 1][ipp]!.flipped())\r\n\t\t\t\t\t} else if (!flipped && !eq0(edge.a.x)) {\r\n\t\t\t\t\t\thole = arrayFromFunction(count, j => horizontalEdges[j][i])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tface = new PlaneFace(surface, contour, hole ? [hole] : [])\r\n\t\t\t\t}\r\n\t\t\t\tfaces.push(face)\r\n\t\t\t\treturn\r\n\t\t\t} else if (edge instanceof StraightEdge) {\r\n\t\t\t\tif (eq0(edge.a.lengthXY()) && eq0(edge.b.lengthXY())) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let r = 0; r < count; r++) {\r\n\t\t\t\tconst rpp = (r + 1) % (count + 1)\r\n\t\t\t\tconst faceEdges = [\r\n\t\t\t\t\tribs[r][i].flipped(),\r\n\t\t\t\t\thorizontalEdges[r][i],\r\n\t\t\t\t\tribs[rpp][i],\r\n\t\t\t\t\thorizontalEdges[r][ipp] && horizontalEdges[r][ipp]!.flipped(),\r\n\t\t\t\t].filter(x => x)\r\n\t\t\t\tlet surface\r\n\t\t\t\tif (edge instanceof StraightEdge) {\r\n\t\t\t\t\tsurface = new PlaneSurface(P3.throughPoints(faceEdges[0].a, faceEdges[1].a, faceEdges[2].a))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst maxX = edges[i].getAABB().max.x\r\n\t\t\t\t\tconst phi = angles[r],\r\n\t\t\t\t\t\tprevPhi = 0 == r ? 0 : angles[r - 1]\r\n\t\t\t\t\tconst offset = V3.polar(maxX, prevPhi).to(V3.polar(maxX, phi))\r\n\t\t\t\t\tsurface = projectCurve(ribs[r][i].curve, offset, false)\r\n\t\t\t\t}\r\n\t\t\t\tfaces.push(Face.create(surface, faceEdges))\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (open) {\r\n\t\t\tconst endFaceEdges = ribs[count].map(edge => edge.flipped()).reverse()\r\n\t\t\tconst endFace = new PlaneFace(new PlaneSurface(P3.ZX.rotateZ(angles.last)), endFaceEdges)\r\n\t\t\tfaces.push(new PlaneFace(new PlaneSurface(P3.ZX.flipped()), edges), endFace)\r\n\t\t}\r\n\t\treturn new BRep(faces, new PlaneSurface(P3.ZX).edgeLoopCCW(edges))\r\n\t}\r\n\r\n\texport function fixEdges(edges: Edge[]): Edge[] {\r\n\t\treturn edges.flatMap(edge => {\r\n\t\t\tconst c = edge.curve\r\n\t\t\tif (c instanceof SemiEllipseCurve && c.tMin === -PI && c.tMax === PI) {\r\n\t\t\t\tconst splitEdges = edge.minT < 0 && edge.maxT > 0 ? edge.split(0) : [edge]\r\n\t\t\t\treturn splitEdges.map(edge => {\r\n\t\t\t\t\tif (edge.minT >= 0) {\r\n\t\t\t\t\t\treturn Edge.create(\r\n\t\t\t\t\t\t\tnew SemiEllipseCurve(c.center, c.f1, c.f2, max(0, c.tMin), c.tMax),\r\n\t\t\t\t\t\t\tedge.a,\r\n\t\t\t\t\t\t\tedge.b,\r\n\t\t\t\t\t\t\tedge.aT,\r\n\t\t\t\t\t\t\tedge.bT,\r\n\t\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\t\tedge.aDir,\r\n\t\t\t\t\t\t\tedge.bDir,\r\n\t\t\t\t\t\t\tedge.name,\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// \"rotate\" the curve\r\n\t\t\t\t\t\treturn Edge.create(\r\n\t\t\t\t\t\t\tnew SemiEllipseCurve(\r\n\t\t\t\t\t\t\t\tc.center,\r\n\t\t\t\t\t\t\t\tc.f1.negated(),\r\n\t\t\t\t\t\t\t\tc.f2.negated(),\r\n\t\t\t\t\t\t\t\tc.tMin + PI,\r\n\t\t\t\t\t\t\t\tmin(PI, c.tMax + PI),\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\tedge.a,\r\n\t\t\t\t\t\t\tedge.b,\r\n\t\t\t\t\t\t\tedge.aT + PI,\r\n\t\t\t\t\t\t\tedge.bT + PI,\r\n\t\t\t\t\t\t\tundefined,\r\n\t\t\t\t\t\t\tedge.aDir,\r\n\t\t\t\t\t\t\tedge.bDir,\r\n\t\t\t\t\t\t\tedge.name,\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (c instanceof BezierCurve) {\r\n\t\t\t\tif (edge.a.like(edge.b)) {\r\n\t\t\t\t\treturn edge.split(lerp(edge.aT, edge.bT, 0.5))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn edge\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Create a [BRep] by projecting edges created by joining vertices with straight edges.\r\n\t * @param baseVertices\r\n\t * @param baseFacePlane\r\n\t * @param offset\r\n\t * @param name\r\n\t * @param generator\r\n\t */\r\n\texport function extrudeVertices(\r\n\t\tbaseVertices: V3[],\r\n\t\tbaseFacePlane: P3,\r\n\t\toffset: V3,\r\n\t\tname?: string,\r\n\t\tgenerator?: string,\r\n\t) {\r\n\t\tassert(baseVertices.every(v => v instanceof V3), 'baseVertices.every(v => v instanceof V3)')\r\n\t\tassertInst(P3, baseFacePlane)\r\n\t\tassertVectors(offset)\r\n\t\tif (baseFacePlane.normal1.dot(offset) > 0) baseFacePlane = baseFacePlane.flipped()\r\n\t\tconst edges = StraightEdge.chain(baseVertices, true)\r\n\t\tgenerator = generator || callsce('B2T.extrudeVertices', baseVertices, baseFacePlane, offset, name)\r\n\t\treturn B2T.extrudeEdges(edges, baseFacePlane, offset, name, generator)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a tetrahedron (3 sided pyramid) [BRep].\r\n\t * `a`, `b`, `c` and `d` can be in any order. The only constraint is that they cannot be on a common plane.\r\n\t * The resulting tetrahedron will always have outwards facing faces.\r\n\t * @param a\r\n\t * @param b\r\n\t * @param c\r\n\t * @param d\r\n\t * @param name\r\n\t */\r\n\texport function tetrahedron(a: V3, b: V3, c: V3, d: V3, name: string = 'tetra' + getGlobalId()): BRep {\r\n\t\tassertVectors(a, b, c, d)\r\n\t\tconst dDistance = P3.throughPoints(a, b, c).distanceToPointSigned(d)\r\n\t\tif (eq0(dDistance)) {\r\n\t\t\tthrow new Error('four points are coplanar')\r\n\t\t}\r\n\t\tif (dDistance > 0) {\r\n\t\t\t;[c, d] = [d, c]\r\n\t\t}\r\n\t\tconst ab = StraightEdge.throughPoints(a, b)\r\n\t\tconst ac = StraightEdge.throughPoints(a, c)\r\n\t\tconst ad = StraightEdge.throughPoints(a, d)\r\n\t\tconst bc = StraightEdge.throughPoints(b, c)\r\n\t\tconst bd = StraightEdge.throughPoints(b, d)\r\n\t\tconst cd = StraightEdge.throughPoints(c, d)\r\n\t\tconst faces = [\r\n\t\t\tnew PlaneFace(PlaneSurface.throughPoints(a, b, c), [ab, bc, ac.flipped()], [], name + 'abc'),\r\n\t\t\tnew PlaneFace(PlaneSurface.throughPoints(a, d, b), [ad, bd.flipped(), ab.flipped()], [], name + 'adb'),\r\n\t\t\tnew PlaneFace(PlaneSurface.throughPoints(b, d, c), [bd, cd.flipped(), bc.flipped()], [], name + 'bdc'),\r\n\t\t\tnew PlaneFace(PlaneSurface.throughPoints(c, d, a), [cd, ad.flipped(), ac], [], name + 'cda'),\r\n\t\t]\r\n\t\tconst gen = callsce('B2T.tetrahedron', a, b, c, d)\r\n\t\treturn new BRep(faces, false, gen)\r\n\t}\r\n\r\n\tconst b = 1 / GOLDEN_RATIO,\r\n\t\tc = 2 - GOLDEN_RATIO\r\n\texport const TETRAHEDRON_VERTICES = [\r\n\t\tnew V3(1, 0, -1 / Math.sqrt(2)),\r\n\t\tnew V3(-1, 0, -1 / Math.sqrt(2)),\r\n\t\tnew V3(0, -1, 1 / Math.sqrt(2)),\r\n\t\tnew V3(0, 1, 1 / Math.sqrt(2)),\r\n\t].map(v => v.unit())\r\n\texport const DODECAHEDRON_VERTICES = [\r\n\t\tnew V3(c, 0, 1),\r\n\t\tnew V3(-c, 0, 1),\r\n\t\tnew V3(-b, b, b),\r\n\t\tnew V3(0, 1, c),\r\n\t\tnew V3(b, b, b),\r\n\t\tnew V3(b, -b, b),\r\n\t\tnew V3(0, -1, c),\r\n\t\tnew V3(-b, -b, b),\r\n\t\tnew V3(c, 0, -1),\r\n\t\tnew V3(-c, 0, -1),\r\n\t\tnew V3(-b, -b, -b),\r\n\t\tnew V3(0, -1, -c),\r\n\t\tnew V3(b, -b, -b),\r\n\t\tnew V3(b, b, -b),\r\n\t\tnew V3(0, 1, -c),\r\n\t\tnew V3(-b, b, -b),\r\n\t\tnew V3(1, c, 0),\r\n\t\tnew V3(-1, c, 0),\r\n\t\tnew V3(-1, -c, 0),\r\n\t\tnew V3(1, -c, 0),\r\n\t].map(v => v.unit())\r\n\texport const DODECAHEDRON_FACE_VERTICES = [\r\n\t\t[4, 3, 2, 1, 0],\r\n\t\t[7, 6, 5, 0, 1],\r\n\t\t[12, 11, 10, 9, 8],\r\n\t\t[15, 14, 13, 8, 9],\r\n\t\t[14, 3, 4, 16, 13],\r\n\t\t[3, 14, 15, 17, 2],\r\n\t\t[11, 6, 7, 18, 10],\r\n\t\t[6, 11, 12, 19, 5],\r\n\t\t[4, 0, 5, 19, 16],\r\n\t\t[12, 8, 13, 16, 19],\r\n\t\t[15, 9, 10, 18, 17],\r\n\t\t[7, 1, 2, 17, 18],\r\n\t]\r\n\r\n\texport const OCTAHEDRON_VERTICES = [\r\n\t\tnew V3(1, 0, 0),\r\n\t\tnew V3(-1, 0, 0),\r\n\t\tnew V3(0, 1, 0),\r\n\t\tnew V3(0, -1, 0),\r\n\t\tnew V3(0, 0, 1),\r\n\t\tnew V3(0, 0, -1),\r\n\t]\r\n\texport const OCTAHEDRON_FACE_VERTICES = [\r\n\t\t[0, 2, 4],\r\n\t\t[2, 1, 4],\r\n\t\t[1, 3, 4],\r\n\t\t[3, 0, 4],\r\n\r\n\t\t[2, 0, 5],\r\n\t\t[1, 2, 5],\r\n\t\t[3, 1, 5],\r\n\t\t[0, 3, 5],\r\n\t]\r\n\r\n\tconst { x: s, y: t } = new V3(1, GOLDEN_RATIO, 0).unit()\r\n\texport const ISOCAHEDRON_VERTICES = [\r\n\t\tnew V3(-s, t, 0),\r\n\t\tnew V3(s, t, 0),\r\n\t\tnew V3(-s, -t, 0),\r\n\t\tnew V3(s, -t, 0),\r\n\r\n\t\tnew V3(0, -s, t),\r\n\t\tnew V3(0, s, t),\r\n\t\tnew V3(0, -s, -t),\r\n\t\tnew V3(0, s, -t),\r\n\r\n\t\tnew V3(t, 0, -s),\r\n\t\tnew V3(t, 0, s),\r\n\t\tnew V3(-t, 0, -s),\r\n\t\tnew V3(-t, 0, s),\r\n\t]\r\n\texport const ISOCAHEDRON_FACE_VERTICES = [\r\n\t\t// 5 faces around point 0\r\n\t\t[0, 11, 5],\r\n\t\t[0, 5, 1],\r\n\t\t[0, 1, 7],\r\n\t\t[0, 7, 10],\r\n\t\t[0, 10, 11],\r\n\r\n\t\t// 5 adjacent faces\r\n\t\t[1, 5, 9],\r\n\t\t[5, 11, 4],\r\n\t\t[11, 10, 2],\r\n\t\t[10, 7, 6],\r\n\t\t[7, 1, 8],\r\n\r\n\t\t// 5 faces around point 3\r\n\t\t[3, 9, 4],\r\n\t\t[3, 4, 2],\r\n\t\t[3, 2, 6],\r\n\t\t[3, 6, 8],\r\n\t\t[3, 8, 9],\r\n\r\n\t\t// 5 adjacent faces\r\n\t\t[4, 9, 5],\r\n\t\t[2, 4, 11],\r\n\t\t[6, 2, 10],\r\n\t\t[8, 6, 7],\r\n\t\t[9, 8, 1],\r\n\t]\r\n\r\n\t/**\r\n\t * Create a dodecahedron [BRep]. The vertices are on the unit sphere.\r\n\t */\r\n\texport function dodecahedron() {\r\n\t\treturn makePlatonic(DODECAHEDRON_VERTICES, DODECAHEDRON_FACE_VERTICES, 'B2T.dodecahedron()')\r\n\t}\r\n\r\n\t/**\r\n\t * Create an octahedron [BRep]. The vertices are on the unit sphere.\r\n\t */\r\n\texport function octahedron() {\r\n\t\treturn makePlatonic(OCTAHEDRON_VERTICES, OCTAHEDRON_FACE_VERTICES, 'B2T.octahedron()')\r\n\t}\r\n\r\n\t/**\r\n\t * Create an isocahedron [BRep]. The vertices are on the unit sphere.\r\n\t */\r\n\texport function isocahedron() {\r\n\t\treturn makePlatonic(ISOCAHEDRON_VERTICES, ISOCAHEDRON_FACE_VERTICES, 'B2T.octahedron()')\r\n\t}\r\n\r\n\tfunction makePlatonic(VS: V3[], FVIS: int[][], generator: string) {\r\n\t\tconst edgeMap = new Map()\r\n\t\tconst faces = FVIS.map(faceIndexes => {\r\n\t\t\tconst surface = PlaneSurface.throughPoints(VS[faceIndexes[0]], VS[faceIndexes[1]], VS[faceIndexes[2]])\r\n\t\t\tconst contour = arrayFromFunction(faceIndexes.length, i => {\r\n\t\t\t\tconst ipp = (i + 1) % faceIndexes.length\r\n\t\t\t\tconst iA = faceIndexes[i],\r\n\t\t\t\t\tiB = faceIndexes[ipp]\r\n\t\t\t\tconst iMin = min(iA, iB),\r\n\t\t\t\t\tiMax = max(iA, iB),\r\n\t\t\t\t\tedgeID = iMin * VS.length + iMax\r\n\t\t\t\tlet edge = edgeMap.get(edgeID)\r\n\t\t\t\t!edge && edgeMap.set(edgeID, (edge = StraightEdge.throughPoints(VS[iMin], VS[iMax])))\r\n\t\t\t\treturn iA < iB ? edge : edge.flipped()\r\n\t\t\t})\r\n\t\t\treturn new PlaneFace(surface, contour)\r\n\t\t})\r\n\t\treturn new BRep(faces, false, generator)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a [BRep] by projecting a number of edges onto a point.\r\n\t * @param baseEdges The edges forming the base of the pyramid.\r\n\t * @param apex The tip of the pyramid.\r\n\t * @param name\r\n\t */\r\n\texport function pyramidEdges(baseEdges: Edge[], apex: V3, name: string = 'pyramid' + getGlobalId()): BRep {\r\n\t\tassertInst(Edge, ...baseEdges)\r\n\t\tassertVectors(apex)\r\n\r\n\t\tconst ribs = baseEdges.map(baseEdge => StraightEdge.throughPoints(apex, baseEdge.a))\r\n\t\tconst faces = baseEdges.map((baseEdge, i) => {\r\n\t\t\tconst faceName = name + 'Wall' + i\r\n\t\t\tconst ipp = (i + 1) % baseEdges.length\r\n\t\t\tconst faceEdges = [ribs[i], baseEdge, ribs[ipp].flipped()]\r\n\t\t\tconst surface = projectPointCurve(baseEdge.curve, baseEdge.minT, baseEdge.maxT, apex, baseEdge.deltaT() < 0)\r\n\t\t\treturn Face.create(surface, faceEdges, undefined, faceName)\r\n\t\t})\r\n\t\tconst baseSurface = new PlaneSurface(P3.XY).flipped()\r\n\t\tconst bottomFace = Face.create(baseSurface, Edge.reversePath(baseEdges))\r\n\t\tfaces.push(bottomFace)\r\n\t\tconst generator = callsce('B2T.pyramidEdges', baseEdges, apex, name)\r\n\t\treturn new BRep(faces, false, generator)\r\n\t}\r\n}\r\n","import { V3 } from 'ts3dutils'\r\n\r\nimport chroma from 'chroma-js'\r\nimport { GL_COLOR } from 'tsgl'\r\nimport { getGlobalId, L3, P3, PlaneSurface } from './index'\r\n\r\nexport class CustomPlane extends P3 {\r\n\treadonly up: V3\r\n\treadonly right: V3\r\n\treadonly tMin: number\r\n\treadonly tMax: number\r\n\treadonly sMin: number\r\n\treadonly sMax: number\r\n\treadonly color: GL_COLOR\r\n\treadonly name: string\r\n\r\n\tconstructor(\r\n\t\tanchor: V3,\r\n\t\tright: V3,\r\n\t\tup: V3,\r\n\t\tname: string = 'CustomPlane' + getGlobalId(),\r\n\t\tcolor: GL_COLOR = chroma.random().gl(),\r\n\t\trightStart: number = -500,\r\n\t\trightEnd: number = 500,\r\n\t\tupStart: number = -500,\r\n\t\tupEnd: number = 500,\r\n\t) {\r\n\t\tconst { normal1, w } = P3.forAnchorAndPlaneVectors(anchor, right, up)\r\n\t\tsuper(normal1, w)\r\n\t\tthis.up = up\r\n\t\tthis.right = right\r\n\t\tthis.sMin = rightStart\r\n\t\tthis.sMax = rightEnd\r\n\t\tthis.tMin = upStart\r\n\t\tthis.tMax = upEnd\r\n\t\tthis.name = name\r\n\t\tthis.color = color\r\n\t}\r\n\r\n\tget plane() {\r\n\t\treturn this\r\n\t}\r\n\r\n\ttoPlaneSurface() {\r\n\t\treturn new PlaneSurface(this, this.right, this.up)\r\n\t}\r\n\r\n\tstatic forPlane(plane: P3, color: GL_COLOR, name?: string) {\r\n\t\t//assert(!name)\r\n\t\tconst up = plane.normal1.getPerpendicular().unit(),\r\n\t\t\tright = up.cross(plane.normal1)\r\n\t\treturn new CustomPlane(plane.anchor, right, up, name, color)\r\n\t}\r\n\r\n\tstatic fromPlaneSurface(surface: PlaneSurface) {\r\n\t\treturn new CustomPlane(surface.plane.anchor, surface.right, surface.up, 'genCustomPlane' + getGlobalId())\r\n\t}\r\n\r\n\tdistanceTo(line: L3, mindist: number) {\r\n\t\treturn [\r\n\t\t\tnew L3(this.anchor.plus(this.right.times(this.sMin)), this.up),\r\n\t\t\tnew L3(this.anchor.plus(this.right.times(this.sMax)), this.up),\r\n\t\t\tnew L3(this.anchor.plus(this.up.times(this.tMin)), this.right),\r\n\t\t\tnew L3(this.anchor.plus(this.up.times(this.tMax)), this.right),\r\n\t\t]\r\n\t\t\t.map((line2, line2Index): number => {\r\n\t\t\t\tconst info = line2.infoClosestToLine(line)\r\n\t\t\t\tif (\r\n\t\t\t\t\t(isNaN(info.t) || // parallel LINES\r\n\t\t\t\t\t\t(line2Index < 2 && this.tMin <= info.t && info.t <= this.tMax) ||\r\n\t\t\t\t\t\t(line2Index >= 2 && this.sMin <= info.t && info.t <= this.sMax)) &&\r\n\t\t\t\t\tinfo.distance <= mindist\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn info.s\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Infinity\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.min()\r\n\t}\r\n\r\n\tdistanceTo2(line: L3, mindist: number) {\r\n\t\treturn [\r\n\t\t\tnew L3(this.anchor.plus(this.right.times(this.sMin)), this.up),\r\n\t\t\tnew L3(this.anchor.plus(this.right.times(this.sMax)), this.up),\r\n\t\t\tnew L3(this.anchor.plus(this.up.times(this.tMin)), this.right),\r\n\t\t\tnew L3(this.anchor.plus(this.up.times(this.tMax)), this.right),\r\n\t\t]\r\n\t\t\t.map((line2, line2Index) => {\r\n\t\t\t\tconst info = line2.infoClosestToLine(line)\r\n\t\t\t\tif (\r\n\t\t\t\t\t(isNaN(info.t) || // parallel LINES\r\n\t\t\t\t\t\t(line2Index < 2 && this.tMin <= info.t && info.t <= this.tMax) ||\r\n\t\t\t\t\t\t(line2Index >= 2 && this.sMin <= info.t && info.t <= this.sMax)) &&\r\n\t\t\t\t\tinfo.distance <= mindist\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn info.distance\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Infinity\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.min()\r\n\t}\r\n}\r\n","import { SVGPathData } from 'svg-pathdata'\nimport {\n\tAABB,\n\tarrayFromFunction,\n\tarrayRange,\n\tassert,\n\tassertf,\n\tassertInst,\n\tassertNumbers,\n\tassertVectors,\n\tcallsce,\n\tclamp,\n\tDEG,\n\teq,\n\teq0,\n\tfuzzyBetween,\n\tgetIntervals,\n\tint,\n\tle,\n\tlt,\n\tM4,\n\tMINUS,\n\tmod,\n\tnewtonIterate,\n\tNLA_PRECISION,\n\tsnap2,\n\tTAU,\n\tTransformable,\n\tTuple3,\n\tV,\n\tV3,\n} from 'ts3dutils'\n\nimport { BezierCurve, Curve, L3, P3, ParabolaCurve, PICurve, PlaneSurface, SemiEllipseCurve, Surface } from './index'\n\nimport { abs, ceil, floor, PI, sign } from './math'\n\nexport interface Edge {\n\treadonly aDir: V3\n\treadonly bDir: V3\n}\nexport abstract class Edge extends Transformable {\n\treadonly reversed: boolean\n\n\tconstructor(\n\t\treadonly curve: Curve,\n\t\treadonly a: V3,\n\t\treadonly b: V3,\n\t\treadonly aT: number,\n\t\treadonly bT: number,\n\t\tpublic flippedOf?: Edge | undefined,\n\t\treadonly name?: string,\n\t) {\n\t\tsuper()\n\t\tassertNumbers(aT, bT)\n\t\tassert(!eq(aT, bT))\n\t\tassertVectors(a, b)\n\t\tassertf(() => curve instanceof Curve, curve)\n\t\tassertf(() => !curve.isValidT || (curve.isValidT(aT) && curve.isValidT(bT)), aT, bT, curve)\n\t\t//if (curve instanceof PICurve) {\n\t\t//    assertf(() => curve.at(aT).to(a).length() < 0.1, ''+curve.at(aT)+a)\n\t\t//    assertf(() => curve.at(bT).to(b).length() < 0.1, '' + curve.at(bT) + b)\n\t\t//} else {\n\t\tassertf(() => curve.at(aT).like(a), () => '' + curve.at(aT) + a + ' aT should have been ' + curve.pointT(a))\n\t\tassertf(() => curve.at(bT).like(b), () => '' + curve.at(bT) + b + ' bT should have been ' + curve.pointT(b))\n\t\t//}\n\t\tassertf(() => fuzzyBetween(aT, curve.tMin, curve.tMax), aT, curve.tMin, curve.tMax)\n\t\tassertf(() => fuzzyBetween(bT, curve.tMin, curve.tMax), bT, curve.tMin, curve.tMax)\n\t\tthis.aT = clamp(aT, curve.tMin, curve.tMax)\n\t\tthis.bT = clamp(bT, curve.tMin, curve.tMax)\n\t\tthis.reversed = this.aT > this.bT\n\t}\n\n\tget minT() {\n\t\treturn Math.min(this.aT, this.bT)\n\t}\n\n\tget maxT() {\n\t\treturn Math.max(this.aT, this.bT)\n\t}\n\n\tstatic forCurveAndTs(curve: Curve, aT: number = curve.tMin, bT: number = curve.tMax): Edge {\n\t\treturn Edge.create(\n\t\t\tcurve,\n\t\t\tcurve.at(aT),\n\t\t\tcurve.at(bT),\n\t\t\taT,\n\t\t\tbT,\n\t\t\tundefined,\n\t\t\taT < bT ? curve.tangentAt(aT) : curve.tangentAt(aT).negated(),\n\t\t\taT < bT ? curve.tangentAt(bT) : curve.tangentAt(bT).negated(),\n\t\t)\n\t}\n\n\tstatic create(\n\t\tcurve: Curve,\n\t\ta: V3,\n\t\tb: V3,\n\t\taT: number,\n\t\tbT: number,\n\t\tflippedOf: Edge | undefined,\n\t\taDir: V3,\n\t\tbDir: V3,\n\t\tname?: string,\n\t): Edge {\n\t\tif (curve instanceof L3) {\n\t\t\treturn new StraightEdge(curve, a, b, aT, bT, flippedOf as StraightEdge, name)\n\t\t} else {\n\t\t\treturn new PCurveEdge(curve, a, b, aT, bT, flippedOf as PCurveEdge, aDir, bDir, name)\n\t\t}\n\t}\n\n\tstatic isLoop(loop: Edge[]): boolean {\n\t\treturn loop.every((edge, i) => edge.b.like(loop[(i + 1) % loop.length].a))\n\t}\n\n\tstatic edgesIntersect(e1: Edge, e2: Edge) {\n\t\t// TODO: still getting some NaNs here..\n\t\tassertNumbers(e1.curve.hlol, e2.curve.hlol)\n\t\tassertInst(Edge, e1, e2)\n\t\tif (e1.curve.hlol < e2.curve.hlol) {\n\t\t\t;[e2, e1] = [e1, e2]\n\t\t}\n\t\tconst sts = e1.curve.isInfosWithCurve(e2.curve)\n\t\tif (sts.some(info => isNaN(info.tThis) || isNaN(info.tOther))) {\n\t\t\tconsole.log(e1.sce)\n\t\t\tconsole.log(e2.sce)\n\t\t\tassert(false)\n\t\t}\n\t\treturn sts.some(\n\t\t\t/// (  e1.aT < tThis < e1.bT  )  &&  (  e2.aT < tOther < e2.bT  )\n\t\t\t({ tThis, tOther }) => {\n\t\t\t\treturn e1.tValueInside(tThis) && e2.tValueInside(tOther)\n\t\t\t},\n\t\t)\n\t}\n\n\tstatic assertLoop(edges: Edge[]): void {\n\t\tedges.forEach((edge, i) => {\n\t\t\tconst j = (i + 1) % edges.length\n\t\t\tassert(edge.b.like(edges[j].a), `edges[${i}].b != edges[${j}].a (${edges[i].b.sce} != ${edges[j].a.sce})`)\n\t\t})\n\t}\n\n\tstatic ngon(n: int = 3, radius: number = 1): Edge[] {\n\t\treturn StraightEdge.chain(arrayFromFunction(n, i => V3.polar(radius, TAU * i / n)))\n\t}\n\n\tstatic star(pointCount: int = 5, r0: number = 1, r1: number = 0.5): Edge[] {\n\t\tconst vertices = arrayFromFunction(pointCount * 2, i =>\n\t\t\tV3.polar(0 == i % 2 ? r0 : r1, TAU * i / pointCount / 2),\n\t\t)\n\t\treturn StraightEdge.chain(vertices)\n\t}\n\n\tstatic reversePath(path: Edge[], doReverse: boolean = true): Edge[] {\n\t\treturn doReverse ? arrayFromFunction(path.length, i => path[path.length - 1 - i].flipped()) : path\n\t}\n\n\t/**\n\t * Create an axis-aligned rectangle of edges on the XY-plane with the bottom-left corner on the origin.\n\t * @param width\n\t * @param height\n\t */\n\tstatic rect(width: number = 1, height: number = width): Edge[] {\n\t\tconst vertices = [new V3(0, 0, 0), new V3(width, 0, 0), new V3(width, height, 0), new V3(0, height, 0)]\n\t\treturn StraightEdge.chain(vertices)\n\t}\n\n\tstatic reuleaux(n: int = 3, radius: number = 1): Edge[] {\n\t\tassert(3 <= n)\n\t\tassert(1 == n % 2)\n\t\tconst corners = arrayFromFunction(n, i => V3.polar(radius, TAU * i / n))\n\t\treturn arrayFromFunction(n, i => {\n\t\t\tconst aI = (i + floor(n / 2)) % n,\n\t\t\t\tbI = (i + ceil(n / 2)) % n\n\t\t\tconst a = corners[aI],\n\t\t\t\tb = corners[bI]\n\t\t\tconst center = corners[i]\n\t\t\tconst f1 = center.to(a),\n\t\t\t\tcurve = new SemiEllipseCurve(center, f1, V3.Z.cross(f1))\n\t\t\treturn Edge.create(curve, a, b, 0, curve.pointT(b), undefined, V3.Z.cross(f1), V3.Z.cross(center.to(b)))\n\t\t})\n\t}\n\n\tstatic round(edges: Edge[], radius: number) {\n\t\tif (eq0(radius)) {\n\t\t\treturn edges\n\t\t}\n\t\tconst corners = edges.map((edge, i) => {\n\t\t\tconst j = (i + 1) % edges.length,\n\t\t\t\tnextEdge = edges[j]\n\t\t\tif (!edge.b.like(nextEdge.a)) return undefined\n\t\t\tconst angleToNext = edge.bDir.angleTo(nextEdge.aDir)\n\t\t\tconst c1 = edge.curve,\n\t\t\t\tc2 = nextEdge.curve\n\t\t\tif (c1 instanceof L3 && c2 instanceof L3) {\n\t\t\t\tconst normal = c1.dir1.cross(c2.dir1)\n\t\t\t\tif (eq0(angleToNext)) return undefined\n\n\t\t\t\tconst l1inside = normal.cross(c1.dir1),\n\t\t\t\t\tl2inside = normal.cross(c2.dir1)\n\t\t\t\tconst l1offset = c1.transform(M4.translate(l1inside.toLength(radius)))\n\t\t\t\tconst l2offset = c2.transform(M4.translate(l2inside.toLength(radius)))\n\t\t\t\tconst center = l1offset.isInfoWithLine(l2offset)\n\t\t\t\tif (!center) throw new Error('tangential curves')\n\t\t\t\tconst cornerA = center.plus(l1inside.toLength(-radius))\n\t\t\t\tconst cornerB = center.plus(l2inside.toLength(-radius))\n\t\t\t\tconst f1 = l1inside.toLength(-radius)\n\t\t\t\tconst curve = new SemiEllipseCurve(center, f1, normal.cross(f1).toLength(radius))\n\t\t\t\tconst cornerEdge = Edge.create(\n\t\t\t\t\tcurve,\n\t\t\t\t\tcornerA,\n\t\t\t\t\tcornerB,\n\t\t\t\t\t0,\n\t\t\t\t\tcurve.pointT(cornerB),\n\t\t\t\t\tundefined,\n\t\t\t\t\tc1.dir1,\n\t\t\t\t\tc2.dir1,\n\t\t\t\t)\n\t\t\t\treturn cornerEdge\n\t\t\t} else {\n\t\t\t\treturn Edge.arbitraryCorner(edge, nextEdge, radius)\n\t\t\t}\n\t\t})\n\t\tconst result = edges.flatMap((edge, i) => {\n\t\t\tconst h = (i + edges.length - 1) % edges.length\n\t\t\tconst prevCorner = corners[h],\n\t\t\t\tnextCorner = corners[i]\n\t\t\tif (!prevCorner && !nextCorner) {\n\t\t\t\treturn edge\n\t\t\t}\n\t\t\tconst [aT, a, aDir] = !prevCorner\n\t\t\t\t? [edge.aT, edge.a, edge.aDir]\n\t\t\t\t: [edge.curve.pointT(prevCorner.b), prevCorner.b, prevCorner.bDir]\n\t\t\tconst [bT, b, bDir] = !nextCorner\n\t\t\t\t? [edge.bT, edge.b, edge.bDir]\n\t\t\t\t: [edge.curve.pointT(nextCorner.a), nextCorner.a, nextCorner.aDir]\n\t\t\tconst newEdge = Edge.create(edge.curve, a, b, aT, bT, undefined, aDir, bDir)\n\t\t\treturn !nextCorner ? newEdge : [newEdge, nextCorner]\n\t\t})\n\t\treturn result\n\t}\n\n\tstatic arbitraryCorner(e1: Edge, e2: Edge, radius: number) {\n\t\tconst c1 = e1.curve,\n\t\t\tc2 = e2.curve\n\n\t\tfunction f([t1, t2]: number[]) {\n\t\t\tconst p1 = c1.at(t1),\n\t\t\t\tp2 = c2.at(t2)\n\t\t\tconst dp1 = c1.tangentAt(t1),\n\t\t\t\tdp2 = c2.tangentAt(t2)\n\t\t\tconst virtualPlaneNormal = dp1.cross(dp2)\n\t\t\tconst normal1 = virtualPlaneNormal.cross(dp1).unit(),\n\t\t\t\tnormal2 = virtualPlaneNormal.cross(dp2).unit()\n\t\t\tconst dirCross = normal1.cross(normal2)\n\t\t\tif (virtualPlaneNormal.likeO()) {\n\t\t\t\tassert(false)\n\t\t\t} // lines parallel\n\t\t\tconst p1p2 = p1.to(p2)\n\t\t\t// check if distance is zero (see also L3.distanceToLine)\n\t\t\tif (!eq0(p1p2.dot(virtualPlaneNormal))) {\n\t\t\t\tassert(false)\n\t\t\t}\n\t\t\tconst dist1 = p1p2.cross(normal2).dot(dirCross) / dirCross.squared()\n\t\t\tconst dist2 = p1p2.cross(normal1).dot(dirCross) / dirCross.squared()\n\t\t\tconst g1 = p1.plus(normal1.times(dist1))\n\t\t\tconst g2 = p2.plus(normal2.times(dist2))\n\t\t\tassert(g1.like(g2))\n\t\t\treturn [abs(dist1) - radius, abs(dist2) - radius]\n\t\t}\n\n\t\tconst startT1 = e1.bT - radius * sign(e1.deltaT()) / e1.bDir.length()\n\t\tconst startT2 = e2.aT + radius * sign(e2.deltaT()) / e2.aDir.length()\n\t\tconst [t1, t2] = newtonIterate(f, [startT1, startT2])\n\t\tconst cornerA = e1.curve.at(t1)\n\t\tconst cornerB = e2.curve.at(t2)\n\t\tconst p1 = c1.at(t1),\n\t\t\tp2 = c2.at(t2)\n\t\tconst dp1 = c1.tangentAt(t1),\n\t\t\tdp2 = c2.tangentAt(t2)\n\t\tconst virtualPlaneNormal = dp1.cross(dp2)\n\t\tconst normal1 = virtualPlaneNormal.cross(dp1).unit(),\n\t\t\tnormal2 = virtualPlaneNormal.cross(dp2).unit()\n\t\tconst f1 = normal1.toLength(-radius)\n\t\tconst center = cornerA.minus(f1)\n\t\tconst curve = new SemiEllipseCurve(center, f1, virtualPlaneNormal.cross(f1).toLength(radius))\n\t\tconst cornerEdge = Edge.create(\n\t\t\tcurve,\n\t\t\tcornerA,\n\t\t\tcornerB,\n\t\t\t0,\n\t\t\tcurve.pointT(cornerB),\n\t\t\tundefined,\n\t\t\tc1.tangentAt(t1),\n\t\t\tc2.tangentAt(t2),\n\t\t)\n\t\treturn cornerEdge\n\t}\n\n\tstatic pathFromSVG(pathString: string): Edge[] {\n\t\tlet currentPos: V3 = undefined!\n\t\tconst parsed: any[] = new SVGPathData(pathString)\n\t\t\t.toAbs()\n\t\t\t.normalizeHVZ()\n\t\t\t.sanitize(NLA_PRECISION)\n\t\t\t.annotateArcs().commands\n\t\tconst path: Edge[] = []\n\t\tfor (const c of parsed) {\n\t\t\tassert('x' in c && 'y' in c)\n\t\t\tconst endPos = new V3(c.x, c.y, 0)\n\t\t\tswitch (c.type) {\n\t\t\t\tcase SVGPathData.LINE_TO:\n\t\t\t\t\tpath.push(StraightEdge.throughPoints(currentPos, endPos))\n\t\t\t\t\tbreak\n\t\t\t\tcase SVGPathData.CURVE_TO: {\n\t\t\t\t\tconst c1 = new V3(c.x1, c.y1, 0)\n\t\t\t\t\tconst c2 = new V3(c.x2, c.y2, 0)\n\t\t\t\t\tconst curve = new BezierCurve(currentPos, c1, c2, endPos, 0, 1)\n\t\t\t\t\tconst edge = new PCurveEdge(\n\t\t\t\t\t\tcurve,\n\t\t\t\t\t\tcurrentPos,\n\t\t\t\t\t\tendPos,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tcurve.tangentAt(0),\n\t\t\t\t\t\tcurve.tangentAt(1),\n\t\t\t\t\t)\n\t\t\t\t\tpath.push(edge)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase SVGPathData.QUAD_TO: {\n\t\t\t\t\tconst c1 = new V3(c.x1, c.y1, 0)\n\t\t\t\t\tconst curve = ParabolaCurve.quadratic(currentPos, c1, endPos).rightAngled()\n\t\t\t\t\tconst edge = new PCurveEdge(\n\t\t\t\t\t\tcurve,\n\t\t\t\t\t\tcurrentPos,\n\t\t\t\t\t\tendPos,\n\t\t\t\t\t\tcurve.tMin,\n\t\t\t\t\t\tcurve.tMax,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tcurve.tangentAt(curve.tMin),\n\t\t\t\t\t\tcurve.tangentAt(curve.tMax),\n\t\t\t\t\t)\n\t\t\t\t\tpath.push(edge)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase SVGPathData.ARC: {\n\t\t\t\t\tconst phi1 = c.phi1 * DEG,\n\t\t\t\t\t\tphi2 = c.phi2 * DEG,\n\t\t\t\t\t\t[phiMin, phiMax] = [phi1, phi2].sort(MINUS)\n\t\t\t\t\tconst stops = arrayRange(-3, 4, 1)\n\t\t\t\t\t\t.map(n => n * PI)\n\t\t\t\t\t\t.filter(stop => phiMin <= stop && stop <= phiMax)\n\t\t\t\t\tconst center = V(c.cX, c.cY)\n\t\t\t\t\tconst f1 = V3.polar(c.rX, c.xRot * DEG)\n\t\t\t\t\tconst f2 = V3.polar(c.rY, c.xRot * DEG + Math.PI / 2)\n\t\t\t\t\tconst edges = getIntervals(stops, phiMin, phiMax).map(([t1, t2]) => {\n\t\t\t\t\t\tconst deltaT = t2 - t1\n\t\t\t\t\t\tconst t1_ = mod(t1, TAU)\n\t\t\t\t\t\tconst t2_ = t1_ + deltaT\n\t\t\t\t\t\tassert(t1_ >= 0 == t2_ >= 0)\n\t\t\t\t\t\tconst gtPI = t1_ > PI || t2_ > PI\n\t\t\t\t\t\tconst aT = gtPI ? t1_ - PI : t1_\n\t\t\t\t\t\tconst bT = gtPI ? t2_ - PI : t2_\n\t\t\t\t\t\tconst curve = new SemiEllipseCurve(center, gtPI ? f1.negated() : f1, gtPI ? f2.negated() : f2)\n\t\t\t\t\t\tconst a = phi1 == t1 ? currentPos : phi2 == t1 ? endPos : curve.at(aT)\n\t\t\t\t\t\tconst b = phi1 == t2 ? currentPos : phi2 == t2 ? endPos : curve.at(bT)\n\t\t\t\t\t\treturn new PCurveEdge(curve, a, b, aT, bT, undefined, curve.tangentAt(aT), curve.tangentAt(bT))\n\t\t\t\t\t})\n\t\t\t\t\tpath.push(...(c.phiDelta > 0 ? edges : Edge.reversePath(edges)))\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentPos = endPos\n\t\t}\n\t\treturn path\n\t}\n\n\tabstract tangentAt(t: number): V3\n\n\ttoString(): string {\n\t\treturn callsce(\n\t\t\t'new ' + this.constructor.name,\n\t\t\tthis.curve,\n\t\t\tthis.a,\n\t\t\tthis.b,\n\t\t\tthis.aT,\n\t\t\tthis.bT,\n\t\t\tundefined,\n\t\t\tthis.aDir,\n\t\t\tthis.bDir,\n\t\t)\n\t}\n\n\tsplit(t: number): [Edge, Edge] {\n\t\tconst p = this.curve.at(t)\n\t\tconst pDir = this.tangentAt(t)\n\t\treturn [\n\t\t\tEdge.create(this.curve, this.a, p, this.aT, t, undefined, this.aDir, pDir, this.name + 'left'),\n\t\t\tEdge.create(this.curve, p, this.b, t, this.bT, undefined, pDir, this.bDir, this.name + 'left'),\n\t\t]\n\t}\n\n\tabstract edgeISTsWithSurface(surface: Surface): number[]\n\n\t/**\n\t * Returns the intersections of the edge with the plane.\n\t * Values are snapped to aT and bT, ie aT === t || !eq(aT, t)\n\t */\n\tabstract edgeISTsWithPlane(plane: P3): number[]\n\n\tcolinearToLine(line: L3): boolean {\n\t\treturn this.curve instanceof L3 && this.curve.isColinearTo(line)\n\t}\n\n\ttValueInside(t: number) {\n\t\treturn this.aT < this.bT ? lt(this.aT, t) && lt(t, this.bT) : lt(this.bT, t) && lt(t, this.aT)\n\t}\n\n\tisValidT(t: number): boolean {\n\t\treturn this.aT < this.bT ? le(this.aT, t) && le(t, this.bT) : le(this.bT, t) && le(t, this.aT)\n\t}\n\n\tclampedT(t: number): number {\n\t\treturn this.aT < this.bT ? clamp(t, this.aT, this.bT) : clamp(t, this.bT, this.aT)\n\t}\n\n\tabstract flipped(): Edge\n\n\t/**\n\t * this is equals-equals. \"isColinearTo\" might make more sense but can't be used, because you can't get a\n\t * consistent hashCode for colinear curves\n\t * @param obj\n\t * @returns\n\t */\n\tequals(obj: any): boolean {\n\t\treturn (\n\t\t\tthis === obj ||\n\t\t\t(this.constructor == obj.constructor &&\n\t\t\t\tthis.a.equals(obj.a) &&\n\t\t\t\tthis.b.equals(obj.b) &&\n\t\t\t\tthis.curve.equals(obj.curve))\n\t\t)\n\t}\n\n\thashCode(): int {\n\t\tlet hashCode = 0\n\t\thashCode = hashCode * 31 + this.a.hashCode()\n\t\thashCode = hashCode * 31 + this.b.hashCode()\n\t\thashCode = hashCode * 31 + this.curve.hashCode()\n\t\treturn hashCode | 0\n\t}\n\n\tlike(edge: Edge) {\n\t\t// TODO this breaks on colinear edges,\n\t\t// TODO: what, where?\n\t\treturn (\n\t\t\tthis === edge ||\n\t\t\t(edge instanceof Edge && this.curve.isColinearTo(edge.curve) && this.a.like(edge.a) && this.b.like(edge.b))\n\t\t)\n\t}\n\n\t/**\n\t * Get edge points, excluding the first one.\n\t */\n\tabstract getVerticesNo0(): V3[]\n\n\tabstract pointsCount(): int\n\n\tisCanon() {\n\t\treturn !this.reversed\n\t}\n\n\tgetCanon() {\n\t\treturn this.reversed ? this.flipped() : this\n\t}\n\n\toverlaps(edge: Edge, noback?: boolean): boolean {\n\t\tassert(this.curve.isColinearTo(edge.curve))\n\t\tconst edgeAT = this.curve.containsPoint(edge.a) && this.curve.pointT(edge.a)\n\t\tconst edgeBT = this.curve.containsPoint(edge.b) && this.curve.pointT(edge.b)\n\t\tif (false === edgeAT && false === edgeBT) {\n\t\t\treturn noback ? false : edge.overlaps(this, true)\n\t\t}\n\t\tconst flipped =\n\t\t\tfalse !== edgeAT ? this.tangentAt(edgeAT).dot(edge.aDir) : this.tangentAt(edge.bT).dot(edge.bDir)\n\t\treturn !(le(edge.maxT, this.minT) || le(this.maxT, edge.minT))\n\t}\n\n\tgetAABB(): AABB {\n\t\tconst min: Tuple3<number> = [Infinity, Infinity, Infinity],\n\t\t\tmax: Tuple3<number> = [-Infinity, -Infinity, -Infinity]\n\t\tthis.curve.roots().forEach((ts, dim) => {\n\t\t\tts.forEach(t => {\n\t\t\t\tif (lt(this.minT, t) && lt(t, this.maxT)) {\n\t\t\t\t\tmin[dim] = Math.min(min[dim], this.curve.at(t).e(dim))\n\t\t\t\t\tmax[dim] = Math.max(max[dim], this.curve.at(t).e(dim))\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\tconst aabb = new AABB(V(min), V(max))\n\t\taabb.addPoint(this.a)\n\t\taabb.addPoint(this.b)\n\t\treturn aabb\n\t}\n\n\tlength(steps: int = 1): number {\n\t\treturn this.curve.arcLength(this.minT, this.maxT, steps)\n\t}\n\n\tabstract isCoEdge(other: Edge): boolean\n\n\tabstract points(): V3[]\n\n\tdeltaT() {\n\t\treturn this.bT - this.aT\n\t}\n\n\tdeltaTSign() {\n\t\treturn sign(this.bT - this.aT) as -1 | 1\n\t}\n\n\tatAvgT() {\n\t\treturn this.curve.at((this.minT + this.maxT) / 2)\n\t}\n\n\t/**\n\t * Whether two edge loops are equal. Takes into account that two loops need not start with the same edge.\n\t * @param loop1\n\t * @param loop2\n\t */\n\tstatic loopsEqual(loop1: Edge[], loop2: Edge[]): boolean {\n\t\treturn (\n\t\t\tloop1.length == loop2.length &&\n\t\t\tarrayRange(0, loop1.length, 1).some(offset =>\n\t\t\t\tloop1.every((edge, i) => edge.equals(loop2[(offset + i) % loop1.length])),\n\t\t\t)\n\t\t)\n\t}\n}\n\nexport class PCurveEdge extends Edge {\n\tconstructor(\n\t\tcurve: Curve,\n\t\ta: V3,\n\t\tb: V3,\n\t\taT: number,\n\t\tbT: number,\n\t\tpublic flippedOf: PCurveEdge | undefined,\n\t\treadonly aDir: V3,\n\t\treadonly bDir: V3,\n\t\tname?: string,\n\t) {\n\t\tsuper(curve, a, b, aT, bT, flippedOf, name)\n\t\tassertVectors(aDir, bDir)\n\t\tassertf(() => !aDir.likeO(), curve)\n\t\tassertf(() => !bDir.likeO(), curve)\n\t\tif (!(curve instanceof PICurve)) {\n\t\t\t// TODO\n\t\t\tassertf(() => curve.tangentAt(aT).likeOrReversed(aDir), '' + aT + curve.tangentAt(aT).sce + ' ' + aDir.sce)\n\t\t\tassertf(() => curve.tangentAt(bT).likeOrReversed(bDir))\n\t\t}\n\t\tassert(\n\t\t\tthis.reversed === this.aDir.dot(curve.tangentAt(aT)) < 0,\n\t\t\taT +\n\t\t\t\t' ' +\n\t\t\t\tbT +\n\t\t\t\t' ' +\n\t\t\t\tcurve.constructor.name +\n\t\t\t\t' ' +\n\t\t\t\tthis.aDir.sce +\n\t\t\t\t' ' +\n\t\t\t\tthis.bDir.sce +\n\t\t\t\t' ' +\n\t\t\t\tcurve.tangentAt(aT),\n\t\t)\n\t\tassert(\n\t\t\tthis.reversed === this.bDir.dot(curve.tangentAt(bT)) < 0,\n\t\t\taT +\n\t\t\t\t' ' +\n\t\t\t\tbT +\n\t\t\t\t' ' +\n\t\t\t\tcurve.constructor.name +\n\t\t\t\t' ' +\n\t\t\t\tthis.aDir.sce +\n\t\t\t\t' ' +\n\t\t\t\tthis.bDir.sce +\n\t\t\t\t' ' +\n\t\t\t\tcurve.tangentAt(aT),\n\t\t)\n\t}\n\n\tstatic forCurveAndTs(curve: Curve, aT: number, bT: number, name?: string) {\n\t\treturn new PCurveEdge(\n\t\t\tcurve,\n\t\t\tcurve.at(aT),\n\t\t\tcurve.at(bT),\n\t\t\taT,\n\t\t\tbT,\n\t\t\tundefined,\n\t\t\taT < bT ? curve.tangentAt(aT) : curve.tangentAt(aT).negated(),\n\t\t\taT < bT ? curve.tangentAt(bT) : curve.tangentAt(bT).negated(),\n\t\t\tname,\n\t\t)\n\t}\n\n\ttoSource(): string {\n\t\treturn callsce(\n\t\t\t'new PCurveEdge',\n\t\t\tthis.curve,\n\t\t\tthis.a,\n\t\t\tthis.b,\n\t\t\tthis.aT,\n\t\t\tthis.bT,\n\t\t\tundefined,\n\t\t\tthis.aDir,\n\t\t\tthis.bDir,\n\t\t\tthis.name,\n\t\t)\n\t}\n\n\tgetVerticesNo0(): V3[] {\n\t\treturn this.curve.calcSegmentPoints(this.aT, this.bT, this.a, this.b, this.reversed, false)\n\t}\n\n\tpointsCount(): int {\n\t\treturn this.points().length\n\t}\n\n\tpoints(): V3[] {\n\t\treturn this.curve.calcSegmentPoints(this.aT, this.bT, this.a, this.b, this.reversed, true)\n\t}\n\n\tedgeISTsWithSurface(surface: Surface): number[] {\n\t\treturn this.curve\n\t\t\t.isTsWithSurface(surface)\n\t\t\t.map(edgeT => snap2(edgeT, this.aT, this.bT))\n\t\t\t.filter(edgeT => this.minT <= edgeT && edgeT <= this.maxT)\n\t}\n\n\tedgeISTsWithPlane(surface: P3): number[] {\n\t\treturn this.curve\n\t\t\t.isTsWithPlane(surface)\n\t\t\t.map(edgeT => snap2(edgeT, this.aT, this.bT))\n\t\t\t.filter(edgeT => this.minT <= edgeT && edgeT <= this.maxT)\n\t}\n\n\ttangentAt(t: number): V3 {\n\t\treturn !this.reversed ? this.curve.tangentAt(t) : this.curve.tangentAt(t).negated()\n\t}\n\n\tflipped(): PCurveEdge {\n\t\treturn (\n\t\t\tthis.flippedOf ||\n\t\t\t(this.flippedOf = new PCurveEdge(\n\t\t\t\tthis.curve,\n\t\t\t\tthis.b,\n\t\t\t\tthis.a,\n\t\t\t\tthis.bT,\n\t\t\t\tthis.aT,\n\t\t\t\tthis,\n\t\t\t\tthis.bDir.negated(),\n\t\t\t\tthis.aDir.negated(),\n\t\t\t\tthis.name,\n\t\t\t))\n\t\t)\n\t}\n\n\ttransform(m4: M4, desc?: string): this {\n\t\treturn new PCurveEdge(\n\t\t\tthis.curve.transform(m4),\n\t\t\tm4.transformPoint(this.a),\n\t\t\tm4.transformPoint(this.b),\n\t\t\tthis.aT,\n\t\t\tthis.bT,\n\t\t\tundefined,\n\t\t\tm4.transformVector(this.aDir),\n\t\t\tm4.transformVector(this.bDir),\n\t\t\t'' + this.name + desc,\n\t\t) as this\n\t}\n\n\tisCoEdge(edge: Edge): boolean {\n\t\treturn (\n\t\t\tthis === edge ||\n\t\t\tthis === edge.flippedOf ||\n\t\t\t(this.curve.isColinearTo(edge.curve) &&\n\t\t\t\t((this.a.like(edge.a) && this.b.like(edge.b)) || (this.a.like(edge.b) && this.b.like(edge.a))))\n\t\t)\n\t}\n}\n\nexport class StraightEdge extends Edge {\n\treadonly tangent: V3\n\treadonly curve!: L3\n\n\tconstructor(line: L3, a: V3, b: V3, aT: number, bT: number, public flippedOf?: StraightEdge, name?: string) {\n\t\tsuper(line, a, b, aT, bT, flippedOf, name)\n\t\tassertInst(L3, line)\n\t\t!flippedOf || assertInst(StraightEdge, flippedOf)\n\t\t!name || assertf(() => 'string' === typeof name, name)\n\t\tassert(!a.like(b), '!a.like(b)' + a + b) // don't put in super as it will break full ellipse\n\t\tthis.tangent = this.aT < this.bT ? this.curve.dir1 : this.curve.dir1.negated()\n\t}\n\n\tget aDir() {\n\t\treturn this.tangent\n\t}\n\n\tget bDir() {\n\t\treturn this.tangent\n\t}\n\n\tstatic throughPoints(a: V3, b: V3, name?: string) {\n\t\treturn new StraightEdge(L3.throughPoints(a, b, 0, a.to(b).length()), a, b, 0, a.to(b).length(), undefined, name)\n\t}\n\n\t/**\n\t * Create a list of StraightEdges from a list of vertices.\n\t * @param vertices\n\t * @param closed Whether to connect the first and last vertices. Defaults to true.\n\t * @returns\n\t */\n\tstatic chain(vertices: V3[], closed: boolean = true): StraightEdge[] {\n\t\tconst vc = vertices.length\n\t\treturn arrayFromFunction(closed ? vc : vc - 1, i =>\n\t\t\tStraightEdge.throughPoints(vertices[i], vertices[(i + 1) % vc]),\n\t\t)\n\t}\n\n\ttoSource(): string {\n\t\treturn callsce('new StraightEdge', this.curve, this.a, this.b, this.aT, this.bT)\n\t}\n\n\tgetVerticesNo0() {\n\t\treturn [this.b]\n\t}\n\n\tpointsCount() {\n\t\treturn 2\n\t}\n\n\tpoints() {\n\t\treturn [this.a, this.b]\n\t}\n\n\tedgeISTsWithPlane(plane: P3): number[] {\n\t\tconst edgeT = snap2(this.curve.isTWithPlane(plane), this.aT, this.bT)\n\t\treturn this.minT <= edgeT && edgeT <= this.maxT ? [edgeT] : []\n\t}\n\n\tedgeISTsWithSurface(surface: Surface): number[] {\n\t\tif (surface instanceof PlaneSurface) {\n\t\t\treturn this.edgeISTsWithPlane(surface.plane)\n\t\t} else {\n\t\t\treturn surface\n\t\t\t\t.isTsForLine(this.curve)\n\t\t\t\t.map(edgeT => snap2(edgeT, this.aT, this.bT))\n\t\t\t\t.filter(edgeT => this.minT <= edgeT && edgeT <= this.maxT)\n\t\t}\n\t}\n\n\ttangentAt() {\n\t\treturn this.tangent\n\t}\n\n\tflipped(): StraightEdge {\n\t\treturn (\n\t\t\tthis.flippedOf ||\n\t\t\t(this.flippedOf = new StraightEdge(this.curve, this.b, this.a, this.bT, this.aT, this, this.name))\n\t\t)\n\t}\n\n\ttransform(m4: M4, desc?: string): this {\n\t\tconst lineDir1TransLength = m4.transformVector(this.curve.dir1).length()\n\t\treturn new StraightEdge(\n\t\t\tthis.curve.transform(m4),\n\t\t\tm4.transformPoint(this.a),\n\t\t\tm4.transformPoint(this.b),\n\t\t\tthis.aT * lineDir1TransLength,\n\t\t\tthis.bT * lineDir1TransLength,\n\t\t\tundefined,\n\t\t\t'' + this.name + desc,\n\t\t) as this\n\t}\n\n\tisCoEdge(edge: Edge): boolean {\n\t\treturn (\n\t\t\tthis === edge ||\n\t\t\tthis === edge.flippedOf ||\n\t\t\t(edge.constructor === StraightEdge &&\n\t\t\t\t((this.a.like(edge.a) && this.b.like(edge.b)) || (this.a.like(edge.b) && this.b.like(edge.a))))\n\t\t)\n\t}\n\n\tgetEdgeT(p: V3): number | undefined {\n\t\tassertVectors(p)\n\t\tlet edgeT = p.minus(this.curve.anchor).dot(this.curve.dir1)\n\t\tif (!eq0(this.curve.at(edgeT).distanceTo(p))) {\n\t\t\treturn\n\t\t}\n\t\tedgeT = snap2(edgeT, this.aT, this.bT)\n\t\treturn this.minT <= edgeT && edgeT <= this.maxT ? edgeT : undefined\n\t}\n}\n","import { int, M4 } from 'ts3dutils'\r\n\r\nimport { Edge, Face, Surface } from './index'\r\n\r\n/**\r\n * Created by aval on 19.04.2017.\r\n */\r\nexport abstract class FaceInfoFactory<T> {\r\n\tstatic makeStatic<T>(staticInfo: T): FaceInfoFactory<T> {\r\n\t\treturn new class extends FaceInfoFactory<T> {\r\n\t\t\tconstructor() {\r\n\t\t\t\tsuper()\r\n\t\t\t}\r\n\r\n\t\t\tinfo(surface: Surface, contour: Edge[], holes: Edge[][]): T {\r\n\t\t\t\treturn staticInfo\r\n\t\t\t}\r\n\t\t}()\r\n\t}\r\n\r\n\tinfo(surface: Surface, contour: Edge[], holes: Edge[][]): T {\r\n\t\tthrow new Error('no default implementation')\r\n\t}\r\n\r\n\textrudeBottom(surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\r\n\t\treturn this.info(surface, contour, holes)\r\n\t}\r\n\r\n\textrudeTop(surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\r\n\t\treturn this.info(surface, contour, holes)\r\n\t}\r\n\r\n\textrudeWall(index: int, surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\r\n\t\treturn this.info(surface, contour, holes)\r\n\t}\r\n\r\n\trotationWall(index: int, surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\r\n\t\treturn this.info(surface, contour, holes)\r\n\t}\r\n\r\n\trotationStart(surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\r\n\t\treturn this.info(surface, contour, holes)\r\n\t}\r\n\r\n\trotationEnd(surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\r\n\t\treturn this.info(surface, contour, holes)\r\n\t}\r\n\r\n\tnewSubFace(original: Face, surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\r\n\t\treturn original.info\r\n\t}\r\n\r\n\ttransform(original: Face, m4: M4, desc: string, surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\r\n\t\treturn original.info\r\n\t}\r\n}\r\n","import { Equalable, Pair } from 'javasetmap.ts'\nimport {\n\tAABB,\n\tarrayFromFunction,\n\tarrayRange,\n\tassert,\n\tassertf,\n\tassertInst,\n\tassertVectors,\n\tdisableConsole,\n\tdoubleSignedArea,\n\tenableConsole,\n\teq,\n\teq0,\n\tge,\n\tGOLDEN_RATIO,\n\tgt,\n\tint,\n\tisCCW,\n\tle,\n\tlerp,\n\tlt,\n\tM4,\n\tmapPush,\n\tMINUS,\n\tmod,\n\tNLA_PRECISION,\n\tsnap,\n\tTAU,\n\tTransformable,\n\tV3,\n} from 'ts3dutils'\nimport { Mesh, MeshWith, pushQuad } from 'tsgl'\n\nimport {\n\tBRep,\n\tConicSurface,\n\tCOPLANAR_SAME,\n\tCurve,\n\tdotCurve2,\n\tEdge,\n\tEPS,\n\tfff,\n\tgetGlobalId,\n\tINSIDE,\n\tIntersectionPointInfo,\n\tL3,\n\tP3,\n\tParametricSurface,\n\tPlaneSurface,\n\tPointVsFace,\n\tSemiEllipsoidSurface,\n\tsplitsVolumeEnclosingCone2,\n\tsplitsVolumeEnclosingFaces,\n\tsplitsVolumeEnclosingFacesP,\n\tsplitsVolumeEnclosingFacesP2,\n\tStraightEdge,\n\tSurface,\n\ttriangulateVertices,\n} from './index'\n\nimport { abs, ceil, floor, max, min, sign } from './math'\n\nexport type FaceMesh = Mesh & { LINES: int[]; TRIANGLES: int[]; normals: V3[] }\n\nexport abstract class Face extends Transformable {\n\treadonly ['constructor']: new (\n\t\tsurface: Surface,\n\t\tcontour: Edge[],\n\t\tholes?: Edge[][],\n\t\tname?: string,\n\t\tinfo?: any,\n\t) => this\n\tallEdges: Edge[]\n\tprotected aabb: AABB | undefined = undefined\n\n\tconstructor(\n\t\treadonly surface: Surface,\n\t\treadonly contour: Edge[],\n\t\treadonly holes: Edge[][] = [],\n\t\treadonly name?: string,\n\t\treadonly info?: any,\n\t) {\n\t\tsuper()\n\t\t//assert(name)\n\t\tEdge.assertLoop(contour)\n\t\tassert(contour.every(f => f instanceof Edge), () => 'contour.every(f => f instanceof Edge)' + contour)\n\t\t// contour.forEach(e => !surface.containsCurve(e.curve) &&\n\t\t// console.log('FAIL:'+surface.distanceToPoint(e.curve.anchor)))\n\t\t//contour.forEach(e => {\n\t\t//\tassert(surface.containsCurve(e.curve), 'edge not in surface ' + e + surface)\n\t\t//})\n\t\tassert(surface.edgeLoopCCW(contour), surface.toString() + contour.join('\\n'))\n\t\tholes && holes.forEach(hole => Edge.assertLoop(hole))\n\t\tholes && holes.forEach(hole => assert(!surface.edgeLoopCCW(hole)))\n\t\tassert(!holes || holes.constructor == Array, holes && holes.toString())\n\t\tthis.allEdges = Array.prototype.concat.apply(this.contour, this.holes)\n\t}\n\n\tstatic assembleFacesFromLoops(\n\t\tloops: Edge[][],\n\t\tsurface: Surface,\n\t\tfaceConstructor: typeof Face.prototype.constructor,\n\t): Face[] {\n\t\ttype LoopInfo = { loop: Edge[]; ccw: boolean; subloops: LoopInfo[] }\n\n\t\tfunction placeRecursively(newLoopInfo: LoopInfo, loopInfos: LoopInfo[]) {\n\t\t\tif (loopInfos.length == 0) {\n\t\t\t\tloopInfos.push(newLoopInfo)\n\t\t\t} else {\n\t\t\t\tconst subLoopInfo = loopInfos.find(loopInfo =>\n\t\t\t\t\tBRep.loop1ContainsLoop2(loopInfo.loop, loopInfo.ccw, newLoopInfo.loop, newLoopInfo.ccw, surface),\n\t\t\t\t)\n\t\t\t\tif (subLoopInfo) {\n\t\t\t\t\tplaceRecursively(newLoopInfo, subLoopInfo.subloops)\n\t\t\t\t} else {\n\t\t\t\t\t// newLoopInfo isnt contained by any other subLoopInfo\n\t\t\t\t\tfor (let i = loopInfos.length; --i >= 0; ) {\n\t\t\t\t\t\tconst subLoopInfo = loopInfos[i]\n\t\t\t\t\t\t//console.log('cheving subLoopInfo', surface.loopContainsPoint(newLoopInfo.edges,\n\t\t\t\t\t\t// subLoopInfo.edges[0].a))\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tBRep.loop1ContainsLoop2(\n\t\t\t\t\t\t\t\tnewLoopInfo.loop,\n\t\t\t\t\t\t\t\tnewLoopInfo.ccw,\n\t\t\t\t\t\t\t\tsubLoopInfo.loop,\n\t\t\t\t\t\t\t\tsubLoopInfo.ccw,\n\t\t\t\t\t\t\t\tsurface,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tnewLoopInfo.subloops.push(subLoopInfo)\n\t\t\t\t\t\t\tloopInfos.splice(i, 1) // remove it\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tloopInfos.push(newLoopInfo)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction newFacesRecursive(loopInfo: LoopInfo): void {\n\t\t\tnewFaces.push(\n\t\t\t\tnew faceConstructor(\n\t\t\t\t\tsurface,\n\t\t\t\t\tloopInfo.ccw ? loopInfo.loop : Edge.reversePath(loopInfo.loop),\n\t\t\t\t\tloopInfo.subloops.map(sl => (sl.ccw ? Edge.reversePath(sl.loop) : sl.loop)),\n\t\t\t\t),\n\t\t\t)\n\t\t\tloopInfo.subloops.forEach(sl => sl.subloops.forEach(sl2 => newFacesRecursive(sl2)))\n\t\t}\n\n\t\tconst newFaces: Face[] = []\n\t\tconst topLevelLoops: LoopInfo[] = []\n\t\tloops.forEach(loop =>\n\t\t\tplaceRecursively(\n\t\t\t\t{\n\t\t\t\t\tloop: loop,\n\t\t\t\t\tccw: surface.edgeLoopCCW(loop),\n\t\t\t\t\tsubloops: [],\n\t\t\t\t},\n\t\t\t\ttopLevelLoops,\n\t\t\t),\n\t\t)\n\t\ttopLevelLoops.forEach(tll => newFacesRecursive(tll))\n\t\treturn newFaces\n\t}\n\n\t//fromLoops(loops: Edge[][], surface: Surface) {\n\t//\ttype LoopInfo = {loop: Edge[], ccw: boolean, subloops: LoopInfo[]}\n\t//\tfunction placeRecursively(newLoopInfo: LoopInfo, loopInfos: LoopInfo[]) {\n\t//\t\tif (loopInfos.length == 0) {\n\t//\t\t\tloopInfos.push(newLoopInfo)\n\t//\t\t} else {\n\t//\t\t\tconst subLoopInfo = loopInfos.find(loopInfo => BRep.loop1ContainsLoop2(loopInfo.loop, loopInfo.ccw,\n\t// newLoopInfo.loop, newLoopInfo.ccw, surface)) if (subLoopInfo) { placeRecursively(newLoopInfo,\n\t// subLoopInfo.subloops) } else { // newLoopInfo isnt contained by any other subLoopInfo for (let i =\n\t// loopInfos.length; --i >= 0;) { const subLoopInfo = loopInfos[i] //console.log('cheving subLoopInfo',\n\t// surface.loopContainsPoint(newLoopInfo.edges, subLoopInfo.edges[0].a)) if\n\t// (BRep.loop1ContainsLoop2(newLoopInfo.loop, subLoopInfo.loop, surface)) { newLoopInfo.subloops.push(subLoopInfo)\n\t// loopInfos.splice(i, 1) // remove it } } loopInfos.push(newLoopInfo) } } }  function newFacesRecursive(loopInfo:\n\t// LoopInfo): void { // CW loops can be top level, if they are holes in the original face not contained in the new\n\t// face if (loopInfo.ccw) { if (loopInfo.subloops.every(sl => !sl.ccw)) { const newFace = new\n\t// faceConstructor(surface, loopInfo.loop, loopInfo.subloops.map(sl => sl.loop)) newFaces.push(newFace)\n\t// loopInfo.subloops.forEach(sl => sl.subloops.forEach(slsl => slsl.ccw && newFacesRecursive(slsl))) } else {\n\t// loopInfo.subloops.forEach(sl => sl.ccw && newFacesRecursive(sl)) } } }  const newFaces: Face[] = [] const\n\t// topLevelLoops:LoopInfo[] = [] loops.forEach(loop => placeRecursively({loop: loop, ccw:\n\t// surface.edgeLoopCCW(loop), subloops: []}, topLevelLoops)) topLevelLoops.forEach(tll => newFacesRecursive(tll))\n\t// return newFaces }\n\n\tstatic create(surface: Surface, faceEdges: Edge[], holes?: Edge[][], faceName?: string, info?: any) {\n\t\treturn surface instanceof PlaneSurface\n\t\t\t? new PlaneFace(surface, faceEdges, holes, faceName, info)\n\t\t\t: new RotationFace(surface, faceEdges, holes, faceName, info)\n\t}\n\n\tintersectFace(\n\t\tface2: Face,\n\t\tthisBrep: BRep,\n\t\tface2Brep: BRep,\n\t\tfaceMap: Map<Face, Edge[]>,\n\t\tthisEdgePoints: Map<Edge, IntersectionPointInfo[]>,\n\t\totherEdgePoints: Map<Edge, IntersectionPointInfo[]>,\n\t\tcheckedPairs: Set<Pair<any, any>>,\n\t) {\n\t\t//thisEdgePoints = {\n\t\t//   get(key) {\n\t\t//       return _thisEdgePoints.get(key)\n\t\t//    },\n\t\t//    set(key, value) {\n\t\t//       assert(thisBrep.edgeFaces.get(key))\n\t\t//        _thisEdgePoints.set(key, value)\n\t\t//    }\n\t\t//}\n\t\tfunction hasPair(a: Equalable, b: Equalable) {\n\t\t\treturn checkedPairs.has(new Pair(a, b))\n\t\t}\n\n\t\tfunction addPair(a: Equalable, b: Equalable) {\n\t\t\treturn checkedPairs.add(new Pair(a, b))\n\t\t}\n\n\t\t/**\n\t\t * @param newEdge generated segment\n\t\t * @param col1 if newEdge is colinear to an edge of this, the edge in question\n\t\t * @param col2 same for face2\n\t\t * @return whether new edge was added.\n\t\t */\n\t\tfunction handleNewEdge(newEdge: Edge, col1: Edge | undefined, col2: Edge | undefined): boolean {\n\t\t\tif (!col1 && !col2) {\n\t\t\t\tlet correctDir = face.surface.normalP(newEdge.a).cross(face2.surface.normalP(newEdge.a))\n\t\t\t\tif (correctDir.likeO()) {\n\t\t\t\t\tconst t = lerp(newEdge.aT, newEdge.bT, 1 / GOLDEN_RATIO),\n\t\t\t\t\t\tp = newEdge.curve.at(t)\n\t\t\t\t\tcorrectDir = face.surface.normalP(p).cross(face2.surface.normalP(p))\n\t\t\t\t}\n\t\t\t\tif (!correctDir.likeO()) {\n\t\t\t\t\tif (correctDir.dot(newEdge.aDir) < 0) {\n\t\t\t\t\t\tnewEdge = newEdge.flipped()\n\t\t\t\t\t}\n\t\t\t\t\tmapPush(faceMap, face, newEdge)\n\t\t\t\t\tmapPush(faceMap, face2, newEdge.flipped())\n\t\t\t\t} else {\n\t\t\t\t\tconst p = newEdge.a\n\t\t\t\t\tconst plane = P3.normalOnAnchor(newEdge.aDir, p)\n\t\t\t\t\tconst up = face.surface.normalP(p)\n\t\t\t\t\tconst sameDir = up.dot(face2.surface.normalP(p)) > 0\n\t\t\t\t\tconst canonDir = plane.normal1.cross(up)\n\t\t\t\t\tconst curve = face.surface.isCurvesWithPlane(plane)[0],\n\t\t\t\t\t\tcurveT = curve.pointT(p),\n\t\t\t\t\t\tcurveDir = sign(canonDir.dot(curve.tangentAt(curveT)))\n\t\t\t\t\tconst curve2 = face2.surface.isCurvesWithPlane(plane)[0],\n\t\t\t\t\t\tcurve2T = curve2.pointT(p),\n\t\t\t\t\t\tcurve2Dir = sign(canonDir.dot(curve.tangentAt(curve2T)))\n\t\t\t\t\tconst foo = curve.diff(curveT, EPS * curveDir).dot(up)\n\t\t\t\t\tconst foo2 = curve2.diff(curve2T, EPS * curve2Dir).dot(up)\n\t\t\t\t\tif (foo2 < foo) {\n\t\t\t\t\t\tmapPush(faceMap, face2, sameDir ? newEdge.flipped() : newEdge)\n\t\t\t\t\t}\n\t\t\t\t\tif (up.dot(face2.surface.normalP(p)) < 0 == foo2 < foo) {\n\t\t\t\t\t\tmapPush(faceMap, face, newEdge.flipped())\n\t\t\t\t\t}\n\t\t\t\t\tconst bar = curve.diff(curveT, EPS * curveDir).dot(up)\n\t\t\t\t\tconst bar2 = curve2.diff(curve2T, EPS * curve2Dir).dot(up)\n\t\t\t\t\tif (bar2 < bar) {\n\t\t\t\t\t\tmapPush(faceMap, face2, sameDir ? newEdge : newEdge.flipped())\n\t\t\t\t\t}\n\t\t\t\t\tif (sameDir != bar2 < bar) {\n\t\t\t\t\t\tmapPush(faceMap, face, newEdge)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true\n\t\t\t}\n\n\t\t\tfunction handleEdgeInFace(\n\t\t\t\tcol1: Edge | undefined,\n\t\t\t\tcol2: Edge | undefined,\n\t\t\t\tface: Face,\n\t\t\t\tface2: Face,\n\t\t\t\tthisBrep: BRep,\n\t\t\t\tface2Brep: BRep,\n\t\t\t\tcoplanarSameIsInside: boolean,\n\t\t\t\thas: typeof hasPair,\n\t\t\t\tadd: typeof addPair,\n\t\t\t): boolean {\n\t\t\t\tif (col1 && !col2) {\n\t\t\t\t\tif (hasPair(col1.getCanon(), face2)) return false\n\n\t\t\t\t\t//add(col1.getCanon(), face2)\n\t\t\t\t\tconst surface2 = face2.surface\n\n\t\t\t\t\t// NB: a new edge is inserted even though it may be the same as an old one\n\t\t\t\t\t// however it indicates that it intersects the other volume here, i.e. the old edge cannot\n\t\t\t\t\t// be counted as 'inside' for purposes of reconstitution\n\t\t\t\t\tthisBrep.edgeFaces!.get(col1.getCanon())!.forEach(faceInfo => {\n\t\t\t\t\t\t//const dot = snap0(surface2.normal1.dot(faceInfo.inside))\n\t\t\t\t\t\t//if (dot == 0 ? !coplanarSameIsInside : dot < 0) {\n\t\t\t\t\t\tconst pointsInsideFace = fff(faceInfo, face2.surface)\n\t\t\t\t\t\tconst edgeInside =\n\t\t\t\t\t\t\tpointsInsideFace == INSIDE || (!coplanarSameIsInside && pointsInsideFace == COPLANAR_SAME)\n\t\t\t\t\t\tconst pushEdge = faceInfo.edge\n\t\t\t\t\t\t\t.tangentAt(faceInfo.edge.curve.pointT(newEdge.a))\n\t\t\t\t\t\t\t.like(newEdge.aDir)\n\t\t\t\t\t\t\t? newEdge\n\t\t\t\t\t\t\t: newEdge.flipped()\n\t\t\t\t\t\tconsole.log(newEdge.sce)\n\t\t\t\t\t\tassert(faceInfo.edge.tangentAt(faceInfo.edge.curve.pointT(pushEdge.a)).like(pushEdge.aDir))\n\t\t\t\t\t\tedgeInside && mapPush(faceMap, faceInfo.face, pushEdge)\n\t\t\t\t\t})\n\n\t\t\t\t\tconst surface2NormalAtNewEdgeA = surface2.normalP(newEdge.a)\n\t\t\t\t\tconst newEdgeInside = surface2NormalAtNewEdgeA.cross(newEdge.aDir)\n\t\t\t\t\tconst sVEF1 = splitsVolumeEnclosingFacesP(\n\t\t\t\t\t\tthisBrep,\n\t\t\t\t\t\tcol1.getCanon(),\n\t\t\t\t\t\tnewEdge.a,\n\t\t\t\t\t\tnewEdgeInside,\n\t\t\t\t\t\tsurface2NormalAtNewEdgeA,\n\t\t\t\t\t)\n\t\t\t\t\tlet addNewEdge, addNewEdgeFlipped\n\t\t\t\t\tif ((addNewEdge = sVEF1 == INSIDE || (coplanarSameIsInside && sVEF1 == COPLANAR_SAME))) {\n\t\t\t\t\t\tmapPush(faceMap, face2, newEdge)\n\t\t\t\t\t}\n\t\t\t\t\tconst sVEF2 = splitsVolumeEnclosingFacesP(\n\t\t\t\t\t\tthisBrep,\n\t\t\t\t\t\tcol1.getCanon(),\n\t\t\t\t\t\tnewEdge.a,\n\t\t\t\t\t\tnewEdgeInside.negated(),\n\t\t\t\t\t\tsurface2NormalAtNewEdgeA,\n\t\t\t\t\t)\n\t\t\t\t\tif ((addNewEdgeFlipped = sVEF2 == INSIDE || (coplanarSameIsInside && sVEF2 == COPLANAR_SAME))) {\n\t\t\t\t\t\tmapPush(faceMap, face2, newEdge.flipped())\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\taddNewEdge ||\n\t\t\t\t\t\taddNewEdgeFlipped ||\n\t\t\t\t\t\t(sVEF1 == COPLANAR_SAME && sVEF2 == INSIDE) ||\n\t\t\t\t\t\t(sVEF2 == COPLANAR_SAME && sVEF1 == INSIDE)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst c1 = handleEdgeInFace(col1, col2, face, face2, thisBrep, face2Brep, false, hasPair, addPair)\n\t\t\tconst c2 = handleEdgeInFace(\n\t\t\t\tcol2,\n\t\t\t\tcol1,\n\t\t\t\tface2,\n\t\t\t\tface,\n\t\t\t\tface2Brep,\n\t\t\t\tthisBrep,\n\t\t\t\ttrue,\n\t\t\t\t(a, b) => hasPair(b, a),\n\t\t\t\t(a, b) => addPair(b, a),\n\t\t\t)\n\t\t\tif (c1 || c2) return true\n\n\t\t\tif (col1 && col2) {\n\t\t\t\tif (hasPair(col1.getCanon(), col2.getCanon())) return false\n\n\t\t\t\taddPair(col1.getCanon(), col2.getCanon())\n\t\t\t\tlet added = false\n\t\t\t\tfunction handleColinearEdgeFaces(\n\t\t\t\t\tcol1: Edge,\n\t\t\t\t\tcol2: Edge,\n\t\t\t\t\tthisBrep: BRep,\n\t\t\t\t\tface2Brep: BRep,\n\t\t\t\t\tcoplanarSameIsInside: boolean,\n\t\t\t\t\tthisEdgePoints: Map<Edge, IntersectionPointInfo[]>,\n\t\t\t\t\thas: typeof hasPair,\n\t\t\t\t\tadd: typeof addPair,\n\t\t\t\t) {\n\t\t\t\t\t// not entirely sure for what i had the dirInsides in?\n\t\t\t\t\t//const aDirNegatedInside = (newEdge.a.like(col2.a) || newEdge.a.like(col2.b)) &&\n\t\t\t\t\t// splitsVolumeEnclosingCone(face2Brep, newEdge.a, newEdge.aDir.negated()) == INSIDE const\n\t\t\t\t\t// bDirInside = (newEdge.b.like(col2.a) || newEdge.b.like(col2.b)) &&\n\t\t\t\t\t// splitsVolumeEnclosingCone(face2Brep, newEdge.b, newEdge.bDir) == INSIDE\n\t\t\t\t\tfor (const faceInfo of thisBrep.edgeFaces!.get(col1.getCanon())!) {\n\t\t\t\t\t\tconst sVEF = splitsVolumeEnclosingFaces(\n\t\t\t\t\t\t\tface2Brep,\n\t\t\t\t\t\t\tcol2.getCanon(),\n\t\t\t\t\t\t\tfaceInfo.inside,\n\t\t\t\t\t\t\tfaceInfo.normalAtCanonA,\n\t\t\t\t\t\t)\n\t\t\t\t\t\tconst edgeInside = sVEF == INSIDE || (coplanarSameIsInside && sVEF == COPLANAR_SAME)\n\t\t\t\t\t\tconst pushEdge = faceInfo.edge.aDir.like(newEdge.aDir) ? newEdge : newEdge.flipped()\n\t\t\t\t\t\tif (edgeInside) {\n\t\t\t\t\t\t\tmapPush(faceMap, faceInfo.face, pushEdge)\n\t\t\t\t\t\t\tconst aT = col1.getCanon().curve.pointT(newEdge.a)\n\t\t\t\t\t\t\tif (!eq(aT, col1.aT) && !eq(aT, col1.bT)) {\n\t\t\t\t\t\t\t\t// newEdge.a is in center of col1\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tsplitsVolumeEnclosingCone2(\n\t\t\t\t\t\t\t\t\t\tface2Brep,\n\t\t\t\t\t\t\t\t\t\tnewEdge.a,\n\t\t\t\t\t\t\t\t\t\tnewEdge.curve,\n\t\t\t\t\t\t\t\t\t\tnewEdge.aT,\n\t\t\t\t\t\t\t\t\t\t-Math.sign(newEdge.deltaT()) as -1 | 1,\n\t\t\t\t\t\t\t\t\t) == INSIDE\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tmapPush(thisEdgePoints, col1.getCanon(), {\n\t\t\t\t\t\t\t\t\t\tp: newEdge.a,\n\t\t\t\t\t\t\t\t\t\tedgeT: aT,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst bT = col1.getCanon().curve.pointT(newEdge.b)\n\t\t\t\t\t\t\tif (!eq(bT, col1.aT) && !eq(bT, col1.bT)) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tsplitsVolumeEnclosingCone2(\n\t\t\t\t\t\t\t\t\t\tface2Brep,\n\t\t\t\t\t\t\t\t\t\tnewEdge.b,\n\t\t\t\t\t\t\t\t\t\tnewEdge.curve,\n\t\t\t\t\t\t\t\t\t\tnewEdge.bT,\n\t\t\t\t\t\t\t\t\t\tMath.sign(newEdge.deltaT()) as -1 | 1,\n\t\t\t\t\t\t\t\t\t) == INSIDE\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tmapPush(thisEdgePoints, col1.getCanon(), {\n\t\t\t\t\t\t\t\t\t\tp: newEdge.b,\n\t\t\t\t\t\t\t\t\t\tedgeT: bT,\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tadded = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\thandleColinearEdgeFaces(col1, col2, thisBrep, face2Brep, true, thisEdgePoints, hasPair, addPair)\n\t\t\t\thandleColinearEdgeFaces(\n\t\t\t\t\tcol2,\n\t\t\t\t\tcol1,\n\t\t\t\t\tface2Brep,\n\t\t\t\t\tthisBrep,\n\t\t\t\t\tfalse,\n\t\t\t\t\totherEdgePoints,\n\t\t\t\t\t(a, b) => hasPair(b, a),\n\t\t\t\t\t(a, b) => addPair(b, a),\n\t\t\t\t)\n\t\t\t\treturn false\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\n\t\t// what needs to be generated: new edges on face\n\t\t// points on edges where they are cut by faces so that sub edges will be generated for loops\n\t\t// points on ends of edges where the edge will be an edge in the new volume where it goes from A to B\n\t\t//         you don't want those to be marked as 'inside', otherwise invalid faces will be added\n\t\t// if a face cuts a corner, nothing needs to be done, as that alone does not limit what adjacent faces will be\n\t\tfunction handleEndPoint(\n\t\t\ta: IntersectionPointInfo | undefined,\n\t\t\tb: IntersectionPointInfo | undefined,\n\t\t\tnewEdge: Edge,\n\t\t) {\n\t\t\t// ends in the middle of b's face\n\t\t\tif (a && !b) {\n\t\t\t\tif (!a.colinear && a.edgeT != a.edge.aT && a.edgeT != a.edge.bT) {\n\t\t\t\t\tmapPush(thisEdgePoints, a.edge.getCanon(), a)\n\t\t\t\t\tassert(a.edge.isValidT(a.edgeT))\n\t\t\t\t}\n\t\t\t\t// else colinear segment ends in middle of other face, do nothing\n\t\t\t}\n\t\t\t// ends in the middle of a's face\n\t\t\tif (b && !a) {\n\t\t\t\tif (!b.colinear && b.edgeT != b.edge.aT && b.edgeT != b.edge.bT) {\n\t\t\t\t\tmapPush(otherEdgePoints, b.edge.getCanon(), b)\n\t\t\t\t\tassert(b.edge.isValidT(b.edgeT))\n\t\t\t\t}\n\t\t\t\t// else colinear segment ends in middle of other face, do nothing\n\t\t\t}\n\t\t\tif (a && b) {\n\t\t\t\tassert(a.colinear || b.colinear || eq(a.t, b.t))\n\t\t\t\t// if a or b is colinear the correct points will already have been added to the edge by handleNewEdge\n\t\t\t\t// segment starts/ends on edge/edge intersection\n\t\t\t\tfunction handleAB(\n\t\t\t\t\ta: IntersectionPointInfo,\n\t\t\t\t\tb: IntersectionPointInfo,\n\t\t\t\t\tface: Face,\n\t\t\t\t\tface2: Face,\n\t\t\t\t\tthisPlane: Surface,\n\t\t\t\t\tface2Plane: Surface,\n\t\t\t\t\tthisBrep: BRep,\n\t\t\t\t\tface2Brep: BRep,\n\t\t\t\t\tfirst: boolean,\n\t\t\t\t\tthisEdgePoints: Map<Edge, IntersectionPointInfo[]>,\n\t\t\t\t) {\n\t\t\t\t\tif (!a.colinear && a.edgeT != a.edge.aT && a.edgeT != a.edge.bT) {\n\t\t\t\t\t\t//if (!hasPair(a.edge.getCanon(), b.edge.getCanon())) {\n\t\t\t\t\t\taddPair(a.edge.getCanon(), b.edge.getCanon())\n\t\t\t\t\t\t// ends on a, on colinear segment b bT != a.edge.bT &&\n\t\t\t\t\t\t// b can be colinear, so edgeT == aT is possible\n\t\t\t\t\t\tif (a.p.like(b.edge.a) || a.p.like(b.edge.b)) {\n\t\t\t\t\t\t\tconst corner = a.p.like(b.edge.a) ? b.edge.a : b.edge.b\n\t\t\t\t\t\t\t// face2brep corner on edge\n\t\t\t\t\t\t\tconst sVEC1 = splitsVolumeEnclosingCone2(face2Brep, corner, a.edge.curve, a.edgeT, 1)\n\t\t\t\t\t\t\tconst sVEC2 = splitsVolumeEnclosingCone2(face2Brep, corner, a.edge.curve, a.edgeT, -1)\n\t\t\t\t\t\t\t// if either of these return ALONG_EDGE_OR_PLANE, then the breps share a colinear edge\n\n\t\t\t\t\t\t\tif (INSIDE == sVEC1 || INSIDE == sVEC2) {\n\t\t\t\t\t\t\t\tmapPush(thisEdgePoints, a.edge.getCanon(), a)\n\t\t\t\t\t\t\t\tassert(a.edge.isValidT(a.edgeT))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// edge / edge center intersection\n\t\t\t\t\t\t\t// todo: is this even necessary considering we add edges anyway? i think so...\n\t\t\t\t\t\t\t// const testVector =\n\t\t\t\t\t\t\t// a.edge.tangentAt(a.edgeT).rejectedFrom(b.edge.tangentAt(b.edge.curve.pointT(a.p)))\n\t\t\t\t\t\t\t// assert(!testVector.likeO())\n\t\t\t\t\t\t\tconst sVEF1 = splitsVolumeEnclosingFacesP2(\n\t\t\t\t\t\t\t\tface2Brep,\n\t\t\t\t\t\t\t\tb.edge.getCanon(),\n\t\t\t\t\t\t\t\ta.p,\n\t\t\t\t\t\t\t\ta.edge.curve,\n\t\t\t\t\t\t\t\ta.edgeT,\n\t\t\t\t\t\t\t\t1,\n\t\t\t\t\t\t\t\tthisPlane.normalP(a.p),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tconst sVEF2 = splitsVolumeEnclosingFacesP2(\n\t\t\t\t\t\t\t\tface2Brep,\n\t\t\t\t\t\t\t\tb.edge.getCanon(),\n\t\t\t\t\t\t\t\ta.p,\n\t\t\t\t\t\t\t\ta.edge.curve,\n\t\t\t\t\t\t\t\ta.edgeT,\n\t\t\t\t\t\t\t\t-1,\n\t\t\t\t\t\t\t\tthisPlane.normalP(a.p),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tINSIDE == sVEF1 ||\n\t\t\t\t\t\t\t\t(first && COPLANAR_SAME == sVEF1) ||\n\t\t\t\t\t\t\t\tINSIDE == sVEF2 ||\n\t\t\t\t\t\t\t\t(first && COPLANAR_SAME == sVEF2)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tmapPush(thisEdgePoints, a.edge.getCanon(), a)\n\t\t\t\t\t\t\t\tassert(a.edge.isValidT(a.edgeT))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\thandleAB(a, b, face, face2, surface, surface2, thisBrep, face2Brep, true, thisEdgePoints)\n\t\t\t\thandleAB(b, a, face2, face, surface2, surface, face2Brep, thisBrep, false, otherEdgePoints)\n\t\t\t}\n\t\t}\n\n\t\tassertInst(Face, face2)\n\n\t\tconst face = this\n\t\tconst surface = face.surface,\n\t\t\tsurface2 = face2.surface\n\t\tif (!this.getAABB().fuzzyTouchesAABB(face2.getAABB())) {\n\t\t\treturn\n\t\t}\n\t\tif (surface.isCoplanarTo(surface2)) {\n\t\t\treturn\n\t\t}\n\t\tconst isCurves = surface.isCurvesWithSurface(surface2)\n\t\tif (0 == isCurves.length) {\n\t\t\treturn\n\t\t}\n\t\tfor (const isCurve of isCurves) {\n\t\t\tconst t = (isCurve.tMin + isCurve.tMax) / 2,\n\t\t\t\tp = isCurve.at(t),\n\t\t\t\tdp = isCurve.tangentAt(t)\n\t\t\tconst normal1 = surface.normalP(p),\n\t\t\t\tnormal2 = surface2.normalP(p),\n\t\t\t\tdp2 = normal1.cross(normal2)\n\t\t\tassert(surface.containsCurve(isCurve))\n\t\t\tassert(surface2.containsCurve(isCurve))\n\t\t\tif (!dp2.likeO()) {\n\t\t\t\t//assert(dp2.dot(dp) > 0)\n\t\t\t\t// TODO assert(dp2.isParallelTo(dp))\n\t\t\t}\n\t\t}\n\n\t\tfor (let isCurveIndex = 0; isCurveIndex < isCurves.length; isCurveIndex++) {\n\t\t\t// get intersections of newCurve with other edges of face and face2\n\t\t\tconst isCurve = isCurves[isCurveIndex]\n\t\t\tconst ps1 = face.edgeISPsWithSurface(isCurve, face2.surface)\n\t\t\tconst ps2 = face2.edgeISPsWithSurface(isCurve, face.surface)\n\t\t\t// for non-endless curves, e.g. ellipses, the intersections of the faces can be non-zero, even if one of\n\t\t\t// the faces doesn't register any points on the curve. For example, if a cylinder is cut entirely by a\n\t\t\t// plane face (all its edges around the cylinder), then the face will contain the entire curve and\n\t\t\t// 'ps' for the plane face will be empty\n\t\t\t// TODO: behavior when curves touch face?\n\t\t\t// !! start in does depend on insideDir... TODO\n\t\t\tassertf(\n\t\t\t\t() => 0 == ps1.length || !eq0(ps1[0].insideDir.dot(isCurve.tangentAt(ps1[0].t))),\n\t\t\t\t() => ps1[0].insideDir.dot(isCurve.tangentAt(ps1[0].t)),\n\t\t\t)\n\t\t\tassertf(\n\t\t\t\t() => 0 == ps2.length || !eq0(ps2[0].insideDir.dot(isCurve.tangentAt(ps2[0].t))),\n\t\t\t\t() => ps2[0].insideDir.dot(isCurve.tangentAt(ps2[0].t)),\n\t\t\t)\n\n\t\t\tfunction startsInside(ps: IntersectionPointInfo[], face: Face) {\n\t\t\t\tif (0 == ps.length) {\n\t\t\t\t\treturn isFinite(isCurve.tMin) && face.containsPoint2(isCurve.at(isCurve.tMin)) == PointVsFace.INSIDE\n\t\t\t\t} else {\n\t\t\t\t\treturn ps[0].insideDir.dot(isCurve.tangentAt(ps[0].t)) < 0\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// they can't both be empty currently\n\t\t\t// they can't both start 'inside'\n\t\t\tlet in1 = startsInside(ps1, face)\n\t\t\tlet in2 = startsInside(ps2, face2)\n\t\t\tif ((0 == ps1.length && !in1) || (0 == ps2.length && !in2)) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\t//assert(!in1 || !in2)\n\t\t\tlet col1: IntersectionPointInfo | undefined, col2: IntersectionPointInfo | undefined\n\t\t\tlet i = 0,\n\t\t\t\tj = 0,\n\t\t\t\tlast\n\t\t\tlet startP = in1 && in2 ? isCurve.at(isCurve.tMin) : undefined,\n\t\t\t\tstartDir,\n\t\t\t\tstartT = isCurve.tMin,\n\t\t\t\tstartA,\n\t\t\t\tstartB\n\t\t\twhile (i < ps1.length || j < ps2.length) {\n\t\t\t\tassert(i <= ps1.length)\n\t\t\t\tassert(j <= ps2.length)\n\t\t\t\tconst a = ps1[i],\n\t\t\t\t\tb = ps2[j]\n\t\t\t\tassert(a || b)\n\t\t\t\tif (j == ps2.length || (i < ps1.length && lt(a.t, b.t))) {\n\t\t\t\t\tlast = a\n\t\t\t\t\tin1 = !in1\n\t\t\t\t\ta.used = true\n\t\t\t\t\tcol1 = a.colinear ? a : undefined\n\t\t\t\t\ti++\n\t\t\t\t} else if (i == ps1.length || gt(a.t, b.t)) {\n\t\t\t\t\tlast = b\n\t\t\t\t\tb.used = true\n\t\t\t\t\tin2 = !in2\n\t\t\t\t\tcol2 = b.colinear ? b : undefined\n\t\t\t\t\tj++\n\t\t\t\t} else {\n\t\t\t\t\tlast = a\n\t\t\t\t\ta.used = true\n\t\t\t\t\tb.used = true\n\t\t\t\t\tin1 = !in1\n\t\t\t\t\tin2 = !in2\n\t\t\t\t\t//if (in1 == in2) {\n\t\t\t\t\tcol1 = a.colinear ? a : undefined\n\t\t\t\t\tcol2 = b.colinear ? b : undefined\n\t\t\t\t\t//}\n\t\t\t\t\ti++\n\t\t\t\t\tj++\n\t\t\t\t}\n\t\t\t\tif (startP && !(in1 && in2)) {\n\t\t\t\t\t// segment end\n\t\t\t\t\tstartDir = isCurve.tangentAt(startT)\n\t\t\t\t\tif (eq(startT, last.t)) {\n\t\t\t\t\t\tstartP = undefined\n\t\t\t\t\t\tcontinue\n\t\t\t\t\t}\n\t\t\t\t\tassert(lt(startT, last.t))\n\t\t\t\t\tstartT > last.t && (startDir = startDir.negated())\n\t\t\t\t\tlet endDir = isCurve.tangentAt(last.t)\n\t\t\t\t\tstartT > last.t && (endDir = endDir.negated())\n\t\t\t\t\tconst newEdge = Edge.create(\n\t\t\t\t\t\tisCurve,\n\t\t\t\t\t\tstartP,\n\t\t\t\t\t\tlast.p,\n\t\t\t\t\t\tstartT,\n\t\t\t\t\t\tlast.t,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tstartDir,\n\t\t\t\t\t\tendDir,\n\t\t\t\t\t\t'genseg' + getGlobalId(),\n\t\t\t\t\t)\n\t\t\t\t\tstartP = undefined\n\t\t\t\t\tif (handleNewEdge(newEdge, col1 && col1.edge, col2 && col2.edge)) {\n\t\t\t\t\t\thandleEndPoint(startA || col1, startB || col2, newEdge)\n\t\t\t\t\t\thandleEndPoint((a && a.used && a) || col1, (b && b.used && b) || col2, newEdge)\n\t\t\t\t\t}\n\t\t\t\t} else if (in1 && in2) {\n\t\t\t\t\t// new segment just started\n\t\t\t\t\tstartP = last.p\n\t\t\t\t\tstartDir = last.insideDir\n\t\t\t\t\tstartT = last.t\n\t\t\t\t\tstartA = a && a.used && a\n\t\t\t\t\tstartB = b && b.used && b\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (in1 && in2 && startT !== isCurve.tMax) {\n\t\t\t\tconst endT = isCurve.tMax\n\t\t\t\tstartDir = isCurve.tangentAt(startT)\n\t\t\t\tstartT > endT && (startDir = startDir.negated())\n\t\t\t\tlet endDir = isCurve.tangentAt(endT)\n\t\t\t\tstartT > endT && (endDir = endDir.negated())\n\t\t\t\tconst newEdge = Edge.create(\n\t\t\t\t\tisCurve,\n\t\t\t\t\tstartP!,\n\t\t\t\t\tisCurve.at(endT),\n\t\t\t\t\tstartT,\n\t\t\t\t\tendT,\n\t\t\t\t\tundefined,\n\t\t\t\t\tstartDir,\n\t\t\t\t\tendDir,\n\t\t\t\t\t'genseg' + getGlobalId(),\n\t\t\t\t)\n\t\t\t\tif (handleNewEdge(newEdge, col1 && col1.edge, col2 && col2.edge)) {\n\t\t\t\t\thandleEndPoint(startA || col1, startB || col2, newEdge)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tface.getAllEdges().forEach(edge => {\n\t\t\tcheckedPairs.add(new Pair(edge.getCanon(), face2))\n\t\t})\n\t\tface2.getAllEdges().forEach(edge => {\n\t\t\tcheckedPairs.add(new Pair(edge.getCanon(), face))\n\t\t})\n\t}\n\n\tedgeISPsWithSurface(isCurve: Curve, surface2: Surface): IntersectionPointInfo[] {\n\t\tconst face = this\n\t\tconst surface = face.surface\n\t\tconst loops = face.holes.concat([face.contour])\n\t\tconst ps = []\n\t\tfor (const loop of loops) {\n\t\t\tconst colinearEdges: boolean[] = loop.map(edge => edge.curve.isColinearTo(isCurve))\n\t\t\t//const colinearSides = loop.map((edge, edgeIndex) => -1 != colinearEdges[edgeIndex]\n\t\t\t//            && -sign(isCurves[colinearEdges[edgeIndex]].tangentAt(edge.aT).dot(edge.aDir)))\n\t\t\tfor (let edgeIndex = 0; edgeIndex < loop.length; edgeIndex++) {\n\t\t\t\tconst edge = loop[edgeIndex]\n\t\t\t\tconst nextEdgeIndex = (edgeIndex + 1) % loop.length,\n\t\t\t\t\tnextEdge = loop[nextEdgeIndex]\n\t\t\t\t//console.log(edge.toSource()) {p:V3(2, -2.102, 0),\n\t\t\t\tif (colinearEdges[edgeIndex]) {\n\t\t\t\t\tif (isCurve.containsPoint(edge.a)) {\n\t\t\t\t\t\tconst prevEdgeIndex = (edgeIndex - 1 + loop.length) % loop.length,\n\t\t\t\t\t\t\tprevEdge = loop[prevEdgeIndex]\n\t\t\t\t\t\tconst curveAT = isCurve.pointT(edge.a)\n\t\t\t\t\t\tconst colinearOutA = edge.aDir.cross(surface.normalP(edge.a))\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!colinearEdges[prevEdgeIndex] &&\n\t\t\t\t\t\t\tdotCurve2(prevEdge.curve, prevEdge.bT, colinearOutA, -sign(prevEdge.deltaT())) > 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tps.push({\n\t\t\t\t\t\t\t\tp: prevEdge.b,\n\t\t\t\t\t\t\t\tinsideDir: edge.aDir.negated(),\n\t\t\t\t\t\t\t\tt: curveAT,\n\t\t\t\t\t\t\t\tedge: prevEdge,\n\t\t\t\t\t\t\t\tedgeT: prevEdge.bT,\n\t\t\t\t\t\t\t\tcolinear: false,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tps.push({\n\t\t\t\t\t\t\tp: edge.a,\n\t\t\t\t\t\t\tinsideDir: edge.aDir,\n\t\t\t\t\t\t\tt: curveAT,\n\t\t\t\t\t\t\tedge: edge,\n\t\t\t\t\t\t\tedgeT: edge.aT,\n\t\t\t\t\t\t\tcolinear: true,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tif (isCurve.containsPoint(edge.b)) {\n\t\t\t\t\t\tconst curveBT = isCurve.pointT(edge.b)\n\t\t\t\t\t\tconst colinearOutB = edge.bDir.cross(surface.normalP(edge.b))\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t!colinearEdges[nextEdgeIndex] &&\n\t\t\t\t\t\t\tdotCurve2(nextEdge.curve, nextEdge.aT, colinearOutB, sign(nextEdge.deltaT())) > 0\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tps.push({\n\t\t\t\t\t\t\t\tp: edge.b,\n\t\t\t\t\t\t\t\tinsideDir: edge.bDir,\n\t\t\t\t\t\t\t\tt: curveBT,\n\t\t\t\t\t\t\t\tedge: nextEdge,\n\t\t\t\t\t\t\t\tedgeT: nextEdge.aT,\n\t\t\t\t\t\t\t\tcolinear: false,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t\tps.push({\n\t\t\t\t\t\t\tp: edge.b,\n\t\t\t\t\t\t\tinsideDir: edge.bDir.negated(),\n\t\t\t\t\t\t\tt: curveBT,\n\t\t\t\t\t\t\tedge: edge,\n\t\t\t\t\t\t\tedgeT: edge.bT,\n\t\t\t\t\t\t\tcolinear: true,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst edgeTs = edge.edgeISTsWithSurface(surface2)\n\t\t\t\t\tfor (const edgeT of edgeTs) {\n\t\t\t\t\t\tconst p = edge.curve.at(edgeT)\n\t\t\t\t\t\tif (!isCurve.containsPoint(p)) continue\n\t\t\t\t\t\tconst curveT = isCurve.pointT(p)\n\t\t\t\t\t\tassert(!isNaN(curveT))\n\t\t\t\t\t\tconst insideDir = edge\n\t\t\t\t\t\t\t.tangentAt(edgeT)\n\t\t\t\t\t\t\t.cross(surface.normalP(p))\n\t\t\t\t\t\t\t.negated()\n\n\t\t\t\t\t\tconst isTangent = isCurve.tangentAt(curveT)\n\t\t\t\t\t\t//if(!eq0(insideDir.dot(isTangent))) {\n\t\t\t\t\t\t// Edge.edgeISTsWithSurface returns snapped values, so comparison with == is ok:\n\t\t\t\t\t\tif (edgeT == edge.bT) {\n\t\t\t\t\t\t\t// endpoint lies on intersection line\n\t\t\t\t\t\t\tif (!colinearEdges[nextEdgeIndex]) {\n\t\t\t\t\t\t\t\tif (!eq(curveT, isCurve.tMax)) {\n\t\t\t\t\t\t\t\t\tconst pointsToInside = this.pointsToInside3(edge.b, isCurve, curveT, 1)\n\t\t\t\t\t\t\t\t\tassert(pointsToInside != PointVsFace.ON_EDGE)\n\t\t\t\t\t\t\t\t\tif (PointVsFace.INSIDE == pointsToInside) {\n\t\t\t\t\t\t\t\t\t\tps.push({\n\t\t\t\t\t\t\t\t\t\t\tp: edge.b,\n\t\t\t\t\t\t\t\t\t\t\tinsideDir: isTangent,\n\t\t\t\t\t\t\t\t\t\t\tt: curveT,\n\t\t\t\t\t\t\t\t\t\t\tedge: edge,\n\t\t\t\t\t\t\t\t\t\t\tedgeT: edge.bT,\n\t\t\t\t\t\t\t\t\t\t\tcolinear: false,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (!eq(curveT, isCurve.tMin)) {\n\t\t\t\t\t\t\t\t\tconst pointsToInside = this.pointsToInside3(edge.b, isCurve, curveT, -1)\n\t\t\t\t\t\t\t\t\tassert(pointsToInside != PointVsFace.ON_EDGE)\n\t\t\t\t\t\t\t\t\tif (PointVsFace.INSIDE == pointsToInside) {\n\t\t\t\t\t\t\t\t\t\tps.push({\n\t\t\t\t\t\t\t\t\t\t\tp: edge.b,\n\t\t\t\t\t\t\t\t\t\t\tinsideDir: isTangent.negated(),\n\t\t\t\t\t\t\t\t\t\t\tt: curveT,\n\t\t\t\t\t\t\t\t\t\t\tedge: edge,\n\t\t\t\t\t\t\t\t\t\t\tedgeT: edge.bT,\n\t\t\t\t\t\t\t\t\t\t\tcolinear: false,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//let thisSide = -normVector.dot(edge.bDir)\n\t\t\t\t\t\t\t\t//if (eq0(thisSide)) {\n\t\t\t\t\t\t\t\t//    // advanced test\n\t\t\t\t\t\t\t\t//    const dir = -sign(edge.deltaT())\n\t\t\t\t\t\t\t\t//    const iscd = isCurve.at(curveT).to(isCurve.at(curveT + dir * dirFactor *\n\t\t\t\t\t\t\t\t// eps)).dot(normVector) const ecd = edge.curve.at(edgeT).to(edge.curve.at(edgeT + dir\n\t\t\t\t\t\t\t\t// * eps)).dot(normVector) thisSide = sign(ecd - iscd) } let nextSide =\n\t\t\t\t\t\t\t\t// normVector.dot(nextEdge.aDir) if (eq0(nextSide)) { // advanced test const dirFactor\n\t\t\t\t\t\t\t\t// = sign(snap0(isTangent.dot(nextEdge.curve.tangentAt(nextEdge.aT)))) assert(dirFactor\n\t\t\t\t\t\t\t\t// !== 0) const dir = sign(nextEdge.deltaT()) const iscd =\n\t\t\t\t\t\t\t\t// isCurve.at(curveT).to(isCurve.at(curveT + dir * dirFactor * eps)).dot(normVector)\n\t\t\t\t\t\t\t\t// const ecd = nextEdge.curve.at(nextEdge.aT).to(nextEdge.curve.at(nextEdge.aT + dir *\n\t\t\t\t\t\t\t\t// eps)).dot(normVector) nextSide = sign(ecd - iscd) } if (nextSide < 0 || thisSide <\n\t\t\t\t\t\t\t\t// 0) { assert(!eq0(insideDir.dot(isTangent))) // next segment is not colinear and ends\n\t\t\t\t\t\t\t\t// on different side ps.push({ p: edge.b, insideDir: insideDir, t: curveT, edge: edge,\n\t\t\t\t\t\t\t\t// edgeT: edge.bT, colinear: false}) }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (edgeT != edge.aT) {\n\t\t\t\t\t\t\t// edge crosses/touches an intersection curve, neither starts nor ends on it\n\t\t\t\t\t\t\tif (eq0(insideDir.dot(isTangent))) {\n\t\t\t\t\t\t\t\tconst dirFactor = sign(isTangent.dot(edge.curve.tangentAt(edgeT)))\n\t\t\t\t\t\t\t\tconst eps = 1e-4\n\t\t\t\t\t\t\t\tfor (const dir of [-1, 1]) {\n\t\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t\t(-1 == dir * dirFactor && edgeT == edge.minT) ||\n\t\t\t\t\t\t\t\t\t\t(1 == dir * dirFactor && edgeT == edge.maxT) ||\n\t\t\t\t\t\t\t\t\t\t(-1 == dir && curveT == isCurve.tMin) ||\n\t\t\t\t\t\t\t\t\t\t(1 == dir && curveT == isCurve.tMax)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\t\tconst iscd = isCurve\n\t\t\t\t\t\t\t\t\t\t.at(curveT)\n\t\t\t\t\t\t\t\t\t\t.to(isCurve.at(curveT + dir * eps))\n\t\t\t\t\t\t\t\t\t\t.dot(insideDir)\n\t\t\t\t\t\t\t\t\tconst ecd = edge.curve\n\t\t\t\t\t\t\t\t\t\t.at(edgeT)\n\t\t\t\t\t\t\t\t\t\t.to(edge.curve.at(edgeT + dir * dirFactor * eps))\n\t\t\t\t\t\t\t\t\t\t.dot(insideDir)\n\t\t\t\t\t\t\t\t\tif (iscd - ecd > 0) {\n\t\t\t\t\t\t\t\t\t\tps.push({\n\t\t\t\t\t\t\t\t\t\t\tp,\n\t\t\t\t\t\t\t\t\t\t\tinsideDir: isTangent.times(dir),\n\t\t\t\t\t\t\t\t\t\t\tt: curveT,\n\t\t\t\t\t\t\t\t\t\t\tedge: edge,\n\t\t\t\t\t\t\t\t\t\t\tedgeT: edgeT,\n\t\t\t\t\t\t\t\t\t\t\tcolinear: false,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tps.push({\n\t\t\t\t\t\t\t\t\tp: p,\n\t\t\t\t\t\t\t\t\tinsideDir: insideDir,\n\t\t\t\t\t\t\t\t\tt: curveT,\n\t\t\t\t\t\t\t\t\tedge: edge,\n\t\t\t\t\t\t\t\t\tedgeT: edgeT,\n\t\t\t\t\t\t\t\t\tcolinear: false,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//} else {\n\t\t\t\t\t\t//\n\t\t\t\t\t\t//\tconst dirFactor = sign(isTangent.dot(edge.curve.tangentAt(edgeT)))\n\t\t\t\t\t\t//\tconst eps = 1e-4\n\t\t\t\t\t\t//\tconst normVector = surface2.normalP(p)\n\t\t\t\t\t\t//\tfor (const dir of [-1, 1]) {\n\t\t\t\t\t\t//\t\tif (-1 == dir * dirFactor && edgeT == edge.minT ||\n\t\t\t\t\t\t//\t\t\t1 == dir * dirFactor && edgeT == edge.maxT ||\n\t\t\t\t\t\t//\t\t\t-1 == dir && curveT == isCurve.tMin ||\n\t\t\t\t\t\t//\t\t\t1 == dir && curveT == isCurve.tMax) continue\n\t\t\t\t\t\t//\t\tconst iscd = isCurve.at(curveT).to(isCurve.at(curveT + dir * eps)).dot(normVector)\n\t\t\t\t\t\t//\t\tconst ecd = edge.curve.at(edgeT).to(edge.curve.at(edgeT + dir * dirFactor *\n\t\t\t\t\t\t// eps)).dot(normVector) if (iscd > ecd) { ps.push({p, insideDir: isTangent.times(dir *\n\t\t\t\t\t\t// dirFactor), t: curveT, edge: edge, edgeT: edgeT, colinear: false}) } }\n\t\t\t\t\t\t// curveVsSurface(isCurve, curveT, p, surface2) }\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// duplicate 't's are ok, as sometimes a segment needs to stop and start again\n\t\t// should be sorted so that back facing ones are first\n\t\tps.sort((a, b) => a.t - b.t || a.insideDir.dot(isCurve.tangentAt(a.t)))\n\t\treturn ps\n\t}\n\n\ttransform(m4: M4): this {\n\t\tconst mirroring = m4.isMirroring()\n\t\tconst newEdges = Edge.reversePath(this.contour.map(e => e.transform(m4)), mirroring)\n\t\tconst newHoles = this.holes.map(hole => Edge.reversePath(hole.map(e => e.transform(m4)), mirroring))\n\t\treturn new this.constructor(this.surface.transform(m4), newEdges, newHoles, this.name, this.info) as this\n\t}\n\n\tflipped() {\n\t\tconst newEdges = this.contour.map(e => e.flipped()).reverse()\n\t\tconst newHoles = this.holes.map(hole => hole.map(e => e.flipped()).reverse())\n\t\treturn new this.constructor(this.surface.flipped(), newEdges, newHoles, this.name, this.info)\n\t}\n\n\ttoString() {\n\t\treturn (\n\t\t\t'new ' +\n\t\t\tthis.constructor.name +\n\t\t\t'(' +\n\t\t\tthis.surface +\n\t\t\t', [' +\n\t\t\tthis.contour.map(e => '\\n\\t' + e).join() +\n\t\t\t']' +\n\t\t\tthis.holes.map(hole => '\\n\\t\\thole: ' + hole.join()) +\n\t\t\t')'\n\t\t)\n\t}\n\n\ttoSource() {\n\t\treturn (\n\t\t\t'new ' +\n\t\t\tthis.constructor.name +\n\t\t\t'(' +\n\t\t\tthis.surface.toSource() +\n\t\t\t', [' +\n\t\t\tthis.contour.map(e => '\\n\\t' + e.toSource() + ',').join('') +\n\t\t\t'], [' +\n\t\t\tthis.holes.map(hole => '[' + hole.map(e => '\\n\\t' + e.toSource() + ',').join('') + ']').join(',') +\n\t\t\t'])'\n\t\t)\n\t}\n\n\tequals(obj: any): boolean {\n\t\treturn (\n\t\t\tthis == obj ||\n\t\t\t(Object.getPrototypeOf(this) == Object.getPrototypeOf(obj) &&\n\t\t\t\tthis.holes.length == obj.holes.length &&\n\t\t\t\tEdge.loopsEqual(this.contour, obj.contour) &&\n\t\t\t\tthis.holes.every(hole => (obj as Face).holes.some(hole2 => Edge.loopsEqual(hole, hole2))))\n\t\t)\n\t}\n\n\thashCode() {\n\t\tfunction arrayHashCode(array: number[]) {\n\t\t\tlet hashCode = 0\n\t\t\tfor (const val of array) {\n\t\t\t\thashCode = (hashCode * 31 + val) | 0\n\t\t\t}\n\t\t\treturn hashCode\n\t\t}\n\n\t\tfunction loopHashCode(loop: Edge[]) {\n\t\t\treturn arrayHashCode(loop.map(edge => edge.hashCode()).sort(MINUS))\n\t\t}\n\n\t\tlet hashCode = 0\n\t\thashCode = (hashCode * 31 + arrayHashCode(this.holes.map(loop => loopHashCode(loop)).sort(MINUS))) | 0\n\t\thashCode = (hashCode * 31 + loopHashCode(this.contour)) | 0\n\t\thashCode = (hashCode * 31 + this.surface.hashCode()) | 0\n\t\treturn hashCode\n\t}\n\n\tlikeFace(face2: Face) {\n\t\tfunction loopsLike(a: Edge[], b: Edge[]) {\n\t\t\treturn (\n\t\t\t\ta.length == b.length &&\n\t\t\t\tarrayRange(0, a.length, 1).some(offset => a.every((edge, i) => edge.like(b[(offset + i) % a.length])))\n\t\t\t)\n\t\t}\n\n\t\tassertInst(Face, face2)\n\t\treturn (\n\t\t\tthis.surface.like(face2.surface) &&\n\t\t\tthis.holes.length == face2.holes.length &&\n\t\t\tloopsLike(this.contour, face2.contour) &&\n\t\t\tthis.holes.every(hole => face2.holes.some(hole2 => loopsLike(hole, hole2)))\n\t\t)\n\t}\n\n\tgetAllEdges(): Edge[] {\n\t\treturn this.allEdges\n\t}\n\n\taddEdgeLines(mesh: Mesh & { vertices: V3[]; LINES: int[] }) {\n\t\tassert(false, 'buggy, fix')\n\t\tconst vertices = this.contour.flatMap(edge => edge.getVerticesNo0()),\n\t\t\tmvl = mesh.vertices!.length\n\t\tfor (let i = 0; i < vertices.length; i++) {\n\t\t\tmesh.vertices!.push(vertices[i])\n\t\t\tmesh.LINES!.push(mvl + i, mvl + (i + 1) % vertices.length)\n\t\t}\n\t}\n\n\tcontainsPoint(p: V3): boolean {\n\t\tassertVectors(p)\n\t\treturn (\n\t\t\tthis.surface.loopContainsPoint(this.contour, p) != PointVsFace.OUTSIDE &&\n\t\t\t!this.holes.some(hole => this.surface.loopContainsPoint(hole, p) != PointVsFace.OUTSIDE)\n\t\t)\n\t}\n\n\tcontainsPoint2(p: V3): PointVsFace {\n\t\tassertVectors(p)\n\t\tconst contourContainsPoint = this.surface.loopContainsPoint(this.contour, p)\n\t\tif (contourContainsPoint != PointVsFace.INSIDE) return contourContainsPoint\n\t\tfor (const hole of this.holes) {\n\t\t\tconst loopContainsPoint = this.surface.loopContainsPoint(hole, p)\n\t\t\tif (loopContainsPoint != PointVsFace.OUTSIDE) {\n\t\t\t\treturn loopContainsPoint == PointVsFace.ON_EDGE ? PointVsFace.ON_EDGE : PointVsFace.OUTSIDE\n\t\t\t}\n\t\t}\n\t\treturn PointVsFace.INSIDE\n\t}\n\n\t/**\n\t *\n\t * @param line\n\t * @returns t param of the line if there is an intersection, NaN otherwise\n\t */\n\tintersectsLine(line: L3): number {\n\t\tassertInst(L3, line)\n\t\tif (!this.getAABB().intersectsLine(line)) return NaN\n\t\tconst containedIntersectionsTs = this.surface.isTsForLine(line).filter(t => this.containsPoint(line.at(t)))\n\t\tconst nearestPointT = containedIntersectionsTs.withMax(t => -t)\n\n\t\treturn undefined != nearestPointT ? nearestPointT : NaN\n\t}\n\n\ttoMesh(): FaceMesh {\n\t\tconst mesh = new Mesh()\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addIndexBuffer('LINES')\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\tthis.addToMesh(mesh)\n\t\t//mesh.compile()\n\t\treturn mesh\n\t}\n\n\tabstract addToMesh(mesh: FaceMesh): void\n\n\tzDirVolume(): { centroid: V3; volume: number } {\n\t\treturn this.surface.zDirVolume(this.getAllEdges())\n\t}\n\n\tcalcArea(): number {\n\t\treturn this.surface.calculateArea(this.getAllEdges())\n\t}\n\n\tgetLoops(): Edge[][] {\n\t\treturn this.holes.concat(this.contour)\n\t}\n\n\tgetAABB(): AABB {\n\t\treturn this.aabb || (this.aabb = AABB.forAABBs(this.contour.map(e => e.getAABB())))\n\t}\n\n\tpointsToInside3(p: V3, curve: Curve, curveT: number, dir: -1 | 1): PointVsFace {\n\t\tconst eps = 1e-6\n\t\tconst normal = this.surface.normalP(p)\n\t\tconst curveTangent = curve.tangentAt(curveT).times(dir)\n\t\tconst up = normal.cross(curveTangent)\n\t\tconst ecd = curve\n\t\t\t.at(curveT)\n\t\t\t.to(curve.at(curveT + dir * eps))\n\t\t\t.dot(up)\n\t\tlet minValue = Infinity,\n\t\t\tresult,\n\t\t\tadvanced = false\n\t\tfor (const edge of this.getAllEdges()) {\n\t\t\tconst aEqP = edge.a.like(p),\n\t\t\t\tbEqP = edge.b.like(p)\n\t\t\tassert(aEqP == edge.a.like(p))\n\t\t\tassert(bEqP == edge.b.like(p))\n\t\t\tif (!aEqP && !bEqP) continue\n\t\t\tconst edgeTangent = aEqP ? edge.aDir : edge.bDir.negated()\n\t\t\tconst angle = curveTangent.angleRelativeNormal(edgeTangent, normal)\n\t\t\tif (eq0(angle)) {\n\t\t\t\tif (curve.isColinearTo(edge.curve)) {\n\t\t\t\t\treturn PointVsFace.ON_EDGE\n\t\t\t\t}\n\t\t\t\tconst edgeT = aEqP ? edge.aT : edge.bT\n\t\t\t\tconst edgeDir = (aEqP ? 1 : -1) * sign(edge.deltaT())\n\t\t\t\tconst iscd = edge.curve.diff(edgeT, edgeDir * eps).dot(up)\n\t\t\t\t//const iscd = edge.curve.at(edgeT).to(curve.at(edgeT + edgeDir * eps)).dot(up)\n\t\t\t\tconst diff = iscd - ecd\n\t\t\t\tif (diff > 0 && (!advanced || diff < minValue)) {\n\t\t\t\t\tadvanced = true\n\t\t\t\t\tminValue = diff\n\t\t\t\t\tresult = aEqP ? PointVsFace.OUTSIDE : PointVsFace.INSIDE\n\t\t\t\t}\n\t\t\t} else if (!advanced) {\n\t\t\t\tconst angle2 = (angle + TAU) % TAU\n\t\t\t\tif (angle2 < minValue) {\n\t\t\t\t\tminValue = angle2\n\t\t\t\t\tresult = aEqP ? PointVsFace.OUTSIDE : PointVsFace.INSIDE\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (result == undefined) throw new Error()\n\t\treturn result\n\t}\n\n\tpointsToInside2(p: V3, dir: V3): PointVsFace {\n\t\treturn this.pointsToInside3(p, L3.anchorDirection(p, dir), 0, 1)\n\t\t//const normal = this.surface.normalP(p)\n\t\t//let minAngle = Infinity, inOut = false\n\t\t//function test(v, b) {\n\t\t//\tconst angle = (dir.angleRelativeNormal(v, normal) + TAU + NLA_PRECISION / 2) % TAU\n\t\t//\tif (angle <= 2 * NLA_PRECISION) {\n\t\t//\t\treturn true\n\t\t//\t}\n\t\t//\tif (angle < minAngle) {\n\t\t//\t\tminAngle = angle\n\t\t//\t\tinOut = b\n\t\t//\t}\n\t\t//}\n\t\t//for (const edge of this.getAllEdges()) {\n\t\t//\tassert(edge.a.equals(p) || !edge.a.like(p))\n\t\t//\tassert(edge.b.equals(p) || !edge.b.like(p))\n\t\t//\tif (edge.a.equals(p) && test(edge.aDir, false)) return PointVsFace.ON_EDGE\n\t\t//\tif (edge.b.equals(p) && test(edge.bDir.negated(), true)) return PointVsFace.ON_EDGE\n\t\t//}\n\t\t//return inOut ? PointVsFace.INSIDE : PointVsFace.OUTSIDE\n\t}\n}\n\nexport class PlaneFace extends Face {\n\tsurface!: PlaneSurface\n\n\tconstructor(p: P3 | PlaneSurface, contour: Edge[], holes?: Edge[][], name?: string, info?: any) {\n\t\tassert(p instanceof P3 || p instanceof PlaneSurface)\n\t\tsuper(p instanceof P3 ? new PlaneSurface(p) : p, contour, holes, name, info)\n\t}\n\n\tstatic forVertices(planeSurface: PlaneSurface | P3, vs: V3[], ...holeVss: V3[][]): PlaneFace {\n\t\tconst _planeSurface = planeSurface instanceof P3 ? new PlaneSurface(planeSurface) : planeSurface\n\t\tassert(isCCW(vs, _planeSurface.plane.normal1), 'isCCW(vs, planeSurface.plane.normal1)')\n\t\tconst edges = StraightEdge.chain(vs)\n\t\tholeVss.forEach(vs =>\n\t\t\tassert(\n\t\t\t\tdoubleSignedArea(vs, _planeSurface.plane.normal1) >= 0,\n\t\t\t\t'doubleSignedArea(vs, planeSurface.plane.normal1) >= 0',\n\t\t\t),\n\t\t)\n\t\tconst holes = holeVss.map(hvs => StraightEdge.chain(hvs))\n\t\treturn new PlaneFace(planeSurface, edges, holes)\n\t}\n\n\taddToMesh(mesh: FaceMesh) {\n\t\tconst mvl = mesh.vertices.length\n\t\tconst normal = this.surface.plane.normal1\n\t\tconst vertices = this.contour.flatMap(edge => edge.getVerticesNo0())\n\t\tfor (let i = 0; i < vertices.length; i++) {\n\t\t\tmesh.LINES.push(mvl + i, mvl + (i + 1) % vertices.length)\n\t\t}\n\t\tconst holeStarts: number[] = []\n\t\tthis.holes.forEach(hole => {\n\t\t\tholeStarts.push(vertices.length)\n\t\t\tvertices.push(...hole.flatMap(edge => edge.getVerticesNo0()))\n\t\t})\n\t\tconst triangles = triangulateVertices(normal, vertices, holeStarts).map(index => index + mvl)\n\t\tArray.prototype.push.apply(mesh.vertices, vertices)\n\t\tArray.prototype.push.apply(mesh.TRIANGLES, triangles)\n\t\tArray.prototype.push.apply(mesh.normals, arrayFromFunction(vertices.length, () => normal))\n\t}\n\n\tintersectsLine(line: L3): number {\n\t\tassertInst(L3, line)\n\t\tconst lambda = line.isTWithPlane(this.surface.plane)\n\t\tif (!Number.isFinite(lambda)) {\n\t\t\treturn NaN\n\t\t}\n\t\tconst inside = this.containsPoint(line.at(lambda))\n\t\treturn inside ? lambda : NaN\n\t}\n\n\t//intersectPlaneFace(face2: PlaneFace,\n\t//                   thisBrep: BRep,\n\t//                   face2Brep: BRep,\n\t//                   faceMap: Map<Face, Edge[]>,\n\t//                   thisEdgePoints: CustomMap<Edge, { edge: Edge, edgeT: number, p: V3, passEdge?: Edge }[]>,\n\t//                   otherEdgePoints: CustomMap<Edge, { edge: Edge, edgeT: number, p: V3, passEdge?: Edge }[]>,\n\t//                   checkedPairs: CustomSet<Pair<Equalable, Equalable>>) {\n\t//\tassertInst(CustomMap, thisEdgePoints, otherEdgePoints)\n\t//\n\t//\tfunction hasPair(a: Equalable, b: Equalable) {\n\t//\t\treturn checkedPairs.has(new Pair(a, b))\n\t//\t}\n\t//\tfunction addPair(a: Equalable, b: Equalable) {\n\t//\t\treturn checkedPairs.add(new Pair(a, b))\n\t//\t}\n\t//\n\t//\t/**\n\t//\t * @param newEdge generated segment\n\t//\t * @param col1 if newEdge is colinear to an edge of this, the edge in question\n\t//\t * @param col2 same for face2\n\t//\t */\n\t//\tfunction handleNewEdge(newEdge: StraightEdge, col1: Edge, col2: Edge) {\n\t//\t\tif (!col1 && !col2) {\n\t//\t\t\tmapPush(faceMap, face, newEdge)\n\t//\t\t\tmapPush(faceMap, face2, newEdge.flipped())\n\t//\t\t\treturn true\n\t//\t\t}\n\t//\t\tfunction handleEdgeInFace(col1, col2, face, face2, thisBrep, face2Brep, coplanarSameIsInside: boolean,\n\t// has, add) { if (col1 && !col2) { if (hasPair(col1.getCanon(), face2)) return  //add(col1.getCanon(), face2)\n\t// const face2Plane = face2.surface.plane  // NB: a new edge is inserted even though it may be the same as an old\n\t// one // however it indicates that it intersects the other volume here, i.e. the old edge cannot // be counted as\n\t// 'inside' for purposes of reconstitution thisBrep.edgeFaces.get(col1.getCanon()).forEach(faceInfo => { //const\n\t// dot = snap0(face2Plane.normal1.dot(faceInfo.inside)) //if (dot == 0 ? !coplanarSameIsInside : dot < 0) { const\n\t// pointsInsideFace = fff(faceInfo, face2.surface) const edgeInside = pointsInsideFace == INSIDE ||\n\t// !coplanarSameIsInside && pointsInsideFace == COPLANAR_SAME const pushEdge =\n\t// (faceInfo.edge.aDir.like(newEdge.aDir)) ? newEdge : newEdge.flipped()\n\t// assert(faceInfo.edge.aDir.like(pushEdge.aDir)) edgeInside && mapPush(faceMap, faceInfo.face, pushEdge) })  const\n\t// newEdgeInside = face2Plane.normal1.cross(newEdge.aDir) const sVEF1 = splitsVolumeEnclosingFaces(thisBrep,\n\t// col1.getCanon(), newEdgeInside, face2Plane.normal1) let addNewEdge, addNewEdgeFlipped if (addNewEdge = sVEF1 ==\n\t// INSIDE || coplanarSameIsInside && sVEF1 == COPLANAR_SAME) { mapPush(faceMap, face2, newEdge) } const sVEF2 =\n\t// splitsVolumeEnclosingFaces(thisBrep, col1.getCanon(), newEdgeInside.negated(), face2Plane.normal1) if\n\t// (addNewEdgeFlipped = sVEF2 == INSIDE || coplanarSameIsInside && sVEF2 == COPLANAR_SAME) { mapPush(faceMap,\n\t// face2, newEdge.flipped()) } if (addNewEdge || addNewEdgeFlipped || sVEF1 == COPLANAR_SAME && sVEF2 == INSIDE ||\n\t// sVEF2 == COPLANAR_SAME && sVEF1 == INSIDE) { return true } } } const c1 = handleEdgeInFace(col1, col2, face,\n\t// face2, thisBrep, face2Brep, false, hasPair, addPair) const c2 = handleEdgeInFace(col2, col1, face2, face,\n\t// face2Brep, thisBrep, true, (a, b) => hasPair(b, a), (a, b) => addPair(b, a)) if (c1 || c2) return true  if (col1\n\t// && col2) { if (hasPair(col1.getCanon(), col2.getCanon())) return  addPair(col1.getCanon(), col2.getCanon())\n\t// function handleColinearEdgeFaces(col1, col2, thisBrep, face2Brep, coplanarSameIsInside: boolean, thisEdgePoints,\n\t// has, add) { // not entirely sure for what i had the dirInsides in? //const aDirNegatedInside =\n\t// (newEdge.a.like(col2.a) || newEdge.a.like(col2.b)) && splitsVolumeEnclosingCone(face2Brep, newEdge.a,\n\t// newEdge.aDir.negated()) == INSIDE //const bDirInside = (newEdge.b.like(col2.a) || newEdge.b.like(col2.b)) &&\n\t// splitsVolumeEnclosingCone(face2Brep, newEdge.b, newEdge.bDir) == INSIDE\n\t// thisBrep.edgeFaces.get(col1.getCanon()).forEach(faceInfo => { const sVEF = splitsVolumeEnclosingFaces(face2Brep,\n\t// col2.getCanon(), faceInfo.inside, faceInfo.normalAtCanonA) const edgeInside = sVEF == INSIDE ||\n\t// coplanarSameIsInside && sVEF == COPLANAR_SAME const pushEdge = (faceInfo.edge.aDir.like(newEdge.aDir)) ? newEdge\n\t// : newEdge.flipped() edgeInside && mapPush(faceMap, faceInfo.face, pushEdge) }) } handleColinearEdgeFaces(col1,\n\t// col2, thisBrep, face2Brep, true, thisEdgePoints, hasPair, addPair) handleColinearEdgeFaces(col2, col1,\n\t// face2Brep, thisBrep, false, otherEdgePoints, (a, b) => hasPair(b, a), (a, b) => addPair(b, a)) } }   // what\n\t// needs to be generated: new edges on face // points on edges where they are cut by faces so that sub edges will\n\t// be generated for loops // points on ends of edges where the edge will be an edge in the new volume where it goes\n\t// from A to B //         you don't want thos to be marked as 'inside', otherwise invalid faces will be added // if\n\t// a face cuts a corner, nothings needs to be done, as that alone does not limit what adjacent faces will be\n\t// function handleEndPoint(a: IntersectionPointInfo, b: IntersectionPointInfo, newEdge: Edge) { // ends in the\n\t// middle of b's face if (a && !b) { if (!a.colinear && a.edgeT != a.edge.aT && a.edgeT != a.edge.bT) {\n\t// mapPush(thisEdgePoints, a.edge.getCanon(), a) assert(a.edge.isValidT(a.edgeT)) } // else colinear segment ends\n\t// in middle of other face, do nothing } // ends in the middle of a's face if (b && !a) { if (!b.colinear &&\n\t// b.edgeT != b.edge.aT && b.edgeT != b.edge.bT) { mapPush(otherEdgePoints, b.edge.getCanon(), b)\n\t// assert(b.edge.isValidT(b.edgeT)) } // else colinear segment ends in middle of other face, do nothing } if (a &&\n\t// b) { // if a or b is colinear the correct points will already have been added to the edge by handleNewEdge //\n\t// segment starts/ends on edge/edge intersection function foo(a, b, face, face2, thisPlane, face2Plane, thisBrep,\n\t// face2Brep, first, thisEdgePoints) { if (!a.colinear && a.edgeT != a.edge.aT && a.edgeT != a.edge.bT) { if\n\t// (!hasPair(a.edge.getCanon(), b.edge.getCanon())) { addPair(a.edge.getCanon(), b.edge.getCanon()) // ends on a,\n\t// on colinear segment b bT != a.edge.bT && // b can be colinear, so edgeT == aT is possible if (a.p.like(b.edge.a)\n\t// || a.p.like(b.edge.b)) { const corner = a.p.like(b.edge.a) ? b.edge.a : b.edge.b // face2brep corner on edge\n\t// const sVEC1 = splitsVolumeEnclosingCone(face2Brep, corner, a.edge.aDir) const sVEC2 =\n\t// splitsVolumeEnclosingCone(face2Brep, corner, a.edge.aDir.negated()) // if either of these return\n\t// ALONG_EDGE_OR_PLANE, then the breps share a colinear edge  if (INSIDE == sVEC1 || INSIDE == sVEC2) {\n\t// mapPush(thisEdgePoints, a.edge.getCanon(), a) assert(a.edge.isValidT(a.edgeT)) } } else { // edge / edge center\n\t// intersection const aEdgeDir = a.edge.tangentAt(a.edgeT) const bEdgeDir = b.edge.tangentAt(b.edgeT) const\n\t// testVector = aEdgeDir.rejectedFrom(bEdgeDir) assert(!testVector.likeO()) const sVEF1 =\n\t// splitsVolumeEnclosingFaces(face2Brep, b.edge.getCanon(), testVector, thisPlane.normal1) const sVEF2 =\n\t// splitsVolumeEnclosingFaces(face2Brep, b.edge.getCanon(), testVector.negated(), thisPlane.normal1) if (INSIDE ==\n\t// sVEF1 || INSIDE == sVEF2) { mapPush(thisEdgePoints, a.edge.getCanon(), a) assert(a.edge.isValidT(a.edgeT)) } } }\n\t// } }  foo(a, b, face, face2, thisPlane, face2Plane, thisBrep, face2Brep, true, thisEdgePoints) foo(b, a, face2,\n\t// face, face2Plane, thisPlane, face2Brep, thisBrep, false, otherEdgePoints)  } }   assertInst(PlaneFace, face2)\n\t// const face: PlaneFace = this // get intersection const thisPlane = this.surface.plane, face2Plane =\n\t// face2.surface.plane if (thisPlane.isParallelToPlane(face2Plane)) { if (thisPlane.like(face2Plane)) { // normal1\n\t// same and same location in space // addLikeSurfaceFaces(likeSurfaceFaces, this, face2) } return } const isLine =\n\t// L3.fromPlanes(thisPlane, face2Plane) // get intersections of newCurve with other edges of face and face2 const\n\t// ps1 = planeFaceEdgeISPsWithPlane(face, isLine, face2Plane) const ps2 = planeFaceEdgeISPsWithPlane(face2, isLine,\n\t// thisPlane) if (ps1.length == 0 || ps2.length == 0) { // faces to not intersect return }  let col1:\n\t// IntersectionPointInfo, col2: IntersectionPointInfo let in1 = false, in2 = false let i = 0, j = 0, last let\n\t// startP, startDir, startT, startA, startB while (i < ps1.length || j < ps2.length) { assert(i <= ps1.length)\n\t// assert(j <= ps2.length) const a = ps1[i], b = ps2[j] assert(a || b) if (j == ps2.length || i < ps1.length &&\n\t// lt(a.t, b.t)) { last = a in1 = !in1 a.used = true in1 && (col1 = a.colinear && a) i++ } else if (i == ps1.length\n\t// || gt(a.t, b.t)) { last = b in2 = !in2 b.used = true in2 && (col2 = b.colinear && b) j++ } else { // TODO: this\n\t// will break if 3 points on the same t last = a in1 = !in1 in2 = !in2 //if (in1 == in2) { a.used = true b.used =\n\t// true in1 && (col1 = a.colinear && a) in2 && (col2 = b.colinear && b) //} i++ j++ } if (startP && !(in1 && in2))\n\t// { // segment end const newEdge = new StraightEdge(isLine, startP, last.p, startT, last.t, undefined, 'genseg' +\n\t// getGlobalId()) startP = undefined last.used = true if (handleNewEdge(newEdge, col1 && col1.edge, col2 &&\n\t// col2.edge)) { handleEndPoint(startA || col1, startB || col2, newEdge) handleEndPoint(a && a.used && a || col1, b\n\t// && b.used && b || col2, newEdge) } } else if (in1 && in2) { // new segment just started startP = last.p startDir\n\t// = last.insideDir startT = last.t startA = a && a.used && a startB = b && b.used && b } if (!in1 && a && last ==\n\t// a && a.colinear) { checkedPairs.add(new Pair(a.edge.getCanon(), face2)) } if (!in2 && b && (last == b || b.used)\n\t// && b.colinear) { checkedPairs.add(new Pair(b.edge.getCanon(), face)) } } }\n\n\twithHole(holeEdges: Edge[]) {\n\t\treturn new PlaneFace(this.surface, this.contour, [holeEdges])\n\t}\n\n\tpointsToInside(p: V3, dir: V3): PointVsFace {\n\t\treturn this.containsPoint2(p.plus(dir.times(NLA_PRECISION * 8)))\n\t}\n\n\tedgeISPsWithPlane(isLine: L3, plane2: P3): IntersectionPointInfo[] {\n\t\tconst face = this\n\t\tassert(face.surface.plane.containsLine(isLine))\n\t\tassert(plane2.containsLine(isLine))\n\t\tconst plane = face.surface.plane\n\t\tconst ps: IntersectionPointInfo[] = []\n\t\tconst loops = [face.contour].concat(face.holes)\n\t\tloops.forEach(loop => {\n\t\t\tconst colinearEdges = loop.map(edge => edge.colinearToLine(isLine) && -sign(edge.aDir.dot(isLine.dir1)))\n\t\t\tconst isLineOut = isLine.dir1.cross(plane.normal1)\n\n\t\t\tloop.forEach((edge, edgeIndex, edges) => {\n\t\t\t\tconst nextEdgeIndex = (edgeIndex + 1) % edges.length,\n\t\t\t\t\tnextEdge = edges[nextEdgeIndex],\n\t\t\t\t\tcolinearEdge = colinearEdges[edgeIndex]\n\t\t\t\t//console.log(edge.toSource()) {p:V3(2, -2.102, 0),\n\t\t\t\tif (colinearEdge) {\n\t\t\t\t\t// edge colinear to intersection line\n\t\t\t\t\tconst curveAT = isLine.pointT(edge.a),\n\t\t\t\t\t\tcurveBT = isLine.pointT(edge.b)\n\t\t\t\t\t// add interval for colinear segment\n\t\t\t\t\tps.push(\n\t\t\t\t\t\t{ p: edge.a, insideDir: edge.aDir, t: curveAT, edge: edge, edgeT: edge.aT, colinear: true },\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tp: edge.b,\n\t\t\t\t\t\t\tinsideDir: edge.bDir.negated(),\n\t\t\t\t\t\t\tt: curveBT,\n\t\t\t\t\t\t\tedge: edge,\n\t\t\t\t\t\t\tedgeT: edge.bT,\n\t\t\t\t\t\t\tcolinear: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t)\n\t\t\t\t\t// open next interval if necessary\n\t\t\t\t\tconst nextSide =\n\t\t\t\t\t\tcolinearEdges[nextEdgeIndex] ||\n\t\t\t\t\t\tdotCurve2(nextEdge.curve, nextEdge.aT, isLineOut, nextEdge.deltaTSign())\n\t\t\t\t\tif (colinearEdge * nextSide < 0) {\n\t\t\t\t\t\t// side changes\n\t\t\t\t\t\tps.push({\n\t\t\t\t\t\t\tp: nextEdge.a,\n\t\t\t\t\t\t\tinsideDir: edge.bDir,\n\t\t\t\t\t\t\tt: curveBT,\n\t\t\t\t\t\t\tedge: nextEdge,\n\t\t\t\t\t\t\tedgeT: nextEdge.aT,\n\t\t\t\t\t\t\tcolinear: false,\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// not necessarily a straight edge, so multiple intersections are possible\n\t\t\t\t\tconst edgeTs = edge.edgeISTsWithPlane(plane2)\n\t\t\t\t\tassert(edgeTs.every(t => plane2.containsPoint(edge.curve.at(t))), edgeTs)\n\t\t\t\t\tfor (const edgeT of edgeTs) {\n\t\t\t\t\t\tif (edgeT == edge.bT) {\n\t\t\t\t\t\t\t// endpoint lies on intersection line\n\t\t\t\t\t\t\tconst side = dotCurve2(edge.curve, edge.bT, isLineOut, -edge.deltaTSign())\n\t\t\t\t\t\t\tconst nextSide =\n\t\t\t\t\t\t\t\tcolinearEdges[nextEdgeIndex] ||\n\t\t\t\t\t\t\t\tdotCurve2(nextEdge.curve, nextEdge.aT, isLineOut, nextEdge.deltaTSign())\n\t\t\t\t\t\t\tif (side * nextSide < 0) {\n\t\t\t\t\t\t\t\t// next segment is not colinear and ends on different side\n\t\t\t\t\t\t\t\tps.push({\n\t\t\t\t\t\t\t\t\tp: edge.b,\n\t\t\t\t\t\t\t\t\tinsideDir: plane2.normal1.negated(),\n\t\t\t\t\t\t\t\t\tt: isLine.pointT(edge.b),\n\t\t\t\t\t\t\t\t\tedge: edge,\n\t\t\t\t\t\t\t\t\tedgeT: edge.bT,\n\t\t\t\t\t\t\t\t\tcolinear: false,\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (edgeT != edge.aT) {\n\t\t\t\t\t\t\t// edge crosses intersection line, neither starts nor ends on it\n\t\t\t\t\t\t\tconst p = edge.curve.at(edgeT)\n\t\t\t\t\t\t\tassert(plane2.containsPoint(p), edge.toString(), p, edgeT, plane2.distanceToPoint(p))\n\t\t\t\t\t\t\tassert(isLine.containsPoint(p), edge.toString(), p, edgeT, isLine.distanceToPoint(p))\n\t\t\t\t\t\t\tconst insideDir = plane2.normal1.negated()\n\t\t\t\t\t\t\tps.push({\n\t\t\t\t\t\t\t\tp: p,\n\t\t\t\t\t\t\t\tinsideDir: insideDir,\n\t\t\t\t\t\t\t\tt: isLine.pointT(p),\n\t\t\t\t\t\t\t\tedge: edge,\n\t\t\t\t\t\t\t\tedgeT: edgeT,\n\t\t\t\t\t\t\t\tcolinear: false,\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\t// duplicate 't's are ok, as sometimes a segment needs to stop and start again\n\t\t// should be sorted so that back facing ones are first\n\t\tps.sort((a, b) => a.t - b.t || a.insideDir.dot(isLine.dir1))\n\t\treturn ps\n\t}\n}\n\nexport class RotationFace extends Face {\n\tconstructor(rot: Surface, contour: Edge[], holes?: Edge[][], name?: string, info?: any) {\n\t\tsuper(rot, contour, holes, name, info)\n\t}\n\n\tstatic loopDoesNotCrossPlane(loop: Edge[], seamPlane: P3) {\n\t\tlet side = 0\n\n\t\t// returns true if d is on the other side as previous calls\n\t\tfunction checkSide(d: number) {\n\t\t\tif (side == 0) {\n\t\t\t\tside = d\n\t\t\t} else {\n\t\t\t\treturn !side || side * d < 0\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\n\t\tfor (const edge of loop) {\n\t\t\tconst ts = edge.edgeISTsWithPlane(seamPlane)\n\t\t\tif (ts.length == 0) {\n\t\t\t\tif (!(edge.curve instanceof L3) && checkSide(seamPlane.distanceToPointSigned(edge.a))) return false\n\t\t\t} else {\n\t\t\t\tfor (const t of ts) {\n\t\t\t\t\t// TODO: this part probably should be in a separate function\n\t\t\t\t\t// check 'backwards' only if if aT != t\n\t\t\t\t\tif (edge.aT != t) {\n\t\t\t\t\t\tif (checkSide(dotCurve2(edge.curve, t, seamPlane.normal1, -edge.deltaTSign()))) return false\n\t\t\t\t\t}\n\t\t\t\t\tif (edge.bT != t) {\n\t\t\t\t\t\tif (checkSide(dotCurve2(edge.curve, t, seamPlane.normal1, edge.deltaTSign()))) return false\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tgetAABB() {\n\t\tif (this.aabb) return this.aabb\n\t\tthis.aabb = AABB.forAABBs(this.contour.map(e => e.getAABB()))\n\t\tthis.aabb.addPoints(this.surface.getExtremePoints().filter(p => this.containsPoint(p)))\n\t\treturn this.aabb\n\t}\n\n\tunrollLoop(this: this & { surface: ParametricSurface }, edgeLoop: Edge[]) {\n\t\tconst vs: V3[] = []\n\t\tconst stP = this.surface.stPFunc()\n\t\tconst verticesNo0s = edgeLoop.map(edge => edge.getVerticesNo0())\n\t\tconst startEdgeIndex = verticesNo0s.findIndex(edgeVertices => !eq(stP(edgeVertices[0]).x, Math.PI))\n\t\tassert(-1 != startEdgeIndex)\n\t\t// console.log(startEdgeIndex)\n\t\tfor (let i = 0; i < edgeLoop.length; i++) {\n\t\t\tconst edgeIndex = (i + startEdgeIndex) % edgeLoop.length\n\t\t\tfor (let j = 0; j < verticesNo0s[edgeIndex].length; j++) {\n\t\t\t\tconst p = verticesNo0s[edgeIndex][j]\n\t\t\t\tconst localP = stP(p)\n\t\t\t\t// console.log(hint, p.sce, localP.sce)\n\t\t\t\tvs.push(localP)\n\t\t\t}\n\t\t}\n\t\tedgeLoop.forEach((edge, e) => {\n\t\t\tedge.getVerticesNo0().forEach(p => {\n\t\t\t\tvs.push(stP(p))\n\t\t\t})\n\t\t})\n\t\tconsole.log('vs\\n', vs.join('\\n'), vs.length)\n\t\treturn vs\n\t}\n\n\t/**\n\t * f1 cos t + f2 sin t\n\t * tan(phi) = sin / cos\n\t *          = (f1x cos t + f2x sin t) / (f1y cos t + f2y sin t)\n\t *\n\t *          = (-f1x sin t + f2x cos t) / (-f1y sin t + f2y cos t)\n\t */\n\tunrollEllipsoidLoops(edgeLoops: Edge[][], uStep: number, vStep: number) {\n\t\tconst verticesST: V3[] = [],\n\t\t\tvertices: V3[] = [],\n\t\t\tloopStarts = []\n\t\tconst ellipsoid: SemiEllipsoidSurface = this.surface as SemiEllipsoidSurface\n\t\tconst ptpf = ellipsoid.stPFunc()\n\t\tconst testDegeneratePoint =\n\t\t\tellipsoid instanceof SemiEllipsoidSurface\n\t\t\t\t? (nextStart: V3) =>\n\t\t\t\t\t\tnextStart.like(ellipsoid.center.plus(ellipsoid.f3)) ||\n\t\t\t\t\t\tnextStart.like(ellipsoid.center.minus(ellipsoid.f3))\n\t\t\t\t: (nextStart: V3) => nextStart.like((this.surface as ConicSurface).center)\n\t\tfor (const edgeLoop of edgeLoops) {\n\t\t\tloopStarts.push(verticesST.length)\n\t\t\t// console.log(startEdgeIndex)\n\t\t\tfor (let i = 0; i < edgeLoop.length; i++) {\n\t\t\t\tconst ipp = (i + 1) % edgeLoop.length\n\t\t\t\tconst verticesNo0 = edgeLoop[i].getVerticesNo0()\n\t\t\t\tvertices.push(...verticesNo0)\n\t\t\t\tverticesST.push(...verticesNo0.map(v => ptpf(v)))\n\t\t\t\tconst nextStart = edgeLoop[ipp].a\n\t\t\t\t//console.log('BLAH', nextStart.str, ellipsoid.center.plus(ellipsoid.f3).str)\n\n\t\t\t\tif (testDegeneratePoint(nextStart)) {\n\t\t\t\t\tconst bDirLC = ellipsoid.matrixInverse.transformVector(edgeLoop[i].bDir),\n\t\t\t\t\t\taDirLC = ellipsoid.matrixInverse.transformVector(edgeLoop[ipp].aDir)\n\t\t\t\t\tconst inAngle = Math.atan2(-bDirLC.y, -bDirLC.x)\n\t\t\t\t\tconst outAngle = Math.atan2(aDirLC.y, aDirLC.x)\n\n\t\t\t\t\tconst stLast = verticesST.pop()!\n\t\t\t\t\tverticesST.push(new V3(inAngle, stLast.y, 0), new V3(outAngle, stLast.y, 0))\n\t\t\t\t\tvertices.push(vertices.last)\n\t\t\t\t}\n\t\t\t\tverticesST.forEach(({ x: u, y: v }) => {\n\t\t\t\t\tassert(isFinite(u))\n\t\t\t\t\tassert(isFinite(v))\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tlet normals\n\t\tif (this.surface instanceof SemiEllipsoidSurface) {\n\t\t\tnormals = vertices.map(v => ellipsoid.normalP(v))\n\t\t} else {\n\t\t\tconst pN = ellipsoid.normalSTFunc()\n\t\t\tnormals = verticesST.map(({ x, y }) => pN(x, y))\n\t\t}\n\t\tassert(vertices.length == vertices.length)\n\t\t//console.log(verticesST.map(v => v.str).join('\\n'))\n\t\treturn {\n\t\t\tverticesUV: verticesST.map(vST => new V3(vST.x / uStep, vST.y / vStep, 0)),\n\t\t\tvertices: vertices,\n\t\t\tnormals: normals,\n\t\t\tloopStarts: loopStarts,\n\t\t}\n\t}\n\n\tunrollCylinderLoops(loops: Edge[][], uStep: number, vStep: number) {\n\t\tconst vertexLoops = loops.map(loop => loop.flatMap(edge => edge.getVerticesNo0()))\n\t\tconst surface = this.surface as ParametricSurface\n\t\tconst vertices: V3[] = vertexLoops.concatenated()\n\t\t// this.unrollLoop(loop).map(v => new V3(v.x / uStep, v.y / vStep, 0)))\n\t\tconst loopStarts = vertexLoops.reduce((arr, loop) => (arr.push(arr.last + loop.length), arr), [0])\n\t\tconst stPFunc = surface.stPFunc()\n\t\tconst verticesST = vertices.map(v => stPFunc(v))\n\t\tconst verticesUV = verticesST.map(st => new V3(st.x / uStep, st.y / vStep, 0))\n\t\tconst normalST = surface.normalSTFunc()\n\t\tconst normals: V3[] = verticesST.map(({ x, y }) => normalST(x, y))\n\t\treturn { verticesUV: verticesUV, vertices: vertices, normals: normals, loopStarts: loopStarts }\n\t}\n\n\t/**\n\t * at(s, t) = new V3(s cos t, s sin t, t + )\n\t *\n\t * x = 0\n\t *\n\t * s cos t = 0\n\t * ==> s = 0 || cos t = 0\n\t * ==> L3.Z || V3(0, +-s, k * 2 pi)\n\t *\n\t * x = c\n\t * s cos t = c\n\t * ==> V3(c, c sin t / cos t = c tan t, t)\n\t * ==> V3(c, c t, arctan t)\n\t *\n\t *\n\t * x . n = w\n\t *      s cos t nx + s sin t ny + t nz = w\n\t *      s = (w - t nz) / (cos t nx + sub t ny)\n\t * ==> V3(\n\t *          cos t (w - t nz) / (cos t nx + sin t ny)\n\t *          sin t (w - t nz) / (cos t nx + sin t ny)\n\t *          t)\n\t *\n\t *  ==> V3(\n\t *          (w - z arctan t) / (x + t y)\n\t *          (w - z arctan t) / (y + x / t)\n\t *          arctan t)\n\t *\n\t *\n\t *\n\t */\n\taddToMesh(\n\t\tthis: this & { surface: ParametricSurface },\n\t\tmesh: FaceMesh,\n\t\tuStep: number = this.surface.uStep,\n\t\tvStep: number = this.surface.vStep,\n\t) {\n\t\tassertf(() => uStep > 0 && vStep > 0, uStep, vStep, 'Surface: ' + this.surface)\n\t\tconst triangles: int[] = []\n\t\tconst pIJFunc = (i: number, j: number) => this.surface.pSTFunc()(i * uStep, j * vStep)\n\t\tconst normalIJFunc = (i: number, j: number) => this.surface.normalSTFunc()(i * uStep, j * vStep)\n\t\tconst loops = [this.contour].concat(this.holes)\n\t\tconst { vertices, verticesUV, normals, loopStarts } =\n\t\t\tthis.surface instanceof SemiEllipsoidSurface || this.surface instanceof ConicSurface\n\t\t\t\t? this.unrollEllipsoidLoops(loops, uStep, vStep)\n\t\t\t\t: this.unrollCylinderLoops(loops, uStep, vStep)\n\t\tloopStarts.push(vertices.length)\n\n\t\tfor (let vertexLoopIndex = 0; vertexLoopIndex < loops.length; vertexLoopIndex++) {\n\t\t\tconst vertexLoopStart = loopStarts[vertexLoopIndex]\n\t\t\tconst vertexLoopLength = loopStarts[vertexLoopIndex + 1] - vertexLoopStart\n\t\t\tconst base = mesh.vertices!.length + loopStarts[vertexLoopIndex]\n\t\t\tfor (let i = 0; i < vertexLoopLength; i++) {\n\t\t\t\tmesh.LINES.push(base + i, base + (i + 1) % vertexLoopLength)\n\t\t\t}\n\t\t}\n\n\t\tdisableConsole()\n\t\tlet minU = Infinity,\n\t\t\tmaxU = -Infinity,\n\t\t\tminV = Infinity,\n\t\t\tmaxV = -Infinity\n\t\t//console.log('surface', this.surface.str)\n\t\t//console.log(verticesUV)\n\t\t//drPs.push(...verticesUV.map((v, i) => ({p: vertices[i], text: `${i} uv: ${v.toString(x => round10(x,\n\t\t// -4))}`})))\n\t\tverticesUV.forEach(({ x: u, y: v }) => {\n\t\t\tassert(isFinite(u))\n\t\t\tassert(isFinite(v))\n\t\t\tminU = min(minU, u)\n\t\t\tmaxU = max(maxU, u)\n\t\t\tminV = min(minV, v)\n\t\t\tmaxV = max(maxV, v)\n\t\t})\n\t\tif (ParametricSurface.is(this.surface)) {\n\t\t\t//assert(this.surface.boundsSigned(minU * uStep, minV * vStep) > -NLA_PRECISION)\n\t\t\t//assert(this.surface.boundsSigned(maxU * uStep, maxV * vStep) > -NLA_PRECISION)\n\t\t}\n\t\tconst uOffset = floor(minU + NLA_PRECISION),\n\t\t\tvOffset = floor(minV + NLA_PRECISION)\n\t\tconst uRes = ceil(maxU - NLA_PRECISION) - uOffset,\n\t\t\tvRes = ceil(maxV - NLA_PRECISION) - vOffset\n\t\tconsole.log(uStep, vStep, uRes, vRes)\n\t\tif (uRes == 1 && vRes == 1) {\n\t\t\t// triangulate this face as if it were a plane\n\t\t\tconst polyTriangles = triangulateVertices(V3.Z, verticesUV, loopStarts.slice(1, 1 + this.holes.length))\n\t\t\ttriangles.push(...polyTriangles)\n\t\t} else {\n\t\t\tconst partss: int[][][] = new Array(uRes * vRes)\n\n\t\t\tfunction fixUpPart(part: number[], baseU: int, baseV: int) {\n\t\t\t\tassert(baseU < uRes && baseV < vRes, `${baseU}, ${baseV}, ${uRes}, ${vRes}`)\n\t\t\t\tconsole.log('complete part', part, baseU, baseV)\n\t\t\t\t//console.trace()\n\t\t\t\tassert(part.length)\n\t\t\t\tconst cellU = baseU + uOffset,\n\t\t\t\t\tcellV = baseV + vOffset\n\t\t\t\tfor (const index of part) {\n\t\t\t\t\tassert(\n\t\t\t\t\t\tle(cellU, verticesUV[index].x) && le(verticesUV[index].x, cellU + 1),\n\t\t\t\t\t\t`${index} ${verticesUV[index].str} ${cellU} ${cellU}`,\n\t\t\t\t\t)\n\t\t\t\t\tassert(le(cellV, verticesUV[index].y) && le(verticesUV[index].y, cellV + 1))\n\t\t\t\t}\n\t\t\t\tconst pos = baseV * uRes + baseU\n\t\t\t\t;(partss[pos] || (partss[pos] = [])).push(part)\n\t\t\t\t//const outline = partss[pos] || (partss[pos] = [minU + baseU * uStep, minV + baseV * vStep, minU +\n\t\t\t\t// (baseU + 1) * uStep, minV + (baseV + 1) * vStep])\n\t\t\t}\n\n\t\t\t// 'some' instead of forEach so we can return out of the entire function if this.edges crosses no borders\n\t\t\t// and\n\t\t\tfor (let vertexLoopIndex = 0; vertexLoopIndex < loops.length; vertexLoopIndex++) {\n\t\t\t\tlet part: int[] | undefined = undefined,\n\t\t\t\t\tfirstPart: int[] | undefined,\n\t\t\t\t\tfirstPartBaseU: int = -1,\n\t\t\t\t\tfirstPartBaseV: int = -1\n\t\t\t\tlet lastBaseV = -1,\n\t\t\t\t\tlastBaseU = -1\n\t\t\t\tlet partCount = 0\n\t\t\t\tconst vertexLoopStart = loopStarts[vertexLoopIndex]\n\t\t\t\tconst vertexLoopLength = loopStarts[vertexLoopIndex + 1] - vertexLoopStart\n\t\t\t\tfor (let vlvi = 0; vlvi < vertexLoopLength; vlvi++) {\n\t\t\t\t\tconst vx0index = vertexLoopStart + vlvi,\n\t\t\t\t\t\tvx0 = verticesUV[vx0index]\n\t\t\t\t\tconst vx1index = vertexLoopStart + (vlvi + 1) % vertexLoopLength,\n\t\t\t\t\t\tvx1 = verticesUV[vx1index]\n\t\t\t\t\t//console.log('dask', vx0index, vx1index)\n\t\t\t\t\tconst vx01 = vx0.to(vx1)\n\t\t\t\t\tassert(vx0)\n\t\t\t\t\tconst di = vx01.x,\n\t\t\t\t\t\tdj = vx01.y\n\t\t\t\t\tlet vxIndex = vx0index,\n\t\t\t\t\t\tvx = vx0,\n\t\t\t\t\t\tcurrentT = 0\n\t\t\t\t\tlet whileLimit = 400\n\t\t\t\t\twhile (--whileLimit) {\n\t\t\t\t\t\tconst vxu = vx.x,\n\t\t\t\t\t\t\tvxv = vx.y\n\t\t\t\t\t\t// points which are on a grid line are assigned to the cell into which they are going (+\n\t\t\t\t\t\t// NLA_PRECISION * sign(di)) if they are parallel to the gridline (eq0(di)), they belong the\n\t\t\t\t\t\t// the cell for which they are a CCW boundary\n\t\t\t\t\t\tconst baseU = floor(vxu + (!eq0(di) ? sign(di) : -sign(dj)) * NLA_PRECISION) - uOffset\n\t\t\t\t\t\tconst baseV = floor(vxv + (!eq0(dj) ? sign(dj) : sign(di)) * NLA_PRECISION) - vOffset\n\t\t\t\t\t\tassert(baseU < uRes && baseV < vRes, `${baseU}, ${baseV}, ${uRes}, ${vRes}`)\n\t\t\t\t\t\t// figure out the next intersection with a gridline:\n\t\t\t\t\t\t// iNext is the positive horizontal distance to the next vertical gridline\n\t\t\t\t\t\tconst iNext = ceil(sign(di) * vxu + NLA_PRECISION) - sign(di) * vxu\n\t\t\t\t\t\tconst jNext = ceil(sign(dj) * vxv + NLA_PRECISION) - sign(dj) * vxv\n\t\t\t\t\t\tconst iNextT = currentT + iNext / abs(di)\n\t\t\t\t\t\tconst jNextT = currentT + jNext / abs(dj)\n\t\t\t\t\t\t//console.log(vxIndex, vx.str, 'vij', vxu, vxv, 'd', di, dj, 'ijNext', iNext, jNext, 'nextT',\n\t\t\t\t\t\t// iNextT, jNextT)\n\t\t\t\t\t\tif (lastBaseU != baseU || lastBaseV != baseV) {\n\t\t\t\t\t\t\tif (part) {\n\t\t\t\t\t\t\t\tif (!firstPart) {\n\t\t\t\t\t\t\t\t\tfirstPart = part\n\t\t\t\t\t\t\t\t\tfirstPartBaseU = lastBaseU\n\t\t\t\t\t\t\t\t\tfirstPartBaseV = lastBaseV\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tpartCount++\n\t\t\t\t\t\t\t\t\tfixUpPart(part, lastBaseU, lastBaseV)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpart = [vxIndex]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastBaseU = baseU\n\t\t\t\t\t\tlastBaseV = baseV\n\t\t\t\t\t\tcurrentT = min(iNextT, jNextT)\n\t\t\t\t\t\tif (ge(currentT, 1)) {\n\t\t\t\t\t\t\t//console.log('breaking ', vx1index)\n\t\t\t\t\t\t\tpart!.push(vx1index)\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst nextPoint = vx0.lerp(vx1, currentT)\n\t\t\t\t\t\t\tconst nextPointIndex = addVertex(nextPoint.x, nextPoint.y)\n\n\t\t\t\t\t\t\t//console.log('pushing ', nextPointIndex)\n\t\t\t\t\t\t\tpart!.push(nextPointIndex)\n\t\t\t\t\t\t\tvx = nextPoint\n\t\t\t\t\t\t\tvxIndex = nextPointIndex\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tassert(whileLimit, 'whileLimit')\n\t\t\t\t}\n\t\t\t\tif (0 == partCount) {\n\t\t\t\t\t// complete loop\n\t\t\t\t\tassert(false, 'found a hole, try increasing resolution')\n\t\t\t\t}\n\t\t\t\t// at this point, the firstPart hasn't been added, and the last part also hasn't been added\n\t\t\t\t// either they belong to the same cell, or not\n\t\t\t\tif (firstPartBaseU == lastBaseU && firstPartBaseV == lastBaseV) {\n\t\t\t\t\tpart!.pop()\n\t\t\t\t\tfixUpPart(part!.concat(firstPart!), lastBaseU, lastBaseV)\n\t\t\t\t} else {\n\t\t\t\t\tfixUpPart(firstPart!, firstPartBaseU!, firstPartBaseV!)\n\t\t\t\t\tfixUpPart(part!, lastBaseU, lastBaseV)\n\t\t\t\t}\n\t\t\t\tconsole.log('firstPart', firstPart)\n\t\t\t}\n\t\t\tconsole.log('calculated parts', partss)\n\t\t\tconst fieldVertexIndices = new Array((uRes + 1) * (vRes + 1))\n\n\t\t\tfunction addVertex(u: number, v: number): int {\n\t\t\t\tverticesUV.push(new V3(u, v, 0))\n\t\t\t\tnormals.push(normalIJFunc(u, v))\n\t\t\t\treturn vertices.push(pIJFunc(u, v)) - 1\n\t\t\t}\n\n\t\t\tfunction getGridVertexIndex(i: int, j: int): int {\n\t\t\t\tconst index = j * (uRes + 1) + i\n\t\t\t\treturn fieldVertexIndices[index] || (fieldVertexIndices[index] = addVertex(i + uOffset, j + vOffset))\n\t\t\t}\n\n\t\t\tfor (let col = 0; col < uRes; col++) {\n\t\t\t\tlet inside = false\n\t\t\t\tfor (let row = 0; row < vRes; row++) {\n\t\t\t\t\tconst pos = row * uRes + col\n\t\t\t\t\tconst fieldU = uOffset + col,\n\t\t\t\t\t\tfieldV = vOffset + row\n\t\t\t\t\tconst parts = partss[pos]\n\t\t\t\t\tif (!parts) {\n\t\t\t\t\t\tif (inside) {\n\t\t\t\t\t\t\tpushQuad(\n\t\t\t\t\t\t\t\ttriangles,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\tgetGridVertexIndex(col, row),\n\t\t\t\t\t\t\t\tgetGridVertexIndex(col + 1, row),\n\t\t\t\t\t\t\t\tgetGridVertexIndex(col, row + 1),\n\t\t\t\t\t\t\t\tgetGridVertexIndex(col + 1, row + 1),\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// assemble the field with segments in in\n\t\t\t\t\t\tfunction opos(index: int) {\n\t\t\t\t\t\t\tconst p = verticesUV[index],\n\t\t\t\t\t\t\t\tu1 = p.x - fieldU,\n\t\t\t\t\t\t\t\tv1 = p.y - fieldV\n\t\t\t\t\t\t\tassert(\n\t\t\t\t\t\t\t\t-NLA_PRECISION < u1 &&\n\t\t\t\t\t\t\t\t\tu1 < 1 + NLA_PRECISION &&\n\t\t\t\t\t\t\t\t\t-NLA_PRECISION < v1 &&\n\t\t\t\t\t\t\t\t\tv1 < 1 + NLA_PRECISION,\n\t\t\t\t\t\t\t\t'oob u1 v1 ' +\n\t\t\t\t\t\t\t\t\tu1 +\n\t\t\t\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t\t\t\tv1 +\n\t\t\t\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t\t\t\tindex +\n\t\t\t\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t\t\t\tp.str +\n\t\t\t\t\t\t\t\t\t'IF THIS FAILS check canonSeamU is correct',\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\treturn v1 < u1 ? u1 + v1 : 4 - u1 - v1\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twhile (parts.length) {\n\t\t\t\t\t\t\tconst outline: int[] = []\n\t\t\t\t\t\t\tconst startPart = parts[0]\n\t\t\t\t\t\t\tassert(startPart.length > 0)\n\t\t\t\t\t\t\tlet currentPart = startPart\n\t\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\t\toutline.push(...currentPart)\n\t\t\t\t\t\t\t\tconst currentPartEndOpos = opos(currentPart.last)\n\t\t\t\t\t\t\t\tconst nextPartIndex = parts.indexWithMax(\n\t\t\t\t\t\t\t\t\tpart => -mod(opos(part[0]) - currentPartEndOpos, 4),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\tconst nextPart = parts.removeIndex(nextPartIndex)\n\t\t\t\t\t\t\t\tlet currentOpos = currentPartEndOpos\n\t\t\t\t\t\t\t\tconst nextPartStartOpos =\n\t\t\t\t\t\t\t\t\topos(nextPart[0]) > currentOpos ? opos(nextPart[0]) : opos(nextPart[0]) + 4\n\t\t\t\t\t\t\t\tlet nextOpos = ceil(currentOpos + NLA_PRECISION)\n\t\t\t\t\t\t\t\tlet flipping = eq0((currentOpos + NLA_PRECISION) % 1 - NLA_PRECISION)\n\t\t\t\t\t\t\t\t//inside = inside != (!eq0(currentOpos % 1) && currentOpos % 2 < 1)\n\t\t\t\t\t\t\t\twhile (lt(nextOpos, nextPartStartOpos)) {\n\t\t\t\t\t\t\t\t\tswitch (nextOpos % 4) {\n\t\t\t\t\t\t\t\t\t\tcase 0:\n\t\t\t\t\t\t\t\t\t\t\toutline.push(getGridVertexIndex(col, row))\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\t\t\tinside = inside != flipping\n\t\t\t\t\t\t\t\t\t\t\toutline.push(getGridVertexIndex(col + 1, row))\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t\t\toutline.push(getGridVertexIndex(col + 1, row + 1))\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t\t\tinside = inside != flipping\n\t\t\t\t\t\t\t\t\t\t\toutline.push(getGridVertexIndex(col, row + 1))\n\t\t\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tflipping = true\n\t\t\t\t\t\t\t\t\tnextOpos++\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// if the next loop would have completed a top or bottom segment\n\t\t\t\t\t\t\t\tinside = inside != (flipping && nextOpos % 2 == 1 && eq(nextOpos, nextPartStartOpos))\n\t\t\t\t\t\t\t\tcurrentOpos = nextOpos\n\t\t\t\t\t\t\t\tcurrentPart = nextPart\n\t\t\t\t\t\t\t} while (currentPart != startPart)\n\t\t\t\t\t\t\t// triangulate outline\n\t\t\t\t\t\t\tif (outline.length == 3) {\n\t\t\t\t\t\t\t\t// its just a triangle\n\t\t\t\t\t\t\t\ttriangles.push(...outline)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst polyTriangles = triangulateVertices(\n\t\t\t\t\t\t\t\t\tV3.Z,\n\t\t\t\t\t\t\t\t\toutline.map(i => verticesUV[i]),\n\t\t\t\t\t\t\t\t\t[],\n\t\t\t\t\t\t\t\t).map(i => outline[i])\n\t\t\t\t\t\t\t\ttriangles.push(...polyTriangles)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t//console.log('outline', col, row, outline)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//console.log('trinagle', triangles.max(), vertices.length, triangles.length, triangles.toSource(),\n\t\t// triangles.map(col => vertices[col].$).toSource() ) assert(normals.every(n => n.hasLength(1)), normals.find(n\n\t\t// => !n.hasLength(1)).length() +' '+normals.findIndex(n => !n.hasLength(1)))\n\t\tArray.prototype.push.apply(mesh.TRIANGLES, triangles.map(index => index + mesh.vertices!.length))\n\t\tArray.prototype.push.apply(mesh.vertices, vertices)\n\t\tArray.prototype.push.apply(mesh.normals, normals)\n\t\t//this.addEdgeLines(mesh)\n\t\tenableConsole()\n\t}\n\n\taddToMesh2(this: this & { surface: ParametricSurface }, mesh: MeshWith<'TRIANGLES'>) {\n\t\tconst closed = false\n\t\tconst zSplit = 8\n\t\tconst ribs: { value: number; left: number[]; right: number[] }[] = []\n\t\tlet minZ = Infinity,\n\t\t\tmaxZ = -Infinity\n\t\t//let cmp = (a, b) => a.value - b.value\n\t\tconst f = this.surface.pSTFunc()\n\t\tconst normalF = this.surface.normalSTFunc()\n\t\tconst vertexLoops = this.holes.concat([this.contour]).map(loop => this.unrollLoop(loop))\n\t\tvertexLoops.forEach(vertexLoop => {\n\t\t\tvertexLoop.forEach(({ x: d, y: z }) => {\n\t\t\t\tconst index0 = ribs.binaryIndexOf(d, (a, b) => snap(a.value - b, 0))\n\t\t\t\tif (index0 < 0) {\n\t\t\t\t\tribs.splice(-index0 - 1, 0, { value: d, left: [], right: [] })\n\t\t\t\t}\n\t\t\t\tminZ = min(minZ, z)\n\t\t\t\tmaxZ = max(maxZ, z)\n\t\t\t})\n\t\t})\n\t\tconsole.log('zzzs', minZ, maxZ, vertexLoops[0].toSource().replace(/\\), /g, ',\\n'))\n\t\tconst correction = 1\n\t\tvertexLoops.forEach(vertexLoop => {\n\t\t\tvertexLoop.forEach((v0, i, vs) => {\n\t\t\t\tlet v1 = vs[(i + 1) % vs.length],\n\t\t\t\t\tdDiff = v1.x - v0.x\n\t\t\t\t//console.log(v0.sce, v1.sce)\n\t\t\t\tif (eq0(dDiff)) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tif (dDiff < 0) {\n\t\t\t\t\t;[v0, v1] = [v1, v0]\n\t\t\t\t\tdDiff = -dDiff\n\t\t\t\t}\n\t\t\t\tconst index0 = ribs.binaryIndexOf(v0.x, (a, b) => snap(a.value - b, 0))\n\t\t\t\tconst index1 = ribs.binaryIndexOf(v1.x, (a, b) => snap(a.value - b, 0))\n\t\t\t\tribs[index0].right.binaryInsert(v0.y)\n\t\t\t\tfor (let j = (index0 + correction) % ribs.length; j != index1; j = (j + correction) % ribs.length) {\n\t\t\t\t\tconst x = ribs[j].value\n\t\t\t\t\tconst part = (x - v0.x) / dDiff\n\t\t\t\t\tconst interpolated = v1.y * part + v0.y * (1 - part)\n\t\t\t\t\tribs[j].left.binaryInsert(interpolated)\n\t\t\t\t\tribs[j].right.binaryInsert(interpolated)\n\t\t\t\t}\n\t\t\t\tribs[index1].left.binaryInsert(v1.y)\n\t\t\t\t// console.log(ribs.map(r=>r.toSource()).join('\\n'))\n\t\t\t})\n\t\t})\n\t\tconst vertices = [],\n\t\t\ttriangles0: int[] = [],\n\t\t\tnormals = []\n\t\tfor (let i = 0; i < ribs.length; i++) {\n\t\t\tconst ribLeft = ribs[i],\n\t\t\t\tribRight = ribs[(i + 1) % ribs.length]\n\t\t\tassert(ribLeft.right.length == ribRight.left.length)\n\t\t\tfor (let j = 0; j < ribLeft.right.length; j++) {\n\t\t\t\tvertices.push(f(ribLeft.value, ribLeft.right[j]), f(ribRight.value, ribRight.left[j]))\n\t\t\t\tnormals.push(normalF(ribLeft.value, ribLeft.right[j]), normalF(ribRight.value, ribRight.left[j]))\n\t\t\t}\n\t\t}\n\t\t//console.log(ribs.map(r=>r.toSource()).join('\\n'))\n\t\tconst vss = vertices.length,\n\t\t\tdetailVerticesStart = vss\n\t\tconst zInterval = maxZ - minZ,\n\t\t\tzStep = zInterval / zSplit\n\t\tconst detailZs = arrayFromFunction(zSplit - 1, i => minZ + (1 + i) * zStep)\n\t\tconsole.log('detailsZs', detailZs)\n\t\tfor (let i = 0; i < ribs.length; i++) {\n\t\t\tconst d = ribs[i].value\n\t\t\tfor (let j = 0; j < detailZs.length; j++) {\n\t\t\t\tvertices.push(f(d, detailZs[j]))\n\t\t\t\tnormals.push(normalF(d, detailZs[j]))\n\t\t\t}\n\t\t}\n\t\t// console.log('detailVerticesStart', detailVerticesStart, 'vl', vertices.length, vertices.length -\n\t\t// detailVerticesStart, ribs.length) finally, fill in the ribs\n\t\tlet vsStart = 0\n\t\tconst flipped2 = true\n\t\t//for (var i = 0; i < 1; i++) {\n\t\tconst end = closed ? ribs.length : ribs.length - 1\n\t\tfor (let i = 0; i < end; i++) {\n\t\t\tconst ipp = (i + 1) % ribs.length\n\t\t\tlet inside = false,\n\t\t\t\tcolPos = 0\n\t\t\tconst ribLeft = ribs[i],\n\t\t\t\tribRight = ribs[(i + 1) % ribs.length]\n\t\t\tfor (let j = 0; j < detailZs.length + 1; j++) {\n\t\t\t\tconst detailZ = detailZs[j] || 100000\n\t\t\t\tif (!inside) {\n\t\t\t\t\tif (ribLeft.right[colPos] < detailZ && ribRight.left[colPos] < detailZ) {\n\t\t\t\t\t\tif (ribLeft.right[colPos + 1] < detailZ || ribRight.left[colPos + 1] < detailZ) {\n\t\t\t\t\t\t\tpushQuad(\n\t\t\t\t\t\t\t\ttriangles0,\n\t\t\t\t\t\t\t\tflipped2,\n\t\t\t\t\t\t\t\tvsStart + colPos * 2,\n\t\t\t\t\t\t\t\tvsStart + (colPos + 1) * 2,\n\t\t\t\t\t\t\t\tvsStart + colPos * 2 + 1,\n\t\t\t\t\t\t\t\tvsStart + (colPos + 1) * 2 + 1,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tcolPos += 2\n\t\t\t\t\t\t\tif (ribLeft.right[colPos] < detailZ || ribRight.left[colPos] < detailZ) {\n\t\t\t\t\t\t\t\tj--\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpushQuad(\n\t\t\t\t\t\t\t\ttriangles0,\n\t\t\t\t\t\t\t\tflipped2,\n\t\t\t\t\t\t\t\tvsStart + colPos * 2,\n\t\t\t\t\t\t\t\tvsStart + colPos * 2 + 1,\n\t\t\t\t\t\t\t\tdetailVerticesStart + i * detailZs.length + j,\n\t\t\t\t\t\t\t\tdetailVerticesStart + ipp * detailZs.length + j,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\tinside = true\n\t\t\t\t\t\t\tcolPos++\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (ribLeft.right[colPos] < detailZ || ribRight.left[colPos] < detailZ) {\n\t\t\t\t\t\tpushQuad(\n\t\t\t\t\t\t\ttriangles0,\n\t\t\t\t\t\t\tflipped2,\n\t\t\t\t\t\t\tdetailVerticesStart + i * detailZs.length + j - 1,\n\t\t\t\t\t\t\tdetailVerticesStart + ipp * detailZs.length + j - 1,\n\t\t\t\t\t\t\tvsStart + colPos * 2,\n\t\t\t\t\t\t\tvsStart + colPos * 2 + 1,\n\t\t\t\t\t\t)\n\t\t\t\t\t\tinside = false\n\t\t\t\t\t\tcolPos++\n\t\t\t\t\t\tif (ribLeft.right[colPos] < detailZ || ribRight.left[colPos] < detailZ) {\n\t\t\t\t\t\t\tj--\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpushQuad(\n\t\t\t\t\t\t\ttriangles0,\n\t\t\t\t\t\t\tflipped2,\n\t\t\t\t\t\t\tdetailVerticesStart + i * detailZs.length + j,\n\t\t\t\t\t\t\tdetailVerticesStart + i * detailZs.length + j - 1,\n\t\t\t\t\t\t\tdetailVerticesStart + ipp * detailZs.length + j,\n\t\t\t\t\t\t\tdetailVerticesStart + ipp * detailZs.length + j - 1,\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvsStart += ribLeft.right.length * 2\n\t\t}\n\t\t//console.log('trinagle', triangles0.max(), vertices.length, triangles0.length, triangles0.toSource(),\n\t\t// triangles0.map(i => vertices[i].$).toSource() )\n\t\tconst triangles = triangles0.map(index => index + mesh.vertices!.length)\n\t\t//assert(normals.every(n => n.hasLength(1)), normals.find(n => !n.hasLength(1)).length() +'\n\t\t// '+normals.findIndex(n => !n.hasLength(1)))\n\t\tArray.prototype.push.apply(mesh.vertices, vertices)\n\t\tArray.prototype.push.apply(mesh.TRIANGLES, triangles)\n\t\tArray.prototype.push.apply(mesh.normals, normals)\n\t\t//this.addEdgeLines(mesh)\n\t}\n}\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertice leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(ear, triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return p;\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m.prev; // hole touches outer segment; pick lower endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m.next;\n\n    while (p !== stop) {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if ((tan < tanMin || (tan === tanMin && p.x > m.x)) && locallyInside(p, hole)) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    }\n\n    return m;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) &&\n           locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    if ((equals(p1, q1) && equals(p2, q2)) ||\n        (equals(p1, q2) && equals(p2, q1))) return true;\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 &&\n           area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertice index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertice nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","﻿/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\r\n\r\n/* global trig, trigh */\r\n\r\nvar nerdamer = (function(imports) { \r\n    \"use strict\";\r\n\r\n    var version = '0.7.16',\r\n\r\n        _ = new Parser(), //nerdamer's parser\r\n        //import bigInt\r\n        bigInt = imports.bigInt,\r\n        \r\n        Groups = {},\r\n        \r\n        //container of pregenerated primes\r\n        PRIMES = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113\r\n            ,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,\r\n            257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,\r\n            401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,\r\n            563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,\r\n            709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,\r\n            877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,\r\n            1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,\r\n            1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,\r\n            1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,\r\n            1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,\r\n            1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,\r\n            1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,\r\n            1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083],\r\n        //this is the class which holds the utilities which are exported to the core\r\n        //All utility functions which are to be made available to the core should be added to this object\r\n        Utils = {},\r\n        \r\n        //Settings\r\n        Settings = {\r\n            //the max number up to which to cache primes. Making this too high causes performance issues\r\n            init_primes: 1000,\r\n            \r\n            exclude: [],\r\n            //If you don't care about division by zero for example then this can be set to true. \r\n            //Has some nasty side effects so choose carefully.\r\n            suppress_errors: false,\r\n            //the global used to invoke the libary to parse to a number. Normally cos(9) for example returns\r\n            //cos(9) for convenience but parse to number will always try to return a number if set to true. \r\n            PARSE2NUMBER: false,\r\n            //this flag forces the a clone to be returned when add, subtract, etc... is called\r\n            SAFE: false,\r\n            //the symbol to use for imaginary symbols\r\n            IMAGINARY: 'i',\r\n            //the modules used to link numeric function holders\r\n            FUNCTION_MODULES: [Math],\r\n            //Allow certain characters\r\n            ALLOW_CHARS: ['π'],\r\n            //Allow nerdamer to convert multi-character variables\r\n            USE_MULTICHARACTER_VARS: true,\r\n            //Allow changing of power operator\r\n            POWER_OPERATOR: '^',\r\n            //The variable validation regex\r\n            //VALIDATION_REGEX: /^[a-z_][a-z\\d\\_]*$/i\r\n            VALIDATION_REGEX: /^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ][a-z\\d\\_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,\r\n            //Aliases\r\n            ALIASES: {\r\n                'π': 'pi'\r\n            },\r\n            POSITIVE_MULTIPLIERS: false,\r\n            //Cached items\r\n            CACHE: {},\r\n            //Print out warnings or not\r\n            SILENCE_WARNINGS: false,\r\n            //Precision\r\n            PRECISION: 40\r\n        },\r\n        \r\n        //Container for custom operators\r\n        CUSTOM_OPERATORS = {\r\n\r\n        },\r\n        \r\n        //Add the groups. These have been reorganized as of v0.5.1 to make CP the highest group\r\n        //The groups that help with organizing during parsing. Note that for FN is still a function even \r\n        //when it's raised to a symbol, which typically results in an EX\r\n        N   = Groups.N  = 1, // A number\r\n        P   = Groups.P  = 2, // A number with a rational power e.g. 2^(3/5). \r\n        S   = Groups.S  = 3, // A single variable e.g. x. \r\n        EX  = Groups.EX = 4, // An exponential\r\n        FN  = Groups.FN = 5, // A function\r\n        PL  = Groups.PL = 6, // A symbol/expression having same name with different powers e.g. 1/x + x^2\r\n        CB  = Groups.CB = 7, // A symbol/expression composed of one or more variables through multiplication e.g. x*y\r\n        CP  = Groups.CP = 8, // A symbol/expression composed of one variable and any other symbol or number x+1 or x+y\r\n        \r\n        CONST_HASH = Settings.CONST_HASH = '#',\r\n        \r\n        //GLOBALS\r\n        \r\n        PARENTHESIS = Settings.PARENTHESIS = 'parens',\r\n\r\n        //the function which represent vector\r\n        VECTOR = Settings.VECTOR = 'vector',\r\n\r\n        SQRT = Settings.SQRT = 'sqrt',\r\n        \r\n        ABS = Settings.ABS = 'abs',\r\n        \r\n        FACTORIAL = Settings.FACTORIAL = 'factorial',\r\n        \r\n        DOUBLEFACTORIAL = Settings.DOUBLEFACTORIAL = 'dfactorial',\r\n\r\n        //the storage container \"memory\" for parsed expressions\r\n        EXPRESSIONS = [],\r\n        \r\n        //variables\r\n        VARS = {},\r\n        \r\n        //the container used to store all the reserved functions\r\n        RESERVED = [],\r\n\r\n        WARNINGS = [],\r\n        \r\n        /**\r\n         * Checks to see if value is one of nerdamer's reserved names\r\n         * @param {String} value\r\n         * @return boolean\r\n         */\r\n        isReserved = Utils.isReserved = function(value) { \r\n            return RESERVED.indexOf(value) !== -1;\r\n        },\r\n        \r\n        /**\r\n         * Checks to see that all symbols in array are the same\r\n         * @param {Symbol[]} arr\r\n         * @returns {bool}\r\n         */\r\n        allSame = Utils.allSame = function(arr) {\r\n            var last = arr[0];\r\n            for(var i=1, l=arr.length; i<l; i++) \r\n                if(!arr[i].equals(last))\r\n                    return false;\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Use this when errors are suppressible\r\n         * @param {String} msg\r\n         */\r\n        err = function(msg, ErrorObj) {\r\n            if(!Settings.suppress_errors) {\r\n                if(ErrorObj)\r\n                    throw new ErrorObj(msg);\r\n                else\r\n                    throw new Error(msg);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * Used to pass warnings or low severity errors about the library\r\n         * @param msg\r\n         */\r\n        warn = Utils.warn = function(msg) {\r\n            WARNINGS.push(msg);\r\n            if(!Settings.SILENCE_WARNINGS && console && console.warn) {\r\n                console.warn(msg);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * Enforces rule: \"must start with a letter or underscore and \r\n         * can have any number of underscores, letters, and numbers thereafter.\"\r\n         * @param name The name of the symbol being checked\r\n         * @param {String} typ - The type of symbols that's being validated\r\n         * @throws {Exception} - Throws an exception on fail\r\n         */\r\n        validateName = Utils.validateName = function(name, typ) { \r\n            typ = typ || 'variable';\r\n            if(Settings.ALLOW_CHARS.indexOf(name) !== -1)\r\n                return;\r\n            var regex = Settings.VALIDATION_REGEX;\r\n            if(!(regex.test(name)) ) {\r\n                throw new Error(name+' is not a valid '+typ+' name');\r\n            }\r\n        },\r\n        /**\r\n         * Finds intersection of two arrays\r\n         * @param {array} a\r\n         * @param {Array} b\r\n         * @param {Array} compare_fn\r\n         * @returns {Array}\r\n         */\r\n        intersection = Utils.intersection = function(a, b, compare_fn) {\r\n            var c = [];\r\n            if(a.length > b.length) {\r\n                var t = a; a = b; b = t;\r\n            }\r\n            b = b.slice();\r\n            var l = a.length, l2 = b.length;\r\n            for(var i=0; i<l; i++) {\r\n                var item = a[i];\r\n                for(var j=0; j<l2; j++) {\r\n                    var item2 = b[j];\r\n                    if(item2 === undefined) continue;\r\n                    var equals = compare_fn ? compare_fn(item, item2) : item === item2;\r\n                    if(equals) {\r\n                        b[j] = undefined;\r\n                        c.push(item);\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            return c;\r\n        },\r\n        //convert number from scientific format to decimal format\r\n        scientificToDecimal = Utils.scientificToDecimal = function(num) {\r\n            //if the number is in scientific notation remove it\r\n            if(/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\r\n                var zero = '0',\r\n                    parts = String(num).toLowerCase().split('e'), //split into coeff and exponent\r\n                    e = parts.pop(),//store the exponential part\r\n                    l = Math.abs(e), //get the number of zeros\r\n                    sign = e/l,\r\n                    coeff_array = parts[0].split('.');\r\n                if(sign === -1) {\r\n                    num = zero + '.' + new Array(l).join(zero) + coeff_array.join('');\r\n                }\r\n                else {\r\n                    var dec = coeff_array[1];\r\n                    if(dec) l = l - dec.length;\r\n                    num = coeff_array.join('') + new Array(l+1).join(zero);\r\n                }\r\n            }\r\n\r\n            return num;\r\n        },\r\n        /**\r\n         * Checks if number is a prime number\r\n         * @param {Number} n - the number to be checked\r\n         */\r\n        isPrime  = Utils.isPrime = function(n) {\r\n            var q = Math.floor(Math.sqrt(n));\r\n            for (var i = 2; i <= q; i++) {\r\n                if (n % i === 0) return false;\r\n            }\r\n            return true;\r\n        },\r\n        \r\n        /**\r\n         * Checks to see if a number or Symbol is a fraction\r\n         * @param {Number|Symbol} num\r\n         * @returns {boolean}\r\n         */\r\n        isFraction = Utils.isFraction = function(num) {\r\n            if(isSymbol(num)) return isFraction(num.multiplier.toDecimal());\r\n            return (num % 1 !== 0);\r\n        },\r\n        \r\n        /**\r\n         * Checks to see if the object provided is a Symbol\r\n         * @param {Object} obj\r\n         */\r\n        isSymbol = Utils.isSymbol = function(obj) {\r\n            return (obj instanceof Symbol);\r\n        },\r\n        \r\n        /**\r\n         * Checks to see if the object provided is an Expression\r\n         * @param {Object} obj\r\n         */\r\n        isExpression = Utils.isExpression = function(obj) {\r\n            return (obj instanceof Expression);\r\n        },\r\n        \r\n        /**\r\n         * Separates out the variables into terms of variabls. \r\n         * e.g. x+y+x*y+sqrt(2)+pi returns \r\n         * {x: x, y: y, x y: x*y, constants: sqrt(2)+pi\r\n         * @param {type} symbol\r\n         * @param {type} o\r\n         * @returns {undefined}\r\n         * @throws {Error} for expontentials\r\n         */\r\n        separate = Utils.separate = function(symbol, o) {\r\n            symbol = _.expand(symbol);\r\n            o = o || {};\r\n            var insert = function(key, sym) {\r\n                if(!o[key])\r\n                    o[key] = new Symbol(0);\r\n                o[key] = _.add(o[key], sym.clone());\r\n            };\r\n            symbol.each(function(x) {\r\n                if(x.isConstant('all')) \r\n                    insert('constants', x);\r\n                else if(x.group === S) {\r\n                    insert(x.value, x);\r\n                }\r\n                else if(x.group === FN && (x.fname === ABS || x.fname === '')) {\r\n                    separate(x.args[0]);\r\n                }\r\n                else if(x.group === EX || x.group === FN) {\r\n                    throw new Error('Unable to separate. Term cannot be a function!');\r\n                }\r\n                else {\r\n                    insert(variables(x).join(' '), x);\r\n                }\r\n            });\r\n            \r\n            return o;\r\n        },\r\n        \r\n        //fills holes in an array with zero symbol\r\n        fillHoles = Utils.fillHoles = function(arr, n) {\r\n            n = n || arr.length;\r\n            for(var i=0; i<n; i++) {\r\n                var sym = arr[i];\r\n                if(!sym)\r\n                    arr[i] = new Symbol(0);\r\n            }\r\n            return arr;\r\n        },\r\n        \r\n        /**\r\n         * \r\n         * Checks to see if the object provided is a Vector\r\n         * @param {Object} obj\r\n         */\r\n        isVector = Utils.isVector = function(obj) {\r\n            return (obj instanceof Vector);\r\n        },\r\n        \r\n        /**\r\n         * Checks to see if the object provided is a Matrix\r\n         * @param {Object} obj\r\n         */\r\n        isMatrix = Utils.isMatrix = function(obj) {\r\n            return (obj instanceof Matrix);\r\n        },\r\n        \r\n        /**\r\n         * Checks to see if a symbol is in group N\r\n         * @param {Symbol} symbol\r\n         */\r\n        isNumericSymbol = Utils.isNumericSymbol = function(symbol) {\r\n            return symbol.group === N;\r\n        },\r\n\r\n        /**\r\n         * Checks to see if a symbol is a variable with no multiplier nor power\r\n         * @param {Symbol} symbol\r\n         */\r\n        isVariableSymbol = Utils.isVariableSymbol = function(symbol) {\r\n            return symbol.group === S && symbol.multiplier.equals(1) && symbol.power.equals(1);\r\n        },\r\n        \r\n        /**\r\n         * Checks to see if the object provided is an Array\r\n         * @param {Object} arr\r\n         */\r\n        isArray = Utils.isArray = function(arr) {\r\n            return arr instanceof Array;\r\n        },\r\n\r\n        /**\r\n         * Checks to see if a number is an integer\r\n         * @param {Number} num\r\n         */\r\n        isInt = Utils.isInt = function(num) {\r\n            return num % 1 === 0;\r\n        },\r\n\r\n        /**\r\n         * @param {Number|Symbol} obj\r\n         * @returns {boolean}\r\n         */\r\n        isNegative = Utils.isNegative = function(obj) {\r\n            if( isSymbol(obj) ) {\r\n                obj = obj.multiplier;\r\n            }\r\n            return obj.lessThan(0);\r\n        },\r\n        \r\n        /**\r\n         * @param {String} str\r\n         * @returns {String} - returns a formatted string surrounded by brackets\r\n         */\r\n        inBrackets = Utils.inBrackets = function(str) {\r\n            return '('+str+')';\r\n        },\r\n        \r\n        /**\r\n         * A helper function to replace parts of string\r\n         * @param {String} str - The original string\r\n         * @param {Integer} from - The starting index\r\n         * @param {Integer} to - The ending index\r\n         * @param {String} with_str - The replacement string\r\n         * @returns {String} - A formatted string\r\n         */\r\n        stringReplace = Utils.stringReplace = function(str, from, to, with_str) {\r\n            return str.substr(0, from)+with_str+str.substr(to, str.length);\r\n        },\r\n        \r\n        /**\r\n         * the Parser uses this to check if it's allowed to convert the obj to type Symbol\r\n         * @param {Object} obj\r\n         * @returns {boolean}\r\n         */\r\n        customType = Utils.customType = function(obj) {\r\n            return obj !== undefined && obj.custom;\r\n        },\r\n        \r\n        /**\r\n         * Checks to see if numbers are both negative or are both positive\r\n         * @param {Number} a\r\n         * @param {Number} b\r\n         * @returns {boolean}\r\n         */\r\n        sameSign = Utils.sameSign = function(a, b) {\r\n            return (a < 0) === (b < 0);\r\n        },\r\n        \r\n        /**\r\n         * A helper function to replace multiple occurences in a string. Takes multiple arguments\r\n         * @example format('{0} nice, {0} sweet')\r\n         * //returns 'something nice, something sweet'\r\n         */\r\n        format = Utils.format = function() {\r\n            var args = [].slice.call(arguments),\r\n                str = args.shift();\r\n                var new_str = str.replace(/{(\\d+)}/g, function(match, index) {\r\n                    var arg = args[index];\r\n                    return typeof arg === 'function' ? arg() : arg;\r\n                });\r\n\r\n                return new_str;\r\n        },\r\n        \r\n        /**\r\n         * Returns an array of all the keys in an array\r\n         * @param {Object} obj\r\n         * @returns {Array}\r\n         */\r\n        keys = Utils.keys = Object.keys,\r\n\r\n        /**\r\n         * Returns the first encountered item in an object. Items do not have a fixed order in objects \r\n         * so only use if you need any first random or if there's only one item in the object\r\n         * @param {Object} obj\r\n         * @returns {*}\r\n         */\r\n        firstObject = Utils.firstObject = function(obj, key) {\r\n            for( var x in obj ) \r\n                break;\r\n            if(key)\r\n                return x;\r\n            return obj[x];\r\n        },\r\n        \r\n        /**\r\n         * Substitutes out variables for two symbols, parses them to a number and them compares them numerically\r\n         * @param {Symbol} sym1\r\n         * @param {Symbol} sym2\r\n         * @param {String[]} vars - an optional array of variables to use\r\n         * @returns {bool}\r\n         */\r\n        compare = Utils.compare = function(sym1, sym2, vars) {\r\n            var n = 5; //a random number between 1 and 5 is good enough\r\n            var scope = {}; // scope object with random numbers generated using vars\r\n            var comparison;\r\n            for(var i=0; i<vars.length; i++) \r\n                scope[vars[i]] = new Symbol(Math.floor(Math.random()*n)+1);\r\n            block('PARSE2NUMBER', function() {\r\n                comparison = _.parse(sym1, scope).equals(_.parse(sym2, scope));\r\n            });\r\n            return comparison;\r\n        },\r\n        \r\n        /**\r\n         * Returns the minimum number in an array\r\n         * @param {Array} arr\r\n         * @returns {Number} \r\n         */\r\n        arrayMax = Utils.arrayMax = function(arr) {\r\n            return Math.max.apply(undefined, arr);\r\n        },\r\n\r\n        /**\r\n         * Returns the maximum number in an array\r\n         * @param {Array} arr\r\n         * @returns {Number} \r\n         */\r\n        arrayMin = Utils.arrayMin = function(arr) {\r\n            return Math.min.apply(undefined, arr);\r\n        },\r\n        \r\n        /**\r\n         * Clones array with clonable items\r\n         * @param {Array} arr\r\n         * @returns {Array}\r\n         */\r\n        arrayClone = Utils.arrayClone = function(arr) {\r\n            var new_array = [], l = arr.length;\r\n            for(var i=0; i<l; i++) new_array[i] = arr[i].clone();\r\n            return new_array;\r\n        },\r\n        \r\n        comboSort = Utils.comboSort = function(a, b) {\r\n            var l = a.length,\r\n                combined = []; //the linker\r\n            for(var i=0; i<a.length; i++) {\r\n                combined.push([a[i], b[i]]); //create the map\r\n            }\r\n\r\n            combined.sort(function(x, y) {\r\n                return x[0] - y[0];\r\n            });\r\n\r\n            var na = [], nb = [];\r\n\r\n            for(i=0; i<l; i++) {\r\n                na.push(combined[i][0]);\r\n                nb.push(combined[i][1]);\r\n            }\r\n\r\n            return [na, nb];\r\n        },\r\n        \r\n        decompose_fn = Utils.decompose_fn = function(fn, wrt, as_obj) { \r\n            var ax, a, x, b;\r\n            if(fn.group === CP) {\r\n                var t = _.expand(fn.clone()).stripVar(wrt); \r\n                ax = _.subtract(fn.clone(), t.clone());\r\n                b = t;\r\n            }\r\n            else\r\n                ax = fn.clone(); \r\n            a = ax.stripVar(wrt);\r\n            x = _.divide(ax.clone(), a.clone());\r\n            b = b || new Symbol(0);\r\n            if(as_obj) \r\n                return {\r\n                    a: a,\r\n                    x: x,\r\n                    ax: ax,\r\n                    b: b\r\n                };\r\n            return [a, x, ax, b];\r\n        },\r\n         /**\r\n         * Rounds a number up to x decimal places\r\n         * @param {Number} x\r\n         * @param {Number} s\r\n         */\r\n        _round = Utils.round = function(x, s) { \r\n            s = typeof s === 'undefined' ? 14 : s;\r\n            return Math.round( x*Math.pow( 10,s ) )/Math.pow( 10,s );\r\n        },\r\n        \r\n        /**\r\n         * This method traverses the symbol structure and grabs all the variables in a symbol. The variable\r\n         * names are then returned in alphabetical order.\r\n         * @param {Symbol} obj\r\n         * @param {Boolean} poly \r\n         * @param {Object} vars - An object containing the variables. Do not pass this in as it generated \r\n         * automatically. In the future this will be a Collector object.\r\n         * @returns {String[]} - An array containing variable names\r\n         */\r\n        variables = Utils.variables = function(obj, poly, vars) { \r\n            vars = vars || {\r\n                c: [],\r\n                add: function(value) {\r\n                    if(this.c.indexOf(value) === -1 && isNaN(value)) this.c.push(value);\r\n                }\r\n            };\r\n\r\n            if(isSymbol(obj)) { \r\n                var group = obj.group,\r\n                    prevgroup = obj.previousGroup;\r\n                if(group === EX) variables(obj.power, poly, vars);\r\n                \r\n                if(group === CP || group === CB || prevgroup === CP || prevgroup === CB) {\r\n                    for(var x in obj.symbols) variables(obj.symbols[x], poly, vars);\r\n                }\r\n                else if(group === S || prevgroup === S) { \r\n                    //very crude needs fixing. TODO\r\n                    if(!(obj.value === 'e' || obj.value === 'pi'))\r\n                        vars.add(obj.value);\r\n                }\r\n                else if(group === PL || prevgroup === PL) {\r\n                    variables(firstObject(obj.symbols), poly, vars);\r\n                }\r\n                else if(group === EX) { \r\n                    if(!isNaN(obj.value)) vars.add(obj.value);\r\n                    variables(obj.power, poly, vars);\r\n                }\r\n                else if(group === FN && !poly) { \r\n                    for(var i=0; i<obj.args.length; i++) {\r\n                        variables(obj.args[i], poly, vars);\r\n                    }\r\n                }\r\n            }\r\n            return vars.c.sort();\r\n        },\r\n        \r\n        getU = Utils.getU = function(symbol) {\r\n            //start with u\r\n            var u = 'u', //start with u\r\n                v = u, //init with u\r\n                c = 0, //postfix number\r\n                vars = variables(symbol);\r\n            //make sure this variable isn't reserved and isn't in the variable list\r\n            while(!(RESERVED.indexOf(v) === -1 && vars.indexOf(v) === -1))  \r\n                v = u + c++;\r\n            //get an empty slot. It seems easier to just push but the\r\n            //problem is that we may have some which are created by clearU\r\n            for(var i=0, l=RESERVED.length; i<=l; i++)\r\n                //reserved cannot equals false or 0 so we can safely check for a falsy type\r\n                if(!RESERVED[i]) {\r\n                    RESERVED[i] = v; //reserve the variable\r\n                    break;\r\n                }\r\n            return v;\r\n        },\r\n        \r\n        clearU = Utils.clearU = function(u) {\r\n            var indx = RESERVED.indexOf(u);\r\n            if(indx !== -1)\r\n                RESERVED[indx] = undefined;\r\n        },\r\n        \r\n        /**\r\n         * Loops through each item in object and calls function with item as param\r\n         * @param {Object|Array} obj\r\n         * @param {Function} fn \r\n         */\r\n        each = Utils.each = function(obj, fn) {\r\n            if(isArray(obj)) {\r\n                var l = obj.length;\r\n                for(var i=0; i<l; i++) fn.call(obj, i);\r\n            }\r\n            else {\r\n                for(var x in obj) if(obj.hasOwnProperty(x)) fn.call(obj, x);\r\n            }\r\n        },\r\n        \r\n        /**\r\n         * Checks to see if a number is an even number\r\n         * @param {Number} num\r\n         * @returns {boolean}\r\n         */\r\n        even = Utils.even = function(num) {\r\n            return num % 2 === 0;\r\n        },\r\n        \r\n        /**\r\n         * Checks to see if a fraction is divisible by 2\r\n         * @param {Number} num\r\n         * @returns {boolean}\r\n         */\r\n        evenFraction = Utils.evenFraction = function(num) {\r\n            return 1/( num % 1) % 2 === 0;\r\n        },\r\n        \r\n        /**\r\n         * Strips duplicates out of an array\r\n         * @param {Array} arr\r\n         */\r\n        arrayUnique = Utils.arrayUnique = function(arr) {\r\n            var l = arr.length, a = [];\r\n            for(var i=0; i<l; i++) {\r\n                var item = arr[i];\r\n                if(a.indexOf(item) === -1) a.push(item);\r\n            }\r\n            return a;\r\n        },\r\n        \r\n        /**\r\n         * Reserves the names in an object so they cannot be used as function names\r\n         * @param {Object} obj\r\n         */\r\n        reserveNames = Utils.reserveNames = function(obj) {\r\n            var add = function(item) {\r\n                if(RESERVED.indexOf(item) === -1) RESERVED.push(item);\r\n            };\r\n            \r\n            if(typeof obj === 'string') add(obj);\r\n            else {\r\n                each(obj, function(x) {\r\n                    add(x);\r\n                });\r\n            }  \r\n        },\r\n\r\n        /**\r\n         * Removes an item from either an array or an object. If the object is an array, the index must be \r\n         * specified after the array. If it's an object then the key must be specified\r\n         * @param {Object|Array} obj\r\n         * @param {Integer} indexOrKey\r\n         */\r\n        remove = Utils.remove = function( obj, indexOrKey ) {\r\n            var result;\r\n            if( isArray(obj) ) {\r\n                result =  obj.splice(indexOrKey, 1)[0];\r\n            }\r\n            else {\r\n                result = obj[indexOrKey];\r\n                delete obj[indexOrKey];\r\n            }\r\n            return result;\r\n        },\r\n        \r\n        /**\r\n         * Creates a temporary block in which one of the global settings is temporarily modified while\r\n         * the function is called. For instance if you want to parse directly to a number rather than have a symbolic\r\n         * answer for a period you would set PARSE2NUMBER to true in the block.\r\n         * @example block('PARSE2NUMBER', function(){//symbol being parsed to number}, true);\r\n         * @param {String} setting - The setting being accessed\r\n         * @param {Function} f \r\n         * @param {boolean} opt - The value of the setting in the block\r\n         * @param {String} obj - The obj of interest. Usually a Symbol but could be any object\r\n         */\r\n        block = Utils.block = function(setting, f, opt, obj) {\r\n            var current_setting = Settings[setting];\r\n            Settings[setting] = opt === undefined ? true : !! opt;\r\n            var retval = f.call(obj);\r\n            Settings[setting] = current_setting;\r\n            return retval;\r\n        },\r\n\r\n        /**\r\n         * Converts function arguments to an array. Now used by gcd and lcm in Algebra.js :)\r\n         * @param {Object} obj - arguments obj\r\n         */\r\n        arguments2Array = Utils.arguments2Array = function(obj) {\r\n            return [].slice.call(obj);\r\n        },\r\n        \r\n        getCoeffs = Utils.getCoeffs = function(symbol, wrt) {\r\n            var coeffs = [];\r\n            //we loop through the symbols and stick them in their respective \r\n            //containers e.g. y*x^2 goes to index 2\r\n            symbol.each(function(term) {\r\n                if(term.contains(wrt)) {\r\n                    //we want only the coefficient which in this case will be everything but the variable\r\n                    //e.g. a*b*x -> a*b if the variable to solve for is x\r\n                    var coeff = term.stripVar(wrt),\r\n                        x = _.divide(term.clone(), coeff.clone()),\r\n                        p = x.power.toDecimal();\r\n                }\r\n                else {\r\n                    coeff = term;\r\n                    p = 0;\r\n                }\r\n                var e = coeffs[p];\r\n                //if it exists just add it to it\r\n                coeffs[p] = e ? _.add(e, coeff) : coeff;\r\n                \r\n            }, true);\r\n            \r\n            for(var i=0; i<coeffs.length; i++)\r\n                if(!coeffs[i])\r\n                    coeffs[i] = new Symbol(0);\r\n            //fill the holes\r\n            return coeffs;\r\n        },\r\n        \r\n        /**\r\n         * Using a regex to get between brackets can be a bit tricky. This functions makes it more abstract \r\n         * to fetch between brackets within a string from any given index. If the starting index is a bracket \r\n         * then it will fail. returns [matched_string, first_bracket_index, end_bracket_index]\r\n         * @param {Char} ob - open bracket\r\n         * @param {Char} cb - close bracket\r\n         * @param {String} str - The string being read\r\n         * @param {Integer} start - Where in the string to start\r\n         * @returns {Array}\r\n         */\r\n        betweenBrackets = function(ob, cb, str, start) {\r\n            start = start || 0;\r\n            var l = str.length,\r\n                open = 0, fb;\r\n            for(var i=start; i<l; i++) {\r\n                var ch = str.charAt(i); //get the character at this position\r\n\r\n                if(ch === ob) { //if an open bracket was found\r\n                    if(fb === undefined) fb = i+1;//mark the first bracket found\r\n                    open++; //mark a new open bracket\r\n                }\r\n                if(ch === cb) { //if a close bracket was found\r\n                    open--; //close a bracket\r\n                    if(open === 0 && fb !== undefined) {\r\n                        var nb = i;\r\n                        return [str.substring(fb, nb), fb, nb];\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return [];\r\n        },\r\n        \r\n        /**\r\n         * A helper function to make substitutions\r\n         * @param {Object} subs\r\n         */\r\n        format_subs = function(subs) {\r\n            for(var x in subs) subs[x] = _.parse(subs[x].toString());\r\n            return subs;\r\n        },\r\n        generatePrimes = Utils.generatePrimes = function(upto) {\r\n            //get the last prime in the array\r\n            var last_prime = PRIMES[PRIMES.length-1] || 2; \r\n            //no need to check if we've already encountered the number. Just check the cache.\r\n            for(var i=last_prime; i<upto; i++) {\r\n                if(isPrime(i)) PRIMES.push(i);\r\n            }\r\n        },\r\n        evaluate = Utils.evaluate = function (symbol) {\r\n            return block('PARSE2NUMBER', function() {\r\n                return _.parse(symbol);\r\n            }, true);\r\n        },\r\n        convertToVector = Utils.convertToVector = function(x) {\r\n            if(isArray(x)) {\r\n                var vector = new Vector([]);\r\n                for(var i=0; i<x.length; i++) \r\n                    vector.elements.push(convertToVector(x[i]));\r\n                return vector;\r\n            }\r\n            //Ensure that a nerdamer ready object is returned\r\n            if(!isSymbol(x))\r\n                return _.parse(x);\r\n            return x;\r\n        },\r\n        //This object holds additional functions for nerdamer. Think of it as an extension of the Math object.\r\n        //I really don't like touching objects which aren't mine hence the reason for Math2. The names of the \r\n        //functions within are pretty self-explanatory.\r\n        Math2 = {\r\n            csc: function(x) { return 1/Math.sin(x); },\r\n            sec: function(x) { return 1/Math.cos(x); },\r\n            cot: function(x) { return 1/Math.tan(x); },\r\n            // https://gist.github.com/jiggzson/df0e9ae8b3b06ff3d8dc2aa062853bd8\r\n            erf: function(x) {\r\n                var t = 1/(1+0.5*Math.abs(x));\r\n                var result = 1-t*Math.exp( -x*x -  1.26551223 +\r\n                        t * ( 1.00002368 +\r\n                        t * ( 0.37409196 +\r\n                        t * ( 0.09678418 +\r\n                        t * (-0.18628806 +\r\n                        t * ( 0.27886807 +\r\n                        t * (-1.13520398 +\r\n                        t * ( 1.48851587 +\r\n                        t * (-0.82215223 +\r\n                        t * ( 0.17087277)))))))))\r\n                    );\r\n                return x >= 0 ? result : -result;\r\n            },\r\n            bigpow: function(n, p) { \r\n                if(!(n instanceof Frac))\r\n                    n = Frac.create(n);\r\n                if(!(p instanceof Frac))\r\n                    p = Frac.create(p);\r\n                var retval = new Frac(0);\r\n                if(p.isInteger()) {\r\n                    retval.num = n.num.pow(p.toString());\r\n                    retval.den = n.den.pow(p.toString());\r\n                }\r\n                else {\r\n                    var num = Frac.create(Math.pow(n.num, p.num));\r\n                    var den = Frac.create(Math.pow(n.den, p.num));\r\n\r\n                    retval.num = Math2.nthroot(num, p.den.toString());\r\n                    retval.den = Math2.nthroot(den, p.den);\r\n                }  \r\n                return retval;\r\n            },\r\n            //http://stackoverflow.com/questions/15454183/how-to-make-a-function-that-computes-the-factorial-for-numbers-with-decimals\r\n            gamma: function(z) {\r\n                var g = 7;\r\n                var C = [\r\n                    0.99999999999980993, \r\n                    676.5203681218851, \r\n                    -1259.1392167224028,\r\n                    771.32342877765313, \r\n                    -176.61502916214059, \r\n                    12.507343278686905, \r\n                    -0.13857109526572012, \r\n                    9.9843695780195716e-6, \r\n                    1.5056327351493116e-7]\r\n                ;\r\n\r\n                if (z < 0.5) \r\n                    return Math.PI / (Math.sin(Math.PI * z) * Math2.gamma(1 - z));\r\n                else {\r\n                    z -= 1;\r\n\r\n                    var x = C[0];\r\n                    for (var i = 1; i < g + 2; i++)\r\n                    x += C[i] / (z + i);\r\n\r\n                    var t = z + g + 0.5;\r\n                    return Math.sqrt(2 * Math.PI) * Math.pow(t, (z + 0.5)) * Math.exp(-t) * x;\r\n                }\r\n            },\r\n            //factorial\r\n            bigfactorial: function(x) {\r\n                var retval = new Frac(1);\r\n                for (var i = 2; i <= x; i++) \r\n                    retval = retval.multiply(new Frac(i));\r\n                return retval;\r\n            },\r\n            //https://en.wikipedia.org/wiki/Logarithm#Calculation\r\n            bigLog: function(x) {\r\n                var CACHE = [\"-253631954333118718762629409109262279926288908775918712466601196032/39970093576053625963957478139049824030906352922262642968060706375\",\"0\",\"24553090145869607172412918483124184864289170814122579923404694986469653261608528681589949629750677407356463601998534945057511664951799678336/35422621391945757431676178435630229283255250779216421054188228659061954317501699707236864189383591478024245495110561124597124995986978302375\",\"369017335340917140706044240090243368728616279239227943871048759140274862131699550043150713059889196223917527172547/335894053932612728969975338549993764554481173661218585876475837409922537622385232776657791604345125227005476864000\",\"24606853025626737903121303930100462245506322607985779603220820323211395607931699126390918477501325805513849611930008427268176602460462988972957593458726734897129954728102144/17750092415977639787139561330326170936321452137635322313122938207611787444311735251389066106937796085669460151963285086542745859461943369606018450213014148175716400146484375\",\"399073568781976806715759409052286641738926636328983929439450824555613704676637191564699164303012247386095942144825603522401740680808466858044/247958349743620302021733249049411604982786755454514947379317600613433680222511897950658049325685140346169718465773927872179874971908848116625\",\"1468102989495846944084741146947295378041808701256909016224309866143294556551407470861354311593351276612463858816796714569499021375899793849136855085849133702029337910502448189055357182595424959360/819363879309286303497217527375463120404739098260200279520788950777458900438307356738082930586032462601215802636320993648007907724899611296693997216938989854861043298494990214825163523387600982777\",\"5896704855274661767824574093605344871722790278354431422729640950821239030785642943033153793245906863203822369276271050164634206965056233097479117980782641839669/3030306850569309344013726745100070601277982132543905537366562638553198167007159067544789592089960911065181606283478843359856123992707598685058297067179343872000\",\"76631772943534985713873427262830314617912556928476573358548256872141516989538374761909611879922349479420014771499018155447198112155515453671128814488139633810493264352294560043912066253026059140653027326566801398784/36852092933388988649396042883218509607503204211148493545892849595498822817623842579026942621098851631842754395231561679671400197056377380063233740202370686144673585955581403046886083948450136247134308381940165804875\",\"3159076083816399509754948610929467278257473888282947311280653574634802580912280940686954763313882823327077171624015737719617373932318151594325834524000275847475866299387913048/1437757485694188822758304467756419845842037623148461107362957994816554782989250555362514354661961482939226272309026092009962414616417412938087494467254146002233028411865234375\",\"22266067259907364984531611601870291368272674573653403965630628996687370994139884833897773468149149664829922302484782423514167405397665098388400450149078982462318781750661005833037235183394221496186539779712428265837926417581952/9670030144664428565128962309657100138096047028794689249320859276197340398920725569428532293373676415359965773460364494998334259893079003125373872108770534788283842907318071170285038777091588292539102269617376180390982915567375\",\"14604654564989239958569331443385369522850975185358647132770022716433280072271007767111036877803328768910274400515590151934676819262085211828028638417329558229123989556376108454497813055/6090614019162516693013973409650613208227889078878781039105047015752493519149314227721984436973374032279421344818329285207124280297611253861173835238379831004010748379874393292231671808\",\"1901241885407696031217292877862925220917660047127261026827869027159993239567933534052663335498281439239753018507182016153657409777749792228538380379703411298411623469292891476969894084838876001545818141543890273256985768690847587711270930688/765116019778838839812655402103512685695769161212360553099732689795578904762091216998790589926057819838537805856579109910198553330075924857419395160755642371550113347465300208422126945265887065434116781678702741657275181694851670325469434625\",\"139459806786604751793737926146840623607010208216289543036026206208962059593900745886202214788747453279179283344350478734275973878932538430194363355795823581315329311220701640235653288975569812161436/54371368534412517053056101353618694718215711767266376573138772968257303578467926450212293233332401067673270853953399269852376592855992724934941173346260129257754416412476202526978443681584633116375\",\"1045669091124493070709683241190022970908640501171378776604126771144008324358233819560649021940145166254659028524319517244711645162132513416238958170819347361185944945680269442845829390112062101255500836072082817820950448463314034677353723256969344/396228259004446234921310936915931611736815598535963504660076315228798989932959459406702091180060429080345146735173591749448509810270759531977278642135591672189002006272326131885315743181289970885337574780897529347356567086535505950450897216796875\",\"9912919238915437302006264477931031611447467070103973106567538528951878797932559935860738745374437522819124347510590800370471910492338584284092534264608801221235029062881964101996762011296996851893455828946521/3660537472668264151218961634689665210933936249986285290553357254224360417386515311493310199319523687171757653216994741150377508234317025158302057758196429623723072084157928224798322861732880034847243894784000\",\"9263710175433181746575186369318246002919895649622127410824041370079225200282403368319370743363303164313395723904510539050157032684710468364067204876434546848634842333436957245275217583248805993142227630297924119330553308466662488683624783307023014909360640/3341177182697517248552428837661919299725031035849865632511882688786226888137634168024976033652753689210700218163621739078534353578510364301481093730054725078138658805025014615651043313990684347632166030359086885561104034510990826655289288319840595753002771\",\"5116082230713622171832327542439052727465114322479570603905499496221224653983960598946033081212909066917137546065542953865612718836914393275681318667667521726785633638189373998191090501201427906618075889744489190209584/1805752553736060443820406101277706970767657006346276183748749630179442318063568286372320188433843729960294965366346522303898609655762491623098453269916163621089005711823488749297418113474056676109581110715068124438875\",\"246569125619713282434448566970352231845414317018379160824176638351574938993535464763890962336882760882398479702237564384291290459961036068916857265499633061660562532011248501476114401629839742058389195725393702000011860799793778295606988057303225493814005789533570432/85307063020836305797178273029353623060860009152114361453434032434699636078115114412588719432277441055049132559782203988387794711585368296817222565434951256788867244687081233632650953850383220864394261763844194948389861147622944651546912394593164406926489862036343375\",\"133672026303452911046163998480860917119290576658330909785707604886881155606725822685088929236266583416708668502760907677019598002175122453170574729028452721476464728566191464897928696630979863154661704374206171469014225143/45398130975270785045482567762871405072140548998125471025451666500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"6041693953360002800224091673336562508913199995987479264605216252220579740134601435770085920869376641180763419907442721705887169884230643795126568815123647603047739799302562095542459344811429882053086550900803768964612193941424128649976704727183797495759082741166938351872/2016766992122395667828553277997478570503475626107286343497917705446132017125079612756035254750822860815515899557855166824523851779156336235294914777307802256439645525835223691751931866188957324792276149549076500784191791380803500156776088683900346065830066370370083309875\",\"705868391597244582764749229356331441978820024796066870551110486625729826111158236686696326058778874201639006234449557592353247542995871491078308187261304930042019640830629526023972693107193897009168955674240659026247094657679060/231848642748474339277532000336338632910990823562381469441716922006107433404523316252618490265927265734670539384485699132080062215196462178933963957679882342083893417545858074378754089719547920901917516016346211301054206383643383\",\"101832160604157943093944673541651013907278188571533075311673249923948856034633446617630054761681006062910980371900782781226979391765818325065031889334563981235894369036439929651260587335544056975715076598739977065390678221999918899003881778449092038750712969437519295878491018112/32944277910571666002449086492515464541550138004002141571670657643770713783329063548790202120805341989608877739811787937782240802963962520261844114327432160788193314874913687387269408387417806176202979244637915812905426565263196954203487934225589622864145960079736633434831996625\",\"10655703119271468913597640479490594180964700448340778168715956712130636958373270202484276402718566314881119559090842449610957974112230306343486091910217340665146602598568991520563987490686996746558858366002301982443029430290679385551/3398412687366638541233365137084722368200311117891192348532156645374786104142009695796409107380345795998400850838706661851176885183144928701608654514812261697598380070746520197171576610572921007069104300695592751543563472456384512000\",\"1903039332876763837419920240543738799531131775028971323439870868730321221615515008394327723508670975623498588291298064320786970626232668956372004004897872810230178526101184611242511193415796638694370503100219710864543168952682617801833318493436174387568067811938490953495819438108686336/598806534367503338307287246320963280558134937382149405305466709787179429317914803617527827862441615350396864359976273212272586892074799651088317544101755361439294687323233086696182687664637422796995789967075271448560870681210580691574924544896656175563265378514188341796398162841796875\",\"525573915563826130963525826191411949262846916750432019596028344808298471293378917508549164993368392834023782480702893643486699787870059946429810070222126260200026332874480239090370088123833491499400991181659445914352500247596757005142623368/163278727324937389095822405034435687776345799835442022795533783889356344755225815267819508608559076191292900367982490827396869405536484846115955581043091229202052407483776587687967125885665493681707461345895999542381476164157058393971431375\",\"9263815657177858787273494705338516861045771674838057329170239610953039987023429736752079544014780707408666628475997291124805562998227296677616204140605356257712022384368492575381355563976330347792504605666631512343447560301417325154003481040250148561839861837778597346623630046623751094400/2843321709948499955095590862256744532227698001408929142548057792217790532624003190447363578048562448168721539177458065482170148482375585867230123873178100117094533143052886527452665480614620123764036974180917207421482431983407742154634391264619615289225747664532332469783301704643254076601\",\"407959339726114455622180187758753007349209016396248763075759257357925636039752474207685682218422721827857994768023399625060206708378433960993946156803948655098667156937949174400873748557248801874735834957795040139401560494087476967548060208243867/123780218751812156744401121690996305978134694678934447237402511116731459214498784497436358160964198336874043702652746834763131444030185151143987331404604087778514863973633941401826334750268416015224906056576641018962863645043976537664227639296000\",\"2547676391598917379516698439971914695230548782904479778605691338364453606537643088857116141939170899135026552016969320061900926954008522781162186995856580955090548471448276736878300717869625651893741316530109438876067419826217901657017506157997588944233677467357220316084583383623602865379325184/764562034757392298786420374672266498815021229519853724850874576419885380830752931701831256959159800764672605004880389358601658343203513177084389490286723240185146570925957286083025676875197029662038213216541352875570101363668917766225709569356861275434470568767077844675593176178611021135573625\",\"186545352286463730559933346565311535598243666022232037054735807289501173444103692309735768703898330430135399033529355360391658728987379385732098960609744313878477967971557204207043802935782878745271859468248704012618254203101767841517569443555143252/55399179641621656233589820996143825959365789093262978988289445625153099592463372579496245442338653053662134699646413817866770218574795378644415019944304868289119443774932782235638737888469746745621382139263856603239588594078668393194675445556640625\",\"664884440164786473344854955309049113269357314957985265728106924238588705533437169796551912202931185746193155801905841712503407258166135075966280435780812714252670362202091663287095423712596462690753468682634261029392794173636943978404002804413009590005984736612421172979101972556772005594499779860608/195485517776407145286424460448995460754674039560651791192647586550615878988380153730602665795647187884543361218962125172808792176382956599256188706636727418572541254480798303566840010217729386905041217793614214518363859058348249961790104618910877813067510758225302884815410347238200133693756493703875\",\"2614957283934314904315471338485451166053664494383241929385424599389309215073267052860464009981063483440201193771607520572077231889699858482582363845275452280606276949653970992719332472370351170732899676316967244504534154616036371979031399425846100527685/761493664432749089312665480773496290658029971027686543404885407644062485746072719559288231362060149626237939029641098328278650939665665969011529293869562636656650999759724704272743235210867676873525147820749560155294022488994426729939894753293900972032\",\"124843380518493746761140367283007507854364503961156704095198010255465940085534099747297600085903814014415830785663764373057896014399822131175202342399536439284123918855893825207202244831315575594886675813256448846863723093240955901916229136393454605455444105444987028391748121054399538064686074523506176/36022228212051654395480210378626648518430280334458144892889271272122662467638331091863215146548048144675657239846337165813938424387499358852301016926312083940212100001220180762189978024821166744964908871443681332664798940660421469519997746775275873085770018269706847741064037876137315001228315806659875\",\"827992369063043155578730871896750570951766628472810506926098505028264552046829097082095665194000002802661600196840639204300804225352337632259980703832713031790922485730615305441309917696044954289187837653933158950774246017223571461858939407386087081525130831392/236805932823686534991153393869288530368011574665859226704279685567723830696754821658770176385138917722808377962346690757191122309876922069867472518117628639913077442806147910884267694879089753138429767401700283014143248445966474839193628309668702223994071394625\",\"17347276886878323736540051321582548724378497839789943634071026331001588645519865992773157565595886250230140452154269197770615097377486013097979087647774513500701793885978192218455687078883766086309728287172567466406449372659680040183273634701092561727514713494914793425407149186041796935055187281744386432/4919325621804683623339606849970832094714371903709195539440424738973575902329797546592497378000858196173718145883783709223158260700365224756081275272021856393735663399552166737690038832550853145831185979094979556715294990257315369124065787473707136464772247917156232366320267601622617803514003753662109375\",\"137984231830526866236186357461458917020538108058615632801298091031540729111527734872044790487396302545910108285921421417358113055522725197998483383380192391312304647004240060970929072498293210057120617332323445379424867965764749534125081131327565507524502163460761/38810445792642817561168950890315210470940006613819790543653745327778579787694809782601777514116858514049585074667085399925278459138508514838268321349069481334967221455722811414399738756151414906092225265355449011152267068726417045644222323488445626292574879744000\",\"746567120547823334914136339633766098626636643449144032626270358619125402826113269699709721071135471625588981126637674402048519990010499180844665151971356149292818375448504122545400227696621572263621729512461528550588108384619064912224884465737417596190735966915167530332762203074440688676123756162572829692160/208334337057923929636884170505570363171441147899816815785150954417598643614152856767186132467069365605496210036171429712485182162940460120834349006784956522600679357307849981862006710239311750261522832996877712350330290831638640913932265004107623954913155144975252743257846945609734368518424172846119306643431\",\"64649371728330695076928013661001819989330953381731372450140483779536126948957993261299287753791770622512248630224724990234903928056275080682537641377393210728546364176267034339221558641084730052304770498929958838997239635790469536857863963589118888238069738647239076/17903951498200212327802847425913723358452100686246224008745414214690047078122925247086521362329833307849817944645647750649290248110509395628305970523384831671737569872597295947593410067364379687588919135621621162007748635920864926867870502568935739725312687094047375\",\"2454918942158003099688922026016393688092399295166304634317616773083386087532869193458590448918958337530406410803840837646465522656670050113548208618655070231274778592766244282964463702354872753657766121825196898916725498553882689210280080206627916046484942827487726300822318764058084323314109595329304407466188383616/674880185931325925966586583820010578979699141814417326552629206140252348822939845006845669570885271576698771404162512001549922909048916000017837898649100825976232784446638776021483802989797501705685620612986771521390439936066527738682396560462899753657942715306792783283782238662155922082005591512296007820682995125\",\"74018558041066162916454010680594042518462756234254788158141115244349044958441521749277686851928706433556285971088455226217644009628399441967508838553345152310730562224910795446341601049647392069373970101491741830623078126344928804029524181578945586663110848142571149861/20204153620006780689923328634586091101021423979622170579036140596085566172775051595588438592742563923428900864000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"2127032036758045513335690185608563023954009095206088224487365541995326714285119384743928987635752931664240752323937321097955456543854943206092931247498833001499955456190701695430459583885125382086777607021670447795321669948733328973350279846928613949120929250312666393359442423066212311060931469017737106028339882830848/576612418511902928757340062840968526862381326698309578771238715462180282212422302261044980131594522407066369222998903808960617461164985318633518680304995784614308979881735537678182134128319596636920719106506829571072447362052319438091347699720147003209417806230149598345068078717948025207635448205253184540936478445125\",\"35289653975561083576641954928762116897061274899517309102784750384002335187117263273488751066569234386120759866204372398611196356888479036949053282301027789530999737306501029700128744408015642211359442183943916106790666114870974212159410284751571905275610921784716184508440/9503006066880728386808143045924119024212377150217533250562188228062174064693375135306438120385877320162710918716613546077156389583384656340709638430674364232343609717735574035535102953482366914421205216675248471695111720986346092738728929878538430662191272737183832556131\",\"102633551023964794485575491065909467125458972250222581133681080524371507544152979467328048718122409841060527545925136196267751819689935599599321090571687632103850847605493223603751038996548520557330016046032671961857623066292962260173840972332108111505971231021442896036760967107060309991355545554631003681544611731245475968/27459658121882266328752886605529964804078316737648012166874496015808620265471203512606463219297059547428855195782384236337998738233668399173746663289852416697917397644234441300570212555870401420579737973722145663287124151049692290432756231390864184491891697469874600345958989433125942336757049639797225309327019275689074625\",\"10034393558388390065766795008210457368713365491566387292163814915435906649268119060550511145023450790393353937124495488860451123302412204483570913557762460385297770427946219119911920640306914453207097103853766023934602534502476962159682750262143380527529536498215384467975023/2667919902603322771586358077760621955455470781865624844984169443739075976572061827709528710108877015489050369589117491611045518221354793418884447632063538994046714401229510497599783726376490260140723032102883617341970952663947646017489439179953454964374887388652792446976000\",\"248528145263843375390386172800048509380966183384567983242213959113927668429802237067505890436957693495616107089384741585283620097982859345081736730899912519273262934785992235852866637878831878448348444611412764161078458068549719800733237024285525816723480868704742804077255242682077291713092790250511567621735004237450946304/65676865669148624809340872151906045781446981664561196686217551358486802274698228825404698950974939545099727242259547145392352658637333562345477931951890984276718673618736565926663528625796412420753961231404680876558659735251469326707567479071881966875336951133475135427640218972722939427821842173216282390058040618896484375\",\"7805448718805635696495809414501206964843262114470109146341305656318015059743127114324245035489577134938579856003956861881125856595981500593426840968087618241785931128978516340812066502964561231235073012672356530509663384739132686548934288703179479011016719045530855033205271548/2050525178024039744126592505352202216905491833360272553169520915020715464206141942151086176509423406413311520838568324134077402841030113427309725873344806030836314500267104070131451720947531994814710189000076651895520222646974590481497382830325485174899169093049299764813276375\",\"3355325071293197839434119105039673324264765809771192815982246040415580387729382404624613875653005261578877047405365032178619450963731719777167015959920645055600439987161800547901539269321100559393048973255388860193948274255340335876890491746900991668165565729269698196233805991206691196045182214641935483083662356666996922240/876402579119117579582569839757462461050855174353108858954282915644790659429341853404829661899850841645529640454766173209897510988090318303454542547519850473808789222552969933222203420847859171250332350076509996295844203965564448154484566493395403967626596213792922784509892086361572955175655987334882030766001799867659814117\",\"218871061991045868372866381545267589365410350294028138778572466235486397478028823720846191998825628156716190463263492304639890659254282445466806224943413446008645087186307985343574807361972238230520975439736199291019544576443791916302825193643774360055545186783819367378492631806297/56849560726416896431557940314760680962653658127458002233782028041537121216487790008085876994020812492987733987414743604239935223783349870516284048368761617736127892160849065895223288023531930411718807065209903593668117085505482007061969339237404945180379460053180570404846043136000\",\"5008685108365226931582937964451700746853986170633433728409171904803795018146152804690759530990140552460596075588463394200510044617816085275660078502126507209302951286606953039953843685800941558212440519542602092919776366067720586295390886070120828199562643208637974347390938772070049344991272621102622931576339988103674070876518912/1293888539680354282541277646947380627241979967611883341823378331667976045287311988103163380651334828012840330710760757271860219584371109472132211215957402251594055009937397184768184517621978947384029376766290498101728971145633139541827544539988344772578184316843734267915665730981857376872622787627370859411909330227080697966353375\",\"15388340113525711660227566446101909585796746979396093776960989868457211684028149502578116456785221720682202816140911944661051001675127262774824593420825587319436537346311831003212424497488485098543512314062112948777572038731823948224734505930748371522309451168088057190162878224801232/3954220582960831691377435160890656173654063611768428458807273708040518769541211737927975894584024448193835165167801976423275767590502552964407494549049777006346189436817215329891530811451811864579644894987864267389290848598289794977382504890216219362031324635609053075313568115234375\",\"5099039333987561374222193551155323470675617979816941646196895589439391685938046865391119484510329634015275893520725135141878751153360264368353595348921951280561029028912953500944814771064409611917475818956659775131751121312316084465321917769679881052144364834485866477379437705913911371481828140817759401117780199246301705600020671104/1303503600297679371136943454060319958680553228879031326679449263682048703103464872914972900105569835004878963701599765030590097739639045890060548760692125546754294514068052902543220382104483822438283040090444827980927544440984823535260277595466339403795403200720622852069244768910603820007632395190204569927612348189089161551951106625\",\"4902837141334073026145827027361937996261324349722726869116185158777439337041263482852376194988371853413467559557923410949898048139830183335197992754748294810838187068126867611615800383834975563313220497573778480109264178673389149671194149749735833378557143135481387904961537942569904075/1247045310545991266291285730016853118981099516935251861146038369985109288084420528171217942065832292739130145780833406014673689119563698528225048800794718789218267628507713621235056538202070171596177775095071513194885568843375526804796016261173388452184505503341132236719484809714335744\",\"38114743522716832107917466438257616720476488812538316101658139632867788464381862291240727309611460187159930652186486096300862388591521625093237019662273764387591494074792574929490381910446287947994150655077877204446864004067956087975012773988833339521775463977233068498404144221045837190392670308437391686081418318624745039402145439223552/9647001083383999453668111809775451078976046488746916070976218645431946648087171586252172936600115032316383427265217993193444199863138429602138841976586190525451324093772097241349417938578878934577091671046050326087898259692917931230974174799815198493279413438192301437068820185757869608523761456160341754512329264442115351926967120404125\",\"573695055225225727008803730767518906490704995929177617646275646884555707960986625481944101622708415415988844740028718027554452662358957933526173824325955904005404113684003841990198157072540659184995738719040024647370869010473254071681533880576462368600901824622431045529064651675640055917092/144509482511118816399089096021290587489594541280398871255876563615464628718527634679330291741479135415168539765887291789615790513527330600394937614433502341116068305347468133950204152174094704092402978083370792135432486240914953928188835819767755172666693219213868545854371103120604946200875\",\"23876960329653589647925126180903391687666378233201794403339630995420215267415575142266707357255726330536094448314199602616026935251126469221925945960901748679919435908556550271504767784553484434363646489174587463466333864577705745452492395785557425904735048180164697040313528831173448025400634629163795223739061661461986923675833880378496/5986312408594306954013526197465608559068621248896320652512228238115589875514604632230098997609482248000888567135685167138762172475788060284232459813998201719590208742091697294562538265829954186149162974972471533202880368317237508987477069872431064075005305838801862900501819963793062041081601844759452202282545840716920793056488037109375\",\"58168289917567723171226992383559866214094157894992327555495441698028867727845766488121900626912848698952863438654895252811583144479300382761129433911280049009362667380001406579175563745824368613319103673817094498117944856004415812877213722455299491145649879676787079744410765053845551958756701/14517067289347903655500020160671113450349743650636953726251191692074385521975132268313263723831804150872238173602847065423463131917373356798750100313145228608894881457107689499956903046984443545789053438946050974567665049237414588435796381674590098629779384355275820782532479708807512981504000\",\"728621890568281859295409481422447012528302594365693410763821707074444799793690738137592101239862736313347273167450056625929591960610208335290882047413011571781161008296084630072829079783328937418641417642857196346026366370059522990813537731394823630207433267854616768658990289454635793326766697884798538576055949457122067828153655416688640/181030730759516991863708593747964787874073354051675597050399087612142539517308720603687322924426591889179726492403913356461908748733972707460063017057809060190437917851790767968877215795679844983288935075688219234885360839984681619084834228226744165610073685719017596630302462070188937998558312507638434329299017584329479516410907786681093\",\"86855946923438322218622470067224691860808273886184997065663554841573982963995340977083049132518812923329423480393306918856650577072525633920456721265953575424233701929892019410099166322511413146891121248381648145391642571638857576890568882512129960291171866772665863159474602604647289052079991768/21485753507365901947528588896402264670781310878547726104482740647554738151100954835784115119035980523529677083504495839730499664052882400915208251594384038810917282207449860876251558307288700200910747338758723324686939379138206117634546981163355060740270734146780942696291669461182599512320099625\",\"2158989152301022938148680102142188531448821359505188055264665167313418619665693092337665573150374231484840948447637297247277576415460889296724813940128955070240137590073233263168835678714131062764247434144994737610229909964847568491446606012581370840699582055341626266533733744293929658949697805855362114229666626620766245630122333733703618176/531794915405164005613733454597931482878479882704956110685223892325074211694837836221759995948610212818642789132749082430059593652854659130217225506942675608692701447738732031302987802196501895840510235161825501235133794449421919927396142470196961877376701957829921152848178076410141813926924749057304222282687697297216661687583257901415465125\",\"139432548574396829074586704387656697097760057897628994548358619815052936481650396157428747411173567801047221928593253479330480454469358220685854351236980383914223693722868233819483137401339800304943891968050399345430243790898955416907228948287367356990263740207046902209563417267686591994743547621/34201151688775214071963206765436083445901621442002061707492082843232231754829227303539041286301398668437202547003300396162741375435703188500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"11008517174872833286150985180322584448162884832099344969609291070844193524816852920942383850580217443209402836100467940651581092350600329145627967515818684442171571156446321228596914355704205623857871497315955269266498229823278800717909321269179839084452384509142712677235552103459737790674103994445173074670347080506698168482564009465276165824768/2689223396936080856855299215659204161946704205931885125148201643087176556822542895325191478283706585400237901215485150928036895428721912118467760766508162631903585126377676412573187912443878232521444786090510891599171741773242011017926658231638022943018461086517502584854390836347781674626615709751386455292026775663545470794167629144456268750125\",\"16108638074211260588800537540680707641986073914251424878121255234668558067988171568946079848860335948991834525552515669040163026131919804987340113244760738846884911038097907756220945883750502673899084880578229601870882631165510396775126850307838505063922101682333806284668762825609556049426829531780/3919363961344261777100658318137884299575193089462944554282218278496298610828757650104922583359642384253066896538203596057302203635134833545580869871333892935330950583664400555463557735723364497947986885146043017010159347046389604172186788902608216894094289769850517098027486468084407618748895626853\",\"34420755849180279597302103726180110022640946692592540634353734157479505420320000324260530767186132260970572450489530034440214259559325114511265075416512316229177952140217732655405289808326341696986755141965043719344169685611217958619102774617224847284122901023774956887687026904767714958090256282893003000752947427857703259704682455375442735857024/8342030311716679826889917494957593165464748884572298173556257652389845294530325764837124998293398445804458613956489096007564811101361266196542129764287084823604897187311540561857741285793447174119667215803837719660675298308873496219385226998078648428368061868944322478384684509466965129972030932418920415308276430355882329457342937549162000252625\",\"345888075261020004071220843714060353763382280664960929903544964118831237876694384053904571498830068831026644303797377762345709976595360421502594656308937649239978525713471393570536680412814805076323426256584504251728507416368609420882442293831684681071553766603478479006495757222912500012444787804577811/83505703731469734628961395063481893801938371516752417759131774530720075262459158384433785006689548434701904106312038822969658455364219435022841597243178757423598248565463985786213156556523685666430799283870548238467817226915680747412191245046634279766450629886904716776719219698922088211154187845632000\",\"1061717830619177527082296723099890392273896386613997004874669053445943252046748251883532634529759169500795452576392700472771365240996842610207274128102329096619028487369622001737128463631016494371635687841733644339636164570819431573829173533941056258744442930643735587780907310433371453992062647737259587563398111688659657406089003293576961475848704/255359631537215747979895955806995352799574790340218399351168178555478073997876110889483456972687438702262017800167048243754141722496276537685853311434069991222324039005160057724073156957530106623908696241268268096879569794431919729620178375212905203484165745866913773304319069321426245521467122472046370356725530914587807274074293673038482666015625\",\"274122944106300296738399632684955400761495830361663966466225652918683099779465438024846903286816813856490888796372134557295699980528187779624865098445756013563535339056233912394908544185885547842235097677765325396255649207317018754967666450708249125316192200151505568416495274671679500594656671785202496/65687592621976546250581560102201535533608158256953087745856906437400149205693427285162333502528793675585022025602144243543064185647792948495372442630333800126269123531636800213405254045262127593759539706750242430153456891792533267948231185296091297979933562727112487057234422009426868531651634706262125\",\"7842680480716516803148821198697967237136721860017131244266974996267074742248599085253569637183007740566941125452215834642683053334607896723447140851344501084122965014242091312411884985569341166545074688756440728922408743841592658677792796881188604773469108807869960161395759837407978596679911066586626885830991556090978327508459276025943279064965688960/1872528612245648675720382138045071131304652050696842872529163720558126655075937845539792108048310219395746259570506175902206215101518698490144716531697689534559827422735649881381597761684154409796315455445459537515308174919488497154409643876490472215352056502193150125644288086294418253309947229151074464928874881827227706992859640236086417889990541889\",\"5300824422251242070074569186825929119848111723012841627275830216301188228660779008353049603527567784119877706984722171178137272986345560485784907345500893648715341273841147320288851034078863843374665850852481747000237834238703248634174397792745914847774297223176674917912406659831206869442510948965571661/1261140476013707338477604677428573831791396352814802149994640617701773078174882455512668089072441176857892331468691160991310474734143842336092636848492066592397892638052212250229129355009939118431643425836944282456647571558383755315238500832868535816144280088644939696339160092963629012001958205063168000\",\"2220223718762215584659309059880106334425515875615107369399767892051551634000614327272260081056973863669004224981561870246078120862256383581012183852291444462730018546753183156982897386563561418424093883164027305254176874653780425452987066512563140531367766900610414277825262239199580925879453806414860409441845631158680721091621460775043562065815179617536/526383206607841251253861841374779803798480623722760367843070466043030228662340154304405180907941079883976168609082254331465595267209149963786388600028701073430773581228212441424400748220833542964971495005714483235359479470452593264280645360131482713147116366500300066771223383007216182988263355451923333319170174755334598973202740108032097242475554128875\",\"521891797109626296684891455959263713257353500867652268541535940159815152120871142196535233326890353914761242025931373491906127275561002910157909306979093246574207104081108188995072105948138299097848175016082947174156278439986705241571619793059501724269644447572323501261424770743329858038040685313621446524/123310256826873923765604825413207481739886340225713108649758575106598510022338480189649787216845041382860899099250547657534972156328080736149239332330143771138115695598493059325064119176038137294863053148618656356436332991079150723235214278848602671333076219529535123842212129829931654967367649078369140625\",\"66086044538329677372986118727999622900471937619891337714357792768200341519193500393739322894033303245376225584865369486696276607060432449792893028061817203932068085863800494054274423512956136695211796751845295921015953538329385253280866669403169919614982155350899648626481405781514434761541281229159396787287553493046927448595964103589100429722948913403008/15562137339474350565671240515273666798063901504051979980452491653975250630723677279081058884163396938548780856293034775459223871281049026140999055923743471466471830572672766633086347312178711643724485955576579988182546105048041649947277672869613992334541438784737993706482731696809943027528882927942967419447250586964258807454003775693567366165507144866375\",\"335377615394100148751647837967017467711612297170079949298328061159559939969228226474615711044891085626519877634842694983669611974807129333052471799687426665556738316626171408219730853872410792831871526174987402129691897433888027072807302411474690613948951673562473758814664346259109886876538510453475290967835/78715592752271462306588358880337347638000605031000575876214116610339827495261512281635361568951675037834544811575026718101166562072917855004822606752296233435017284127594847656529606648345533195437635894948829857913798336356647286032372695130461573940500785137424365840081503133157308796505622439791698116608\",\"20090879701618729602554170716780970848925039917987945471322994867171660307998603515745066411687983450400412739285577269751603921163835619296822801840348319742203974023505186187060251544248644338412667631232247108675504629538319425769464277309915502144443973397371136256151336255138506001292355330875114245901820438821732843540725116728866301271466614762497024/4700223519410528857298732096729483544820841497820611795617923063440946097326817340637303431283005509904481323205480729806879570430868897342398783028649633951362398196137429076844504529051072393709154483678349272930361110568616112723747726853614661953537957117231900032044221535502745676310313569997665352252492568100075191900969170979460298189170486601502625\",\"2904778979985524171206573028445379872240558084236464200857594814631031581387804621371822074061289363372523364167184697785570324832815972970658633551879143187709707164796663015180877412717910872234647704536817108676736661804878068078543241390828229923424191204586313620612539678930999769543756218765870513049986792/677408099044823641581658869221044375312077929976719183424865834811543737800956896926637625166844372424044003929341361734886232742770909683021563822987505236295727478159938135467975522336774471915167606673489722102077041330652185811196423400701795791669780695158730756241178262962515917389382302757366325768069625\",\"31270155809329751863885224732454397292230969002004953832354065319735530624996254695453061851449600345977646455072512400760539747054003851289540339425848681804190284451253462663731135337775088379954403740058084949675460445909826322297817535400604180338201322667139062500269285493417563095365899631360901732684124930296643108551710704785906431324876072470231424/7269578038000504017073007978844992319987411732848567116655821196644382777088703228960020894756722675887473977480537577509061256138261063926845643360849217556370868752909531088361229374467207196928745673402380473721018157327193509586295879051411183657185176812738231456253321187419224704301236205478184115996135940848503487199394612616742961108684539794921875\",\"432538822079707760382094121020421735679118830363764570640789368235407853152380328891350816400541189148550353337874309885334920995713154225799660601389784410911658967499100610376065640785585342035058364676314084595283850213942576431310823836792440218271879354669291052589804956435743500204185107215929849054782893113/100246574739326291035824954677502591279343311051719151327066341370995390423713403739043396503785261917771859220535505691760472395306543276314938287868734009582906895763073519374099272340577921671298878837400921045252035507925021904954445172372479744465666760762909731237634082051855588025732494461939980856983552000\",\"1914333673689206389116942789116917579088664511118582610293383428712902211612554212779880638065888518488492298586641997844141510832940409501694726851666478650414191249534733087933879981733561565249818572204932715347752949087800778646065986244657260832234479202201129845117955957242616947361016603702640821256099895469088229339240402478576285854783063612307200/442333801076281757298117784528962837115323835962460661601905131618341609371649347131724700192551574625400701487125984359494804828935577124602622582550626336986871791407398609915208114339012374456785705161994343348351473385887949809051796407340988735853810174589261300681030826392672282630613354461927208579993042968520650313621522933214063366558703422757071\",\"5704691626402072213006354545292364761246893919997531024861408248746241619817955824682639582830486790618668221530365426203424888737658778881721063941495350237419723855000515747725926735319471480027293210991869255971365522170749568996651406002311020883635577590045650037569906001924971041810547543163363976464780729932/1314240362076792592671773873754757443276256223533339004339330559325754574023619698171225777585408160438834449576526997055649849875516310105297894855264038450585295422343454458568152668980131977005808840141079502436391909349182185596381509091427752151860204235071122788499996991078935216686010888734471173124487937875\",\"451219364084386208718456142329444023337343409261545444643031014769484085278440612677813682892926852469540118625738238137458321112005189595703619178533263706811689687213128887082197330137502064260105387500552856851972124172206996205919556553246133218441769325133725631665593372188755090094541462474970525820334385058333756591222492801647110594428922046641945259392/103648250172203340865458115839764297558925693061798169434516001775068769911768281084188883278842546791612199025413573394167639925287068809631958006622842716869211374513136766899877504136929177267362862319748507372147243911522667591375015611312165464514308451222180272935398828092646393830572838772085366567154646425598388620105539619174837489536378605144891769625\",\"1591076564577634575701791393842535460875733974464805197283632670013516183281542903377750304419996681222758401497321278555686661981435637461350320471258386388843198706277657208526372100698700615835733712519332548607115875288787602084336341594576426630670911478276101702119972195558314357975365863803265163991961173/364433108410193393847203348728981296285742202617988970384277162225847256295865554341611171460436362780497179090329831885853324392923449579538286804729856000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"5307507148709435807261229345132535134848030343901300324623409721698217134932866488937772986386501538026693956121121771089740095760486362654754229904633476234090792827930433598453200536551779789049352131005222659995845427680686677324963223653949277037520711609343166926627713758990384011274777087968799793410506391884872456420041494598273703914689586637995139580794368/1212244290381524115082005575105703496583315188540177702780216570265159923654197746388568151706509243638302707511238539845531608313334248788980188054651601536067740709977678222790481348003085034888244447626347312094586389347535167903408519024105748523384932942441843118813819781347089702286481924493361058339731949844620763272778960860509570622673048786968660129650125\",\"3046577098843580578619955603029073328361298436129791931304665777036152915858575282362742008136721284817899542475666054101957899858138590963789072530710775790433466847100422875906866496318804986202089528198912098377828580031852152997907433335176267300286466072997014023120087988748396598176622765923059385876855303940720/693911859077752895978833241338902695755528613729508555938416419864772385336777924892434701804078893822446727762077537955240605927550548046309823051841326355655848406646248595628715185413852040295631448250459076043816328082561248420925930431777502622148019371383254316636979070731427737764160145097293260938978413488819\",\"155310926743873343426312607182060072939030765297630534544899230213054714482456829198485999782086944271490229412707980997432528653509945301574794242118433868747172279224118534460563400440670015323324602117517342201640016853927923976796453577048995243600967202462466681112804476672348206491490513419336308575442086511015101999847896197546900512764233674747415844045184/35278162986589659300679088538176070649273991865663041616088851923111175518405117391134863644540911005782372831496121355954470744169969774540892096320978686548284501139861783292226140413769665461494668479430833892857992401391262903582109993838728281915806394747833588629467613308837196269424421131934859079260185052081536487462257809987002198437182539441349474426375\",\"46729591025621874782758519074451728476386657576036360734358719976400940301493939192083339293779149127132651616972817165172116269307276487158069293114860391502484125554406945249728802484128756924044633825692779783425628292959170597009935305429239702926898931975023598456207165067568919757902764815108751735753431153581849/10585868084079030838651390738371141142245086465033459640458366146849314274285871375459898014414833295804139979016362796357043372316321872357817727821559232353993714062535883074661734509440994664726425399880995133711038483607773782532430879196405793694658185175583691180757783597895616920432527125993118171361116684288000\",\"3736372348124144720852190769710129461145889011598636925228657393934132828633132357232883470466940330848177425542748100211498184494252714616379450272611850068867816250209867530921278645286769418080018709947826876461419654782341309127709703626401211996255743831998918894661053669189312375159058718767082163156988766821194002596331826150321864927832618126580509732359424/844176851007504003627016945212023239308348428094023437269532743221937069345682900884618378849283002998220513307273333096775669556093005637615012750733216460458689282791632437851364674879152695438589692227159038555722539345972833161146108367329370564838671791241431125003401861887477969954740544092178721327724620450947646209914621007186497081420384347438812255859375\",\"1258774755828991281578968023382624723772927642002016270484090409043454336040857926581316994594109169123354553321469500848146015719851609220423736153365139804086413284787598253618361769125996755159571523632747129480387254164008968993734442164892486441152227433281625391753702577143985047832519062595123255569172968685060844/283659859661671181526547833415653453506477950678651675193210969173130116121017723360258249430884213011988678011357458727603413521688184521573094783291496368005697481333739504490647194454695504722542014845706216224432373442438242355188461951883454664693262684873988061018976711201351382163527093784753398257094429403691625\",\"84932063355292829988908961192574710493098897148701473172754949846455626381329456661808566365329266898990829247446356970454502007127269708487563279536825277374133681167235811080298134899629580318813382668399644553111080625918213250223197440426147821225593304993621451053135332451997633132772608233430131400186571793929377129211228689703376067763625568623535588709576320/19089978133324852910950469658566458037096027722326716800113107848115231563787455584278193954518442601810776347091253561956877155673550458955562102935555510392954425196165785410319126098393353878286400877305164869548380670204577544630353859009177051698096136470072137579698473017257397949994722015089768745013713383769765609613514021200888647472804720456494757423299627\",\"802638881530832431828249604040579750916118423833791608589560402449036920165704012070349537114920882938466635598602387718300074733476150548724726460209016834416094317724261857969955414000155807312852092720310159572547644569797512233899495300028159721348599816083166712365215075728968005941610056018023633235372936903015771583/179951197386119079732438617407921535065140503043429174394605652913879982486051627760652197484142547447000508189455126493868229565647284332735552462525598465192073558793335913005459266977086104359621022691931002488052727597513413492393525660272900161375677499228252863529934576881596384036401784035248649026076581302370304000\",\"25208742399375362881099811032135575360109715964024747212026245529087599633280142314962581193303683759605084995818253124445773115574470717199218828756449187055537877478033129862600982068782249943150019637186466260707552416433010545437321814115233841687700051830170191107127799355485920046505591193770164750886037885397478191534797655616745528343172318318678405576430544896/5637713398995569614196397857525646325234056219513202928587580534159596897880731043336790273040813044077153051260989730372846713618900145444802234629922717464041261370803598799826604841654608724727320798324006129524610666235998113655193642594744544226880944882342204407750193512869672849910003246504052298022468012594459974209940607450480609190841893267203392880360823875\",\"732332637178584560220688900268566130246820235956768724845747830959547501950765063982943061181526237061809052444110437930100210105274824607344902764184151030827266142225894655531497849161692760385938786736436977268616029862577293984376170905024712952813234949508186306774257035535805330366742322777611063402455261391021097128/163377988152179636922409938163005948596822656868040662831003991395905185823836089887990201522673196719628247106777881741843786365701135555917263285268753605514812568258179391272113405920369587922702002732667842511108732068683407168090725712401954314293193572654347237716691784386690948494003094992876867763698101043701171875\",\"22391374854299462107923583267570593886002658786775211597896252879708753450794332301142909715845151746786016535157797023153041007263258732991465037648536702217273897876864351559736449481285518249846264600935543582562018874574655740660800634883403597181876364712521253650744197321080655028374602772696770227741610874399454362583980465225235674816785988164157351243193265401728/4983275997188967758382167867656806681565521964135131710678447245984239733544941881418957694612909599261843693554043504855207170782744518943778096768859337980470219783210191765678908537645270392500777411134164918803949155037581108678968701961544979451081836872425574123683574475790997414488641534074873248802450108535183413970057319247033379016606809226547805269752123746375\",\"21252344995592269775107236774689012760750850598567799560343535731251766780016530978663079386453430272698006977668063208502408607227544322945446079708000304179073184745623740466334127867464883762843346619853325415963062181018736410570113171387891518398846617197097407612852037905687899800932343156979591740310928257766081697645/4718515378484509142377558412184183991357747235892194234377932213613746008373918923611236346330189287336493794499188640380975364991548794341177060325509698404571318037298112293926833877103554546466055612498927474225619680186119313129604319096374924037870803554153458104225741255753314955115645304948564151765516183663634546688\",\"76703085666560609319365659209445044957052359500745196718269665234646121134787807938680787341023203786904308047981099228357850016602203539979246579454229078497537148799349353250167621935384193502383187510928609818011142642954550330069991570983902841318203794113898871515702445720207144863877026526025447819537396146822201819435536435835285098485990260677737192230985069824/16989892821104122916312992616665764943723222199277412857053896319814438961475117951904867066845412639236790762432996309717924037467863024360211163971190006272168845197000304328480920483651558672879967350982199768255256753110375467976246339260326422891913564151453729285191351273342206198366624882195135056176502724912849575385576554208844814085228696838834665339811027625\",\"40153831166521391225489894857551838468150576827129133168972859441122728710165233865309084872159583787083130713473702296122465319276461991457173085312407612757280915853584698420083436946976844240063731333638150599017886937783470942007376523947840104246927580254612991191040951001539641947153847776050138532219595746056076776809812/8873576113581065493273519627544307418139908640325227196912114520903505426722086265723900326735989771660987609604507503750212298754414472822477243293638486047313990878348820573874809636084574108909615044524663712495422565151340037564156235745628465172219286664653343193162657374410926171153516871765680561505768223660055617934625\",\"200736374277835272485186523480177159453030082779872429648449412313247640312479214261681899286513818912991945046297334418102711629933437654377760028476767482162031641781499114859553677502002901248124750539270235098492377826240319766677856465093871367817683734079621359186477306173620331748496369122143019303740252461824523590096923561928354020960176605008889579578495073283712/44259440065125442964014453739391594153290923937737136823355312892557975399035370631521014554980129291582486968083228888083079118116286312583989433037097397252506140224404130371160608365777625538148303917306340620019882928744151294738308047800711028158277500317134537540772759486365658024194428796846364486187105343266398338060080611643110071184992193593643605709075927734375\",\"488459049325494693259159444507437983381645757291858092983371672334043029615965882574409808932509285079401239403272414271652617474184321852388397021836909585659327974611273820676128650810907598106588433939541654215766888212287311943387232664417347883717203611092450971786083806323404432266197250919880225892099146722474124874256523/107455855466267410923480140898552598306699341366032095904938430084768624148829473848763761936703072253841751966906142283640379336131083461646777390874405323298406517250231389493084918065243079819898691146841695350589992171102939046740169198394671965069747042621265775948217054519855346617967866614303497258042439052681849864192000\",\"8430374068596413768975326329313648683222744787097373111477788794692418932056901235174019333392845529821722488982447683794746518712070635063397464904489452840169472596494433874412726723065560358405027764015273789053064830528919091414531400589850704395887250756457780868677553068164933299802944396576360356896758745030955907258232257358056931680617626606715393885378887657377280/1850480358582748412767893656294669486390769246349349706200869446679212812264400876685764762211659843658541567071977813110496329850010288179702589501255367345935389050373021591572539260951149696801665953123597521983257852207280970577287472932167362521740230973547070264273850381896786822127290397075758780174083415923482640313277341120938690594859118603017930500014640169211239\",\"58273615882491925540881784328370957720539797010816130007322211512070634295154626813477498607761260613353633996451797686143131893884559909668805628269959901044961666535533876340116728982072626875010391195372759135469446048394835148654407846242721443845351855234347422256700864370273092971804207514736924787577569355949601385705517152/12763172138328432984573837529764902730448666594097466544652830703737195804747682450548488162227364538052585484418491914323658215406327363805353540266048943197822838925184942600367647278764952826664684839953902567694832690683467635727409976388280092262839126779730168889686628630302519063225007497707028600865624133968363921915016625\",\"2685278694947152969468407055109959900160804835228466214479525891103128459065131221736713585038130737099067040196326815283171857977706979990467444622550497565521863441617001097354649972660183038850033950647594754644997436624623325003537308428828750008305464174443210079059253920383411910911594636045517662796811001285984447671371943267419151220518726940455756833040934506414133888/586864816044968996825907488721678304211296267371936463272955488077666796280028127333229453342355554450708284934221461946991556216095213627059047984199091625921432110913096253352065238765240063555347292393427726758010888546427415276046238297382474708612526770055488323003698641493939145624184943388159614111350839555141202024991876221874110644879676602924730506882384603409121625\",\"27700345710264347957758638741952394530538598225904772664391173119594616680996031886665218221392453628824570256438960349220263575741495285780845399187013582169907518462437966962923592601721119258663490655013419675469864809004562272799012227293974254329929404036071055528766397079743200179924243479370594973626764330855493789112414191/6040997839051213541001279276287478343874107660287651711609067205111574718442229224212245187655300348484144001298428958025052162253854676210451657425437588244676589965820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"80160269787574270953020489212619791839643207793889009503234879683494928396231769167082355143564723274576166638869430572977442020236299319718643894871736539109822173538266278165276591962215927816541165548699380129014840956895931285215480350321259054359835472320394089646764361802445068798451796525897304221529850133401768027469126408090577121172238802281079916258951770135485696/17444957084936455555074876721808241311651668802091828589911310253709517226715880722948267977560381436307152342821304525073651379763144281678911047276389231713860392794975453518107055568765009486973017341479560154792340888780337029481646046233967923289468141293699236815196553819373828280398488966665994092877680860643266914861837639322607761804740256920429518434353839878280875\",\"2352816897072623416220002134476921108405735955266703519252095150412419264317091785317803024028565851487861978477208755211589867803009700996828082850796103789009194767813611798769297617674631277847910238088040257037678126316866517601388289837575778165301828137259948173292658462765645645868094197736382683775415645307647043205988394700/510973411316690313485681833991645423802776865720580280058344111363363091616558230182669376841383375321912553771027107891991318313938505988903735114191313214327683449514676737796942389784957658395806951715454372568523597420866050825822028817422805046287798054682484158011143949412956697442991898914560191411624040490122951328364833797\",\"6403295584873165688372907494046202150046769667837790834896334486679541887567517050446119511695248926941383207478170182650927368177009669717288184903306689332746127845953193587519575304974203099873732502605739219028995266139383163062837007982999189114810534856227848568800302527760100163350814120545587074865568436789021082619398126713943637898657861949091545516403987546145915409024/1387794272010111535893205703999712437783041553900341112488641528986385462810448493444968969845352401058333929711237978223214186693177251566069419805757440174840170213159651962686467523533938145629444468366235554597245713128812532716616087753947246800626006504878203666972651384731498770435755225220796872155249202960801768048854869001310722927230237083418017482134588865244642658875\",\"82993247683514419570466529457059660634483860665557779709153549045427987672829778520201315148149878525274005978368939092115193636113741972236218502664881450367443614971109677363668874484696543982239492409231870942414193419634675024621942196087473557914167832058111113476295926250739099284241826553737074679953551191767148712684157318697/17950946423927357725787689855263532224005643859095168852729513034456208872420513601894508438640531171097082516559962755244698695622824386001219435651555513795509616906355363573638916895074349491513539093024980575852693293474288638209680085037286354050958859425647536735341886663074581909148323105020337857959651624760873736590065664000\",\"584891611376763781852144397260140844977346305541197362434227194779766612939978629636198589818106137319267243431810481928639442343946346034433828599323416877248326356345631611148749005937144684862502198147087702668524450709118588741606955966569427636630159793409544653944608958808602551061186799401212712216156799273254257486955348236914237644151956226336750212957092204830385441792/126256710861549838395499078249922986417488985866522660521294610280820007499099176190820291214370699289977888813109514854178180265382471972583921477022411657285850911270389720508719377071949050253246021921916685716353393018411683757067093259101151481189635423399611625009617884983318141463140199839724797412514785751549277231259345923662499623640886881048572831787168979644775390625\",\"4743054867460856425399742072925732465660626340183690464743217147109403130730445842673866624947360862438925194786600531200056131309608642363389833474026007798643235346104937733349791667694862514383520689594596660275306247615314272223660862212527346572811422915223417783887717426641317921972456913534338708745549252254865615725859881457906376/1021840037832289788284691535543138164288462770384961802287250236519983887262771944174557087207566030730743075334169628971336358708580124427857321953981475719503574867471090607795242192417162791762511940848493176847925838738242153177311649130718886794249673254183907621449520415060660496225939963471753122766421338241291756892571824984344625\",\"3784664074155769467702999785016514468281913375341134899878893061325465790589101335015569840325786070795267055386681356241209412947116340524588831510768864231937929260236754881829005065056310226407358204278658699999612596866156294195316867934035877283950841910726224355461522065773816109849107487214275801829843762482082803559183694631856772777313673086715631547326400170962722842240/813783281473223559981291694175087508812520505931454895884442580280342455516154674683217348039336712901850738745276445107477919518905155156380620466135946654952837573797479076027688866326359448543065305071605591497778941561986579230698384305536224430794233462949056326864499827444363206162251104552740175503996670997705423888382328014210171324376593090187604268086334796245552762333\",\"1946671258536842642381655747294621776070051525209940130115769153666368932042152311477746728678182920842238801763565726086459485050237860693394471644023999467670017470376746609892484192072297938254898880354014176373253875722410186683852253828299669530022166361304397631667133689128358365296701757782382475692465977794960109690362462330857/417774039698408581013003883929127512062321623871486379101498968145670269174833505080260389860863417408848209525427705249526516766731427603641806256289098209429110794311660844125377702016056984573671024035213045475132134896835814746425864304907974005950155657789157496389234919107772201305672421982198984613601511388413381215220924416000\",\"328578487723377153600821813410631465225159589727320893988991729306688663770697528156625398176929288628930496338036815910669579019719633124832162035588583242320537435554101841406566009219059042888412893352417446437227440076869427577701706713564212185163005644118869496869980925214424591264870388237079776503547314587137721633918824664946974571838634860386893404364499977966899068777016064/70382695927096628347637455030970644630942872888311870124896575877585692281624151103204551947776906510366521972834357031777287506848887607457751667816514216907338309372900327919413372044625602555866294337672022362865161523684052940126509854895320132828009551012639156341878073682501185688461720664801829933689280752623773789373199210473995823367199793407048741191786377993390965297664875\",\"2617201476921368517857942326432090876874414269689140439151907982631768946799200744678055980827789859579196832718849393046147656447672531861353456343821196812881882023188898815179947651274131166835133965629115749368441605680383605331300030886676081418867305170012032824011912531673468215561506423833911621270680104083533917562622600478548/559567121085534865189976875600841717161617153776904752351231210970240323460800785728739412474960421770806162360125774000625035522428160837855944215417821324758873127567654244465281354654299068546570789547691342609793050301258532586131013585959164719533123826201937801986942606844854123769532447570107525081084531848318874835968017578125\",\"636225736038986537559880265988431731529837451289737542395494683393492040808565905376235074534207026537145408562785279823547657299565440309510931336394031904920056464959974743525662459433889398003683078967642651812081450227654478095420306880762753401111260630654049389197602389949892636943971690212484981672010398108426002137114819838399222096538921225458913266993881960732663394566024064/135776510176793971074115131648637508758953050390591773574951317807919051619690313331192027871176160424663811116849856489187562728496099757910540362703888937768555824513740118941387831822900198029266206334350448626733139136083404404120210893986654422850183837974770675600952078956326317698998103770833069712616832650406225828969036781514645731022616236082175582937900731419575337473384125\",\"266695771933124633677367149389643417608461366874310588884377151539325854547826373711099517873721616543570605935954334944030816383858485296542260152894035979141266909050267414072982042090341712035518685997484257326212454742816979806460287972757626105526907510197321350895873473656215941034605746494172316089636216915825022339855304925515685/56811706665210352283362623728191218698295056176625217939528332247537278605113496147630185544004654583441448319260578659922931798845493756189402805173037491645434052737405379674607517658118427614090338938517963215812444779184193933749520313676564187507594274551791388039139409235056119788261689087831209441779870873305232021728002651979776\",\"3511806683161697708497547617957719390189982761002154386881580160856792742952365159764830433511949678304281539875366378131195670004345568047690216126001067194904446295336734931691743477531830892015690816210752795806120303198745685394015161323982229908105397857791180342330098240702332072396030780386362735967021055250450666535422528637737695053315137238368787607412459874094164027214953984/746741569878639983491390741637813989978804202898438708743258000150996080386381281307609038830698579358879333079215327202911977568726258527646560497079622703052765164031089590965199628534477381843079892123440214378949632707668935001371616475282883095939750704292616758568964786737752325652839226013335092148777788733453702438432279149298482004122593243860829060557386699231448957232420125\",\"499543951252504651717279461487337168721376180441322735807713499521878076780205427598086756686061009718016175215146305489885835839673419698751530207404115002383180054704927695269921072232395828258826213554806570423602966743337801741633869267620843626804016742412046844770601322513184123515405692795346790813502805238635003099976693786012816/106032986203682550514602969462803214831559442358811656484036951559991322084935692953211120289352600484987931812632505499612220494311324679562152078883141464406938524087376964935494245010636163705698220308243980789514815579319533341929989455211613890905485981353837321342730307819060825125980500975023479813757024395422041501208805339176375\",\"8540849722242122835873311629952985285477986765819584558233324868363310302206006773828897816547299245727087876984857726652932481899766510637403577175623031467933486823994040576431755172220921921877192006685053572215922347418846423419683723609799729359551828522978186208983138345476801247634773975311405913274552616037005854836040162212761099347518242200807692224460514057530656658616850816/1809694575992816440924165741094996511361288430727981159314194000585536832192004274726651828760263522962868944612215633976203596150606503849595633388319338251977160257979846235995654357082321611719654136058257458753105122024859078420173515189641515736029725847315662215778251370398007468665986604529263071981040014321717598469319370651877296085250322599247141397427185438573360443115234375\",\"51377057693118720457387330519321684810411289582445982078756989158447711080414032055843805733348558621949380554029375294451303430269197115810494758213980833379214402452992657502777067850631862453239349835215260705131864911194740832694498014048717871429797341104227759557199716944554347879767916801106279081864127192611546757627038037780244683/10867246748205139797826516105458406878398263495890048637741584969144406206902037615496936724683237700974333817527350121106320991054058406504571347680049945745432432384570515723033245430148177097144850158758462968940525568041926860856763884474605057056550146491001458649244094211354153171337463406192651150028767064600270112838159624568832000\",\"2517199821548153657910904242290029026229621935918771922146425373057248090467388430999870036608278542449661971830076845113363443421757278612394167195431759807908413353743377586893872930828548256216510734912027450642648789925142482023713336937258932978503310551945630359646777080073329099268529064437120002567758664419443374110941824106727218341795100740316967386497091058915066147604481280/531524260324016969370728057738851340792702640911631807178654723224511108065633433027773388768889035083734041289308124943130099580765995149865288328550751289346866467755881013217287175392101334538392596956248952430438673292186779006015549928829953979591250274457658042926539541422697852390294886719770034058916886894408015624288115732154492554105512936468520265305162358665491880968652687\",\"937159485027553069020805864547349554547661693803137696125140510201297417077233061462068930061915381468160677500445535971818609631674361074587732183297775728389124966713749450996643183965795829780345678634356741756033039293590264355732129789110416943789326482663579413229893878422643110852069225671783017610387570935863228248464396615988222968188/197552642195166614912991396771845374656891854357948006221100585931656016640982345159207601253599235265353060942313995345483862152489766993442419668492877390774016299878943454249209917002169480134131612530977452579520564400124908392339263545911443803619972765231094502745980083350567509014991735227390978850048088378721210219321877150756855372125\",\"5119346675109082499980756672052066247676641510661024682574296075659671743397880591881419516307292610449161239233139088348510165442597278965718490070997173182184417648987611422446347235659085092530927312760229499083348217392125906851921500360553758600756698605047197529446594606336369425040236883171542367713951500007600355406492128741649090501989105696576697387613035366083536629358444229248/1077349190930018641197987339365056771667455373500846354778079878558146320193384166982231171317419356136237346389570422332278447217033773023556383420372685049620361481309067017697564760747047839930422553324681218253359586320952896352245366885171583221864112040038531116947187482413031483309534553461613717398523132176948321964066833901215878133594739833910960843185464241840039390204295097875\",\"58469980853327028628854378052548435225264353747414624620847476036979290604604988637469977624105451959796142112200285366199247075503424204044884512269071061176877225315884188402954249683107639777479663275428465242905314418930053869461904934138752031124685541853599407727446896558064252696813370692668496452783003306386669962110734257851955001481/12284458784412533668960387046583440199646081362484321078872891438551639470826582933879934711861551014258493898870867541349962531447724393381011633785884743889445407749238183080941846528000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"632694338036291086868292541736272151517212971647680989553388199374739841494700315711180961760384484042159533979873604395621016272772109619401112452105475906812313548587880899058905419220497456502543971131226430775692744506047039958551641270070996110661036371362526401525207493270590999387476275629412687473362310414634469788979236895300129227082421021999210841384596617452097273320509348159488/132710874087075221626157136110978536488168313127228703025408943153782802265472978945703742152954881438058373686972477195846162708986982742647038014147903817539418442869011995988024638278746664230046452545499722614320284478925059527086663455478374200352375121910000967044366831275681254530914306064535110528723482282501358749001657608122307686482720926189537227492041135055090784059994118192625\",\"2022422468242151190347511883185841333968390991430363660248687284021524206079162212007263606819387821055183192871951076644707111802972354128011904720586729919826758651167984507804867954970064938022106484656560866447290934136610214175516487579122328055482392137619829739560923807880779865442016530712986750711199998190148885726144596663143651240/423528009127070458603837580844559347493775236970253513203186912091140251858605354218715508091394564000304400858761758838182654201653901408046974668599216804223721114331085507752600832390227068985693006017591304916519540245902645712532993889000048992026931475754508248265356181099817467608863068068953756055334213584649136541490530849577363647\",\"150542201776735231618709653388506394887777837646651406023174643241783006776019388336318216053045300417086929061565868663031237502137150880313922488106751241006715449458736723129545400133450376339156062387859536289694727635468338235084533552501618659272047966040838509286942825414463511175531001410923014751124732748099355476332649458471135027773371541572374016038525336728276024676601778299264/31475618522527975728853391146702172347290819252268551219771201846701658848754300838383637247014705706066050673096278897933831272607774110183488615338021656923433335661890414740664480671162459271850877855521869741833030384682549648626038314686632195158507693321505500888988183270276134667071014075017317692121986144742473139078857816578133693776368882596780120407949076129685719314703426278875\",\"162664351499283182546788129866259011542529017155637405328005084357078048074065548349602626724265307733005745244338982661090506394708170105916177679714664432754153795772811389612700051002336719842784098507498286260450939289109123759859710248621544296008356071415713931721102824434964336667980062728653562369697289761913925215639430496443820411811651/33956433298509232632327667206936379248172049619640091186698677954874297837764235300806836350019565970550533206216590639008637925266405524715041372407701947953283803854153876844320283735281209725651036513491246238622967031979233265136280687995181375582844780830517825595245506321879177965868747546127685256867456319112247572348416655367667187712000\",\"27228583713734183629451808889147559240254570554044667607519238865891084165382075658707675405673276615039702916443152954157535195508033284355580742761569101934821088036084480297442018005972653124248838420021440899368869744141698556359295489470499243402799483082406238128875386939389123336303631993557844565927960009744780823166462314116039469622216263221278402673028225214534859076857413557466368/5675134787340359276387085910732530678163604187009567576895331134521132071092293139167824957253050637085885426100206370974479279292804959049999647539684766632278449357893560561608633329561385765035738071726214510832066885156767060324427330401967034889966727638276371320401053302413136551142103678412692111973028587922399670456670380189570979581674699102934733563330382821732200682163238525390625\",\"1340937726818688387636018677960518622106989311577445614347061615417831160296369500704524022869612973331444242000788110133157689786976834913297544087249593601420972111789552905846168933014570399562460789075871112224533723259660967481288525220689577290386781169316008987012566216235876842757183233207943071523447855623001920854571597886491163165150556/279054368814522483241446594911968519760869180429079780837994812436395792594449929617293503975169489945136244602350941695478861584261665582123038340824700224583170270427163469762789603657025958695551448477050958557681299495041994050951692916032501884523150972841782658389836059236040091605838583126400660344344601879969354053137568588338096589095875\",\"8910951660339249479517731530773509037034977353457185453617569046885132434552771722727442649095007828468878374139001808825741829728375370140505088133244952288239619141544661695065318568074863317054989982620944602245967155400712702259180443238473885690297281525960618905625084639870407113029712510345262279507055197024677292523214467306898573956604928730377318210588837126450942086527893437954864000/1851573255256476362977604759655284263358595254392797078730401113550522214182030016660458780180636930591149034499142464357511158868625309442843792189394292787657774627425816694628839987456477799348874853555586931850788645677998004186437300173080088839930384424797706381282430208961565555953254145002318893188197561315855286173276564036402546798318351229978103276843822345004757661005876638005274037\",\"84997663352987536417038496128111159210386455419431137931308301989414462311135708114322046234708053448098538629166672456703651524480738219822858469100454933583774404032968304328859365484249897913676382909050450855222567147661842184538302991526635974158862033287154321908483007506326807469239745851379559259262425675035790574846229470041596801343087041/17634687575122715507915388096857069366146981156897230620371714518707518105157483283253374797127075689236298114335734874553183291806268149747826050838089931351158483980735336772879045027213982661634865556129548356487722537193914986994283729746578044621115589195066212043187229606921062007047940293972381121200723292297716621231320254309060321476608000\",\"1648849257486312935416274009474520589799750757877252390543329851029437452988499485179026845292068377957697884739052491455807688429630524210823560524122596610276957537756142278585091315141096146341773982302888007751632401090642472506538817998043326415693840862261701364114923327286462650797963969289743571514890723145251583881752876340628073395708716735192690808352188867334842743895738955762067968/341580411902962140529547622267381834425264893226447658723654120920549166416114849731588552578626041597847002946105459812230979900480135423787717825697955152193526724029890829615845314765605770060975538542976523177976182401820926854406945392167140347444433885786340415437006775075196031433365827874254477351374236932624514469241634422312990555534789607377023339236417434574755566856489013828206625\",\"4899626659231633406569362199187192352933567344960498139854460545644210119722856870634652562532083546344965166340063297647520613455037240144734014575196764021102614748218834054157165781057405100578668000290493431869797883155764963238760612333048336953434663867580862692267574574465371615023999531030446250351305046572267686566999209229202587258144318592/1013522377571209303732207048597964555261512342860326827024786500686692475697570284120359840724596444209277948648863014479460188496587721578075151793081823795161404110811480269106846359964436993190293615381593756076515012514100289406862487971220020752628653845345780766244842386136740768474703009091552043945843632199999007070800871588289737701416015625\",\"362903847358088423032098939589019598036593525722040887883164115981767777873860799955715587436566233010543937498922435963385091400670303956612881974450548904906949032005878241638546734597308786514086678561900713741746905742866635779432216761799371793260025549698865319760786921444505323758235164807966277024031605673481480590193724980659448692487108892154809490199414370023696404259691299614147712/74959603173756091922435708504751461448318819548943586676159545028063979695880930926805574951275602951047845904770828900645717477098988124553474616764040938121171776556999069351772286262529729056288451037717198273521810585868307402693261479298923209587143468206907278220909447483738730657438961435587752873879244136801168836767273934997417156543866722171766794171623224855358640156858606843576125\",\"8521348154958613550574095745596657249924328336262127244827955886474742319277424381360677655239017583606851483318951440691757875270001283229585075137091617073509041644097526047127618954293881264113694362598157456878784814696577083997902588926421675843291157049153701100218784481406086810264243143337016042301806376864424632290226377881206765051896745/1757584673254145109614914862134217345456065873908262753169404848658913774363650863904627183104777337461445063704655164325930891269843669860409763569362863600932267319335889540453302785099532688264425988677082044905948179153286276609910158854349711054144968131934713419772852663860893241364433872853338630216232313607969790083448433666334742108176384\",\"1802461420562646993856730082999823508145602238125054717836501201545920604020389361370931345491160549787411668288359013059160331370751496329806488246135100776263777863399096485894306306621852596694700845918608199329091852956315870664531614358379176680326508877329862713333336188556181470928613423972314983964578645688876556351433429494008513812136152576866650152623510296911708111085518974142728903424/371238439252064016214448115231139360835481920731625321084601566992497057371416121407293286027832357816257507287295719261141426130159269433199862002841433235955835172774430690352481806933860390015899973299268361513643524088242973968537595085600335021120523852420135081643310663869327371821064862449426404044951571585406092523478861879148545678639697679215289523234342337347529225543852787599016265125\",\"88795280670112240977945082069219541902481768504536167808816453021962616596410396813316064685579412429940019071114917828928080181638058444302439626425155946562362550070187433083541414569447612195370911498321149367969974762244140788494955146280201020345849385865084095189982291190135293114489407801749533448443222584092575861096946605418438181411489276/18262596223069549313969288693970246663726147886364354584825624311486557881239003216971630599389642752648815377795018130449384513824927138566203714891090017787258920529990523519479383032564209629983810866231367438270859421572641494420831435563580050954867101292568399107965982704216434467243223964964535464624988344342084084237484262612100980519602625\",\"752911409358158070688133336918078236438086521781731735123294741731669530734909563155732092406099003582749182967246236657021875488130304108082404134004381196925042617909108654109138702993903561036987511410396567636331465803949049946947888490287210013788802287247422993384874670368649616782837096233384279817294778916419067404863458318451722971117669642134894906235066332205740872938406767767019265664/154635332883086377656813458754577288834216641577439356891585125701020579768315520324293435008561626926046988056302745604248220408154454267643222328696606367409715369481567213640103076112146615938180089303294709009813772509602954514391675152597458428326644988225555987883250642389550531163153338541870029415077982539614784206119074702022117790679351778993541426110436276530890609137713909149169921875\",\"15286089077439918584953144558775765002061832952090847117286473868694909713791678395221438112006475047633028543501632631679316850512797978594476229228325228403849089079675681042224057234415951253954044235099139983386056610384489202589484570852048157272551098909455253037561994944665563291526597323199530997923272894119350512727802414680772513760081360291/3135161418037836259442831302977219750614726139657718770206960776514822107155928800694375522572523712277389679035632531727155957120566617736817225541673148354829212969778664144907503411589126111888917929495106029890532891919001138770210977012708107496187227751496980000137223047079127096028939624830654227758737339725345681745847598157538483308068864000\",\"17723482381737693269787076798246423310802126092500438681864673375704464394105734049099094818738115345706100191580982712146882034618103161268453808819471603805345990162762722549964406042295355916458624836894291267553138041035528315839108252422478610879301656207772491548742981990469454529537049123948604931661837539943536878260665617524824604291547373872716194154198824107266275716083848262625068958720/3630091565725887087605600771358216927099748013831912080380983545872077197366172619225751217619097657405660172801849926220948413919823038425519006413005998509677472226729295278652284861834178791332630676772284971762683579047508016687969040658592436230062049051143001484384767836353233324570686249824980508520186643477313941054900197268584495128610811273834192099099592687485176400539748616360799518357\",\"39160514032490258389003214587901781721548011632821053230881239001436341012396166857515197251499460842954863342641015306304854226194551189224721257664420778416733889030680295206179109679627522113592373938602737416822981698362363553492610842201005420727750505681358595340127099855823746410663750133019743170700888375554918213182862789028531284364877435896/8009919337434786244380818390213546866794958389603666737562053423775386173149395943310276429895991903753441584557917565343673605019989336264748588735390182130334278887642569515202100870042209261561001627386525182096090194076839370589780431326097965428311786635366819094633651297179987340498215947144870164066409654464551017761658775207392803825996394875\",\"18188388167811476762477659006849121912679763597132233588170406666718758511478154418948855160838212151370453213943784067796172102916618102024199200086478021533171984254799008541948973652219533819511807681148179806051835318645591102296256347927018942348574774821478499092054497390790734798143983945096982240517058861467440217558586822663985584775920517755909444876443211404222400335500608733284461685888/3715278241795087610941547133490827711133909145414878217965273061493740719983191775105550559905283733134189195190321643965858771461560130864714477448011225816210219450040558581571206711791272284197614810026220745160693898421068168630870850392739817340370146186703867097982858560347971281142766235850971837330222970900661653800041795020382847588362774677568059355238174402415384788280852059532958121625\",\"46353430636874284402376008361176880938798775506236714098123916668545331718677407145199311191108199195405139575147933283523305343027297808443653460575141799729554209181454676876263582758919969948546918471128299522715691694855904535448703118221685887195383025133924852224568922999317583667985459047407473419196367812949579858081181660610155317911318937349/9455890179897829052705408931064120820559254220394152447502395298827357144081378513080398823188243663943177539817982481713456798757563952162598464929784370305696420245648035222083207596797327498500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"13607414211126412689435920170832779523235279308039712294681570127241403406455725064605210473923965685858012114332021572088551127762628892611459785625407107300355287623761046438724706918300976102581928643740596336865698485838431972050267114940079353996100620311097561405192365496385584164725035842307146351211183443267583872067352881387294766804298681841402861626441205037637282007810811602289501477350144/2772205947240095684743358245950494400934136973845543049938212403703005150954425087866758842625041409060217562878157900197951382737615822655863548356735553650755342108183641353142157728364469706919993519071329069805875834057743793434164720370026073143626055293058601124362130539040404491770346043977106988100969901297669523170508321703496903672333781306743488573086901583022550356345156457496396749797875\",\"23264350093315690507131500726914401771633259602904894387312742275462601574788485574913195967854009886824436237740789910851843045306673524324611130536719802717912615609109285261163220007241492964833933975789257681755002054890453747803418465119567389315754801791950553304034666399677630030683759466627797123971742061866928213780452325847848901682792886840980/4733430508316851445525799359992627142007028326865116523033957869609125212251136452396410236930025876982265915963089597825393317909648054808274488356887197933393799241941120691826916741647173843634076299630884655997401370400734954098249519111198509015387869462198674657171808841005212058822254513429836457539629035675822719720295352508916898476137111981397\",\"538960934807826161927564251064896730663918579817797131801326848839524373936888402762331254883505157846659830555799909822861853145306547699817986010353774500545305596630924815657016569444824389893996399550343022444937690798126189162954188680257730893424775303801562327757655350002001080811866451425665301674688928515041429654624970707803336800125648742168380676815769457467038849213225206824671025803392/109517448833211208909213522579666376007937648875042608355810687327424621469323788799169718267715808580775296460944943658428295481347915131091297305260674731651980547668762317138753250458639043477453950774629862540017034566407286963562574188172753764978963685535201028286359818524519980885827473904574840285411260037264057197155527809916623487144493019982419606308144576939532055057697567269576800542875\",\"24451481554350251656598350124163983489544445991992661049829014268366250968046589127810466483349378560701491445658725080497078590986743512397927747885285095846398852574219367580068049729894667374214861939897557930527646930793431512683750733092448862551580494245486308114129295467976874843852138144539250235632985676953662288536669286915983261820949386845806781/4962240683851186225340479316959605207278948397833849899236383273145853045488131674290332609876751222112917095096150531825255611911377071887145019702433883343849119017643117746273523770961304609989779231048095665388209125939879595509516490230961558353074751312876252070889983946768175488341370453053495319823381943793679003096504200440997908071027962806272000\",\"166591964685609920525429719961758335887941461052357297159523350448241484106515158310298216150030768812873781356326923214637847449893575074813991141092681107583183275003570804134461187213143832123628701876041315736048451374824101256980832991214945762266748755723551899001458245164317581617731332466039757786839492869211248064662857987111284518155462148044812626055842061283907063784492325693994911811072/33765943466859756347231737285768516240749714264564410814839966011490233598006227246396923594069488496368994857718734549787000213944990695920130591750377483911116845697231074543526982580529937081378303555262933800375576494067959129682770065443667091668104132884375840812635624862495548888467575848428463895756394050252457592540570490061561616914443009224917652440212112452400106121785938739776611328125\",\"142464729519206642943985715465196065680101634264787375740459792619754842396453535646509170066091478069799080172299369994438836484938378991283020978342879057271045033903518255546705211647900945143546293360496661466657600494787228476009216508124736254967761901224547269496682078470378676865981855568197705507111970901389105723589666709580851611656838285777566736/28839643075889294346635430272525349651555039807615358795334663734940126053968249608601725991946342449660829847322517564370606746964714098508298705743689729306507554363954348780144675937510900983622836770223945538844314468550644543502501484521561567788992156632892028591678742014134130878101553633195551605796158103033794695984958987367799607407626319024034625\",\"380457154857422076784416625436182734840012277442496600178664323821064977485271288502806124740204295811759917468598315932331219906040253463960961995849761235911145436552991677050565022181516596464968316292789048809559129516930574340710998611088996508613850407294743457197519091160170604426002924022923388338999324182261954685794522778833029950214443271526469607532589775916381786492089432407550224137344640/76922142291839859196033215395526448408989799722090330866256930898223012427332209054699494033511478050536463051459450844520020426942553107946282832072826069342120835351421637970462054707566481086202287686453371483126873188020538661871147778312986131920021929455276187425940666580158173676284545586944833678819622895550345083175685846944633982680908505900099388037050135210936852210263717185637166725605577\",\"79999800708369666670693340813609265988600461251844239982904928629083975986385235816587497657678297663151298709076884516168798694292862559083730259839524968813932151813233366175091317046758260934357096757322369138747731224414176608247605314668045838769433811781490030635374856042786947109101585097035794969502111354126773165391577217071956928171336060247633607/16154850265413610119312596299635391433380319311682208755390341659152160578366244774029302281068833963848811596545791104919556346810193385001196395489740571188884873246131813864782581356887110499639544662322008824704830818136660544673293865921754569356583698951612797219776290835161780326945625621758204931298948625885081325268123344406261740843197232316416000\",\"26517014004241498798848003208133111307300592620947908933072661812816683085261359696887064436611747292468717739609776825664344064024535028242737616786238200200498291226984541942836459188328346609549239724653950302145388877472274074665166631509490297630344351573245265440164082334092997307729007429218385933622623935704482371360985836659823269511115937443161532987660855490906546130131716829909388620539153152/5348257529530073524280989257577050878033239486885664777340947102417077875628238501791711336803418503616042922880218860266611595594400020206192599559925169589023339295256084579966533260861249529670141854632965231468533448709363477120437277477668173149958267956654411822360053335695956270719680086524322530514249891157439878407417971839744392044064720476417844056346174795601710447583861127956455406902139625\",\"71197348290771978405602732839537012310626009318133570890482364371056186523989330157966045289127980687764218363064941391483781008265266963537623770685390148810455244349859354857421474277963009857011653865476081389968122418691934354122230780300833008753686234433642072919923583176333668289998661499146617277981691372057042930131717336250309680764289256080895092/14342680993892886303954853579883363225921109635079605392320944523109187641283117181461662846411912306480691901515655220490850586434947504504317080144378185989596578890875561336496479576651516902048606328604696610314441229321219627021610788398730173161473456954861916116391687748151443335513249810808309201830214153565966339609616397865465842187404632568359375\",\"342401018754023891059352629509715357053454506037284788725127073168445189422181540408896452651232759821766616850264122591225331120588918865882061344322996688880669665450231982002597398732201789017495427566260651180470635467002453249479483900268320570004293679361696197905823690145326531180324429318916092471863347575533714871355651558610515931373080997536792242278529575700808878786732127630024064418468916608/68894647682461956089382461406499759613691148650738957016015844830333168307020284281532026442272618372290646283794122772122665531108484704223311663270836645399554940741928358317884620420886609705267248656765357348477857852684140561714900614303731786621656041881975328169543884661780531057279582784036689401206706069028229798913082362331334839997133771880514515972024899408556517159759907883793675672065360125\",\"190286571838805495686895463752492174798162827967490343625540320679760700551286395956241059969689020885714190883323266375067607282890063444652926151862650426323339187596278760962390404656342309737428214493422028545912504503974763216230927196187743439226243880933947417760147785405444976177822143722569696182520826218120595298059020305548681823408268556482981325/38242608291912408815838081993045123864617058390583394828737640036167893859507494091864963383596867701436244007905770284939991912884465101575490548813894148831966132970730263562113961685364216989999844961688441914455435934703797359360780356482629495214859917249465567846934284121032247250332634283689409883499295469118485912489058982596725212975311140618764288\",\"15345379701153714436938289567639102307887273898834051456693981514956329731572600026866162286097662958712922836383881840211072389867463987895894067288699955858337488812343674818565432780224654423872618380928462939482247900055572079914753652915184313685270722583926261499687728814560680092231526501970431280783177357735398580700300402036873780385926225005561766822479878280891130232036389707452005183370152749056/3080426623087819678602049171756961824196425548529619576972793653585089380165862889092832375934535464160425580449193072125955685099151500755278763306599307218302635233595329082702148677300945556130106197481236122437978375963261172524503625593066102601042060541617791008722569799735202779005407381267021641545644264334109052258081225159748043792288699674153722046659880085850980843460715080965607434114275256125\",\"36443601662144279337033484452272105547257065463167427418525882851507989449375452076227652634440476502702584889057376829320548464677623038648843251719168810701744338735202853412651160681259533015293997501525430222870696235141468274274064390273214484922080219643095978640300874086585386991338440415203863901714217818222666715642467237183267303214471854472286478344/7307237990148312451155090506264642657872224684879860008436735430879314349554023096366846856470375025555139219961666754780864835035902856314981482268319886395881809659368275720375576152008289949085453326722156553603358879420820012964006978808113307340321824660484441618487292138631579616351777191144073820686595597986548374588839763719082323114663844043046087375\",\"1575294930860663922843149113097927168024893739962464327016763741314068438447271326302129681931564068796631337571133444163024224071270063174829664848259482066723104251718808936762938249028582992557822551950212098797718627418782376027133576209718376784834456568694813577764300716139817031545408608110880973380162736536313173329973171844528083756524804574267826691156368696436273087171467254161930265910972517504/315498546654512047637461608750018349421492986465373840347519942494904200733840189483934245529561231604050629653992944140351106887747105945984325466452136415067807666316202346895657914393512001212656936450425268507235863153258769360296536050028695266363553141327896064944506216017933135251875087069031098099192325817395958019524956320840925176589616439477134480262100237057953933117460110224783420562744140625\",\"7692057599553133417225997786980128299372439542315125030077404519679450372805989755158000864378924877036225189784045171045139667691524763609840822628706422918926410377185494048355128046783294954373197082851501927410350313585640237550107070936498164597231431242858771457898152684298047446530220873884022213114819556822050178579707210264243087257050468000092842761/1538814487241112760739561704846381585063002784795057066438330325566843108114787083741788078680861495340026117682606689156065008672344707615420501964123121620401073675430690541617930520947170306763541251152854304975131871537939618684186766168376514664494488691311397307418298556185724993104760692216619178358268934740746932420562664234738576394742559349407744000\",\"15190836470550557926140012263310230378455340797095100474720776113765300081463960235506950799869073894127884189857505951314428810423734978025409205413789025720642609035117121385453856877706229778165533034683130064865256448444765902482146676668197546098809055341050873494446231793312407516463576380102073171090898973046611572020564659042146465345334273595086941562425006763960197801018796906114925005810069684480/3035556598829526968124942916297025416522606357010637652635799096498208643970273828496655227572100159414352020909846298817521082538898702393916708804775798552206401718323929157863173504795127180177622667376867235806208021329981136637175570409791442328468473111768140746895005561471574356889047981458002257872092408771959478275534098789982899056118498417649167444480913552548249005268380838457505944462494874581\",\"2923754549090941424546974281011770689534961442264350984393235983189168024079617848190236639328676436485460311093391982825027512234467853098757486086492333410753919927528867817406389678461354257841007722472106464785557179844602277350411593959136520732862935740433163383885526249897183805981219416420390137516812715245569037561966929572448247077578419534651990827044/583599691615378545100950777601104007812792435102945248411439102112424251478512952087517463400054567832353967731887062349496616445419782499817548928078665212077449420216892583997505908858360011413290038645573504472422610780073975450391707084016931661068694024023083417126286468909117254531307085545768412513447197205482285022417611018126886491416133665625891075125\",\"441922815213568908489589193556560586318864326425397702047965372289295962228254658331201274291697626694859414786292266008476137667843874780506886929181835469302142365772763129838217316953835831059616268288399119642314758261677639945004547833810080700127847214666763863338091523753898362699222880772298183760217731228628442782431573977490761665091005756534420789258276075174436091798475838370152192077494553263232/88113527373573049332749294663402406454524640221866407165839162576979477138694653404281889227416977618913249275712917582743426231744980461918772793673202077716234026090308791893409200158969108910565467273725064769890443408324386897017825489615600787634985397885230455168591240328585041836771921929567914891379235573982442311269392541694564675053636078990836491104116280492254795616055818375774141667319774630875\",\"91197133767962483852278456285591810579974783077874307589555559715577599604626819245000672929518645004771085106770784762994476973842713035791487204122653245797126906189270204029735872508462106527240320932458036231707311992868347221176460407003487373754014365881209649632547685657666691589606571865740595829983849941049450471212387808617247938941417000965198123059467/18163679611214677813643455199979098261849405189805364986036911945012016248297645596270602508015864371788974684317239728239847888960155365342460843559658233069613218442910226128113196984801126248862273503232000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"733396724434554481470656964167233690851279923085197144879644750437402627936723531635898542414136943003236478432848965516925891956615111678444586384493883113385335463639674699443808084827715994137410743992130712903997815471369201406683862985677774155704267039224546352414417632475628136460919900347977754644214725932476856018335195927604771408949980634142255497812566866795799230501026066145434755838336990365184/145912495644159810313026420025053989609942265686388630266226856650796088768164358961644113076809511566125145395699271530802891523741636707532676065833327082092521989958971154798465784847092870457944857590623097781956884297103961713362268264159015928554707158239398721416218953003215109202771651993622244788505649098445109438104466256408060944298437033058380804126574878377874459371251056800895394904459469832875\",\"167606423853658713615749101123336326908381619586838606922565378505211386185130407423587264776519589295420758009764678759213587906216543160801059029133457062067529468464636376639307690657945597847080706144898920305379653754920571797771178341550808041652360635584401789901525709166172283390177673009483341826911179861584213314395893323035527116283758445038413646757280/33310364848744488727470761889861069993071965180756187311178124887286133554324042422503263994717993129539448310743598138364172889305532401505890384806078790034557049074169245078416704866867380089103064821732673967120808611636618526737138435792818828990403374766228037003927569643972203993263329403469747342204808360947840103843317533210523853631711601450617095736473\",\"22466735478643771803624909352181817912387732117378538284107485621001246177152644141853604633676939694208131243081227668237716194316732125445041260568403752325416203858329469477774720998849334961751541191761521224644520742691981372782009394826739249604257098248751626957528543558542443122470657230835176462612530464044652140581367666271771882198747182114685116336512604038833327707163107207664705120728068987996560512/4460342260599110071819142535903990817893424192972341872394014748315090430999224107274777695306032783105944721337053156074851240201179902835353097683269298594190456286888326067932777720561181760369783486872666974623910515795208353605697065447942804414120030678603538761538385793829787734830129764152263691296719726909633580318897787729004972323599773548689272008712427926734258913271101899780538635213826239542884125\",\"1972862002066252798837977155272535342727415329632252213508267781390870646909686724955861608046325765650407340102472833428905279473185818898693854344138403744757857928883601637909604082588338869612221777263582365745419719805587946558326048087138197694016224613118304623864709183681172362693106460535117459192992832969130895829916210933710820035479169562970982784580861/391262854245936198649509275719624152305206807261382621390946060636032376057385723427601113233050260359684153963520782285097664628279596618521963444574543409076428660874564026651742234728997339844161514273669735686516761239076529088145208958938384732800586298943281728435207452253170935715239392534815683367114290676180839217919539381651841151674859715992309727232000\",\"25408691426286653276004556426513401767718328640048945917745783225459709487487356095164164652218100925888847689099153320777389381851598236046402124684511968385325107497047025485302333503075085562533472482645023963717347867696861885363417595298751490212495932766872748125111115039311507374363000062513977436921772096443948159289707996749061007112458126301618769295162649600673247799961118662602756889448152517364992/5033870770817104909025512331238419776407331281944565644457345507262881100618908405924951559853352841154730802006750688581603270849880756026262217651685813584900300357685874044482329601894134443542753690048962260914642678445058891387041919581376195543193199307524572671344323361282633828144708683536721118910549933336800461248338059209853766305058943888965279863852107507075916981165164543199352920055389404296875\",\"616565940481577765011174617619124841631603944267256178093555235591208387588894068005162766513720546626399308168923904625210748051788652328072241494243040185611373035059619136712559505023703153194815611268503291295059648269772663939137446253437248541496631852986499688052678961495116210133458596866684413931188348798244969797973846568160999564540652111599082181871436/122025682149627484528651507368051367620578469392233875493556828623437869650284356703295836998178256875766319508797903923638967073687991229708051285605187358616531926112736402511567721889845693991963610192161413692928378708223712791930113386840109729368772998347036090902364801014045328348830748307179590755723160142468563977011700764517880467116766150322736003147125\",\"979882056834583241477188686550561625289337025747787132773853690143359657519481397575561812727394470125172272246774578404543257210124412718725081536309818383310896102958167337333430555168671327992395916735022711297435263157670501117734412587691271084981140167017421900852550822579410636184333142944411060788723653596377015359036101170054828623669169047118551010102258802465554033173968468183492058271365801755986560/193732066620504775981759812703028757608600125742477178751189607602983198559778039141192492589734277739017909889924488699372940787977794555519474807920198944109549023547259912324279741006975129518191081373554817584214941629021088206977532599055014150433581544599721903881284581257812850697423350805715586436114842183295730680490110793225514602133304729484547181740290534056445482186430729398701311563285494964645419\",\"1138059441890428903336718712159907364975959482163004276901676063186939296217569849990951930955270849692775077813359573394435924934540269310629731801376134549169322946310756738187834128956671195358413024062230774111935109203207768898525882417078119314003162592087920755572050993355843681931139257303484526223461840939880759908449181135029327442039666513325916729112853/224777393704985303260433439401503507705148576727364388720387174977154204629336985298082893443205223017966145098064861566754244624732671470935725326043491911142467178027013112527668183783450932992534517827863293825061296257420183669383719043873666284378647952385401303733274771042385666436214517205678674213118374889121542369996042313879258622144464565403138392064000\",\"614262617634904509410555695398092190166323289787703954329113412647342230855826568873946233136303566178604275296873234926652080462259552775254755109931312516616838091852915397846984381183732773411263828600108443070778861986849272794442105107285234729077818614332155890946804257724112143631642663084660012362691100872465148864413343598067567142977134846266425075195546265101720326272502009234689388355365794889444257557504/121200854655310345878069155190734381476914416893031941761756379148622591310152793328910334357724762079139509813381997287954319983165971628429295803162563856219211627796200599196263868781937234015821367575512548522790158101892507996780675863234181700253545912643548466256938936835469646114659598727592390628209362096738343417775009361678599075671154405137663077798419897932404104579113056038271753988669813988076515476125\",\"106893445531995430131837569895703697604978445859412739331042151546083234373443601923983714252801103551874986033841637079479794895452077803182698291822629713500021995241940133037200268381793282318691568234728329378829301282121562652452936297422136961147432559766896143081059518238234777055931999714973999553456547746825617168005650221542417216291412324174772893635832/21070287546583154895102927029203125577385528350171457634203261197137238923923245382493868134869009844094435068284335909266152042903157700510534904847257436666980671067329084409346149729385625108233234542133838924281113454526471855573271066865534480974484196644173270141056470857666632902827625475719738076524047736123182255306429677688129231682978570461273193359375\",\"1112742798776748551928744983308584493817112400536084744850969025063360679785378789764875076529575583792571198510306186417773101346425704969671256564494135750783642910394213727189639661184379341961737135764570942961692159177189753139209638929302928699705042832922774012622017270172331722295881412111812933593370743210214549038212395941675257558442878012136484052827439007483777859391215222647499741572327725689840850048/219121905514652575155579185322367175400669386131891843382447432851122462422992147756333729893028362013318264155489537138133372703295804002840920402482110260590055749843170064921843460498824128274420925357547023876488939786863662801268798987685503391058250902634999352652063668663245829496836853509616873246554292796823779397317819134891873583857621623143253788854530146303641400986028503534408870194989478421253057625\",\"983995170259637497940121707857673268620603982844439610076334749792119502557380361624096960070148627663305171311646851566811683351232268240169848810658089698606409195744471343416197434926513684882439596141368794175162315633192028977211909698595778839497844847281262559899914504080092844816319298286511436690429175757804604673752838786852277255064434365401871903307643705/193579499709739777577893639665643417521924510242119561765932078835121983190401762561436208758210519231103767232899529457440602166918701550386152070813526760823513884391055054076485295945972185402977095815609448651316824455250005505410192101148149284756928250258632031981439345164037318129987999546683113483700660879431801728391911161900686707231543216283304182063038464\",\"30691013076836380319652884848585431917439358375118437035944950498156836885409110087616602043242747413728866747975631727566613593257623099549583001362246649928075859944695060947434885707102684568632559339383409378997568182445019183928058902445738702610436187907199482604867148445903921474846103586253320950728989228898324829144701782792767763794895137313050381112872972806712570559942583906619373159053654481250809168128/6031936190594376585238407905469035598668211679521553144958053099463931217856780171872253258738635531385711702176347575597387389685526098889278278029314982721284691198967204664771178761416891317672705719303088746953644978471289001577698554025410820041497108311270431130911021653860874238212040640737171103823631718483572464361276703378587106311153455557896527384426327053165214814954154328483257657424873929502112904625\",\"33633002641218571027682690377239300567277297301791434890431645909447040830457253186262970747405514897340315490970846553666201190386457221846694126637998462873786334837901001833771510353365825087187582807843940479192544772559118293851131234910638705258664901225494129023244916125545283621607920983287799648992632814461828998517949449887522866259724675318233522060729654796/6603800575190864815125307817934327053530311915572323544225173935830559756077637251538096164499112411672913910767032482188570876526606118068929913515497400397562722669603861813453418621246538114872330536044519242663538662076583511078523573320035084744399535581216815034837553165853576616422592790103728141443697362408727056813977234078214386771115586436985105038873998875\",\"9090550743395453237608373761422705922989356346696677314277463900103283296889488490217663400349361962695279888433677856471792856853109469433355422802663947305503479561493033851081993247556828544308258821557994512133708656174864544457143793106703578476914924328960109390350040954158797845288786321215010324565010420734044059968931558099077932776525974187717655105951506223649947806568984848883258144616897526257038550656/1783219994432430133950472014582130883873515063182143523712063859964133099770763874744121895885645346884371273930727450069430704145915261127061538288702855011220545530326588799412076879985026006593893648911637986337776174555198865379578424838210466703683642106934154603710587408512357351455891557594977191641529451749437270208258072920514602243985184744955476557012910446023911358037761232253615162335336208343505859375\",\"396226087129511787616470716244996965529391571019620342657409150252952330537366537352182763477820160355931003174946109480036915624974500187179367618457008802667089004678925595775249725629495848146669773574395699032785024522882892752987825063933573399691764866816284097232869198405981830106568826923407996367321353003569052419999880089180418759265274331299787468134974811/77651132902382550540201641628906752945078964002822585000619340261128555048628863996784740469908853602590877726845475670110127527874088625214912598995012971630852593597027649154487264595100300180591016581254965295280089902497540043916128232871685159131211213497239568483141031137909208031392464815187505714066235868748950184065923236670418822911614780061752905170944000\",\"1288523130900767412477856952035690867153496584747510253984686336382980221603917538996138294311274357713893956725672062832264871415025750136690143411884111580335458539824573239771267043414225271729141508235839982033182605445173050590151912297720800168687369852280323356691345317649445843078291369394324862039143247087442309135074453265658730028145500871559458519282433012494054724678302957276371418936282902434203225600/252284450515080370603949213084529993395050575951188044032908270470514999880554862449223347761507020354321422785760279154913310488296485989979706208254206974075438570521939826124860483842758137231373182496438568202110337751291106165654945352183167578675508602832478752400011567482434301614269579368882858973850914513870297071866544875650189106576672289734326492492059816669288907018095832842249738081022227281715919357\",\"559506782175368748187145067236900803925823792088293851453005882621173124590368101213652371965740365119375069053747415415684193092607523211636912074219215053809881814859129515591479780669511533619258835199715146655774919418434080807837587396115955105126806762961292429904380132116986984435528307613054828929294602185927322238461491059740342387266084431988727321711184308176/109446188216864405154936682374609448082436347600301765944233278303643744736544109262794383069197271409398615846380701459882784547857821831816863216080069944818453908760476475874319791512782445408136169878207358663250499628002971644430164185578966399908622640732411885568638054229180673755690889471388585521113862492432946110902070139679164884208988489955874131206343597375\",\"365842109776085256207829452385781129402656684569922320812625438296958174120084800064669048017227033185969596458778213306152397766619692644694641677223213185977626940193107608138827771259334379895020377700759789774994800008933137569543592829220611543060189849601828342989023692876182148818363689293009174358168826340010491728715549904988196347316703985894355217235339548078187164176255405596310602921647203428200269666176/71497266937783826306774367225149833789788300609530680399994804704196212252148324552193149332755057982662844988588678159610516634667597707204818296457616315484973288944637139939912166034691155272078609876888919170894915224022982785138928008133003473320018151370486895637936102520353951511525996197267572355782608352075229547764732602557133494648237258900273354364050662921889937355682486287799239363976556848320046933875\",\"59378684894605773397070783936113244261297966863668546282887298999811950599772732377979382620766180662159460666220894896896564357533604962977968843474062092083279165837424210591042655271577974272394203253875965589611493384384257117088518521598379301169916060951350650621757237206805037261878212424267780312614942173870651684587166691539909068452932891649554575072205080763/11593916877920131260484148322810317629326850763057953025674154928920977965095141485536566217873796019006709247938019404840440511433467040918770165456925609124166970862430104329357419669175323763143377917913760028500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\",\"440706629842402075137926797732405268015915199334341565218443748798479563505125605478061664327658137598204192554352688830679475840386882350034150077506804799859586772904929402683276898098601814091430598259347980573084686932949502809068565420937301632494387691284902026088950093888426872222813857928092871267130505744095697172494119689779474840037266295586359244899477781345249657455186847452249040895151288114085352974933708544/85971876318334010542313048056773419567285701852816309711738644074302467763075671531248793080425349570584102078764464196653843973936119037322000695949209283327606280423406302517302874806092835694196353778161663338667091195199032831587897410329509487165187753418615356836636352319310103639079123698118997500068644500893282438137614420288839230827096109835206605385673197123994357393257304049093683934224826006704198171592304125\",\"13220371178312284248107863849287558696210741535280184003301555188086761767176560823174196915070378763091889333203635784037294769747641959860810039816533609140662043493962707445564057197150603226797446933532133956054671103942520142568674339411250001585991743608723150284270101326419464088290151483823061613403673956918458456165552482913079283537536214967294211244361353060/2576683013797055224377707713704899315377379548630511095136568220145808780162671473907260623503552385384482723173913562423316997528913651044277418227616447815609873991028073011738113927961824632868956802271260292075825561646156680740323686126811928372672670917332613490241615850953660246271541592056143611581223295045062157404996958100136358649109693659623847024011265147\",\"1538372578072246705266078247950089219881197139399081643650271348770110178217959856819170325400476655944115553238940541695152110949081675985299189913515975242840473616169775880272489805123124548256666658584129873597192213080038937409046114908719298170078476325423466734429870048697383304265342125425087105698152643145531760853127801123272389134514333752173173161562273487752064850461823726948588221913540799816489566883798912/299566102446745552813544808169323270315327122249327394279467999308669285416179486075255023523726449428151807672528368606071047812907935426406886253284580296349349558797128593446316786243666290649442956134448480598303527795996222703837663605600624271807461605295956674925277658331760000117761013381199880905748188151556184620779667670278558839116983636972680749836497346863752662521197700717702790359162307617024566689271625\",\"281696937222363685333688097915539146272117417024070728031063821781398985795813333650547982965341298894634762289669256129805545549280355643122501181852136332529515756074502902204877664395456278205770206019663082511098956468724829475220996427130295010430751942126263620206886404244432409164651524408198286831329682605959881993845189585640874220032515465014097345759490750307207/54806274927935495596891312029173862473687610099325998583092091915101265393157631244775387832621032230434007486602816972765210205596482942091518459849775458089575743699797096697542306049628939919466378189656065461708686421130956996965004776108499273871055615413566043083634090083096967567965373203683231171594922347812966905149873265654962896456451681332216735396249206784000\",\"228506238533410805238253122961471637501498406104430046727793420497895852412513560203475440156216063574654372726194215013407325207763369075250819386897086702757125418327084312933061738392406321003231853349865003322697360659712771167066453430309997639548320673279964210730701373707765051246595806673865646607841876463608039111252607452843372970797479959213447237540830563469297144446069689149549515457318899981763489792/44418759813188470246596822974281932219088697005123285598909329328419879212164564561558656547678211265529803086702843380128457744445765859393426675396393053094588240457569380155526179040891009717323059641035189017918495485630657360525410506453554255734005459614858972904374739673834145083512160883402151636664208253116362089211658645312778404886460203600762546810897889629330022309705583438699250109493732452392578125\",\"2396110297187570506257836426251930521245117960980667897194680897478996322590925380310917400763581787981992131769075961259393685331523600287377841990678117113566991100720996059187144934569703045966210306282348527729533806882408323961336166190162075154579344185244957673138372347997134388801085788353482276257401005734929059700346687783400772331280644647089520646562669857652648/465370154262863030800729180763091967573522779260407615567563274096037297593764955820626213827962697601334935773802201919483657310282236100250543992334865461800976838791035335861420892967699843608855185710753433852279737724446294443337363478679601049432404435672469098850676302728116369979460222148206944323730586138087862719386327396334468302608499235112520318322763857676375\",\"1188272888075247520453568790651819187486389546755745961952033150576243575862120569399808467067800830890874391487822723879717525264875722720416173276963170672622214121308038530968291758445510982186014289745026439477197148445087614813262170975056866881909056450023324743409114115141145340480846088869807540798073417035168139476153897066325127540609756310068558610112731607522096096821938163134080426356894899245575410494080/230586762395914863625709048789913840511134004337945700368117795195769576856434588144361459740833007125516905017415184787078710001969815416281381427387949263792200577791644278234661952852149216540491852757174842146376788280677956350901082838474705227642420261641783722891948710833898248566893322144435457967452449965772543077421407816225704952270697016152452032506898311260979594550143344971416786595888053149375287120733\",\"1072184299258468249004114536023934869518152618369895613271618698908405514630154819453979477077738526673716264830106745031385951736108376866253955319711026042389282009348594845497252059906901748860111986811345742998968284077119165082435598381810306691078037018432766116865792677955520465319184311529667642995217214507658693259694586107847099911341219913576038605872218680562047/207882129535607118520818565811162643811811563516006836924341123976848022970024793004700710992938987476728640943834012473687892481059618823520721737479364352887178017866425027953255856440099446112508663603319745066750522936408781591578321031173620445865113295407603090322283539974563690157418931060565698315406021569491751612761888641141446406531645379264720684248398299136000\",\"158094023904374464057702010126993231151433474361820266584020400101533651587072432728050776506672527718975042616651177034635188178967462982926261516748842073587981953038445977514446838733557926696939591069712397947055261777416704028506441173540338327591514650398349069348381309688677335132100441905603664282735310299686268721634369502296867409514777359935022301425165750780988231639828675424239931533849896744198012747670272/30626384366513923671063955469537776291182594080083494737341604579575446319190916924682809546024369330706012653799783122328775875399363759308193432327358837772825609356553955350401725689682838701996446404559005896479618311357573203081153855961484398360670837599853294627153740224543175497655414585918231215639906924313779933211774291565425360415684556655021031131349317390382320286092667852173815259422737956767922154798375\",\"12216278924286401897470540169822542417611356797676160128176706721343511598951866107858729405615631246003458062949723290192242594609994613705183460814797527214549142043573863947658832694800184691222426521703728394203722420336773310908687071670107794543022567943478843065246011544888390757810534211554666736239506503613750756246364621509359804902243487113673014588325806249988332/2364584127734680580481708368927921125934330000162935118371174269642831409084634375654239735054363928748162229294829526339927907778510530444646754603322373712788147193691037688552857183116332292048731726305451516954679277320777955342295564000586923227775208580772868590742136150431152495718132142742153643081187691849828217592954519485869135930755646768375299870967864990234375\",\"578939195017447864385837341975558679292903716580114421030538728778491606282153588930983966100514147976321305616196463174070345884292672842497715966933722088536619333912687108737657068701352918582656105418491672377271304970407730786932913490869797471081081431072836814581099271832696990064828717287258860166842791984158634684078346453202928137987930328826212011774670396356151265781053547412633310327737900786639842674288716416/111966291649651600701875186827360807558960817589719096407887999108024557254221008849510152469119211567152616745769256123968832250104006560061907741567034087109512483357851919402017950812795426393415409198268246337542639470834168040295134130657073201020340432236723824670803498949071870597039309004562024033656488150406105175401372709011082725359382691270659245312133919518760328422827067578306005644825927050994860723405473375\",\"8041514821545833865350873212853873042112343327573364523948780030849543753072688526717886590013028227714585965095216381829914996539132359247488639692828639170075726301411777307168737667077730792892326979446426349813642680537699905651125068091362135055902152994216233622733424128982011248923051410141033146604688083721413402395290842738021365861670415833356403364696759583009635/1553937833499559104910551811592138833189892464446761247731330672284191313590708439680460540329836344767557599746234213006493842842879398684745864919973051635127080738612248150108793397855113122368507483429209127035263504194847798809612278864438287815470711036548695032421148125849669175729331459149833945183228413961985381338162155596008680906676498435954178226973272371625984\",\"12059659399309169167301353842123191409306995788633965680414620302285606896146667751472818541537183787935352700725982053536032930866708413010971856856768384974849695774437178790890015242323873769697407411558706626105140596160049735605389301414460825674631122462760014451298494875244754354054447697502521388381253293175367558014453865905104467382184997528879171136492277222127399012368677604910497789360212571238146627048080568400384/2328494054002703067219004484782931471919751585969487160602269605916676223315055450845942763690581877771159615428854802721943114463834992106300185328876910271612375509166975628540839858771078495267566008071532876816826751069408153323840515037497664871689085370699991860738368371510578076683395101062439493831773194498579620513073693022191702398601471237166387045790480861932005012807234071429628725981935147069738988682858417182625\",\"683009426705008850682549700382901603742691705123356866338951397347368059105140826655486518416578697931244347554322654428162554903861783227680935341690740579867651545205562690172425016836559678937794312287639193745517811234257062356826622207475918293015140472942579713388671782202262396642735640315948612572908444501108579457520714632371056288874351015666995549139003946314085696/131769214246522869780429817236150406548549044658474416909806179734873399109656411633488099249198882165279745627038984487365589625562901914030850178330133080409420340227179447548044572594184601425691821617928130423410997853384425373999967759499571890326740433081063424903098252502791477854302204200941376983295622430177445507316706609802292121282957519571162158620971952084486375\",\"1418116259749091420309271913909337143756589314597557128553117870573928055109322864794169592355058370891251425125187770724828108988587888087023982451205475980371440423992838481547236638456717520835668859093413956339261802305597694403381021863258753441889536361061407579332570493634254542013337999844407181346815549594836374497512447969751514466481466717590255369810506813543577735080228718660747940956248427356785784199073569408/273368882980516556922532339653303822104510203916024760371844491705599093435133738774975538364241630079468712981056336655766117378160822393876348755370711942273876284944422610974149712212944211513462921649872232656449940987552227525504529710373144228818606127541937831103642415534318303187393593236209298242574677293352798419428712873685798636474667204083938875672934235816396371477146089168375198141802684403955936431884765625\",\"546411077581845999248238069684194831621691193366466972898628141511422317954477211865167402284211971296286346492698354214043840080181702652132835681239302798339667835439189275457116051279366194551632712819028177402221815140045210690908631767786711675029194359998826252332434573121740830827417293557234891406021102083555472155479148332697839972702631641910213821827820374586459319/105246945889799140338072754365901705544530661781295362563214285953881890233987516230568663143342952799036341701952267011236663118111226623815975847494372076420199418712941018288738590264475520229651370015377608638075866459684692488079223686296541020897904588347083045723167762682959422858996673894180805702299907478685374065593161226849447131100462022089783265346597553176576000\",\"2398330640958841474772606439916070050977544535580605737383995160447105736276950196885906408317628083110923322157113892928963237845914017845444295040924101784423382681801754191301860383927129006953354739240926643562987838836997453985855576402628166875869041032631651591871962852884189548538272285387092843044669499688035134181859376665409767886188304314888753894905317929877238322615838524354191263502347881033855441181420399360/461588070868590122892265681879734295007029130965626060552783760068897000195207878227714842617470320231527222074701444349530952699708435668339712860464533455345665068841333232359698449088497137068713309811942968433868609329301082001752617420002377892756821532220676085014874112083615054550278903960627185675459015343606391094523511117705747842645927349130302549554534056269331809016770715819934970200483161548527932617036185253\",\"6041015879424725383006424536130409209607854044642113747266098198777011981328765528361630516108680392500990580908509403483891763219659726090675140672989657743882183951954294745396417829943469201306594018454995862321821016087416840247422350906412007336103086620396467456181771583200365740253389107968122850063607085957109965406634738740996318415514360956028575560979203447735121436/1161752799109428422288020947061281540989708937450568100764830251908850596717606701047413407636907934320789870175907792017513896999208892282137299070761467096211814586909598705615312819596495636017728313513520193786266452836805291464826226833593878504804389728477191170027729963773716267868284479768397603444919008915279522376004326398403851684761808785381609370767169521034383625\",\"13240077436443988749179508462267267187169441948722358165090554769250505713747934643200804819418670147225695324432684266924694524337920816452346599774452681831320005286326986675907899608537972384924882996757503264622991355949039882526389342174307168805166215838138277557052303430492669193939212362638263582899713198716541723383138016564027766560215944409353427176135895982596327685665844815618402881202645610620284792793420780517248/2544223084468158291883698813309541801455311468982232546872485444308211415529998472787377800559884210837213042932180479090277285630234238711851480232520137856848809986631784843528381778520727465146661792797924458540957133423665746229799675650290296217658444899605236550972043549278128087645211909479009099766619355677984218929672461506691980442071860591767266913041147587815452007726513853820116629482732060593116624596368806566625\",\"1953999166296955830935495158735359200362904181792947794529339487489730042568305997099959302322956898299616194932283060554261566410988618045107398092345476532371402134206635235570281738377188438407703089325315446371127042537576093536896282955524842632708645655481028161471313608974238110718242273935956977555610147714316158486553633871312187084618154014921190595222799283957140353/375191165084882521037046014569185165885459082629136124177286500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"];\r\n                if(CACHE[x]) {\r\n                    return Frac.quick.apply(null, CACHE[x].split('/'));\r\n                }\r\n                x = new Frac(x);\r\n                var n = 80;\r\n                var retval = new Frac(0); \r\n                var a = x.subtract(new Frac(1));\r\n                var b = x.add(new Frac(1));\r\n                for(var i=0; i<n; i++) {\r\n                    var t = new Frac(2*i+1);\r\n                    var k = Math2.bigpow(a.divide(b), t);\r\n                    var r = t.clone().invert().multiply(k);\r\n                    retval = retval.add(r);\r\n                    \r\n                }\r\n                return retval.multiply(new Frac(2));\r\n            },\r\n            //the factorial function but using the big library instead\r\n            factorial: function(x) {\r\n                if(x < 0)\r\n                    throw new Error('factorial not defined for negative numbers');\r\n                var retval=1;\r\n                for (var i = 2; i <= x; i++) retval = retval * i;\r\n                return retval;\r\n            },\r\n            //double factorial\r\n            dfactorial: function(x) {\r\n                var even = x % 2 === 0;\r\n                // If x = even then n = x/2 else n = (x-1)/2\r\n                var n = even ? x/2 : (x+1)/2; \r\n                //the return value\r\n                var r = new Frac(1);\r\n                //start the loop\r\n                if(even)\r\n                    for(var i=1; i<=n; i++)\r\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)));\r\n                else\r\n                    for(var i=1; i<=n; i++)\r\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)).subtract(new Frac(1)));\r\n                //done\r\n                return r;\r\n            },\r\n            GCD: function() {\r\n                var args = arrayUnique([].slice.call(arguments)\r\n                        .map(function(x){ return Math.abs(x); })).sort(),\r\n                    a = Math.abs(args.shift()),\r\n                    n = args.length;\r\n\r\n                while(n-- > 0) { \r\n                    var b = Math.abs(args.shift());\r\n                    while(true) {\r\n                        a %= b;\r\n                        if (a === 0) {\r\n                            a = b;\r\n                            break;\r\n                        }\r\n                        b %= a;\r\n                        if (b === 0) break;;\r\n                    }\r\n                }\r\n                return a;\r\n            },\r\n            QGCD: function() {\r\n                var args = [].slice.call(arguments);\r\n                var a = args[0];\r\n                for(var i=1; i<args.length; i++) {\r\n                    var b = args[i];\r\n                    var sign = a.isNegative() && b.isNegative() ? -1 : 1;\r\n                    a = b.gcd(a);\r\n                    if(sign < 0) a.negate();\r\n                }\r\n                return a;\r\n            },\r\n            LCM: function(a, b) {\r\n                return (a * b) / Math2.GCD(a, b); \r\n            },\r\n            //pow but with the handling of negative numbers\r\n            //http://stackoverflow.com/questions/12810765/calculating-cubic-root-for-negative-number\r\n            pow: function(b, e) { \r\n                if (b < 0) {\r\n                    if (Math.abs(e) < 1) {\r\n                        //nth root of a negative number is imaginary when n is even\r\n                        if (1 / e % 2 === 0) return NaN;\r\n                        return -Math.pow(Math.abs(b), e);\r\n                    }\r\n                }\r\n                return Math.pow(b, e);\r\n            },\r\n            factor: function(n) {\r\n                var ifactors = Math2.ifactor(n);\r\n                var factors = new Symbol();\r\n                factors.symbols = {};\r\n                factors.group = CB;\r\n                for(var x in ifactors) {\r\n                    var factor = new Symbol(1);\r\n                    factor.group = P; //cheat a little\r\n                    factor.value = x;\r\n                    factor.power = new Symbol(ifactors[x]);\r\n                    factors.symbols[x] = factor;\r\n                }\r\n                factors.updateHash();\r\n                return factors;\r\n            },\r\n            /**\r\n             * Uses trial division\r\n             * @param {Integer} n - the number being factored\r\n             * @param {object} factors -  the factors object\r\n             * @returns {object}\r\n             */\r\n            sfactor: function(n, factors) { \r\n                factors = factors || {};\r\n                var r = Math.floor(Math.sqrt(n));\r\n                var lcprime = PRIMES[PRIMES.length-1];\r\n                //a one-time cost... Hopefully ... And don't bother for more than a million\r\n                //takes too long\r\n                if(r > lcprime && n < 1e6) generatePrimes(r);\r\n                var l = PRIMES.length;\r\n                for(var i=0; i<l; i++) {\r\n                    var prime = PRIMES[i];\r\n                    //trial division\r\n                    while(n%prime === 0) {\r\n                        n = n/prime;\r\n                        factors[prime] = (factors[prime] || 0)+1;\r\n                    }\r\n                }\r\n                if(n > 1) factors[n] = 1;\r\n                return factors;\r\n            },\r\n            /**\r\n             * Pollard's rho\r\n             * @param {Integer} n\r\n             * @returns {object}\r\n             */\r\n            ifactor: function(n) {  \r\n                n = String(n);\r\n                \r\n                if(n === '0')\r\n                    return {'0': 1};\r\n                n = new bigInt(n); //convert to bigInt for safety\r\n                var sign = n.sign ? -1 : 1;\r\n                n = n.abs();\r\n                var factors = {}; //factor object being returned.\r\n                if(n.lt('65536')) { //less than 2^16 just use trial division\r\n                    factors = Math2.sfactor(n, factors);\r\n                }\r\n                else { \r\n                    var add = function(e) {\r\n                        if(!e.isPrime()) { \r\n                            factors = Math2.sfactor(e, factors);\r\n                        }\r\n                        else\r\n                            factors[e] = (factors[e] || 0)+1;\r\n                    };\r\n\r\n                    while(!n.abs().equals(1)) {\r\n                        if(n.isPrime()) {\r\n                            add(n);\r\n                            break;\r\n                        }\r\n                        else {\r\n                            var xf = new bigInt(2),\r\n                                cz = new bigInt(2),\r\n                                x = new bigInt(2),\r\n                                factor = new bigInt(1);\r\n\r\n                            while(factor.abs().equals(1)) { \r\n                                for(var i=0; i<=cz && factor <=1; i++) {\r\n                                    x = x.pow(2).add(1).mod(n);\r\n                                    factor = bigInt.gcd(x.minus(xf), n);\r\n                                }\r\n\r\n                                cz = cz.times(2);\r\n                                xf = x;\r\n                            }\r\n                            add(factor);\r\n                            //divide out the factor\r\n                            n = n.divide(factor);\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                //put the sign back\r\n                if(sign === -1) {\r\n                    var sm = arrayMin(keys(factors)); ///get the smallest number\r\n                    factors['-'+sm] = factors[sm];\r\n                    delete factors[sm];\r\n                }\r\n                \r\n                return factors;\r\n            },\r\n            //factors a number into rectangular box. If sides are primes that this will be\r\n            //their prime factors. e.g. 21 -> (7)(3), 133 -> (7)(19)\r\n            boxfactor: function(n, max) {\r\n                max = max || 200; //stop after this number of iterations\r\n                var c, r,\r\n                    d = Math.floor((5/12)*n), //the divisor\r\n                    i = 0, //number of iterations\r\n                    safety = false;\r\n                while(true)  {\r\n                    c = Math.floor(n/d);\r\n                    r = n % d;\r\n                    if(r === 0) break; //we're done\r\n                    if(safety) return [n, 1];\r\n                    d = Math.max(r, d-r);\r\n                    i++;\r\n                    safety = i > max;\r\n                }\r\n                return [c, d, i];\r\n            },\r\n            fib: function(n) {\r\n                var sign = Math.sign(n);\r\n                n = Math.abs(n);\r\n                sign = even(n) ? sign : Math.abs(sign);\r\n                var a = 0, b = 1, f = 1;\r\n                for(var i = 2; i <= n; i++) {\r\n                    f = a + b;\r\n                    a = b;\r\n                    b = f;\r\n                }\r\n                return f*sign;\r\n            },\r\n            mod: function(x, y) {\r\n                return x % y;\r\n            },\r\n            /**\r\n             * https://github.com/scijs/integrate-adaptive-simpson\r\n             * @param {Function} f - the function being integrated\r\n             * @param {Number} l - lower bound\r\n             * @param {Number} u - upper bound\r\n             * @param {Number} dx - step width\r\n             * @returns {Number}\r\n             */\r\n            num_integrate: function(f, a, b, tol, maxdepth) {\r\n                // This algorithm adapted from pseudocode in:\r\n                // http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf\r\n                function adsimp (f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\r\n                    if (state.nanEncountered) {\r\n                        return NaN;\r\n                    }\r\n                    var h, f1, f2, sl, sr, s2, m, V1, V2, err;\r\n                    h = b - a;\r\n                    f1 = f(a + h * 0.25);\r\n                    f2 = f(b - h * 0.25);\r\n                    // Simple check for NaN:\r\n                    if (isNaN(f1)) {\r\n                        state.nanEncountered = true;\r\n                        return;\r\n                    }\r\n                    // Simple check for NaN:\r\n                    if (isNaN(f2)) {\r\n                        state.nanEncountered = true;\r\n                        return;\r\n                    }\r\n\r\n                    sl = h * (fa + 4 * f1 + fm) / 12;\r\n                    sr = h * (fm + 4 * f2 + fb) / 12;\r\n                    s2 = sl + sr;\r\n                    err = (s2 - V0) / 15;\r\n\r\n                    if (depth > maxdepth) {\r\n                        state.maxDepthCount++;\r\n                        return s2 + err;\r\n                    } \r\n                    else if (Math.abs(err) < tol) {\r\n                        return s2 + err;\r\n                    } \r\n                    else {\r\n                        m = a + h * 0.5;\r\n                        V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\r\n                        if (isNaN(V1)) {\r\n                            state.nanEncountered = true;\r\n                            return NaN;\r\n                        }\r\n                        V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\r\n\r\n                        if (isNaN(V2)) {\r\n                            state.nanEncountered = true;\r\n                            return NaN;\r\n                        }\r\n                        \r\n                        return V1 + V2;\r\n                    }\r\n                }\r\n\r\n                function integrate (f, a, b, tol, maxdepth) {\r\n                    var state = {\r\n                        maxDepthCount: 0,\r\n                        nanEncountered: false\r\n                    };\r\n\r\n                    if (tol === undefined) {\r\n                        tol = 1e-9;\r\n                    }\r\n                    if (maxdepth === undefined) {\r\n                        maxdepth = 45;\r\n                    }\r\n\r\n                    var fa = f(a);\r\n                    var fm = f(0.5 * (a + b));\r\n                    var fb = f(b);\r\n\r\n                    var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\r\n\r\n                    var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\r\n\r\n                    if (state.maxDepthCount > 0) {\r\n                        warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\r\n                    }\r\n\r\n                    if (state.nanEncountered) {\r\n                        throw new UndefinedError('Function does not converge over interval!');\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n                \r\n                return Utils.round(integrate(f, a, b, tol, maxdepth), 12);\r\n            },\r\n            //https://en.wikipedia.org/wiki/Trigonometric_integral\r\n            //CosineIntegral\r\n            Ci: function(x) {\r\n                var n =20,\r\n                    g = 0.5772156649015329, //roughly Euler–Mascheroni\r\n                    sum = 0;\r\n                for(var i=1; i<n; i++) {\r\n                    var n2 = 2*i; //cache 2n\r\n                    sum += (Math.pow(-1, i)*Math.pow(x, n2))/(n2*Math2.factorial(n2));\r\n                }\r\n                return Math.log(x) + g + sum;\r\n            },\r\n            //SineIntegral\r\n            Si: function(x) {\r\n                var n = 20,\r\n                    sum = 0;\r\n                for(var i=0; i<n; i++) {\r\n                    var n2 = 2*i;\r\n                    sum += (Math.pow(-1, i)*Math.pow(x, n2+1))/((n2+1)*Math2.factorial(n2+1));\r\n                }\r\n                return sum;\r\n            },\r\n            //ExponentialIntegral\r\n            Ei: function(x) { \r\n                if(x.equals(0))\r\n                    return -Infinity;\r\n                var n =30,\r\n                    g = 0.5772156649015328606, //roughly Euler–Mascheroni\r\n                    sum = 0;\r\n                for(var i=1; i<n; i++) {\r\n                    sum += Math.pow(x, i)/(i*Math2.factorial(i));\r\n                }\r\n                return g+Math.abs(Math.log(x))+sum;\r\n            },\r\n            //Hyperbolic Sine Integral\r\n            //http://mathworld.wolfram.com/Shi.html\r\n            Shi: function(x) {\r\n                var n = 30,\r\n                    sum = 0,\r\n                    k, t;\r\n                for(var i=0; i<n; i++) {\r\n                    k = 2*i; \r\n                    t = k+1;\r\n                    sum += Math.pow(x, t)/(t*t*Math2.factorial(k));\r\n                }\r\n                return sum;\r\n            },\r\n            //the cosine integral function\r\n            Chi: function(x) {\r\n                var dx, g, f;\r\n                dx = 0.001;\r\n                g = 0.5772156649015328606;\r\n                f = function(t) {\r\n                    return (Math.cosh(t)-1)/t;\r\n                };\r\n                return Math.log(x)+g+Math2.num_integrate(f, 0.002, x, dx);\r\n            },\r\n            //the gamma incomplete function\r\n            gamma_incomplete: function(n, x) {\r\n                var t = n-1,\r\n                    sum = 0,\r\n                    x = x || 0;\r\n                for(var i=0; i<t; i++) {\r\n                    sum += Math.pow(x, i)/Math2.factorial(i);\r\n                }\r\n                return Math2.factorial(t)*Math.exp(-x)*sum;\r\n            },\r\n            /*\r\n            * Heaviside step function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n            * Specification : http://mathworld.wolfram.com/HeavisideStepFunction.html\r\n            * if x > 0 then 1\r\n            * if x == 0 then 1/2\r\n            * if x < 0 then 0\r\n            */\r\n            step: function(x) {\r\n                if(x > 0)\r\n                    return 1;\r\n                if(x < 0)\r\n                    return 0;\r\n                return 0.5;\r\n            },\r\n            /*\r\n            * Rectangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n            * Specification : http://mathworld.wolfram.com/RectangleFunction.html\r\n            * if |x| > 1/2 then 0\r\n            * if |x| == 1/2 then 1/2\r\n            * if |x| < 1/2 then 1\r\n            */\r\n            rect: function(x) {\r\n                var x = Math.abs(x);\r\n                if(x === 0.5)\r\n                    return x;\r\n                if(x > 0.5)\r\n                    return 0;\r\n                return 1;\r\n            },\r\n            /*\r\n            * Sinc function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n            * Specification : http://mathworld.wolfram.com/SincFunction.html\r\n            * if x == 0 then 1\r\n            * otherwise sin(x)/x\r\n            */\r\n            sinc: function(x) {\r\n                if(x.equals(0))\r\n                    return 1;\r\n                return Math.sin(x)/x;\r\n            },\r\n            /*\r\n            * Triangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n            * Specification : http://mathworld.wolfram.com/TriangleFunction.html\r\n            * if |x| >= 1 then 0\r\n            * if |x| < then 1-|x|\r\n            */\r\n            tri: function(x) {\r\n                x = Math.abs(x);\r\n                if(x >= 1)\r\n                    return 0;\r\n                return 1-x;\r\n            },\r\n            //https://en.wikipedia.org/wiki/Nth_root_algorithm\r\n            nthroot: function(A, n) { \r\n                //make sure the input is of type Frac\r\n                if(!(A instanceof Frac))\r\n                    A = new Frac(A.toString());\r\n                if(!(n instanceof Frac))\r\n                    n = new Frac(n.toString());\r\n                if(n.equals(1))\r\n                    return A;\r\n                //begin algorithm\r\n                var xk = A.divide(new Frac(2)); //x0\r\n                var e = new Frac(1e-15);\r\n                var dk, dk0, d0;\r\n                var a = n.clone().invert(),\r\n                    b = n.subtract(new Frac(1));\r\n                do {\r\n                    var powb = Math2.bigpow(xk, b);\r\n                    var dk_dec = a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);\r\n                    dk = Frac.create(dk_dec);\r\n                    if(d0)\r\n                        break;\r\n                    \r\n                    xk = xk.add(dk);\r\n                    //check to see if there's no change from the last xk\r\n                    var dk_dec = dk.toDecimal();\r\n                    d0 = dk0 ? dk0 === dk_dec : false;\r\n                    dk0 = dk_dec;\r\n                }\r\n                while(dk.abs().gte(e))\r\n\r\n                return xk;\r\n            }\r\n        };\r\n        //link the Math2 object to Settings.FUNCTION_MODULES\r\n        Settings.FUNCTION_MODULES.push(Math2);\r\n\r\n        var cacheRoots = function() {\r\n            Settings.CACHE.roots = {};\r\n            var x = 40, \r\n                y = 40;\r\n            for(var i=2; i<=x; i++) {\r\n                for(var j=2; j<=y; j++) {\r\n                    var nthpow = bigInt(i).pow(j);\r\n                    Settings.CACHE.roots[nthpow+'-'+j] = i;\r\n                }\r\n            }\r\n        };\r\n        cacheRoots();\r\n        //polyfills\r\n        //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/\r\n        Math.sign = Math.sign || function(x) { \r\n            x = +x; // convert to a number\r\n            if (x === 0 || isNaN(x)) {\r\n                return x;\r\n            }\r\n            return x > 0 ? 1 : -1;\r\n        };\r\n        \r\n        Math.cosh = Math.cosh || function(x) {\r\n            var y = Math.exp(x);\r\n            return (y + 1 / y) / 2;\r\n        };\r\n        \r\n        Math.sech = Math.sech || function(x) {\r\n            return 1/Math.cosh(x);\r\n        };\r\n        \r\n        Math.csch = Math.csch || function(x) {\r\n            return 1/Math.sinh(x);\r\n        };\r\n        \r\n        Math.coth = Math.coth || function(x) {\r\n            return 1/Math.tanh(x);\r\n        };\r\n        \r\n        Math.sinh = Math.sinh || function(x) {\r\n            var y = Math.exp(x);\r\n            return (y - 1 / y) / 2;\r\n        };\r\n        \r\n        Math.tanh = Math.tanh || function(x) {\r\n            if (x === Infinity) {\r\n                return 1;\r\n            } else if (x === -Infinity) {\r\n                return -1;    \r\n            } else {\r\n                var y = Math.exp(2 * x);\r\n                return (y - 1) / (y + 1);\r\n            }\r\n        };\r\n        \r\n        Math.asinh = Math.asinh || function(x) {\r\n            if (x === -Infinity) {\r\n              return x;\r\n            } else {\r\n              return Math.log(x + Math.sqrt(x * x + 1));\r\n            }\r\n        };\r\n        \r\n        Math.acosh = Math.acosh || function(x) {\r\n            return Math.log(x + Math.sqrt(x * x - 1));\r\n        };\r\n        \r\n        Math.atanh = Math.atanh || function(x) {\r\n            return Math.log((1+x)/(1-x)) / 2;\r\n        };\r\n        \r\n        Math.log10 = Math.log10 || function(x) {\r\n            return Math.log(x) * Math.LOG10E;\r\n        };\r\n        \r\n        Math.trunc = Math.trunc || function(x) {\r\n        if (isNaN(x)) {\r\n            return NaN;\r\n        }\r\n        if (x > 0) {\r\n            return Math.floor(x);\r\n        }\r\n        return Math.ceil(x);\r\n      };\r\n\r\n        reserveNames(Math2); //reserve the names in Math2\r\n        \r\n    /* GLOBAL FUNCTIONS */\r\n    /**\r\n     * This method will return a hash or a text representation of a Symbol, Matrix, or Vector. \r\n     * If all else fails it *assumes* the object has a toString method and will call that.\r\n     * \r\n     * @param {Object} obj\r\n     * @param {String} option get is as a hash \r\n     * @returns {String}\r\n     */\r\n    function text(obj, option, useGroup) { \r\n        var asHash = option === 'hash',\r\n            asDecimal = option === 'decimals' || option === 'decimal',\r\n            opt = asHash ? undefined : option;\r\n        //if the object is a symbol\r\n        if(isSymbol(obj)) { \r\n            var multiplier = '', \r\n            power = '',\r\n            sign = '',\r\n            group = obj.group || useGroup,\r\n            value = obj.value;\r\n            //if the value is to be used as a hash then the power and multiplier need to be suppressed\r\n            if(!asHash) { \r\n                //use asDecimal to get the object back as a decimal\r\n                var om = asDecimal ? obj.multiplier.valueOf() : obj.multiplier.toString();\r\n                if(om == '-1') {\r\n                    sign = '-';\r\n                    om = '1';\r\n                }\r\n                //only add the multiplier if it's not 1\r\n                if(om != '1') multiplier = om;\r\n                //use asDecimal to get the object back as a decimal\r\n                var p = obj.power ? (asDecimal ? obj.power.valueOf() : obj.power.toString()) : '';\r\n                //only add the multiplier \r\n                if(p != '1') {\r\n                    //is it a symbol\r\n                    if(isSymbol(p)) {\r\n                        power = text(p, opt);\r\n                    }\r\n                    else {\r\n                        power = p;\r\n                    }\r\n                }\r\n            }\r\n\r\n            switch(group) {\r\n                case N:\r\n                    multiplier = '';\r\n                    //if it's numerical then all we need is the multiplier\r\n                    value = obj.multiplier == '-1' ? '1' : asDecimal ? obj.valueOf() : obj.multiplier.toString();\r\n                    power = '';\r\n                    break;\r\n                case PL:\r\n                    value = obj.collectSymbols(text, opt).join('+').replace(/\\+\\-/g, '-');\r\n                    break;\r\n                case CP:\r\n                    value = obj.collectSymbols(text, opt).join('+').replace(/\\+\\-/g, '-');\r\n                    break;\r\n                case CB: \r\n                    value = obj.collectSymbols(function(symbol){\r\n                        var g = symbol.group;\r\n                        //both groups will already be in brackets if their power is greater than 1\r\n                        //so skip it.\r\n                        if((g === PL || g === CP) && (symbol.power.equals(1) && symbol.multiplier.equals(1))) {\r\n                            return inBrackets(text(symbol, opt));\r\n                        }\r\n                        return text(symbol, opt);\r\n                    }).join('*');\r\n                    break;\r\n                case EX:\r\n                    var pg = obj.previousGroup,\r\n                        pwg = obj.power.group;\r\n                \r\n                    //PL are the exception. It's simpler to just collect and set the value\r\n                    if(pg === PL) value = obj.collectSymbols(text, opt).join('+').replace('+-', '-');\r\n                    if(!(pg === N || pg === S || pg === FN) && !asHash) { value = inBrackets(value); }\r\n \r\n                    if((pwg === CP || pwg === CB || pwg === PL || obj.power.multiplier.toString() != '1') && power) {\r\n                        power = inBrackets(power);\r\n                    }\r\n                    break;\r\n            }\r\n            \r\n            if(group === FN && asDecimal) { \r\n                value = obj.fname+inBrackets(obj.args.map(function(symbol) {\r\n                    return text(symbol, opt);\r\n                }).join(','));\r\n            }\r\n            //TODO: Needs to be more efficient. Maybe. \r\n            if(group === FN && obj.fname in CUSTOM_OPERATORS) {\r\n                var a = text(obj.args[0]);\r\n                var b = text(obj.args[1]);\r\n                if(obj.args[0].isComposite()) //preserve the brackets\r\n                    a = inBrackets(a);\r\n                if(obj.args[1].isComposite()) //preserve the brackets\r\n                    b = inBrackets(b);\r\n                value = a+CUSTOM_OPERATORS[obj.fname]+b;\r\n            }\r\n            //wrap the power since / is less than ^\r\n            //TODO: introduce method call isSimple\r\n            if(power && !isInt(power) && group !== EX && !asDecimal) { power = inBrackets(power); }\r\n\r\n            //the following groups are held together by plus or minus. They can be raised to a power or multiplied\r\n            //by a multiplier and have to be in brackets to preserve the order of precedence\r\n            if(((group === CP || group === PL) && (multiplier && multiplier != '1' || sign === '-')) \r\n                    || ((group === CB || group === CP || group === PL) && (power && power != '1'))\r\n                    || !asHash && group === P && value == -1\r\n                    || obj.fname === PARENTHESIS) { \r\n                \r\n                value = inBrackets(value);\r\n            }\r\n            \r\n            var c = sign+multiplier;\r\n            if(multiplier && !isInt(multiplier) && !asDecimal) c = inBrackets(c);\r\n            \r\n            if(power < 0) power = inBrackets(power);\r\n            if(multiplier) c = c + '*';\r\n            if(power) power = Settings.POWER_OPERATOR + power;\r\n\r\n            //this needs serious rethinking. Must fix\r\n            if(group === EX && value.charAt(0) === '-') value = inBrackets(value);\r\n            \r\n            var cv = c+value;\r\n            \r\n            if(obj.parens) cv = inBrackets(cv);\r\n\r\n            return cv+power;\r\n        }\r\n        else if(isVector(obj)) { \r\n            var l = obj.elements.length,\r\n                c = [];\r\n            for(var i=0; i<l; i++) c.push(obj.elements[i].text(option));\r\n            return '['+c.join(',')+']';\r\n        }\r\n        else {\r\n            try {\r\n                return obj.toString();\r\n            }\r\n            catch(e) { return ''; }\r\n        }\r\n    }\r\n    \r\n    Utils.text = text;\r\n    /* END GLOBAL FUNCTIONS */\r\n    \r\n    /**** CLASSES *****/\r\n    /**\r\n     * The Collector is used to find unique values within objects\r\n     * @param {Function} extra_conditions - A function which performs a check on the values and returns a boolean\r\n     * @returns {Collector}\r\n     */\r\n    function Collector(extra_conditions) {\r\n        this.c = [];\r\n        this.add = function(value) {\r\n            var condition_true = extra_conditions ? extra_conditions(value) : true;\r\n            if(this.c.indexOf(value) === -1 && condition_true) this.c.push(value);\r\n        };\r\n    }\r\n    \r\n    /** \r\n     * This is what nerdamer returns. It's sort of a wrapper around the symbol class and \r\n     * provides the user with some useful functions. If you want to provide the user with extra\r\n     * library functions then add them to this class's prototype.\r\n     * @param {Symbol} symbol\r\n     * @returns {Expression} wraps around the Symbol class\r\n     */\r\n    function Expression(symbol) {\r\n        //we don't want arrays wrapped\r\n        this.symbol = symbol;\r\n    }\r\n    \r\n    /**\r\n     * Returns stored expression at index. For first index use 1 not 0.\r\n     * @param {bool} asType  \r\n     * @param {Integer} expression_number \r\n     */\r\n    Expression.getExpression = function(expression_number, asType) {\r\n        if(expression_number === 'last' || !expression_number) expression_number = EXPRESSIONS.length;\r\n        if(expression_number === 'first') expression_number = 1;\r\n        var index = expression_number -1,\r\n            expression = EXPRESSIONS[index],\r\n            retval = expression ? new Expression(expression) : expression;\r\n        return retval;\r\n    };\r\n    \r\n    Expression.prototype = {\r\n        /**\r\n         * Returns the text representation of the expression\r\n         * @param {String} opt - option of formatting numbers\r\n         * @returns {String}\r\n         */\r\n        text: function(opt) { \r\n            opt = opt || 'decimals';\r\n            if(this.symbol.text_)\r\n                return this.symbol.text_(opt);\r\n            return text(this.symbol, opt);\r\n        },\r\n        /**\r\n         * Returns the latex representation of the expression\r\n         * @param {String} option - option for formatting numbers\r\n         * @returns {String}\r\n         */\r\n        latex: function(option) {\r\n            if(this.symbol.latex)\r\n                return this.symbol.latex(option);\r\n            return LaTeX.latex(this.symbol, option);\r\n        },\r\n        valueOf: function() { \r\n            return this.symbol.valueOf();\r\n        },\r\n        \r\n        /**\r\n         * Evaluates the expression and tries to reduce it to a number if possible.\r\n         * If an argument is given in the form of %{integer} it will evaluate that expression.\r\n         * Other than that it will just use it's own text and reparse\r\n         * @returns {Expression}\r\n         */\r\n        evaluate: function() {\r\n            var first_arg = arguments[0], expression, idx = 1;\r\n            if(typeof first_arg === 'string') {\r\n                expression = (first_arg.charAt(0) === '%') ? Expression.getExpression(first_arg.substr(1)).text() : first_arg;\r\n            }\r\n            else if(first_arg instanceof Expression || isSymbol(first_arg)) {\r\n                expression = first_arg.text();\r\n            }\r\n            else {\r\n                expression = this.symbol.text(); idx--;\r\n            }\r\n            \r\n            var subs = arguments[idx] || {};\r\n            \r\n            return new Expression(block('PARSE2NUMBER', function() {\r\n                return _.parse(expression, subs);\r\n            }, true));\r\n        },\r\n        /**\r\n         * Converts a symbol to a JS function. Pass in an array of variables to use that order instead of \r\n         * the default alphabetical order\r\n         * @param vars {Array}\r\n         */\r\n        buildFunction: function(vars) {\r\n            return build(this.symbol, vars);\r\n        },\r\n        /**\r\n         * Checks to see if the expression is just a plain old number\r\n         * @returns {boolean}\r\n         */\r\n        isNumber: function() {\r\n            return isNumericSymbol(this.symbol);\r\n        },\r\n        /**\r\n         * Checks to see if the expression is infinity\r\n         * @returns {boolean}\r\n         */\r\n        isInfinity: function() {\r\n            return Math.abs(this.symbol.multiplier) === Infinity;\r\n        },\r\n        /**\r\n         * Returns all the variables in the expression\r\n         * @returns {Array}\r\n         */\r\n        variables: function() {\r\n            return variables(this.symbol);\r\n        },\r\n        \r\n        toString: function() {\r\n            try {\r\n                if(isArray(this.symbol)) return '['+this.symbol.toString()+']';\r\n                return this.symbol.toString();\r\n            }\r\n            catch(e) { return ''; }\r\n        },\r\n        //forces the symbol to be returned as a decimal\r\n        toDecimal: function(prec) {\r\n            Settings.precision = prec;\r\n            var dec = text(this.symbol, 'decimals');\r\n            Settings.precision = undefined;\r\n            return dec;\r\n        },\r\n        //checks to see if the expression is a fraction\r\n        isFraction: function() {\r\n            return isFraction(this.symbol);\r\n        },\r\n        //checks to see if the symbol is a multivariate polynomial\r\n        isPolynomial: function() {\r\n            return this.symbol.isPoly();\r\n        }, \r\n        //performs a substitution\r\n        sub: function(symbol, for_symbol) {\r\n            return new Expression(this.symbol.sub(_.parse(symbol), _.parse(for_symbol)));\r\n        },\r\n        operation: function(otype, symbol) {\r\n            if(isExpression(symbol))\r\n                symbol = symbol.symbol;\r\n            else if(!isSymbol(symbol))\r\n                symbol = _.parse(symbol);\r\n            return new Expression(_[otype](this.symbol.clone(), symbol.clone()));\r\n        },\r\n        add: function(symbol) {\r\n            return this.operation('add', symbol);\r\n        },\r\n        subtract: function(symbol) {\r\n            return this.operation('subtract', symbol);\r\n        },\r\n        multiply: function(symbol) {\r\n            return this.operation('multiply', symbol);\r\n        },\r\n        divide: function(symbol) {\r\n            return this.operation('divide', symbol);\r\n        },\r\n        pow: function(symbol) {\r\n            return this.operation('pow', symbol);\r\n        },\r\n        expand: function() {\r\n            return new Expression(_.expand(this.symbol));\r\n        },\r\n        each: function(callback, i) {\r\n            if(this.symbol.each)\r\n                this.symbol.each(callback, i);\r\n            else if(isArray(this.symbol)) { \r\n                for(var i=0; i<this.symbol.length; i++)\r\n                    callback.call(this.symbol, this.symbol[i], i);\r\n            }\r\n            else\r\n                callback.call(this.symbol);\r\n        },\r\n        eq: function(value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = _.subtract(this.symbol.clone(), value);\r\n                return d.equals(0);\r\n            }\r\n            catch(e){\r\n                return false;\r\n            };    \r\n        },\r\n        lt: function(value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\r\n                return d.lessThan(0);\r\n            }\r\n            catch(e){\r\n                return false;\r\n            };   \r\n        },\r\n        gt: function(value) {\r\n            if(!isSymbol(value))\r\n                value = _.parse(value);\r\n            try {\r\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\r\n                return d.greaterThan(0);\r\n            }\r\n            catch(e){\r\n                return false;\r\n            }; \r\n        },\r\n        gte: function(value) {\r\n            return this.gt(value) || this.eq(value);\r\n        },\r\n        lte: function(value) {\r\n            return this.lt(value) || this.eq(value);\r\n        },\r\n        \r\n        numerator: function() {\r\n            return new Expression(this.symbol.getNum());\r\n        },\r\n        denominator: function() {\r\n            return new Expression(this.symbol.getDenom());\r\n        }\r\n    };\r\n    //Aliases\r\n    Expression.prototype.toTeX = Expression.prototype.latex;\r\n    \r\n    function Frac(n) { \r\n        if(n instanceof Frac) return n;\r\n        if(n === undefined) return this;\r\n        try {\r\n            if(isInt(n)) { \r\n                try {\r\n                    this.num = bigInt(n);\r\n                    this.den = bigInt(1);\r\n                }\r\n                catch(e) {\r\n                    return Frac.simple(n);\r\n                }\r\n            }\r\n            else {\r\n                var frac = Fraction.convert(n);\r\n                this.num = new bigInt(frac[0]);\r\n                this.den = new bigInt(frac[1]);\r\n            }\r\n        }\r\n        catch(e) {\r\n            return Frac.simple(n);\r\n        }\r\n            \r\n    }\r\n    //safe to use with negative numbers or other types\r\n    Frac.create = function(n) {\r\n        if(n instanceof Frac)\r\n            return n;\r\n        n = n.toString();\r\n        var is_neg = n.charAt(0) === '-'; //check if it's negative\r\n        if(is_neg)\r\n            n = n.substr(1, n.length-1); //remove the sign\r\n        var frac = new Frac(n);\r\n        //put the sign back\r\n        if(is_neg)\r\n            frac.negate();\r\n        return frac;\r\n    };\r\n    \r\n    Frac.isFrac = function(o) {\r\n        return (o instanceof Frac);\r\n    };\r\n    \r\n    Frac.quick = function(n, d) { \r\n        var frac = new Frac();\r\n        frac.num = new bigInt(n);\r\n        frac.den = new bigInt(d);\r\n        return frac;\r\n    };\r\n    \r\n    Frac.simple =  function(n) {\r\n        var nstr = String(scientificToDecimal(n)),\r\n            m_dc = nstr.split('.'),\r\n            num = m_dc.join(''),\r\n            den = 1,\r\n            l = (m_dc[1] || '').length;\r\n        for(var i=0; i<l; i++)\r\n            den += '0';\r\n        var frac = Frac.quick(num, den);\r\n        return frac.simplify();\r\n    };\r\n    \r\n    Frac.prototype = {\r\n        multiply: function(m) { \r\n            if(this.isOne()) {\r\n                return m.clone();\r\n            }\r\n            if(m.isOne()) {\r\n                return this.clone();\r\n            }\r\n            \r\n            var c = this.clone();\r\n            c.num = c.num.multiply(m.num);\r\n            c.den = c.den.multiply(m.den); \r\n\r\n            return c.simplify();\r\n        },\r\n        divide: function(m) {\r\n            if(m.equals(0)) throw new DivisionByZero('Division by zero not allowed!');\r\n            return this.clone().multiply(m.clone().invert()).simplify();\r\n        },\r\n        subtract: function(m) { \r\n            return this.clone().add(m.clone().neg());\r\n        },\r\n        neg: function() {\r\n            this.num = this.num.multiply(-1);\r\n            return this;\r\n        },\r\n        add: function(m) { \r\n            var n1 = this.den, n2 = m.den, c = this.clone();\r\n            var a = c.num, b = m.num;\r\n            if(n1.equals(n2)) {\r\n                c.num = a.add(b);\r\n            }\r\n            else {\r\n                c.num = a.multiply(n2).add(b.multiply(n1));\r\n                c.den = n1.multiply(n2);\r\n            }\r\n\r\n            return c.simplify();\r\n        },\r\n        mod: function(m) {\r\n            var a = this.clone(),\r\n                b = m.clone();\r\n            //make their denominators even and return the mod of their numerators\r\n            a.num = a.num.multiply(b.den);\r\n            a.den = a.den.multiply(b.den);\r\n            b.num = b.num.multiply(this.den);\r\n            b.den = b.den.multiply(this.den);\r\n            a.num = a.num.mod(b.num);\r\n            return a.simplify();\r\n        },\r\n        simplify: function() { \r\n            var gcd = bigInt.gcd(this.num, this.den);\r\n            \r\n            this.num = this.num.divide(gcd);\r\n            this.den = this.den.divide(gcd);\r\n            return this;\r\n        },\r\n        clone: function() {\r\n            var m = new Frac();\r\n            m.num = new bigInt(this.num);\r\n            m.den = new bigInt(this.den);\r\n            return m;\r\n        },\r\n        toDecimal: function(prec) { \r\n            if(prec || Settings.PRECISION) { \r\n                var sign = this.num.isNegative() ? '-' : '';\r\n                if(this.num.equals(this.den)) {\r\n                    return '1';\r\n                }\r\n                //go plus one for rounding\r\n                prec = prec || Settings.PRECISION;\r\n                prec++;\r\n                var narr = [], \r\n                    n = this.num.abs(),\r\n                    d = this.den;\r\n                for(var i=0; i<prec; i++) {\r\n                    var w = n.divide(d), //divide out whole\r\n                        r = n.subtract(w.multiply(d)); //get remainder\r\n\r\n                    narr.push(w);    \r\n                    if(r.equals(0))\r\n                            break;\r\n                    n = r.times(10); //shift one dec place\r\n                }\r\n                var whole = narr.shift();\r\n                if(narr.length === 0) { \r\n                    return sign+whole.toString();\r\n                }\r\n\r\n                if(i === prec) {\r\n                    var lt = [];\r\n                    //get the last two so we can round it\r\n                    for(var i=0; i<2; i++)\r\n                        lt.unshift(narr.pop());\r\n                    //put the last digit back by rounding the last two\r\n                    narr.push(Math.round(lt.join('.')));\r\n                }\r\n\r\n                var dec = whole.toString()+'.'+narr.join('');\r\n                return sign+dec;\r\n            }\r\n            else\r\n                return this.num/this.den;\r\n        },\r\n        qcompare: function(n) { \r\n            return [this.num.multiply(n.den), n.num.multiply(this.den)];\r\n        },\r\n        equals: function(n) {\r\n            if(!isNaN(n)) n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n            \r\n            return q[0].equals(q[1]);\r\n        },\r\n        absEquals: function(n) { \r\n            if(!isNaN(n)) n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n            \r\n            return q[0].abs().equals(q[1]);\r\n        },\r\n        //lazy check to be fixed. Sufficient for now but will cause future problems\r\n        greaterThan: function(n) {\r\n            if(!isNaN(n)) n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n            \r\n            return q[0].gt(q[1]);\r\n        },\r\n        gte: function(n) {\r\n            return this.greaterThan(n) || this.equals(n);\r\n        },\r\n        lte: function(n) {\r\n            return this.lessThan(n) || this.equals(n);\r\n        },\r\n        lessThan: function(n) { \r\n            if(!isNaN(n)) n = new Frac(n);\r\n            var q = this.qcompare(n);\r\n            \r\n            return q[0].lt(q[1]);\r\n        },\r\n        isInteger: function() {\r\n            return this.den.equals(1);\r\n        },\r\n        negate: function() {\r\n            this.num = this.num.multiply(-1);\r\n            return this;\r\n        },\r\n        invert: function() { \r\n            var t = this.den;\r\n            var isnegative = this.num.isNegative();\r\n            this.den = this.num.abs();\r\n            this.num = t;\r\n            if(isnegative) this.num = this.num.multiply(-1);\r\n            return this;\r\n        },\r\n        isOne: function() {\r\n            return this.num.equals(1) && this.den.equals(1);\r\n        },\r\n        sign: function() { \r\n            return this.num.isNegative() ? -1 : 1;\r\n        },\r\n        abs: function() { \r\n            this.num = this.num.abs();\r\n            return this;\r\n        },\r\n        gcd: function(f) {\r\n            return Frac.quick(bigInt.gcd(f.num, this.num), bigInt.lcm(f.den, this.den));\r\n        },\r\n        toString: function() {\r\n            return !this.den.equals(1) ? this.num.toString()+'/'+this.den.toString() : this.num.toString();\r\n        },\r\n        valueOf: function() {\r\n            return this.num/this.den;\r\n        },\r\n        isNegative: function() {\r\n            return this.toDecimal() < 0;\r\n        }\r\n    };\r\n    \r\n    /**\r\n     * All symbols e.g. x, y, z, etc or functions are wrapped in this class. All symbols have a multiplier and a group. \r\n     * All symbols except for \"numbers (group N)\" have a power. \r\n     * @class Primary data type for the Parser. \r\n     * @param {String} obj \r\n     * @returns {Symbol}\r\n     */\r\n    function Symbol(obj) { \r\n        var isInfinity = obj === 'Infinity';\r\n        //this enables the class to be instantiated without the new operator\r\n        if(!(this instanceof Symbol)) { \r\n            return new Symbol(obj); \r\n        };\r\n        //define numeric symbols\r\n        if(!isNaN(obj) && !isInfinity && isFinite(obj)) { \r\n            \r\n            this.group = N;\r\n            this.value = CONST_HASH; \r\n            this.multiplier = new Frac(obj);\r\n        }\r\n        //define symbolic symbols\r\n        else {\r\n            this.group = S; \r\n            validateName(obj); \r\n            this.value = obj;\r\n            this.multiplier = new Frac(1);\r\n            this.imaginary = obj === Settings.IMAGINARY;\r\n            this.isInfinity = isInfinity;\r\n        }\r\n        \r\n        //As of 6.0.0 we switched to infinite precision so all objects have a power\r\n        //Although this is still redundant in constants, it simplifies the logic in\r\n        //other parts so we'll keep it\r\n        this.power = new Frac(1);\r\n\r\n        // Added to silence the strict warning.\r\n        return this; \r\n    }\r\n    \r\n    /**\r\n     * Returns vanilla imaginary symbol\r\n     * @returns {Symbol}\r\n     */\r\n    Symbol.imaginary = function() {\r\n        var s = new Symbol(Settings.IMAGINARY);\r\n        s.imaginary = true;\r\n        return s;\r\n    };\r\n    \r\n    /**\r\n     * Return nerdamer's representation of Infinity\r\n     * @returns {Symbol} \r\n     */\r\n    Symbol.infinity = function() {\r\n        return new Symbol('Infinity');\r\n    };\r\n    \r\n    Symbol.shell = function(group, value) { \r\n        var symbol = new Symbol(value);\r\n        symbol.group = group;\r\n        symbol.symbols = {};\r\n        symbol.length = 0;\r\n        return symbol;\r\n    };\r\n    //sqrt(x) -> x^(1/2)\r\n    Symbol.unwrapSQRT = function(symbol, all) {\r\n        var p = symbol.power;\r\n        if(symbol.fname === SQRT && (symbol.isLinear() || all )) {\r\n            var t = symbol.args[0].clone(); \r\n            t.power = t.power.multiply(new Frac(1/2));\r\n            t.multiplier = t.multiplier.multiply(symbol.multiplier);\r\n            symbol = t;\r\n            if(all) \r\n                symbol.power = p.multiply(new Frac(1/2));\r\n        }\r\n            \r\n        return symbol;\r\n    };\r\n    \r\n    Symbol.hyp = function(a, b) {\r\n        if(a.equals(0))\r\n            return b.clone();\r\n        if(b.equals(0))\r\n            return a.clone();\r\n        return _.sqrt(_.add(_.pow(a.clone(), new Symbol(2)), _.pow(b.clone(), new Symbol(2))));\r\n    };\r\n    \r\n    //converts to polar form array\r\n    Symbol.toPolarFormArray = function(symbol) {\r\n        var re, im, r, theta;\r\n        re = symbol.realpart(); \r\n        im = symbol.imagpart(); \r\n        r = Symbol.hyp(re, im);\r\n        theta = re.equals(0) ? _.parse('pi/2') : _.trig.atan(_.divide(im, re));\r\n        return [r, theta];\r\n    };\r\n    \r\n    //removes parentheses\r\n    Symbol.unwrapPARENS = function(symbol) {\r\n        if(symbol.fname === '') {\r\n            var r = symbol.args[0];\r\n            r.power = r.power.multiply(symbol.power);\r\n            r.multiplier = r.multiplier.multiply(symbol.multiplier);\r\n            if(symbol.fname === '')\r\n                return Symbol.unwrapPARENS(r);\r\n            return r;\r\n        }\r\n        return symbol;\r\n    };\r\n    //quickly creates a Symbol\r\n    Symbol.create = function(value, power) {\r\n        power = power === undefined ? 1 : power;\r\n        return _.parse('('+value+')^('+power+')');\r\n    };\r\n    \r\n    Symbol.prototype = {\r\n        //returns a clone.\r\n        powSimp: function() {\r\n            if(this.group === CB) {\r\n                var powers = [],\r\n                    sign = this.multiplier.sign();\r\n                this.each(function(x) {\r\n                    var p = x.power;\r\n                    //why waste time if I can't do anything anyway\r\n                    if(isSymbol(p) || p.equals(1))\r\n                        return this.clone();\r\n                    powers.push(p);\r\n                });\r\n                var min = new Frac(arrayMin(powers));\r\n                \r\n                //handle the coefficient\r\n                //handle the multiplier\r\n                var sign = this.multiplier.sign(),\r\n                    m = this.multiplier.clone().abs(),\r\n                    mfactors = Math2.ifactor(m);\r\n                //if we have a multiplier of 6750 and a min of 2 then the factors are 5^3*5^3*2\r\n                //we can then reduce it to 2*3*5*(15)^2 \r\n                var out_ = new Frac(1);\r\n                var in_ = new Frac(1);\r\n                \r\n                for(var x in mfactors) {\r\n                    var n = new Frac(mfactors[x]);\r\n                    if(!n.lessThan(min)) {\r\n                        n = n.divide(min).subtract(new Frac(1));\r\n                        in_ = in_.multiply(new Frac(x)); //move the factor inside the bracket\r\n                    }\r\n                    \r\n                    out_ = out_.multiply(_.parse(inBrackets(x)+'^'+inBrackets(n)).multiplier);\r\n                }\r\n                var t = new Symbol(in_);\r\n                this.each(function(x) { \r\n                    x = x.clone();\r\n                    x.power = x.power.divide(min);\r\n                    t = _.multiply(t, x);\r\n                });\r\n                \r\n                var xt = _.symfunction(PARENTHESIS, [t]);\r\n                xt.power = min;\r\n                xt.multiplier = sign < 0 ? out_.negate() : out_;\r\n\r\n                return xt;\r\n            }\r\n            return this.clone();\r\n        },\r\n        /**\r\n         * Checks to see if two functions are of equal value\r\n         */\r\n        equals: function(symbol) { \r\n            if(!isSymbol(symbol)) \r\n                symbol = new Symbol(symbol);\r\n            return this.value === symbol.value && this.power.equals(symbol.power) && this.multiplier.equals(symbol.multiplier);\r\n        },\r\n        // Greater than\r\n        gt: function(symbol) { \r\n            if(!isSymbol(symbol)) \r\n                symbol = new Symbol(symbol);\r\n            return this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\r\n        },\r\n        // Greater than\r\n        gte: function(symbol) { \r\n            if(!isSymbol(symbol)) \r\n                symbol = new Symbol(symbol);\r\n            return this.equals(symbol) ||\r\n                    this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\r\n        },\r\n        // Less than\r\n        lt: function(symbol) { \r\n            if(!isSymbol(symbol)) \r\n                symbol = new Symbol(symbol);\r\n            return this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\r\n        },\r\n        // Less than\r\n        lte: function(symbol) { \r\n            if(!isSymbol(symbol)) \r\n                symbol = new Symbol(symbol);\r\n            return this.equals(symbol) ||\r\n                    this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\r\n        },\r\n        /**\r\n         * Because nerdamer doesn't group symbols by polynomials but \r\n         * rather a custom grouping method, this has to be\r\n         * reinserted in order to make use of most algorithms. This function\r\n         * checks if the symbol meets the criteria of a polynomial.\r\n         * @returns {boolean}\r\n         */\r\n        isPoly: function(multivariate) { \r\n            var g = this.group, \r\n                p = this.power; \r\n            //the power must be a integer so fail if it's not\r\n            if(!isInt(p) || p < 0) \r\n                return false;\r\n            //constants and first orders\r\n            if(g === N  || g === S || this.isConstant(true)) \r\n                return true;\r\n            var vars = variables(this);\r\n            if(g === CB && vars.length === 1) { \r\n                //the variable is assumed the only one that was found\r\n                var v = vars[0];\r\n                //if no variable then guess what!?!? We're done!!! We have a polynomial.\r\n                if(!v)\r\n                    return true;\r\n                for(var x in this.symbols) {\r\n                    var sym = this.symbols[x];\r\n                    //sqrt(x)\r\n                    if(sym.group === FN && sym.fname === SQRT && !sym.args[0].isConstant())\r\n                        return false;\r\n                    if(!sym.contains(v) && !sym.isConstant(true))\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n            //PL groups. These only fail if a power is not an int\r\n            //this should handle cases such as x^2*t\r\n            if(this.isComposite() || g === CB && multivariate) { \r\n                //fail if we're not checking for multivariate polynomials\r\n                if(!multivariate && vars.length > 1) \r\n                    return false;\r\n                //loop though the symbols and check if they qualify\r\n                for(var x in this.symbols) {\r\n                    //we've already the symbols if we're not checking for multivariates at this point\r\n                    //so we check the sub-symbols\r\n                    if(!this.symbols[x].isPoly(multivariate)) \r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n            else \r\n                return false;\r\n            \r\n            //all tests must have passed so we must be dealing with a polynomial\r\n            return true;\r\n        },\r\n        //removes the requested variable from the symbol and returns the remainder\r\n        stripVar: function(x) {\r\n            var retval;\r\n            if((this.group === PL || this.group === S) && this.value === x) \r\n                retval = new Symbol(this.multiplier);\r\n            else if(this.group === CB && this.isLinear()) { \r\n                retval = new Symbol(1);\r\n                this.each(function(s) { \r\n                    if(!s.contains(x, true)) \r\n                        retval = _.multiply(retval, s.clone());\r\n                });\r\n                retval.multiplier = retval.multiplier.multiply(this.multiplier);\r\n            }\r\n            else if(this.group === CP && !this.isLinear()) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === CP && this.isLinear()) {\r\n                retval = new Symbol(0);\r\n                this.each(function(s) {\r\n                    if(!s.contains(x)) {\r\n                        var t = s.clone();\r\n                        t.multiplier = t.multiplier.multiply(this.multiplier);\r\n                        retval = _.add(retval, t);\r\n                    } \r\n                });\r\n                //BIG TODO!!! It doesn't make much sense\r\n                if(retval.equals(0))\r\n                    retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === EX && this.power.contains(x, true)) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else if(this.group === FN && this.contains(x)) {\r\n                retval = new Symbol(this.multiplier);\r\n            }\r\n            else retval = this.clone();\r\n            \r\n            return retval;\r\n        },\r\n        //returns symbol in array form with x as base e.g. a*x^2+b*x+c = [c, b, a]. \r\n        toArray: function(v, arr) {\r\n            arr = arr || {\r\n                arr: [],\r\n                add: function(x, idx) {\r\n                    var e = this.arr[idx];\r\n                    this.arr[idx] = e ? _.add(e, x) : x;\r\n                }\r\n            };\r\n            var g = this.group;\r\n            \r\n            if(g === S && this.contains(v)) { \r\n                arr.add(new Symbol(this.multiplier), this.power);\r\n            }\r\n            else if(g === CB){\r\n                var a = this.stripVar(v),\r\n                    x = _.divide(this.clone(), a.clone());\r\n                var p = x.isConstant() ? 0 : x.power;\r\n                arr.add(a, p);\r\n            }\r\n            else if(g === PL && this.value === v) {\r\n                this.each(function(x, p) {\r\n                    arr.add(x.stripVar(v), p);\r\n                });\r\n            }\r\n            else if(g === CP) {\r\n                //the logic: they'll be broken into symbols so e.g. (x^2+x)+1 or (a*x^2+b*x+c)\r\n                //each case is handled above\r\n                this.each(function(x) {\r\n                    x.toArray(v, arr);\r\n                });\r\n            }\r\n            else if(this.contains(v)){\r\n                throw new Error('Cannot convert to array! Exiting');\r\n            }\r\n            else {\r\n                arr.add(this.clone(), 0); //it's just a constant wrt to v\r\n            }\r\n            //fill the holes\r\n            arr = arr.arr; //keep only the array since we don't need the object anymore\r\n            for(var i=0; i<arr.length; i++) \r\n                if(!arr[i])\r\n                    arr[i] = new Symbol(0);\r\n            return arr;\r\n        },\r\n        //checks to see if a symbol contans a function\r\n        hasFunc: function(v) {\r\n            var fn_group = this.group === FN || this.group === EX;\r\n            if( fn_group && !v || fn_group && this.contains(v) )\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].hasFunc(v)) return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        sub: function(a, b) { \r\n            a = !isSymbol(a) ? _.parse(a) : a.clone();\r\n            b = !isSymbol(b) ? _.parse(b) : b.clone();\r\n            if(a.group === N || a.group === P)\r\n                err('Cannot substitute a number. Must be a variable');\r\n            var same_pow = false,\r\n                a_is_unit_multiplier = a.multiplier.equals(1),\r\n                m = this.multiplier.clone(),\r\n                retval;\r\n            /* \r\n             * In order to make the substitution the bases have to first match take\r\n             * (x+1)^x -> (x+1)=y || x^2 -> x=y^6\r\n             * In both cases the first condition is that the bases match so we begin there\r\n             * Either both are PL or both are not PL but we cannot have PL and a non-PL group match\r\n             */\r\n            if(this.value === a.value && (this.group !== PL && a.group !== PL || this.group === PL && a.group === PL)) { \r\n                //we cleared the first hurdle but a subsitution may not be possible just yet\r\n                if(a_is_unit_multiplier || a.multiplier.equals(this.multiplier)) {\r\n                    if(a.isLinear()) { \r\n                        retval = b; \r\n                    }\r\n                    else if(a.power.equals(this.power)) {\r\n                        retval = b;\r\n                        same_pow = true;\r\n                    }\r\n                    if(a.multiplier.equals(this.multiplier))\r\n                        m = new Frac(1);\r\n                }\r\n            }\r\n            //the next thing is to handle CB\r\n            else if(this.group === CB || this.previousGroup === CB) {\r\n                retval = new Symbol(1);\r\n                this.each(function(x) { \r\n                    retval = _.multiply(retval, x.sub(a, b));\r\n                });\r\n            }\r\n            else if(this.isComposite()) {\r\n                retval = new Symbol(0);\r\n                this.each(function(x) { \r\n                    retval = _.add(retval, x.sub(a, b));\r\n                });\r\n            }\r\n            else if(this.group === EX) {\r\n                // the parsed value could be a function so parse and sub\r\n                retval = _.parse(this.value).sub(a, b);\r\n            }\r\n            else if(this.group === FN) { \r\n                var nargs = [];\r\n                for(var i=0; i<this.args.length; i++) {\r\n                    var arg = this.args[i];\r\n                    if(!isSymbol(arg))\r\n                        arg = _.parse(arg);\r\n                    nargs.push(arg.sub(a, b));\r\n                }\r\n                retval = _.symfunction(this.fname, nargs);\r\n            }\r\n            //if we did manage a substitution\r\n            if(retval) {\r\n                if(!same_pow) {\r\n                    //substitute the power\r\n                    var p = this.group === EX ? this.power.sub(a, b) : _.parse(this.power);\r\n                    //now raise the symbol to that power\r\n                    retval = _.pow(retval, p); \r\n                }\r\n\r\n                //transfer the multiplier\r\n                retval.multiplier = retval.multiplier.multiply(m);\r\n                //done\r\n                return retval;\r\n            }\r\n            //if all else fails\r\n            return this.clone();\r\n        },\r\n        isMonomial: function() {\r\n            if(this.group === S) return true;\r\n            if(this.group === CB) {\r\n                for(var x in this.symbols) \r\n                    if(this.symbols[x].group !== S)\r\n                        return false;\r\n            }\r\n            else return false;\r\n            return true;\r\n        },\r\n        isPi: function() {\r\n            return this.group === S && this.value === 'pi';\r\n        },\r\n        sign: function() {\r\n            return this.multiplier.sign();\r\n        },\r\n        isE: function() {\r\n            return this.value === 'e';\r\n        },\r\n        isSQRT: function() {\r\n            return this.fname === SQRT;\r\n        },\r\n        isConstant: function(check_all) {\r\n            if(check_all === 'all' && (this.isPi() || this.isE()))\r\n                return true;\r\n            if(check_all && this.group === FN) {\r\n                for(var i=0; i<this.args.length; i++) {\r\n                    if(!this.args[i].isConstant())\r\n                        return false;\r\n                }\r\n                return true;\r\n            }\r\n            return this.value === CONST_HASH;\r\n        },\r\n        //the symbols is imaginary if \r\n        //1. n*i\r\n        //2. a+b*i\r\n        //3. a*i\r\n        isImaginary: function() { \r\n            if(this.imaginary)\r\n                return true;\r\n            else if(this.symbols) {\r\n                for(var x in this.symbols)\r\n                    if(this.symbols[x].imaginary)\r\n                        return true;\r\n            }\r\n            return false;\r\n        },\r\n        /**\r\n         * Returns the real part of a symbol\r\n         * @returns {Symbol}\r\n         */\r\n        realpart: function() { \r\n            if(this.isConstant()) { \r\n                return this.clone();\r\n            }\r\n            else if(this.imaginary)\r\n                return new Symbol(0);\r\n            else if(this.isComposite()) { \r\n                var retval = new Symbol(0);\r\n                this.each(function(x) {\r\n                    retval = _.add(retval, x.realpart());\r\n                });\r\n                return retval;\r\n            }\r\n            else if(this.isImaginary())\r\n                return new Symbol(0);\r\n            return this.clone();\r\n        },\r\n        /*\r\n         * Return imaginary part of a symbol\r\n         * @returns {Symbol}\r\n         */\r\n        imagpart: function() {\r\n            if(this.group === S && this.isImaginary())\r\n                return new Symbol(this.multiplier);\r\n            if(this.isComposite()) {\r\n                var retval = new Symbol(0);\r\n                this.each(function(x) {\r\n                    retval = _.add(retval, x.imagpart());\r\n                });\r\n                return retval;\r\n            }\r\n            if(this.group === CB)\r\n                return this.stripVar(Settings.IMAGINARY);\r\n            return new Symbol(0);\r\n        },\r\n        isInteger: function() {\r\n            return this.isConstant() && this.multiplier.isInteger();\r\n        },\r\n        isLinear: function(wrt) {\r\n            if(wrt) {\r\n                if(this.isConstant())\r\n                    return true;\r\n                if(this.group === S) {\r\n                    if(this.value === wrt)return this.power.equals(1);\r\n                    else return true;\r\n                }\r\n                \r\n                if(this.isComposite() && this.power.equals(1)) {\r\n                    for(var x in this.symbols) {\r\n                        if(!this.symbols[x].isLinear(wrt))\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n                \r\n                if(this.group === CB && this.symbols[wrt])\r\n                    return this.symbols[wrt].isLinear(wrt);\r\n                return false;  \r\n            }\r\n            else return this.power.equals(1);\r\n        },\r\n        containsFunction: function(names) {\r\n            if(typeof names === 'string')\r\n                names = [names];\r\n            if(this.group === FN && names.indexOf(this.fname) !== -1) \r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) {\r\n                    if(this.symbols[x].containsFunction(names))\r\n                        return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n        multiplyPower: function(p2) {\r\n            //leave out 1\r\n            if(this.group === N && this.multiplier.equals(1)) return this;\r\n            \r\n            var p1 = this.power;\r\n            \r\n            if(this.group !== EX && p2.group === N) {\r\n                var p = p2.multiplier;\r\n                if(this.group === N && !p.isInteger()) {\r\n                    this.convert(P);\r\n                }\r\n\r\n                this.power = p1.equals(1) ? p.clone() : p1.multiply(p);\r\n\r\n                if(this.group === P && isInt(this.power)) {\r\n                    //bring it back to an N\r\n                    this.value = Math.pow(this.value, this.power);\r\n                    this.toLinear(); \r\n                    this.convert(N);\r\n                }\r\n            }\r\n            else {\r\n                if(this.group !== EX) {\r\n                    p1 = new Symbol(p1);\r\n                    this.convert(EX);\r\n                }\r\n                this.power = _.multiply(p1, p2);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        setPower: function(p, retainSign) { \r\n            //leave out 1\r\n            if(this.group === N && this.multiplier.equals(1)) return this;\r\n            if(this.group === EX && !isSymbol(p)) {\r\n                this.group = this.previousGroup; \r\n                delete this.previousGroup; \r\n                if(this.group === N) {\r\n                    this.multiplier = new Frac(this.value);\r\n                    this.value = CONST_HASH;\r\n                }\r\n                else\r\n                    this.power = p;\r\n            }\r\n            else {\r\n                var isIntP = false,\r\n                    isSymbolic = false;\r\n                if(isSymbol(p)) {\r\n                    if(p.group === N) {\r\n                        //p should be the multiplier instead\r\n                        p = p.multiplier;\r\n\r\n                    }\r\n                    else {\r\n                        isSymbolic = true;\r\n                    }\r\n                }\r\n                var group = isSymbolic ? EX : !isIntP ? P : null;\r\n                this.power = p; \r\n                if(this.group === N && group) this.convert(group, retainSign);\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * Checks to see if symbol is located in the denominator\r\n         * @returns {boolean}\r\n         */\r\n        isInverse: function() {\r\n            if(this.group === EX) return (this.power.multiplier.lessThan(0));\r\n            return this.power < 0;\r\n        },\r\n        /**\r\n         * Make a duplicate of a symbol by copying a predefined list of items\r\n         * to a new symbol\r\n         * @param {Symbol} c \r\n         * @returns {Symbol}\r\n         */\r\n        clone: function(c) { \r\n            var clone = c || new Symbol(0),\r\n                //list of properties excluding power as this may be a symbol and would also need to be a clone.\r\n                properties = [\r\n                    'value', 'group', 'length', 'previousGroup', 'imaginary', 'fname', 'args', 'isInfinity'],\r\n                l = properties.length, i;\r\n            if(this.symbols) {\r\n                clone.symbols = {};\r\n                for(var x in this.symbols) {\r\n                    clone.symbols[x] = this.symbols[x].clone();\r\n                }\r\n            }\r\n\r\n            for(i=0; i<l; i++) {\r\n                if(this[properties[i]] !== undefined) {\r\n                    clone[properties[i]] = this[properties[i]];\r\n                }\r\n            }\r\n\r\n            clone.power = this.power.clone();\r\n            clone.multiplier = this.multiplier.clone();\r\n\r\n            return clone;\r\n        },\r\n        toUnitMultiplier: function(keepSign) {\r\n            this.multiplier.num = new bigInt(this.multiplier.num.isNegative() && keepSign ? -1 : 1);\r\n            this.multiplier.den = new bigInt(1);\r\n            return this;\r\n        },\r\n        toLinear: function() {\r\n            this.setPower(new Frac(1));\r\n            return this;\r\n        },\r\n        each: function(fn, deep) {\r\n            if(!this.symbols) {\r\n                fn.call(this, this, this.value);\r\n            }\r\n            else {\r\n                for(var x in this.symbols) {\r\n                    var sym = this.symbols[x];\r\n                    if(sym.group === PL && deep) {\r\n                        for(var y in sym.symbols) {\r\n                            fn.call(x, sym.symbols[y], y);\r\n                        }\r\n                    }\r\n                    else\r\n                        fn.call(this, sym, x);\r\n                }\r\n            }\r\n        },\r\n        /**\r\n         * A numeric value to be returned for Javascript. It will try to \r\n         * return a number as far a possible but in case of a pure symbolic\r\n         * symbol it will just return its text representation\r\n         * @returns {String|Number}\r\n         */\r\n        valueOf: function() {\r\n            if(this.group === N) \r\n                return this.multiplier.valueOf(); \r\n            else if(this.power === 0){ return 1; }\r\n            else if(this.multiplier === 0) { return 0; }\r\n            else { return text(this, 'decimals'); }\r\n        },\r\n        /**\r\n         * Checks to see if a symbols has a particular variable within it.\r\n         * Pass in true as second argument to include the power of exponentials\r\n         * which aren't check by default.\r\n         * @example var s = _.parse('x+y+z'); s.contains('y');\r\n         * //returns true\r\n         * @returns {boolean}\r\n         */\r\n        contains: function(variable, all) { \r\n            var g = this.group; \r\n            if(this.value === variable)\r\n                return true;\r\n            if(this.symbols) {\r\n                for(var x in this.symbols) { \r\n                    if(this.symbols[x].contains(variable, all)) return true; \r\n                }\r\n            }\r\n            if(g === FN || this.previousGroup === FN) {\r\n                for(var i=0; i<this.args.length; i++) { \r\n                    if(this.args[i].contains(variable, all)) return true; \r\n                }\r\n            }\r\n            \r\n            if(g === EX) { \r\n                //exit only if it does\r\n                if(all && this.power.contains(variable, all)) { return true; }\r\n                if(this.value === variable)\r\n                    return true;\r\n                \r\n            }\r\n            \r\n            return this.value === variable;\r\n        },\r\n        /**\r\n         * Negates a symbols\r\n         * @returns {boolean}\r\n         */\r\n        negate: function() { \r\n            this.multiplier.negate();\r\n            if(this.group === CP || this.group === PL) \r\n                this.distributeMultiplier();\r\n            return this;\r\n        },\r\n        /**\r\n         * Inverts a symbol\r\n         * @returns {boolean}\r\n         */\r\n        invert: function(power_only, all) { \r\n            //invert the multiplier\r\n            if(!power_only) this.multiplier = this.multiplier.invert();\r\n            //invert the rest\r\n            if(isSymbol(this.power)) {\r\n                this.power.negate();\r\n            }\r\n            else if(this.group === CB && all) {\r\n                this.each(function(x) {\r\n                    return x.invert();\r\n                });\r\n            }\r\n            else {\r\n                if(this.power && this.group !== N) this.power.negate();\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * Symbols of group CP or PL may have the multiplier being carried by \r\n         * the top level symbol at any given time e.g. 2*(x+y+z). This is \r\n         * convenient in many cases, however in some cases the multiplier needs\r\n         * to be carried individually e.g. 2*x+2*y+2*z.\r\n         * This method distributes the multiplier over the entire symbol\r\n         * @returns {Symbol}\r\n         */\r\n        distributeMultiplier: function(all) { \r\n            var is_one = all ? this.power.absEquals(1) : this.power.equals(1);\r\n            if(this.symbols && is_one && this.group !== CB && !this.multiplier.equals(1)) {\r\n                for(var x in this.symbols) {\r\n                    var s = this.symbols[x];\r\n                    s.multiplier = s.multiplier.multiply(this.multiplier);\r\n                    s.distributeMultiplier();\r\n                }\r\n                this.toUnitMultiplier();\r\n            }\r\n\r\n            return this;\r\n        },\r\n        /**\r\n         * This method expands the exponent over the entire symbol just like\r\n         * distributeMultiplier\r\n         * @returns {Symbol}\r\n         */\r\n        distributeExponent: function() { \r\n            if(!this.power.equals(1)) {\r\n                var p = this.power;\r\n                for(var x in this.symbols) {\r\n                    var s = this.symbols[x];\r\n                    if(s.group === EX) {\r\n                        s.power = _.multiply(s.power, new Symbol(p));\r\n                    }\r\n                    else {\r\n                        this.symbols[x].power  = this.symbols[x].power.multiply(p);\r\n                    }\r\n                }\r\n                this.toLinear();\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * This method will attempt to up-convert or down-convert one symbol\r\n         * from one group to another. Not all symbols are convertible from one \r\n         * group to another however. In that case the symbol will remain \r\n         * unchanged.\r\n         */\r\n        convert: function(group, imaginary) { \r\n            if(group > FN) { \r\n                //make a clone of this symbol;\r\n                var cp = this.clone();\r\n\r\n                //attach a symbols object and upgrade the group\r\n                this.symbols = {};\r\n\r\n                if(group === CB) { \r\n                    //symbol of group CB hold symbols bound together through multiplication\r\n                    //because of commutativity this multiplier can technically be anywhere within the group\r\n                    //to keep track of it however it's easier to always have the top level carry it\r\n                    cp.toUnitMultiplier();\r\n                }\r\n                else {\r\n                    //reset the symbol\r\n                    this.toUnitMultiplier();\r\n                }\r\n\r\n                if(this.group === FN) {\r\n                    cp.args = this.args; \r\n                    delete this.args;\r\n                    delete this.fname;\r\n                }\r\n\r\n                //the symbol may originate from the symbol i but this property no longer holds true\r\n                //after copying\r\n                if(this.isImgSymbol) delete this.isImgSymbol;\r\n\r\n                this.toLinear();\r\n                //attach a clone of this symbol to the symbols object using its proper key\r\n                this.symbols[cp.keyForGroup(group)] = cp; \r\n                this.group = group;\r\n                //objects by default don't have a length property. However, in order to keep track of the number\r\n                //of sub-symbols we have to impliment our own.\r\n                this.length = 1;    \r\n            }\r\n            else if(group === EX) { \r\n                //1^x is just one so check and make sure\r\n                if(!(this.group === N && this.multiplier.equals(1))) {\r\n                    if(this.group !== EX) this.previousGroup = this.group;\r\n                    if(this.group === N) { \r\n                        this.value = this.multiplier.num.toString();\r\n                        this.toUnitMultiplier();\r\n                    }\r\n                    //update the hash to reflect the accurate hash\r\n                    else this.value = text(this, 'hash');\r\n                    \r\n                    this.group = EX;\r\n                }\r\n            }\r\n            else if(group === N) { \r\n                var m = this.multiplier.toDecimal(); \r\n                if(this.symbols) this.symbols = undefined;\r\n                new Symbol(this.group === P ? m*Math.pow(this.value, this.power) : m).clone(this);\r\n            }\r\n            else if(group === P && this.group === N) { \r\n                this.value = imaginary ? this.multiplier.num.toString() : Math.abs(this.multiplier.num.toString());\r\n                this.toUnitMultiplier(!imaginary);\r\n                this.group = P;\r\n            }\r\n            return this;\r\n        },\r\n        /**\r\n         * This method is one of the principal methods to make it all possible.\r\n         * It performs cleanup and prep operations whenever a symbols is \r\n         * inserted. If the symbols results in a 1 in a CB (multiplication) \r\n         * group for instance it will remove the redundant symbol. Similarly\r\n         * in a symbol of group PL or CP (symbols glued by multiplication) it\r\n         * will remove any dangling zeroes from the symbol. It will also \r\n         * up-convert or down-convert a symbol if it detects that it's \r\n         * incorrectly grouped. It should be noted that this method is not\r\n         * called directly but rather by the 'attach' method for addition groups\r\n         * and the 'combine' method for multipiclation groups.\r\n         */\r\n        insert: function(symbol, action) { \r\n            //this check can be removed but saves a lot of aggravation when trying to hunt down\r\n            //a bug. If left, you will instantly know that the error can only be between 2 symbols.\r\n            if(!isSymbol(symbol)) err('Object '+symbol+' is not of type Symbol!');\r\n            if(this.symbols) { \r\n                var group = this.group;\r\n                if(group > FN) { \r\n                    var key = symbol.keyForGroup(group); \r\n                    var existing = key in this.symbols ? this.symbols[key] : false; //check if there's already a symbol there\r\n                    if(action === 'add') {\r\n                        var hash = key;\r\n                        if(existing) { \r\n                            //add them together using the parser\r\n                            this.symbols[hash] = _.add(existing, symbol); \r\n                            //if the addition resulted in a zero multiplier remove it\r\n                            if(this.symbols[hash].multiplier.equals(0)) {\r\n                                delete this.symbols[hash];\r\n                                this.length--;\r\n                                \r\n                                if(this.length === 0) {\r\n                                    this.convert(N);\r\n                                    this.multiplier = new Frac(0);\r\n                                }\r\n                            }\r\n                        }\r\n                        else { \r\n                            this.symbols[key] = symbol;\r\n                            this.length++;\r\n                        }  \r\n                    }\r\n                    else { \r\n                        //check if this is of group P and unwrap before inserting\r\n                        if(symbol.group === P && isInt(symbol.power)) {\r\n                            symbol.convert(N);\r\n                        }\r\n                        \r\n                        //transfer the multiplier to the upper symbol but only if the symbol numeric\r\n                        if(symbol.group !== EX) {\r\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier);\r\n                            symbol.toUnitMultiplier();\r\n                        }\r\n                        else {\r\n                            symbol.parens = symbol.multiplier.lessThan(0);\r\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier.clone().abs());\r\n                            symbol.toUnitMultiplier(true);\r\n                        }\r\n                            \r\n                        if(existing) {  \r\n                            //remove because the symbol may have changed\r\n                            symbol = _.multiply(remove(this.symbols, key), symbol);\r\n                            if(symbol.isConstant()) {\r\n                                 this.multiplier = this.multiplier.multiply(symbol.multiplier);\r\n                                 symbol = new Symbol(1); //the dirty work gets done down the line when it detects 1\r\n                            }\r\n\r\n                            this.length--;\r\n                            //clean up\r\n                        }\r\n                        \r\n                        //don't insert the symbol if it's 1\r\n                        if(!symbol.isOne(true)) {\r\n                            this.symbols[key] = symbol;\r\n                            this.length++;\r\n                        }\r\n                        else if(symbol.multiplier.lessThan(0)) {\r\n                             this.negate(); //put back the sign\r\n                        }\r\n                    }\r\n                    \r\n                    //clean up\r\n                    if(this.length === 0) this.convert(N);\r\n                    //update the hash\r\n                    if(this.group === CP || this.group === CB) {\r\n                        this.updateHash();\r\n                    }\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },  \r\n        //the insert method for addition\r\n        attach: function(symbol) {\r\n            if(isArray(symbol)) {\r\n                for(var i=0; i<symbol.length; i++) this.insert(symbol[i], 'add');\r\n                return this;\r\n            }\r\n            return this.insert(symbol, 'add');\r\n        },\r\n        //the insert method for multiplication\r\n        combine: function(symbol) {\r\n            if(isArray(symbol)) {\r\n                for(var i=0; i<symbol.length; i++) this.insert(symbol[i], 'multiply');\r\n                return this;\r\n            }\r\n            return this.insert(symbol, 'multiply');\r\n        },\r\n        /**\r\n         * This method should be called after any major \"surgery\" on a symbol.\r\n         * It updates the hash of the symbol for example if the fname of a \r\n         * function has changed it will update the hash of the symbol.\r\n         */\r\n        updateHash: function() {\r\n            if(this.group === N) return;\r\n            \r\n            if(this.group === FN) {\r\n                var contents = '',\r\n                    args = this.args,\r\n                    is_parens = this.fname === PARENTHESIS;\r\n                for(var i=0; i<args.length; i++) contents += (i===0 ? '' : ',')+text(args[i]);\r\n                var fn_name = is_parens ? '' : this.fname;\r\n                this.value = fn_name+(is_parens ? contents : inBrackets(contents));\r\n            }\r\n            else if(!(this.group === S || this.group === PL)) {\r\n                this.value = text(this, 'hash');\r\n            }\r\n        },\r\n        /**\r\n         * this function defines how every group in stored within a group of \r\n         * higher order think of it as the switchboard for the library. It \r\n         * defines the hashes for symbols. \r\n         */\r\n        keyForGroup: function(group) {\r\n            var g = this.group;\r\n            var key; \r\n            \r\n            if(g === N) {\r\n                key = this.value;\r\n            }\r\n            else if(g === S || g === P) {\r\n                if(group === PL) key = this.power.toDecimal();\r\n                else key = this.value;\r\n            }\r\n            else if(g === FN) { \r\n                if(group === PL) key = this.power.toDecimal();\r\n                else key = text(this, 'hash');\r\n            }\r\n            else if(g === PL) { \r\n                //if the order is reversed then we'll assume multiplication\r\n                //TODO: possible future dilemma\r\n                if(group === CB) key = text(this, 'hash');\r\n                else if(group === CP) { \r\n                    if(this.power.equals(1)) key = this.value;\r\n                    else key = inBrackets(text(this, 'hash'))+Settings.POWER_OPERATOR+this.power.toDecimal();\r\n                }\r\n                else if(group === PL) key = this.power.toString();\r\n                else key = this.value;\r\n                return key;\r\n            }\r\n            else if(g === CP) {\r\n                if(group === CP) key = text(this, 'hash');\r\n                if(group === PL) key = this.power.toDecimal();\r\n                else key = this.value;\r\n            }\r\n            else if(g === CB) {\r\n                if(group === PL) key = this.power.toDecimal();\r\n                else key = text(this, 'hash');\r\n            }\r\n            else if(g === EX) { \r\n                if(group === PL) key = text(this.power);\r\n                else key = text(this, 'hash');\r\n            }\r\n            \r\n            return key;\r\n        },\r\n        /** \r\n         * Symbols are typically stored in an object which works fine for most\r\n         * cases but presents a problem when the order of the symbols makes\r\n         * a difference. This function simply collects all the symbols and \r\n         * returns them as an array. If a function is supplied then that \r\n         * function is called on every symbol contained within the object.\r\n         * @returns {Array}\r\n         */\r\n        collectSymbols: function(fn, opt, sort_fn, expand_symbol) { \r\n            var collected = [];\r\n            if(!this.symbols) collected.push(this);\r\n            else {\r\n                for(var x in this.symbols) {\r\n                    var symbol = this.symbols[x];\r\n                    if(expand_symbol && (symbol.group === PL || symbol.group === CP)) {\r\n                        collected = collected.concat(symbol.collectSymbols());\r\n                    }\r\n                    else collected.push( fn ? fn(symbol, opt) : symbol );\r\n                }\r\n            }\r\n            if(sort_fn === null) sort_fn = undefined; //WTF Firefox? Seriously?\r\n            \r\n            return collected.sort(sort_fn);//sort hopefully gives us some sort of consistency\r\n        },\r\n        /**\r\n         * Returns the latex representation of the symbol\r\n         * @returns {String}\r\n         */\r\n        latex: function(option) {\r\n            return LaTeX.latex(this, option);\r\n        },\r\n        /**\r\n         * Returns the text representation of a symbol\r\n         * @returns {String}\r\n         */\r\n        text: function(option) {\r\n            return text(this, option);\r\n        },\r\n        /**\r\n         * Checks if the function evaluates to 1. e.g. x^0 or 1 :)\r\n         */\r\n        isOne: function(abs) {\r\n            var f = abs ? 'absEquals' : 'equals';\r\n            if(this.group === N) return this.multiplier[f](1);\r\n            else return this.power.equals(0);\r\n        },\r\n        isComposite: function() {\r\n            var g = this.group,\r\n                pg = this.previousGroup;\r\n            return g === CP || g === PL || pg === PL || pg === CP;\r\n        },\r\n        isCombination: function() {\r\n            var g = this.group,\r\n                pg = this.previousGroup;\r\n            return g === CB || pg === CB;\r\n        },\r\n        lessThan: function(n) {\r\n            return this.multiplier.lessThan(n);\r\n        },\r\n        greaterThan: function(n) {\r\n            return this.multiplier.greaterThan(n);\r\n        },\r\n        /**\r\n         * Get's the denominator of the symbol if the symbol is of class CB (multiplication)\r\n         * with other classes the symbol is either the denominator or not. \r\n         * Take x^-1+x^-2. If the symbol was to be mixed such as x+x^-2 then the symbol doesn't have have an exclusive\r\n         * denominator and has to be found by looking at the actual symbols themselves.\r\n         */\r\n        getDenom: function() { \r\n            var retval, symbol;\r\n            symbol = this.clone();\r\n            //e.g. 1/(x*(x+1))\r\n            if(this.group === CB && this.power.lessThan(0))\r\n                symbol = _.expand(symbol);\r\n\r\n            //if the symbol already is the denominator... DONE!!!\r\n            if(symbol.power.lessThan(0)) {\r\n                var d = _.parse(symbol.multiplier.den);\r\n                retval = symbol.toUnitMultiplier();\r\n                retval.power.negate();\r\n                retval = _.multiply(d, retval); //put back the coeff\r\n            }\r\n            else if(symbol.group === CB) {\r\n                retval = _.parse(symbol.multiplier.den);\r\n                for(var x in symbol.symbols) \r\n                    if(symbol.symbols[x].power < 0) \r\n                        retval = _.multiply(retval, symbol.symbols[x].clone().invert());\r\n            }\r\n            else\r\n                retval = _.parse(symbol.multiplier.den);\r\n            return retval;\r\n        },\r\n        getNum: function() {\r\n            var retval, symbol;\r\n            symbol = this.clone();\r\n            //e.g. 1/(x*(x+1))\r\n            if(symbol.group === CB && symbol.power.lessThan(0))\r\n                symbol = _.expand(symbol);\r\n            //if the symbol already is the denominator... DONE!!!\r\n            if(symbol.power.greaterThan(0) && symbol.group !== CB) {\r\n                retval = _.parse(symbol.multiplier.num);\r\n                retval = _.multiply(retval, symbol.toUnitMultiplier()); \r\n            }\r\n            else if(symbol.group === CB) {\r\n                retval = _.parse(symbol.multiplier.num);\r\n                for(var x in symbol.symbols) \r\n                    if(symbol.symbols[x].power > 0) \r\n                        retval = _.multiply(retval, symbol.symbols[x].clone());\r\n            }\r\n            else\r\n                retval = _.parse(symbol.multiplier.num);\r\n            return retval;\r\n        },\r\n        toString: function() {\r\n            return this.text();\r\n        }\r\n    };\r\n    \r\n    function primeFactors(num) {\r\n        if(isPrime(num)) return [num];\r\n        var l = num, i=1, factors = [], \r\n            epsilon = 2.2204460492503130808472633361816E-16;\r\n        while(i<l) {\r\n            var quotient = num/i; \r\n            var whole = Math.floor(quotient);\r\n            var remainder = quotient-whole;\r\n            if(remainder <= epsilon && i>1) {\r\n                if(PRIMES.indexOf(i) !== -1) factors.push(i);\r\n                l = whole;\r\n            }\r\n            i++;\r\n        }\r\n        return factors.sort(function(a, b){return a-b;});\r\n    };\r\n \r\n    \r\n    /**\r\n     * This class defines the operators in nerdamer. The thinking is that with using these parameters\r\n     * we should be able to define more operators such as the modulus operator or a boolean operator.\r\n     * Although this initially works at the moment, it fails in some instances due to minor flaws in design which\r\n     * will be addressed in future releases.\r\n     * @param {char} val - The symbol of the operator\r\n     * @param {String} fn - The function it maps to\r\n     * @param {Integer} precedence - The precedence of the operator\r\n     * @param {boolean} left_assoc - Is the operator left or right associative\r\n     * @param {boolean} is_prefix - Is the operator a prefix operator\r\n     * @param {boolean} is_postfix - Is the operator a postfix operator\r\n     * @param {boolean} operation - The prefix or postfix operation the operator preforms if its either\r\n     * @returns {Operator}\r\n     */\r\n    function Operator(val, fn, precedence, left_assoc, is_prefix, is_postfix, operation) {\r\n        this.val = val;\r\n        this.fn = fn;\r\n        this.precedence = precedence;\r\n        this.left_assoc = left_assoc;\r\n        this.is_prefix = is_prefix;\r\n        this.is_postfix = is_postfix || false;\r\n        this.operation = operation;\r\n        this.is_operator = true;\r\n    }\r\n    \r\n    Operator.prototype.toString = function() {\r\n        return this.val;\r\n    };\r\n    \r\n    function Bracket(val, bracket_id, is_open, fn, typ) {\r\n        this.val = val;\r\n        this.bracket_id = bracket_id;\r\n        this.open = !!is_open;\r\n        this.fn = fn;\r\n        this.type = typ;\r\n    }\r\n    \r\n    Bracket.prototype.toString = function() {\r\n        return this.val;\r\n    };\r\n    \r\n    function Prefix(operator) {\r\n        this.operation = operator.operation;\r\n        this.val = operator.val;\r\n        this.is_prefix_operator = true;\r\n    }\r\n    \r\n    Prefix.prototype.toString = function() {\r\n        return '`'+this.val;\r\n    };\r\n    \r\n    //custom errors\r\n    //thrown if trying to divide by zero\r\n    function DivisionByZero(msg){\r\n        this.message = msg || \"\";\r\n    }\r\n    DivisionByZero.prototype = Object.create(Error.prototype);\r\n    //thrown in parser \r\n    function ParseError(msg){\r\n        this.message = msg || \"\";\r\n    }\r\n    ParseError.prototype = Object.create(Error.prototype);\r\n    //thrown for undefined errors\r\n    function UndefinedError(msg){\r\n        this.message = msg || \"\";\r\n    }\r\n    UndefinedError.prototype = Object.create(Error.prototype);\r\n    //thrown for maximum iteration error\r\n    function MaximumIterationsReached(msg){\r\n        this.message = msg || \"\";\r\n    }\r\n    MaximumIterationsReached.prototype = Object.create(Error.prototype);\r\n    \r\n    //Uses modified Shunting-yard algorithm. http://en.wikipedia.org/wiki/Shunting-yard_algorithm\r\n    function Parser(){\r\n        //we want the underscore to point to this parser not the global nerdamer parser.\r\n        var _ = this, \r\n            bin = {},\r\n            constants = this.constants = {\r\n                PI: Math.PI,\r\n                E:  Math.E\r\n            },\r\n            subs = {\r\n                e:  Math.E,\r\n                pi: Math.PI\r\n            };\r\n            \r\n        var complex = {\r\n            prec: undefined,\r\n            cos: function(r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.cos(r)*Math.cosh(i));\r\n                im = _.parse(Math.sin(r)*Math.sinh(i));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sin: function(r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sin(r)*Math.cosh(i));\r\n                im = _.parse(Math.cos(r)*Math.sinh(i));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            tan: function(r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sin(2*r)/(Math.cos(2*r)+Math.cosh(2*i)));\r\n                im = _.parse(Math.sinh(2*i)/(Math.cos(2*r)+Math.cosh(2*i)));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sec: function(r, i) {\r\n                var t = this.removeDen(this.cos(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            csc: function(r, i) { \r\n                var t = this.removeDen(this.sin(r, i));\r\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            cot: function(r, i) {\r\n                var t = this.removeDen(this.tan(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            acos: function(r, i) { \r\n                var symbol, sq, a, b, c;\r\n                symbol = this.fromArray([r, i]);\r\n                sq = _.expand(_.pow(symbol.clone(), new Symbol(2))); //z*z\r\n                a = _.multiply(sqrt(_.subtract(new Symbol(1), sq)), Symbol.imaginary());\r\n                b = _.expand(_.add(symbol.clone(), a));\r\n                c = log(b);\r\n                return _.expand(_.multiply(Symbol.imaginary().negate(), c));\r\n            },\r\n            asin: function(r, i) {\r\n                return _.subtract(_.parse('pi/2'), this.acos(r, i));\r\n            },\r\n            atan: function(r, i) {\r\n                var a, b, c, symbol;\r\n                symbol = complex.fromArray([r, i]);\r\n                a = _.expand(_.multiply(Symbol.imaginary(), symbol.clone()));\r\n                b = log(_.expand(_.subtract(new Symbol(1), a.clone())));\r\n                c = log(_.expand(_.add(new Symbol(1), a.clone())));\r\n                return _.expand(_.multiply(_.divide(Symbol.imaginary(), new Symbol(2)), _.subtract(b, c)));\r\n            },\r\n            asec: function(r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.acos.apply(this, d);\r\n            },\r\n            acsc: function(r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.asin.apply(this, d);\r\n            },\r\n            acot: function(r, i) {\r\n                var d = this.removeDen([r, i]);\r\n                d[1].negate();\r\n                return this.atan.apply(this, d);\r\n            },\r\n            //Hyperbolic trig\r\n            cosh: function(r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.cosh(r)*Math.cos(i));\r\n                im = _.parse(Math.sinh(r)*Math.sin(i));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sinh: function(r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sinh(r)*Math.cos(i));\r\n                im = _.parse(Math.cosh(r)*Math.sin(i));\r\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            tanh: function(r, i) {\r\n                var re, im;\r\n                re = _.parse(Math.sinh(2*r)/(Math.cos(2*i)+Math.cosh(2*r)));\r\n                im = _.parse(Math.sin(2*i)/(Math.cos(2*i)+Math.cosh(2*r)));\r\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\r\n            },\r\n            sech: function(r, i) {\r\n                var t = this.removeDen(this.cosh(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            csch: function(r, i) {\r\n                var t = this.removeDen(this.sinh(r, i));\r\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            coth: function(r, i) {\r\n                var t = this.removeDen(this.tanh(r, i));\r\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\r\n            },\r\n            acosh: function(r, i) {\r\n                var a, b, z;\r\n                z = this.fromArray([r, i]);\r\n                a = sqrt(_.add(z.clone(), new Symbol(1)));\r\n                b = sqrt(_.subtract(z.clone(), new Symbol(1)));\r\n                return _.expand(log(_.add(z, _.expand(_.multiply(a, b)))));\r\n            },\r\n            asinh: function(r, i) {\r\n                var a, z;\r\n                z = this.fromArray([r, i]);\r\n                a = sqrt(_.add(new Symbol(1), _.expand(_.pow(z.clone(), new Symbol(2)))));\r\n                return _.expand(log(_.add(z, a)));\r\n            },\r\n            atanh: function(r, i) {\r\n                var a, b, z;\r\n                z = this.fromArray([r, i]);\r\n                a = log(_.add(z.clone(), new Symbol(1)));\r\n                b = log(_.subtract(new Symbol(1), z));\r\n                return _.expand(_.divide(_.subtract(a, b), new Symbol(2)));\r\n            },\r\n            asech: function(r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.acosh.apply(this, t);\r\n            },\r\n            acsch: function(r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.asinh.apply(this, t);\r\n            },\r\n            acoth: function(r, i) {\r\n                var t = this.removeDen([r, i]);\r\n                t[1].negate();\r\n                return this.atanh.apply(this, t);\r\n            },\r\n            sqrt: function(symbol) {\r\n                var re, im, h, a, d;\r\n                re = symbol.realpart();\r\n                im = symbol.imagpart();\r\n                h = Symbol.hyp(re, im);\r\n                a = _.add(re.clone(), h);\r\n                d = sqrt(_.multiply(new Symbol(2), a.clone()));\r\n                return _.add(_.divide(a.clone(), d.clone()), _.multiply(_.divide(im, d), Symbol.imaginary()));\r\n            },\r\n            log: function(r, i) {\r\n                var re, im;\r\n                re = log(Symbol.hyp(r, i));\r\n                im = _.parse(Math.atan2(i, r));\r\n                return _.add(re, _.multiply(Symbol.imaginary(), im));\r\n            },\r\n            removeDen: function(symbol) {\r\n                var den, r, i, re, im;\r\n                if(isArray(symbol)) {\r\n                    r = symbol[0];\r\n                    i = symbol[1];\r\n                }\r\n                else {\r\n                    r = symbol.realpart();\r\n                    i = symbol.imagpart();\r\n                }\r\n                    \r\n                den = Math.pow(r, 2)+Math.pow(i, 2);\r\n                re = _.parse(r/den);\r\n                im = _.parse(i/den);\r\n                return [re, im];\r\n            },\r\n            fromArray: function(arr) {\r\n                return _.add(arr[0], _.multiply(Symbol.imaginary(), arr[1]));\r\n            },\r\n            evaluate: function(symbol, f) {\r\n                var re, im, sign;\r\n                    \r\n                sign = symbol.power.sign();\r\n                //remove it from under the denominator\r\n                symbol.power = symbol.power.abs();\r\n                //expand\r\n                if(symbol.power.greaterThan(1))\r\n                    symbol = _.expand(symbol);\r\n                //remove the denominator\r\n                if(sign < 0) {\r\n                    var d = this.removeDen(symbol);\r\n                    re = d[0];\r\n                    im = d[1];\r\n                }\r\n                else {\r\n                    re = symbol.realpart();\r\n                    im = symbol.imagpart();\r\n                }\r\n\r\n                if(re.isConstant('all') && im.isConstant('all'))\r\n                    return this[f].call(this, re, im);\r\n                return _.symfunction(f, [symbol]);\r\n            }\r\n        };\r\n            \r\n        var trig = this.Trig = {\r\n            //container for trigonometric function\r\n            cos: function(symbol) {\r\n                if(symbol.equals('pi') && symbol.multiplier.den.equals(2))\r\n                    return new Symbol(0);\r\n                \r\n                if(Settings.PARSE2NUMBER) { \r\n                    if(symbol.equals(new Symbol(Math.PI/2)))\r\n                        return new Symbol(0);\r\n                    if(symbol.isConstant()) \r\n                        return new Symbol(Math.cos(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'cos');\r\n                    }\r\n                }\r\n                if(symbol.equals(0))\r\n                    return new Symbol(1);\r\n                \r\n                var retval, \r\n                    c = false,\r\n                    q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                    m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) { \r\n                    //return for 1 or -1 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval  = new Symbol(even(m) ? 1 : -1);\r\n                    } \r\n                    else {\r\n                        var n = Number(m.num), d = Number(m.den);\r\n                        if(d === 2) retval = new Symbol(0);\r\n                        else if(d === 3) {\r\n                            retval = _.parse('1/2'); c = true;\r\n                        }\r\n                        else if(d === 4) {\r\n                            retval = _.parse('1/sqrt(2)'); c = true;\r\n                        }\r\n                        else if(d === 6) {\r\n                            retval = _.parse('sqrt(3)/2'); c = true;\r\n                        }\r\n                        else retval = _.symfunction('cos', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(c && (q === 2 || q === 3)) retval.negate();\r\n\r\n                if(!retval) retval = _.symfunction('cos', [symbol]);\r\n\r\n                return retval;\r\n            },\r\n            sin: function(symbol) { \r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant()) \r\n                        return new Symbol(Math.sin(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) \r\n                        return complex.evaluate(symbol, 'sin');\r\n                }\r\n                \r\n                if(symbol.equals(0))\r\n                    return new Symbol(0);\r\n                \r\n                var retval, \r\n                    c = false,\r\n                    q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                    sign = symbol.multiplier.sign(),\r\n                    m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n                if(symbol.equals('pi'))\r\n                    retval = new Symbol(0);\r\n                else if(symbol.isPi() && symbol.isLinear()) { \r\n                    //return for 0 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval  = new Symbol(0);\r\n                    } \r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) {\r\n                            retval = new Symbol(1); c = true;\r\n                        }\r\n                        else if(d == 3) {\r\n                            retval = _.parse('sqrt(3)/2'); c = true\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('1/sqrt(2)'); c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('1/2'); c = true;\r\n                        }\r\n                        else retval = _.symfunction('sin', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval) retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\r\n\r\n                if(c && (q === 3 || q === 4)) retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            tan: function(symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.tan(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) \r\n                        return complex.evaluate(symbol, 'tan');\r\n                }\r\n                var retval, \r\n                    c = false,\r\n                    q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                    m = symbol.multiplier;\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) { \r\n                    //return 0 for all multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval  = new Symbol(0);\r\n                    } \r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) \r\n                            throw new UndefinedError('tan is undefined for '+symbol.toString());\r\n                        else if(d == 3) {\r\n                            retval = _.parse('sqrt(3)'); c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = new Symbol(1); c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('1/sqrt(3)'); c = true;\r\n                        }\r\n                        else retval = _.symfunction('tan', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval) retval = _.symfunction('tan', [symbol]);\r\n\r\n                if(c && (q === 2 || q === 4)) retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            sec: function(symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math2.sec(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) \r\n                        return complex.evaluate(symbol, 'sec');\r\n                }\r\n\r\n                var retval, \r\n                    c = false,\r\n                    q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                    m = symbol.multiplier.abs();\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) { \r\n                    //return for 1 or -1 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        retval  = new Symbol(even(m) ? 1 : -1);\r\n                    } \r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) \r\n                            throw new UndefinedError('sec is undefined for '+symbol.toString());\r\n                        else if(d == 3) {\r\n                            retval = new Symbol(2); c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('sqrt(2)'); c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('2/sqrt(3)'); c = true;\r\n                        }\r\n                        else retval = _.symfunction('sec', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(c && (q === 2 || q === 3)) retval.negate();\r\n\r\n                if(!retval) retval = _.symfunction('sec', [symbol]);\r\n\r\n                return retval;\r\n            },\r\n            csc: function(symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math2.csc(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) \r\n                        return complex.evaluate(symbol, 'csc');\r\n                }\r\n                \r\n                var retval, \r\n                    c = false,\r\n                    q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                    m = symbol.multiplier.abs();\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) { \r\n                    //return for 0 for multiples of pi\r\n                    if(isInt(m)) {\r\n                        throw new UndefinedError('csc is undefined for '+symbol.toString());\r\n                    } \r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) {\r\n                            retval = new Symbol(1); c = true;\r\n                        }\r\n                        else if(d == 3) {\r\n                            retval = _.parse('2/sqrt(3)'); c = true\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = _.parse('sqrt(2)'); c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = new Symbol(2); c = true;\r\n                        }\r\n                        else retval = _.symfunction('csc', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval) retval = _.symfunction('csc', [symbol]);\r\n\r\n                if(c && (q === 3 || q === 4)) retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            cot: function(symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math2.cot(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) \r\n                        return complex.evaluate(symbol, 'cot');\r\n                }\r\n                var retval, \r\n                    c = false,\r\n                    q = getQuadrant(symbol.multiplier.toDecimal()),\r\n                    m = symbol.multiplier;\r\n\r\n                symbol.multiplier = m;\r\n\r\n                if(symbol.isPi() && symbol.isLinear()) { \r\n                    //return 0 for all multiples of pi\r\n                    if(isInt(m)) {\r\n                        throw new UndefinedError('cot is undefined for '+symbol.toString());\r\n                    } \r\n                    else {\r\n                        var n = m.num, d = m.den;\r\n                        if(d == 2) retval = new Symbol(0);\r\n                        else if(d == 3) {\r\n                            retval = _.parse('1/sqrt(3)'); c = true;\r\n                        }\r\n                        else if(d == 4) {\r\n                            retval = new Symbol(1); c = true;\r\n                        }\r\n                        else if(d == 6) {\r\n                            retval = _.parse('sqrt(3)'); c = true;\r\n                        }\r\n                        else retval = _.symfunction('cot', [symbol]);\r\n                    }\r\n                }\r\n\r\n                if(!retval) retval = _.symfunction('cot', [symbol]);\r\n\r\n                if(c && (q === 2 || q === 4)) retval.negate();\r\n\r\n                return retval;\r\n            },\r\n            acos: function(symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.acos(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) \r\n                        return complex.evaluate(symbol, 'acos');\r\n                }\r\n                return _.symfunction('acos', arguments);\r\n            },\r\n            asin: function(symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.asin(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) \r\n                        return complex.evaluate(symbol, 'asin');\r\n                }\r\n                return _.symfunction('asin', arguments);\r\n            },\r\n            atan: function(symbol) {\r\n                var retval;\r\n                if(symbol.equals(0))\r\n                    retval = new Symbol(0);\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.atan(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) \r\n                        return complex.evaluate(symbol, 'atan');\r\n                }\r\n                else if(symbol.equals(-1))\r\n                    retval = _.parse('-pi/4');\r\n                else \r\n                    retval = _.symfunction('atan', arguments);\r\n                return retval;\r\n            },\r\n            asec: function(symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.acos(symbol.invert().valueOf()));\r\n                    if(symbol.isImaginary()) \r\n                        return complex.evaluate(symbol, 'asec');\r\n                }\r\n                return _.symfunction('asec', arguments);\r\n            },\r\n            acsc: function(symbol) {\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isConstant())\r\n                        return new Symbol(Math.acos(symbol.invert().valueOf()));\r\n                    if(symbol.isImaginary()) \r\n                        return complex.evaluate(symbol, 'acsc');\r\n                }\r\n                return _.symfunction('acsc', arguments);\r\n            },\r\n            acot: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.isImaginary()) {\r\n                        retval = complex.evaluate(symbol, 'acot');\r\n                    }\r\n                    else {\r\n                        var k = _.parse('pi/2');\r\n                        if(symbol.equals(0))\r\n                            retval = k;\r\n                        else {\r\n                            if(symbol.lessThan(0))\r\n                                k.negate();\r\n                            retval = _.subtract(k, trig.atan(symbol));\r\n                        }\r\n                    }\r\n                }\r\n                else \r\n                    retval = _.symfunction('acot', arguments);\r\n                return retval;    \r\n            },\r\n            atan2: function(a, b) {\r\n                if(a.equals(0) && b.equals(0))\r\n                    throw new UndefinedError('atan2 is undefined for 0, 0');\r\n                \r\n                if(Settings.PARSE2NUMBER && a.isConstant() && b.isConstant()) {\r\n                    return new Symbol(Math.atan2(a, b));\r\n                }\r\n                return _.symfunction('atan2', arguments);\r\n            }\r\n        };\r\n        this.trig = trig;\r\n        \r\n        var trigh = this.Trigh = {\r\n            //container for hyperbolic trig function\r\n            cosh: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) { \r\n                    if(symbol.isConstant()) \r\n                        return new Symbol(Math.cosh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'cosh');\r\n                    }\r\n                }\r\n                \r\n                return retval = _.symfunction('cosh', arguments);\r\n            },\r\n            sinh: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) { \r\n                    if(symbol.isConstant()) \r\n                        return new Symbol(Math.sinh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'sinh');\r\n                    }\r\n                }\r\n                \r\n                return retval = _.symfunction('sinh', arguments);\r\n            },\r\n            tanh: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) { \r\n                    if(symbol.isConstant()) \r\n                        return new Symbol(Math.tanh(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'tanh');\r\n                    }\r\n                }\r\n                \r\n                return retval = _.symfunction('tanh', arguments);\r\n            },\r\n            sech: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) { \r\n                    if(symbol.isConstant()) \r\n                        return new Symbol(Math.sech(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'sech');\r\n                    }\r\n                }\r\n                \r\n                return retval = _.symfunction('sech', arguments);\r\n            },\r\n            csch: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) { \r\n                    if(symbol.isConstant()) \r\n                        return new Symbol(Math.csch(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'csch');\r\n                    }\r\n                }\r\n                \r\n                return retval = _.symfunction('csch', arguments);\r\n            },\r\n            coth: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER) { \r\n                    if(symbol.isConstant()) \r\n                        return new Symbol(Math.coth(symbol.valueOf()));\r\n                    if(symbol.isImaginary()) {\r\n                        return complex.evaluate(symbol, 'coth');\r\n                    }\r\n                }\r\n                \r\n                return retval = _.symfunction('coth', arguments);\r\n            },\r\n            acosh: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acosh');\r\n                else if(Settings.PARSE2NUMBER) \r\n                    retval = evaluate(_.parse(format('log(({0})+sqrt(({0})^2-1))', symbol.toString())));\r\n                else \r\n                    retval = _.symfunction('acosh', arguments);\r\n                return retval;\r\n            },\r\n            asinh: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'asinh');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format('log(({0})+sqrt(({0})^2+1))', symbol.toString())));\r\n                else \r\n                    retval = _.symfunction('asinh', arguments);\r\n                return retval;\r\n            },\r\n            atanh: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'atanh');\r\n                else if(Settings.PARSE2NUMBER) { \r\n                    retval = evaluate(_.parse(format('(1/2)*log((1+({0}))/(1-({0})))', symbol.toString())));\r\n                }\r\n                else \r\n                    retval = _.symfunction('atanh', arguments);\r\n                return retval;\r\n            },\r\n            asech: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'asech');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(log(_.add(symbol.clone().invert(), sqrt(_.subtract(_.pow(symbol, new Symbol(-2)), new Symbol(1))))));\r\n                else \r\n                    retval = _.symfunction('asech', arguments);\r\n                return retval;\r\n            },\r\n            acsch: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acsch');\r\n                else if(Settings.PARSE2NUMBER)\r\n                    retval = evaluate(_.parse(format('log((1+sqrt(1+({0})^2))/({0}))', symbol.toString())));\r\n                else \r\n                    retval = _.symfunction('acsch', arguments);\r\n                return retval;\r\n            },\r\n            acoth: function(symbol) {\r\n                var retval;\r\n                if(Settings.PARSE2NUMBER && symbol.isImaginary())\r\n                    retval = complex.evaluate(symbol, 'acoth');\r\n                else if(Settings.PARSE2NUMBER) {\r\n                    if(symbol.equals(1))\r\n                        retval = Symbol.infinity();\r\n                    else\r\n                        retval = evaluate(\r\n                                _.divide(\r\n                                    log(_.divide(_.add(symbol.clone(), new Symbol(1)), _.subtract(symbol.clone(), new Symbol(1)))), \r\n                            new Symbol(2)));\r\n                }\r\n                else \r\n                    retval = _.symfunction('acoth', arguments);\r\n                return retval;\r\n            }\r\n        };\r\n        this.trigh = trigh;\r\n        \r\n        //list all the supported operators\r\n        var operators = this.operators = {\r\n                '^' : new Operator('^', 'pow', 6, false, false),\r\n                '**' : new Operator('**', 'pow', 6, false, false),\r\n                '!!' : new Operator('!!', 'dfactorial',5, false, false, true, function(e) {\r\n                    return _.symfunction(DOUBLEFACTORIAL, [e]); //wrap it in a factorial function\r\n                }),\r\n                '!' : new Operator('!', 'factorial', 5, false, false, true, function(e) {\r\n                    return factorial(e); //wrap it in a factorial function\r\n                }),  \r\n                //done with crazy fix\r\n                '*' : new Operator('*', 'multiply', 4, true, false),\r\n                '/' : new Operator('/', 'divide', 4, true, false),\r\n                '%' : new Operator('%', 'percent', 4, true, false, true, function(e) {\r\n                    return _.percent(e);\r\n                }),\r\n                '%+' : new Operator('%+', 'percent_add', 2, true, false),\r\n                '%-' : new Operator('%-', 'percent_subtract', 3, true, false),\r\n                '+' : new Operator('+', 'add', 3, true, true, false, function(e) {\r\n                    return e;\r\n                }),\r\n                '-' : new Operator('-', 'subtract', 3, true, true, false, function(e) {\r\n                    return e.negate();\r\n                }),\r\n                //begin crazy fix ... :( TODO!!! revisit\r\n                '!+' : new Operator('!+', 'factadd', 3, true, true, false),\r\n                '!!+' : new Operator('!!+', 'dfactadd', 3, true, true, false),\r\n                '!-' : new Operator('!-', 'factsub', 3, true, true, false),\r\n                '!!-' : new Operator('!!-', 'dfactsub', 3, true, true, false),\r\n                '=' : new Operator('=', 'equals', 2, false, false),\r\n                '==' : new Operator('==', 'eq', 1, false, false),\r\n                '<' : new Operator('<', 'lt', 1, false, false),\r\n                '<=' : new Operator('<=', 'lte', 1, false, false),\r\n                '>' : new Operator('>', 'gt', 1, false, false),\r\n                '>=' : new Operator('>=', 'gte', 1, false, false),\r\n                ',' : new Operator(',', 'comma', 0, true, false)\r\n            },\r\n            //list of supported brackets\r\n            brackets = {\r\n                '(': new Bracket('(', 0, true, null, 'round'),\r\n                ')': new Bracket(')', 0, false, null, 'round'),\r\n                '[': new Bracket('[', 1, true, function() {\r\n                    var f = new Symbol('vector');\r\n                    f.is_function = true;\r\n                    return f;\r\n                }, 'square'),\r\n                ']': new Bracket(']', 1, false, null, 'square')\r\n            },\r\n            // Supported functions.\r\n            // Format: function_name: [mapped_function, number_of_parameters]\r\n            functions = this.functions = {\r\n                'cos'               : [ trig.cos, 1],\r\n                'sin'               : [ trig.sin, 1],\r\n                'tan'               : [ trig.tan, 1],\r\n                'sec'               : [ trig.sec, 1],\r\n                'csc'               : [ trig.csc, 1],\r\n                'cot'               : [ trig.cot, 1],\r\n                'acos'              : [ trig.acos, 1],\r\n                'asin'              : [ trig.asin, 1],\r\n                'atan'              : [ trig.atan, 1],\r\n                'asec'              : [ trig.asec, 1],\r\n                'acsc'              : [ trig.acsc, 1],\r\n                'acot'              : [ trig.acot, 1],\r\n                'atan2'             : [ trig.atan2, 2],\r\n                'acoth'             : [ trigh.acoth, 1],\r\n                'asech'             : [ trigh.asech, 1],\r\n                'acsch'             : [ trigh.acsch, 1],\r\n                'sinh'              : [ trigh.sinh, 1],\r\n                'cosh'              : [ trigh.cosh, 1],\r\n                'tanh'              : [ trigh.tanh, 1],\r\n                'asinh'             : [ trigh.asinh, 1],\r\n                'sech'              : [ trigh.sech, 1],\r\n                'csch'              : [ trigh.csch, 1],\r\n                'coth'              : [ trigh.coth, 1],\r\n                'acosh'             : [ trigh.acosh, 1],\r\n                'atanh'             : [ trigh.atanh, 1],\r\n                'log10'             : [ , 1],\r\n                'exp'               : [ , 1],\r\n                'min'               : [ min ,-1],\r\n                'max'               : [ max,-1],\r\n                'erf'               : [ , 1],\r\n                'floor'             : [ , 1],\r\n                'ceil'              : [ , 1],\r\n                'trunc'             : [ , 1],\r\n                'Si'                : [ , 1],\r\n                'step'              : [ , 1],\r\n                'rect'              : [ , 1],\r\n                'sinc'              : [ , 1],\r\n                'tri'               : [ , 1],\r\n                'sign'              : [ sign, 1],\r\n                'Ci'                : [ , 1],\r\n                'Ei'                : [ , 1],\r\n                'Shi'               : [ , 1],\r\n                'Chi'               : [ , 1],\r\n                'fib'               : [ , 1],\r\n                'fact'              : [factorial, 1],\r\n                'factorial'         : [factorial, 1],\r\n                'dfactorial'        : [ , 1],\r\n                'gamma_incomplete'  : [ , [1, 2]],\r\n                'round'             : [ round, [1, 2]],\r\n                'mod'               : [ mod, 2],\r\n                'pfactor'           : [ pfactor , 1],\r\n                'vector'            : [ vector, -1],\r\n                'matrix'            : [ matrix, -1],\r\n                'imatrix'           : [ imatrix, -1],\r\n                'parens'            : [ parens, -1],\r\n                'sqrt'              : [ sqrt, 1],\r\n                'nthroot'           : [ nthroot, 2],\r\n                'log'               : [ log , [1, 2]],\r\n                'expand'            : [ expand , 1],\r\n                'abs'               : [ abs , 1],\r\n                'invert'            : [ invert, 1],\r\n                'determinant'       : [ determinant, 1],\r\n                'size'              : [ size, 1],\r\n                'transpose'         : [ transpose, 1],\r\n                'dot'               : [ dot, 2],\r\n                'cross'             : [ cross, 2],\r\n                'vecget'            : [ vecget, 2],\r\n                'vecset'            : [ vecset, 3],\r\n                'matget'            : [ matget, 3],\r\n                'matset'            : [ matset, 4],\r\n                'matgetrow'         : [ matgetrow, 2],\r\n                'matsetrow'         : [ matsetrow, 3],\r\n                'matgetcol'         : [ matgetcol, 2],\r\n                'matsetcol'         : [ matsetcol, 3],\r\n                'IF'                : [ IF, 3],\r\n                //imaginary support\r\n                'realpart'          : [ realpart, 1],\r\n                'imagpart'          : [ imagpart, 1],\r\n                'conjugate'         : [ conjugate, 1],\r\n                'arg'               : [ arg, 1],\r\n                'polarform'         : [ polarform, 1],\r\n                'rectform'          : [ rectform, 1],\r\n                'sort'              : [ sort, [1, 2]],\r\n            };\r\n\r\n        this.error = err;\r\n        \r\n        //this function is used to comb through the function modules and find a function given its name\r\n        var findFunction = function(fname) {\r\n            var fmodules = Settings.FUNCTION_MODULES,\r\n                l = fmodules.length;\r\n            for(var i=0; i<l; i++) {\r\n                var fmodule = fmodules[i];\r\n                if(fname in fmodule)\r\n                    return fmodule[fname];\r\n            }\r\n            err('The function '+fname+' is undefined!');\r\n        };\r\n\r\n        var allNumbers = function(args) {\r\n            for(var i=0; i<args.length; i++)\r\n                if(args[i].group !== N)\r\n                    return false;\r\n            return true;\r\n        };\r\n        \r\n        var allConstants = function(args) {\r\n            for(var i=0; i<args.length; i++) {\r\n                if(args[i].isPi() || args[i].isE())\r\n                    continue;\r\n                if(!args[i].isConstant(true))\r\n                    return false;\r\n            }\r\n                    \r\n            return true;\r\n        };\r\n        \r\n        /**\r\n         * This method gives the ability to override operators with new methods.\r\n         * @param {String} which\r\n         * @param {Function} with_what\r\n         */\r\n        this.override = function(which, with_what) {\r\n            if(!bin[which]) bin[which] = [];\r\n            bin[which].push(this[which]);\r\n            this[which] = with_what;\r\n        };\r\n        \r\n        /**\r\n         * Restores a previously overridden operator\r\n         * @param {String} what\r\n         */\r\n        this.restore = function(what) {\r\n            if(this[what]) this[what] = bin[what].pop();\r\n        };\r\n        \r\n        /**\r\n         * This method is supposed to behave similarly to the override method but it does not override\r\n         * the existing function rather it only extends it\r\n         * @param {String} what\r\n         * @param {Function} with_what\r\n         * @param {boolean} force_call\r\n         */\r\n        this.extend = function(what, with_what, force_call) {\r\n            var _ = this,\r\n                extended = this[what];\r\n            if(typeof extended === 'function' && typeof with_what === 'function') {\r\n                var f = this[what];\r\n                this[what] = function(a, b) {\r\n                    if(isSymbol(a) && isSymbol(b) && !force_call) return f.call(_, a, b);\r\n                    else return with_what.call(_, a, b, f);\r\n                };\r\n            }\r\n        };\r\n        \r\n        /**\r\n         * Generates library's representation of a function. It's a fancy way of saying a symbol with \r\n         * a few extras. The most important thing is that that it gives a fname and \r\n         * an args property to the symbols in addition to changing its group to FN\r\n         * @param {String} fn_name\r\n         * @param {Array} params\r\n         * @returns {Symbol}\r\n         */\r\n        this.symfunction = function(fn_name, params) { \r\n            //call the proper function and return the result;\r\n            var f = new Symbol(fn_name);\r\n            f.group = FN;\r\n            if(typeof params === 'object')\r\n                params = [].slice.call(params);//ensure an array\r\n            f.args = params;\r\n            f.fname = fn_name === PARENTHESIS ? '' : fn_name;\r\n            f.updateHash();\r\n            return f;\r\n        };\r\n        \r\n        /**\r\n         * An internal function call for the Parser. This will either trigger a real \r\n         * function call if it can do so or just return a symbolic representation of the \r\n         * function using symfunction.\r\n         * @param {String} fn_name\r\n         * @param {Array} args\r\n         * @returns {Symbol}\r\n         */\r\n        this.callfunction = function(fn_name, args, allowed_args) { \r\n            var fn_settings = functions[fn_name];\r\n            \r\n            if(!fn_settings) \r\n                err('Nerdamer currently does not support the function '+fn_name);\r\n            \r\n            var num_allowed_args = fn_settings[1] || allowed_args, //get the number of allowed arguments\r\n                fn = fn_settings[0], //get the mapped function\r\n                retval;\r\n            //We want to be able to call apply on the arguments or create a symfunction. Both require\r\n            //an array so make sure to wrap the argument in an array.\r\n            if(!(args instanceof Array)) \r\n                args = args !== undefined ?  [args] : [];\r\n\r\n            if(num_allowed_args !== -1) {\r\n                var is_array = isArray(num_allowed_args),\r\n                    min_args = is_array ? num_allowed_args[0] : num_allowed_args,\r\n                    max_args = is_array ? num_allowed_args[1] : num_allowed_args,\r\n                    num_args = args.length;\r\n            \r\n                var error_msg = fn_name+' requires a {0} of {1} arguments. {2} provided!';\r\n                \r\n                if(num_args < min_args) err(format(error_msg, 'minimum', min_args, num_args));\r\n                if(num_args > max_args) err(format(error_msg, 'maximum', max_args, num_args));\r\n            }\r\n\r\n            /*\r\n             * The following are very important to the how nerdamer constructs functions!\r\n             * Assumption 1 - if fn is undefined then handling of the function is purely numeric. This\r\n             *     enables us to reuse Math, Math2, ..., any function from Settings.FUNCTIONS_MODULES entry\r\n             * Assumption 2 - if fn is defined then that function takes care of EVERYTHING including symbolics\r\n             * Assumption 3 - if the user calls symbolics on a function that returns a numeric value then\r\n             *     they are expecting a symbolic output.\r\n             */\r\n            if(!fn) { \r\n                //Remember assumption 1. No function defined so it MUST be numeric in nature\r\n                fn = findFunction(fn_name); \r\n                if(Settings.PARSE2NUMBER && allNumbers(args)) \r\n                    retval = bigConvert(fn.apply(fn, args));\r\n                else\r\n                    retval = _.symfunction(fn_name, args);\r\n            }\r\n            else { \r\n                //Remember assumption 2. The function is defined so it MUST handle all aspects including numeric values\r\n                retval = fn.apply(fn_settings[2], args);\r\n            }\r\n\r\n            return retval;\r\n        };\r\n        /**\r\n         * Build a regex based on the operators currently loaded. These operators are to be ignored when \r\n         * substituting spaces for multiplication\r\n         */\r\n        this.operator_filter_regex = (function() {\r\n            //we only want the operators which are singular since those are the ones\r\n            //that nerdamer uses anyway\r\n            var ostr = '^\\\\'+Object.keys(operators).filter(function(x) {\r\n                if(x.length === 1)\r\n                    return x;\r\n            }).join('\\\\');\r\n            //create a regex which captures all spaces between characters except those\r\n            //have an operator on one end\r\n            return new RegExp('(['+ostr+'])\\\\s+(['+ostr+'])');\r\n        })();\r\n        \r\n        /*\r\n         * This method parses the tree\r\n         * @param {String[]} rpn\r\n         * @returns {Symbol}\r\n         */\r\n        this.parseTree = function(rpn, subs) { \r\n            var q = []; // The container for parsed values\r\n            var l = rpn.length;\r\n            // begin parsing\r\n            for(var i=0; i<l; i++) {\r\n                var e = rpn[i];\r\n                if(e.is_prefix_operator || e.is_postfix) { \r\n                    q.push(e.operation(q.pop()));\r\n                    continue;\r\n                }\r\n                if(e.is_operator) {\r\n                    var b = q.pop(),\r\n                        a = q.pop();\r\n                    if(isArray(b)) //misread function\r\n                        _.error('Unrecognized function \"'+a.value+'\"');\r\n                    if(typeof a === 'undefined' && !e.is_postfix)\r\n                        _.error(e+' is not a valid postfix opertor');\r\n                    q.push(this[e.fn](a, b));\r\n                }\r\n                else if(e.value in functions) { \r\n                    q.push(_.callfunction(e.value, q.pop()));\r\n                }\r\n                else { \r\n                    // Blank denotes a beginning of a scope with a prefix operator so all we have to do is \r\n                    // convert it to a zero\r\n                    if(e === '') {\r\n                        q.push(new Symbol(0));\r\n                    }\r\n                    else {\r\n                        var unsubbed = e;\r\n                        // make substitutions\r\n                        //first sub in aliases\r\n                        if(e in Settings.ALIASES)\r\n                            e = _.parse(Settings.ALIASES[e]);\r\n                        //constants take higher priority\r\n                        if(e in constants)\r\n                            e = new Symbol(constants[e]);\r\n                        //next subs\r\n                        else if(e in subs) {\r\n                            e = subs[e].clone();\r\n                        }\r\n                        else if(e in VARS) {\r\n                            e = VARS[e].clone();\r\n                        }\r\n                        e.unsubbed = unsubbed;\r\n                        q.push(e);\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return q[0] || new Symbol(0);\r\n        };\r\n        \r\n        /**\r\n         * This is the method that triggers the parsing of the string. It generates a parse tree but processes \r\n         * it right away. The operator functions are called when their respective operators are reached. For instance\r\n         * + with cause this.add to be called with the left and right hand values. It works by walking along each \r\n         * character of the string and placing the operators on the stack and values on the output. When an operator\r\n         * having a lower order than the last is reached then the stack is processed from the last operator on the \r\n         * stack.\r\n         * @param {String} expression_string\r\n         * @param {Object} substitutions\r\n         * @returns {Symbol}\r\n         */\r\n        this.parse = function(expression_string, substitutions, tree) { \r\n            //prepare the substitutions\r\n            if(substitutions) {\r\n                for(var x in substitutions)\r\n                    substitutions[x] = _.parse(substitutions[x]);\r\n                subs = substitutions;\r\n            }\r\n            else\r\n                subs = {};\r\n\r\n            //link e and pi\r\n            if(Settings.PARSE2NUMBER) {\r\n                subs.e = new Symbol(Math.E);\r\n                subs.pi = new Symbol(Math.PI);\r\n            }\r\n\r\n            /*\r\n             * Since variables cannot start with a number, the assumption is made that when this occurs the\r\n             * user intents for this to be a coefficient. The multiplication symbol in then added. The same goes for \r\n             * a side-by-side close and open parenthesis\r\n             */\r\n            var e = String(expression_string), match;\r\n            \r\n            //add support for spaces between variables\r\n            while(true) { \r\n                match = this.operator_filter_regex.exec(e);\r\n                if(!match)\r\n                    break;\r\n                try {\r\n                    var a = match[1],\r\n                        b = match[2];\r\n                    validateName(a);\r\n                    validateName(b);\r\n                    e = e.replace(match[0], a+'*'+b);\r\n                }\r\n                catch(e) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            e = e.split(' ').join('')//strip empty spaces\r\n            //replace scientific numbers\r\n            .replace(/\\d+\\.*\\d*e\\+?\\-?\\d+/gi, function(x) {\r\n                return scientificToDecimal(x);\r\n            })\r\n            //allow omission of multiplication after coefficients\r\n            .replace(/([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi, function() {\r\n                var str = arguments[4],\r\n                    group1 = arguments[1],\r\n                    group2 = arguments[2],\r\n                    start = arguments[3],\r\n                    first = str.charAt(start),\r\n                    before = '',\r\n                    d = '*';\r\n                if(!first.match(/[\\+\\-\\/\\*]/)) before = str.charAt(start-1);\r\n                if(before.match(/[a-z]/i)) d = '';\r\n                return group1+d+group2;\r\n            })\r\n            .replace(/([a-z0-9_]+)/gi, function(match, a) {\r\n                if(Settings.USE_MULTICHARACTER_VARS === false && !(a in functions)) {\r\n                    if(!isNaN(a))\r\n                        return a;\r\n                    return a.split('').join('*');\r\n                }\r\n                return a;\r\n            })\r\n            //allow omission of multiplication sign between brackets\r\n            .replace( /\\)\\(/g, ')*(' ) || '0';\r\n            //replace x(x+a) with x*(x+a)\r\n            while(true) {\r\n                var e_org = e; //store the original\r\n                e = e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi, function(match, a, b, c, d) {\r\n                    var g1 = a || c,\r\n                        g2 = b || d;\r\n                    if(g1 in functions) //create a passthrough for functions\r\n                        return g1+g2;\r\n                    return g1+'*'+g2;\r\n                });\r\n                //if the original equals the replace we're done\r\n                if(e_org === e) \r\n                    break;\r\n            }\r\n            var l = e.length, //the length of the string\r\n                output = [], //the output array. This is what's returned\r\n                stack = [], //the operator stack\r\n                last_pos = 0, //the location of last operator encountered\r\n                open_brackets = [0, 0], //a counter for the open brackets\r\n                prefix_cache = [],\r\n                new_scope = true; //signal if we're in a new scope or not\r\n            // This method gets and inserts the token on output as the name implies\r\n            var get_and_insert_token = function(to_pos) {\r\n                if(to_pos !== last_pos) { \r\n                    token = new Symbol(e.substring(last_pos, to_pos)); \r\n                    output.push(token);\r\n                    //once we find out first token we are no longer in a new scope so flip\r\n                    //the flag\r\n                    new_scope = false; \r\n                }\r\n            };  \r\n            \r\n            var verify_prefix_operator = function(operator) {\r\n                if(!operator.is_prefix)\r\n                    err(operator+' is not a valid prefix operator');\r\n            };\r\n            \r\n            var resolve_prefix = function(prefix1, prefix2) {\r\n                if(!prefix2)\r\n                    return prefix1;\r\n                if(prefix1.val === prefix2.val)\r\n                    return new Prefix(operators['+']);\r\n                return new Prefix(operators['-']);\r\n            };\r\n            \r\n            var insert_prefix = function(prefix) {\r\n                var sl = stack.length;\r\n                if(sl && stack[sl-1].is_prefix_operator) \r\n                    stack.push(resolve_prefix(prefix, stack.pop()));\r\n                stack.push(prefix);   \r\n            };\r\n            \r\n            var collapse_prefix_cache = function(to_output) {\r\n                if(prefix_cache.length) {\r\n                    var prefix = prefix_cache.pop();\r\n                    while(prefix_cache.length)\r\n                        prefix = resolve_prefix(prefix, prefix_cache.pop());\r\n                    if(to_output)\r\n                        output.push(prefix);\r\n                    else\r\n                        stack.push(prefix);\r\n                }\r\n            };\r\n            \r\n            /*\r\n             * We define the operator as anything that performs any form of operation. A bracket as any object that defines\r\n             * a scope and a token as anything in between two operators. This enables us to have variables of more than one letter.\r\n             * This function is a modified version of the Shunting-Yard algorithm to enable variable names, and compound operators.\r\n             * operators are defined in the operator object. We walk the string and check every character. If an operator is encountered\r\n             * then we mark it's location. We find the next operator and get the token between. \r\n             */\r\n            var token, operator, start = 0, i=0;\r\n            // start the generation of the tree\r\n            for(var i=start; i<l; i++) {\r\n                //the character\r\n                var ch = e.charAt(i); \r\n                if(ch in operators) { \r\n                    // We previously defined the token to be the anything between two operators and since we an operator\r\n                    //we can grab the token\r\n                    get_and_insert_token(i); \r\n                    //mark the current position\r\n                    var c = i; \r\n                    /*\r\n                     * In order to support compound operators we assume that the following might be operator as well. We keep walking the string\r\n                     * until we encounter a character which is no longer an operator. We define that entire sub-string an operator\r\n                     */\r\n                    while(e.charAt(i+1) in operators)\r\n                        i++;\r\n\r\n                    var end_operator = i+1;\r\n                    //the probable operator will be the difference between c and i;\r\n                    var pr_operator = e.substring(c, end_operator); \r\n                    /* \r\n                     * We now have to see if this operator is actually an operator or a combination of an operator and prefix operators \r\n                     * e.g. 3*-+-8 or x^-3. To determine this we knock off an operator one at a time until we find the matching operator.\r\n                     * For instance if we have an operator -= and we get -=-- we knock of a minus from the back until we reach -= which will \r\n                     * register as a defined operator since we defined it as such\r\n                     */\r\n                    while(!(pr_operator in operators)) { \r\n                        var l2 = pr_operator.length,\r\n                            end = l2-1,\r\n                            prefix = operators[pr_operator.charAt(end)];\r\n                        pr_operator = pr_operator.substring(0, end);\r\n                        //make sure it's not a postfix operator that we're dealing with\r\n                        try {\r\n                            //verify that it's not a prefix operator\r\n                            verify_prefix_operator(prefix);\r\n                            //add the prefix to the stack\r\n                            prefix_cache.push(new Prefix(prefix)); \r\n                        }\r\n                        catch(e) {\r\n                            //check if we're dealing with postfix operators. \r\n                            //Rule: compound postfix operators must be a composition of postfix operators\r\n                            var prl = pr_operator.length, o;\r\n                            for(var j=0; j<prl; j++) {\r\n                                o = operators[pr_operator.charAt(j)];\r\n                                if(!o|| o && !o.is_postfix)\r\n                                    err(e.message);\r\n                            }\r\n\r\n                            //at this point we know that we have only postfix operators but they are parsed left to right\r\n                            var rem = '';\r\n                            do {\r\n                                if(pr_operator === '')\r\n                                    break; //we're done since the entire operator has been consumed\r\n                                if(pr_operator in operators) {\r\n                                    output.push(operators[pr_operator]);\r\n                                    pr_operator = rem;\r\n                                    rem = '';\r\n                                }\r\n                                else {\r\n                                    var end = pr_operator.length-1;\r\n                                    rem += pr_operator.charAt(end);\r\n                                    pr_operator = pr_operator.substring(0, end);\r\n                                } \r\n                            }\r\n                            while(true)\r\n                            //the actual operator is now the one we assumed to be a prefix earlier. I need to really\r\n                            //pick better variable names :-/\r\n                            pr_operator = prefix.val;\r\n                            break;\r\n                        }\r\n                    }\r\n                    // we now have the operator\r\n                    operator = operators[pr_operator];\r\n                    \r\n                    // we mark where we find the last operator so we know where the next token begins\r\n                    last_pos = end_operator; \r\n                    while(true) { \r\n                        var sl = stack.length,\r\n                            los = stack[sl-1];\r\n                        //skip prefix \r\n                        while(los !== undefined && los.is_prefix_operator)  {\r\n                            los = stack[--sl-1];\r\n                        }\r\n                            \r\n                        if(sl === 0 || !(operator.left_assoc && operator.precedence <= los.precedence \r\n                            || !operator.left_assoc && operator.precedence < los.precedence))\r\n                            break; //nothing to do\r\n                        output.push(stack.pop());\r\n                    }\r\n\r\n                    // If we're in a new scope then we're dealing with a prefix operator\r\n                    if(new_scope) { \r\n                        /*\r\n                         * There is literally no way to differentiate between a malformed expression and a properly formed one if there is no gap left \r\n                         * at the beginning of the scope. This is best illustrated. Take the expression 3+7- in RPN it becomes 3,7,+,-\r\n                         * Take the expression -3+7 in RPN this become 3,7,+,- as well. The difference is that we tag the minus as\r\n                         * a prefix in the properly formed expression. Problem solved! But wait. Imagine we have no gaps at the beginning\r\n                         * of the scope let's say -(3+7). With no gaps this again becomes 3,7,+,- with no way to differentiate\r\n                         * between -3+7 and -(3+7) unless the second one is written as 3,7,+, ,- where the gap denotes the end of the scope\r\n                         */ \r\n                        verify_prefix_operator(operator);\r\n                        var prefix = new Prefix(operator); \r\n                        //collapse the prefix cache\r\n                        while(prefix_cache.length)\r\n                            prefix = resolve_prefix(prefix, prefix_cache.pop());\r\n                        insert_prefix(prefix);\r\n                    }\r\n                    else { \r\n                        //if there's already a prefix on the stack then bring it down\r\n                        var sl = stack.length;\r\n                        if(sl && stack[sl-1].is_prefix_operator && operator.left_assoc) \r\n                            //it's safe to move the prefix to output since it's at the beginning of a scope\r\n                            output.push(stack.pop());\r\n\r\n                        stack.push(operator);\r\n                        //resolve the prefixes\r\n                        collapse_prefix_cache();\r\n                    }\r\n                        \r\n                }\r\n                else if(ch in brackets) {\r\n                    var bracket = brackets[ch]; \r\n                    if(bracket.open) { \r\n                        //mark a bracket as being opened\r\n                        open_brackets[bracket.bracket_id]++;\r\n                        //check if we're dealing with a function\r\n                        if(last_pos !== i) {\r\n                            var f = new Symbol(e.substring(last_pos, i));\r\n                            // assume it's a function. Since a string is just an object, why not use it\r\n                            f.is_function = true;\r\n                            stack.push(f);\r\n                        }   \r\n                        if(bracket.fn)\r\n                            stack.push(bracket.fn());\r\n                        // We're in a new scope so signal so\r\n                        new_scope = true;\r\n                        stack.push(bracket);\r\n                        //get all the prefixes at the beginning of the scope\r\n                        last_pos = i+1; //move past the bracket\r\n                    }\r\n                    else {\r\n                        //close the open bracket\r\n                        open_brackets[bracket.bracket_id]--;\r\n                        // We proceed to pop the entire stack to output this this signals the end of a scope. The first thing is to get the \r\n                        // the prefixes and then the token at the end of this scope.\r\n                        // get the token\r\n                        get_and_insert_token(i);\r\n                        // And then keep popping the stack until we reach a bracket\r\n                        while(true) {\r\n                            var entry = stack.pop();\r\n                            if(entry === undefined)\r\n                                err(\"Missing open bracket for bracket '\"+bracket+\"'!\");\r\n                            //we found the matching bracket so our search is over\r\n                            if(entry.bracket_id === bracket.bracket_id)\r\n                                break; // We discard the closing bracket\r\n                            else \r\n                                output.push(entry);\r\n                        }\r\n                        \r\n                        var sl = stack.length;\r\n                        //move the function to output\r\n                        if(sl && stack[sl-1].is_function)\r\n                            output.push(stack.pop());\r\n                        \r\n                        last_pos = i+1; //move past the bracket\r\n                    }\r\n                }\r\n            }\r\n            \r\n            //get the last token at the end of the string\r\n            get_and_insert_token(l);\r\n            //collapse the stack to output\r\n            while(stack.length)\r\n                output.push(stack.pop());\r\n\r\n            //check parity\r\n            for(var i=0; i<open_brackets.length; i++) \r\n                if(open_brackets[i] > 0) {\r\n                    var brkt;\r\n                    for(bracket in brackets)\r\n                        if(brackets[bracket].bracket_id === i && !brackets[bracket].open)\r\n                            brkt = brackets[bracket];\r\n                    err('Missing close bracket. Expected \"'+brkt+'\"!');\r\n                }\r\n                   \r\n            if(tree)\r\n                return output;\r\n            \r\n            return this.parseTree(output, subs);\r\n\r\n        };\r\n        \r\n        /**\r\n         * Reads a string into an array of Symbols and operators\r\n         * @param {Symbol} symbol\r\n         * @returns {Array}\r\n         */\r\n        this.toObject = function(expression_string) {\r\n            var output = [[]], //the first one is the parent\r\n                e = expression_string.split(' ').join(''), //remove spaces\r\n                func_stack = [],\r\n                lp = 0,\r\n                target = output[0],\r\n                token;\r\n            var push = function(token) {\r\n                if(token !== '')\r\n                    target.push(new Symbol(token));\r\n            };\r\n            //start the conversion\r\n            for(var i=0, l=e.length; i<l; i++) {\r\n                var ch = e.charAt(i);\r\n                if(ch in operators) {\r\n                    token = e.substring(lp, i);\r\n                    push(token);\r\n                    target.push(ch);\r\n                    lp = i+1;\r\n                }\r\n                else if(ch in brackets) { \r\n                    var bracket = brackets[ch];\r\n                    if(bracket.open) {\r\n                        //we may be dealing with a function so make \r\n                        func_stack.push(e.substring(lp, i));\r\n                        target = []; //start a new scope\r\n                        output.push(target); //add it to the chain\r\n                        lp = i+1;    \r\n                    }\r\n                    else {\r\n                        //we have a close bracket\r\n                        token = e.substring(lp, i); //grab the token\r\n                        push(token);\r\n                        var o = output.pop(), //close the scope\r\n                            f = func_stack.pop(), //grab the matching function\r\n                            r;\r\n                        //is it a function?\r\n                        if(f in functions) \r\n                            r = _.symfunction(f, o); \r\n                        else if(f === '') {\r\n                            r = o;\r\n                            r.type = bracket.type;\r\n                        }\r\n                        else \r\n                            r = f;\r\n                        //point to the correct target\r\n                        target = output[output.length-1];\r\n                        target.push(r);\r\n                        lp = i+1; \r\n                    }\r\n                }\r\n            }\r\n            \r\n            push(e.substring(lp, i)); //insert the last token\r\n\r\n            return output[0];\r\n        };\r\n        \r\n        var getDx = function(arr) {\r\n            var dx = [], e;\r\n            for(var i=0, l=arr.length; i<l; i++) {\r\n                e = arr.pop();\r\n                if(e === ',')\r\n                    return dx;\r\n                dx.push(e);\r\n            }\r\n        };\r\n\r\n        var chunkAtCommas = function(arr){\r\n            var j, k = 0, chunks = [[]];\r\n            for (var j = 0, l=arr.length; j<l; j++){\r\n                if (arr[j] === ',') {\r\n                    k++;\r\n                    chunks[k] = [];\r\n                } else {\r\n                    chunks[k].push(arr[j]);\r\n                }\r\n            }\r\n            return chunks;\r\n        };\r\n        \r\n        var rem_brackets = function(str) {\r\n            return str.replace(/^\\\\left\\((.+)\\\\right\\)$/g, function(str, a) {\r\n                if(a) return a;\r\n                return str;\r\n            });\r\n        };\r\n        \r\n        this.toTeX = function(expression_or_obj) { \r\n            var obj = typeof expression_or_obj === 'string' ? this.toObject(expression_or_obj) : expression_or_obj,\r\n                TeX = [];\r\n            \r\n            if(isArray(obj)) { \r\n                var nobj = [], a, b, c;\r\n                //first handle ^\r\n                for(var i=0; i<obj.length; i++) {\r\n                    a = obj[i];\r\n                    \r\n                    if(obj[i+1] === '^') {\r\n                        b = obj[i+2];\r\n                        nobj.push(LaTeX.braces(this.toTeX([a]))+'^'+LaTeX.braces(this.toTeX([b])));\r\n                        i+=2;\r\n                    }\r\n                    else\r\n                        nobj.push(a);\r\n                }\r\n                obj = nobj;\r\n            }\r\n\r\n            \r\n            for(var i=0, l=obj.length; i<l; i++) {\r\n                var e = obj[i];\r\n                //convert * to cdot\r\n                if(e === '*')\r\n                    e = '\\\\cdot';\r\n                \r\n                if(isSymbol(e)) {\r\n                    if(e.group === FN) {\r\n                        var fname = e.fname, f;\r\n\r\n                        if(fname === SQRT) \r\n                            f = '\\\\sqrt'+LaTeX.braces(this.toTeX(e.args));\r\n                        else if(fname === ABS) \r\n                            f = LaTeX.brackets(this.toTeX(e.args), 'abs');\r\n                        else if(fname === PARENTHESIS) \r\n                            f = LaTeX.brackets(this.toTeX(e.args), 'parens');\r\n                        else if (fname === 'log10')\r\n                            f = '\\\\log_{10}\\\\left( ' + this.toTeX(e.args) + '\\\\right)';\r\n                        else if(fname === 'integrate') {\r\n                            /* Retrive [Expression, x] */\r\n                            var chunks = chunkAtCommas(e.args);\r\n                            /* Build TeX */\r\n                            var expr = LaTeX.braces(this.toTeX(chunks[0])),\r\n                                dx = this.toTeX(chunks[1]);\r\n                            f = '\\\\int ' + expr + '\\\\, d' + dx;\r\n                        }\r\n                        else if (fname === 'defint') {\r\n                            var chunks = chunkAtCommas(e.args),\r\n                                expr = LaTeX.braces(this.toTeX(chunks[0])),\r\n                                dx = this.toTeX(chunks[1]),\r\n                                lb = this.toTeX(chunks[2]),\r\n                                ub = this.toTeX(chunks[3]);\r\n                            f = '\\\\int\\\\limits_{'+lb+'}^{'+ub+'} '+expr+'\\\\, d'+dx;\r\n\r\n                        }\r\n                        else if(fname === 'diff') {\r\n                            var chunks = chunkAtCommas(e.args);\r\n                            var dx = '', expr = LaTeX.braces(this.toTeX(chunks[0]));\r\n                            /* Handle cases: one argument provided, we need to guess the variable, and assume n = 1 */\r\n                            if (chunks.length == 1){\r\n                                var vars = [];\r\n                                for (j = 0; j < chunks[0].length; j++){\r\n                                    if (chunks[0][j].group === 3) {\r\n                                        vars.push(chunks[0][j].value);\r\n                                    }\r\n                                }\r\n                                vars = vars.sort();\r\n                                dx = vars.length > 0 ? ('\\\\frac{d}{d ' + vars[0] + '}') : '\\\\frac{d}{d x}';\r\n                            }\r\n                            /* If two arguments, we have expression and variable, we assume n = 1 */ \r\n                            else if (chunks.length == 2){\r\n                                dx = '\\\\frac{d}{d ' + chunks[1] + '}';\r\n                            }\r\n                            /* If we have more than 2 arguments, we assume we've got everything */\r\n                            else {\r\n                                dx = '\\\\frac{d^{' + chunks[2] + '}}{d ' + this.toTeX(chunks[1]) + '^{' + chunks[2] + '}}';\r\n                            }\r\n\r\n                            f = dx + '\\\\left(' + expr + '\\\\right)';\r\n\r\n                        }\r\n                        else if (fname === 'sum' || fname === 'product') {\r\n                            // Split e.args into 4 parts based on locations of , symbols.\r\n                            var argSplit = [[], [], [], []], j = 0, i;\r\n                            for (i = 0; i < e.args.length; i++){\r\n                                if (e.args[i] === ','){\r\n                                    j++;\r\n                                    continue;\r\n                                } \r\n                                argSplit[j].push(e.args[i]);\r\n                            }\r\n                            // Then build TeX string.\r\n                            f = (fname==='sum'?'\\\\sum_':'\\\\prod_')+LaTeX.braces(this.toTeX(argSplit[1])+' = '+this.toTeX(argSplit[2]));\r\n                            f += '^'+LaTeX.braces(this.toTeX(argSplit[3])) + LaTeX.braces(this.toTeX(argSplit[0]));\r\n                        }\r\n                        else if(fname === FACTORIAL || fname === DOUBLEFACTORIAL) \r\n                            f = this.toTeX(e.args) + (fname === FACTORIAL ? '!' : '!!');\r\n                        else  {\r\n                            f = LaTeX.latex(e);\r\n                            //f = '\\\\mathrm'+LaTeX.braces(fname.replace(/_/g, '\\\\_')) + LaTeX.brackets(this.toTeX(e.args), 'parens');\r\n                        }\r\n                            \r\n                        TeX.push(f);\r\n                    } \r\n                    else\r\n                        TeX.push(LaTeX.latex(e));\r\n                }\r\n                else if(isArray(e)) { \r\n                    TeX.push(LaTeX.brackets(this.toTeX(e)));\r\n                }\r\n                else {\r\n                    if(e === '/') \r\n                        TeX.push(LaTeX.frac(rem_brackets(TeX.pop()), rem_brackets(this.toTeX([obj[++i]]))));\r\n                    else\r\n                        TeX.push(e);\r\n                }\r\n            }\r\n            return TeX.join(' ');\r\n        };\r\n\r\n        /////////// ********** FUNCTIONS ********** ///////////\r\n        /* Although parens is not a \"real\" function it is important in some cases when the \r\n         * symbol must carry parenthesis. Once set you don't have to worry about it anymore\r\n         * as the parser will get rid of it at the first opportunity\r\n         */\r\n        function parens(symbol) {\r\n            if(Settings.PARSE2NUMBER) {\r\n                return symbol;\r\n            }\r\n            return _.symfunction('parens', [symbol]);\r\n        }\r\n        \r\n        function abs(symbol) { \r\n            if(symbol.multiplier.lessThan(0)) symbol.multiplier.negate();\r\n            if(symbol.isImaginary()) {\r\n                var re = symbol.realpart();\r\n                var im = symbol.imagpart();\r\n                if(re.isConstant() && im.isConstant())\r\n                    return sqrt(_.add(_.pow(re, new Symbol(2)), _.pow(im, new Symbol(2))));\r\n            }\r\n            else if(isNumericSymbol(symbol) || even(symbol.power)) {\r\n                return symbol;\r\n            }\r\n            if(symbol.isComposite()) {\r\n                var ms = [];\r\n                symbol.each(function(x) {\r\n                    ms.push(x.multiplier);\r\n                });\r\n                var gcd = Math2.QGCD.apply(null, ms);\r\n                if(gcd.lessThan(0)) {\r\n                    symbol.multiplier = symbol.multiplier.multiply(new Frac(-1));\r\n                    symbol.distributeMultiplier();\r\n                }\r\n            }\r\n            return _.symfunction(ABS, [symbol]);\r\n        }\r\n        /**\r\n         * The factorial functions\r\n         * @param {Symbol} symbol\r\n         * @return {Symbol}\r\n         */\r\n        function factorial(symbol) { \r\n            var retval;\r\n            if(Settings.PARSE2NUMBER && symbol.isConstant()) {\r\n                if(isInt(symbol)) {\r\n                    retval = Math2.bigfactorial(symbol);\r\n                }\r\n                else {\r\n                    retval = Math2.gamma(symbol.multiplier.add(new Frac(1)).toDecimal());\r\n                }\r\n                \r\n                retval = bigConvert(retval);\r\n                return retval;\r\n            }\r\n            else if(symbol.equals(1/2))\r\n                return _.parse('sqrt(pi)/2');\r\n            return _.symfunction(FACTORIAL, [symbol]);\r\n        };\r\n        /**\r\n         * The mod function\r\n         * @param {Symbol} symbol1\r\n         * @param {Symbol} symbol2\r\n         * @returns {Symbol}\r\n         */\r\n        function mod(symbol1, symbol2) {\r\n            if(symbol1.isConstant() && symbol2.isConstant()) {\r\n                var retval = new Symbol(1);\r\n                retval.multiplier = retval.multiplier.multiply(symbol1.multiplier.mod(symbol2.multiplier));\r\n                return retval;\r\n            }\r\n            //try to see if division has remainder of zero\r\n            var r = _.divide(symbol1.clone(), symbol2.clone());\r\n            if(isInt(r))\r\n                return new Symbol(0);\r\n            return _.symfunction('mod', [symbol1, symbol2]);\r\n        }\r\n        /**\r\n         * A branghing function\r\n         * @param {Boolean} condition\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        function IF(condition, a, b) { \r\n            if(typeof condition !== 'boolean')\r\n                if(isNumericSymbol(condition))\r\n                    condition = !!Number(condition);\r\n            if(condition) \r\n                return a;\r\n            return b;\r\n        }\r\n\r\n        /**\r\n         * The square root function\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function sqrt(symbol) { \r\n            if(symbol.fname === '' && symbol.power.equals(1))\r\n                symbol = symbol.args[0];\r\n            \r\n            if(Settings.PARSE2NUMBER) {\r\n                if(symbol.isConstant() && !symbol.multiplier.lessThan(0)) {\r\n                    return new Symbol(Math.sqrt(symbol.multiplier.toDecimal()));\r\n                }\r\n                else if(symbol.isImaginary()) {\r\n                    return complex.sqrt(symbol);\r\n                }\r\n            } \r\n\r\n            var img, retval, \r\n                isConstant = symbol.isConstant();\r\n        \r\n            if(symbol.group === CB && symbol.isLinear()) {\r\n                var m = sqrt(Symbol(symbol.multiplier));\r\n                for(var s in symbol.symbols) {\r\n                    var x = symbol.symbols[s];\r\n                    m = _.multiply(m, sqrt(x));\r\n                }\r\n\r\n                retval = m;\r\n            }\r\n            //if the symbol is already sqrt then it's that symbol^(1/4) and we can unwrap it\r\n            else if(symbol.fname === SQRT) { \r\n                var s = symbol.args[0];\r\n                var ms = symbol.multiplier;\r\n                s.setPower(symbol.power.multiply(new Frac(0.25)));\r\n                retval = s;\r\n                //grab the multiplier\r\n                if(!ms.equals(1))\r\n                    retval = _.multiply(sqrt(_.parse(ms)), retval);\r\n            }\r\n            //if the symbol is a fraction then we don't keep can unwrap it. For instance\r\n            //no need to keep sqrt(x^(1/3))\r\n            else if(!symbol.power.isInteger()) { \r\n                symbol.setPower(symbol.power.multiply(new Frac(0.5)));\r\n                retval = symbol;\r\n            }\r\n            else { \r\n                //if the symbols is imagary then we place in the imaginary part. We'll return it \r\n                //as a product\r\n                if(isConstant && symbol.multiplier.lessThan(0)) {\r\n                    img = Symbol.imaginary();\r\n                    symbol.multiplier = symbol.multiplier.abs();\r\n                }\r\n\r\n                var q = symbol.multiplier.toDecimal(),\r\n                    qa = Math.abs(q),\r\n                    t = Math.sqrt(qa);\r\n\r\n                var m;\r\n                //it's a perfect square so take the square\r\n                if(isInt(t)) { \r\n                    m = new Symbol(t);\r\n                }\r\n                else if(isInt(q)) { \r\n                    var factors = Math2.ifactor(q);\r\n                    var tw = 1;\r\n                    for(var x in factors) {\r\n                        var n = factors[x],\r\n                            nn = (n - (n%2)); //get out the whole numbers\r\n                        if(nn) { //if there is a whole number ...\r\n                            var w = Math.pow(x, nn);\r\n                            tw *= Math.pow(x, nn/2); //add to total wholes\r\n                            q /= w; //reduce the number by the wholes\r\n                        }\r\n                    }\r\n                    m = _.multiply(_.symfunction(SQRT, [new Symbol(q)]), new Symbol(tw));\r\n                }\r\n                else {\r\n                    var n = symbol.multiplier.num.toString(),\r\n                        d = symbol.multiplier.den.toString(),\r\n                        sqrtN = Math.sqrt(n),\r\n                        sqrtD = Math.sqrt(d);\r\n                \r\n                    m = _.multiply(\r\n                            n === '1' ? new Symbol(1) : isInt(sqrtN) ? new Symbol(sqrtN) : _.symfunction(SQRT, [new Symbol(n)]), \r\n                            d === '1' ? new Symbol(1) : isInt(sqrtD) ? new Symbol(sqrtD).invert() : _.symfunction(SQRT, [new Symbol(d)]).invert()\r\n                    );\r\n                }\r\n\r\n                \r\n                //strip the multiplier since we already took the sqrt\r\n                symbol = symbol.toUnitMultiplier(true);\r\n                //if the symbol is one just return one and not the sqrt function\r\n                if(symbol.isOne()) {\r\n                    retval = symbol;\r\n                }\r\n                else if(even(symbol.power.toString())) { \r\n                    //just raise it to the 1/2\r\n                    retval = _.pow(symbol.clone(), new Symbol(0.5));\r\n                }\r\n                else { \r\n                    retval = _.symfunction(SQRT, [symbol]);\r\n                }\r\n\r\n                if(m) retval = _.multiply(m, retval);\r\n\r\n                if(img) retval = _.multiply(img, retval);\r\n            }\r\n\r\n            return retval;\r\n        }\r\n        this.sqrt = sqrt;\r\n        /**\r\n         * \r\n         * @param {Symbol} num - the number being raised\r\n         * @param {Symbol} p - the exponent\r\n         * @param {type} prec - the precision wanted\r\n         * @param {bool} asbig - true if a bigDecimal is wanted\r\n         * @returns {Symbol}\r\n         */\r\n        //TODO: this method needs serious optimization\r\n        function nthroot(num, p, prec, asbig) { \r\n            if(typeof asbig === 'undefined') \r\n                asbig = true;\r\n            prec = prec || 25;\r\n            if(!isSymbol(p))\r\n                p = _.parse(p);\r\n            if(isInt(num) && p.isConstant()) { \r\n                var sign = num.sign(),\r\n                    x;\r\n                num = abs(num); //remove the sign\r\n                var idx = num+'-'+p;\r\n                if(idx in Settings.CACHE.roots) {\r\n                    x = new bigInt(Settings.CACHE.roots[idx]);\r\n                    if(!even(p))\r\n                        x = x.multiply(sign);\r\n                }\r\n                else {\r\n                    if(num < 18446744073709551616) //2^64\r\n                        x = Frac.create(Math.pow(num, 1/p));\r\n                    else\r\n                        x = Math2.nthroot(num, p);\r\n                }\r\n                if(isInt(x) || Settings.PARSE2NUMBER) {\r\n                    if(asbig)\r\n                        return new Symbol(x);\r\n                    return new Symbol(x.toDecimal(prec));\r\n                }\r\n            }\r\n            \r\n            if(Number(p) === 2)\r\n                return _.sqrt(num);\r\n            \r\n            return _.symfunction('nthroot', arguments);\r\n        }\r\n          \r\n        this.nthroot = nthroot;\r\n        \r\n        function pfactor(symbol) { \r\n            //Fix issue #298\r\n            if(symbol.equals(Math.PI))\r\n                return new Symbol(Math.PI);\r\n            //evaluate the symbol to merge constants\r\n            symbol = evaluate(symbol.clone());\r\n            \r\n            \r\n            if(symbol.isConstant()) {\r\n                var retval = new Symbol(1);\r\n                var m = symbol.toString();\r\n                if(isInt(m)) { \r\n                    var factors = Math2.ifactor(m);\r\n                    for(var factor in factors) {\r\n                        var p = factors[factor];\r\n                        retval = _.multiply(retval, _.symfunction('parens', [new Symbol(factor).setPower(new Frac(p))]));\r\n                    }\r\n                }\r\n                else {\r\n                    var n = pfactor(new Symbol(symbol.multiplier.num));\r\n                    var d = pfactor(new Symbol(symbol.multiplier.den));\r\n                    retval = _.multiply(_.symfunction('parens', [n]), _.symfunction('parens', [d]).invert());\r\n                }\r\n            }\r\n            else \r\n                retval = _.symfunction('pfactor', arguments);\r\n            return retval;\r\n        }\r\n        \r\n        /**\r\n         * Get's the real part of a complex number. Return number if real\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function realpart(symbol) {\r\n            return symbol.realpart();\r\n        }\r\n        \r\n        /**\r\n         * Get's the imaginary part of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function imagpart(symbol) {\r\n            return symbol.imagpart();\r\n        }\r\n        \r\n        /**\r\n         * Computes the conjugate of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function conjugate(symbol) {\r\n            var re = symbol.realpart();\r\n            var im = symbol.imagpart();\r\n            return _.add(re, _.multiply(im.negate(), Symbol.imaginary()));\r\n        }\r\n        \r\n        /**\r\n         * Returns the arugment of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function arg(symbol) {\r\n            var re = symbol.realpart(); \r\n            var im = symbol.imagpart(); \r\n            if(re.isConstant() && im.isConstant())\r\n                return new Symbol(Math.atan2(im, re));\r\n            return _.symfunction('atan2', [im, re]);\r\n        }\r\n        \r\n        /**\r\n         * Returns the polarform of a complex number\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function polarform(symbol) {\r\n            var p, r, e, theta;\r\n            p = Symbol.toPolarFormArray(symbol);\r\n            theta = p[1];\r\n            r = p[0];\r\n            e = _.parse(format('e^({0}*({1}))', Settings.IMAGINARY, theta));\r\n            return _.multiply(r, e);\r\n        }\r\n        \r\n        /**\r\n         * Returns the rectangular form of a complex number. Does not work for symbolic coefficients\r\n         * @param {Symbol} symbol\r\n         * @returns {Symbol}\r\n         */\r\n        function rectform(symbol) {\r\n            //TODO: e^((i*pi)/4)\r\n            var original = symbol.clone();\r\n            try {\r\n                var f, p, q, s, h, d, n;\r\n                f = decompose_fn(symbol, 'e', true);\r\n                p = _.divide(f.x.power, Symbol.imaginary());\r\n                q = evaluate(trig.tan(p));\r\n                s = _.pow(f.a, new Symbol(2));\r\n                d = q.getDenom(true);\r\n                n = q.getNum();\r\n                h = Symbol.hyp(n, d);\r\n                //check \r\n                if(h.equals(f.a)) {\r\n                    return _.add(d, _.multiply(Symbol.imaginary(), n));\r\n                }\r\n                else {\r\n                    return original;\r\n                }\r\n            }\r\n            catch(e){\r\n                return original;\r\n            }    \r\n        }\r\n\r\n        function symMinMax(f, args) {\r\n            args.map(function(x) {\r\n                x.numVal = evaluate(x).multiplier;\r\n            });\r\n            var l, a, b, a_val, b_val;\r\n            while(true) {\r\n                l = args.length;\r\n                if(l < 2) return args[0];\r\n                a = args.pop();\r\n                b = args[l-2];\r\n                if(f === 'min' ? a.numVal < b.numVal : a.numVal > b.numVal) {\r\n                    args.pop();\r\n                    args.push(a);\r\n                }\r\n            } \r\n        }\r\n        \r\n        /**\r\n         * Returns maximum of a set of numbers\r\n         * @returns {Symbol}\r\n         */\r\n        function max() {\r\n            var args = [].slice.call(arguments);\r\n            if(allSame(args))\r\n                return args[0];\r\n            if(allNumbers(args))\r\n                return new Symbol(Math.max.apply(null, args));\r\n            if(Settings.SYMBOLIC_MIN_MAX && allConstants(args)) \r\n                return symMinMax('max', args);\r\n            return _.symfunction('max', args);\r\n        }\r\n        \r\n        /**\r\n         * Returns minimum of a set of numbers\r\n         * @returns {Symbol}\r\n         */\r\n        function min() {\r\n            var args = [].slice.call(arguments);\r\n            if(allSame(args))\r\n                return args[0];\r\n            if(allNumbers(args))\r\n                return new Symbol(Math.min.apply(null, args));\r\n            if(Settings.SYMBOLIC_MIN_MAX && allConstants(args)) \r\n                return symMinMax('min', args);\r\n            return _.symfunction('min', args);\r\n        }\r\n        \r\n        /**\r\n         * Returns the sign of a number\r\n         * @param {Symbol} x\r\n         * @returns {Symbol}\r\n         */\r\n        function sign(x) {\r\n            if(x.isConstant(true))\r\n                return new Symbol(Math.sign(evaluate(x)));\r\n            return _.symfunction('sign', arguments);\r\n        }\r\n        \r\n        function sort(symbol, opt) {\r\n            opt = opt ? opt.toString() : 'asc'; \r\n            var getval = function(e) {\r\n                if(e.group === N)\r\n                    return e.multiplier;\r\n                if(e.group === FN) {\r\n                    if(e.fname === '')\r\n                        return getval(e.args[0]);\r\n                    return e.fname;\r\n                }\r\n                if(e.group === S)\r\n                    return e.power;\r\n                \r\n                return e.value;\r\n            };\r\n            var symbols = isVector(symbol) ? symbol.elements : symbol.collectSymbols();\r\n            return new Vector(symbols.sort(function(a, b) {\r\n                var aval = getval(a),\r\n                    bval = getval(b);\r\n                if(opt === 'desc')\r\n                    return bval - aval;\r\n                return aval - bval;\r\n            }));\r\n        }\r\n        \r\n        /**\r\n         * The log function\r\n         * @param {Symbol} symbol\r\n         * @param {Symbol} base\r\n         * @returns {Symbol}\r\n         */\r\n        function log(symbol, base) { \r\n            var retval;\r\n            if(symbol.fname === SQRT && symbol.multiplier.equals(1)) {\r\n                return _.divide(log(symbol.args[0]), new Symbol(2));\r\n            }\r\n            \r\n            //log(0) is undefined so complain\r\n            if(symbol.equals(0)) {\r\n                throw new UndefinedError('log(0) is undefined!');\r\n            }\r\n            \r\n            //deal with imaginary values\r\n            if(symbol.isImaginary()) {\r\n                return complex.evaluate(symbol, 'log');\r\n                /*\r\n                var a = format('log(sqrt(({0})^2+({1})^2))-({2})*atan2(({1}),({0}))', symbol.imagpart(), symbol.realpart(), Settings.IMAGINARY),\r\n                    b = format('({0})*PI/2', Settings.IMAGINARY);\r\n\r\n                return _.add(_.parse(a), _.parse(b));\r\n                */\r\n            }\r\n            \r\n            if(symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\r\n                /*\r\n                var log_sym = Math2.bigLog(symbol.multiplier);\r\n                var log_base = Math2.bigLog(base.multiplier);\r\n                retval = new Symbol(log_sym.divide());\r\n                */\r\n                var log_sym = Math.log(symbol);\r\n                var log_base = Math.log(base);\r\n                retval = new Symbol(log_sym/log_base);\r\n            }\r\n                \r\n            else if(symbol.group === EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\r\n                symbol.power.negate(); \r\n                //move the negative outside but keep the positive inside :)\r\n                retval = log(symbol).negate();\r\n            } \r\n            else if(symbol.value === 'e' && symbol.multiplier.equals(1)) {\r\n                var p = symbol.power;\r\n                retval = isSymbol(p) ? p : new Symbol(p); \r\n            }\r\n            else if(symbol.group === FN && symbol.fname === 'exp') {\r\n                var s = symbol.args[0];\r\n                if(symbol.multiplier.equals(1)) retval = _.multiply(s, new Symbol(symbol.power));\r\n                else retval = _.symfunction('log',[symbol]);\r\n            }\r\n            else if(Settings.PARSE2NUMBER && isNumericSymbol(symbol)) {\r\n                var img_part;\r\n                if(symbol.multiplier.lessThan(0)) {\r\n                    symbol.negate();\r\n                    img_part = _.multiply(new Symbol(Math.PI), new Symbol('i'));\r\n                }\r\n                retval = new Symbol(Math.log(symbol.multiplier.toDecimal()));\r\n                if(img_part) retval = _.add(retval, img_part);\r\n            }\r\n            else { \r\n                var s;\r\n                if(!symbol.power.equals(1)) {\r\n                    s = symbol.group === EX ? symbol.power : new Symbol(symbol.power);\r\n                    symbol.toLinear(); \r\n                }\r\n                //log(a,a) = 1 since the base is allowed to be changed. \r\n                //This was pointed out by Happypig375 in issue #280\r\n                if(arguments.length > 1 && allSame(arguments))\r\n                    retval = new Symbol(1);\r\n                else\r\n                    retval = _.symfunction('log', arguments); \r\n                \r\n                if(s) retval = _.multiply(s, retval);\r\n            }\r\n            return retval;\r\n        }\r\n\r\n        /**\r\n         * Round a number up to s decimal places\r\n         * @param {Number} x\r\n         * @param {int} s - the number of decimal places\r\n         * @returns {undefined}\r\n         */\r\n        function round(x, s) {\r\n            var sIsConstant = s && s.isConstant() || typeof s === 'undefined';\r\n            if(x.isConstant() && sIsConstant) {\r\n                var v, e, exp, retval;\r\n                v = x;\r\n                //round the coefficient of then number but not the actual decimal value\r\n                //we know this because a negative number was passed\r\n                if(s && s.lessThan(0)) {\r\n                    s = abs(s);\r\n                    //convert the number to exponential form\r\n                    e = Number(x).toExponential().toString().split('e');\r\n                    //point v to the coefficient of then number\r\n                    v = e[0];\r\n                    //set the expontent\r\n                    exp = e[1];\r\n                }\r\n                //round the number to the requested precision\r\n                retval = new Symbol(Utils.round(v, Number(s||0)));\r\n                //if there's a exponent then put it back\r\n                return _.multiply(retval, _.pow(new Symbol(10), new Symbol(exp || 0)))\r\n            }\r\n                \r\n            \r\n            return _.symfunction('round', arguments); \r\n        }\r\n        \r\n        /**\r\n         * Gets the quadrant of the trig function\r\n         * @param {Frac} m\r\n         * @returns {Int}\r\n         */\r\n        function getQuadrant(m) {\r\n            var v = m % 2, quadrant;\r\n            \r\n            if(v < 0) v = 2+v; //put it in terms of pi\r\n            \r\n            if(v >= 0 && v <= 0.5) quadrant = 1;\r\n            else if(v > 0.5 && v <= 1) quadrant = 2;\r\n            else if(v > 1 && v <= 1.5) quadrant = 3;\r\n            else quadrant = 4;\r\n            return quadrant;\r\n        }\r\n\r\n        /*\r\n         * Serves as a bridge between numbers and bigNumbers\r\n         * @param {Frac|Number} n\r\n         * @returns {Symbol} \r\n         */\r\n        function bigConvert(n) { \r\n            if(!isFinite(n)){\r\n                var sign = Math.sign(n);\r\n                var r = new Symbol(String(Math.abs(n)));\r\n                r.multiplier = r.multiplier.multiply(new Frac(sign));\r\n                return r;\r\n            }\r\n            if(isSymbol(n))\r\n                return n;\r\n            if(typeof n === 'number') {\r\n                try {\r\n                    n = Frac.simple(n);\r\n                }\r\n                catch(e) {\r\n                    n = new Frac(n);\r\n                }\r\n            }\r\n                \r\n            var symbol = new Symbol(0);\r\n            symbol.multiplier = n;\r\n            return symbol;\r\n        };\r\n        \r\n        function clean(symbol) {\r\n            // handle functions with numeric values\r\n            // handle denominator within denominator\r\n            // handle trig simplifications\r\n            var g = symbol.group, retval;\r\n            //Now let's get to work\r\n            if(g === CP) {\r\n                var num = symbol.getNum(),\r\n                    den = symbol.getDenom() || new Symbol(1),\r\n                    p = Number(symbol.power),\r\n                    factor = new Symbol(1);\r\n                if(Math.abs(p) === 1) {\r\n                    den.each(function(x) {\r\n                        if(x.group === CB) {\r\n                            factor = _.multiply(factor, clean(x.getDenom()));\r\n                        }\r\n                        else if(x.power.lessThan(0)) {\r\n                            factor = _.multiply(factor, clean(x.clone().toUnitMultiplier()));\r\n                        }\r\n                    });\r\n\r\n                    var new_den = new Symbol(0);\r\n                    //now divide out the factor and add to new den\r\n                    den.each(function(x) {\r\n                        new_den = _.add(_.divide(x, factor.clone()), new_den);\r\n                    });\r\n                    \r\n                    factor.invert(); //invert so it can be added to the top\r\n                    var new_num;\r\n                    if(num.isComposite()) { \r\n                        new_num = new Symbol(0);\r\n                        num.each(function(x){\r\n                            new_num = _.add(_.multiply(clean(x), factor.clone()), new_num);\r\n                        });\r\n                    }\r\n                    else\r\n                        new_num = _.multiply(factor, num);\r\n                    \r\n                    retval = _.divide(new_num, new_den);\r\n                }\r\n            }\r\n            else if(g === CB) { \r\n                retval = new Symbol(1);\r\n                symbol.each(function(x) { \r\n                    retval = _.multiply(retval, _.clean(x));\r\n                });\r\n            }\r\n            else if(g === FN) {\r\n                if(symbol.args.length === 1 && symbol.args[0].isConstant())\r\n                    retval = block('PARSE2NUMBER', function() {\r\n                        return _.parse(symbol);\r\n                    }, true);\r\n            }\r\n            \r\n            if(!retval)\r\n                retval = symbol;\r\n            \r\n            return retval;\r\n        }\r\n        \r\n        /**\r\n         * Expands a symbol\r\n         * @param symbol\r\n         */\r\n        function expand(symbol) { \r\n            //deal with parenthesis\r\n            if(symbol.group === FN && symbol.fname === '')\r\n                return _.expand(symbol.args[0]);\r\n            \r\n            //TODO - some test need to be verified in order to implement this\r\n            /*\r\n            if(symbol.group === FN) {\r\n                symbol.args[0] = _.expand(symbol.args[0]);\r\n                symbol.updateHash();\r\n                return symbol;\r\n            }\r\n            */\r\n            \r\n            if(!symbol.symbols) return symbol; //nothing to do\r\n            \r\n            var original = symbol.clone(); \r\n            try {\r\n                var p = symbol.power,\r\n                    m = symbol.multiplier,\r\n                    pn = Number(p);\r\n                \r\n                if(!symbol.symbols) \r\n                    return symbol;\r\n\r\n                //expand all the symbols\r\n                for(var s in symbol.symbols) {\r\n                    var x = symbol.symbols[s];\r\n                    symbol.symbols[s] = expand(x);\r\n                }\r\n                symbol = _.parse(symbol);\r\n\r\n                if(isInt(pn) && pn > 0 && symbol.isComposite()) { \r\n                    var f = new Symbol(0);\r\n                    //we loop through the f and make sure that it's fully expanded\r\n                    for(var x in symbol.symbols) {\r\n                        var sym = symbol.symbols[x];\r\n                        if(sym.power.greaterThan(1)) \r\n                            sym = _.expand(sym);\r\n                        f = _.add(f, sym);\r\n                    }\r\n\r\n                    //assume (a+b)^3 = (a+b)(a+b)(a+b) = (b^2+2*a*b+a^2)(a+b)\r\n                    //we have n=p-1=2 iterations where p=3 in this case\r\n                    var n = pn-1;\r\n                    //Initiate with the first term. Remember that we have p-1 iterations because\r\n                    //the first iteration is equal to P where p is the polynomial\r\n                    var result = f.clone(); //initiate this as the first term\r\n                    //the first loop is the top iterator and remains untouched. No sub-symbols\r\n                    //from this symbol are allowed to be touched\r\n                    for(var i=0; i<n; i++) {\r\n                        var t = new Symbol(0);\r\n                        for(var x in f.symbols) {\r\n                            var a = f.symbols[x];\r\n                            //we now loop through the \r\n                            for(var y in result.symbols) {\r\n                                var b = _.multiply(a.clone(), result.symbols[y]);\r\n                                //the result must always be a composite. If not expand\r\n                                if(b.group === CB)\r\n                                    b = _.expand(b);\r\n                                t = _.add(t, b);\r\n                            }\r\n                        };\r\n                        result = t;\r\n                    }\r\n                        \r\n                    //put back the multiplier\r\n                    if(!m.equals(1)) {\r\n                        for(var s in result.symbols) {\r\n                            var x = result.symbols[s];\r\n                            x.multiplier = x.multiplier.multiply(m);\r\n                            if(x.isComposite())\r\n                                x.distributeMultiplier();\r\n                            symbol.symbols[s] = x;\r\n                        }\r\n                    }\r\n\r\n                    return result;\r\n                }\r\n                else if(symbol.group === CB) { \r\n                    //check if the symbol has composites\r\n                    var hascomposites = false, \r\n                        sp = symbol.power.clone(),\r\n                        sign = symbol.power.sign();\r\n                \r\n                    for(var x in symbol.symbols) {\r\n                        var sub = symbol.symbols[x];\r\n                        if(sub.isComposite()) {\r\n                            hascomposites = true;\r\n                            break;\r\n                        }\r\n\r\n                        if(isSymbol(sub.power) || isSymbol(sp)) {\r\n                            sub.power = _.multiply(sub.power, Symbol(sp));\r\n                            sub.group = EX;\r\n                        }\r\n                        else sub.power = sub.power.multiply(sp);\r\n                    }\r\n                    \r\n                    symbol.toLinear();\r\n\r\n                    //I'm going to be super lazy here and take the easy way out. TODO: do this without re-parsing\r\n                    symbol = _.parse(symbol.text());\r\n\r\n                    if(!hascomposites) \r\n                        return symbol; //nothing to do here\r\n\r\n                    var result = new Symbol(0);\r\n                    var composites = [],\r\n                        non_composites = new Symbol(symbol.multiplier);\r\n\r\n                    //sort them out\r\n                    for(var s in symbol.symbols) {\r\n                        var x = symbol.symbols[s];\r\n                        if(x.group === EX)\r\n                            continue;\r\n                        if(x.isComposite()) {\r\n                            var p = x.power, isDenom = false;;\r\n                            if(isInt(p)) {\r\n                                if(p < 0) {\r\n                                    x.power.negate();\r\n                                    isDenom = true;\r\n                                }\r\n                            }\r\n\r\n                            if(isDenom) {\r\n                                x.power.negate();\r\n                                non_composites = _.multiply(non_composites, x);\r\n                            }\r\n                            else composites.push(x);\r\n                        }\r\n                        else non_composites = _.multiply(non_composites, x);\r\n                    }\r\n                    //multiply out the remainder\r\n                    var l = composites.length;\r\n                        //grab the first symbol since we'll loop over that one to begin\r\n                    result = composites[0];\r\n                    for(var i=1; i<l; i++) {\r\n                        var t = new Symbol(0);\r\n                        var s = composites[i];\r\n                        for(var s1 in result.symbols) {\r\n                            var x = result.symbols[s1];\r\n                            for(var s2 in s.symbols) {\r\n                                var y = s.symbols[s2];\r\n                                var temp = _.multiply(x.clone(),y.clone());\r\n                                t = _.add(t, temp);\r\n                            }\r\n                        }\r\n                        result = t;\r\n                    }\r\n\r\n                    var finalResult = new Symbol(0);\r\n                    //put back the multiplier\r\n                    for(var s in result.symbols) {\r\n                        var x = result.symbols[s];\r\n                        finalResult = _.add(finalResult, expand(_.multiply(non_composites, x)));\r\n                    }\r\n                    \r\n                    //expand the power\r\n                    finalResult.power = finalResult.power.multiply(sp.abs());\r\n                    \r\n                    symbol = _.expand(finalResult);\r\n                    \r\n                    if(sign < 0)\r\n                        symbol.invert();\r\n                }\r\n            }\r\n            catch(e){ return original; }\r\n            \r\n            return symbol;\r\n        }\r\n        \r\n        function imatrix(n) {\r\n            return Matrix.identity(n);\r\n        }\r\n        \r\n        function vecget(vector, index) {\r\n            return vector.elements[index];\r\n        }\r\n        \r\n        function vecset(vector, index, value) {\r\n            vector.elements[index] = value;\r\n            return vector;\r\n        }\r\n        \r\n        function matget(matrix, i, j) {\r\n            return matrix.elements[i][j];\r\n        }\r\n        \r\n        function matgetrow(matrix, i) {\r\n            return new Matrix(matrix.elements[i]);\r\n        }\r\n        \r\n        function matsetrow(matrix, i, x) {\r\n            if(matrix.elements[i].length !== x.elements.length)\r\n                throw new Error('Matrix row must match row dimensions!');\r\n            var M = matrix.clone();\r\n            M.elements[i] = x.clone().elements;\r\n            return M;\r\n        }\r\n        \r\n        function matgetcol(matrix, col_index) {\r\n            col_index = Number(col_index);\r\n            var M = Matrix.fromArray([]);\r\n            matrix.each(function(x, i, j) {\r\n                if(j === col_index) {\r\n                    M.elements.push([x.clone()]);\r\n                }\r\n            });\r\n            return M;\r\n        }\r\n        \r\n        function matsetcol(matrix, j, col) {\r\n            j = Number(j);\r\n            if(matrix.rows() !== col.elements.length)\r\n                throw new Error('Matrix columns must match number of columns!');\r\n            col.each(function(x, i) {\r\n               matrix.set(i-1, j, x.elements[0].clone());\r\n            });\r\n            return matrix;\r\n        }\r\n        \r\n        \r\n        function matset(matrix, i, j, value) {\r\n            matrix.elements[i][j] = value;\r\n            return matrix;\r\n        }\r\n        \r\n        //link this back to the parser\r\n        this.expand = expand;\r\n        this.clean = clean;\r\n        \r\n        //the constructor for vectors\r\n        function vector() {\r\n            return new Vector([].slice.call(arguments));\r\n        }\r\n        \r\n        //the constructor for matrices\r\n        function matrix() {\r\n            return Matrix.fromArray(arguments);\r\n        }\r\n        \r\n        function determinant(symbol) {\r\n            if(isMatrix(symbol)) {\r\n                return symbol.determinant();\r\n            }\r\n            return symbol;\r\n        }\r\n        \r\n        function size(symbol) {\r\n            if(isMatrix(symbol))\r\n                return [new Symbol(symbol.cols()), new Symbol(symbol.rows())];\r\n            err('size expects a matrix or a vector');\r\n        }\r\n        \r\n        function dot(vec1, vec2) {\r\n            if(isVector(vec1) && isVector(vec2)) return vec1.dot(vec2);\r\n            err('function dot expects 2 vectors');\r\n        }\r\n        \r\n        function cross(vec1, vec2) {\r\n            if(isVector(vec1) && isVector(vec2)) return vec1.cross(vec2);\r\n            err('function cross expects 2 vectors');\r\n        }\r\n        \r\n        function transpose(mat) {\r\n            if(isMatrix(mat)) return mat.transpose();\r\n            err('function transpose expects a matrix');\r\n        }\r\n        \r\n        function invert(mat) {\r\n            if(isMatrix(mat)) return mat.invert();\r\n            err('invert expects a matrix');\r\n        }\r\n        \r\n        function testSQRT(symbol) { \r\n            //wrap the symbol in sqrt. This eliminates one more check down the line.\r\n            if(!isSymbol(symbol.power) && symbol.power.absEquals(0.5)) { \r\n                var sign = symbol.power.sign();\r\n                //don't devide the power directly. Notice the use of toString. This makes it possible\r\n                //to use a bigNumber library in the future\r\n                return sqrt(symbol.group === P ? new Symbol(symbol.value) : symbol.toLinear()).setPower(new Frac(sign));\r\n            }\r\n            return symbol;\r\n        }\r\n        \r\n        //try to reduce a symbol by pulling its power\r\n        function testPow(symbol) { \r\n            if(symbol.group === P) {\r\n                var v = symbol.group === N ? symbol.multiplier.toDecimal() : symbol.value,\r\n                    fct = primeFactors(v)[0],\r\n                    n = new Frac(Math.log(v)/Math.log(fct)),\r\n                    p = n.multiply(symbol.power); \r\n                //we don't want a more complex number than before \r\n                if(p.den > symbol.power.den) return symbol;\r\n\r\n                if(isInt(p)) symbol = Symbol(Math.pow(fct, p));\r\n                else symbol = new Symbol(fct).setPower(p);\r\n            }\r\n\r\n            return symbol;\r\n        }\r\n\r\n        //extended functions. Because functions like log aren't directly \r\n        //stored in an object, it's difficult to find out about them unless you know of them \r\n        //outside of the library. This serves as registry. That's all.\r\n        this.ext = {\r\n            log: log,\r\n            sqrt: sqrt,\r\n            abs: abs,\r\n            vector: vector,\r\n            matrix: matrix,\r\n            parens: parens,\r\n            determinant: determinant,\r\n            dot: dot,\r\n            invert: invert,\r\n            transpose: transpose\r\n        };\r\n        \r\n        //The loader for functions which are not part of Math2\r\n        this.mapped_function = function() { \r\n            var subs = {},\r\n                params = this.params;\r\n            for(var i=0; i<params.length; i++) \r\n                subs[params[i]] = arguments[i];\r\n            \r\n            return _.parse(this.body, subs);\r\n        };\r\n        \r\n        /**\r\n         * Adds two symbols\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.add = function(a, b) {  \r\n            var aIsSymbol = isSymbol(a),\r\n                bIsSymbol = isSymbol(b);\r\n            //we're dealing with two symbols\r\n            if(aIsSymbol && bIsSymbol) { \r\n                //handle Infinity\r\n                //https://www.encyclopediaofmath.org/index.php/Infinity\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    var aneg = a.multiplier.lessThan(0),\r\n                        bneg = b.multiplier.lessThan(0);\r\n                \r\n                    if(a.isInfinity && b.isInfinity && aneg !== bneg) {\r\n                        throw new UndefinedError('('+a+')+('+b+') is not defined!');\r\n                    }\r\n                    \r\n                    var inf = Symbol.infinity();\r\n                    if(bneg)\r\n                        inf.negate();\r\n                    return inf;\r\n                }\r\n                \r\n                if(a.isComposite() && a.isLinear() && b.isComposite() && b.isLinear()) { \r\n                    a.distributeMultiplier();\r\n                    b.distributeMultiplier();\r\n                }\r\n                //no need to waste time on zeroes\r\n                if(a.multiplier.equals(0)) return b;\r\n                if(b.multiplier.equals(0)) return a;\r\n\r\n                if(a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\r\n                    var result =  new Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings.PRECISION));\r\n                    return result;\r\n                }\r\n\r\n                var g1 = a.group,\r\n                    g2 = b.group,\r\n                    ap = a.power.toString(),\r\n                    bp = b.power.toString();\r\n                \r\n                //always keep the greater group on the left. \r\n                if(g1 < g2 || (g1 === g2 && ap > bp && bp > 0)) return this.add(b, a);\r\n                \r\n                /*note to self: Please don't forget about this dilemma ever again. In this model PL and CB goes crazy\r\n                 * because it doesn't know which one to prioritize. */\r\n                //correction to PL dilemma\r\n                if(g1 === CB && g2 === PL && a.value === b.value) { \r\n                    //swap\r\n                    var t = a; a = b; b = t;\r\n                    g1 = a.group; g2 = b.group; ap = a.power.toString(); bp = b.power.toString();\r\n                }\r\n\r\n                var powEQ = ap === bp,\r\n                    v1 = a.value,\r\n                    v2 = b.value,\r\n                    aIsComposite = a.isComposite(),\r\n                    bIsComposite = b.isComposite(),\r\n                    h1, h2, result;\r\n\r\n                if(aIsComposite) h1 = text(a, 'hash');\r\n                if(bIsComposite) h2 = text(b, 'hash');\r\n                \r\n                if(g1 === CP && g2 === CP && b.isLinear() && !a.isLinear() && h1 !== h2) {\r\n                    return this.add(a, b);\r\n                }   \r\n\r\n                //PL & PL should compare hashes and not values e.g. compare x+x^2 with x+x^3 and not x with x\r\n                if(g1 === PL && g2 === PL) { \r\n                    v1 = h1; v2 = h2;\r\n                }\r\n\r\n                var PN = g1 === P && g2 === N,\r\n                    PNEQ = a.value === b.multiplier.toString(),\r\n                    valEQ = (v1 === v2 || h1 === h2 && !h1 === undefined || (PN && PNEQ));\r\n\r\n                //equal values, equal powers\r\n                if(valEQ && powEQ && g1 ===  g2) { \r\n                    //make sure to convert N to something P can work with\r\n                    if(PN) b = b.convert(P);//CL\r\n\r\n                    //handle PL\r\n                    if(g1 === PL && (g2 === S || g2 === P)) { \r\n                        a.distributeMultiplier();\r\n                        result = a.attach(b);\r\n                    }\r\n                    else {\r\n                        result = a;//CL\r\n                        if(a.multiplier.isOne() && b.multiplier.isOne() && g1 === CP && a.isLinear() && b.isLinear()) {\r\n                            for(var s in b.symbols) {\r\n                                var x = b.symbols[s];\r\n                                result.attach(x);\r\n                            }\r\n                        }\r\n                        else result.multiplier = result.multiplier.add(b.multiplier);\r\n                    }\r\n                }\r\n                //equal values uneven powers\r\n                else if(valEQ && g1 !== PL) { \r\n                    result = Symbol.shell(PL).attach([a, b]);\r\n                    //update the hash\r\n                    result.value = g1 === PL ? h1 : v1;\r\n                }\r\n                else if(aIsComposite && a.isLinear()) { \r\n                    var canIterate = g1 === g2,\r\n                        bothPL = g1 === PL && g2 === PL; \r\n\r\n                    //we can only iterate group PL if they values match\r\n                    if(bothPL) canIterate = a.value === b.value;\r\n                    //distribute the multiplier over the entire symbol\r\n                    a.distributeMultiplier();\r\n\r\n                    if(b.isComposite() && b.isLinear() && canIterate) {\r\n                        b.distributeMultiplier();\r\n                        //CL\r\n                        for(var s in b.symbols) {\r\n                            var x = b.symbols[s];\r\n                            a.attach(x);\r\n                        }\r\n                        result = a; \r\n                    }\r\n                    //handle cases like 2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2\r\n                    else if(bothPL && a.value !== h2 || g1 === PL && !valEQ) {\r\n                        result = Symbol.shell(CP).attach([a, b]);\r\n                        result.updateHash();\r\n\r\n                    }\r\n                    else { \r\n                        result = a.attach(b);\r\n                    }\r\n                }\r\n                else { \r\n                    if(g1 === FN && a.fname === SQRT && g2 !== EX && b.power.equals(0.5)) { \r\n                        var m = b.multiplier.clone();\r\n                        b = sqrt(b.toUnitMultiplier().toLinear());\r\n                        b.multiplier = m;\r\n                    }\r\n                    //fix for issue #3 and #159\r\n                    if(a.length === 2 && b.length === 2 && even(a.power) && even(b.power)) {\r\n                        result = _.add(expand(a), expand(b));\r\n                    }\r\n                    else {\r\n                        result = Symbol.shell(CP).attach([a, b]);\r\n                        result.updateHash();\r\n                    }  \r\n                }\r\n\r\n                if(result.multiplier.equals(0)) result = new Symbol(0);\r\n\r\n                //make sure to remove unnecessary wraps\r\n                if(result.length === 1) { \r\n                    var m = result.multiplier;\r\n                    result = firstObject(result.symbols);\r\n                    result.multiplier = result.multiplier.multiply(m);\r\n                }\r\n\r\n                return result;\r\n            }\r\n            else { \r\n                //keep symbols to the right \r\n                if(bIsSymbol && !aIsSymbol) { \r\n                    var t = a; a = b; b = t; //swap\r\n                    t = bIsSymbol; bIsSymbol = aIsSymbol; aIsSymbol = t;\r\n                }\r\n                \r\n                var bIsMatrix = isMatrix(b);\r\n            \r\n                if(aIsSymbol && bIsMatrix) {\r\n                    b.eachElement(function(e) {\r\n                       return _.add(a.clone(), e); \r\n                    });\r\n                }\r\n                else {\r\n                    if(isMatrix(a) && bIsMatrix) { \r\n                        b = a.add(b);\r\n                    }\r\n                    else if(aIsSymbol && isVector(b)) {\r\n                        b.each(function(x, i) {\r\n                            i--;\r\n                            b.elements[i] = _.add(a.clone(), b.elements[i]);\r\n                        });\r\n                    }\r\n                    else { \r\n                        if(isVector(a) && isVector(b)) { \r\n                            b.each(function(x, i) {\r\n                                i--;\r\n                                b.elements[i] = _.add(a.elements[i], b.elements[i]);\r\n                            });\r\n                        }\r\n                        else if(isVector(a) && isMatrix(b)) { \r\n                            //try to convert a to a matrix\r\n                            return _.add(b, a);\r\n                        }\r\n                        else if(isMatrix(a) && isVector(b)) {\r\n                            if(b.elements.length === a.rows()) {\r\n                                var M = new Matrix(), l = a.cols();\r\n                                b.each(function(e, i) {\r\n                                    var row = [];\r\n                                    for(var j=0; j<l; j++) { \r\n                                        row.push(_.add(a.elements[i-1][j].clone(), e.clone()));\r\n                                    }\r\n                                    M.elements.push(row);\r\n                                });\r\n                                return M;\r\n                            }\r\n                            else err('Dimensions must match!');\r\n                        }\r\n                    }\r\n                }\r\n                return b;\r\n            }\r\n                \r\n        };\r\n        \r\n        /**\r\n         * Gets called when the parser finds the - operator. Not the prefix operator. See this.add\r\n         * @param {Symbol} symbol1\r\n         * @param {Symbol} symbol2\r\n         * @returns {Symbol}\r\n         */\r\n        this.subtract = function(a, b) { \r\n            var aIsSymbol = aIsSymbol = isSymbol(a), \r\n                bIsSymbol = isSymbol(b), t;\r\n            \r\n            if(aIsSymbol && bIsSymbol) {\r\n                return this.add(a, b.negate());\r\n            }\r\n            else {\r\n                if(bIsSymbol) {\r\n                    t = b; b = a; a = t;\r\n                    aIsSymbol = bIsSymbol;\r\n                }\r\n                if(aIsSymbol && isVector(b)) {\r\n                    b = b.map(function(x) {\r\n                        return _.subtract(x, a.clone());\r\n                    });\r\n                }\r\n                else if(isVector(a) && isVector(b)) {\r\n                    if(a.dimensions() === b.dimensions()) b = a.subtract(b);\r\n                    else _.error('Unable to subtract vectors. Dimensions do not match.');\r\n                }\r\n                else if(isMatrix(a) && isVector(b)) {\r\n                    if(b.elements.length === a.rows()) {\r\n                        var M = new Matrix(), l = a.cols();\r\n                        b.each(function(e, i) {\r\n                            var row = [];\r\n                            for(var j=0; j<l; j++) { \r\n                                row.push(_.subtract(a.elements[i-1][j].clone(), e.clone()));\r\n                            }\r\n                            M.elements.push(row);\r\n                        });\r\n                        return M;\r\n                    }\r\n                    else err('Dimensions must match!');\r\n                }\r\n                else if(isVector(a) && isMatrix(b)) {\r\n                    var M = b.clone().negate();\r\n                    return _.add(M, a);\r\n                }\r\n                else if(isMatrix(a) && isMatrix(b)) {\r\n                    b = a.subtract(b);\r\n                }\r\n                return b;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Gets called when the parser finds the * operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.multiply = function(a, b) { \r\n            var aIsSymbol = isSymbol(a),\r\n                bIsSymbol = isSymbol(b);\r\n        \r\n            if(aIsSymbol && bIsSymbol) {\r\n                //handle Infinty\r\n                if(a.isInfinity || b.isInfinity) { \r\n                    if(a.equals(0) || b.equals(0))\r\n                        throw new UndefinedError(a+'*'+b+' is undefined!');\r\n                    if(b.power.lessThan(0))\r\n                        throw new UndefinedError('Infinity/Infinity is not defined!');\r\n                    var sign = a.multiplier.multiply(b.multiplier).sign(),\r\n                        inf = Symbol.infinity();\r\n                    if(a.isConstant() || b.isConstant() || (a.isInfinity && b.isInfinity)) {\r\n                        if(sign < 0)\r\n                            inf.negate();\r\n                        return inf;\r\n                    }\r\n                }\r\n                //the quickies\r\n                if(a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\r\n                    var retval = new Symbol(a.multiplier.multiply(b.multiplier).toDecimal());\r\n                    return retval;\r\n                }\r\n\r\n                //don't waste time\r\n                if(a.isOne()) return b.clone();\r\n                if(b.isOne()) return a.clone();\r\n\r\n                if(a.multiplier.equals(0) || b.multiplier.equals(0)) return new Symbol(0);\r\n\r\n                if(b.group > a.group && !(b.group === CP)) return this.multiply(b, a);\r\n                //correction for PL/CB dilemma\r\n                if(a.group === CB && b.group === PL && a.value === b.value) { \r\n                    var t = a; a = b; b = t;//swap\r\n                }\r\n\r\n                var g1 = a.group,\r\n                    g2 = b.group,\r\n                    bnum = b.multiplier.num,\r\n                    bden = b.multiplier.den;\r\n\r\n                if(g1 === FN && a.fname === SQRT && !b.isConstant() && a.args[0].value === b.value) {\r\n                    //unwrap sqrt\r\n                    var a_pow = a.power;\r\n                    a = a.args[0].clone();\r\n                    a.setPower(new Frac(0.5).multiply(a_pow));\r\n                    g1 = a.group;\r\n                };\r\n                \r\n                var v1 = a.value,\r\n                    v2 = b.value,\r\n                    sign = new Frac(a.multiplier.lessThan(0) ? -1 : 1),\r\n                    //since P is just a morphed version of N we need to see if they relate\r\n                    ONN = (g1 === P && g2 === N && b.multiplier.equals(a.value)),\r\n                    //don't multiply the multiplier of b since that's equal to the value of a\r\n                    m = ONN ? new Frac(1).multiply(a.multiplier).abs() : a.multiplier.multiply(b.multiplier).abs(),\r\n                    result = a.clone().toUnitMultiplier();\r\n                b = b.clone().toUnitMultiplier(true);\r\n                \r\n                //if both are PL then their hashes have to match\r\n                if(v1 === v2 && g1 === PL && g1 === g2) {\r\n                    v1 = a.text('hash');\r\n                    v2 = b.text('hash');\r\n                }\r\n\r\n                //same issue with (x^2+1)^x*(x^2+1)\r\n                //EX needs an exception when multiplying because it needs to recognize\r\n                //that (x+x^2)^x has the same hash as (x+x^2). The latter is kept as x\r\n                if(g2 === EX && b.previousGroup === PL && g1 === PL) {\r\n                    v1 = text(a, 'hash', EX);\r\n                }\r\n                \r\n\r\n                if((v1 === v2 || ONN) && !(g1 === PL && (g2 === S || g2 === P || g2 === FN)) && !(g1 === PL && g2 === CB)) {                   \r\n                    var p1 = a.power,\r\n                        p2 = b.power,\r\n                        isSymbolP1 = isSymbol(p1),\r\n                        isSymbolP2 = isSymbol(p2),\r\n                        toEX = (isSymbolP1 || isSymbolP2);\r\n                    //TODO: this needs cleaning up\r\n                    if(g1 === PL && g2 !== PL && b.previousGroup !== PL && p1.equals(1)) {\r\n                        result = new Symbol(0);\r\n                        a.each(function(x) {\r\n                            result = _.add(result, _.multiply(x, b.clone()));\r\n                        }, true);\r\n                    }\r\n                    else {\r\n                        //add the powers\r\n                        result.power = toEX ? _.add(\r\n                            !(isSymbol(p1)) ? new Symbol(p1) : p1, \r\n                            !(isSymbol(p2)) ? new Symbol(p2) : p2\r\n                        ): (g1 === N /*don't add powers for N*/? p1 : p1.add(p2));\r\n\r\n                        //eliminate zero power values and convert them to numbers\r\n                        if(result.power.equals(0)) result = result.convert(N);\r\n\r\n                        //properly convert to EX\r\n                        if(toEX) result.convert(EX);\r\n\r\n                        //take care of imaginaries\r\n                        if(a.imaginary && b.imaginary) { \r\n                            var isEven = even(result.power % 2);\r\n                            if(isEven) {\r\n                                result = new Symbol(1);\r\n                                m.negate();\r\n                            }\r\n                        }\r\n\r\n                        //cleanup: this causes the LaTeX generator to get confused as to how to render the symbol\r\n                        if(result.group !== EX && result.previousGroup) result.previousGroup = undefined;\r\n                        //the sign for b is floating around. Remember we are assuming that the odd variable will carry\r\n                        //the sign but this isn't true if they're equals symbols\r\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\r\n                    }\r\n                }\r\n                else if(g1 === CB && a.isLinear()){ \r\n                    if(g2 === CB) b.distributeExponent();\r\n                    if(g2 === CB && b.isLinear()) { \r\n                        for(var s in b.symbols) {\r\n                            var x = b.symbols[s];\r\n                            result = result.combine(x);\r\n                        }\r\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\r\n                    }\r\n                    else { \r\n                        result.combine(b);\r\n                    }\r\n                }\r\n                else {\r\n                    //the multiplier was already handled so nothing left to do\r\n                    if(g1 !== N) { \r\n                        if(g1 === CB) {\r\n                            result.distributeExponent();\r\n                            result.combine(b);\r\n                        }\r\n                        else if(!b.isOne()) {\r\n                            var bm = b.multiplier.clone();\r\n                            b.toUnitMultiplier();\r\n                            result = Symbol.shell(CB).combine([result, b]);\r\n                            //transfer the multiplier to the outside\r\n                            result.multiplier = result.multiplier.multiply(bm);\r\n                        }\r\n                    }     \r\n                    else { \r\n                        result = b.clone().toUnitMultiplier();\r\n                    }\r\n                }\r\n\r\n                if(result.group === P) { \r\n                    var logV = Math.log(result.value),\r\n                        n1 = Math.log(bnum)/logV,\r\n                        n2 = Math.log(bden)/logV,\r\n                        ndiv = m.num/bnum,\r\n                        ddiv = m.den/bden;\r\n                    //we don't want to divide by zero no do we? Strange things happen.\r\n                    if(n1 !== 0 && isInt(n1) && isInt(ndiv)) {\r\n                        result.power = result.power.add(new Frac(n1));\r\n                        m.num /= bnum; //BigInt? Keep that in mind for the future.\r\n                    }\r\n                    if(n2 !== 0 && isInt(n2) && isInt(ddiv)) {\r\n                        result.power = result.power.subtract(new Frac(n2));\r\n                        m.den /= bden; //BigInt? Keep that in mind for the future.\r\n                    }\r\n                }\r\n\r\n                //unpack CB if length is only one\r\n                if(result.length === 1) { \r\n                    var t = result.multiplier;\r\n                    //transfer the multiplier\r\n                    result = firstObject(result.symbols);\r\n                    result.multiplier = result.multiplier.multiply(t);\r\n                }\r\n\r\n                //reduce square root\r\n                var ps = result.power.toString(); \r\n                if(even(ps) && result.fname === SQRT) { \r\n                    var p = result.power;\r\n                    result = result.args[0]; \r\n                    result = _.multiply(new Symbol(m), _.pow(result, new Symbol(p.divide(new Frac(2)))));\r\n                }\r\n                else {\r\n                    result.multiplier = result.multiplier.multiply(m).multiply(sign);\r\n                    if(result.group === CP && result.isImaginary())\r\n                        result.distributeMultiplier();\r\n                }\r\n\r\n\r\n                //back convert group P to a simpler group N if possible\r\n                if(result.group === P && isInt(result.power.toDecimal())) result = result.convert(N);\r\n\r\n                return result;\r\n            }\r\n            else {\r\n                //****** Matrices & Vector *****//\r\n                if(bIsSymbol && !aIsSymbol) { //keep symbols to the right \r\n                    t = a; a = b; b = t; //swap\r\n                    t = bIsSymbol; bIsSymbol = aIsSymbol; aIsSymbol = t;\r\n                }\r\n\r\n                var isMatrixB = isMatrix(b), isMatrixA = isMatrix(a);\r\n                if(aIsSymbol && isMatrixB) {\r\n                    b.eachElement(function(e) {\r\n                       return _.multiply(a.clone(), e); \r\n                    });\r\n                }\r\n                else {\r\n                    if(isMatrixA && isMatrixB) { \r\n                        b = a.multiply(b);\r\n                    }\r\n                    else if(aIsSymbol && isVector(b)) {\r\n                        b.each(function(x, i) {\r\n                            i--;\r\n                            b.elements[i] = _.multiply(a.clone(), b.elements[i]);\r\n                        });\r\n                    }\r\n                    else {\r\n                        if(isVector(a) && isVector(b)) {\r\n                            b.each(function(x, i) {\r\n                                i--;\r\n                                b.elements[i] = _.multiply(a.elements[i], b.elements[i]);\r\n                            });\r\n                        }\r\n                        else if(isVector(a) && isMatrix(b)) {\r\n                            //try to convert a to a matrix\r\n                            return this.multiply(b, a);\r\n                        }\r\n                        else if(isMatrix(a) && isVector(b)) { \r\n                            if(b.elements.length === a.rows()) {\r\n                                var M = new Matrix(), l = a.cols();\r\n                                b.each(function(e, i) {\r\n                                    var row = [];\r\n                                    for(var j=0; j<l; j++) { \r\n                                        row.push(_.multiply(a.elements[i-1][j].clone(), e.clone()));\r\n                                    }\r\n                                    M.elements.push(row);\r\n                                });\r\n                                return M;\r\n                            }\r\n                            else err('Dimensions must match!');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return b;\r\n            }\r\n        };\r\n        \r\n        /**\r\n         * Gets called when the parser finds the / operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.divide = function(a, b) { \r\n            var aIsSymbol = isSymbol(a),\r\n                bIsSymbol = isSymbol(b);\r\n        \r\n            if(aIsSymbol && bIsSymbol) {\r\n                var result;\r\n                if(b.equals(0)) \r\n                    throw new DivisionByZero('Division by zero not allowed!');\r\n                \r\n                if(a.isConstant() && b.isConstant()) {\r\n                    result = a.clone();\r\n                    result.multiplier = result.multiplier.divide(b.multiplier);\r\n                }\r\n                else {\r\n                    b.invert();\r\n                    result = _.multiply(a, b);\r\n                }\r\n                return result;\r\n            }\r\n            else {\r\n                //******* Vectors & Matrices *********//\r\n                var isVectorA = isVector(a), isVectorB = isVector(b);\r\n                if(aIsSymbol && isVectorB) {\r\n                    b = b.map(function(x){\r\n                        return _.divide(a.clone(),x);\r\n                    });\r\n                }\r\n                else if(isVectorA && bIsSymbol) {\r\n                    b = a.map(function(x) {\r\n                        return _.divide(x, b.clone());\r\n                    });\r\n                }\r\n                else if(isVectorA && isVectorB) {\r\n                    if(a.dimensions() === b.dimensions()) {\r\n                        b = b.map(function(x, i) {\r\n                            return _.divide(a.elements[--i], x);\r\n                        });\r\n                    }\r\n                    else _.error('Cannot divide vectors. Dimensions do not match!');\r\n                }\r\n                else {\r\n                    var isMatrixA = isMatrix(a), isMatrixB = isMatrix(b);\r\n                    if(isMatrixA && bIsSymbol) {\r\n                        a.eachElement(function(x) {\r\n                            return _.divide(x, b.clone());\r\n                        });\r\n                        b = a;\r\n                    }\r\n                    else if(isMatrixA && isMatrixB) {\r\n                        if(a.rows() === b.rows() && a.cols() === b.cols()) {\r\n                            a.eachElement(function(x, i, j) {\r\n                                return _.divide(x, b.elements[i][j]);\r\n                            });\r\n                        }\r\n                        else {\r\n                            _.error('Dimensions do not match!');\r\n                        }\r\n                    }\r\n                    else if(isMatrixA && isVectorB) {\r\n                        if(a.cols() === b.dimensions()) {\r\n                            a.eachElement(function(x, i, j) {\r\n                                return _.divide(x, b.elements[i].clone());\r\n                            });\r\n                            b = a;\r\n                        }\r\n                        else {\r\n                            _.error('Unable to divide matrix by vector.');\r\n                        }\r\n                    }\r\n                }\r\n                return b;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Gets called when the parser finds the ^ operator. See this.add\r\n         * @param {Symbol} a\r\n         * @param {Symbol} b\r\n         * @returns {Symbol}\r\n         */\r\n        this.pow = function(a, b) { \r\n            var aIsSymbol = isSymbol(a),\r\n                bIsSymbol = isSymbol(b);\r\n            if(aIsSymbol && bIsSymbol) {  \r\n                //handle infinity\r\n                if(a.isInfinity || b.isInfinity) {\r\n                    if(a.isInfinity && b.isInfinity)\r\n                        throw new UndefinedError('('+a+')^('+b+') is undefined!');\r\n                    \r\n                    if(a.isConstant() && b.isInfinity) { \r\n                        if(a.equals(0)) {\r\n                            if(b.lessThan(0))\r\n                                throw new UndefinedError('0^Infinity is undefined!');\r\n                            return new Symbol(0);\r\n                        }\r\n                        if(a.equals(1))\r\n                            throw new UndefinedError('1^'+b.toString()+' is undefined!');\r\n                        //a^-oo\r\n                        if(b.lessThan(0))\r\n                            return new Symbol(0);\r\n                        //a^oo\r\n                        if(!a.lessThan(0))\r\n                            return Symbol.infinity();\r\n                    }\r\n                        \r\n                    if(a.isInfinity && b.isConstant()) { \r\n                        if(b.equals(0))\r\n                            throw new UndefinedError(a+'^0 is undefined!');\r\n                        if(b.lessThan(0))\r\n                            return new Symbol(0);\r\n                        return _.multiply(Symbol.infinity(), _.pow(new Symbol(a.sign()), b.clone()));\r\n                    }\r\n                }\r\n                    \r\n                var aIsZero = a.equals(0);\r\n                if(aIsZero && b.equals(0)) err('0^0 is undefined!');\r\n                //return 0 right away if possible\r\n                if(aIsZero && b.isConstant() && b.multiplier.greaterThan(0))\r\n                    return new Symbol(0);\r\n                \r\n                var bIsConstant = b.isConstant(),\r\n                    aIsConstant = a.isConstant(), \r\n                    bIsInt = b.isInteger(),\r\n                    m = a.multiplier,\r\n                    result = a.clone();\r\n                if(aIsConstant && bIsConstant && a.equals(0) && b.lessThan(0))\r\n                    throw new UndefinedError('Division by zero is not allowed!');\r\n                \r\n                //compute imaginary numbers right away\r\n                if(Settings.PARSE2NUMBER && aIsConstant && bIsConstant && a.sign() < 0 && evenFraction(b)) { \r\n                    var k, re, im;\r\n                    k = Math.PI*b;\r\n                    re = new Symbol(Math.cos(k));\r\n                    im = _.multiply(Symbol.imaginary(), new Symbol(Math.sin(k)));\r\n                    return _.add(re, im);\r\n                }\r\n                \r\n                //imaginary number under negative nthroot or to the n\r\n                if(Settings.PARSE2NUMBER && a.isImaginary() && bIsConstant) { \r\n                    var re, im, r, theta, nre, nim;\r\n                    re = a.realpart();\r\n                    im = a.imagpart();\r\n                    if(re.isConstant('all') && im.isConstant('all')) {\r\n                        theta = new Symbol(Math.atan2(im, re)*b);\r\n                        r = _.pow(Symbol.hyp(re, im), b); \r\n                        nre = _.multiply(r.clone(), _.trig.cos(theta.clone()));\r\n                        nim = _.multiply(r, _.trig.sin(theta));\r\n                        return _.add(nre, _.multiply(Symbol.imaginary(), nim));\r\n                    }\r\n                }\r\n                /*\r\n                if(a.isImaginary() && bIsConstant && b.multiplier.num.abs().equals(1) && !b.multiplier.den.equals(1)) { \r\n                    var sign = b.sign();\r\n                    b = abs(b);\r\n                    var p, re, im, theta, n, ai, bi, di, ei, ii, th;\r\n                    p = Symbol.toPolarFormArray(a);\r\n                    theta = _.multiply(b.clone(), arg(a));\r\n                    di = _.pow(p[0], b);\r\n                    ai = _.trig.cos(theta.clone());\r\n                    bi = _.trig.sin(theta);\r\n                        \r\n                    if(sign < 0) {\r\n                        re = _.divide(ai, di.clone());\r\n                        im = _.divide(bi, di);\r\n                    }\r\n                    else {\r\n                        re = _.multiply(ai, di.clone());\r\n                        im = _.multiply(bi, di);\r\n                    }\r\n                    return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n                }\r\n                */\r\n                \r\n                //take care of the symbolic part\r\n                result.toUnitMultiplier();\r\n                //simpifly sqrt\r\n                if(result.group === FN && result.fname === SQRT && !bIsConstant) { \r\n                    var s = result.args[0];\r\n                    s.multiplyPower(new Symbol(0.5));\r\n                    s.multiplier.multiply(result.multiplier);\r\n                    s.multiplyPower(b);\r\n                    result = s; \r\n                }\r\n                else { \r\n                    var sign = m.sign();\r\n                    //handle cases such as (-a^3)^(1/4)\r\n                    if(evenFraction(b) && sign < 0) {\r\n                        //swaperoo\r\n                        //first put the sign back on the symbol\r\n                        result.negate();\r\n                        //wrap it in brackets\r\n                        result = _.symfunction(PARENTHESIS, [result]);\r\n                        //move the sign back the exterior and let nerdamer handle the rest\r\n                        result.negate();\r\n                    }\r\n                    result.multiplyPower(b);\r\n                }\r\n\r\n                if(aIsConstant && bIsConstant && Settings.PARSE2NUMBER) { \r\n                    var c;\r\n                    //remove the sign\r\n                    if(sign < 0) {\r\n                        a.negate();\r\n                        if(b.multiplier.den.equals(2)) \r\n                            //we know that the numerator has to be odd and therefore it's i\r\n                            c = new Symbol(Settings.IMAGINARY);\r\n                        else if(isInt(b.multiplier)) {\r\n                            if(even(b.multiplier))\r\n                                c = new Symbol(1);\r\n                            else \r\n                                c = new Symbol(-1);\r\n                        }\r\n                        else if(!even(b.multiplier.den)) {\r\n                            sign = Math.pow(sign, b.multiplier.num);\r\n                            c = new Symbol(Math.pow(a, b)*sign);\r\n                        }\r\n                        else {\r\n                            c = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\r\n                        }\r\n                            \r\n                    }\r\n\r\n                    result = new Symbol(Math.pow(a.multiplier.toDecimal(), b.multiplier.toDecimal()));\r\n                    //result = new Symbol(Math2.bigpow(a.multiplier, b.multiplier));\r\n                    //put the back sign\r\n                    if(c)\r\n                        result = _.multiply(result, c);\r\n                }\r\n                else if(bIsInt && !m.equals(1)) { \r\n                    var p = b.multiplier.toDecimal();\r\n                    var sgn = Math.sign(p);\r\n                    p = Math.abs(p);\r\n                    var multiplier = new Frac(1); \r\n                    multiplier.num = m.num.pow(p);\r\n                    multiplier.den = m.den.pow(p);\r\n                    if(sgn < 0)\r\n                        multiplier.invert();\r\n                    //multiplying is justified since after mulltiplyPower if it was of group P it will now be of group N\r\n                    result.multiplier = result.multiplier.multiply(multiplier);\r\n                }\r\n                else { \r\n                    var sign = a.sign();\r\n                    if(b.isConstant() && a.isConstant() && !b.multiplier.den.equals(1) && sign < 0 ) { \r\n                        //we know the sign is negative so if the denominator for b == 2 then it's i\r\n                        if(b.multiplier.den.equals(2)) {\r\n                            var i = new Symbol(Settings.IMAGINARY);\r\n                            a.negate();//remove the sign\r\n                            //if the power is negative then i is negative\r\n                            if(b.lessThan(0)) {\r\n                                i.negate();\r\n                                b.negate();//remove the sign from the power\r\n                            }\r\n                            //pull the power normally and put back the imaginary\r\n                            result = _.multiply(_.pow(a, b), i);\r\n                        }\r\n                        else { \r\n                            var aa = a.clone();\r\n                            aa.multiplier.negate();\r\n                            result = _.pow(_.symfunction(PARENTHESIS, [new Symbol(-1)]), b.clone()); \r\n                            var _a = _.pow(new Symbol(aa.multiplier.num), b.clone());\r\n                            var _b = _.pow(new Symbol(aa.multiplier.den), b.clone());\r\n                            var r = _.divide(_a, _b);\r\n                            result = _.multiply(result, r);\r\n                        }  \r\n                    }\r\n                    else if(Settings.PARSE2NUMBER && b.isImaginary()) {\r\n                        //4^(i + 2) = e^(- (2 - 4 i) π n + (2 + i) log(4))\r\n                        var re, im, aa, a1, b1, c1;\r\n                        aa = a.clone().toLinear();\r\n                        re = b.realpart();\r\n                        im = b.imagpart();\r\n                        a1 = _.pow(aa.clone(), re);\r\n                        b1 = trig.cos(_.multiply(im.clone(), log(aa.clone())));\r\n                        c1 = _.multiply(trig.sin(_.multiply(im, log(aa))), Symbol.imaginary());\r\n                        result = _.multiply(a1, _.add(b1, c1));\r\n                        result = _.expand(_.parse(result));\r\n                    }\r\n                    else { \r\n                        //b is a symbol\r\n                        var neg_num = a.group === N && sign < 0,\r\n                            num = testSQRT(new Symbol(neg_num ? m.num : Math.abs(m.num)).setPower(b.clone())),\r\n                            den = testSQRT(new Symbol(m.den).setPower(b.clone()).invert());  \r\n\r\n                        //eliminate imaginary if possible\r\n                        if(a.imaginary) { \r\n                            if(bIsInt) {\r\n                                var s, p, n;\r\n                                s = Math.sign(b);\r\n                                p = abs(b);\r\n                                n = p%4;\r\n                                result = new Symbol(even(n) ? -1 : Settings.IMAGINARY);\r\n                                if(n === 0 || s < 0 && (n === 1) || s > 0 && (n === 3)) {\r\n                                    result.negate();\r\n                                }\r\n                            }\r\n                            else {\r\n                                //assume i = sqrt(-1) -> (-1)^(1/2)\r\n                                var nr = b.multiplier.multiply(Frac.quick(1, 2)),\r\n                                    //the denominator denotes the power so raise to it. It will turn positive it round\r\n                                    tn = Math.pow(-1, nr.num);\r\n                                result = even(nr.den) ? new Symbol(-1).setPower(nr, true) : new Symbol(tn);\r\n                            }\r\n                        } \r\n                        //ensure that the sign is carried by the symbol and not the multiplier\r\n                        //this enables us to check down the line if the multiplier can indeed be transferred\r\n                        if(sign < 0 && !neg_num) result.negate();\r\n                        \r\n                        //retain the absolute value\r\n                        if(bIsConstant && a.group !== EX) { \r\n                            var evenr = even(b.multiplier.den),\r\n                                evenp = even(a.power),\r\n                                n = result.power.toDecimal(),\r\n                                evennp = even(n);\r\n                            if(evenr && evenp && !evennp) {\r\n                                if(n === 1 ) result = _.symfunction(ABS, [result]);\r\n                                else if(!isInt(n)) {\r\n                                    var p = result.power;\r\n                                    result = _.symfunction(ABS, [result.toLinear()]).setPower(p);\r\n                                }\r\n                                else {\r\n                                    result = _.multiply(_.symfunction(ABS, [result.clone().toLinear()]), \r\n                                        result.clone().setPower(new Frac(n-1)));\r\n                                }\r\n                                //quick workaround. Revisit\r\n                                if(Settings.POSITIVE_MULTIPLIERS && result.fname === ABS)\r\n                                    result = result.args[0];\r\n                            }\r\n                        }   \r\n                    }   \r\n                }\r\n\r\n                result = testSQRT(result);\r\n                //don't multiply until we've tested the remaining symbol\r\n                if(num && den)\r\n                    result = _.multiply(result, testPow(_.multiply(num, den)));\r\n\r\n                //reduce square root\r\n                if(result.fname === SQRT) { \r\n                    var isEX = result.group === EX;\r\n                    var t = isEX ? result.power.multiplier.toString() : result.power.toString();\r\n                    if(even(t)) { \r\n                        var pt = isEX ? _.divide(result.power, new Symbol(2)) : new Symbol(result.power.divide(new Frac(2))),\r\n                            m = result.multiplier;\r\n                        result = _.pow(result.args[0], pt);\r\n                        result.multiplier = result.multiplier.multiply(m);\r\n                    }\r\n                }\r\n                //detect Euler's identity\r\n                else if(!Settings.IGNORE_E && result.isE() && result.group === EX && result.power.contains('pi') \r\n                        && result.power.contains(Settings.IMAGINARY)) {\r\n                    //we have a match\r\n                    var m1 = result.multiplier,\r\n                        m2 = result.power.multiplier;\r\n                    result = new Symbol(even(m2.num) ? m1 : m1.negate());\r\n                    result = _.pow(result, new Symbol(m2.den).invert());\r\n                }\r\n                return result;\r\n            }\r\n            else {\r\n                if(isVector(a) && bIsSymbol) {\r\n                    a = a.map(function(x) {\r\n                        return _.pow(x, b.clone());\r\n                    });\r\n                }\r\n                else if(isMatrix(a) && bIsSymbol) {\r\n                    a.eachElement(function(x) {\r\n                        return _.pow(x, b.clone());\r\n                    });\r\n                }\r\n                return a;\r\n            }\r\n        };\r\n        \r\n        //gets called when the parser finds the , operator. \r\n        this.comma = function(a, b) { \r\n            var aIsArray = (a instanceof Array),\r\n                bIsArray = (b instanceof Array),\r\n                aHasSubArray = (aIsArray && a[0] instanceof Array);\r\n\r\n            if ( (aIsArray && aHasSubArray) || (aIsArray && !bIsArray) ) a.push(b);\r\n            else a = [a,b];\r\n            return a;\r\n        };\r\n        \r\n        //the equality setter\r\n        this.equals = function(a, b) {\r\n            //equality can only be set for group S so complain it's not\r\n            if(a.group !== S && !a.isLinear())\r\n                err('Cannot set equality for '+a.toString());\r\n            VARS[a.value] = b.clone();\r\n            return b;\r\n        };\r\n        \r\n        //modulus\r\n        this.mod_or_percent = function(a, b) {\r\n            if(a && b)\r\n                return mod(a, b);\r\n            return _.percent(b);\r\n        };\r\n        \r\n        //percent\r\n        this.percent = function(a) {\r\n            return _.divide(a, new Symbol(100));\r\n        };\r\n        \r\n        this.percent_add = function(a, b) {\r\n            return _.add(_.percent(a), b);\r\n        };\r\n        \r\n        this.percent_subtract = function(a, b) {\r\n            return _.subtract(_.percent(a), b);\r\n        };\r\n        //function to quickly convert bools to Symbols\r\n        var bool2Symbol = function(x) {\r\n            return new Symbol(x === true ? 1 : 0);\r\n        };\r\n        //check for equality\r\n        this.eq = function(a, b) {\r\n            return bool2Symbol(a.equals(b));\r\n        };\r\n        //checks for greater than\r\n        this.gt = function(a, b) {\r\n            return bool2Symbol(a.gt(b));\r\n        };\r\n        //checks for greater than equal\r\n        this.gte = function(a, b) {\r\n            return bool2Symbol(a.gte(b));\r\n        };\r\n        //checks for less than\r\n        this.lt = function(a, b) {\r\n            return bool2Symbol(a.lt(b));\r\n        };\r\n        //checks for less than equal\r\n        this.lte = function(a, b) {\r\n            return bool2Symbol(a.lte(b));\r\n        };\r\n        //wraps the factorial\r\n        this.factorial = function(a) {\r\n            return this.symfunction(FACTORIAL, [a]);\r\n        };\r\n        //wraps the double factorial\r\n        this.dfactorial = function(a) {\r\n            return this.symfunction(DOUBLEFACTORIAL, [a]);\r\n        };\r\n        //wacky fix for factorial with prefixes\r\n        this.factadd = function(a, b) {\r\n            return _.add(this.symfunction(FACTORIAL, [a]), b);\r\n        };\r\n        this.dfactadd = function(a, b) {\r\n            return _.add(this.symfunction(DOUBLEFACTORIAL, [a]), b);\r\n        };\r\n        this.factsub = function(a, b) {\r\n            return _.subtract(this.symfunction(FACTORIAL, [a]), b);\r\n        };\r\n        this.dfactsub = function(a, b) {\r\n            return _.subtract(this.symfunction(DOUBLEFACTORIAL, [a]), b);\r\n        };\r\n    };\r\n    \r\n    /* \"STATIC\" */\r\n    //converts a number to a fraction. \r\n    var Fraction = {\r\n        /**\r\n         * Converts a decimal to a fraction\r\n         * @param {number} value\r\n         * @param {object} opts\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        convert: function( value, opts ) { \r\n            var frac;\r\n            if( value === 0 ) {\r\n                frac = [ 0, 1];\r\n            }\r\n            else {\r\n                if( value < 1e-6 || value > 1e20) {\r\n                    var qc = this.quickConversion( Number(value) );\r\n                    if( qc[1] <= 1e20 ) { \r\n                        var abs = Math.abs( value );\r\n                        var sign = value/abs;\r\n                        frac = this.fullConversion( abs.toFixed( (qc[1]+'').length-1 ));\r\n                        frac[0] = frac[0]*sign;\r\n                    }\r\n                    else {\r\n                        frac = qc;\r\n                    }\r\n                }\r\n                else {\r\n                    frac = this.fullConversion( value );\r\n                }\r\n            }\r\n            return frac;\r\n        },\r\n        /**\r\n         * If the fraction is too small or too large this gets called instead of fullConversion method\r\n         * @param {number} dec\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        quickConversion: function(dec) {\r\n            var x = (dec.toExponential()+'').split('e');\r\n            var d = x[0].split('.')[1];// get the number of places after the decimal\r\n            var l = d ? d.length : 0; // maybe the coefficient is an integer;\r\n            //call Math.round to avoid rounding error\r\n            return [Math.round(Math.pow(10,l)*x[0]), Math.pow(10, Math.abs(x[1])+l)];\r\n        },\r\n        /**\r\n         * Returns a good approximation of a fraction. This method gets called by convert\r\n         * http://mathforum.org/library/drmath/view/61772.html\r\n         * Decimal To Fraction Conversion - A Simpler Version\r\n         * Dr Peterson\r\n         * @param {number} dec\r\n         * @returns {Array} - an array containing the denominator and the numerator\r\n         */\r\n        fullConversion: function( dec ) {\r\n            var done = false;\r\n            //you can adjust the epsilon to a larger number if you don't need very high precision\r\n            var n1 = 0, d1 = 1, n2 = 1, d2 = 0, n = 0, q = dec, epsilon = 1e-16;\r\n            while(!done) {\r\n                n++;\r\n                if( n > 10000 ){\r\n                    done = true;\r\n                }\r\n                var a = Math.floor(q);\r\n                var num = n1 + a * n2;\r\n                var den = d1 + a * d2;\r\n                var e = (q - a);\r\n                if( e < epsilon) {\r\n                    done = true;\r\n                }\r\n                q = 1/e;\r\n                n1 = n2; d1 = d2; n2 = num; d2 = den;\r\n                if(Math.abs(num/den-dec) < epsilon || n > 30) {\r\n                    done = true;\r\n                }\r\n            }\r\n            return [num, den];\r\n        }\r\n    };\r\n\r\n    //Depends on Fraction\r\n    //The latex generator\r\n    var LaTeX = {\r\n        space: '~',\r\n        dot: ' \\\\cdot ',\r\n        //grab a list of supported functions but remove the excluded ones found in exclFN\r\n        \r\n        latex: function(symbol, option) { \r\n            //it might be an array\r\n            if(symbol.clone)\r\n                symbol = symbol.clone(); //leave original as-is\r\n            \r\n            if(isArray(symbol)) {\r\n                var LaTeXArray = [];\r\n                for(var i=0; i<symbol.length; i++) {\r\n                    var sym = symbol[i];\r\n                    //This way I can generate LaTeX on an array of strings.\r\n                    if(!isSymbol(sym))\r\n                        sym = _.parse(sym);\r\n                    LaTeXArray.push(this.latex(sym));\r\n                }\r\n                return this.brackets(LaTeXArray.join(', '), 'square');\r\n            }\r\n            \r\n            if(isMatrix(symbol)) {\r\n                var TeX = '\\\\begin{pmatrix}\\n';\r\n                for(var i=0; i<symbol.elements.length; i++) {\r\n                    var rowTeX = [],\r\n                        e = symbol.elements[i];\r\n                    for(var j=0; j<e.length; j++) {\r\n                        rowTeX.push(this.latex(e[j]));\r\n                    }\r\n                    TeX += rowTeX.join(' & ');\r\n                    if (i<symbol.elements.length-1){    \r\n                        TeX+='\\\\\\\\\\n';\r\n                    }\r\n                }\r\n                TeX += '\\\\end{pmatrix}';\r\n                return TeX;\r\n            }\r\n\r\n            if (isVector(symbol)) {\r\n                var TeX = '\\\\left[';\r\n                for (var i = 0; i < symbol.elements.length; i++){\r\n                    TeX += this.latex(symbol.elements[i]) + ' ' + (i!==symbol.elements.length-1 ? ',\\\\,' : '');\r\n                }\r\n                TeX += '\\\\right]';\r\n                return TeX;\r\n            }\r\n\r\n            symbol = symbol.clone();\r\n            var decimal = option === 'decimal',\r\n                power = symbol.power,\r\n                invert = isNegative(power),\r\n                negative = symbol.multiplier.lessThan(0);\r\n\r\n            if(symbol.group === P && decimal) {\r\n                return String(symbol.multiplier.toDecimal()*Math.pow(symbol.value, symbol.power.toDecimal()));\r\n            }\r\n            else {\r\n                symbol.multiplier = symbol.multiplier.abs();\r\n\r\n                    //if the user wants the result in decimal format then return it as such by placing it at the top part\r\n                var m_array;\r\n\r\n                if(decimal) {\r\n                    var m = String(symbol.multiplier.toDecimal());\r\n                    if(m == '1' && !decimal) m = '';\r\n                    m_array = [m, ''];\r\n                }\r\n                else {\r\n                    m_array = [symbol.multiplier.num, symbol.multiplier.den];\r\n                }\r\n                    //get the value as a two part array\r\n                var v_array = this.value(symbol, invert, option, negative),\r\n                    p;    \r\n                //make it all positive since we know whether to push the power to the numerator or denominator already.\r\n                if(invert) power.negate();\r\n                //the power is simple since it requires no additional formatting. We can get it to a\r\n                //string right away. pass in true to neglect unit powers\r\n                if(decimal)  { \r\n                    p = isSymbol(power) ? LaTeX.latex(power, option) : String(power.toDecimal());\r\n                    if(p == '1') p = '';\r\n                }\r\n                //get the latex representation\r\n                else if(isSymbol(power)) p = this.latex(power, option);\r\n                //get it as a fraction\r\n                else p = this.formatFrac(power, true);\r\n                //use this array to specify if the power is getting attached to the top or the bottom\r\n                var p_array = ['', ''],\r\n                    //stick it to the top or the bottom. If it's negative then the power gets placed on the bottom\r\n                    index = invert ? 1 : 0;\r\n                p_array[index] = p;\r\n\r\n                //special case group P and decimal\r\n                var retval = (negative ? '-': '')+this.set(m_array, v_array, p_array, symbol.group === CB);\r\n\r\n                return retval.replace(/\\+\\-/gi, '-');\r\n            }\r\n                \r\n        },\r\n        //greek mapping\r\n        greek: {\r\n            alpha:      '\\\\alpha',\r\n            beta:       '\\\\beta',\r\n            gamma:      '\\\\gamma',\r\n            delta:      '\\\\delta',\r\n            epsilon:    '\\\\epsilon',\r\n            zeta:       '\\\\zeta',\r\n            eta:        '\\\\eta',\r\n            theta:      '\\\\theta',\r\n            iota:       '\\\\iota',\r\n            kappa:      '\\\\kappa',\r\n            lambda:     '\\\\lambda',\r\n            mu:         '\\\\mu',\r\n            nu:         '\\\\nu',\r\n            xi:         '\\\\xi',\r\n            omnikron:   '\\\\omnikron',\r\n            pi:         '\\\\pi',\r\n            rho:        '\\\\rho',\r\n            sigma:      '\\\\sigma',\r\n            tau:        '\\\\tau',\r\n            upsilon:    '\\\\upsilon',\r\n            phi:        '\\\\phi',\r\n            chi:        '\\\\chi',\r\n            psi:        '\\\\psi',\r\n            omega:      '\\\\omega',\r\n            Gamma:      '\\\\Gamma',\r\n            Delta:      '\\\\Delta',\r\n            Epsilon:    '\\\\Epsilon',\r\n            Theta:      '\\\\Theta',\r\n            Lambda:     '\\\\Lambda',\r\n            Xi:         '\\\\Xi',\r\n            Pi:         '\\\\Pi',\r\n            Sigma:      '\\\\Sigma',\r\n            Phi:        '\\\\Phi',\r\n            Psi:        '\\\\Psi',\r\n            Omega:      '\\\\Omega'\r\n        },\r\n        //get the raw value of the symbol as an array\r\n        value: function(symbol, inverted, option, negative) { \r\n            var group = symbol.group,\r\n                previousGroup = symbol.previousGroup,\r\n                v = ['', ''],\r\n                index =  inverted ? 1 : 0; \r\n            /*if(group === N) //do nothing since we want to return top & bottom blank; */\r\n            if(symbol.isInfinity) {\r\n                v[index] = '\\\\infty';\r\n            }\r\n            else if(group === S || group === P || previousGroup === S || previousGroup === P || previousGroup === N) { \r\n                var value = symbol.value; \r\n                if(value.replace) \r\n                    value = value.replace(/(.+)_$/, '$1\\\\_');\r\n                //split it so we can check for instances of alpha as well as alpha_b\r\n                var t_varray = String(value).split('_'); \r\n                var greek = this.greek[t_varray[0]];\r\n                if(greek) {\r\n                    t_varray[0] = greek;\r\n                    value = t_varray.join('_');\r\n                }\r\n                v[index] = value;\r\n            }\r\n            else if(group === FN || previousGroup === FN) { \r\n                var name,\r\n                    input = [],\r\n                    fname = symbol.fname;\r\n                //collect the arguments\r\n                for(var i=0; i<symbol.args.length; i++) {\r\n                    var arg = symbol.args[i], item;\r\n                    if(typeof arg === 'string')\r\n                        item = arg;\r\n                    else\r\n                        item = this.latex(arg, option);\r\n                    input.push(item);\r\n                }\r\n\r\n                if(fname === SQRT) {\r\n                    v[index] = '\\\\sqrt'+this.braces(input.join(','));\r\n                }\r\n                else if(fname === ABS) {\r\n                    v[index] = this.brackets(input.join(','), 'abs');\r\n                }\r\n                else if(fname === PARENTHESIS) { \r\n                    v[index] = this.brackets(input.join(','), 'parens');\r\n                }\r\n                else if(fname === 'limit') {\r\n                    v[index] = ' \\\\lim\\\\limits_{'+input[1]+' \\\\to '+input[2]+'} '+input[0];\r\n                }\r\n                else if(fname === 'integrate') {\r\n                    v[index] = '\\\\int'+this.braces(input[0])+this.braces('d'+input[1]);\r\n                }\r\n                else if(fname === 'defint') {\r\n                    v[index] = '\\\\int\\\\limits_'+this.braces(input[1])+'^'+this.braces(input[2])+' '+input[0]+' d'+input[3];\r\n                }\r\n                else if(fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\r\n                    var arg = symbol.args[0];\r\n                    if(arg.power.equals(1) && (arg.isComposite() || arg.isCombination())) {\r\n                        input[0] = this.brackets(input[0]);\r\n                    }\r\n                    v[index] = input[0]+(fname === FACTORIAL ? '!' : '!!');\r\n                }\r\n                else if(fname === 'floor') {\r\n                    v[index] = '\\\\left \\\\lfloor'+this.braces(input[0])+'\\\\right \\\\rfloor';\r\n                }\r\n                else if(fname === 'ceil') {\r\n                    v[index] = '\\\\left \\\\lceil'+this.braces(input[0])+'\\\\right \\\\rceil';\r\n                }\r\n                //capture log(a, b)\r\n                else if(fname === 'log' && input.length > 1) {\r\n                    v[index] = '\\\\mathrm'+this.braces('log')+'_'+this.braces(input[1])+this.brackets(input[0]);\r\n                }\r\n                //capture log(a, b)\r\n                else if(fname === 'log10') {\r\n                    v[index] = '\\\\mathrm'+this.braces('log')+'_'+this.braces(10)+this.brackets(input[0]);\r\n                }\r\n                else if(fname === 'sum') {\r\n                    var a = input[0],\r\n                        b = input[1],\r\n                        c = input[2],\r\n                        d = input[3];\r\n                    v[index] = '\\\\sum\\\\limits_{'+this.braces(b)+'='+this.braces(c)+'}^'+this.braces(d)+' '+this.braces(a)+'';\r\n                }\r\n                else if(fname === 'product') {\r\n                    var a = input[0],\r\n                        b = input[1],\r\n                        c = input[2],\r\n                        d = input[3];\r\n                    v[index] = '\\\\prod\\\\limits_{'+this.braces(b)+'='+this.braces(c)+'}^'+this.braces(d)+' '+this.braces(a)+'';\r\n                }\r\n                else if(fname === 'nthroot') {\r\n                    v[index] = '\\\\sqrt['+input[1]+']'+this.braces(input[0]);\r\n                }\r\n                else if(fname === 'mod') {\r\n                    v[index] = input[0]+' \\\\bmod '+input[1];\r\n                }\r\n                else if(fname === 'realpart') { \r\n                    v[index] = '\\\\operatorname{Re}'+this.brackets(input[0]);\r\n                }\r\n                else if(fname === 'imagpart') { \r\n                    v[index] = '\\\\operatorname{Im}'+this.brackets(input[0]);\r\n                }\r\n                else { \r\n                    var name = fname!=='' ? '\\\\mathrm'+this.braces(fname.replace(/_/g, '\\\\_')) : '';\r\n                    v[index] = name+this.brackets(input.join(','), 'parens');\r\n                }  \r\n            }\r\n            else if(symbol.isComposite()) { \r\n                var collected = symbol.collectSymbols().sort(\r\n                        group === CP || previousGroup === CP ? \r\n                        function(a, b) { return b.group - a.group;}:\r\n                        function(a, b) { \r\n                            var x = isSymbol(a.power) ? -1 : a.power;\r\n                            var y = isSymbol(b.power) ? -1 : b.power;\r\n                            return y-x;\r\n                        }\r\n                    ),\r\n                    symbols = [],\r\n                    l = collected.length;\r\n                for(var i=0; i<l; i++) {\r\n                    symbols.push(LaTeX.latex(collected[i], option));\r\n                }\r\n                var value = symbols.join('+'); \r\n\r\n                v[index] = !(symbol.isLinear() && symbol.multiplier.equals(1)) || negative ? this.brackets(value, 'parens') : value;\r\n            }\r\n            else if(group === CB || previousGroup === EX || previousGroup === CB) { \r\n                if(group === CB)\r\n                    symbol.distributeExponent();\r\n                //this almost feels a little like cheating but I need to know if I should be wrapping the symbol\r\n                //in brackets or not. We'll do this by checking the value of the numerator and then comparing it \r\n                //to whether the symbol value is \"simple\" or not.\r\n                var denominator = [],\r\n                    numerator = [];\r\n                //generate a profile\r\n                var den_map = [], num_map = [], num_c = 0, den_c = 0;\r\n                var setBrackets = function(container, map, counter) {\r\n                    if(counter > 1 && map.length > 0) {\r\n                        var l = map.length;\r\n                        for(var i=0; i<l; i++) {\r\n                            var idx = map[i], item = container[idx];\r\n                            if(!(/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(item) || /^\\\\left\\(.+\\\\right\\)$/g.test(item))) {\r\n                                container[idx] = LaTeX.brackets(item, 'parens');\r\n                            }\r\n                        }\r\n                    }  \r\n                    return container;\r\n                };\r\n                \r\n                //generate latex for each of them\r\n                symbol.each(function(x) { \r\n                    var isDenom = isNegative(x.power),\r\n                        laTex;\r\n                    \r\n                    if(isDenom) { \r\n                        laTex = LaTeX.latex(x.invert(), option);\r\n                        den_c++;\r\n                        if(x.isComposite()) {\r\n                            if(symbol.multiplier.den != 1 && Math.abs(x.power) == 1) laTex = LaTeX.brackets(laTex, 'parens');\r\n                            den_map.push(denominator.length); //make a note of where the composite was found \r\n                        }\r\n                        \r\n                        denominator.push(laTex);\r\n                    }\r\n                    else {\r\n                        laTex = LaTeX.latex(x, option);\r\n                        num_c++;\r\n                        if(x.isComposite()) {\r\n                            if(symbol.multiplier.num != 1 && Math.abs(x.power) == 1) laTex = LaTeX.brackets(laTex, 'parens');\r\n                            num_map.push(numerator.length);   //make a note of where the composite was found \r\n                        }\r\n                        numerator.push(laTex);\r\n                    }\r\n                });\r\n\r\n                //apply brackets\r\n                setBrackets(numerator, num_map, num_c);\r\n                v[0] = numerator.join(this.dot); //collapse the numerator into one string\r\n\r\n                setBrackets(denominator, den_map, den_c);\r\n                v[1] = denominator.join(this.dot); \r\n            }\r\n\r\n            return v;\r\n        },\r\n        set: function(m, v, p, combine_power) { \r\n            var isBracketed = function(v) {\r\n                return /^\\\\left\\(.+\\\\right\\)$/.test(v);\r\n            };\r\n            //format the power if it exists\r\n            if(p) p = this.formatP(p);\r\n            //group CB will have to be wrapped since the power applies to both it's numerator and denominator\r\n            if(combine_power) {\r\n                //POSSIBLE BUG: If powers for group CB format wrong, investigate this since I might have overlooked something\r\n                //the assumption is that in every case the denonimator should be empty when dealing with CB. I can't think\r\n                //of a case where this isn't true\r\n                var tp = p[0];\r\n                p[0] = ''; //temporarily make p blank\r\n            }\r\n\r\n            //merge v and p. Not that v MUST be first since the order matters\r\n            v = this.merge(v, p);\r\n            var mn = m[0], md = m[1], vn = v[0], vd = v[1];\r\n            //filters\r\n            //if the top has a variable but the numerator is one drop it\r\n            if(vn && mn == 1) mn = '';\r\n            //if denominator is 1 drop it always\r\n            if(md == 1) md = ''; \r\n            //prepare the top portion but check that it's not already bracketed. If it is then leave out the cdot\r\n            var top = this.join(mn, vn, !isBracketed(vn) ? this.dot : '');\r\n\r\n            //prepare the bottom portion but check that it's not already bracketed. If it is then leave out the cdot\r\n            var bottom = this.join(md, vd, !isBracketed(vd) ? this.dot : '');\r\n            //format the power if it exists\r\n            //make it a fraction if both top and bottom exists\r\n            if(top && bottom) {\r\n                var frac = this.frac(top, bottom);\r\n                if(combine_power && tp) frac = this.brackets(frac)+tp; \r\n                return frac;\r\n            }\r\n            //otherwise only the top exists so return that\r\n            else return top;\r\n        },\r\n        merge: function(a, b) {\r\n            var r = [];\r\n            for(var i=0; i<2; i++) r[i] = a[i]+b[i];\r\n            return r;\r\n        },\r\n        //joins together two strings if both exist\r\n        join: function(n, d, glue) {\r\n            if(!n && !d) return '';\r\n            if(n && !d) return n;\r\n            if(d && !n) return d;\r\n            return n+glue+d;\r\n        },\r\n        formatP: function(p_array) {\r\n            for(var i=0; i<2; i++) {\r\n                var p = p_array[i];\r\n                if(p) p_array[i] = '^'+this.braces(p);\r\n            }\r\n            return p_array;    \r\n        },\r\n        /**\r\n         * formats the fractions accordingly.\r\n         * @param {Frac} f\r\n         * @param {bool} make_1_blank - let's the function know to return blank for denominators == 1\r\n         */ \r\n        formatFrac: function(f, is_pow) { \r\n            var n = f.num.toString(), \r\n                d = f.den.toString(); \r\n            //no need to have x^1\r\n            if(is_pow && n === '1' && d === '1') return '';\r\n            //no need to have x/1\r\n            if(d === '1') return n;\r\n            return this.frac(n, d);\r\n        },\r\n        frac: function(n, d) {\r\n            return '\\\\frac'+this.braces(n)+this.braces(d);\r\n        },\r\n        braces: function(e) {\r\n            return '{'+e+'}';\r\n        },\r\n        brackets: function(e, typ) {\r\n            typ = typ || 'parens';\r\n            var bracketTypes = {\r\n                parens: ['(', ')'],\r\n                square: ['[', ']'],\r\n                brace:  ['{', '}'],\r\n                abs:    ['|', '|'],\r\n                angle:  ['\\\\langle', '\\\\rangle']\r\n            };\r\n            var bracket = bracketTypes[typ];\r\n            return '\\\\left'+bracket[0]+e+'\\\\right'+bracket[1];\r\n        }\r\n    };\r\n    \r\n    function Vector(v) { \r\n        if(isVector(v)) this.elements = v.items.slice(0);\r\n        else if(isArray(v)) this.elements = v.slice(0);\r\n        else this.elements = [].slice.call(arguments);\r\n    }\r\n    \r\n    Vector.arrayPrefill = function(n, val) {\r\n        var a = [];\r\n        val = val || 0;\r\n        for(var i=0; i<n; i++) a[i] = val;\r\n        return a;\r\n    };\r\n    \r\n    Vector.fromArray = function(a) {\r\n        var v = new Vector();\r\n        v.elements = a;\r\n        return v;\r\n    };\r\n    \r\n    //Ported from Sylvester.js\r\n    Vector.prototype = {\r\n        custom: true,\r\n        // Returns element i of the vector\r\n        e: function(i) {\r\n            return (i < 1 || i > this.elements.length) ? null : this.elements[i-1];\r\n        },\r\n        \r\n        set: function(i, val) {\r\n            this.elements[i] = new Symbol(val);\r\n        },\r\n        \r\n        // Returns the number of elements the vector has\r\n        dimensions: function() {\r\n            return this.elements.length;\r\n        },\r\n\r\n        // Returns the modulus ('length') of the vector\r\n        modulus: function() {\r\n            return block('SAFE', function() {\r\n                return _.pow((this.dot(this.clone())), new Symbol(0.5));\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns true iff the vector is equal to the argument\r\n        eql: function(vector) {\r\n            var n = this.elements.length;\r\n            var V = vector.elements || vector;\r\n            if (n !== V.length) { return false; }\r\n            do {\r\n                if (Math.abs(_.subtract(this.elements[n-1],V[n-1]).valueOf()) > PRECISION) { return false; }\r\n            } while (--n);\r\n            return true;\r\n        },\r\n\r\n        // Returns a clone of the vector\r\n        clone: function() {\r\n            var V = new Vector(),\r\n                l = this.elements.length;\r\n            for(var i=0; i<l; i++) {\r\n                //Rule: all items within the vector must have a clone method.\r\n                V.elements.push(this.elements[i].clone());\r\n            }\r\n            \r\n            return V;\r\n        },\r\n\r\n        // Maps the vector to another vector according to the given function\r\n        map: function(fn) {\r\n            var elements = [];\r\n            this.each(function(x, i) {\r\n                elements.push(fn(x, i));\r\n            });\r\n            return new Vector(elements);\r\n        },\r\n\r\n        // Calls the iterator for each element of the vector in turn\r\n        each: function(fn) { \r\n            var n = this.elements.length, k=n, i;\r\n            do { \r\n                i = k-n;\r\n                fn(this.elements[i], i+1);\r\n            } while (--n);\r\n        },\r\n\r\n        // Returns a new vector created by normalizing the receiver\r\n        toUnitVector: function() {\r\n            return block('SAFE', function() {\r\n                var r = this.modulus();\r\n                if (r.valueOf() === 0) { return this.clone(); }\r\n                return this.map(function(x) { return _.divide(x, r); });\r\n            }, undefined, this);    \r\n        },\r\n\r\n        // Returns the angle between the vector and the argument (also a vector)\r\n        angleFrom: function(vector) {\r\n            return block('SAFE', function() {\r\n                var V = vector.elements || vector;\r\n                var n = this.elements.length;\r\n                if (n !== V.length) { return null; }\r\n                var dot = new Symbol(0), mod1 = new Symbol(0), mod2 = new Symbol(0);\r\n                // Work things out in parallel to save time\r\n                this.each(function(x, i) {\r\n                    dot = _.add(dot, _.multiply(x, V[i-1]));\r\n                    mod1 = _.add(mod1, _.multiply(x, x));//will not conflict in safe block\r\n                    mod2 = _.add(mod2, _.multiply(V[i-1], V[i-1]));//will not conflict in safe block\r\n                });\r\n                mod1 = _.pow(mod1, new Symbol(0.5)); mod2 = _.pow(mod2, new Symbol(0.5));\r\n                var product = _.multiply(mod1,mod2);\r\n                if(product.valueOf() === 0) { return null; }\r\n                var theta = _.divide(dot, product);\r\n                var theta_val = theta.valueOf();\r\n                if(theta_val < -1) { theta = -1; }\r\n                if (theta_val > 1) { theta = 1; }\r\n                return new Symbol(Math.acos(theta));\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns true iff the vector is parallel to the argument\r\n        isParallelTo: function(vector) {\r\n          var angle = this.angleFrom(vector).valueOf();\r\n          return (angle === null) ? null : (angle <= PRECISION);\r\n        },\r\n\r\n        // Returns true iff the vector is antiparallel to the argument\r\n        isAntiparallelTo: function(vector) {\r\n          var angle = this.angleFrom(vector).valueOf();\r\n          return (angle === null) ? null : (Math.abs(angle - Math.PI) <= Sylvester.precision);\r\n        },\r\n\r\n        // Returns true iff the vector is perpendicular to the argument\r\n        isPerpendicularTo: function(vector) {\r\n          var dot = this.dot(vector);\r\n          return (dot === null) ? null : (Math.abs(dot) <= Sylvester.precision);\r\n        },\r\n\r\n        // Returns the result of adding the argument to the vector\r\n        add: function(vector) {\r\n            return block('SAFE', function(){\r\n                var V = vector.elements || vector;\r\n                if (this.elements.length !== V.length) { return null; }\r\n                return this.map(function(x, i) { return _.add(x, V[i-1]); });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the result of subtracting the argument from the vector\r\n        subtract: function(vector) { \r\n            return block('SAFE', function(){\r\n                var V = vector.elements || vector;\r\n                if (this.elements.length !== V.length) { return null; }\r\n                return this.map(function(x, i) { return _.subtract(x, V[i-1]); });\r\n            }, undefined, this);\r\n        },\r\n\r\n        // Returns the result of multiplying the elements of the vector by the argument\r\n        multiply: function(k) {\r\n            return this.map(function(x) { return x.clone()*k.clone(); });\r\n        },\r\n\r\n        x: function(k) { return this.multiply(k); },\r\n\r\n        // Returns the scalar product of the vector with the argument\r\n        // Both vectors must have equal dimensionality\r\n        dot: function(vector) {\r\n            return block('SAFE', function() {\r\n                var V = vector.elements || vector;\r\n                var product = new Symbol(0), n = this.elements.length;\r\n                if (n !== V.length) { return null; }\r\n                do { product = _.add(product, _.multiply(this.elements[n-1], V[n-1])); } while (--n);\r\n                return product;\r\n            }, undefined, this);  \r\n        },\r\n\r\n        // Returns the vector product of the vector with the argument\r\n        // Both vectors must have dimensionality 3\r\n        cross: function(vector) {\r\n            var B = vector.elements || vector;\r\n            if(this.elements.length !== 3 || B.length !== 3) { return null; }\r\n            var A = this.elements;\r\n            return block('SAFE', function() {\r\n                return new Vector([\r\n                    _.subtract(_.multiply(A[1], B[2]), _.multiply(A[2], B[1])),\r\n                    _.subtract(_.multiply(A[2], B[0]), _.multiply(A[0], B[2])),\r\n                    _.subtract(_.multiply(A[0], B[1]), _.multiply(A[1], B[0]))\r\n                ]);\r\n            }, undefined, this);  \r\n        },\r\n\r\n        // Returns the (absolute) largest element of the vector\r\n        max: function() {\r\n            var m = 0, n = this.elements.length, k = n, i;\r\n            do { i = k - n;\r\n                if(Math.abs(this.elements[i].valueOf()) > Math.abs(m.valueOf())) { m = this.elements[i]; }\r\n            } while (--n);\r\n            return m;\r\n        },\r\n\r\n        // Returns the index of the first match found\r\n        indexOf: function(x) {\r\n            var index = null, n = this.elements.length, k = n, i;\r\n            do { \r\n                i = k-n;\r\n                if(index === null && this.elements[i].valueOf() === x.valueOf()) {\r\n                    index = i+1;\r\n                }\r\n            } while (--n);\r\n            return index;\r\n        },\r\n        text: function(x) {\r\n            return text(this);\r\n        },\r\n        toString: function() {\r\n            return this.text();\r\n        },\r\n        latex: function(option) {\r\n            var tex = [];\r\n            for(var i=0;i<this.elements.length;i++) {\r\n                tex.push(LaTeX.latex.call(LaTeX, this.elements[i], option));\r\n            }\r\n            return '['+tex.join(', ')+']';\r\n        }\r\n    };\r\n    \r\n    function Matrix() {\r\n        var m = arguments,\r\n            l = m.length, i, el = [];\r\n        if(isMatrix(m)) { //if it's a matrix then make a clone\r\n            for(i=0; i<l; i++) {\r\n                el.push(m[i].slice(0));\r\n            }\r\n        }\r\n        else {\r\n            var row, lw, rl;\r\n            for(i=0; i<l; i++) {\r\n                row = m[i];\r\n                if(isVector(row)) row = row.elements;\r\n                if(!isArray(row)) row = [row];\r\n                rl = row.length;\r\n                if(lw && lw !== rl) err('Unable to create Matrix. Row dimensions do not match!');\r\n                el.push(row);\r\n                lw = rl;\r\n            }\r\n        }\r\n        this.elements = el;\r\n    }\r\n    \r\n    Matrix.identity = function(n) {\r\n        var m = new Matrix();\r\n        for(var i=0; i<n; i++) {\r\n            m.elements.push([]);\r\n            for(var j=0; j<n; j++) {\r\n                m.set(i, j, i === j ? new Symbol(1) : new Symbol(0));\r\n            }\r\n        }\r\n        return m;\r\n    };\r\n\r\n    Matrix.fromArray = function(arr) {\r\n        function F(args) {\r\n            return Matrix.apply(this, args);\r\n        }\r\n        F.prototype = Matrix.prototype;\r\n\r\n        return new F(arr);\r\n    };\r\n    \r\n    Matrix.zeroMatrix = function(rows, cols) {\r\n        var m = new Matrix();\r\n        for(var i=0; i<rows; i++) {\r\n            m.elements.push(Vector.arrayPrefill(cols, new Symbol(0)));\r\n        }\r\n        return m;\r\n    };\r\n    \r\n    Matrix.prototype = {\r\n        //needs be true to let the parser know not to try to cast it to a symbol\r\n        custom: true, \r\n        get: function(row, column) {\r\n            if(!this.elements[row])\r\n                return undefined;\r\n            return this.elements[row][column];\r\n        },\r\n        set: function(row, column, value) { \r\n            if(!this.elements[row]) \r\n                this.elements[row] = [];\r\n            this.elements[row][column] = isSymbol(value) ? value : new Symbol(value);\r\n        },\r\n        cols: function() {\r\n            return this.elements[0].length;\r\n        },\r\n        rows: function() {\r\n            return this.elements.length;\r\n        },\r\n        row: function(n) {\r\n            if(!n || n > this.cols()) return [];\r\n            return this.elements[n-1];\r\n        },\r\n        col: function(n) {\r\n            var nr = this.rows(),\r\n                col = []; \r\n            if(n > this.cols() || !n) return col;\r\n            for(var i=0; i<nr; i++) {\r\n                col.push(this.elements[i][n-1]);\r\n            }\r\n            return col;\r\n        },\r\n        eachElement: function(fn) {\r\n            var nr = this.rows(),\r\n                nc = this.cols(), i, j;\r\n            for(i=0; i<nr; i++) {\r\n                for(j=0; j<nc; j++) {\r\n                    this.elements[i][j] = fn.call(this, this.elements[i][j], i, j);\r\n                }\r\n            }\r\n        },\r\n        //ported from Sylvester.js\r\n        determinant: function() {\r\n            if (!this.isSquare()) { return null; }\r\n            var M = this.toRightTriangular();\r\n            var det = M.elements[0][0], n = M.elements.length-1, k = n, i;\r\n            do { \r\n                i = k-n+1;\r\n                det = _.multiply(det,M.elements[i][i]);\r\n            } while (--n);\r\n            return det;\r\n        },\r\n        isSquare: function() {\r\n            return this.elements.length === this.elements[0].length;\r\n        },\r\n        isSingular: function() {\r\n            return this.isSquare() && this.determinant() === 0;\r\n        },\r\n        augment: function(m) {\r\n            var r = this.rows(), rr = m.rows();\r\n            if(r !== rr) err(\"Cannot augment matrix. Rows don't match.\");\r\n            for(var i=0; i<r; i++) {\r\n                this.elements[i] = this.elements[i].concat(m.elements[i]);\r\n            }\r\n            \r\n            return this;\r\n        },\r\n        clone: function() {\r\n            var r = this.rows(), c = this.cols(),\r\n                m = new Matrix();\r\n            for(var i=0; i<r; i++) {\r\n                m.elements[i] = [];\r\n                for(var j=0; j<c; j++) { \r\n                    var symbol = this.elements[i][j]; \r\n                    m.elements[i][j] = isSymbol(symbol) ? symbol.clone() : symbol;\r\n                }\r\n            }\r\n            return m;\r\n        },\r\n        //ported from Sylvester.js\r\n        invert: function() {\r\n            if(!this.isSquare()) err('Matrix is not square!');\r\n            return block('SAFE', function() {\r\n                var ni = this.elements.length, ki = ni, i, j;\r\n                var imatrix = Matrix.identity(ni);\r\n                var M = this.augment(imatrix).toRightTriangular(); \r\n                var np, kp = M.elements[0].length, p, els, divisor;\r\n                var inverse_elements = [], new_element;\r\n                // Matrix is non-singular so there will be no zeros on the diagonal\r\n                // Cycle through rows from last to first\r\n                do { \r\n                    i = ni-1;\r\n                    // First, normalise diagonal elements to 1\r\n                    els = []; np = kp;\r\n                    inverse_elements[i] = [];\r\n                    divisor = M.elements[i][i];\r\n                    do { \r\n                        p = kp - np;\r\n                        new_element = _.divide(M.elements[i][p], divisor.clone());\r\n                        els.push(new_element);\r\n                        // Shuffle of the current row of the right hand side into the results\r\n                        // array as it will not be modified by later runs through this loop\r\n                        if (p >= ki) { inverse_elements[i].push(new_element); }\r\n                    } while (--np);\r\n                    M.elements[i] = els;\r\n                    // Then, subtract this row from those above it to\r\n                    // give the identity matrix on the left hand side\r\n                    for (j=0; j<i; j++) {\r\n                      els = []; np = kp;\r\n                      do { p = kp - np; \r\n                        els.push(_.subtract(M.elements[j][p].clone(),_.multiply(M.elements[i][p].clone(), M.elements[j][i].clone())));\r\n                      } while (--np);\r\n                      M.elements[j] = els;\r\n                    }\r\n                } while (--ni);\r\n                return Matrix.fromArray(inverse_elements);\r\n            }, undefined, this);\r\n        },\r\n        //ported from Sylvester.js\r\n        toRightTriangular: function() {\r\n            return block('SAFE', function(){\r\n                var M = this.clone(), els, fel, nel, \r\n                    n = this.elements.length, k = n, i, np, kp = this.elements[0].length, p;\r\n                do { \r\n                    i = k-n;\r\n                    fel = M.elements[i][i]; \r\n                    if(fel.valueOf() === 0) {\r\n                        for(var j=i+1; j<k; j++) {\r\n                        nel = M.elements[j][i];\r\n                        if (nel && nel.valueOf() !== 0) {\r\n                            els = []; np = kp;\r\n                            do { \r\n                                p = kp-np; \r\n                                els.push(_.add(M.elements[i][p].clone(), M.elements[j][p].clone()));\r\n                            } while (--np);\r\n                            M.elements[i] = els;\r\n                            break;\r\n                        }\r\n                      }\r\n                    }\r\n                    var fel = M.elements[i][i]; \r\n                    if(fel.valueOf() !== 0) {\r\n                        for (j=i+1; j<k; j++) { \r\n                            var multiplier = _.divide(M.elements[j][i].clone(),M.elements[i][i].clone()); \r\n                            els = []; np = kp;\r\n                            do { p = kp - np;\r\n                                // Elements with column numbers up to an including the number\r\n                                // of the row that we're subtracting can safely be set straight to\r\n                                // zero, since that's the point of this routine and it avoids having\r\n                                // to loop over and correct rounding errors later\r\n                                els.push(p <= i ? new Symbol(0) : \r\n                                        _.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), multiplier.clone())));\r\n                            } while (--np);\r\n                            M.elements[j] = els;\r\n                        }\r\n                    }\r\n                } while (--n);\r\n\r\n                return M;  \r\n            }, undefined, this);     \r\n        },\r\n        transpose: function() {\r\n            var rows = this.elements.length, cols = this.elements[0].length;\r\n            var M = new Matrix(), ni = cols, i, nj, j;\r\n            \r\n            do { \r\n                i = cols - ni;\r\n                M.elements[i] = [];\r\n                nj = rows;\r\n                do { j = rows - nj;\r\n                    M.elements[i][j] = this.elements[j][i].clone();\r\n                } while (--nj);\r\n            } while (--ni);\r\n            return M;\r\n        },\r\n        // Returns true if the matrix can multiply the argument from the left\r\n        canMultiplyFromLeft: function(matrix) {\r\n          var l = isMatrix(matrix) ? matrix.elements.length : matrix.length;\r\n          // this.columns should equal matrix.rows\r\n          return (this.elements[0].length === l);\r\n        },\r\n        sameSize: function(matrix) {\r\n            return this.rows() === matrix.rows() && this.cols() === matrix.cols();\r\n        },\r\n        multiply: function(matrix) {    \r\n            return block('SAFE', function(){\r\n                var M = matrix.elements || matrix;\r\n                if (!this.canMultiplyFromLeft(M)) { \r\n                    if(this.sameSize(matrix)) {\r\n                        var MM = new Matrix();\r\n                        var rows = this.rows();\r\n                        for(var i=0; i<rows; i++) {\r\n                            var e = _.multiply(new Vector(this.elements[i]), new Vector(matrix.elements[i]));\r\n                            MM.elements[i] = e.elements;\r\n                        }\r\n                        return MM;\r\n                    }\r\n                    return null; \r\n                }\r\n                var ni = this.elements.length, ki = ni, i, nj, kj = M[0].length, j;\r\n                var cols = this.elements[0].length, elements = [], sum, nc, c;\r\n                do { \r\n                    i = ki-ni;\r\n                    elements[i] = [];\r\n                    nj = kj;\r\n                    do { \r\n                        j = kj - nj;\r\n                        sum = new Symbol(0);\r\n                        nc = cols;\r\n                        do { \r\n                            c = cols-nc;\r\n                            sum = _.add(sum, _.multiply(this.elements[i][c], M[c][j])) ;\r\n                        } while (--nc);\r\n                      elements[i][j] = sum;\r\n                    } while (--nj);\r\n                } while (--ni);\r\n                return Matrix.fromArray(elements);\r\n            }, undefined, this);\r\n        },\r\n        add: function(matrix) {\r\n            var M = new Matrix();\r\n            if(this.sameSize(matrix)) {\r\n                this.eachElement(function(e, i, j) {\r\n                    M.set(i, j, _.add(e.clone(), matrix.elements[i][j]));\r\n                });\r\n            }\r\n            return M;\r\n        },\r\n        subtract: function(matrix) {\r\n            var M = new Matrix();\r\n            if(this.sameSize(matrix)) {\r\n                this.eachElement(function(e, i, j) {\r\n                    M.set(i, j, _.subtract(e.clone(), matrix.elements[i][j]));\r\n                });\r\n            }\r\n            return M;\r\n        },\r\n        negate: function() {\r\n            this.each(function(e) {\r\n               return e.negate(); \r\n            });\r\n            return this;\r\n        },\r\n        toVector: function() {\r\n            if(this.rows () === 1 || this.cols() === 1) {\r\n                var v = new Vector();\r\n                v.elements = this.elements;\r\n                return v;\r\n            }\r\n            return this;\r\n        },\r\n        toString: function(newline) {\r\n            var l = this.rows(),\r\n                s = [];\r\n            newline = newline === undefined ? '\\n' : newline;\r\n            for(var i=0; i<l; i++) {\r\n                s.push('['+this.elements[i].map(function(x) {\r\n                    return x !== undefined ? x.toString() : '';\r\n                }).join(',')+']');\r\n            }\r\n            return 'matrix'+inBrackets(s.join(','));\r\n        },\r\n        text: function() {\r\n            return 'matrix('+this.toString('')+')';\r\n        },\r\n        latex: function(option) {\r\n            var cols = this.cols(), elements = this.elements; \r\n            return format('\\\\begin{vmatrix}{0}\\\\end{vmatrix}', function() {\r\n                var tex = []; \r\n                for(var row in elements) {\r\n                    var row_tex = [];\r\n                    for(var i=0; i<cols; i++) {\r\n                        row_tex.push(LaTeX.latex.call(LaTeX, elements[row][i], option));\r\n                    }\r\n                    tex.push(row_tex.join(' & '));\r\n                }\r\n                return tex.join(' \\\\cr ');\r\n            });\r\n        }\r\n    };\r\n    \r\n    //aliases\r\n    Matrix.prototype.each = Matrix.prototype.eachElement;\r\n    \r\n    /* END CLASSES */\r\n\r\n    /* FINALIZE */\r\n    var finalize = function() {\r\n        reserveNames(_.constants);\r\n        reserveNames(_.functions);\r\n        //generatePrimes(Settings.init_primes);//generate the firs 100 primes\r\n    };\r\n    \r\n    var build = Utils.build = function(symbol, arg_array) { \r\n        symbol = block('PARSE2NUMBER', function() {\r\n            return _.parse(symbol);\r\n        }, true);\r\n        var args = variables(symbol);\r\n        var supplements = [];\r\n        var ftext = function(symbol, xports) { \r\n            xports = xports || [];\r\n            var c = [],\r\n                group = symbol.group,\r\n                prefix = '';\r\n\r\n            var ftext_complex = function(group) {\r\n                var d = group === CB ? '*' : '+',\r\n                    cc = [];\r\n                \r\n                for(var x in symbol.symbols) {\r\n                    var sym = symbol.symbols[x],\r\n                        ft = ftext(sym, xports)[0];\r\n                    //wrap it in brackets if it's group PL or CP\r\n                    if(sym.isComposite())\r\n                        ft = inBrackets(ft);\r\n                    cc.push(ft);\r\n                }\r\n                var retval = cc.join(d);\r\n                retval = retval && !symbol.multiplier.equals(1) ? inBrackets(retval) : retval;\r\n                return retval;\r\n            },\r\n\r\n            ftext_function = function(bn) { \r\n                var retval;\r\n                if(bn in Math) retval = 'Math.'+bn;\r\n                else {\r\n                    if(supplements.indexOf(bn) === -1) { //make sure you're not adding the function twice\r\n                        //Math2 functions aren't part of the standard javascript\r\n                        //Math library and must be exported.\r\n                        xports.push('var '+bn+' = '+ Math2[bn].toString()+'; ');\r\n                        supplements.push(bn);\r\n                    }\r\n                    retval = bn;\r\n                }\r\n                retval = retval+inBrackets(symbol.args.map(function(x) {\r\n                    return ftext(x, xports)[0];\r\n                }).join(','));\r\n\r\n                return retval;\r\n            };\r\n\r\n            //the multiplier\r\n            if(group === N) \r\n                c.push(symbol.multiplier.toDecimal());\r\n            else if(symbol.multiplier.equals(-1)) \r\n                prefix = '-';\r\n            else if(!symbol.multiplier.equals(1)) \r\n                c.push(symbol.multiplier.toDecimal());\r\n            //the value\r\n            var value;\r\n            \r\n            if(group === S || group === P) value = symbol.value;\r\n            else if(group === FN) { \r\n                value = ftext_function(symbol.fname);\r\n            }\r\n            else if(group === EX) {\r\n                var pg = symbol.previousGroup;\r\n                if(pg === N || pg === S) value = symbol.value;\r\n                else if(pg === FN) value = ftext_function(symbol.fname);\r\n                else value = ftext_complex(symbol.previousGroup);\r\n            }\r\n            else {\r\n                value = ftext_complex(symbol.group);\r\n            }     \r\n\r\n            if(symbol.group !== N && !symbol.power.equals(1)) {\r\n                var pow = ftext(_.parse(symbol.power));\r\n                xports.push(pow[1]);\r\n                value = 'Math.pow'+inBrackets(value+','+pow[0]);\r\n            }\r\n\r\n            if(value) c.push(prefix+value);\r\n\r\n            return [c.join('*'), xports.join('').replace(/\\n+\\s+/g, ' ')];\r\n        };\r\n        if(arg_array) { \r\n            for(var i=0; i<args.length; i++) {\r\n                var arg = args[i];\r\n                if(arg_array.indexOf(arg) === -1) err(arg+' not found in argument array');\r\n            }\r\n            args = arg_array;\r\n        }\r\n        var f_array = ftext(symbol);\r\n        return new Function(args, f_array[1]+' return '+f_array[0]+';');\r\n    };\r\n    \r\n    finalize(); //final preparations\r\n    /* END FINALIZE */\r\n\r\n    /* BUILD CORE */\r\n    //This contains all the parts of nerdamer and enables nerdamer's internal functions\r\n    //to be used.\r\n    var C = {\r\n        Operator: Operator,\r\n        groups: Groups,\r\n        Symbol: Symbol,\r\n        Expression: Expression,\r\n        Frac: Frac,\r\n        Vector: Vector,\r\n        Matrix: Matrix,\r\n        Parser: Parser,\r\n        Fraction: Fraction,\r\n        Math2: Math2,\r\n        LaTeX: LaTeX,\r\n        Utils: Utils,\r\n        PARSER: _,\r\n        PARENTHESIS: PARENTHESIS, \r\n        Settings: Settings,\r\n        err: err,\r\n        bigInt: bigInt,\r\n        exceptions: {\r\n            DivisionByZero: DivisionByZero,\r\n            ParseError: ParseError,\r\n            UndefinedError: UndefinedError, \r\n            MaximumIterationsReached: MaximumIterationsReached\r\n        }\r\n    };\r\n    \r\n    //provide a mechanism for accessing functions directly\r\n    //Not yet complete!!! Some functions will return undefined. This can maybe \r\n    //just remove the function object at some point when all functions are eventually\r\n    //housed in the global function object.\r\n    C.Utils.importFunctions = function() {\r\n        var o = {};\r\n        for(var x in _.functions)\r\n            o[x] = _.functions[x][0];\r\n        return o;\r\n    };\r\n    //TODO: fix \r\n    if(!_.error)\r\n        _.error = err;\r\n    /* END BUILD CORE */\r\n\r\n    \r\n    /* EXPORTS */\r\n    /**\r\n     * \r\n     * @param {String} expression the expression to be evaluated\r\n     * @param {Object} subs the object containing the variable values\r\n     * @param {Integer} location a specific location in the equation list to \r\n     * insert the evaluated expression\r\n     * @param {String} option additional options\r\n     * @returns {Expression} \r\n     */\r\n    \r\n    var libExports = function(expression, subs, option, location) { \r\n        //is the user declaring a function?\r\n        var fndec = /^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(expression);\r\n        if(fndec) \r\n            return nerdamer.setFunction(fndec[1], fndec[2].split(','), fndec[3]);\r\n\r\n        var variable, fn, args;\r\n        //convert any expression passed in to a string\r\n        if(expression instanceof Expression) expression = expression.toString();\r\n\r\n        var multi_options = isArray(option),\r\n            expand = 'expand',\r\n            numer = multi_options ? option.indexOf('numer') !== -1 : option === 'numer';\r\n        if((multi_options ? option.indexOf(expand) !== -1 : option === expand)) {\r\n            expression = format('{0}({1})', expand, expression);\r\n        }\r\n        var e = block('PARSE2NUMBER', function(){ \r\n            return _.parse(expression, subs);\r\n        }, numer || Settings.PARSE2NUMBER);\r\n        \r\n        if(location) { EXPRESSIONS[location-1] = e; }\r\n        else { EXPRESSIONS.push(e);}\r\n        \r\n        if(variable) libExports.setVar(variable, e);\r\n        if(fn) libExports.setFunction(fn, args, e);\r\n        \r\n        return new Expression(e);\r\n    };\r\n    \r\n    libExports.rpn = function(expression) {\r\n        return _.parse(expression, null, true);\r\n    };\r\n    \r\n    libExports.convertToLaTeX = function(e) {\r\n        return _.toTeX(e);\r\n    };\r\n    \r\n    /**\r\n     * Get the version of nerdamer or a loaded add-on\r\n     * @param {String} add_on - The add-on being checked\r\n     * @returns {String} returns the version of nerdamer\r\n     */\r\n    libExports.version = function(add_on) {\r\n        if(add_on) {\r\n            try {\r\n                return C[add_on].version;\r\n            }\r\n            catch(e) {\r\n                return \"No module named \"+add_on+\" found!\";\r\n            }\r\n        }\r\n        return version;\r\n    };\r\n    \r\n    /**\r\n     * Get nerdamer generated warnings\r\n     * @returns {String[]}\r\n     */\r\n    libExports.getWarnings = function() {\r\n        return WARNINGS;\r\n    };\r\n    \r\n    /**\r\n     * \r\n     * @param {String} constant The name of the constant to be set\r\n     * @param {mixed} value The value of the constant \r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.setConstant = function(constant, value) {\r\n        validateName(constant); \r\n        if(!isReserved(constant)) {\r\n            //fix for issue #127\r\n            if(value === 'delete' || value === '') {\r\n                delete _.constants[constant];\r\n            }\r\n            else {\r\n                if(isNaN(value)) throw new Error('Constant must be a number!');\r\n                _.constants[constant] =  value;\r\n            }\r\n        }    \r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * Returns the value of a previously set constant\r\n     * @param {type} constant\r\n     * @returns {String}\r\n     */\r\n    libExports.getConstant = function(constant) {\r\n        return String(_.constant[constant]);\r\n    };\r\n    \r\n    /**\r\n     * \r\n     * @param {String} name The name of the function\r\n     * @param {Array} params_array A list containing the parameter name of the functions\r\n     * @param {String} body The body of the function\r\n     * @returns {Boolean} returns true if succeeded and falls on fail\r\n     * @example nerdamer.setFunction('f',['x'], 'x^2+2');\r\n     */\r\n    libExports.setFunction = function(name, params_array, body) {\r\n        validateName(name);\r\n        if(!isReserved(name)) {\r\n            params_array = params_array || variables(_.parse(body));\r\n            _.functions[name] = [_.mapped_function, params_array.length, {\r\n                    name: name,\r\n                    params: params_array,\r\n                    body: body\r\n            }];\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    \r\n    /**\r\n     * \r\n     * @returns {C} Exports the nerdamer core functions and objects\r\n     */\r\n    libExports.getCore = function() {\r\n        return C;\r\n    };\r\n\r\n    libExports.getExpression = libExports.getEquation = Expression.getExpression;\r\n    \r\n    /**\r\n     * \r\n     * @param {Boolean} asArray The returned names are returned as an array if this is set to true;\r\n     * @returns {String|Array}\r\n     */\r\n    libExports.reserved = function(asArray) {\r\n        if(asArray){ return RESERVED; }\r\n        return RESERVED.join(', ');\r\n    };\r\n    \r\n    /**\r\n     * \r\n     * @param {Integer} equation_number the number of the equation to clear. \r\n     * If 'all' is supplied then all equations are cleared\r\n     * @param {Boolean} keep_EXPRESSIONS_fixed use true if you don't want to keep EXPRESSIONS length fixed\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.clear = function( equation_number, keep_EXPRESSIONS_fixed ) { \r\n        if(equation_number === 'all') { EXPRESSIONS = []; }\r\n        else if(equation_number === 'last') { EXPRESSIONS.pop(); }\r\n        else if(equation_number === 'first') { EXPRESSIONS.shift(); }\r\n        else { \r\n            var index = !equation_number ? EXPRESSIONS.length : equation_number-1; \r\n            keep_EXPRESSIONS_fixed === true ? EXPRESSIONS[index] = undefined : remove(EXPRESSIONS, index);\r\n        }   \r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * Alias for nerdamer.clear('all')\r\n     */\r\n    libExports.flush = function() {\r\n        this.clear('all');\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * \r\n     * @param {Boolean} asObject\r\n     * @param {Boolean} asLaTeX\r\n     * @param {String|String[]} option \r\n     * @returns {Array}\r\n     */\r\n    libExports.expressions = function( asObject, asLaTeX, option ) {\r\n        var result = asObject ? {} : [];\r\n        for(var i=0; i<EXPRESSIONS.length; i++) {\r\n            var eq = asLaTeX ? LaTeX.latex(EXPRESSIONS[i], option) : text(EXPRESSIONS[i], option);\r\n            asObject ? result[i+1] = eq : result.push(eq);\r\n        }\r\n        return result;\r\n    };\r\n    \r\n    //the method for registering modules\r\n    libExports.register = function(obj) { \r\n        var core = this.getCore();\r\n        \r\n        if(isArray(obj)) {\r\n            for(var i=0; i<obj.length; i++) {\r\n                if(obj) this.register(obj[i]);\r\n            }\r\n        }\r\n        else if(obj && Settings.exclude.indexOf(obj.name) === -1) {\r\n            //make sure all the dependencies are available\r\n            if(obj.dependencies) {\r\n                for(var i=0; i<obj.dependencies.length; i++)\r\n                    if(!core[obj.dependencies[i]]) \r\n                        throw new Error(format('{0} requires {1} to be loaded!', obj.name, obj.dependencies[i]));\r\n            }\r\n            //if no parent object is provided then the function does not have an address and cannot be called directly\r\n            var parent_obj = obj.parent, \r\n                fn = obj.build.call(core); //call constructor to get function\r\n            if(parent_obj) {\r\n                if(!core[parent_obj]) core[obj.parent] = {};\r\n                \r\n                var ref_obj = parent_obj === 'nerdamer' ? this : core[parent_obj];\r\n                //attach the function to the core\r\n                ref_obj[obj.name] = fn;\r\n            }\r\n            if(obj.visible) _.functions[obj.name] = [fn, obj.numargs]; //make the function available\r\n            \r\n        } \r\n    };\r\n    \r\n    /**\r\n     * @param {String} name variable name\r\n     * @returns {boolean} validates if the profided string is a valid variable name\r\n     */\r\n    libExports.validateName = validateName;\r\n    \r\n    /**\r\n     * @param {String} varname variable name\r\n     * @returns {boolean} validates if the profided string is a valid variable name\r\n     */\r\n    libExports.validVarName = function(varname) {\r\n        try {\r\n            validateName(varname);\r\n            return RESERVED.indexOf(varname) === -1;\r\n        }\r\n        catch(e){ return false; }\r\n    };\r\n    \r\n    /**\r\n     * \r\n     * @returns {Array} Array of functions currently supported by nerdamer\r\n     */\r\n    libExports.supported = function() {\r\n        return keys(_.functions);\r\n    };\r\n    \r\n    /**\r\n     * \r\n     * @returns {Number} The number equations/expressions currently loaded\r\n     */\r\n    libExports.numEquations = libExports.numExpressions = function() {\r\n        return EXPRESSIONS.length;\r\n    };\r\n    /* END EXPORTS */\r\n    \r\n    /**\r\n     * \r\n     * @param {String} v variable to be set\r\n     * @param {String} val value of variable. This can be a variable expression or number\r\n     * @returns {Object} Returns the nerdamer object\r\n     */\r\n    libExports.setVar = function(v, val) {\r\n        validateName(v);\r\n        //check if it's not already a constant\r\n        if(v in _.constants)\r\n            err('Cannot set value for constant '+v);\r\n        if(val === 'delete' || val === '') \r\n            delete VARS[v];\r\n        else {\r\n            VARS[v] = isSymbol(val) ? val : _.parse(val);\r\n        }\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * Returns the value of a set variable\r\n     * @param {type} v\r\n     * @returns {varies}\r\n     */\r\n    libExports.getVar = function(v) {\r\n        return VARS[v];\r\n    };\r\n    /**\r\n     * Clear the variables from the VARS object\r\n     * @returns {Object} Returns the nerdamer object\r\n     */    \r\n    libExports.clearVars = function() {\r\n        VARS = {};\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * \r\n     * @param {Function} loader\r\n     * @returns {nerdamer}\r\n     */\r\n    libExports.load = function(loader) {\r\n        loader.call(this);\r\n        return this;\r\n    };\r\n    \r\n    /**\r\n     * @param {String} output - output format. Can be 'object' (just returns the VARS object), 'text' or 'latex'. Default: 'text'\r\n     * @param {String|String[]} option\r\n     * @returns {Object} Returns an object with the variables\r\n     */    \r\n    libExports.getVars = function(output, option) {\r\n        output = output || 'text';\r\n        var variables = {};\r\n        if (output === 'object') variables = VARS;\r\n        else {\r\n            for (var v in VARS) {\r\n                if (output === 'latex') {\r\n                    variables[v] = VARS[v].latex(option);\r\n                } else if (output === 'text') {\r\n                    variables[v] = VARS[v].text(option);\r\n                }\r\n            }\r\n        }\r\n        return variables;\r\n    };\r\n    \r\n    /**\r\n     * Set the value of a setting\r\n     * @param {String} setting The setting to be changed\r\n     * @param {boolean} value \r\n     */\r\n    libExports.set = function(setting, value) {\r\n        //current options:\r\n        //PARSE2NUMBER, suppress_errors\r\n        if(typeof setting === 'object')\r\n            for(var x in setting) { \r\n                libExports.set(x, setting[x]);\r\n            }\r\n                \r\n        var disallowed = ['SAFE'];\r\n        if(disallowed.indexOf(setting) !== -1) err('Cannot modify setting: '+setting);\r\n        Settings[setting] = value;\r\n    };\r\n    \r\n    /**\r\n     * Get the value of a setting\r\n     * @param {type} setting\r\n     * @returns {undefined}\r\n     */\r\n    libExports.get = function(setting) {\r\n        return Settings[setting];\r\n    };\r\n    \r\n    /**\r\n     * This functions makes internal functions available externally\r\n     * @param {bool} override Override the functions when calling api if it exists \r\n     */\r\n    libExports.api = function(override) {\r\n        //Map internal functions to external ones\r\n        var linker = function(fname) {\r\n            return function() {\r\n                var args = [].slice.call(arguments);\r\n                for(var i=0; i<args.length; i++)\r\n                    args[i] = _.parse(args[i]);\r\n                return new Expression(block('PARSE2NUMBER', function() {\r\n                    return _.callfunction(fname, args);\r\n                }));\r\n            };\r\n        };\r\n        //perform the mapping\r\n        for(var x in _.functions) \r\n            if(!(x in libExports) || override)\r\n                libExports[x] = linker(x);\r\n    };\r\n    \r\n    libExports.replaceFunction = function(name, fn, num_args) {\r\n        var existing = _.functions[name];\r\n        var new_num_args = typeof num_args === 'undefined' ? existing[1]: num_args;\r\n        _.functions[name] = [fn.call(undefined, existing[0], C), new_num_args];\r\n    };\r\n    \r\n    //helper function to set and operator\r\n    //Operator('^', 'pow', 6, false, false),\r\n    //function Operator(val, fn, precedence, left_assoc, is_prefix, is_postfix, operation) \r\n    libExports.setOperator = function(symbol, name, precendence, left_assoc, is_prefix, is_postfix, fn) {\r\n        _.operators[symbol] = new Operator(symbol, name, precendence, left_assoc, is_prefix, is_postfix, fn);\r\n        _.name = name; //make the parser aware of this  new function\r\n        CUSTOM_OPERATORS[name] = symbol; //let nerdamer know how to display it\r\n    };\r\n    \r\n    libExports.getOperator = function(symbol) {\r\n        return _.operators[symbol];\r\n    };\r\n    \r\n    libExports.api();\r\n\r\n    return libExports; //Done\r\n})({\r\n    //https://github.com/peterolson/BigInteger.js\r\n    bigInt: (function(){\r\n        var bigInt = function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),LOG_MAX_INT=Math.log(MAX_INT);function Integer(v,radix){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10?parseValue(v):parseBase(v,radix);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];for(var j=0;j<l;j++){a_j=a[j];product=a_i*a_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);var value=n.value;if(value===0)return false;if(value===1)return true;if(value===2)return this.isEven();return this.mod(n).equals(Integer[0])};SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(25))return true}BigInteger.prototype.isPrime=function(){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs(),nPrev=n.prev();var a=[2,3,5,7,11,13,17,19],b=nPrev,d,t,i,x;while(b.isEven())b=b.divide(2);for(i=0;i<a.length;i++){x=bigInt(a[i]).modPow(b,n);if(x.equals(Integer[1])||x.equals(nPrev))continue;for(t=true,d=b;t&&d.lesser(nPrev);d=d.multiply(2)){x=x.square().mod(n);if(x.equals(nPrev))t=false}if(t)return false}return true};SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var i=0;i<t;i++){var a=bigInt.randBetween(2,n.minus(2));if(!a.modPow(n.prev(),n).isUnit())return false}return true};SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.equals(bigInt.zero)){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.equals(1))throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};var powersOfTwo=[1];while(powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return(typeof n===\"number\"||typeof n===\"string\")&&+Math.abs(n)<=BASE||n instanceof BigInteger&&n.value.length<=1}BigInteger.prototype.shiftLeft=function(n){if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftRight(-n);var result=this;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(n){var remQuo;if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xBits=[],yBits=[];var xStop=false,yStop=false;while(!xStop||!yStop){if(xRem.isZero()){xStop=true;xBits.push(xSign?1:0)}else if(xSign)xBits.push(xRem.isEven()?1:0);else xBits.push(xRem.isEven()?0:1);if(yRem.isZero()){yStop=true;yBits.push(ySign?1:0)}else if(ySign)yBits.push(yRem.isEven()?1:0);else yBits.push(yRem.isEven()?0:1);xRem=xRem.over(2);yRem=yRem.over(2)}var result=[];for(var i=0;i<xBits.length;i++)result.push(fn(xBits[i],yBits[i]));var sum=bigInt(result.pop()).negate().times(bigInt(2).pow(result.length));while(result.length){sum=sum.add(bigInt(result.pop()).times(bigInt(2).pow(result.length)))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=Math.min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low);if(range.isSmall)return low.add(Math.round(Math.random()*range));var length=range.value.length-1;var result=[],restricted=true;for(var i=length;i>=0;i--){var top=restricted?range.value[i]:BASE;var digit=truncate(Math.random()*top);result.unshift(digit);if(digit<top)restricted=false}result=arrayToSmall(result);return low.add(typeof result===\"number\"?new SmallInteger(result):new BigInteger(result,false))}var parseBase=function(text,base){var length=text.length;var i;var absBase=Math.abs(base);for(var i=0;i<length;i++){var c=text[i].toLowerCase();if(c===\"-\")continue;if(/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}else if(c.charCodeAt(0)-87>=absBase){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}if(2<=base&&base<=36){if(length<=LOG_MAX_INT/Math.log(base)){var result=parseInt(text,base);if(isNaN(result)){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}return new SmallInteger(parseInt(text,base))}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i].toLowerCase(),charCode=c.charCodeAt(0);if(48<=charCode&&charCode<=57)digits.push(parseValue(c));else if(97<=charCode&&charCode<=122)digits.push(parseValue(c.charCodeAt(0)-87));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\");digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit){var v=digit.value;if(typeof v===\"number\")v=[v];if(v.length===1&&v[0]<=35){return\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(v[0])}return\"<\"+v+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return\"0\";throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return\"0\";if(n.isNegative())return new Array(1-n).join(\"10\");return\"1\"+new Array(+n).join(\"01\")}var minusSign=\"\";if(n.isNegative()&&base.isPositive()){minusSign=\"-\";n=n.abs()}if(base.equals(1)){if(n.isZero())return\"0\";return minusSign+new Array(+n+1).join(1)}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(stringify(digit))}out.push(stringify(left));return minusSign+out.reverse().join(\"\")}BigInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!==10)return toBase(this,radix);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!=10)return toBase(this,radix);return String(this.value)};BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return+this.toString()};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return new SmallInteger(x);throw\"Invalid integer: \"+v}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=new SmallInteger(i);if(i>0)Integer[-i]=new SmallInteger(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})};\r\n        return bigInt;\r\n    })()\r\n});\r\n\r\nif((typeof module) !== 'undefined') {\r\n    module.exports = nerdamer;\r\n};","import earcut from 'earcut'\nimport { JavaMap, JavaSet, JavaSet as CustomSet, Pair } from 'javasetmap.ts'\nimport nerdamer from 'nerdamer'\nimport {\n\tAABB,\n\tassert,\n\tassertf,\n\tassertInst,\n\tassertNever,\n\tassertNumbers,\n\tassertVectors,\n\teq,\n\teq0,\n\tgt,\n\tint,\n\tlt,\n\tM4,\n\tmapPush,\n\tnewtonIterate2d,\n\tnewtonIterateWithDerivative,\n\tNLA_DEBUG,\n\tNLA_PRECISION,\n\tSCE,\n\tsnap,\n\tsnap0,\n\tTAU,\n\tTransformable,\n\tV,\n\tV3,\n} from 'ts3dutils'\nimport { Mesh } from 'tsgl'\n\nimport {\n\tAABB2,\n\tCurve,\n\tcurvePoint,\n\tcurvePointMF,\n\tEdge,\n\tFace,\n\tFaceInfoFactory,\n\tL3,\n\tP3,\n\tParametricSurface,\n\tPlaneFace,\n\tPointVsFace,\n\tR2,\n\tR2_R,\n\tstInAABB2,\n\tSurface,\n} from './index'\n\nimport { abs, PI, sign, sqrt } from './math'\n\nexport const EPS = 1e-5\n\nlet globalId = 0\n\nexport function getGlobalId() {\n\treturn globalId++\n}\n\nexport function addLikeSurfaceFaces(likeSurfaceFaces: Face[][], face1: Face, face2: Face) {\n\t// There cannot be two subgroups which will later be connected, as the \"graph\" of like surface faces is fully\n\t// connected\n\tfor (let i = 0; i < likeSurfaceFaces.length; i++) {\n\t\tconst faceGroup = likeSurfaceFaces[i]\n\t\tlet foundFace1 = false,\n\t\t\tfoundFace2 = false\n\t\tfor (let j = 0; j < faceGroup.length; j++) {\n\t\t\tconst face = faceGroup[j]\n\t\t\tif (face == face1) {\n\t\t\t\tfoundFace1 = true\n\t\t\t}\n\t\t\tif (face == face2) {\n\t\t\t\tfoundFace2 = true\n\t\t\t}\n\t\t}\n\t\tif (foundFace1 != foundFace2) {\n\t\t\tfaceGroup.push(foundFace1 ? face2 : face1)\n\t\t\treturn\n\t\t} else if (foundFace1) {\n\t\t\t// found both\n\t\t\treturn\n\t\t}\n\t}\n\t// nothing found, add a new group\n\tlikeSurfaceFaces.push([face1, face2])\n}\n\nexport function assembleFaceFromLooseEdges(edges: Edge[], surface: Surface, originalFace: Face): Face {\n\tconst visited = new Set()\n\n\tfunction nextStart() {\n\t\treturn edges.find(edge => !visited.has(edge))\n\t}\n\n\tconst loops = []\n\tlet startEdge,\n\t\tcurrentEdge: Edge = undefined!\n\twhile ((startEdge = nextStart())) {\n\t\tcurrentEdge = startEdge\n\t\tconst loop = []\n\t\tlet total = 0\n\t\tdo {\n\t\t\tvisited.add(currentEdge)\n\t\t\tloop.push(currentEdge)\n\t\t\tconst possibleEdges = edges.filter(edge => currentEdge.b.like(edge.a))\n\t\t\tconst normalAtCurrentB = surface.normalP(currentEdge.b)\n\t\t\tconst nextEdgeIndex = possibleEdges.indexWithMax(edge =>\n\t\t\t\tcurrentEdge.bDir.angleRelativeNormal(edge.aDir, normalAtCurrentB),\n\t\t\t)\n\t\t\tcurrentEdge = possibleEdges[nextEdgeIndex]\n\t\t} while (startEdge != currentEdge && total++ < 200)\n\t\tassert(total != 201)\n\t\tloops.push(loop)\n\t}\n\n\tconst assembledFaces = BRep.assembleFacesFromLoops(loops, surface, originalFace)\n\tassertf(() => 1 == assembledFaces.length)\n\treturn assembledFaces[0]\n}\n\n/**\n * ## Markdown header\n * ![foo](screenshots/Capture.PNG)\n * {@link ../screenshots/Capture.PNG}\n * find the next edge with the MAXIMUM angle\n */\nexport function calcNextEdgeIndex(currentEdge: Edge, possibleEdges: Edge[], faceNormalAtCurrentB: V3): int {\n\tlet maxValue = -20,\n\t\tadvanced = false,\n\t\tresult = Number.MAX_SAFE_INTEGER\n\tconst normVector = currentEdge.bDir.cross(faceNormalAtCurrentB)\n\tconst eps = 1e-4\n\tconst dir = sign(currentEdge.deltaT())\n\tconst ecd = currentEdge.curve.diff(currentEdge.bT, -dir * eps).dot(normVector)\n\tfor (let i = possibleEdges.length; i--; ) {\n\t\tconst edge = possibleEdges[i]\n\t\tconst angle1 = currentEdge.bDir.negated().angleRelativeNormal(edge.aDir, faceNormalAtCurrentB)\n\t\tconst angle = (angle1 + TAU + NLA_PRECISION) % TAU - NLA_PRECISION\n\t\tif (eq0(angle)) {\n\t\t\t// do advanced analysis\n\t\t\tif (currentEdge.curve.isColinearTo(edge.curve)) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tconst edgeDir = sign(edge.deltaT())\n\t\t\tconst iscd = edge.curve.diff(edge.aT, edgeDir * eps).dot(normVector)\n\t\t\tconst diff = iscd - ecd\n\t\t\t// if diff > 0, the angle is actually ~= 0\n\t\t\tif (diff < 0 && (!advanced || diff > maxValue)) {\n\t\t\t\tadvanced = true\n\t\t\t\tmaxValue = diff\n\t\t\t\tresult = i\n\t\t\t}\n\t\t} else if (!advanced) {\n\t\t\tif (gt(angle, maxValue)) {\n\t\t\t\tmaxValue = angle\n\t\t\t\tresult = i\n\t\t\t}\n\t\t}\n\t}\n\treturn result == Number.MAX_SAFE_INTEGER ? 0 : result\n}\nexport type FaceInfo = { face: Face; edge: Edge; normalAtCanonA: V3; inside: V3; reversed: boolean; angle: number }\nexport class BRep extends Transformable {\n\tstatic EMPTY = new BRep([], false, 'BRep.EMPTY', new Map()).buildAdjacencies()\n\tstatic R3 = new BRep([], true, 'BRep.R3', new Map()).buildAdjacencies()\n\tfaces: Face[]\n\tinfiniteVolume: boolean\n\tgenerator: string | undefined\n\tvertexNames: Map<V3, string> | undefined\n\tedgeFaces: JavaMap<Edge, FaceInfo[]> | undefined\n\n\tconstructor(faces: Face[], infiniteVolume: boolean, generator?: string, vertexNames?: Map<V3, string>) {\n\t\tsuper()\n\t\tthis.faces = faces\n\t\tassertInst(Face, ...faces)\n\t\tthis.infiniteVolume = infiniteVolume\n\t\tassert(!this.infiniteVolume || true === this.infiniteVolume)\n\t\tthis.generator = generator\n\t\tthis.vertexNames = vertexNames\n\t\tthis.edgeFaces = undefined\n\t\t//this.assertSanity()\n\t}\n\n\tstatic loop1ContainsLoop2(loop1: Edge[], ccw1: boolean, loop2: Edge[], ccw2: boolean, surface: Surface): boolean {\n\t\tfor (const edge of loop2) {\n\t\t\tconst loop1ContainsPoint = surface.loopContainsPoint(loop1, edge.a)\n\t\t\tif (PointVsFace.ON_EDGE != loop1ContainsPoint) return PointVsFace.INSIDE == loop1ContainsPoint\n\t\t}\n\t\tfor (const edge of loop2) {\n\t\t\tconst edgePoint = edge.curve.at(edge.aT * 0.2 + edge.bT * 0.8)\n\t\t\tconst loop1ContainsPoint = surface.loopContainsPoint(loop1, edgePoint)\n\t\t\tif (PointVsFace.ON_EDGE != loop1ContainsPoint) return PointVsFace.INSIDE == loop1ContainsPoint\n\t\t}\n\t\tif (ccw1 != ccw2) {\n\t\t\treturn ccw2\n\t\t}\n\t\tthrow new Error(loop1.sce + loop2.sce)\n\t}\n\n\tstatic assembleFacesFromLoops(\n\t\tloops: Edge[][],\n\t\tsurface: Surface,\n\t\toriginalFace: Face,\n\t\tinfoFactory?: FaceInfoFactory<any>,\n\t): Face[] {\n\t\ttype LoopInfo = { loop: Edge[]; ccw: boolean; subloops: LoopInfo[] }\n\n\t\tfunction placeRecursively(newLoopInfo: LoopInfo, loopInfos: LoopInfo[]) {\n\t\t\tif (loopInfos.length == 0) {\n\t\t\t\tloopInfos.push(newLoopInfo)\n\t\t\t} else {\n\t\t\t\tconst subLoopInfo = loopInfos.find(loopInfo =>\n\t\t\t\t\tBRep.loop1ContainsLoop2(loopInfo.loop, loopInfo.ccw, newLoopInfo.loop, newLoopInfo.ccw, surface),\n\t\t\t\t)\n\t\t\t\tif (subLoopInfo) {\n\t\t\t\t\tplaceRecursively(newLoopInfo, subLoopInfo.subloops)\n\t\t\t\t} else {\n\t\t\t\t\t// newLoopInfo isnt contained by any other subLoopInfo\n\t\t\t\t\tfor (let i = loopInfos.length; --i >= 0; ) {\n\t\t\t\t\t\tconst subLoopInfo = loopInfos[i]\n\t\t\t\t\t\t//console.log(\"cheving subLoopInfo\", surface.loopContainsPoint(newLoopInfo.edges,\n\t\t\t\t\t\t// subLoopInfo.edges[0].a))\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tBRep.loop1ContainsLoop2(\n\t\t\t\t\t\t\t\tnewLoopInfo.loop,\n\t\t\t\t\t\t\t\tnewLoopInfo.ccw,\n\t\t\t\t\t\t\t\tsubLoopInfo.loop,\n\t\t\t\t\t\t\t\tsubLoopInfo.ccw,\n\t\t\t\t\t\t\t\tsurface,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tnewLoopInfo.subloops.push(subLoopInfo)\n\t\t\t\t\t\t\tloopInfos.splice(i, 1) // remove it\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tloopInfos.push(newLoopInfo)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction newFacesRecursive(loopInfo: LoopInfo): void {\n\t\t\t// CW loops can be top level, if they are holes in the original face not contained in the new face\n\t\t\tif (loopInfo.ccw) {\n\t\t\t\tif (loopInfo.subloops.every(sl => !sl.ccw)) {\n\t\t\t\t\tconst holes = loopInfo.subloops.map(sl => sl.loop)\n\t\t\t\t\tconst info = infoFactory && infoFactory.newSubFace(originalFace, surface, loopInfo.loop, holes)\n\t\t\t\t\tconst newFace = new originalFace.constructor(\n\t\t\t\t\t\tsurface,\n\t\t\t\t\t\tloopInfo.loop,\n\t\t\t\t\t\tholes,\n\t\t\t\t\t\t'genface' + getGlobalId(),\n\t\t\t\t\t\tinfo,\n\t\t\t\t\t)\n\t\t\t\t\tnewFaces.push(newFace)\n\t\t\t\t\tloopInfo.subloops.forEach(sl => sl.subloops.forEach(slsl => slsl.ccw && newFacesRecursive(slsl)))\n\t\t\t\t} else {\n\t\t\t\t\tloopInfo.subloops.forEach(sl => sl.ccw && newFacesRecursive(sl))\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst newFaces: Face[] = []\n\t\tconst topLevelLoops: LoopInfo[] = []\n\t\tloops.forEach(loop =>\n\t\t\tplaceRecursively(\n\t\t\t\t{\n\t\t\t\t\tloop: loop,\n\t\t\t\t\tccw: surface.edgeLoopCCW(loop),\n\t\t\t\t\tsubloops: [],\n\t\t\t\t},\n\t\t\t\ttopLevelLoops,\n\t\t\t),\n\t\t)\n\t\ttopLevelLoops.forEach(tll => newFacesRecursive(tll))\n\t\treturn newFaces\n\t}\n\n\t/**\n\t * Create a [BRep] by concatenating the faces of other BReps. Only use this if certain that the faces of the BReps do not intersect.\n\t * Otherwise, use [BRep.plus].\n\t * @param bReps\n\t * @param generator\n\t */\n\tstatic join(bReps: BRep[], generator?: string) {\n\t\treturn new BRep(bReps.flatMap(b2 => b2.faces), false, generator)\n\t}\n\n\tcontainsPoint(p: V3, forceInsideOutside: boolean = false): boolean {\n\t\tconst dirs = [\n\t\t\tV(-0.3920414696448526, -0.12936136783391444, -0.9108068525164064),\n\t\t\tV(0.6520650903544943, -0.07151288645511984, -0.7547827667692488),\n\t\t\tV(0.9433494201061395, -0.2402757256238473, -0.22882186797013926),\n\t\t\tV(0.13678704228501923, -0.04480387361087783, 0.9895867410047372),\n\t\t\tV(0.0662057922721913, -0.5865836917435423, 0.8071780259955845),\n\t\t\tV(-0.7322576567870621, -0.12953393611526787, 0.6685953061989045),\n\t\t\tV(0.6579719127258273, -0.012300218400456116, 0.7529420075219719),\n\t\t\tV(-0.5576497966736425, 0.8006695748324647, 0.2189861552871446),\n\t\t]\n\t\tdirLoop: for (const dir of dirs) {\n\t\t\tconst testLine = new L3(p, dir)\n\t\t\tlet inside = this.infiniteVolume,\n\t\t\t\tminT = Infinity\n\t\t\tfor (const face of this.faces) {\n\t\t\t\tassert(!face.surface.containsCurve(testLine))\n\t\t\t\tconst ists = face.surface.isTsForLine(testLine)\n\t\t\t\tfor (const t of ists) {\n\t\t\t\t\tconst p = testLine.at(t)\n\t\t\t\t\tconst pvf = face.containsPoint2(p)\n\t\t\t\t\t//assert(pvf != PointVsFace.ON_EDGE)\n\t\t\t\t\t!forceInsideOutside && assert(!eq0(t))\n\t\t\t\t\tif (t > 0) {\n\t\t\t\t\t\tif (pvf == PointVsFace.ON_EDGE) {\n\t\t\t\t\t\t\tcontinue dirLoop\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (pvf == PointVsFace.INSIDE) {\n\t\t\t\t\t\t\tinside = !inside\n\t\t\t\t\t\t\tif (t < minT) {\n\t\t\t\t\t\t\t\tminT = t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn inside\n\t\t}\n\t\treturn false\n\t}\n\n\twithMergedFaces(): BRep {\n\t\tconst likeSurfaceFaces = []\n\t\tfor (let i = 0; i < this.faces.length; i++) {\n\t\t\tlet addedToGroup = false\n\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\tif (this.faces[i].surface.isCoplanarTo(this.faces[j].surface)) {\n\t\t\t\t\tconst faceGroup = likeSurfaceFaces.find(faceGroup => faceGroup.includes(this.faces[j]))\n\t\t\t\t\tif (faceGroup) {\n\t\t\t\t\t\tfaceGroup.push(this.faces[i])\n\t\t\t\t\t\taddedToGroup = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t!addedToGroup && likeSurfaceFaces.push([this.faces[i]])\n\t\t}\n\n\t\tconsole.log('likeSurfaceFaces', likeSurfaceFaces)\n\t\tif (likeSurfaceFaces.every(group => group.length == 1)) return this\n\n\t\tconst newFaces = []\n\t\tlet total = 0\n\t\tfor (const faceGroup of likeSurfaceFaces) {\n\t\t\tconsole.log(faceGroup)\n\t\t\tif (faceGroup.length == 1) {\n\t\t\t\tnewFaces.push(faceGroup[0])\n\t\t\t} else {\n\t\t\t\tconst allEdges = faceGroup.flatMap(face => face.getAllEdges())\n\t\t\t\tfor (let i = allEdges.length; i-- > 0; ) {\n\t\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\t\tconsole.log('blugh', total)\n\t\t\t\t\t\tassert(i >= 0 && j >= 0 && total++ < 500, i + ' ' + j + ' ' + total)\n\t\t\t\t\t\tif (allEdges[i].isCoEdge(allEdges[j])) {\n\t\t\t\t\t\t\t// remove both\n\t\t\t\t\t\t\tallEdges.splice(i, 1)\n\t\t\t\t\t\t\tallEdges.splice(j, 1)\n\t\t\t\t\t\t\ti--\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst newFace = assembleFaceFromLooseEdges(allEdges, faceGroup[0].surface, faceGroup[0])\n\t\t\t\tnewFaces.push(newFace)\n\t\t\t}\n\t\t}\n\n\t\treturn new BRep(\n\t\t\tnewFaces,\n\t\t\tthis.infiniteVolume,\n\t\t\tthis.generator && this.generator + '.withMergedFaces()',\n\t\t\tthis.vertexNames,\n\t\t)\n\t}\n\n\tcalculateVolume(): number {\n\t\treturn this.faces.map(face => face.zDirVolume().volume).sum()\n\t}\n\n\ttoMesh(): Mesh & {\n\t\tfaceIndexes: Map<Face, { start: int; count: int }>\n\t\tTRIANGLES: int[]\n\t\tLINES: int[]\n\t\tnormals: V3[]\n\t} {\n\t\tconst mesh = new Mesh()\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addIndexBuffer('LINES') as any\n\t\tmesh.faceIndexes = new Map()\n\t\tfor (const face of this.faces) {\n\t\t\tconst triangleStart = mesh.TRIANGLES.length\n\t\t\tface.addToMesh(mesh)\n\t\t\tmesh.faceIndexes.set(face, { start: triangleStart, count: mesh.TRIANGLES.length - triangleStart })\n\t\t}\n\t\t//this.buildAdjacencies()\n\t\t//for (const edge of this.edgeFaces.keys()) {\n\t\t//\n\t\t//}\n\t\treturn mesh\n\t}\n\n\tminus(other: BRep, infoFactory?: FaceInfoFactory<any>): BRep {\n\t\tconst generator = this.generator && other.generator && this.generator + '.minus(' + other.generator + ')'\n\t\treturn this.intersection(other.flipped(), true, true, generator, infoFactory)\n\t}\n\n\tplus(other: BRep, infoFactory?: FaceInfoFactory<any>): BRep {\n\t\tconst generator = this.generator && other.generator && this.generator + '.plus(' + other.generator + ')'\n\t\treturn this.flipped()\n\t\t\t.intersection(other.flipped(), true, true, generator, infoFactory)\n\t\t\t.flipped()\n\t}\n\n\tand(other: BRep, infoFactory?: FaceInfoFactory<any>): BRep {\n\t\tconst generator = this.generator && other.generator && this.generator + '.and(' + other.generator + ')'\n\t\treturn this.intersection(other, true, true, generator, infoFactory)\n\t}\n\n\txor(other: BRep, infoFactory?: FaceInfoFactory<any>): BRep {\n\t\tconst generator = this.generator && other.generator && this.generator + '.xor(' + other.generator + ')'\n\t\treturn new BRep(\n\t\t\tthis.minus(other, infoFactory).faces.concat(other.minus(this, infoFactory).faces),\n\t\t\tthis.infiniteVolume != other.infiniteVolume,\n\t\t\tgenerator,\n\t\t)\n\t}\n\n\tequals(obj: any): boolean {\n\t\treturn (\n\t\t\tthis.faces.length == obj.faces.length &&\n\t\t\tthis.faces.every(face => (obj as BRep).faces.some(face2 => face.equals(face2)))\n\t\t)\n\t}\n\n\tlike(brep: BRep): boolean {\n\t\treturn (\n\t\t\tthis.faces.length == brep.faces.length &&\n\t\t\tthis.faces.every(face => brep.faces.some(face2 => face.likeFace(face2)))\n\t\t)\n\t}\n\n\t//reconstituteCoplanarFaces(likeSurfacePlanes, edgeLooseSegments, faceMap, newFaces) {\n\t//    likeSurfacePlanes.forEach(faceGroup => {\n\t//        // calculate total contours\n\t//        let surface = faceGroup[0].surface, bag = []\n\t//        faceGroup.forEach(face => {\n\t//            Array.prototype.push.apply(bag, faceMap(face))\n\t//            face.getAllEdges().forEach(edge => {\n\t//                let edgeSubSegments\n\t//                if (edgeSubSegments = edgeLooseSegments.get(edge)) {\n\t//                    Array.prototype.push.apply(bag, edgeSubSegments)\n\t//                } else {\n\t//                    bag.push(edge)\n\t//                }\n\t//            })\n\t//        })\n\t//        let currentEdge, loops = []\n\t//        while (currentEdge = bag.find(edge => !edge.visited)) {\n\t//            let path = []\n\t//            do {\n\t//                currentEdge.visited = true\n\t//                path.push(currentEdge)\n\t//                let possibleNextEdges = bag.filter(edge => currentEdge.b.like(edge.a))\n\t//                // lowest angle, i.e. the right-most next edge\n\t//                let nextEdgeIndex = possibleNextEdges.indexWithMax((edge, index) =>\n\t// -currentEdge.bDir.angleRelativeNormal(edge.aDir, surface.normalP(currentEdge.b))) currentEdge =\n\t// possibleNextEdges[nextEdgeIndex] } while (!currentEdge.visited) let startIndex = path.find(currentEdge) if (-1\n\t// != startIndex) { loops.push(path.slice(startIndex)) } } }) }\n\n\ttoString(): string {\n\t\treturn `new BRep([\\n${this.faces.join(',\\n').replace(/^/gm, '\\t')}], ${this.infiniteVolume})`\n\t}\n\n\tgetConstructorParameters() {\n\t\treturn [this.faces, this.infiniteVolume]\n\t}\n\n\ttoSource(useGenerator: boolean = true): string {\n\t\treturn (\n\t\t\t(useGenerator && this.generator) ||\n\t\t\t`new BRep([\\n${this.faces\n\t\t\t\t.map(SCE)\n\t\t\t\t.join(',\\n')\n\t\t\t\t.replace(/^/gm, '\\t')}], ${this.infiniteVolume})`\n\t\t)\n\t}\n\n\t/**\n\t * Rightmost next segment doesn't work, as the correct next segment isn't obvious from the current corner\n\t * alone.\n\t * (at least, not without extensive pre-analysis on the face edges, which shouldn't be necessary, as the\n\t * correct new faces are defined by the new edges already.) Leftmost edge should work. Holes which touch the\n\t * edge of the face will be added to the face contour.\n\t *\n\t * New segments will always be part left-er than existing ones, so no special check is required.\n\t *\n\t */\n\treconstituteFaces(\n\t\toldFaces: Face[],\n\t\tedgeSubEdges: Map<Edge, Edge[]>,\n\t\tfaceMap: Map<Face, Edge[]>,\n\t\tnewFaces: Face[],\n\t\tinfoFactory?: FaceInfoFactory<any>,\n\t): void {\n\t\tconst oldFaceStatuses: Map<Face, string> = new Map()\n\t\t// reconstitute faces\n\t\tconst insideEdges: Edge[] = []\n\t\tfor (const face of oldFaces) {\n\t\t\tconst usableOldEdges = face.getAllEdges().filter(edge => !edgeSubEdges.get(edge))\n\t\t\tconst subEdges: Edge[] = face\n\t\t\t\t.getAllEdges()\n\t\t\t\t.mapFilter(edge => edgeSubEdges.get(edge))\n\t\t\t\t.concatenated()!\n\t\t\tconst newEdges = faceMap.get(face) || []\n\t\t\tif (newEdges.length || subEdges.length) {\n\t\t\t\toldFaceStatuses.set(face, 'partial')\n\t\t\t\tconst loops = []\n\t\t\t\t// new edges are definitely part of a resulting loop\n\t\t\t\t// old edges (both contour and holes) can either be part of a new loop, in which case they will already\n\t\t\t\t// have been visited when starting a loop search with a new edge, OR they can be stranded, OR they can\n\t\t\t\t// remain in their old loop\n\t\t\t\tfunction getNextStart() {\n\t\t\t\t\treturn (\n\t\t\t\t\t\tnewEdges.find(edge => !visitedEdges.has(edge)) ||\n\t\t\t\t\t\tsubEdges.find(edge => !visitedEdges.has(edge)) ||\n\t\t\t\t\t\tusableOldEdges.find(edge => !visitedEdges.has(edge))\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\tconst visitedEdges = new Set()\n\n\t\t\t\t// search for a loop:\n\t\t\t\tlet currentEdge: Edge | undefined\n\t\t\t\twhile ((currentEdge = getNextStart())) {\n\t\t\t\t\tconst startEdge = currentEdge,\n\t\t\t\t\t\tedges: Edge[] = []\n\t\t\t\t\tlet i = 0\n\t\t\t\t\t// wether only new edges are used (can include looseSegments)\n\t\t\t\t\tdo {\n\t\t\t\t\t\tvisitedEdges.add(currentEdge)\n\t\t\t\t\t\tedges.push(currentEdge)\n\t\t\t\t\t\t// find next edge\n\t\t\t\t\t\tconst possibleOldEdges = usableOldEdges.filter(edge => currentEdge!.b.like(edge.a))\n\t\t\t\t\t\tconst possibleSubEdges = subEdges.filter(edge => currentEdge!.b.like(edge.a))\n\t\t\t\t\t\tconst possibleNewEdges = newEdges.filter(edge => currentEdge!.b.like(edge.a))\n\t\t\t\t\t\tconst possibleEdges = possibleOldEdges.concat(possibleSubEdges, possibleNewEdges)\n\t\t\t\t\t\tif (0 == possibleEdges.length) break\n\t\t\t\t\t\tassert(0 < possibleEdges.length, () => face.sce)\n\t\t\t\t\t\tconst faceNormalAtCurrentB = face.surface.normalP(currentEdge.b)\n\t\t\t\t\t\tconst correct = possibleEdges.indexWithMax(\n\t\t\t\t\t\t\tedge =>\n\t\t\t\t\t\t\t\t(currentEdge!.bDir.angleRelativeNormal(edge.aDir, faceNormalAtCurrentB) +\n\t\t\t\t\t\t\t\t\tNLA_PRECISION +\n\t\t\t\t\t\t\t\t\tPI) %\n\t\t\t\t\t\t\t\tTAU,\n\t\t\t\t\t\t)\n\t\t\t\t\t\tconst nextEdgeIndex = calcNextEdgeIndex(currentEdge, possibleEdges, faceNormalAtCurrentB)\n\t\t\t\t\t\tcurrentEdge = possibleEdges[nextEdgeIndex]\n\t\t\t\t\t\tif (visitedEdges.has(currentEdge)) {\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\tassert(currentEdge)\n\t\t\t\t\t\tassert(currentEdge != startEdge)\n\t\t\t\t\t} while (++i < 400)\n\t\t\t\t\tif (400 == i) {\n\t\t\t\t\t\tassert(false, 'too many')\n\t\t\t\t\t}\n\t\t\t\t\t// check if we found a loop\n\t\t\t\t\tif (edges.length > 1 && currentEdge == startEdge) {\n\t\t\t\t\t\tloops.push(edges)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst faceNewFaces = BRep.assembleFacesFromLoops(loops, face.surface, face, infoFactory)\n\t\t\t\tnewFaces.push(...faceNewFaces)\n\t\t\t\tconst faceNewFacesEdges = faceNewFaces.flatMap(face => face.getAllEdges())\n\t\t\t\tinsideEdges.push(...usableOldEdges.filter(edge => faceNewFacesEdges.includes(edge)))\n\t\t\t}\n\t\t}\n\t\twhile (insideEdges.length != 0) {\n\t\t\tconst insideEdge = insideEdges.pop()!\n\t\t\tconst adjacentFaces = this.edgeFaces!.get(insideEdge.getCanon())!\n\t\t\tadjacentFaces.forEach(info => {\n\t\t\t\tif (!oldFaceStatuses.has(info.face)) {\n\t\t\t\t\toldFaceStatuses.set(info.face, 'inside')\n\t\t\t\t\tinsideEdges.push.apply(insideEdges, info.face.getAllEdges())\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\tnewFaces.push(...oldFaces.filter(face => oldFaceStatuses.get(face) == 'inside'))\n\t}\n\n\tstatic getLooseEdgeSegments(\n\t\tedgePointInfoss: JavaMap<Edge, IntersectionPointInfo[]>,\n\t\tedgeFaces: JavaMap<Edge, FaceInfo[]>,\n\t): Map<Edge, Edge[]> {\n\t\tconst result = new JavaMap<Edge, Edge[]>()\n\t\t// if there are no point info, the original edge will be kept, so we should return nothing\n\t\t// otherwise, something will be returned, even if it a new edge identical to the base edge\n\t\tfor (const [canonEdge, pointInfos] of edgePointInfoss) {\n\t\t\tif (0 == pointInfos.length) continue\n\t\t\tconst allFaces = edgeFaces.get(canonEdge)!\n\t\t\tpointInfos.sort((a, b) => snap0(a.edgeT - b.edgeT) || +!!undefined)\n\t\t\tlet startP = canonEdge.a,\n\t\t\t\tstartDir = canonEdge.aDir,\n\t\t\t\tstartT = canonEdge.aT,\n\t\t\t\tstartInfo\n\n\t\t\tfunction addNewEdge(\n\t\t\t\tstartInfo: IntersectionPointInfo | undefined,\n\t\t\t\tendInfo: IntersectionPointInfo | undefined,\n\t\t\t\tnewEdge: Edge,\n\t\t\t) {\n\t\t\t\tfor (let i = 0; i < allFaces.length; i++) {\n\t\t\t\t\tconst faceInfo = allFaces[i]\n\t\t\t\t\tmapPush(\n\t\t\t\t\t\tresult,\n\t\t\t\t\t\t!faceInfo.reversed ? canonEdge : canonEdge.flipped(),\n\t\t\t\t\t\t!faceInfo.reversed ? newEdge : newEdge.flipped(),\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < pointInfos.length; i++) {\n\t\t\t\tconst info = pointInfos[i]\n\t\t\t\tconst pDir = canonEdge.tangentAt(info.edgeT)\n\t\t\t\tif (!eq(info.edgeT, startT)) {\n\t\t\t\t\tconst newEdge = Edge.create(\n\t\t\t\t\t\tcanonEdge.curve,\n\t\t\t\t\t\tstartP,\n\t\t\t\t\t\tinfo.p,\n\t\t\t\t\t\tstartT,\n\t\t\t\t\t\tinfo.edgeT,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\tstartDir,\n\t\t\t\t\t\tpDir,\n\t\t\t\t\t\t'looseSegment' + getGlobalId(),\n\t\t\t\t\t)\n\t\t\t\t\taddNewEdge(startInfo, info, newEdge)\n\t\t\t\t}\n\t\t\t\tstartP = info.p\n\t\t\t\tstartT = info.edgeT\n\t\t\t\tstartInfo = info\n\t\t\t\tstartDir = pDir\n\t\t\t}\n\t\t\tif (startInfo && !eq(startT, canonEdge.bT)) {\n\t\t\t\tconst newEdge = Edge.create(\n\t\t\t\t\tcanonEdge.curve,\n\t\t\t\t\tstartP,\n\t\t\t\t\tcanonEdge.b,\n\t\t\t\t\tstartT,\n\t\t\t\t\tcanonEdge.bT,\n\t\t\t\t\tundefined,\n\t\t\t\t\tstartDir,\n\t\t\t\t\tcanonEdge.bDir,\n\t\t\t\t\t'looseSegment' + getGlobalId(),\n\t\t\t\t)\n\t\t\t\taddNewEdge(startInfo, undefined, newEdge)\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\tgetIntersectionEdges(brep2: BRep) {\n\t\tconst faceMap = new Map(),\n\t\t\tthisEdgePoints = new JavaMap<Edge, IntersectionPointInfo[]>(),\n\t\t\totherEdgePoints = new JavaMap<Edge, IntersectionPointInfo[]>()\n\n\t\tconst checkedPairs = new JavaSet<Pair<any, any>>()\n\n\t\tthis.faces.forEach(face => {\n\t\t\t//console.log('face', face.toString())\n\t\t\tbrep2.faces.forEach(face2 => {\n\t\t\t\t//console.log('face2', face2.toString())\n\t\t\t\tface.intersectFace(face2, this, brep2, faceMap, thisEdgePoints, otherEdgePoints, checkedPairs)\n\t\t\t})\n\t\t})\n\n\t\treturn Array.from(faceMap.values()).concatenated()\n\t}\n\n\tshellCount(): int {\n\t\tconst foundFaces = new Set<Face>()\n\t\tlet face: Face | undefined,\n\t\t\tresult = 0\n\t\twhile ((face = this.faces.find(face => !foundFaces.has(face)))) {\n\t\t\tresult++\n\t\t\tconst stack = [face]\n\t\t\twhile ((face = stack.pop())) {\n\t\t\t\tfor (const edge of face.getAllEdges()) {\n\t\t\t\t\tfor (const { face: face2 } of this.edgeFaces!.get(edge.getCanon())!) {\n\t\t\t\t\t\tif (face !== face2 && !foundFaces.has(face2)) {\n\t\t\t\t\t\t\tfoundFaces.add(face2)\n\t\t\t\t\t\t\tstack.push(face2)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\tgetAABB(): AABB {\n\t\treturn AABB.forAABBs(this.faces.map(face => face.getAABB()))\n\t}\n\n\tassertSanity(): void {\n\t\tif (!NLA_DEBUG) return\n\t\t// const allFaceEdges = this.faces.flatMap(face => face.getAllEdges())\n\t\t// for (const { i, j } of combinations(allFaceEdges.length)) {\n\t\t// const a = allFaceEdges[i],\n\t\t// \tb = allFaceEdges[j]\n\t\t// assert(i == j || !a.isCoEdge(b) || a == b || a.flippedOf == b, 'coedges not linked properly', a, b)\n\t\t// assert(\n\t\t// \ti == j ||\n\t\t// \t\t!a.curve.isColinearTo(b.curve) ||\n\t\t// \t\t(a.curve.equals(b.curve) && a.isCoEdge(b)) ||\n\t\t// \t\t!a.overlaps(b),\n\t\t// \t'colinear edges overlap',\n\t\t// \ta,\n\t\t// \tb,\n\t\t// )\n\t\t// }\n\n\t\tthis.buildAdjacencies()\n\t\tfor (const [canonEdge, edgeFaceInfos] of this.edgeFaces!) {\n\t\t\t// TODO handle curved faces\n\t\t\tassert(edgeFaceInfos.length % 2 == 0, () => canonEdge + edgeFaceInfos.sce)\n\t\t}\n\t}\n\n\t//intersection3(other: BRep, buildThis: boolean, buildOther: boolean, name?: string): BRep {\n\t//    this.assertSanity()\n\t//    other.assertSanity()\n\t//    this.buildAdjacencies()\n\t//    other.buildAdjacencies()\n\t//\n\t//    // edge / edge\n\t//    for (const [edge1, edge1Faces] of this.edgeFaces) {\n\t//        for (const [edge2, edge2Faces] of other.edgeFaces) {\n\t//            const curve1 = edge1.curve, curve2 = edge2.curve\n\t//            if (curve1.isColinearTo(curve2)) {\n\t//                if (edge1.overlaps(edge2)) {\n\t//                    // faces have a common edge\n\t//                    const aT = curve1.pointT(edge2.a), bT = curve1.pointT(edge2.a)\n\t//                    const minT = min(aT, bT), maxT = max(aT, bT)\n\t//                    const commonEdge = Edge.create(curve1, min(edge1.minT, minT), min(edge1.maxT, maxT), )\n\t//                }\n\t//            } else if (x = curve1.isInfosWithCurve(edge2.curve)) {\n\t//                // edges intersect in a point\n\t//            }\n\t//        }\n\t//    }\n\t//\n\t//    // point / edge\n\t//    function pointEdge(b1, b2, has, add) {\n\t//        for (const v1 of this.vertFaces.keys()) {\n\t//            for (const edge2 of other.edgeFaces.keys()) {\n\t//                if (edge2.curve.containsPoint(v1)) {\n\t//                    const edge2T = edge2.curve.pointT(v1)\n\t//                    if (eq(edge2.aT, edge2T) || eq(edge2.bT, edge2T)) {\n\t//                        add(v1, eq(edge2.aT, edge2T) ? edge2.a : edge2.b)\n\t//                    }\n\t//                }\n\t//            }\n\t//        }\n\t//    }\n\t//    const pairs: CustomSet<[Equalable, Equalable]> = new CustomSet<[Equalable, Equalable]>()\n\t//    pointEdge(this, other, (a, b) => pairs.has([a, b]), (a, b) => pairs.add([a, b]))\n\t//    pointEdge(other, this, (b, a) => pairs.has([a, b]), (b, a) => pairs.add([a, b]))\n\t//\n\t//\n\t//    // point / point\n\t//    for (const v1 of this.vertFaces.keys()) {\n\t//        for (const v2 of other.vertFaces.keys()) {\n\t//            if (v1.like(v2)) {\n\t//\n\t//            }\n\t//        }\n\t//    }\n\t//\n\t//    for (const face1 of this.faces) {\n\t//        for (const face2 of other.faces) {\n\t//            face1.intersectFace(face2)\n\t//        }\n\t//    }\n\t//\n\t//}\n\n\tbuildAdjacencies(): this & {\n\t\tedgeFaces: JavaMap<\n\t\t\tEdge,\n\t\t\t{ face: Face; edge: Edge; normalAtCanonA: V3; inside: V3; reversed: boolean; angle: number }[]\n\t\t>\n\t} {\n\t\tif (this.edgeFaces) return this as any\n\n\t\tthis.edgeFaces = new JavaMap()\n\t\tfor (const face of this.faces) {\n\t\t\tfor (const edge of face.getAllEdges()) {\n\t\t\t\tconst canon = edge.getCanon()\n\t\t\t\tconst normalAtCanonA = face.surface.normalP(canon.a)\n\t\t\t\tconst inside = normalAtCanonA.cross(canon == edge ? edge.aDir : edge.bDir)\n\t\t\t\tmapPush(this.edgeFaces!, canon, {\n\t\t\t\t\tface: face,\n\t\t\t\t\tedge: edge,\n\t\t\t\t\tnormalAtCanonA: normalAtCanonA,\n\t\t\t\t\treversed: canon != edge,\n\t\t\t\t\tinside: inside,\n\t\t\t\t\tangle: 0,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tfor (const [canonEdge, edgeFaceInfos] of this.edgeFaces!) {\n\t\t\t// TODO handle curved faces\n\t\t\t//assert(edgeFaceInfos.length % 2 == 0, () => canonEdge + edgeFaceInfos.sce)\n\t\t\tconst faceInfo0 = edgeFaceInfos.find(faceInfo => faceInfo.reversed)\n\t\t\tif (!faceInfo0) {\n\t\t\t\tconsole.warn('invalid brep')\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tedgeFaceInfos.forEach(faceInfo => {\n\t\t\t\tif (faceInfo != faceInfo0) {\n\t\t\t\t\tfaceInfo.angle = faceInfo0.inside.angleRelativeNormal(faceInfo.inside, canonEdge.aDir.unit())\n\t\t\t\t\tif (faceInfo.angle < 0) faceInfo.angle += 2 * Math.PI\n\t\t\t\t}\n\t\t\t})\n\t\t\tedgeFaceInfos.sort((a, b) => snap(a.angle - b.angle, 0)) // TODO  || assertNever()\n\t\t}\n\n\t\treturn this as any\n\t}\n\n\t/**\n\t * Cases for volumes A and B\n\t *\n\t *          1.  Volumes do not touch.\n\t *          2.  face/face Face surfaces intersect each other.\n\t *              implies edges going through faces.\n\t *              e.g. box(5, 5, 5) - box(5, 5, 5).translate(1, 1, 1)\n\t *          3.  face/edge Edge of A lies in a face of B\n\t *              implies vertices of A lying in face of B\n\t *              e.g. box(5, 5, 5) - box(3, 3, 3).rotateZ([0, 1, 2] * PI / 2).translate(0, 1, 1)\n\t *          4.  edge/edge Two edges are colinear.\n\t *              implies vertex of A lying in edge of B\n\t *           5.  vertex/edge Vertex of A lies on edge of B (but no edge/edge)\n\t *          6.  vertex/vertex with/without edge/edge, edge/face and face/face intersections\n\t *          7.  vertex lies in face\n\t *\n\t *\n\t *\n\t */\n\tintersection(\n\t\tother: BRep,\n\t\tbuildThis: boolean,\n\t\tbuildOther: boolean,\n\t\tgenerator?: string,\n\t\tinfoFactory?: FaceInfoFactory<any>,\n\t): BRep {\n\t\tthis.assertSanity()\n\t\tother.assertSanity()\n\t\tthis.buildAdjacencies()\n\t\tother.buildAdjacencies()\n\n\t\tconst faceMap = new Map()\n\t\tconst thisEdgePoints = new JavaMap<Edge, IntersectionPointInfo[]>(),\n\t\t\totherEdgePoints = new JavaMap<Edge, IntersectionPointInfo[]>()\n\n\t\tconst checkedPairs = new CustomSet<Pair<any, any>>()\n\n\t\tfor (const thisFace of this.faces) {\n\t\t\tfor (const otherFace of other.faces) {\n\t\t\t\tthisFace.intersectFace(otherFace, this, other, faceMap, thisEdgePoints, otherEdgePoints, checkedPairs)\n\t\t\t}\n\t\t}\n\t\tfor (const edge of thisEdgePoints.keys()) {\n\t\t\tassert(this.edgeFaces!.get(edge))\n\t\t}\n\t\tfor (const edge of otherEdgePoints.keys()) {\n\t\t\tassert(other.edgeFaces!.get(edge))\n\t\t}\n\t\tconst newFaces: Face[] = []\n\n\t\tif (0 == faceMap.size && 0 == thisEdgePoints.size && 0 == otherEdgePoints.size) {\n\t\t\tconst thisInOther = other.containsPoint(this.faces[0].contour[0].a, true)\n\t\t\tconst otherInThis = !thisInOther && this.containsPoint(other.faces[0].contour[0].a)\n\t\t\treturn this\n\t\t} else {\n\t\t\tif (buildThis) {\n\t\t\t\tconst edgeLooseSegments = BRep.getLooseEdgeSegments(thisEdgePoints, this.edgeFaces!)\n\t\t\t\t//noinspection JSUnusedLocalSymbols\n\t\t\t\tconst els = this.faces.map(face => [\n\t\t\t\t\tface,\n\t\t\t\t\tArray.from(edgeLooseSegments.entries()).flatMap(\n\t\t\t\t\t\t([edge, subs]) => (face.getAllEdges().some(e => e.equals(edge)) ? subs : []),\n\t\t\t\t\t),\n\t\t\t\t])\n\t\t\t\tthis.reconstituteFaces(this.faces, edgeLooseSegments, faceMap, newFaces, infoFactory)\n\t\t\t}\n\t\t\tif (buildOther) {\n\t\t\t\tconst edgeLooseSegments = BRep.getLooseEdgeSegments(otherEdgePoints, other.edgeFaces!)\n\t\t\t\t//noinspection JSUnusedLocalSymbols\n\t\t\t\tconst els = other.faces.map(face => [\n\t\t\t\t\tface,\n\t\t\t\t\tArray.from(edgeLooseSegments.entries()).flatMap(\n\t\t\t\t\t\t([edge, subs]) => (face.getAllEdges().some(e => e.equals(edge)) ? subs : []),\n\t\t\t\t\t),\n\t\t\t\t])\n\t\t\t\tother.reconstituteFaces(other.faces, edgeLooseSegments, faceMap, newFaces, infoFactory)\n\t\t\t}\n\t\t}\n\t\t//buildCoplanar && this.reconstituteCoplanarFaces(likeSurfaceFaces, edgeLooseSegments, faceMap, newFaces,\n\t\t// this.infiniteVolume, other.infiniteVolume)\n\n\t\tconst result = new BRep(newFaces, this.infiniteVolume && other.infiniteVolume, generator)\n\t\t//result.buildAdjacencies()\n\t\treturn result\n\t}\n\n\ttransform(m4: M4, desc?: string) {\n\t\tlet vertexNames: Map<V3, string> | undefined\n\t\tif (this.vertexNames) {\n\t\t\tvertexNames = new Map()\n\t\t\tthis.vertexNames.forEach((name, vertex) => vertexNames!.set(m4.transformPoint(vertex), name + desc))\n\t\t}\n\t\treturn new BRep(\n\t\t\tthis.faces.map(f => f.transform(m4)),\n\t\t\tthis.infiniteVolume,\n\t\t\tthis.generator && desc && this.generator + desc, // if desc isn't set, the generator will be invalid\n\t\t\tvertexNames,\n\t\t) as this\n\t}\n\n\tflipped(): BRep {\n\t\treturn new BRep(\n\t\t\tthis.faces.map(f => f.flipped()),\n\t\t\t!this.infiniteVolume,\n\t\t\tthis.generator && this.generator + '.flipped()',\n\t\t\tthis.vertexNames,\n\t\t)\n\t}\n}\n\nexport type IntersectionPointInfo = {\n\tp: V3 // intersection point\n\tinsideDir: V3\n\tt: number // param on intersection curve\n\tedge: Edge // face edge doing the intersection\n\tedgeT: number\n\tcolinear: boolean // whether edge is colinear to intersection line\n\tused?: boolean\n}\n\nexport function dotCurve(v: V3, cDir: V3, cDDT: V3): number {\n\tlet dot = v.dot(cDir)\n\tif (eq0(dot)) {\n\t\tdot = v.dot(cDDT)\n\t}\n\tassert(!eq0(dot))\n\treturn dot\n}\n\nexport function dotCurve2(curve: Curve, t: number, normal: V3, sign: number): number {\n\tassert(sign == 1 || sign == -1, sign)\n\tconst tangentDot = curve.tangentAt(t).dot(normal)\n\t// if tangentDot != 0 the curve simply crosses the plane\n\tif (!eq0(tangentDot)) {\n\t\treturn sign * tangentDot\n\t}\n\tif (curve.ddt) {\n\t\tconst ddtDot = curve.ddt(t).dot(normal)\n\t\t// tangentDot == 0 ==> critical point at t, if ddtDot != 0, then it is a turning point, otherwise we can't be sure\n\t\t// and must do a numeric test\n\t\tif (!eq0(ddtDot)) {\n\t\t\treturn ddtDot\n\t\t}\n\t}\n\tconst numericDot = curve\n\t\t.at(t)\n\t\t.to(curve.at(t + sign * 4 * NLA_PRECISION))\n\t\t.dot(normal)\n\tassert(!(curve instanceof L3))\n\treturn numericDot\n}\n\nexport const INSIDE = 0,\n\tOUTSIDE = 1,\n\tCOPLANAR_SAME = 2,\n\tCOPLANAR_OPPOSITE = 3,\n\tALONG_EDGE_OR_PLANE = 4\n\n/**\n *\n * @param brep BREP to check\n * @param edge edge to check\n * @param dirAtEdgeA the direction vector to check\n * @param faceNormal If dirAtEdgeA doesn't split a volume, but is along a face, the returned value depends on\n *     wether that faces normal1 points in the same direction as faceNormal\n * @returns INSIDE, OUTSIDE, COPLANAR_SAME or COPLANAR_OPPOSITE\n */\n//function splitsVolumeEnclosingFaces(brep: BRep, edge: Edge, dirAtEdgeA: V3, faceNormal: V3): int {\n//    assert(arguments.length == 4)\n//    //assert(p.equals(edge.a))\n//    const ab1 = edge.aDir.unit()\n//    const relFaces = facesWithEdge(edge, brep.faces) as any[]\n//    relFaces.forEach(faceInfo => {\n//        faceInfo.normalAtEdgeA = faceInfo.face.surface.normalP(edge.a)\n//        faceInfo.edgeDirAtEdgeA = !faceInfo.reversed\n//            ? faceInfo.edge.aDir\n//            : faceInfo.edge.bDir\n//        faceInfo.outsideVector = faceInfo.edgeDirAtEdgeA.cross(faceInfo.normalAtEdgeA)\n//        faceInfo.angle = (dirAtEdgeA.angleRelativeNormal(faceInfo.outsideVector.negated(), ab1) + 2 * Math.PI +\n// NLA_PRECISION / 2) % (2 * Math.PI) }) assert(relFaces.length != 0, edge.toSource()) relFaces.sort((a, b) => a.angle\n// - b.angle) // assert(relFaces.length % 2 == 0, edge.toSource()) // even number of touching faces  if\n// (eq0(relFaces[0].angle)) { //assert(false) todo const coplanarSame = relFaces[0].normalAtEdgeA.dot(faceNormal) > 0;\n// return coplanarSame ? COPLANAR_SAME : COPLANAR_OPPOSITE } else { return !relFaces[0].reversed ? INSIDE : OUTSIDE } }\nexport function splitsVolumeEnclosingFaces(brep: BRep, canonEdge: Edge, dirAtEdgeA: V3, faceNormal: V3): int {\n\tassert(arguments.length == 4)\n\tassert(canonEdge == canonEdge.getCanon())\n\t//assert(p.equals(canonEdge.a))\n\tconst edgeFaceInfos = brep.edgeFaces!.get(canonEdge) as any[]\n\tassertf(() => edgeFaceInfos.length % 2 == 0)\n\tassertf(() => brep.edgeFaces)\n\tconst faceInfo0 = edgeFaceInfos[0]\n\tconst aDir1 = canonEdge.aDir.unit()\n\tconst angleToCanon =\n\t\t(faceInfo0.inside.angleRelativeNormal(dirAtEdgeA, aDir1) + 2 * Math.PI + NLA_PRECISION) % (2 * Math.PI) -\n\t\tNLA_PRECISION\n\tconst nearestFaceInfoIndex = edgeFaceInfos.findIndex(faceInfo => lt(angleToCanon, faceInfo.angle))\n\tconst nearestFaceInfo =\n\t\tedgeFaceInfos[nearestFaceInfoIndex == -1 ? edgeFaceInfos.length - 1 : nearestFaceInfoIndex - 1]\n\tif (eq(nearestFaceInfo.angle, angleToCanon)) {\n\t\t//assert(false) todo\n\t\tconst coplanarSame = nearestFaceInfo.normalAtCanonA.dot(faceNormal) > 0\n\t\treturn coplanarSame ? COPLANAR_SAME : COPLANAR_OPPOSITE\n\t} else {\n\t\treturn nearestFaceInfo.reversed ? INSIDE : OUTSIDE\n\t}\n}\n\nexport function splitsVolumeEnclosingFacesP(brep: BRep, canonEdge: Edge, p: V3, pInside: V3, pFaceNormal: V3): int {\n\tassert(arguments.length == 5)\n\tassert(canonEdge == canonEdge.getCanon())\n\t//assert(p.equals(canonEdge.a))\n\tassertf(() => brep.edgeFaces)\n\tconst edgeFaceInfos = brep.edgeFaces!.get(canonEdge)!\n\tassertf(() => edgeFaceInfos.length % 2 == 0)\n\tconst pDir1 = canonEdge.tangentAt(canonEdge.curve.pointT(p)).unit()\n\tconst faceInfoAngleFromPInsideNeg = (faceInfo: FaceInfo) => {\n\t\tconst faceInfoPDir = faceInfo.edge.getCanon() == faceInfo.edge ? pDir1 : pDir1.negated()\n\t\tconst faceInfoInsideAtP = faceInfo.face.surface.normalP(p).cross(faceInfoPDir)\n\t\tconst faceInfoAngleAtP = pInside.angleRelativeNormal(faceInfoInsideAtP, pDir1)\n\t\treturn -((faceInfoAngleAtP + TAU + NLA_PRECISION) % TAU - NLA_PRECISION)\n\t}\n\tconst nearestFaceInfo = edgeFaceInfos.withMax(faceInfoAngleFromPInsideNeg)\n\tif (eq0(faceInfoAngleFromPInsideNeg(nearestFaceInfo))) {\n\t\t//assert(false) todo\n\t\tconst coplanarSame = nearestFaceInfo.face.surface.normalP(p).dot(pFaceNormal) > 0\n\t\treturn coplanarSame ? COPLANAR_SAME : COPLANAR_OPPOSITE\n\t} else {\n\t\treturn nearestFaceInfo.reversed ? OUTSIDE : INSIDE\n\t}\n}\n\nexport function splitsVolumeEnclosingFacesP2(\n\tbrep: BRep,\n\tcanonEdge: Edge,\n\tp: V3,\n\ttestCurve: Curve,\n\tcurveT: number,\n\tdir: -1 | 1,\n\tfaceNormal: V3,\n): int {\n\tassert(canonEdge == canonEdge.getCanon())\n\t//assert(p.equals(canonEdge.a))\n\tassertf(() => brep.edgeFaces)\n\tconst edgeFaceInfos = brep.edgeFaces!.get(canonEdge) as any[]\n\tassertf(() => edgeFaceInfos.length % 2 == 0)\n\tconst pDir1 = canonEdge.tangentAt(canonEdge.curve.pointT(p)).unit()\n\tlet pInside = testCurve.tangentAt(curveT).times(dir)\n\tif (pInside.isParallelTo(pDir1)) {\n\t\tpInside = testCurve.diff(curveT, 1e-4 * dir / testCurve.tangentAt(curveT).length()).rejectedFrom(pDir1)\n\t\tpInside = pInside.div(pInside.length())\n\t}\n\tlet minValue = 20,\n\t\tadvanced = false,\n\t\tresult = OUTSIDE\n\tfor (const faceInfo of edgeFaceInfos) {\n\t\tconst faceInfoPDir = faceInfo.edge.getCanon() == faceInfo.edge ? pDir1 : pDir1.negated()\n\t\tconst faceInfoInsideAtP = faceInfo.face.surface.normalP(p).cross(faceInfoPDir)\n\t\tconst faceInfoAngleAtP = pInside.angleRelativeNormal(faceInfoInsideAtP, pDir1)\n\t\tconst angle = (faceInfoAngleAtP + TAU + NLA_PRECISION) % TAU - NLA_PRECISION\n\t\tif (eq0(angle)) {\n\t\t\t// do advanced analysis\n\t\t\tconst normVector = faceInfo.face.surface.normalP(p)\n\t\t\tif (faceInfo.face.surface.containsCurve(testCurve)) {\n\t\t\t\tconst coplanarSame = normVector.dot(faceNormal) > 0\n\t\t\t\treturn coplanarSame ? COPLANAR_SAME : COPLANAR_OPPOSITE\n\t\t\t}\n\t\t\tconst testPlane = P3.normalOnAnchor(pDir1, p)\n\t\t\tconst isCurve = faceInfo.face.surface.isCurvesWithPlane(testPlane)[0]\n\t\t\tconst isCurvePT = isCurve.pointT(p)\n\t\t\tconst dirFactor = sign(isCurve.tangentAt(isCurvePT).dot(pInside))\n\t\t\tconst eps = 1e-4\n\t\t\tconst iscd = isCurve\n\t\t\t\t.at(isCurvePT)\n\t\t\t\t.to(isCurve.at(isCurvePT + dir * dirFactor * eps))\n\t\t\t\t.dot(normVector)\n\t\t\tconst ecd = testCurve\n\t\t\t\t.at(curveT)\n\t\t\t\t.to(testCurve.at(curveT + dir * eps))\n\t\t\t\t.dot(normVector)\n\t\t\tconst diff = (iscd - ecd) * (faceInfo.reversed ? -1 : 1)\n\t\t\tif (diff > 0 && (!advanced || diff < minValue)) {\n\t\t\t\tadvanced = true\n\t\t\t\tminValue = diff\n\t\t\t\tresult = faceInfo.reversed ? OUTSIDE : INSIDE\n\t\t\t}\n\t\t} else if (!advanced) {\n\t\t\tif (angle < minValue) {\n\t\t\t\tminValue = angle\n\t\t\t\tresult = faceInfo.reversed ? OUTSIDE : INSIDE\n\t\t\t}\n\t\t}\n\t}\n\treturn result\n}\n\nexport function splitsVolumeEnclosingCone(brep: BRep, p: V3, dir: V3) {\n\tconst testPlane = P3.forAnchorAndPlaneVectors(p, dir, dir.getPerpendicular())\n\tconst rays = []\n\tfor (let k = 0; k < brep.faces.length; k++) {\n\t\tconst planeFace = brep.faces[k] as PlaneFace\n\t\tassertf(() => planeFace instanceof PlaneFace)\n\t\tif (planeFace.getAllEdges().some(edge => edge.a.like(p))) {\n\t\t\tif (testPlane.isParallelToPlane(planeFace.surface.plane)) {\n\t\t\t\tif (planeFace.pointsToInside(p, dir) != PointVsFace.OUTSIDE) {\n\t\t\t\t\treturn ALONG_EDGE_OR_PLANE\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst isLine = L3.fromPlanes(testPlane, planeFace.surface.plane)\n\t\t\t\tconst ps = planeFace.edgeISPsWithPlane(isLine, testPlane)\n\t\t\t\tlet i = 0\n\t\t\t\twhile (i < ps.length) {\n\t\t\t\t\tconst a = ps[i++],\n\t\t\t\t\t\tb = ps[i++]\n\t\t\t\t\tconst out = a.p.like(p)\n\t\t\t\t\tif (out || b.p.like(p)) {\n\t\t\t\t\t\tconst dir2 = out ? isLine.dir1 : isLine.dir1.negated()\n\t\t\t\t\t\tconst angle =\n\t\t\t\t\t\t\t(dir.angleRelativeNormal(dir2, testPlane.normal1) + 2 * Math.PI + NLA_PRECISION / 2) %\n\t\t\t\t\t\t\t(2 * Math.PI)\n\t\t\t\t\t\trays.push({ angle: angle, out: out })\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\trays.sort((a, b) => a.angle - b.angle)\n\t//console.log(\"testPlane\", testPlane.toSource(), \"rays\", rays.toSource())\n\n\tif (eq0(rays[0].angle)) {\n\t\treturn ALONG_EDGE_OR_PLANE\n\t} else {\n\t\treturn rays[0].out ? OUTSIDE : INSIDE\n\t}\n}\n\nexport function splitsVolumeEnclosingCone2(brep: BRep, p: V3, curve: Curve, curveT: number, fb: 1 | -1) {\n\tassert(curve.containsPoint(p))\n\tconst dir = curve.tangentAt(curveT).times(fb)\n\tconst testPlane = P3.forAnchorAndPlaneVectors(p, dir, dir.getPerpendicular())\n\tconst rays = []\n\tconst pFaces = brep.faces.filter(face => face.getAllEdges().some(edge => edge.a.like(p)))\n\tfor (let k = 0; k < pFaces.length; k++) {\n\t\tconst face = pFaces[k]\n\t\tif (face.surface.containsCurve(curve)) {\n\t\t\t//assert(false)\n\t\t\tif (face.pointsToInside3(p, curve, curveT, fb) != PointVsFace.OUTSIDE) {\n\t\t\t\treturn ALONG_EDGE_OR_PLANE\n\t\t\t}\n\t\t}\n\t}\n\tconst EPS = 1e-6\n\treturn brep.containsPoint(curve.at(curveT + fb * EPS), true) ? INSIDE : OUTSIDE\n}\n\nexport function fff(\n\tinfo: { face: Face; edge: Edge; normalAtCanonA: V3; inside: V3; reversed: boolean; angle: number },\n\tsurface: Surface,\n): int {\n\tconst canonA = info.edge.reversed ? info.edge.b : info.edge.a\n\tconst surfaceNormalAtCanonA = surface.normalP(canonA)\n\tconst dot = snap0(info.inside.dot(surfaceNormalAtCanonA))\n\tif (0 !== dot) {\n\t\treturn 0 < dot ? OUTSIDE : INSIDE\n\t}\n\tif (surface.isCoplanarTo(info.face.surface)) {\n\t\treturn 0 < info.normalAtCanonA.dot(surfaceNormalAtCanonA) ? COPLANAR_SAME : COPLANAR_OPPOSITE\n\t}\n\tthrow new Error()\n}\n\nexport function triangulateVertices(normal: V3, vertices: V3[], holeStarts: int[]) {\n\tconst absMaxDim = normal.maxAbsDim(),\n\t\tfactor = sign(normal.e(absMaxDim))\n\tconst contour = new Float64Array(vertices.length * 2)\n\tlet i = vertices.length\n\t/*\n\t var [coord0, coord1] = [['y', 'z'], ['z', 'x'], ['x', 'y']][maxAbsDim]\n\t while (i--) {\n\t contour[i * 2    ] = vertices[i][coord0] * factor\n\t contour[i * 2 + 1] = vertices[i][coord1]\n\t }\n\t */\n\n\twhile (i--) {\n\t\t// unroll disambiguation instead of accessing elements by string name ([coord0] etc)\n\t\t// as it confuses google closure\n\t\tswitch (absMaxDim) {\n\t\t\tcase 0:\n\t\t\t\tcontour[i * 2] = vertices[i].y * factor\n\t\t\t\tcontour[i * 2 + 1] = vertices[i].z\n\t\t\t\tbreak\n\t\t\tcase 1:\n\t\t\t\tcontour[i * 2] = vertices[i].z * factor\n\t\t\t\tcontour[i * 2 + 1] = vertices[i].x\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\tcontour[i * 2] = vertices[i].x * factor\n\t\t\t\tcontour[i * 2 + 1] = vertices[i].y\n\t\t\t\tbreak\n\t\t}\n\t}\n\treturn earcut(contour, holeStarts)\n}\n\n/**\n * Solves a quadratic system of equations of the form\n *      a * x + b * y = c\n *      x² + y² = 1\n * This can be understood as the intersection of the unit circle with a line.\n *      => y = (c - a x) / b\n *      => x² + (c - a x)² / b² = 1\n *      => x² b² + c² - 2 c a x + a² x² = b²\n *      => (a² + b²) x² - 2 a c x + (c² - b²) = 0\n *\n * a * b + (b -c) * (b + c)\n */\nexport function intersectionUnitCircleLine(\n\ta: number,\n\tb: number,\n\tc: number,\n): { x1: number; y1: number; x2: number; y2: number } {\n\tassertNumbers(a, b, c)\n\t// TODO: disambiguate on a < b\n\tconst term = sqrt(a * a + b * b - c * c)\n\treturn {\n\t\tx1: (a * c + b * term) / (a * a + b * b),\n\t\tx2: (a * c - b * term) / (a * a + b * b),\n\t\ty1: (b * c - a * term) / (a * a + b * b),\n\t\ty2: (b * c + a * term) / (a * a + b * b),\n\t}\n}\n\nexport function intersectionUnitCircleLine2(a: number, b: number, c: number): [number, number][] {\n\tassertNumbers(a, b, c)\n\t// TODO: disambiguate on a < b\n\t// cf. pqFormula\n\tconst termSqr = snap0(a * a + b * b - c * c)\n\tif (termSqr < 0) {\n\t\treturn []\n\t} else if (termSqr == 0) {\n\t\treturn [[a * c / (a * a + b * b), b * c / (a * a + b * b)]]\n\t} else {\n\t\tconst term = sqrt(termSqr)\n\t\treturn [\n\t\t\t[(a * c + b * term) / (a * a + b * b), (b * c - a * term) / (a * a + b * b)],\n\t\t\t[(a * c - b * term) / (a * a + b * b), (b * c + a * term) / (a * a + b * b)],\n\t\t]\n\t}\n}\n\nexport function intersectionCircleLine(\n\ta: number,\n\tb: number,\n\tc: number,\n\tr: number,\n): { x1: number; x2: number; y1: number; y2: number } {\n\tassertNumbers(a, b, c, r)\n\tconst term = sqrt(r * r * (a * a + b * b) - c * c)\n\treturn {\n\t\tx1: (a * c + b * term) / (a * a + b * b),\n\t\tx2: (a * c - b * term) / (a * a + b * b),\n\t\ty1: (b * c - a * term) / (a * a + b * b),\n\t\ty2: (b * c + a * term) / (a * a + b * b),\n\t}\n}\n\n/**\n * Solves a quadratic system of equations of the form\n *      a * x + b * y = c\n *      x^2 - y^2 = 1\n * This can be understood as the intersection of the unit hyperbola with a line.\n *\n * @returns with x1 >= x2 and y1 <= y2\n * a * b + (b -c) * (b + c)\n */\nexport function intersectionUnitHyperbolaLine(\n\ta: number,\n\tb: number,\n\tc: number,\n): { x1: number; y1: number; x2: number; y2: number } {\n\tassertNumbers(a, b, c)\n\tconst aa = a * a,\n\t\tbb = b * b,\n\t\tcc = c * c\n\t// TODO: disambiguate on a < b\n\t//var xTerm = sqrt(4*cc*aa-4*(bb-aa)*(-cc-bb))\n\tconst xTerm = 2 * sqrt(bb * cc + bb * bb - aa * bb)\n\tconst yTerm = sqrt(4 * cc * bb - 4 * (bb - aa) * (cc - aa))\n\treturn {\n\t\tx1: (-2 * a * c + xTerm) / 2 / (bb - aa),\n\t\tx2: (-2 * a * c - xTerm) / 2 / (bb - aa),\n\t\ty1: (2 * b * c - yTerm) / 2 / (bb - aa),\n\t\ty2: (2 * b * c + yTerm) / 2 / (bb - aa),\n\t}\n}\n\nexport function curvePointPP(ps1: ParametricSurface, ps2: ParametricSurface, startPoint: V3, dontCheck?: boolean) {\n\tconst EPS = NLA_PRECISION / 4\n\t//if (!dontCheck) {\n\t//    const p = curvePointPP(ps1, ps2, startPoint, true).p\n\t//    if (!ps1.containsPoint(p)) {\n\t//        console.log(\"foo, startPoint was \" + startPoint.sce)\n\t//        ps1.containsPoint(p)\n\t//    }\n\t//}\n\tlet Q = startPoint\n\tlet st1 = ps1.pointFoot(Q)\n\tlet st2 = ps2.pointFoot(Q)\n\tlet a, b, aNormal, bNormal, abNormalsCross\n\t//console.log(\"curvePointPP, startPoint was \" + startPoint.sce)\n\t//console.log(Q.sce+ ',')\n\tlet i = 16\n\tdo {\n\t\ta = ps1.pST(st1.x, st1.y)\n\t\tb = ps2.pST(st2.x, st2.y)\n\t\tif (eq0(a.distanceTo(b), EPS)) break\n\t\t// drPs.push({p:a,text:'a'+j+' '+i})\n\t\t// drPs.push({p:b,text:'b'+j+' '+i})\n\t\taNormal = ps1.normalST(st1.x, st1.y)\n\t\tbNormal = ps2.normalST(st2.x, st2.y)\n\t\t// next Q is the intersection of the planes\n\t\t// (x - a) * aNormal,\n\t\t// (x - b) * bNormal and\n\t\t// (x - Q) * (aNormal X bNormal)\n\t\tabNormalsCross = aNormal.cross(bNormal)\n\t\t// drVs.push({anchor: Q, dir: aNormal})\n\t\t// drVs.push({anchor: Q, dir: bNormal})\n\t\tQ = V3.add(\n\t\t\tbNormal.cross(abNormalsCross).times(a.dot(aNormal)),\n\t\t\tabNormalsCross.cross(aNormal).times(b.dot(bNormal)),\n\t\t\tabNormalsCross.times(abNormalsCross.dot(Q)),\n\t\t).div(abNormalsCross.squared())\n\t\t//console.log(Q.sce+ ',')\n\t\t// feet of Q on ps1 and ps2 (closest points)\n\t\tst1 = ps1.pointFoot(Q, st1.x, st1.y)\n\t\tst2 = ps2.pointFoot(Q, st2.x, st2.y)\n\t} while (--i)\n\t//assert(ps1.containsPoint(Q), Q, ps1)\n\t//assert(ps2.containsPoint(Q))\n\tif (!eq0(a.distanceTo(b), EPS)) {\n\t\treturn undefined\n\t}\n\treturn { p: Q, st1: st1, st2: st2 }\n}\n\n/**\n * Follow the intersection curve of two parametric surfaces starting from a given point.\n * @param {ParametricSurface} ps1\n * @param {ParametricSurface} ps2\n * @param {number} s1Step\n * @param {number} t1Step\n * @param {number} s2Step\n * @param {number} t2Step\n * @param {number} curveStepSize\n * @return {Curve[]}\n */\nexport function followAlgorithmPP(\n\tps1: ParametricSurface,\n\tps2: ParametricSurface,\n\tstartPoint: V3,\n\tcurveStepSize: number,\n\tbounds1: (s: number, t: number) => boolean = stInAABB2.bind(undefined, ps1),\n\tbounds2: (s: number, t: number) => boolean = stInAABB2.bind(undefined, ps2),\n): { points: V3[]; tangents: V3[]; st1s: V3[]; st2s: V3[] } {\n\tconst points: V3[] = []\n\tconst tangents: V3[] = []\n\tconst st1s: V3[] = []\n\tconst st2s: V3[] = []\n\tlet Q = startPoint\n\tlet st1 = ps1.stP(Q)\n\tlet st2 = ps2.stP(Q)\n\tassert(ps1.pST(st1.x, st1.y).like(Q))\n\tassert(st1.like(ps1.pointFoot(Q, st1.x, st1.y)))\n\tassert(st2.like(ps2.pointFoot(Q, st2.x, st2.y)))\n\tassert(ps2.pST(st2.x, st2.y).like(Q))\n\tfor (let i = 0; i < 1000; i++) {\n\t\t{\n\t\t\t;({ p: Q, st1, st2 } = curvePointPP(ps1, ps2, Q)!)\n\t\t}\n\t\tassert(ps1.containsPoint(Q), Q, ps1)\n\t\tassert(ps2.containsPoint(Q))\n\t\tconst aNormal = ps1.normalST(st1.x, st1.y)\n\t\tconst bNormal = ps2.normalST(st2.x, st2.y)\n\t\tconst tangent = aNormal.cross(bNormal).toLength(curveStepSize)\n\t\ttangents.push(tangent)\n\t\tpoints.push(Q)\n\t\tst1s.push(st1)\n\t\tst2s.push(st2)\n\t\tif (i > 4) {\n\t\t\tif (!bounds1(st1.x, st1.y) || !bounds2(st2.x, st2.y)) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tQ = Q.plus(tangent)\n\t}\n\treturn { points, tangents, st1s, st2s }\n}\n\n/**\n * Iteratively calculate points on an implicit 2D curve.\n * @param ic The curve in question.\n * @param startP The point at which to start.\n * @param stepLength The step the algorithm takes. Will be the approximate distance between points.\n * @param bounds Bounds function.\n * @param endP End point. If undefined, algorithm will continue until out of bounds or back at start point.\n * @param startTangent TODO Ignore this.\n * @returns Calculated points and tangents. points[0] and tangents[0] will be startP and startTangent.\n */\nexport function followAlgorithm2d(\n\tic: MathFunctionR2R,\n\tstartP: V3,\n\tstepLength: number = 0.5,\n\tbounds: AABB2,\n\tvalidST: R2<boolean>,\n\tendP?: V3,\n\tstartTangent?: V3,\n): {\n\tpoints: V3[]\n\ttangents: V3[]\n} {\n\tassertNumbers(stepLength, ic(0, 0))\n\tassertVectors(startP)\n\tif (!startTangent) {\n\t\tstartTangent = new V3(-ic.y(startP.x, startP.y), ic.x(startP.x, startP.y), 0).toLength(stepLength)\n\t}\n\tassertVectors(startTangent)\n\tconst points: V3[] = []\n\tconst tangents: V3[] = []\n\tassert(eq0(ic(startP.x, startP.y), 0.01), 'isZero(implicitCurve(startPoint.x, startPoint.y))')\n\tconst eps = stepLength / 32\n\tlet i = 0,\n\t\tp = startP,\n\t\ttangent = startTangent,\n\t\tfullLoop = false\n\tdo {\n\t\tpoints.push(p)\n\t\ttangents.push(tangent)\n\t\tconst searchStart = p.plus(tangent)\n\t\tassert(searchStart)\n\t\tconst newP = curvePointMF(ic, searchStart)\n\t\tconst dfpdx = ic.x(newP.x, newP.y),\n\t\t\tdfpdy = ic.y(newP.x, newP.y)\n\t\tconst newTangent = new V3(-dfpdy, dfpdx, 0).toLength(stepLength)\n\t\t//const reversedDir = p.minus(prevp).dot(tangent) < 0\n\t\tassert(!p.equals(newP))\n\t\t// check if we passed a singularity\n\t\tif (tangent.dot(newTangent) < 0) {\n\t\t\tconst singularity = newtonIterate2d(ic.x, ic.y, p.x, p.y)!\n\t\t\tif (eq0(ic(singularity.x, singularity.y)) && singularity.distanceTo(p) < abs(stepLength)) {\n\t\t\t\t// end on this point\n\t\t\t\tpoints.push(singularity)\n\t\t\t\ttangents.push(p.to(singularity))\n\t\t\t\tbreak\n\t\t\t} else {\n\t\t\t\tthrow new Error()\n\t\t\t}\n\t\t}\n\t\t// check for endP\n\t\tif (endP && p.equals(endP)) {\n\t\t\tbreak\n\t\t}\n\t\t// check if loop\n\t\tif (fullLoop) {\n\t\t\tif (p.distanceTo(startP) > abs(stepLength)) {\n\t\t\t\tconst p = points.pop()\n\t\t\t\ttangents.pop()\n\t\t\t\tassert(points.last.distanceTo(startP) <= abs(stepLength))\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else {\n\t\t\tif (i > 4 && p.distanceTo(startP) <= abs(stepLength)) {\n\t\t\t\tfullLoop = true\n\t\t\t}\n\t\t}\n\t\t// check if out of bounds\n\t\tif (i > 1 && !stInAABB2(bounds, p.x, p.y)) {\n\t\t\tconst endP = figureOutBorderPoint(bounds, p, ic)\n\t\t\tpoints.pop()\n\t\t\ttangents.pop()\n\t\t\tif (points.last.distanceTo(endP) < abs(stepLength) / 2) {\n\t\t\t\tpoints.pop()\n\t\t\t\ttangents.pop()\n\t\t\t}\n\t\t\tconst endTangent = new V3(-ic.y(endP.x, endP.y), ic.x(endP.x, endP.y), 0).toLength(stepLength)\n\t\t\tpoints.push(endP)\n\t\t\ttangents.push(endTangent)\n\t\t\tbreak\n\t\t}\n\t\tif (i > 4 && !validST(p.x, p.y)) {\n\t\t\tbreak\n\t\t}\n\t\tassert(eq0(ic(newP.x, newP.y), NLA_PRECISION * 2), p, newP, searchStart)\n\t\ttangent = newTangent\n\t\tp = newP\n\t} while (++i < 1000)\n\tassert(i < 1000)\n\n\t//assert(points.length > 6)\n\treturn { points, tangents }\n}\n\n/**\n * Given a point p just outside the bounds, figure out the nearby intersection of the bounds with the ic.\n * @param bounds\n * @param p\n * @param ic\n */\nfunction figureOutBorderPoint(bounds: AABB2, p: V3, ic: MathFunctionR2R): V3 {\n\tif (p.x < bounds.sMin || bounds.sMax < p.x) {\n\t\tconst s = bounds.sMax < p.x ? bounds.sMax : bounds.sMin\n\t\tconst t = newtonIterateWithDerivative(t => ic(s, t), p.y, 4, t => ic.y(s, t))\n\t\tif (stInAABB2(bounds, s, t)) {\n\t\t\treturn new V3(s, t, 0)\n\t\t}\n\t}\n\tif (p.y < bounds.tMin || bounds.tMax < p.y) {\n\t\tconst t = bounds.tMax < p.y ? bounds.tMax : bounds.tMin\n\t\tconst s = newtonIterateWithDerivative(s => ic(s, t), p.x, 4, s => ic.x(s, t))\n\t\tassert(stInAABB2(bounds, s, t))\n\t\treturn new V3(s, t, 0)\n\t}\n\tthrow new Error(p + ' ' + bounds)\n}\n\nexport function followAlgorithm2dAdjustable(\n\tic: MathFunctionR2R,\n\tstart: V3,\n\tstepLength: number = 0.5,\n\tbounds: (s: number, t: number) => boolean,\n\tendp: V3 = start,\n): { points: V3[]; tangents: V3[] } {\n\tassertNumbers(stepLength, ic(0, 0))\n\tassertVectors(start)\n\t//assert (!startDir || startDir instanceof V3)\n\tconst points = []\n\tconst tangents = []\n\tassert(eq0(ic(start.x, start.y), 0.01), 'isZero(implicitCurve(startPoint.x, startPoint.y))')\n\tconst eps = stepLength / 32\n\tlet p = start,\n\t\tprevp = p\n\tlet i = 0\n\tdo {\n\t\tconst dfpdx = ic.x(p.x, p.y),\n\t\t\tdfpdy = ic.y(p.x, p.y)\n\t\tconst dfpdxx = ic.xx!(p.x, p.y),\n\t\t\tdfpdyy = ic.yy!(p.x, p.y),\n\t\t\tdfpdxy = ic.xy!(p.x, p.y)\n\t\tconst c2factor = abs(\n\t\t\t(dfpdy ** 2 * dfpdxx - 2 * dfpdx * dfpdy * dfpdxy + dfpdx ** 2 * dfpdyy) / (dfpdx ** 2 + dfpdy ** 2) ** 2,\n\t\t)\n\t\tconst c2 = new V3(dfpdx, dfpdy, 0).times(c2factor)\n\t\tconst s = 1 / 16 / c2.length()\n\t\tconst tangent = new V3(-dfpdy, dfpdx, 0).unit()\n\t\tconst reversedDir = p.minus(prevp).dot(tangent) < 0\n\t\tconst newPStart = p.plus(tangent.times(s).plus(c2.times(s ** 2 / 2)))\n\t\tpoints.push(p)\n\t\ttangents.push(tangent)\n\t\tprevp = p\n\t\tconst newP = curvePointMF(ic, newPStart)\n\t\tif (newP.equals(p)) {\n\t\t\tassertNever()\n\t\t}\n\t\tconsole.log(p.to(newP).length())\n\t\tp = newP\n\n\t\tassert(eq0(ic(p.x, p.y)))\n\t} while (i++ < 1000 && (i < 4 || prevp.distanceTo(endp) > stepLength) && bounds(p.x, p.y))\n\tassert(i != 1000)\n\t//assert(bounds(p.x, p.y))\n\tconst end = i < 4 || prevp.distanceTo(endp) > stepLength ? p : endp\n\tconst endTangent = new V3(-ic.y(end.x, end.y), ic.x(end.x, end.y), 0).toLength(stepLength)\n\tpoints.push(end)\n\ttangents.push(endTangent)\n\n\t//assert(points.length > 6)\n\t// TODO gleichmäßige Verteilung der Punkte\n\treturn { points, tangents }\n}\n\n// both curves must be in the same s-t coordinates for this to make sense\nexport function intersectionICurveICurve(\n\tiCurve1: (s: number, t: number) => number,\n\tstartParams1: V3,\n\tendParams1: V3,\n\tstartDir: V3,\n\tstepLength: number,\n\tiCurve2: (s: number, t: number) => number,\n) {\n\tassertNumbers(stepLength, iCurve1(0, 0), iCurve2(0, 0))\n\tassertVectors(startParams1, endParams1)\n\tassert(!startDir || startDir instanceof V3)\n\tconst vertices = []\n\tassert(eq0(iCurve1(startParams1.x, startParams1.y)))\n\tstepLength = stepLength || 0.5\n\tconst eps = 1e-5\n\tlet p = startParams1,\n\t\tprevp = p // startDir ? p.minus(startDir) : p\n\tlet i = 0\n\twhile (i++ < 1000 && (i < 4 || p.distanceTo(endParams1) > 1.1 * stepLength)) {\n\t\tconst fp = iCurve1(p.x, p.y)\n\t\tconst dfpdx = (iCurve1(p.x + eps, p.y) - fp) / eps,\n\t\t\tdfpdy = (iCurve1(p.x, p.y + eps) - fp) / eps\n\t\tlet tangent = new V3(-dfpdy, dfpdx, 0).toLength(stepLength)\n\t\tif (p.minus(prevp).dot(tangent) < 0) tangent = tangent.negated()\n\t\tprevp = p\n\t\tp = curvePoint(iCurve1, p.plus(tangent))\n\t\tvertices.push(p)\n\t}\n\t// TODO gleichmäßige Verteilung der Punkte\n\treturn vertices\n}\n\nexport function intersectionICurveICurve2(iCurve1: R2_R, loopPoints1: V3[], iCurve2: R2_R) {\n\tlet p = loopPoints1[0],\n\t\tval = iCurve2(p.x, p.y),\n\t\tlastVal\n\tconst iss = []\n\tfor (let i = 0; i < loopPoints1.length; i++) {\n\t\tlastVal = val\n\t\tp = loopPoints1[i]\n\t\tval = iCurve2(p.x, p.y)\n\t\tif (val * lastVal <= 0) {\n\t\t\t// TODO < ?\n\t\t\tiss.push(newtonIterate2d(iCurve1, iCurve2, p.x, p.y))\n\t\t}\n\t}\n\treturn iss\n}\n\n// export function intersectionPCurveISurface(\n// \tparametricCurve: Curve,\n// \tsearchStart: number,\n// \tsearchEnd: number,\n// \tsearchStep: number,\n// \timplicitSurface: ImplicitSurface,\n// ) {\n// \tassertNumbers(searchStart, searchEnd, searchStep)\n// \tconst iss = []\n// \tlet val = implicitSurface(parametricCurve(searchStart)),\n// \t\tlastVal\n// \tfor (let t = searchStart + searchStep; t <= searchEnd; t += searchStep) {\n// \t\tlastVal = val\n// \t\tval = implicitSurface(parametricCurve(t))\n// \t\tif (val * lastVal <= 0) {\n// \t\t\tiss.push(newtonIterate1d(t => implicitSurface(parametricCurve(t)), t))\n// \t\t}\n// \t}\n// \treturn iss\n// }\n\nexport function cassini(a: number, c: number): (x: number, y: number) => number {\n\treturn (x, y) => (x * x + y * y) * (x * x + y * y) - 2 * c * c * (x * x - y * y) - (a ** 4 - c ** 4)\n}\n\n/**\n * A function R² -> R with first and (optionally) second derivatives.\n */\nexport interface MathFunctionR2R {\n\treadonly x: R2_R\n\treadonly y: R2_R\n\treadonly xx?: R2_R\n\treadonly xy?: R2_R\n\treadonly yy?: R2_R\n\n\t(s: number, t: number): number\n}\n\nexport namespace MathFunctionR2R {\n\texport function forNerdamer(\n\t\texpression: nerdamer.ExpressionParam,\n\t\targs: [string, string] = ['x', 'y'],\n\t): MathFunctionR2R {\n\t\tconst ndf = nerdamer(expression)\n\t\tconst ndfs = nerdamer.diff(ndf, args[0])\n\t\tconst ndft = nerdamer.diff(ndf, args[1])\n\t\tconst f = ndf.buildFunction(args) as any\n\t\tf.x = ndfs.buildFunction(args)\n\t\tf.y = ndft.buildFunction(args)\n\t\tf.xx = nerdamer.diff(ndfs, args[0]).buildFunction(args)\n\t\tf.xy = nerdamer.diff(ndfs, args[1]).buildFunction(args)\n\t\tf.yy = nerdamer.diff(ndft, args[1]).buildFunction(args)\n\t\treturn f\n\t}\n\n\texport function nerdamerToR2_R(expression: nerdamer.Expression, args: [string, string] = ['x', 'y']) {\n\t\treturn expression.buildFunction(args)\n\t}\n\n\texport function forFFxFy(f: R2_R, fx: R2_R, fy: R2_R): MathFunctionR2R {\n\t\t;(f as any).x = fx\n\t\t;(f as any).y = fy\n\t\treturn f as any\n\t}\n}\nexport const cas2 = cassini(0.9, 1.02)\n\nexport function arrayLerp<T>(lerp: (a: T, b: T, t: number) => T, arr: T[], t: number): T {\n\tif (0 === t % 1) return arr[t]\n\treturn lerp(arr[Math.floor(t)], arr[Math.ceil(t)], t % 1)\n}\n","import { assert } from 'ts3dutils'\r\nimport { getGlobalId } from './index'\r\n\r\nexport function doNotSerialize(target: any, key: PropertyKey) {\r\n\tconst map = target.__SERIALIZATION_BLACKLIST || (target.__SERIALIZATION_BLACKLIST = {})\r\n\tmap[key] = 'no'\r\n}\r\n\r\nexport class ClassSerializer {\r\n\tCLASS_NAMES = new Map<any, string>()\r\n\tNAME_CLASSES = new Map<string, any>()\r\n\tprivate updater: ((v: any) => void) | undefined\r\n\r\n\tconstructor() {\r\n\t\tthis.addClass('Object', Object)\r\n\t}\r\n\r\n\taddClass(name: string, clazz: any) {\r\n\t\tif (this.NAME_CLASSES.has(name)) {\r\n\t\t\tthrow new Error(name)\r\n\t\t}\r\n\t\tthis.NAME_CLASSES.set(name, clazz)\r\n\t\tthis.CLASS_NAMES.set(clazz, name)\r\n\t\treturn this\r\n\t}\r\n\r\n\taddNamespace(namespace: { [symbol: string]: any }, namespaceName?: string) {\r\n\t\tObject.keys(namespace).forEach(symbol => {\r\n\t\t\tconst o = namespace[symbol]\r\n\t\t\tif ('function' == typeof o && o.name) {\r\n\t\t\t\tthis.addClass((namespaceName ? namespaceName + '.' : '') + symbol, o)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn this\r\n\t}\r\n\r\n\tsetUpdater(f: (v: any) => void) {\r\n\t\tthis.updater = f\r\n\t\treturn this\r\n\t}\r\n\r\n\tserialize(v: any) {\r\n\t\treturn JSON.stringify(this.serializeObj(v))\r\n\t}\r\n\r\n\tserializeObj(v: any) {\r\n\t\tconst path: string[] = []\r\n\t\tconst gatherList = (v: any) => {\r\n\t\t\t//console.log(path.toString())\r\n\t\t\tif (undefined !== v && v.hasOwnProperty('constructor') && this.CLASS_NAMES.has(v.constructor)) {\r\n\t\t\t\t// do nothing, this is a class/function prototype\r\n\t\t\t} else if (Array.isArray(v)) {\r\n\t\t\t\tif (visited.has(v)) {\r\n\t\t\t\t\tif (!listMap.has(v)) {\r\n\t\t\t\t\t\tlistMap.set(v, resultList.length)\r\n\t\t\t\t\t\tresultList.push(v)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvisited.add(v)\r\n\t\t\t\t\tfor (let i = 0; i < v.length; i++) {\r\n\t\t\t\t\t\tpath.push('' + i)\r\n\t\t\t\t\t\tgatherList(v[i])\r\n\t\t\t\t\t\tpath.pop()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (undefined !== v && 'object' == typeof v) {\r\n\t\t\t\tif (visited.has(v)) {\r\n\t\t\t\t\tif (!listMap.has(v)) {\r\n\t\t\t\t\t\tlistMap.set(v, resultList.length)\r\n\t\t\t\t\t\tresultList.push(v)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tassert(!v.__noxTarget || !visited.has(v.__noxTarget))\r\n\t\t\t\t\tassert(!v.__noxProxy || !visited.has(v.__noxProxy))\r\n\t\t\t\t\tvisited.add(v)\r\n\t\t\t\t\tif (!v.getConstructorParameters) {\r\n\t\t\t\t\t\tfor (const key of Object.keys(v).sort()) {\r\n\t\t\t\t\t\t\tif (key == '__noxProxy' || key == '__noxTarget') continue\r\n\t\t\t\t\t\t\tif (!v.__SERIALIZATION_BLACKLIST || !v.__SERIALIZATION_BLACKLIST[key]) {\r\n\t\t\t\t\t\t\t\tpath.push(key)\r\n\t\t\t\t\t\t\t\tgatherList(v[key])\r\n\t\t\t\t\t\t\t\tpath.pop()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpath.push('proto')\r\n\t\t\t\t\tgatherList(Object.getPrototypeOf(v))\r\n\t\t\t\t\tpath.pop()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst transform = (v: any, allowLinks: boolean, first?: true): any => {\r\n\t\t\tif ('string' == typeof v || 'number' == typeof v || 'boolean' == typeof v || null === v) {\r\n\t\t\t\treturn v\r\n\t\t\t}\r\n\t\t\tif ('undefined' == typeof v) {\r\n\t\t\t\treturn { '#REF': -1 }\r\n\t\t\t}\r\n\t\t\tif (v.hasOwnProperty('constructor') && this.CLASS_NAMES.has(v.constructor)) {\r\n\t\t\t\treturn { '#REF': this.CLASS_NAMES.get(v.constructor) }\r\n\t\t\t}\r\n\t\t\tlet index\r\n\t\t\tif (allowLinks && !first && undefined !== (index = listMap.get(v))) {\r\n\t\t\t\treturn { '#REF': index }\r\n\t\t\t}\r\n\r\n\t\t\tif (Array.isArray(v)) {\r\n\t\t\t\treturn v.map(x => transform(x, allowLinks))\r\n\t\t\t}\r\n\r\n\t\t\t//if (mobx && mobx.isObservableArray(v)) {\r\n\t\t\t//\tconst result = {'#PROTO': 'ObservableArray'} as any\r\n\t\t\t//\tv.forEach((val, i) => result[i] = transform(val))\r\n\t\t\t//\treturn result\r\n\t\t\t//}\r\n\r\n\t\t\tif ('object' == typeof v) {\r\n\t\t\t\tif (v.getConstructorParameters) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t'#CONSTRUCTOR': this.CLASS_NAMES.get(v.constructor),\r\n\t\t\t\t\t\t'#ARGS': transform(v.getConstructorParameters(), false),\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconst result: any = {}\r\n\t\t\t\tif (Object.prototype !== Object.getPrototypeOf(v)) {\r\n\t\t\t\t\tresult['#PROTO'] = transform(Object.getPrototypeOf(v), allowLinks)\r\n\t\t\t\t}\r\n\t\t\t\tfor (const key of Object.keys(v)) {\r\n\t\t\t\t\tif (key == '__noxProxy' || key == '__noxTarget') continue\r\n\t\t\t\t\tif (!v.__SERIALIZATION_BLACKLIST || !v.__SERIALIZATION_BLACKLIST[key]) {\r\n\t\t\t\t\t\tresult[key] = transform(v[key], allowLinks)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\r\n\t\t\tthrow new Error('?' + typeof v + v.toString())\r\n\t\t}\r\n\r\n\t\tconst visited = new Set()\r\n\t\tconst listMap = new Map()\r\n\t\tlet resultList: {}[] = []\r\n\t\tlistMap.set(v, 0)\r\n\t\tresultList.push(v)\r\n\t\tgatherList(v)\r\n\r\n\t\tresultList = resultList.map(v => transform(v, true, true))\r\n\t\treturn resultList\r\n\t}\r\n\r\n\tunserialize(string: string) {\r\n\t\tlet depth = 0\r\n\t\tconst fixObject = (v: any, onReady: (x: any) => void): void => {\r\n\t\t\tdepth++\r\n\t\t\tif (depth > 100) throw new Error()\r\n\t\t\tif (v && v.constructor === Array) {\r\n\t\t\t\tonReady(v)\r\n\t\t\t\tfor (let i = 0; i < v.length; i++) {\r\n\t\t\t\t\tfixObject(v[i], x => (v[i] = x))\r\n\t\t\t\t}\r\n\t\t\t} else if ('object' == typeof v && undefined != v) {\r\n\t\t\t\tif ('#CONSTRUCTOR' in v) {\r\n\t\t\t\t\tconst protoName = v['#CONSTRUCTOR'] as string\r\n\t\t\t\t\tconst proto = this.NAME_CLASSES.get(protoName as string)\r\n\t\t\t\t\tassert(proto, protoName + ' Missing ')\r\n\t\t\t\t\tlet args: any[] = undefined!\r\n\t\t\t\t\tfixObject(v['#ARGS'], x => (args = x))\r\n\t\t\t\t\tonReady(new proto(...args))\r\n\t\t\t\t} else if ('#REF' in v) {\r\n\t\t\t\t\tconst ref = v['#REF']\r\n\t\t\t\t\tif ('string' == typeof ref) {\r\n\t\t\t\t\t\tonReady(this.NAME_CLASSES.get(ref).prototype)\r\n\t\t\t\t\t} else if ('number' == typeof ref) {\r\n\t\t\t\t\t\tif (-1 == ref) {\r\n\t\t\t\t\t\t\tonReady(undefined)\r\n\t\t\t\t\t\t} else if (fixedObjects[ref]) {\r\n\t\t\t\t\t\t\tonReady(fixedObjects[ref])\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfixObject(tree[ref], x => onReady((fixedObjects[ref] = x)))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet result: any\r\n\t\t\t\t\tif ('#PROTO' in v) {\r\n\t\t\t\t\t\tfixObject(v['#PROTO'], x => {\r\n\t\t\t\t\t\t\tresult = Object.create(x)\r\n\t\t\t\t\t\t\tonReady(result)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tonReady((result = v))\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst keys = Object.keys(v)\r\n\t\t\t\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t\t\t\t\t//if ('name' == keys[i]) console.log(result)\r\n\t\t\t\t\t\tif ('#PROTO' != keys[i]) {\r\n\t\t\t\t\t\t\tfixObject(v[keys[i]], x => (result[keys[i]] = x))\r\n\t\t\t\t\t\t\t//Object.defineProperty(result, keys[i], {\r\n\t\t\t\t\t\t\t//\tvalue: fixObjects(v[keys[i]]),\r\n\t\t\t\t\t\t\t//\tenumerable: true,\r\n\t\t\t\t\t\t\t//\twritable: true,\r\n\t\t\t\t\t\t\t//\tconfigurable: true\r\n\t\t\t\t\t\t\t//})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tObject.defineProperty(result, 'loadID', {\r\n\t\t\t\t\t\tvalue: getGlobalId(),\r\n\t\t\t\t\t\tenumerable: false,\r\n\t\t\t\t\t\twritable: false,\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.updater && this.updater(result)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tonReady(v)\r\n\t\t\t}\r\n\t\t\tdepth--\r\n\t\t}\r\n\r\n\t\t// const linkReferences = (v: any) => {\r\n\t\t// \tif (v && v.constructor === Array) {\r\n\t\t// \t\tfor (let i = 0; i < v.length; i++) {\r\n\t\t// \t\t\tv[i] = linkReferences(v[i])\r\n\t\t// \t\t}\r\n\t\t// \t\treturn v\r\n\t\t// \t} else if ('object' == typeof v && undefined != v) {\r\n\t\t// \t\tif ('#REF' in v) {\r\n\t\t// \t\t\treturn tree[v['#REF']]\r\n\t\t// \t\t} else {\r\n\t\t// \t\t\tconst keys = Object.keys(v)\r\n\t\t// \t\t\tfor (let i = 0; i < keys.length; i++) {\r\n\t\t// \t\t\t\tv[keys[i]] = linkReferences(v[keys[i]])\r\n\t\t// \t\t\t}\r\n\t\t// \t\t\treturn v\r\n\t\t// \t\t}\r\n\t\t// \t} else {\r\n\t\t// \t\treturn v\r\n\t\t// \t}\r\n\t\t// }\r\n\r\n\t\tconst tree = JSON.parse(string)\r\n\t\t// console.log(tree)\r\n\t\tconst fixedObjects = new Array(tree.length)\r\n\t\tfixObject({ '#REF': 0 }, () => {})\r\n\t\t// console.log(tree)\r\n\t\t// linkReferences(tree)\r\n\t\t// console.log(tree)\r\n\t\treturn fixedObjects[0]\r\n\t}\r\n}\r\n","import { ShaderType } from 'tsgl'\r\n\r\nexport const fragmentShaderLighting: ShaderType<{ color: 'FLOAT_VEC3'; camPos: 'FLOAT_VEC3' }> = `\r\n\tprecision highp float;\r\n\tuniform vec4 color;\r\n\tuniform vec3 camPos;\r\n\tvarying vec3 normal;\r\n\tvarying vec4 vPosition;\r\n\tvoid main() {\r\n\t\tvec3 normal1 = normalize(normal);\r\n\t\tvec3 lightPos = vec3(1000, 2000, 4000);\r\n\t\tvec3 lightDir = normalize(vPosition.xyz - lightPos);\r\n        vec3 reflectionDirection = reflect(lightDir, normal1);\r\n        vec3 eyeDirection = normalize(camPos.xyz-vPosition.xyz);\r\n        float uMaterialShininess = 256.0;\r\n\t\tfloat specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), uMaterialShininess);\r\n\t\tfloat lightIntensity = 0.6 + 0.2 * max(0.0, -dot(lightDir, normal1)) + 0.2*specularLightWeighting;\r\n\t\tgl_FragColor = vec4(vec3(color) * lightIntensity, 1);\r\n\t}\r\n`\r\nexport const vertexShaderLighting: ShaderType<{ color: 'FLOAT_VEC4' }> = `\r\n\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\tuniform mat4 ts_ModelViewMatrix;\r\n\tattribute vec4 ts_Vertex;\r\n\tuniform mat3 ts_NormalMatrix;\r\n\tattribute vec3 ts_Normal;\r\n\tuniform vec4 color;\r\n\tvarying vec3 normal;\r\n\tvarying vec4 vPosition;\r\n\tvoid main() {\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n        vPosition = ts_ModelViewMatrix * ts_Vertex;\r\n\t\tnormal = normalize(ts_NormalMatrix * ts_Normal);\r\n\t}\r\n`\r\nexport const vertexShaderWaves: ShaderType<{ color: 'FLOAT_VEC3' }> = `\r\n\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\tuniform mat4 ts_ModelViewMatrix;\r\n\tattribute vec4 ts_Vertex;\r\n\tuniform mat3 ts_NormalMatrix;\r\n\tattribute vec3 ts_Normal;\r\n\tuniform vec4 color;\r\n\tvarying vec3 normal;\r\n\tvarying vec4 vPosition;\r\n\tvoid main() {\r\n\t\tnormal = normalize(ts_NormalMatrix * ts_Normal);\r\n\t\tfloat offset = mod  (((ts_Vertex.x + ts_Vertex.y + ts_Vertex.z) * 31.0), 20.0) - 10.0;\r\n\t\tvec4 modPos = ts_Vertex + vec4(normal * offset, 0);\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * modPos;\r\n        vPosition = ts_ModelViewMatrix * modPos;\r\n\t}\r\n`\r\nexport const vertexShader: ShaderType<{}> = `\r\n\tvarying vec4 pos;\r\n\tvoid main() {\r\n\t\tpos = vec4(position,1.0);\r\n\t\tgl_Position = projectionMatrix *\r\n\t\t\tmodelViewMatrix *\r\n\t\t\tvec4(position,1.0);\r\n\t}\r\n`\r\nexport const fragmentShader: ShaderType<{ color: 'FLOAT_VEC3' }> = `\r\n\tprecision highp float;\r\n\tuniform vec3 color;\r\n\tvarying vec4 pos;\r\n\tvoid main() {\r\n\t\tfloat distance = pos.x * pos.x + pos.y * pos.y;\r\n\t\tif (distance <= 0.98) {\r\n\t\t\tgl_FragColor = vec4(color, 1.0);\r\n\t\t} else if (distance <= 1.0) {\r\n\t\t\tgl_FragColor = vec4(color, 0.5);\r\n\t\t} else {\r\n\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t precision mediump float;\r\n\r\n\t varying vec4 pos;\r\n\r\n\r\n\t void main() {\r\n\t float inside = pos.r * pos.r + pos.g * pos.g;\r\n\t if (inside <= 1) {\r\n\t gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\r\n\t } else {\r\n\t gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\r\n\t }\r\n\t }\r\n\t */\r\n`\r\nexport const vertexShaderBasic: ShaderType<{}> = `\r\n\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\tattribute vec4 ts_Vertex;\r\n\tvoid main() {\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n\t}\r\n`\r\nexport const vertexShaderColor: ShaderType<{}> = `\r\n\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\tattribute vec4 ts_Vertex;\r\n\tattribute vec4 color;\r\n\tvarying vec4 fragColor;\r\n\tvoid main() {\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n\t\tfragColor = color;\r\n\t}\r\n`\r\nexport const vertexShaderArc: ShaderType<{\r\n\tcolor: 'FLOAT_VEC4'\r\n\tstep: 'FLOAT'\r\n\toffset: 'FLOAT'\r\n\tradius: 'FLOAT'\r\n\twidth: 'FLOAT'\r\n}> = `\r\n\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\tattribute vec4 ts_Vertex;\r\n\tuniform float step, offset;\r\n\tuniform float radius, width;\r\n\tvoid main() {\r\n\t\tfloat r = radius;\r\n\t\tfloat t = offset + ts_Vertex.x * step;\r\n\t\tfloat pRadius = r - ts_Vertex.y * width;\r\n\t\tvec4 p = vec4(pRadius * cos(t), pRadius * sin(t), 0, 1);\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * p;\r\n}\r\n`\r\nexport const vertexShaderConic3d: ShaderType<{\r\n\tstartT: 'FLOAT'\r\n\tendT: 'FLOAT'\r\n\tscale: 'FLOAT'\r\n\tcenter: 'FLOAT_VEC3'\r\n\tf1: 'FLOAT_VEC3'\r\n\tf2: 'FLOAT_VEC3'\r\n\tmode: 'INT'\r\n}> = `\r\n\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\tattribute vec4 ts_Vertex;\r\n\tuniform float startT, endT, scale;\r\n\tuniform vec3 center, f1, f2;\r\n\tuniform int mode;\r\n\tfloat sinh(float x) { return (exp(x) - exp(-x)) / 2.0; }\r\n\tfloat cosh(float x) { return (exp(x) + exp(-x)) / 2.0; }\r\n\tvoid main() {\r\n\t\tfloat t = startT + ts_Vertex.x * (endT - startT);\r\n\r\n\t\tvec3 normal = normalize(cross(f1, f2));\r\n\r\n\t\tvec3 p, tangent;\r\n\t\tif (0 == mode) { // ellipse\r\n\t\t\tp = center + f1 * cos(t) + f2 * sin(t);\r\n\t\t\ttangent = f1 * -sin(t) + f2 * cos(t);\r\n\t\t}\r\n\t\tif (1 == mode) { // parabola\r\n\t\t\tp = center + f1 * t + f2 * t * t;\r\n\t\t\ttangent = f1 + f2 * t;\r\n\t\t}\r\n\t\tif (2 == mode) { // hyperbola\r\n\t\t\tp = center + f1 * cosh(t) + f2 * sinh(t);\r\n\t\t\ttangent = f1 * sinh(t) + f2 * cosh(t);\r\n\t\t}\r\n\t\tvec3 outDir = normalize(cross(normal, tangent));\r\n\t\tvec3 p2 = p + scale * (outDir * ts_Vertex.y + normal * ts_Vertex.z);\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * vec4(p2, 1);\r\n\t}\r\n`\r\nexport const vertexShaderBezier: ShaderType<{\r\n\twidth: 'FLOAT'\r\n\tstartT: 'FLOAT'\r\n\tendT: 'FLOAT'\r\n\tp0: 'FLOAT_VEC3'\r\n\tp1: 'FLOAT_VEC3'\r\n\tp2: 'FLOAT_VEC3'\r\n\tp3: 'FLOAT_VEC3'\r\n}> = `\r\n    // calculates a bezier curve using ts_Vertex.x as the (t) parameter of the curve\r\n\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\tattribute vec4 ts_Vertex;\r\n\tuniform float width, startT, endT;\r\n\tuniform vec3 p0, p1, p2, p3;\r\n\tvoid main() {\r\n\t\t// ts_Vertex.y is in [0, 1]\r\n\t\tfloat t = startT + ts_Vertex.x * (endT - startT), s = 1.0 - t;\r\n\t\tfloat c0 = s * s * s, c1 = 3.0 * s * s * t, c2 = 3.0 * s * t * t, c3 = t * t * t;\r\n\t\tvec3 pPos = p0 * c0 + p1 * c1 + p2 * c2 + p3 * c3;\r\n\t\tfloat c01 = 3.0 * s * s, c12 = 6.0 * s * t, c23 = 3.0 * t * t;\r\n\t\tvec3 pTangent = (p1 - p0) * c01 + (p2 - p1) * c12 + (p3 - p2) * c23;\r\n\t\tvec3 pNormal = normalize(vec3(pTangent.y, -pTangent.x, 0));\r\n\t\tvec4 p = vec4(pPos - ts_Vertex.y * width * pNormal, 1);\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * p;\r\n\t}\r\n`\r\nexport const vertexShaderBezier3d: ShaderType<{\r\n\tscale: 'FLOAT'\r\n\tstartT: 'FLOAT'\r\n\tendT: 'FLOAT'\r\n\tp0: 'FLOAT_VEC3'\r\n\tp1: 'FLOAT_VEC3'\r\n\tp2: 'FLOAT_VEC3'\r\n\tp3: 'FLOAT_VEC3'\r\n\tnormal: 'FLOAT_VEC3'\r\n}> = `\r\n    // calculates a bezier curve using ts_Vertex.x as the (t) parameter of the curve\r\n\tuniform float scale, startT, endT;\r\n\tuniform vec3 ps[4];\r\n\tuniform vec3 p0, p1, p2, p3, normal;\r\n\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\tattribute vec4 ts_Vertex;\r\n\tvoid main() {\r\n\t\t// ts_Vertex.y is in [0, 1]\r\n\t\tvec3 p5 = ps[0];\r\n\t\tfloat t = startT + ts_Vertex.x * (endT - startT), s = 1.0 - t;\r\n\t\tfloat c0 = s * s * s, c1 = 3.0 * s * s * t, c2 = 3.0 * s * t * t, c3 = t * t * t;\r\n\t\tvec3 p = p0 * c0 + p1 * c1 + p2 * c2 + p3 * c3;\r\n\t\tfloat c01 = 3.0 * s * s, c12 = 6.0 * s * t, c23 = 3.0 * t * t;\r\n\t\tvec3 pTangent = (p1 - p0) * c01 + (p2 - p1) * c12 + (p3 - p2) * c23;\r\n\t\tvec3 outDir = normalize(cross(normal, pTangent));\r\n\t\tvec3 correctNormal = normalize(cross(pTangent, outDir));\r\n\t\tvec3 p2 = p + scale * (outDir * ts_Vertex.y + correctNormal * ts_Vertex.z);\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * vec4(p2, 1);\r\n\t}\r\n`\r\nexport const vertexShaderGeneric: ShaderType<{ scale: 'FLOAT' }> = `\r\n\tuniform float scale;\r\n\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\tattribute vec4 ts_Vertex;\r\n\tuniform mat3 ts_NormalMatrix;\r\n\tattribute vec3 ts_Normal;\r\n\tvoid main() {\r\n\t\tvec3 normal = normalize(ts_NormalMatrix * ts_Normal);\r\n\t\tvec4 vertexPos = ts_Vertex + vec4(normal * scale, 0);\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * vertexPos;\r\n\t}\r\n`\r\nexport const vertexShaderRing: ShaderType<{ step: 'FLOAT'; innerRadius: 'FLOAT'; outerRadius: 'FLOAT' }> = `\r\n\t#define M_PI 3.1415926535897932384626433832795\r\n\tuniform float step;\r\n\tuniform float innerRadius, outerRadius;\r\n\tattribute float index;\r\n\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\tattribute vec4 ts_Vertex;\r\n\tvoid main() {\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * vec4(index, index, index, 1);\r\n\t\tfloat id = atan(ts_Vertex.x, ts_Vertex.y) / M_PI  * 32.0;\r\n\t\tfloat radius = mod(id, 2.0) < 1.0 ? outerRadius : innerRadius;\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * vec4(radius * cos(index * step), radius * sin(index * step), 0, 1);\r\n\t}\r\n`\r\nexport const fragmentShaderColor: ShaderType<{ color: 'FLOAT_VEC4' }> = `\r\n\tprecision highp float;\r\n\tuniform vec4 color;\r\n\tvoid main() {\r\n\t\tgl_FragColor = color;\r\n\t}\r\n`\r\nexport const fragmentShaderVaryingColor: ShaderType<{}> = `\r\n\tprecision highp float;\r\n\tvarying vec4 fragColor;\r\n\tvoid main() {\r\n\t\tgl_FragColor = fragColor;\r\n\t}\r\n`\r\nexport const fragmentShaderColorHighlight: ShaderType<{}> = `\r\n\tprecision highp float;\r\n\tuniform vec4 color;\r\n\tvoid main() {\r\n\t\tfloat diagonal = (gl_FragCoord.x + 2.0 * gl_FragCoord.y);\r\n\t\tif (mod(diagonal, 50.0) > 40.0) { // mod(diagonal, 2.0) > 1.0\r\n\t\t\tdiscard;\r\n\t\t\t//gl_FragColor = color + vec4(0.2,0.2,0.2,0);\r\n\t\t} else {\r\n\t\t\tgl_FragColor = color - vec4(0.2,0.2,0.2,0);\r\n\t\t}\r\n\t}\r\n`\r\nexport const vertexShaderTexture: ShaderType<{}> = `\r\n\tvarying vec2 texturePos;\r\n\tattribute vec4 ts_Vertex;\r\n\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\tvoid main() {\r\n\t\ttexturePos = ts_Vertex.xy;\r\n\t\tgl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n\t}\r\n`\r\nexport const fragmentShaderTextureColor: ShaderType<{}> = `\r\n\tprecision highp float;\r\n\tvarying vec2 texturePos;\r\n\tuniform vec4 color;\r\n\tuniform sampler2D texture;\r\n\tvoid main() {\r\n\t\tgl_FragColor = texture2D(texture, texturePos) * color;\r\n\t}\r\n`\r\nexport const fragmentShaderTexture: ShaderType<{}> = `\r\n\tprecision highp float;\r\n\tvarying vec2 texturePos;\r\n\tuniform sampler2D texture;\r\n\tvoid main() {\r\n\t\tgl_FragColor = texture2D(texture, texturePos);\r\n\t}\r\n`\r\n","import chroma from 'chroma-js'\r\nimport { addOwnProperties, arrayFromFunction, DEG, int, M4, TAU, V, V3 } from 'ts3dutils'\r\nimport { GL_COLOR, GL_COLOR_BLACK, Mesh, Shader, TSGLContext } from 'tsgl'\r\n\r\nimport {\r\n\tBezierCurve,\r\n\tCurve,\r\n\tCustomPlane,\r\n\tEdge,\r\n\tHyperbolaCurve,\r\n\tImplicitCurve,\r\n\tL3,\r\n\tParabolaCurve,\r\n\tPICurve,\r\n\tPPCurve,\r\n\tSemiEllipseCurve,\r\n} from './index'\r\nimport { ceil, floor, pow, sign } from './math'\r\nimport * as shaders from './shaders'\r\n\r\nexport function parseGetParams(str: string) {\r\n\tconst result: { [key: string]: string } = {}\r\n\tstr.split('&').forEach(function(item) {\r\n\t\tconst splitIndex = item.indexOf('=')\r\n\t\tif (-1 == splitIndex) {\r\n\t\t\tresult[item] = item\r\n\t\t} else {\r\n\t\t\tresult[item.substr(0, splitIndex)] = decodeURI(item.substr(splitIndex + 1))\r\n\t\t}\r\n\t})\r\n\treturn result\r\n}\r\n\r\nexport const COLORS = {\r\n\tRD_FILL: chroma('#9EDBF9'),\r\n\tRD_STROKE: chroma('#77B0E0'),\r\n\tTS_FILL: chroma('#D19FE3'),\r\n\tTS_STROKE: chroma('#A76BC2'),\r\n\tPP_FILL: chroma('#F3B6CF'),\r\n\tPP_STROKE: chroma('#EB81B4'),\r\n}\r\nexport interface BREPGLContext extends TSGLContext {}\r\nexport class BREPGLContext {\r\n\tshaders: SHADERS_TYPE\r\n\r\n\tcachedMeshes: WeakMap<any, Mesh & { TRIANGLES: int[]; normals: V3[] }> = new WeakMap()\r\n\r\n\tconstructor(gl: BREPGLContext) {\r\n\t\tthis.shaders = initShaders(gl)\r\n\t\tinitMeshes((this.meshes = {}), gl)\r\n\t}\r\n\r\n\tstatic create(gl: TSGLContext) {\r\n\t\taddOwnProperties(gl, BREPGLContext.prototype)\r\n\t\taddOwnProperties(gl, new BREPGLContext(gl as BREPGLContext))\r\n\t\treturn gl as BREPGLContext\r\n\t}\r\n\r\n\tdrawPoint(p: V3, color: GL_COLOR = GL_COLOR_BLACK, size = 5) {\r\n\t\tthis.pushMatrix()\r\n\t\tthis.translate(p)\r\n\t\tthis.scale(size, size, size)\r\n\t\tthis.shaders.singleColor.uniforms({ color: color }).draw(this.meshes.sphere1)\r\n\t\tthis.popMatrix()\r\n\t}\r\n\r\n\tdrawEdge(edge: Edge, color: GL_COLOR = GL_COLOR_BLACK, width = 2) {\r\n\t\tCURVE_PAINTERS[edge.curve.constructor.name](this, edge.curve, color, edge.minT, edge.maxT, width)\r\n\t}\r\n\r\n\tdrawCurve(curve: Curve, color: GL_COLOR = GL_COLOR_BLACK, width = 2, tStart: number, tEnd: number) {\r\n\t\tCURVE_PAINTERS[curve.constructor.name](this, curve, color, tStart, tEnd, width)\r\n\t}\r\n\r\n\tdrawVector(vector: V3, anchor: V3, color: GL_COLOR = GL_COLOR_BLACK, size = 1) {\r\n\t\tthis.pushMatrix()\r\n\r\n\t\tconst vT = vector.getPerpendicular().unit()\r\n\t\tthis.multMatrix(M4.forSys(vector, vT, vector.cross(vT).unit(), anchor))\r\n\t\t1 != size && this.scale(size, size, size)\r\n\t\tthis.shaders.singleColor\r\n\t\t\t.uniforms({\r\n\t\t\t\tcolor: color,\r\n\t\t\t})\r\n\t\t\t.draw(this.meshes.vector)\r\n\r\n\t\tthis.popMatrix()\r\n\t}\r\n\r\n\tdrawVectors(drVs: { dir1: V3; anchor: V3; color: GL_COLOR }[]) {\r\n\t\tthis.drawVector(V3.X, V3.O, chroma('red').gl(), undefined)\r\n\t\tthis.drawVector(V3.Y, V3.O, chroma('green').gl(), undefined)\r\n\t\tthis.drawVector(V3.Z, V3.O, chroma('blue').gl(), undefined)\r\n\r\n\t\tdrVs.forEach(vi => this.drawVector(vi.dir1, vi.anchor, vi.color, undefined))\r\n\t}\r\n\r\n\tdrawPlane(customPlane: CustomPlane, color: GL_COLOR, dotted: boolean = false) {\r\n\t\tthis.pushMatrix()\r\n\t\tthis.multMatrix(M4.forSys(customPlane.right, customPlane.up, customPlane.normal1))\r\n\t\tthis.translate(customPlane.sMin, customPlane.tMin, customPlane.w)\r\n\t\tthis.scale(customPlane.sMax - customPlane.sMin, customPlane.tMax - customPlane.tMin, 1)\r\n\r\n\t\tconst mesh = dotted ? this.meshes.xyDottedLinePlane : this.meshes.xyLinePlane\r\n\t\tthis.shaders.singleColor.uniforms({ color: color }).draw(mesh, this.LINES)\r\n\r\n\t\tthis.popMatrix()\r\n\t}\r\n}\r\n\r\nfunction conicPainter(\r\n\tmode: 0 | 1 | 2,\r\n\tgl: BREPGLContext,\r\n\tellipse: SemiEllipseCurve,\r\n\tcolor: GL_COLOR,\r\n\tstartT: number,\r\n\tendT: number,\r\n\twidth = 2,\r\n) {\r\n\tgl.shaders.ellipse3d\r\n\t\t.uniforms({\r\n\t\t\tf1: ellipse.f1,\r\n\t\t\tf2: ellipse.f2,\r\n\t\t\tcenter: ellipse.center,\r\n\t\t\tcolor: color,\r\n\t\t\tstartT: startT,\r\n\t\t\tendT: endT,\r\n\t\t\tscale: width,\r\n\t\t\tmode: mode,\r\n\t\t})\r\n\t\t.draw(gl.meshes.pipe)\r\n}\r\n\r\nexport const CURVE_PAINTERS: {\r\n\t[curveConstructorName: string]: (\r\n\t\tgl: BREPGLContext,\r\n\t\tcurve: Curve,\r\n\t\tcolor: GL_COLOR,\r\n\t\tstartT: number,\r\n\t\tendT: number,\r\n\t\twidth: number,\r\n\t) => void\r\n} = {\r\n\t[SemiEllipseCurve.name]: conicPainter.bind(undefined, 0),\r\n\t[ParabolaCurve.name]: conicPainter.bind(undefined, 1),\r\n\t[HyperbolaCurve.name]: conicPainter.bind(undefined, 2),\r\n\t[ImplicitCurve.name](gl, curve: ImplicitCurve, color, startT, endT, width = 2) {\r\n\t\tlet mesh = gl.cachedMeshes.get(curve)\r\n\t\tconst RES = 4\r\n\t\tif (!mesh) {\r\n\t\t\tmesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\tcurve.addToMesh(mesh, RES)\r\n\t\t\tmesh.compile()\r\n\t\t\tgl.cachedMeshes.set(curve, mesh)\r\n\t\t}\r\n\t\tconst startIndex = ceil(startT)\r\n\t\tconst endIndex = floor(endT)\r\n\t\tif (startIndex <= endIndex) {\r\n\t\t\tconst indexFactor =\r\n\t\t\t\t2 * // no of triangles per face\r\n\t\t\t\tRES * // no of faces\r\n\t\t\t\t3 // no of indexes per triangle\r\n\t\t\tgl.shaders.generic3d\r\n\t\t\t\t.uniforms({\r\n\t\t\t\t\tcolor: color,\r\n\t\t\t\t\tscale: width,\r\n\t\t\t\t})\r\n\t\t\t\t.draw(mesh, gl.TRIANGLES, startIndex * indexFactor, (floor(endT) - startIndex) * indexFactor)\r\n\t\t\tif (startT % 1 !== 0) {\r\n\t\t\t\tconst p = curve.at(startT)\r\n\t\t\t\tgl.pushMatrix()\r\n\t\t\t\tconst m = M4.forSys(\r\n\t\t\t\t\tp.to(curve.points[startIndex]),\r\n\t\t\t\t\tmesh.normals[startIndex * RES].toLength(width),\r\n\t\t\t\t\tmesh.normals[startIndex * RES + 1].toLength(width),\r\n\t\t\t\t\tp,\r\n\t\t\t\t)\r\n\t\t\t\tgl.multMatrix(m)\r\n\t\t\t\tgl.shaders.singleColor.uniforms({ color: color }).draw(gl.meshes.pipeSegmentForICurve)\r\n\t\t\t\tconsole.log(gl.meshes.pipeSegmentForICurve)\r\n\t\t\t\tgl.popMatrix()\r\n\t\t\t}\r\n\t\t\tif (endT % 1 !== 0) {\r\n\t\t\t\tconst p = curve.at(endT)\r\n\t\t\t\tgl.pushMatrix()\r\n\t\t\t\tconst m = M4.forSys(\r\n\t\t\t\t\tcurve.points[endIndex].to(p),\r\n\t\t\t\t\tmesh.normals[endIndex * RES].toLength(width),\r\n\t\t\t\t\tmesh.normals[endIndex * RES + 1].toLength(width),\r\n\t\t\t\t\tcurve.points[endIndex],\r\n\t\t\t\t)\r\n\t\t\t\tgl.multMatrix(m)\r\n\t\t\t\tgl.shaders.singleColor.uniforms({ color: color }).draw(gl.meshes.pipeSegmentForICurve)\r\n\t\t\t\tgl.popMatrix()\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst p1 = curve.at(startT)\r\n\t\t\tconst p2 = curve.at(endT)\r\n\t\t\tgl.pushMatrix()\r\n\t\t\tconst v0 = p1.to(p2),\r\n\t\t\t\tv1 = v0.getPerpendicular().toLength(width),\r\n\t\t\t\tv2 = v0.cross(v1).toLength(width)\r\n\t\t\tconst m = M4.forSys(v0, v1, v2, p1)\r\n\t\t\tgl.multMatrix(m)\r\n\t\t\tgl.shaders.singleColor.uniforms({ color: color }).draw(gl.meshes.pipeSegmentForICurve)\r\n\t\t\tgl.popMatrix()\r\n\t\t}\r\n\t},\r\n\t[BezierCurve.name](gl, curve: BezierCurve, color, startT, endT, width = 2, normal = V3.Z) {\r\n\t\tgl.shaders.bezier3d\r\n\t\t\t.uniforms({\r\n\t\t\t\tp0: curve.p0,\r\n\t\t\t\tp1: curve.p1,\r\n\t\t\t\tp2: curve.p2,\r\n\t\t\t\tp3: curve.p3,\r\n\t\t\t\tcolor: color,\r\n\t\t\t\tstartT: startT,\r\n\t\t\t\tendT: endT,\r\n\t\t\t\tscale: width,\r\n\t\t\t\tnormal: normal,\r\n\t\t\t})\r\n\t\t\t.draw(gl.meshes.pipe)\r\n\t},\r\n\t[L3.name](gl, curve: L3, color, startT, endT, width = 2, normal = V3.Z) {\r\n\t\tgl.pushMatrix()\r\n\t\tconst a = curve.at(startT),\r\n\t\t\tb = curve.at(endT)\r\n\t\tconst ab = b.minus(a),\r\n\t\t\tabT = ab.getPerpendicular().unit()\r\n\t\tconst m = M4.forSys(ab, abT, ab.cross(abT).unit(), a)\r\n\t\tgl.multMatrix(m)\r\n\t\tgl.scale(1, width, width)\r\n\t\tgl.shaders.singleColor\r\n\t\t\t.uniforms({\r\n\t\t\t\tcolor: color, // TODO: error checking\r\n\t\t\t})\r\n\t\t\t.draw(gl.meshes.pipe)\r\n\r\n\t\tgl.popMatrix()\r\n\t},\r\n}\r\nCURVE_PAINTERS[PICurve.name] = CURVE_PAINTERS[ImplicitCurve.name]\r\nCURVE_PAINTERS[PPCurve.name] = CURVE_PAINTERS[ImplicitCurve.name]\r\n\r\nexport function initMeshes(_meshes: { [name: string]: Mesh }, _gl: BREPGLContext) {\r\n\t_gl.makeCurrent()\r\n\t_meshes.sphere1 = Mesh.sphere(2)\r\n\t_meshes.segment = Mesh.plane({ startY: -0.5, height: 1, detailX: 128 })\r\n\t_meshes.text = Mesh.plane()\r\n\t_meshes.vector = Mesh.rotation([V3.O, V(0, 0.05, 0), V(0.8, 0.05), V(0.8, 0.1), V(1, 0)], L3.X, TAU, 16, true)\r\n\t_meshes.pipe = Mesh.rotation(arrayFromFunction(128, i => new V3(i / 127, -0.5, 0)), L3.X, TAU, 8, true)\r\n\t_meshes.xyLinePlane = Mesh.plane()\r\n\t_meshes.xyDottedLinePlane = makeDottedLinePlane()\r\n\t_meshes.pipeSegmentForICurve = Mesh.offsetVertices(\r\n\t\tM4.rotateY(90 * DEG).transformedPoints(arrayFromFunction(4, i => V3.polar(1, TAU * i / 4))),\r\n\t\tV3.X,\r\n\t\ttrue,\r\n\t)\r\n}\r\n\r\nexport function initShaders(_gl: TSGLContext) {\r\n\t_gl.makeCurrent()\r\n\treturn {\r\n\t\tsingleColor: Shader.create(shaders.vertexShaderBasic, shaders.fragmentShaderColor),\r\n\t\tmultiColor: Shader.create(shaders.vertexShaderColor, shaders.fragmentShaderVaryingColor),\r\n\t\tsingleColorHighlight: Shader.create(shaders.vertexShaderBasic, shaders.fragmentShaderColorHighlight),\r\n\t\ttextureColor: Shader.create(shaders.vertexShaderTexture, shaders.fragmentShaderTextureColor),\r\n\t\tarc: Shader.create(shaders.vertexShaderRing, shaders.fragmentShaderColor),\r\n\t\tarc2: Shader.create(shaders.vertexShaderArc, shaders.fragmentShaderColor),\r\n\t\tellipse3d: Shader.create(shaders.vertexShaderConic3d, shaders.fragmentShaderColor),\r\n\t\tgeneric3d: Shader.create(shaders.vertexShaderGeneric, shaders.fragmentShaderColor),\r\n\t\tbezier3d: Shader.create(shaders.vertexShaderBezier3d, shaders.fragmentShaderColor),\r\n\t\tbezier: Shader.create(shaders.vertexShaderBezier, shaders.fragmentShaderColor),\r\n\t\tlighting: Shader.create(shaders.vertexShaderLighting, shaders.fragmentShaderLighting),\r\n\t\twaves: Shader.create(shaders.vertexShaderWaves, shaders.fragmentShaderLighting),\r\n\t}\r\n}\r\n\r\nfunction makeDottedLinePlane(count: int = 128) {\r\n\tconst mesh = new Mesh().addIndexBuffer('LINES')\r\n\tconst OXvertices = arrayFromFunction(count, i => new V3(i / count, 0, 0))\r\n\tmesh.vertices.push(...OXvertices)\r\n\tmesh.vertices.push(...M4.forSys(V3.Y, V3.O, V3.O, V3.X).transformedPoints(OXvertices))\r\n\tmesh.vertices.push(...M4.forSys(V3.X.negated(), V3.O, V3.O, new V3(1, 1, 0)).transformedPoints(OXvertices))\r\n\tmesh.vertices.push(...M4.forSys(V3.Y.negated(), V3.O, V3.O, V3.Y).transformedPoints(OXvertices))\r\n\tmesh.LINES = arrayFromFunction(count * 4, i => i - (i >= count * 2 ? 1 : 0))\r\n\tmesh.compile()\r\n\treturn mesh\r\n}\r\n\r\nexport type Eye = { pos: V3; focus: V3; up: V3; zoomFactor: number }\r\nexport function initNavigationEvents(_gl: BREPGLContext, eye: Eye, paintScreen: () => void) {\r\n\tconst canvas = _gl.canvas\r\n\tlet lastPos: V3 = V3.O\r\n\t//_gl.onmousedown.push((e) => {\r\n\t//\te.preventDefault()\r\n\t//\te.stopPropagation()\r\n\t//})\r\n\t//_gl.onmouseup.push((e) => {\r\n\t//\te.preventDefault()\r\n\t//\te.stopPropagation()\r\n\t//})\r\n\tcanvas.addEventListener('mousemove', (e: MouseEvent) => {\r\n\t\tconst pagePos = V(e.pageX, e.pageY)\r\n\t\tconst delta = lastPos.to(pagePos)\r\n\t\t//noinspection JSBitwiseOperatorUsage\r\n\t\tif (e.buttons & 4) {\r\n\t\t\t// pan\r\n\t\t\tconst moveCamera = V(-delta.x * 2 / _gl.canvas.width, delta.y * 2 / _gl.canvas.height)\r\n\t\t\tconst inverseProjectionMatrix = _gl.projectionMatrix.inversed()\r\n\t\t\tconst worldMoveCamera = inverseProjectionMatrix.transformVector(moveCamera)\r\n\t\t\teye.pos = eye.pos.plus(worldMoveCamera)\r\n\t\t\teye.focus = eye.focus.plus(worldMoveCamera)\r\n\t\t\tsetupCamera(eye, _gl)\r\n\t\t\tpaintScreen()\r\n\t\t}\r\n\t\t// scene rotation\r\n\t\t//noinspection JSBitwiseOperatorUsage\r\n\t\tif (e.buttons & 2) {\r\n\t\t\tconst rotateLR = -delta.x / 6.0 * DEG\r\n\t\t\tconst rotateUD = -delta.y / 6.0 * DEG\r\n\t\t\t// rotate\r\n\t\t\tlet matrix = M4.rotateLine(eye.focus, eye.up, rotateLR)\r\n\t\t\t//let horizontalRotationAxis = focus.minus(pos).cross(up)\r\n\t\t\tconst horizontalRotationAxis = eye.up.cross(eye.pos.minus(eye.focus))\r\n\t\t\tmatrix = matrix.times(M4.rotateLine(eye.focus, horizontalRotationAxis, rotateUD))\r\n\t\t\teye.pos = matrix.transformPoint(eye.pos)\r\n\t\t\teye.up = matrix.transformVector(eye.up)\r\n\r\n\t\t\tsetupCamera(eye, _gl)\r\n\t\t\tpaintScreen()\r\n\t\t}\r\n\t\tlastPos = pagePos\r\n\t})\r\n\tcanvas.addEventListener('wheel', (e: WheelEvent) => {\r\n\t\t// zoom\r\n\t\tconst wheelY = -sign(e.deltaY) * 2\r\n\t\t// console.log(e.deltaY, e.deltaX)\r\n\t\teye.zoomFactor *= pow(0.9, -wheelY)\r\n\t\tconst mouseCoordsOnCanvas = getPosOnTarget(e)\r\n\t\tconst mousePosFrustrum = V(\r\n\t\t\tmouseCoordsOnCanvas.x * 2 / _gl.canvas.offsetWidth - 1,\r\n\t\t\t-mouseCoordsOnCanvas.y * 2 / _gl.canvas.offsetHeight + 1,\r\n\t\t\t0,\r\n\t\t)\r\n\t\tconst moveCamera = mousePosFrustrum.times(1 - 1 / pow(0.9, -wheelY))\r\n\t\tconst inverseProjectionMatrix = _gl.projectionMatrix.inversed()\r\n\t\tconst worldMoveCamera = inverseProjectionMatrix.transformVector(moveCamera)\r\n\t\t//console.log(\"moveCamera\", moveCamera)\r\n\t\t//console.log(\"worldMoveCamera\", worldMoveCamera)\r\n\t\teye.pos = eye.pos.plus(worldMoveCamera)\r\n\t\teye.focus = eye.focus.plus(worldMoveCamera)\r\n\r\n\t\t// tilt\r\n\t\tconst mousePosWC = inverseProjectionMatrix.transformPoint(mousePosFrustrum)\r\n\t\tconst tiltMatrix = M4.rotateLine(mousePosWC, eye.pos.to(eye.focus), -sign(e.deltaX) * 10 * DEG)\r\n\t\teye.up = tiltMatrix.transformVector(eye.up)\r\n\t\teye.pos = tiltMatrix.transformPoint(eye.pos)\r\n\t\teye.focus = tiltMatrix.transformPoint(eye.focus)\r\n\t\tsetupCamera(eye, _gl)\r\n\t\tpaintScreen()\r\n\t\te.preventDefault()\r\n\t})\r\n}\r\n/**\r\n * Transforms position on the screen into a line in world coordinates.\r\n */\r\nexport function getMouseLine(pos: { x: number; y: number }, _gl: TSGLContext): L3 {\r\n\tconst ndc1 = V(pos.x * 2 / _gl.canvas.width - 1, -pos.y * 2 / _gl.canvas.height + 1, 0)\r\n\tconst ndc2 = V(pos.x * 2 / _gl.canvas.width - 1, -pos.y * 2 / _gl.canvas.height + 1, 1)\r\n\t//console.log(ndc)\r\n\tconst inverseProjectionMatrix = _gl.projectionMatrix.inversed()\r\n\tconst s = inverseProjectionMatrix.transformPoint(ndc1)\r\n\tconst dir = inverseProjectionMatrix.transformPoint(ndc2).minus(s)\r\n\treturn L3.anchorDirection(s, dir)\r\n}\r\nexport function getPosOnTarget(e: MouseEvent) {\r\n\tconst target = e.target as HTMLElement\r\n\tconst targetRect = target.getBoundingClientRect()\r\n\tconst mouseCoordsOnElement = {\r\n\t\tx: e.clientX - targetRect.left,\r\n\t\ty: e.clientY - targetRect.top,\r\n\t}\r\n\treturn mouseCoordsOnElement\r\n}\r\n\r\nexport function setupCamera(_eye: Eye, _gl: TSGLContext) {\r\n\tconst { pos, focus, up, zoomFactor } = _eye\r\n\t//console.log(\"pos\", pos.$, \"focus\", focus.$, \"up\", up.$)\r\n\t_gl.matrixMode(_gl.PROJECTION)\r\n\t_gl.loadIdentity()\r\n\t//_gl.perspective(70, _gl.canvas.width / _gl.canvas.height, 0.1, 1000);\r\n\tconst lr = _gl.canvas.width / 2 / zoomFactor\r\n\tconst bt = _gl.canvas.height / 2 / zoomFactor\r\n\t_gl.ortho(-lr, lr, -bt, bt, -1e4, 1e4)\r\n\t_gl.lookAt(pos, focus, up)\r\n\t_gl.matrixMode(_gl.MODELVIEW)\r\n\tcameraChangeListeners.forEach(l => l(_eye))\r\n}\r\nexport const cameraChangeListeners: ((eye: Eye) => void)[] = []\r\n\r\nexport const SHADERS_TYPE_VAR = (false as true) && initShaders(0 as any)\r\nexport type SHADERS_TYPE = typeof SHADERS_TYPE_VAR\r\n// let shaders: typeof SHADERS_TYPE_VAR\r\n// declare let a: BRep, b: BRep, c: BRep, d: BRep, edges: Edge[] = [], hovering: any,\r\n// \t, normallines: boolean = false, b2s: BRep[] = []\r\n// const\r\n","import chroma, { Color } from 'chroma-js'\r\nimport deepmerge from 'deepmerge'\r\nimport nerdamer from 'nerdamer'\r\nimport { arrayFromFunction, assert, DEG, int, M4, round10, V, V3 } from 'ts3dutils'\r\nimport { GL_COLOR, GL_COLOR_BLACK, Mesh, TSGLContext } from 'tsgl'\r\n\r\nimport {\r\n\tB2T,\r\n\tBRep,\r\n\tBREPGLContext,\r\n\tcameraChangeListeners,\r\n\tCOLORS,\r\n\tCurve,\r\n\tcurvePointMF,\r\n\tCustomPlane,\r\n\tEdge,\r\n\tFace,\r\n\tFaceMesh,\r\n\tfollowAlgorithm2d,\r\n\tgetMouseLine,\r\n\tImplicitCurve,\r\n\tinitNavigationEvents,\r\n\tL3,\r\n\tMathFunctionR2R,\r\n\tP3,\r\n\tPICurve,\r\n\tSemiCylinderSurface,\r\n\tSemiEllipsoidSurface,\r\n\tsetupCamera,\r\n} from './index'\r\n\r\nconst eye = { pos: V(1000, 1000, 1000), focus: V3.O, up: V3.Z, zoomFactor: 1 }\r\nconst drVs: any[] = []\r\nconst bReps: BRep[] = []\r\nconst edgeViewerColors = arrayFromFunction(20, i => chroma.random().gl())\r\nlet bRepMeshes: (Mesh & { faceIndexes?: Map<Face, { start: int; count: int }>; TRIANGLES: int[]; normals: V3[] })[] = []\r\n//bMesh: Mesh & {faceIndexes?: Map<Face, {start: int, count: int}>},\r\n//cMesh: Mesh & {faceIndexes?: Map<Face, {start: int, count: int}>},\r\nlet edgesMesh: Mesh & {\r\n\tfaceIndexes?: Map<Face, { start: int; count: int }>\r\n\tTRIANGLES: int[]\r\n\tnormals: V3[]\r\n\tcurve1: V3[]\r\n\tcurve1colors: GL_COLOR[]\r\n}\r\nlet faceMesh: FaceMesh & { tangents: V3[] }\r\nlet meshes: (Mesh & { TRIANGLES: int[]; normals: V3[] })[] = []\r\nlet hovering: {}\r\n\r\nimport * as ts3dutils from 'ts3dutils'\r\nimport * as tsgl from 'tsgl'\r\nimport * as brepts from './index'\r\nconst addMissing = (to: any, from: any) =>\r\n\tObject.keys(from).forEach(key => 'Buffer' != key && !to[key] && (to[key] = from[key]))\r\n// tslint:disable-next-line:class-name\r\nexport class RenderObjects {\r\n\ta: BRep = undefined\r\n\tb: BRep = undefined\r\n\tc: BRep = undefined\r\n\td: BRep = undefined\r\n\tface: Face[]\r\n\tedges: Edge[] = []\r\n\twireframe: boolean = false\r\n\tnormallines: boolean = false\r\n\ti: any = undefined\r\n\thjk: any = undefined\r\n\tdrPs: (V3 | { info: string; p: V3 })[] = []\r\n\tdrVs: any = []\r\n\tmesh: Mesh & { TRIANGLES: int[]; normals: V3[] } = undefined\r\n\tpaintMeshNormals = false\r\n\tpaintWireframe = false\r\n}\r\nconst renderObjectKeys = Object.keys(new RenderObjects()) as (keyof RenderObjects)[]\r\n\r\ndeclare function INIT_HTML(): void\r\naddMissing(window, ts3dutils)\r\naddMissing(window, tsgl)\r\naddMissing(window, brepts)\r\naddMissing(window, new RenderObjects())\r\ndeclare global {\r\n\tinterface Window extends RenderObjects {}\r\n}\r\nconst arrayLiteralType = <T extends string>(x: T[]): T[] => x\r\nconst g = window\r\nfunction objectAssignConcatArray<T, U>(a: T, b: U): T & U {\r\n\tfor (const key of Object.keys(b)) {\r\n\t\tif (Array.isArray(g[key]) && Array.isArray(b[key])) {\r\n\t\t\ta[key].push(...b[key])\r\n\t\t} else if (undefined !== b[key]) {\r\n\t\t\ta[key] = b[key]\r\n\t\t}\r\n\t}\r\n\treturn a as any\r\n}\r\nfunction initBRep() {\r\n\teye.pos = V(1, 2, 101)\r\n\teye.focus = V(0, 1, 0)\r\n\teye.up = V(0, 1, 0)\r\n\teye.zoomFactor = 8\r\n\r\n\tconst htmlContext = INIT_HTML()\r\n\r\n\tconst hash = window.location.search.substr(1) || window.location.hash.substr(1) || ''\r\n\tconst command = decodeURIComponent(hash)\r\n\tconsole.log(command)\r\n\tconst hashContext = new Function(\r\n\t\t`let ${renderObjectKeys.join(',')};${command};return{${renderObjectKeys.join(',')}}`,\r\n\t)() as RenderObjects\r\n\r\n\t// hashContext last, so i value in hash wins\r\n\tobjectAssignConcatArray(g, htmlContext)\r\n\tobjectAssignConcatArray(g, hashContext)\r\n\tconsole.log(htmlContext)\r\n\r\n\tObject.assign(eye, g.i)\r\n\t// let gets: any = {a, b, c, d, mesh, edges, points, vectors}\r\n\t// g.hjk && Object.assign(g, HJK())\r\n\tarrayLiteralType(['a', 'b', 'c', 'd']).forEach(k => {\r\n\t\tif (g[k]) {\r\n\t\t\tbReps.push(g[k])\r\n\t\t}\r\n\t})\r\n\r\n\tbRepMeshes = bReps.map(bRep => bRep.toMesh())\r\n\tbRepMeshes.forEach(mesh => {\r\n\t\tmesh.computeWireframeFromFlatTriangles('wireframe')\r\n\t\tmesh.computeNormalLines(0.1, 'normallines')\r\n\t\tmesh.compile()\r\n\t})\r\n\r\n\tif (g.mesh) {\r\n\t\tconsole.log('mesh/es from GET', bRepMeshes)\r\n\t\tmeshes = g.mesh instanceof Array ? g.mesh : [g.mesh]\r\n\t\tmeshes.forEach(mesh => {\r\n\t\t\tmesh.computeWireframeFromFlatTriangles('wireframe')\r\n\t\t\tmesh.computeNormalLines(0.1, 'normallines')\r\n\t\t\tmesh.compile()\r\n\t\t})\r\n\t}\r\n\r\n\tif (g.edges) {\r\n\t\tconsole.log('edges from GET')\r\n\t\tedgesMesh = new Mesh()\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t.addVertexBuffer('curve1', 'curve1')\r\n\t\t\t.addVertexBuffer('curve1colors', 'curve1colors')\r\n\t\tg.edges.forEach((edge, edgeIndex) => {\r\n\t\t\tconst points = edge.points()\r\n\t\t\tfor (let i = 0; i < points.length - 1; i++) {\r\n\t\t\t\tconst color = edgeViewerColors[(edgeIndex + i % 2) % edgeViewerColors.length]\r\n\t\t\t\t// const tangent = edge.tangentAt(i)\r\n\t\t\t\t// dMesh.curve1.push(points[i], points[i].plus(tangent.toLength(1)))\r\n\t\t\t\tedgesMesh.curve1.push(points[i], points[i + 1])\r\n\t\t\t\tedgesMesh.curve1colors.push(color, color)\r\n\t\t\t}\r\n\t\t\tedge.curve instanceof PICurve && (edge.curve as PICurve).addToMesh(edgesMesh, 8, 0.02, 2)\r\n\t\t})\r\n\t\t//dMesh.computeWireframeFromFlatTriangles()\r\n\t\tedgesMesh.compile()\r\n\t}\r\n\tif (g.face) {\r\n\t\tif (!g.face.length) {\r\n\t\t\tg.face = [g.face] as any\r\n\t\t}\r\n\t\tfaceMesh = new Mesh()\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addIndexBuffer('LINES')\r\n\t\t\t.addVertexBuffer('tangents', 'tangents')\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\tfor (const face of g.face) {\r\n\t\t\tface.addToMesh(faceMesh)\r\n\t\t\tfor (const edge of face.allEdges) {\r\n\t\t\t\tconst ts = edge.curve.calcSegmentTs(edge.aT, edge.bT, edge.reversed, true)\r\n\t\t\t\tfor (const t of ts) {\r\n\t\t\t\t\tconst p = edge.curve.at(t)\r\n\t\t\t\t\tfaceMesh.tangents.push(p, p.plus(edge.tangentAt(t)))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfaceMesh.compile()\r\n\t}\r\n\r\n\tg.drPs.push()\r\n}\r\n\r\nconst meshColors: Color[][] = [\r\n\tchroma.scale(['#ff297f', '#6636FF']),\r\n\tchroma.scale(['#ffe93a', '#ff6e35']),\r\n\tchroma.scale(['#1eff33', '#4960ff']),\r\n\tchroma.scale(['#31fff8', '#2dff2a']),\r\n].map(scale => scale.mode('lab').colors(20, null as 'alpha'))\r\n\r\nconst meshColorssGL = meshColors.map(cs => cs.map(c => c.gl()))\r\n\r\nfunction viewerPaint(time: int, gl: BREPGLContext) {\r\n\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\r\n\tgl.loadIdentity()\r\n\r\n\tsetupCamera(eye, gl)\r\n\r\n\tgl.drawVectors(drVs)\r\n\tgl.shaders.lighting.uniforms({ camPos: eye.pos })\r\n\tfor (let i = 0; i < bRepMeshes.length; i++) {\r\n\t\tconst mesh = bRepMeshes[i]\r\n\t\tgl.pushMatrix()\r\n\t\t//gl.translate(30, 0, 0)\r\n\t\tgl.projectionMatrix.m[11] -= 1 / (1 << 20) // prevent Z-fighting\r\n\t\tg.paintWireframe &&\r\n\t\t\tmesh.indexBuffers.wireframe &&\r\n\t\t\tgl.shaders.singleColor\r\n\t\t\t\t.uniforms({ color: COLORS.TS_STROKE.gl() })\r\n\t\t\t\t.drawBuffers(mesh.vertexBuffers, mesh.indexBuffers.wireframe, gl.LINES)\r\n\t\tg.paintMeshNormals &&\r\n\t\t\tmesh.indexBuffers.normallines &&\r\n\t\t\tgl.shaders.singleColor\r\n\t\t\t\t.uniforms({ color: COLORS.TS_STROKE.gl() })\r\n\t\t\t\t.drawBuffers(mesh.vertexBuffers, mesh.indexBuffers.normallines, gl.LINES)\r\n\t\tgl.shaders.singleColor\r\n\t\t\t.uniforms({ color: COLORS.TS_STROKE.gl() })\r\n\t\t\t.drawBuffers(mesh.vertexBuffers, mesh.indexBuffers.LINES, gl.LINES)\r\n\t\tgl.projectionMatrix.m[11] += 1 / (1 << 20)\r\n\r\n\t\tlet faceIndex = bReps[i].faces.length\r\n\t\twhile (faceIndex--) {\r\n\t\t\tconst face = bReps[i].faces[faceIndex]\r\n\t\t\tconst faceTriangleIndexes = mesh.faceIndexes.get(face)\r\n\t\t\tgl.shaders.lighting\r\n\t\t\t\t.uniforms({\r\n\t\t\t\t\tcolor:\r\n\t\t\t\t\t\thovering == face\r\n\t\t\t\t\t\t\t? meshColors\r\n\t\t\t\t\t\t\t\t\t.emod(i)\r\n\t\t\t\t\t\t\t\t\t.emod(faceIndex)\r\n\t\t\t\t\t\t\t\t\t.darken(2)\r\n\t\t\t\t\t\t\t\t\t.gl()\r\n\t\t\t\t\t\t\t: meshColorssGL.emod(i).emod(faceIndex),\r\n\t\t\t\t})\r\n\t\t\t\t.draw(mesh, gl.TRIANGLES, faceTriangleIndexes.start, faceTriangleIndexes.count)\r\n\t\t}\r\n\r\n\t\tgl.popMatrix()\r\n\t}\r\n\r\n\tif (faceMesh) {\r\n\t\tgl.shaders.singleColor\r\n\t\t\t.uniforms({ color: chroma('red').gl() })\r\n\t\t\t.drawBuffers({ ts_Vertex: faceMesh.vertexBuffers.tangents }, undefined, gl.LINES)\r\n\t}\r\n\r\n\tfor (const mesh of meshes) {\r\n\t\tgl.pushMatrix()\r\n\t\tgl.projectionMatrix.m[11] -= 1 / (1 << 20) // prevent Z-fighting\r\n\t\tg.paintWireframe &&\r\n\t\t\tmesh.indexBuffers.wireframe &&\r\n\t\t\tgl.shaders.singleColor\r\n\t\t\t\t.uniforms({ color: COLORS.TS_STROKE.gl() })\r\n\t\t\t\t.drawBuffers(mesh.vertexBuffers, mesh.indexBuffers.wireframe, gl.LINES)\r\n\t\tg.paintMeshNormals &&\r\n\t\t\tmesh.indexBuffers.normallines &&\r\n\t\t\tgl.shaders.singleColor\r\n\t\t\t\t.uniforms({ color: COLORS.TS_STROKE.gl() })\r\n\t\t\t\t.drawBuffers(mesh.vertexBuffers, mesh.indexBuffers.normallines, gl.LINES)\r\n\t\tgl.projectionMatrix.m[11] += 1 / (1 << 20)\r\n\t\tmesh.TRIANGLES &&\r\n\t\t\tgl.shaders.lighting\r\n\t\t\t\t.uniforms({\r\n\t\t\t\t\tcolor: chroma('#ffFF00').gl(),\r\n\t\t\t\t\tcamPos: eye.pos,\r\n\t\t\t\t})\r\n\t\t\t\t.draw(mesh)\r\n\t\tgl.popMatrix()\r\n\t}\r\n\r\n\tif (hovering instanceof Edge) {\r\n\t\tgl.projectionMatrix.m[11] -= 1 / (1 << 20) // prevent Z-fighting\r\n\t\tgl.drawEdge(hovering, GL_COLOR_BLACK, 2 / eye.zoomFactor)\r\n\t\tgl.projectionMatrix.m[11] += 1 / (1 << 20)\r\n\t}\r\n\tg.edges && g.edges.forEach((e, i) => gl.drawEdge(e, edgeViewerColors.emod(i), 2.5 / eye.zoomFactor))\r\n\r\n\tg.drPs.forEach(info => gl.drawPoint(info instanceof V3 ? info : info.p, chroma('#cc0000').gl(), 5 / eye.zoomFactor))\r\n\tdrawPlanes.forEach(plane => gl.drawPlane(plane, plane.color, hovering == plane))\r\n\r\n\t// gl.begin(gl.LINES)\r\n\t// gl.color('red')\r\n\t// ;[].forEach(x => gl.vertex(x))\r\n\t// gl.end()\r\n}\r\n\r\nfunction getHovering(\r\n\tmouseLine: L3,\r\n\tfaces: Face[],\r\n\tplanes: CustomPlane[],\r\n\tpoints: V3[],\r\n\tedges: Edge[],\r\n\tmindist: number,\r\n\t...consider: ('faces' | 'planes' | 'sketchElements' | 'points' | 'edges' | 'features')[]\r\n): any {\r\n\tlet hoverHighlight = null,\r\n\t\tnearest = Infinity\r\n\r\n\tconst checkFeatures = consider.includes('features')\r\n\tassert(!checkFeatures || !consider.includes('faces'))\r\n\r\n\tfunction checkEl(el: any, distance: number) {\r\n\t\tif (distance < nearest) {\r\n\t\t\tnearest = distance\r\n\t\t\thoverHighlight = el\r\n\t\t}\r\n\t}\r\n\r\n\tif (faces && (consider.includes('faces') || consider.includes('features'))) {\r\n\t\tfor (const face of faces) {\r\n\t\t\tcheckEl(checkFeatures ? face.info.feature : face, face.intersectsLine(mouseLine))\r\n\t\t}\r\n\t}\r\n\tif (planes && consider.includes('planes')) {\r\n\t\tfor (const plane of planes) {\r\n\t\t\tcheckEl(plane, plane.distanceTo(mouseLine, mindist))\r\n\t\t}\r\n\t}\r\n\tif (consider.includes('points')) {\r\n\t\tfor (const p of points) {\r\n\t\t\tconst t = mouseLine.pointT(p)\r\n\t\t\tif (mouseLine.at(t).distanceTo(p) < mindist * 1.2) {\r\n\t\t\t\tcheckEl(p, t - 0.1)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (consider.includes('edges')) {\r\n\t\tconst projPlane = new P3(mouseLine.dir1, 0)\r\n\t\tconst projPoint = projPlane.projectedPoint(mouseLine.anchor)\r\n\t\tfor (const edge of edges) {\r\n\t\t\tconst curve = edge.curve\r\n\t\t\tconst prio = 0.05\r\n\t\t\tif (curve instanceof L3 && curve.dir1.isParallelTo(mouseLine.dir1)) {\r\n\t\t\t\tconst d = mouseLine.distanceToPoint(edge.a)\r\n\t\t\t\tconst t = mouseLine.pointT(edge.a)\r\n\r\n\t\t\t\tif (d < mindist) {\r\n\t\t\t\t\tcheckEl(edge, t - prio)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!(curve instanceof ImplicitCurve)) {\r\n\t\t\t\t\tconst projCurve = curve.project(projPlane)\r\n\t\t\t\t\tconst curveT = edge.clampedT(projCurve.closestTToPoint(projPoint))\r\n\t\t\t\t\tconst p = curve.at(curveT)\r\n\t\t\t\t\tconst t = mouseLine.pointT(p)\r\n\t\t\t\t\tif (projCurve.at(curveT).distanceTo(projPoint) < mindist) {\r\n\t\t\t\t\t\tcheckEl(edge, t - prio)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn hoverHighlight\r\n}\r\n\r\nfunction initInfoEvents(paintScreen: () => {}, gl: BREPGLContext) {\r\n\tgl.canvas.addEventListener('mousemove', function(e) {\r\n\t\tconst mouseLine = getMouseLine({ x: e.clientX, y: e.clientY }, gl)\r\n\t\tconst faces = bReps.flatMap(b2 => b2 && b2.faces)\r\n\t\tconst testEdges: Edge[] = [\r\n\t\t\t...bReps.flatMap(b2 => Array.from<Edge>(b2.buildAdjacencies().edgeFaces.keys())),\r\n\t\t\t...g.edges,\r\n\t\t]\r\n\t\thovering = getHovering(mouseLine, faces, undefined, [], testEdges, 0.1, 'faces', 'edges')\r\n\t\t//let html = '', pp\r\n\t\t//if (hovering instanceof Edge) {\r\n\t\t//\tpp = V(e.clientX, e.clientY)\r\n\t\t//\tdefaultRoundFunction = x => round10(x, -3)\r\n\t\t//\thtml = hovering.toString(x => round10(x, -3)) + ' length=' + hovering.length().toFixed(3)\r\n\t\t//} else if (hovering instanceof Face) {\r\n\t\t//\tpp = V(e.clientX, e.clientY)\r\n\t\t//\tdefaultRoundFunction = x => round10(x, -3)\r\n\t\t//   let area\r\n\t\t//   try { area = hovering.calcArea() } catch (e) {}\r\n\t\t//\thtml = `face surface=${hovering.surface.constructor.name} edges=${hovering.contour.length} area=${area}`\r\n\t\t//}\r\n\t\t//if (pp) {\r\n\t\t//\t//const pSC = gl.projectionMatrix.times(gl.modelViewMatrix).transformPoint(pp)\r\n\t\t//\t//const x = (pSC.x * 0.5 + 0.5) * window.innerWidth, y = (-pSC.y * 0.5 + 0.5) * window.innerHeight\r\n\t\t//\ttooltipShow(html, pp.x, pp.y)\r\n\t\t//} else {\r\n\t\t//\ttooltipHide()\r\n\t\t//}\r\n\t\tpaintScreen()\r\n\t})\r\n}\r\n\r\n//var sketchPlane = new CustomPlane(V3.X, V3(1, 0, -1).unit(), V3.Y, -500, 500, -500, 500, 0xff00ff);\r\nconst drawPlanes = [\r\n\tnew CustomPlane(V3.O, V3.Y, V3.Z, 'planeYZ', chroma(0xff0000).gl()),\r\n\tnew CustomPlane(V3.O, V3.X, V3.Z, 'planeZX', chroma(0x00ff00).gl()),\r\n\tnew CustomPlane(V3.O, V3.X, V3.Y, 'planeXY', chroma(0x0000ff).gl()),\r\n\t//\tsketchPlane\r\n]\r\nlet paintScreen: () => void\r\ndeclare var BREPTS_ROOT: string\r\nexport async function viewerMain() {\r\n\tconst meshNormalsCheckbox = document.getElementById('paint-mesh-normals')\r\n\tmeshNormalsCheckbox.onclick = e => {\r\n\t\tg.paintMeshNormals = !g.paintMeshNormals\r\n\t\tpaintScreen()\r\n\t}\r\n\r\n\tconst wireframeCheckbox = document.getElementById('paint-wireframe')\r\n\twireframeCheckbox.onclick = e => {\r\n\t\tg.paintWireframe = !g.paintWireframe\r\n\t\tpaintScreen()\r\n\t}\r\n\r\n\tpaintScreen = () => requestAnimationFrame(t => viewerPaint(t, gl))\r\n\tB2T.defaultFont = await B2T.loadFont(BREPTS_ROOT + '/fonts/FiraSansMedium.woff')\r\n\twindow.onerror = function(errorMsg, url, lineNumber, column, errorObj) {\r\n\t\tconsole.log(errorMsg, url, lineNumber, column, errorObj)\r\n\t}\r\n\tconst gl = BREPGLContext.create(\r\n\t\tTSGLContext.create({ canvas: document.getElementById('testcanvas') as HTMLCanvasElement }),\r\n\t)\r\n\tgl.fullscreen()\r\n\tgl.canvas.oncontextmenu = () => false\r\n\r\n\tsetupCamera(eye, gl)\r\n\t//gl.cullFace(gl.FRONT_AND_BACK);\r\n\tgl.clearColor(1.0, 1.0, 1.0, 0.0)\r\n\tgl.enable(gl.BLEND)\r\n\tgl.enable(gl.DEPTH_TEST)\r\n\tgl.enable(gl.CULL_FACE)\r\n\tgl.depthFunc(gl.LEQUAL)\r\n\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA) // TODO ?!\r\n\r\n\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\r\n\tgl.loadIdentity()\r\n\tgl.scale(10, 10, 10)\r\n\r\n\tgl.loadIdentity()\r\n\r\n\tinitNavigationEvents(gl, eye, paintScreen)\r\n\tcameraChangeListeners.push(function(eye) {\r\n\t\tconst round = (x: number) => round10(x, -3)\r\n\t\tconst roundedEye = {\r\n\t\t\tpos: eye.pos.map(round),\r\n\t\t\tfocus: eye.focus.map(round),\r\n\t\t\tup: eye.up.map(round),\r\n\t\t\tzoomFactor: round(eye.zoomFactor),\r\n\t\t}\r\n\t\tconst iSource = 'i=' + roundedEye.toSource().replace(/[\\n\\r\\s]+|^\\(|\\)$/g, '')\r\n\t\tconst hash = window.location.hash.substr(1) || iSource\r\n\t\tconst result = hash.match(/i=\\{[^}]*\\}/) ? hash.replace(/i=\\{[^}]*\\}/, iSource) : hash + ';' + iSource\r\n\t\twindow.history.replaceState(undefined, undefined, '#' + result)\r\n\t})\r\n\t// initInfoEvents(paintScreen, g l)\r\n\t//initToolTips() // hide tooltip on mouseover\r\n\t//initPointInfoEvents()\r\n\tinitBRep()\r\n\tsetupCamera(eye, gl)\r\n\tpaintScreen()\r\n}\r\n\r\nexport function alignX(dir: number) {\r\n\teye.focus = V3.O\r\n\teye.pos = V(100 * dir, 0, 0)\r\n\teye.up = V3.Z\r\n\tpaintScreen()\r\n}\r\nexport function alignY(dir: number) {\r\n\teye.focus = V3.O\r\n\teye.pos = V(0, 100 * dir, 0)\r\n\teye.up = V3.Z\r\n\tpaintScreen()\r\n}\r\nexport function alignZ(dir: number) {\r\n\teye.focus = V3.O\r\n\teye.pos = V(0, 0, 100 * dir)\r\n\teye.up = V3.Y\r\n\tpaintScreen()\r\n}\r\nexport function rot(angleInDeg: number) {\r\n\teye.up = M4.rotateLine(eye.pos, eye.pos.to(eye.focus), angleInDeg * DEG).transformVector(eye.up)\r\n\tpaintScreen()\r\n}\r\n"],"names":["define","this","floatHashCode","CustomMap","PI","abs","V","__awaiter","WGL","Buffer","chroma","time","cos","log","max","min","sign","sin","EPS","stInAABB2","Curve","followAlgorithm2d","curvePointPP","PPCurve","followAlgorithmPP","L3","BezierCurve","XiEtaCurve","hashCode","P3","PlaneSurface","SemiEllipsoidSurface","ProjectedCurveSurface","ConicSurface","PICurve","ImplicitCurve","SemiCylinderSurface","SemiEllipseCurve","HyperbolaCurve","intersectionUnitHyperbolaLine","MathFunctionR2R","curvePoint","ParametricSurface","ParabolaCurve","intersectionUnitCircleLine2","intersectionUnitCircleLine","PointVsFace","dotCurve2","ZDirVolumeVisitor","CalculateAreaVisitor","Surface","breakDownPPCurves","ImplicitSurface","RotatedCurveSurface","getExtremePointsHelper","OUTSIDE","Edge","glqV3","glqArray","equals","parse","log2","HintingTrueType","inflate","isNode","B2T","getGlobalId","StraightEdge","PlaneFace","projectCurve","Face","BRep","PCurveEdge","rotateCurve","opentype.load","opentype.Path","projectPointCurve","CustomPlane","SVGPathData","RotationFace","fff","INSIDE","COPLANAR_SAME","splitsVolumeEnclosingFacesP","splitsVolumeEnclosingFaces","splitsVolumeEnclosingCone2","splitsVolumeEnclosingFacesP2","triangulateVertices","assembleFaceFromLooseEdges","calcNextEdgeIndex","CustomSet","COPLANAR_OPPOSITE","ALONG_EDGE_OR_PLANE","earcut","curvePointMF","nerdamer","cas2","cassini","lerp","COLORS","initShaders","initMeshes","BREPGLContext","CURVE_PAINTERS","shaders.vertexShaderBasic","shaders.fragmentShaderColor","shaders.vertexShaderColor","shaders.fragmentShaderVaryingColor","shaders.fragmentShaderColorHighlight","shaders.vertexShaderTexture","shaders.fragmentShaderTextureColor","shaders.vertexShaderRing","shaders.vertexShaderArc","shaders.vertexShaderConic3d","shaders.vertexShaderGeneric","shaders.vertexShaderBezier3d","shaders.vertexShaderBezier","shaders.vertexShaderLighting","shaders.fragmentShaderLighting","shaders.vertexShaderWaves","setupCamera","getPosOnTarget","cameraChangeListeners","SHADERS_TYPE_VAR","initNavigationEvents"],"mappings":"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AAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACzG,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACzG,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACzG,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC5G,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACzG,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC3G,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACzG,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACzG,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACzG,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC3G,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC3G,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC5G,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACzG,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC1G,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC3G,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACzG,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC1G,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC3G,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC5G,QAAQ,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACnI,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACjI,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC/H,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC/H,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC/H,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACjI,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC/H,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC/H,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC/H,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC9F,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAChG,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACzG,IAAI,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC1I,KAAK,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC/F,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IAC5I,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;IACjG,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;GAC7G,CAAC;;EAEF,CAAC,WAAW;IACV,IAAI,GAAG,EAAE,OAAO,CAAC;IACjB,OAAO,GAAG,EAAE,CAAC;IACb,KAAK,GAAG,IAAI,MAAM,EAAE;MAClB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;KACvD;IACD,OAAO,OAAO,CAAC;GAChB,GAAG,CAAC;;;;;;;;;EASL,MAAM,GAAG;IACP,SAAS,EAAE,SAAS;IACpB,YAAY,EAAE,SAAS;IACvB,IAAI,EAAE,SAAS;IACf,UAAU,EAAE,SAAS;IACrB,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,SAAS;IAChB,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,SAAS;IAChB,cAAc,EAAE,SAAS;IACzB,IAAI,EAAE,SAAS;IACf,UAAU,EAAE,SAAS;IACrB,KAAK,EAAE,SAAS;IAChB,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,SAAS;IACpB,UAAU,EAAE,SAAS;IACrB,SAAS,EAAE,SAAS;IACpB,KAAK,EAAE,SAAS;IAChB,UAAU,EAAE,SAAS;IACrB,cAAc,EAAE,SAAS;IACzB,QAAQ,EAAE,SAAS;IACnB,OAAO,EAAE,SAAS;IAClB,IAAI,EAAE,SAAS;IACf,QAAQ,EAAE,SAAS;IACnB,QAAQ,EAAE,SAAS;IACnB,aAAa,EAAE,SAAS;IACxB,QAAQ,EAAE,SAAS;IACnB,SAAS,EAAE,SAAS;IACpB,QAAQ,EAAE,SAAS;IACnB,SAAS,EAAE,SAAS;IACpB,WAAW,EAAE,SAAS;IACtB,cAAc,EAAE,SAAS;IACzB,UAAU,EAAE,SAAS;IACrB,UAAU,EAAE,SAAS;IACrB,OAAO,EAAE,SAAS;IAClB,UAAU,EAAE,SAAS;IACrB,YAAY,EAAE,SAAS;IACvB,aAAa,EAAE,SAAS;IACxB,aAAa,EAAE,SAAS;IACxB,aAAa,EAAE,SAAS;IACxB,aAAa,EAAE,SAAS;IACxB,UAAU,EAAE,SAAS;IACrB,QAAQ,EAAE,SAAS;IACnB,WAAW,EAAE,SAAS;IACtB,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,SAAS;IAClB,UAAU,EAAE,SAAS;IACrB,SAAS,EAAE,SAAS;IACpB,WAAW,EAAE,SAAS;IACtB,WAAW,EAAE,SAAS;IACtB,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,SAAS;IACpB,UAAU,EAAE,SAAS;IACrB,IAAI,EAAE,SAAS;IACf,SAAS,EAAE,SAAS;IACpB,IAAI,EAAE,SAAS;IACf,KAAK,EAAE,SAAS;IAChB,WAAW,EAAE,SAAS;IACtB,IAAI,EAAE,SAAS;IACf,QAAQ,EAAE,SAAS;IACnB,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,SAAS;IACpB,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,SAAS;IAChB,UAAU,EAAE,SAAS;IACrB,QAAQ,EAAE,SAAS;IACnB,aAAa,EAAE,SAAS;IACxB,SAAS,EAAE,SAAS;IACpB,YAAY,EAAE,SAAS;IACvB,SAAS,EAAE,SAAS;IACpB,UAAU,EAAE,SAAS;IACrB,SAAS,EAAE,SAAS;IACpB,cAAc,EAAE,SAAS;IACzB,oBAAoB,EAAE,SAAS;IAC/B,SAAS,EAAE,SAAS;IACpB,UAAU,EAAE,SAAS;IACrB,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,SAAS;IACpB,WAAW,EAAE,SAAS;IACtB,aAAa,EAAE,SAAS;IACxB,YAAY,EAAE,SAAS;IACvB,cAAc,EAAE,SAAS;IACzB,cAAc,EAAE,SAAS;IACzB,cAAc,EAAE,SAAS;IACzB,WAAW,EAAE,SAAS;IACtB,IAAI,EAAE,SAAS;IACf,SAAS,EAAE,SAAS;IACpB,KAAK,EAAE,SAAS;IAChB,OAAO,EAAE,SAAS;IAClB,MAAM,EAAE,SAAS;IACjB,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,SAAS;IAClB,gBAAgB,EAAE,SAAS;IAC3B,UAAU,EAAE,SAAS;IACrB,YAAY,EAAE,SAAS;IACvB,YAAY,EAAE,SAAS;IACvB,cAAc,EAAE,SAAS;IACzB,eAAe,EAAE,SAAS;IAC1B,iBAAiB,EAAE,SAAS;IAC5B,eAAe,EAAE,SAAS;IAC1B,eAAe,EAAE,SAAS;IAC1B,YAAY,EAAE,SAAS;IACvB,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,SAAS;IACpB,QAAQ,EAAE,SAAS;IACnB,WAAW,EAAE,SAAS;IACtB,IAAI,EAAE,SAAS;IACf,OAAO,EAAE,SAAS;IAClB,KAAK,EAAE,SAAS;IAChB,SAAS,EAAE,SAAS;IACpB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,SAAS;IACpB,MAAM,EAAE,SAAS;IACjB,aAAa,EAAE,SAAS;IACxB,SAAS,EAAE,SAAS;IACpB,aAAa,EAAE,SAAS;IACxB,aAAa,EAAE,SAAS;IACxB,UAAU,EAAE,SAAS;IACrB,SAAS,EAAE,SAAS;IACpB,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,SAAS;IACf,IAAI,EAAE,SAAS;IACf,UAAU,EAAE,SAAS;IACrB,MAAM,EAAE,SAAS;IACjB,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,SAAS;IAClB,aAAa,EAAE,SAAS;IACxB,GAAG,EAAE,SAAS;IACd,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,SAAS;IACpB,WAAW,EAAE,SAAS;IACtB,MAAM,EAAE,SAAS;IACjB,UAAU,EAAE,SAAS;IACrB,QAAQ,EAAE,SAAS;IACnB,QAAQ,EAAE,SAAS;IACnB,MAAM,EAAE,SAAS;IACjB,MAAM,EAAE,SAAS;IACjB,OAAO,EAAE,SAAS;IAClB,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,SAAS;IACpB,SAAS,EAAE,SAAS;IACpB,IAAI,EAAE,SAAS;IACf,WAAW,EAAE,SAAS;IACtB,SAAS,EAAE,SAAS;IACpB,GAAG,EAAE,SAAS;IACd,IAAI,EAAE,SAAS;IACf,OAAO,EAAE,SAAS;IAClB,MAAM,EAAE,SAAS;IACjB,SAAS,EAAE,SAAS;IACpB,MAAM,EAAE,SAAS;IACjB,KAAK,EAAE,SAAS;IAChB,KAAK,EAAE,SAAS;IAChB,UAAU,EAAE,SAAS;IACrB,MAAM,EAAE,SAAS;IACjB,WAAW,EAAE,SAAS;GACvB,CAAC;;EAEF,MAAM,CAAC,MAAM,GAAG,MAAM,GAAG,MAAM,CAAC;;EAEhC,OAAO,GAAG,WAAW;IACnB,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACjC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC;IACnB,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAC/B,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAC/B,CAAC,GAAG,aAAa,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,GAAG,aAAa,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,GAAG,aAAa,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;IAC3D,CAAC,GAAG,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;IAC5D,CAAC,GAAG,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,CAAC;IAC3D,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;GACjD,CAAC;;EAEF,OAAO,GAAG,SAAS,CAAC,EAAE;IACpB,OAAO,GAAG,IAAI,CAAC,IAAI,OAAO,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;GAC3E,CAAC;;EAEF,OAAO,GAAG,SAAS,CAAC,EAAE;IACpB,IAAI,CAAC,GAAG,aAAa,CAAC,EAAE,EAAE;MACxB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAClB,MAAM;MACL,OAAO,aAAa,CAAC,EAAE,IAAI,CAAC,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC;KAClD;GACF,CAAC;;EAEF,aAAa,GAAG;IACd,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,QAAQ;IACZ,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,QAAQ;IACZ,EAAE,EAAE,WAAW;IACf,EAAE,EAAE,WAAW;IACf,EAAE,EAAE,UAAU;IACd,EAAE,EAAE,WAAW;GAChB,CAAC;;EAEF,OAAO,GAAG,WAAW;IACnB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAChC,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,IAAI,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/D,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;GACrD,CAAC;;EAEF,OAAO,GAAG,SAAS,CAAC,EAAE;IACpB,IAAI,CAAC,CAAC,IAAI,GAAG,KAAK,OAAO,EAAE;MACzB,OAAO,CAAC,GAAG,KAAK,CAAC;KAClB,MAAM;MACL,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC,CAAC;KACtC;GACF,CAAC;;EAEF,OAAO,GAAG,SAAS,CAAC,EAAE;IACpB,IAAI,CAAC,GAAG,aAAa,CAAC,EAAE,EAAE;MACxB,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;KACtB,MAAM;MACL,OAAO,CAAC,GAAG,aAAa,CAAC,EAAE,GAAG,aAAa,CAAC,EAAE,CAAC;KAChD;GACF,CAAC;;EAEF,OAAO,GAAG,WAAW;IACnB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1B,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACf,CAAC,GAAG,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC;IAChF,CAAC,GAAG,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC;IAChF,CAAC,GAAG,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC;IAChF,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;GAClB,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,OAAO,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;MACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;MAChC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KACnD,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;GAChE,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC;;EAErB,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;IAC/B,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC3B,CAAC;;EAEF,MAAM,GAAG,SAAS,MAAM,EAAE;IACxB,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IAC1D,MAAM,GAAG,CAAC,WAAW;MACnB,IAAI,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC;MACpB,OAAO,GAAG,EAAE,CAAC;MACb,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC7C,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACd,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;OACzB;MACD,OAAO,OAAO,CAAC;KAChB,GAAG,CAAC;IACL,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;MACvB,GAAG,GAAG,CAAC,WAAW;QAChB,IAAI,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC;QACpB,OAAO,GAAG,EAAE,CAAC;QACb,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;UAC7C,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;UACd,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;SACvB;QACD,OAAO,OAAO,CAAC;OAChB,GAAG,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,GAAG,SAAS,CAAC,EAAE;QACd,IAAI,CAAC,EAAE,GAAG,CAAC;QACX,GAAG,GAAG,CAAC,WAAW;UAChB,IAAI,CAAC,EAAE,OAAO,CAAC;UACf,OAAO,GAAG,EAAE,CAAC;UACb,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;YAC/B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;WACjD;UACD,OAAO,OAAO,CAAC;SAChB,GAAG,CAAC;QACL,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;OACtC,CAAC;KACH,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;MAC9B,IAAI,GAAG,CAAC,WAAW;QACjB,IAAI,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC;QACpB,OAAO,GAAG,EAAE,CAAC;QACb,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;UAC7C,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;UACd,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;SACvB;QACD,OAAO,OAAO,CAAC;OAChB,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;MACrD,CAAC,GAAG,SAAS,CAAC,EAAE;QACd,IAAI,CAAC,EAAE,GAAG,CAAC;QACX,GAAG,GAAG,CAAC,WAAW;UAChB,IAAI,CAAC,EAAE,OAAO,CAAC;UACf,OAAO,GAAG,EAAE,CAAC;UACb,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;YAC/B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;WACzF;UACD,OAAO,OAAO,CAAC;SAChB,GAAG,CAAC;QACL,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;OACtC,CAAC;KACH,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;MAC9B,IAAI,GAAG,CAAC,WAAW;QACjB,IAAI,GAAG,EAAE,CAAC,EAAE,OAAO,CAAC;QACpB,OAAO,GAAG,EAAE,CAAC;QACb,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;UAC7C,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;UACd,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;SACvB;QACD,OAAO,OAAO,CAAC;OAChB,GAAG,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;MACrE,CAAC,GAAG,SAAS,CAAC,EAAE;QACd,IAAI,CAAC,EAAE,GAAG,CAAC;QACX,GAAG,GAAG,CAAC,WAAW;UAChB,IAAI,CAAC,EAAE,OAAO,CAAC;UACf,OAAO,GAAG,EAAE,CAAC;UACb,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;YAC/B,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;WACjJ;UACD,OAAO,OAAO,CAAC;SAChB,GAAG,CAAC;QACL,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;OACtC,CAAC;KACH,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;MAC9B,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAChC,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,GAAG,SAAS,CAAC,EAAE;QACd,IAAI,CAAC,GAAG,GAAG,EAAE;UACX,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAClB,MAAM;UACL,OAAO,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC;SAC1B;OACF,CAAC;KACH;IACD,OAAO,CAAC,CAAC;GACV,CAAC;;EAEF,MAAM,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE;IAC/B,IAAI,CAAC,CAAC;IACN,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IACnB,CAAC,CAAC,KAAK,GAAG,WAAW;MACnB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxB,CAAC;IACF,OAAO,CAAC,CAAC;GACV,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAoCF,MAAM,CAAC,SAAS,GAAG,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE;IACnE,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACd,IAAI,KAAK,IAAI,IAAI,EAAE;MACjB,KAAK,GAAG,GAAG,CAAC;KACb;IACD,IAAI,SAAS,IAAI,IAAI,EAAE;MACrB,SAAS,GAAG,CAAC,GAAG,CAAC;KAClB;IACD,IAAI,GAAG,IAAI,IAAI,EAAE;MACf,GAAG,GAAG,CAAC,CAAC;KACT;IACD,IAAI,KAAK,IAAI,IAAI,EAAE;MACjB,KAAK,GAAG,CAAC,CAAC;KACX;IACD,IAAI,SAAS,IAAI,IAAI,EAAE;MACrB,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACpB;IACD,EAAE,GAAG,CAAC,CAAC;IACP,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,OAAO,EAAE;MAC/B,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;KAClC,MAAM;MACL,EAAE,GAAG,CAAC,CAAC;MACP,SAAS,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;KACpC;IACD,CAAC,GAAG,SAAS,KAAK,EAAE;MAClB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;MACxC,CAAC,GAAG,KAAK,IAAI,CAAC,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,SAAS,GAAG,KAAK,CAAC,CAAC;MACtD,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,KAAK,EAAE,KAAK,CAAC,CAAC;MAC1C,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC;MACzC,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;MAC1B,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;MACf,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC,CAAC;MACnD,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC,CAAC;MACnD,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;MACjC,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;KACtD,CAAC;IACF,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC,EAAE;MACpB,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,OAAO,KAAK,CAAC;OACd;MACD,KAAK,GAAG,CAAC,CAAC;MACV,OAAO,CAAC,CAAC;KACV,CAAC;IACF,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,EAAE;MACxB,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,OAAO,SAAS,CAAC;OAClB;MACD,SAAS,GAAG,CAAC,CAAC;MACd,OAAO,CAAC,CAAC;KACV,CAAC;IACF,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC,EAAE;MACpB,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,OAAO,KAAK,CAAC;OACd;MACD,KAAK,GAAG,CAAC,CAAC;MACV,OAAO,CAAC,CAAC;KACV,CAAC;IACF,CAAC,CAAC,GAAG,GAAG,SAAS,CAAC,EAAE;MAClB,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,OAAO,GAAG,CAAC;OACZ;MACD,GAAG,GAAG,CAAC,CAAC;MACR,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,OAAO,EAAE;QACzB,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QACrB,IAAI,EAAE,KAAK,CAAC,EAAE;UACZ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;SACd;OACF,MAAM;QACL,EAAE,GAAG,CAAC,CAAC;OACR;MACD,OAAO,CAAC,CAAC;KACV,CAAC;IACF,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,EAAE;MACxB,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,OAAO,SAAS,CAAC;OAClB;MACD,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,EAAE;QACvB,SAAS,GAAG,CAAC,CAAC;QACd,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;OAClB,MAAM;QACL,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnB,EAAE,GAAG,CAAC,CAAC;OACR;MACD,OAAO,CAAC,CAAC;KACV,CAAC;IACF,CAAC,CAAC,KAAK,GAAG,WAAW;MACnB,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACxB,CAAC;IACF,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACX,OAAO,CAAC,CAAC;GACV,CAAC;;EAEF,MAAM,CAAC,MAAM,GAAG,WAAW;IACzB,IAAI,IAAI,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;IACvB,MAAM,GAAG,kBAAkB,CAAC;IAC5B,IAAI,GAAG,GAAG,CAAC;IACX,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;MAC9B,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;KAClD;IACD,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;GACxB,CAAC;;EAEF,cAAc,GAAG,EAAE,CAAC;;EAEpB,WAAW,GAAG,SAAS,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;IACvC,IAAI,QAAQ,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;IAC1B,IAAI,CAAC,IAAI,IAAI,EAAE;MACb,CAAC,GAAG,GAAG,CAAC;KACT;IACD,IAAI,CAAC,IAAI,IAAI,EAAE;MACb,CAAC,GAAG,KAAK,CAAC;KACX;;;;;;;IAOD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;MAC3B,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;KACrB;IACD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,QAAQ,EAAE;MAC3B,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;KACrB;IACD,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;MACrD,QAAQ,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;MAC7B,IAAI,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,EAAE;QACrB,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACpC,MAAM;OACP;KACF;IACD,IAAI,GAAG,IAAI,IAAI,EAAE;MACf,MAAM,aAAa,GAAG,CAAC,GAAG,mBAAmB,CAAC;KAC/C;IACD,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;GACpE,CAAC;;EAEF,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;;EAEjC,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;IACjD,OAAO,WAAW,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;GACtC,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,WAAW,CAAC;;EAEzB,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC;;EAElD,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,IAAI,CAAC,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC;IACvB,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACxB,OAAO,GAAG,EAAE,CAAC;IACb,KAAK,CAAC,IAAI,GAAG,EAAE;MACb,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;MACX,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;IACD,OAAO,OAAO,CAAC;GAChB,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,OAAO,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;MACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;MAChC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KACnD,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;GAChE,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,KAAK,EAAE;IACpC,IAAI,KAAK,IAAI,IAAI,EAAE;MACjB,KAAK,GAAG,IAAI,CAAC;KACd;IACD,IAAI,KAAK,EAAE;MACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC9C,MAAM;MACL,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC9B;GACF,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,KAAK,EAAE;IACrC,IAAI,KAAK,IAAI,IAAI,EAAE;MACjB,KAAK,GAAG,IAAI,CAAC;KACd;IACD,IAAI,CAAC,KAAK,EAAE;MACV,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC3B;IACD,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;GACrG,CAAC;;EAEF,cAAc,CAAC,IAAI,CAAC;IAClB,CAAC,EAAE,CAAC;IACJ,IAAI,EAAE,SAAS,CAAC,EAAE;MAChB,IAAI,CAAC,CAAC;MACN,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;MACtB,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,OAAO,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;QACzC,OAAO,KAAK,CAAC;OACd;MACD,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;QACvE,OAAO,KAAK,CAAC;OACd;KACF;GACF,CAAC,CAAC;;EAEH,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;;EAEzB,gBAAgB,GAAG,SAAS,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;IAC5C,IAAI,IAAI,EAAE,IAAI,CAAC;IACf,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACjB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACjB,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;GAC1L,CAAC;;EAEF,aAAa,GAAG,SAAS,MAAM,EAAE;IAC/B,IAAI,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC;IAC7B,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;IACtB,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;MAC7C,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;MAChB,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC;MACf,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACtB;IACD,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACtB,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;GACvB,CAAC;;EAEF,cAAc,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC,CAAC;;EAEhD,MAAM,CAAC,OAAO,GAAG,SAAS,MAAM,EAAE,IAAI,EAAE;IACtC,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;IAC7D,IAAI,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,GAAG,KAAK,CAAC;KACd;IACD,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;IAClB,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;MAC9B,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;KAClB,CAAC,CAAC;IACH,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,IAAI,IAAI,KAAK,MAAM,EAAE;MACnB,OAAO,aAAa,CAAC,MAAM,CAAC,CAAC;KAC9B;IACD,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtB,GAAG,GAAG,EAAE,CAAC;IACT,EAAE,GAAG,CAAC,CAAC;IACP,EAAE,GAAG,CAAC,CAAC;IACP,KAAK,CAAC,IAAI,GAAG,EAAE;MACb,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;MACrB,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MACjC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;QAC5C,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;QACtB,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;QACb,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;OACd;KACF;IACD,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;IACtB,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;MAC7C,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;MACd,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;MACnB,KAAK,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;MACnB,KAAK,CAAC,IAAI,GAAG,EAAE;QACb,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;UACnB,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;UAClB,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;UACZ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAC1B,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;YACtB,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YACb,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;WACd;SACF;OACF;KACF;IACD,KAAK,CAAC,IAAI,GAAG,EAAE;MACb,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;MACzB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAC1B,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;QAC/C,OAAO,CAAC,GAAG,CAAC,EAAE;UACZ,CAAC,IAAI,GAAG,CAAC;SACV;QACD,OAAO,CAAC,IAAI,GAAG,EAAE;UACf,CAAC,IAAI,GAAG,CAAC;SACV;QACD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;OACZ;KACF;IACD,OAAO,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;GAC3C,CAAC;;EAEF,OAAO,GAAG,SAAS,GAAG,EAAE;IACtB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IACvB,IAAI,GAAG,CAAC,KAAK,CAAC,qCAAqC,CAAC,EAAE;MACpD,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;QACxC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;OACrB;MACD,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;QACpB,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACpB,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;OAC3D;MACD,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;MACtB,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;MACZ,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;MAClB,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;MACb,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACrB;IACD,IAAI,GAAG,CAAC,KAAK,CAAC,sBAAsB,CAAC,EAAE;MACrC,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;QACpB,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;OACrB;MACD,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;MACtB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;MACnB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;MACnB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;MAClB,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;MACzC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACrB;IACD,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,IAAI,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACnD,OAAO,GAAG,CAAC;KACZ;IACD,MAAM,iBAAiB,GAAG,GAAG,CAAC;GAC/B,CAAC;;EAEF,OAAO,GAAG,SAAS,QAAQ,EAAE,IAAI,EAAE;IACjC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC5B,IAAI,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,GAAG,KAAK,CAAC;KACd;IACD,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,GAAG,GAAG,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAChC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACjC,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxC,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACjC,OAAO,GAAG,GAAG,CAAC,WAAW;MACvB,QAAQ,IAAI,CAAC,WAAW,EAAE;QACxB,KAAK,MAAM;UACT,OAAO,GAAG,GAAG,GAAG,CAAC;QACnB,KAAK,MAAM;UACT,OAAO,GAAG,GAAG,GAAG,CAAC;QACnB;UACE,OAAO,GAAG,CAAC;OACd;KACF,GAAG,CAAC;GACN,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC,EAAE;IACvB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;GACnB,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,OAAO,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;MACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;MAChC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KACnD,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;GAChE,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,IAAI,EAAE;IACnC,IAAI,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,GAAG,KAAK,CAAC;KACd;IACD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;GACjC,CAAC;;EAEF,cAAc,CAAC,IAAI,CAAC;IAClB,CAAC,EAAE,CAAC;IACJ,IAAI,EAAE,SAAS,CAAC,EAAE;MAChB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;QAClD,OAAO,KAAK,CAAC;OACd;KACF;GACF,CAAC,CAAC;;EAEH,OAAO,GAAG,WAAW;IACnB,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACrD,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,IAAI,CAAC,KAAK,CAAC,EAAE;MACX,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;KACrB,MAAM;MACL,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MACd,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAC3C,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;MAChB,CAAC,IAAI,GAAG,CAAC;MACT,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAClB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;MACV,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MAClB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;QAC/B,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;UACb,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACZ;QACD,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;UACb,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;SACZ;QACD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;UACjB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;SACnC,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;UACxB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACX,MAAM,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;UACxB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC/C,MAAM;UACL,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACX;OACF;MACD,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;KACrG;IACD,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;MACnB,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3B,MAAM;MACL,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAClB;GACF,CAAC;;EAEF,OAAO,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAC1B,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACtB,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE;MACjC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;KAC7C;IACD,CAAC,IAAI,GAAG,CAAC;IACT,CAAC,IAAI,GAAG,CAAC;IACT,CAAC,IAAI,GAAG,CAAC;IACT,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;IACpB,IAAI,GAAG,KAAK,GAAG,EAAE;MACf,CAAC,GAAG,CAAC,CAAC;MACN,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC;KAChB,MAAM;MACL,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;KACzE;IACD,IAAI,CAAC,KAAK,GAAG,EAAE;MACb,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;KAC3B,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;MACpB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;KAC/B,MAAM,IAAI,CAAC,KAAK,GAAG,EAAE;MACpB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;KAC/B;IACD,CAAC,IAAI,EAAE,CAAC;IACR,IAAI,CAAC,GAAG,CAAC,EAAE;MACT,CAAC,IAAI,GAAG,CAAC;KACV;IACD,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;GAClB,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,OAAO,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;MACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;MAChC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KACnD,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;GAChE,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC;;EAErB,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;IAC/B,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC3B,CAAC;;EAEF,OAAO,GAAG,WAAW;IACnB,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7E,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,IAAI,GAAG,CAAC;IACT,IAAI,CAAC,KAAK,CAAC,EAAE;MACX,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACf,MAAM;MACL,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,CAAC,GAAG,CAAC,CAAC;OACP;MACD,IAAI,CAAC,GAAG,GAAG,EAAE;QACX,CAAC,IAAI,GAAG,CAAC;OACV;MACD,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,CAAC,IAAI,GAAG,CAAC;OACV;MACD,CAAC,IAAI,EAAE,CAAC;MACR,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MACV,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;MAChB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MACpB,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1B,QAAQ,CAAC;QACP,KAAK,CAAC;UACJ,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;UACpD,MAAM;QACR,KAAK,CAAC;UACJ,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;UACxD,MAAM;QACR,KAAK,CAAC;UACJ,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;UACxD,MAAM;QACR,KAAK,CAAC;UACJ,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;UACxD,MAAM;QACR,KAAK,CAAC;UACJ,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;UACxD,MAAM;QACR,KAAK,CAAC;UACJ,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;OAC3D;KACF;IACD,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;GACjD,CAAC;;EAEF,OAAO,GAAG,WAAW;IACnB,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;IACtC,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;IAClB,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC;IAChB,IAAI,GAAG,KAAK,CAAC,EAAE;MACb,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC;MACf,CAAC,GAAG,CAAC,CAAC;KACP,MAAM;MACL,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC;MAChB,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC;OACrB;MACD,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC;OACzB;MACD,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC;OACzB;MACD,CAAC,IAAI,EAAE,CAAC;MACR,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,CAAC,IAAI,GAAG,CAAC;OACV;KACF;IACD,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;GAClB,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,OAAO,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;MACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;MAChC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KACnD,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;GAChE,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC;;EAErB,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;IAC/B,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC3B,CAAC;;EAEF,OAAO,GAAG,SAAS,GAAG,EAAE;IACtB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACZ,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,QAAQ,EAAE;MACzD,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC;MACd,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC;MACtB,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC;MACf,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACrB;IACD,OAAO,CAAC,IAAI,CAAC,qBAAqB,GAAG,GAAG,CAAC,CAAC;IAC1C,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;GACrB,CAAC;;EAEF,OAAO,GAAG,WAAW;IACnB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IACjB,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,OAAO,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;GACjC,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE;IACzB,OAAO,IAAI,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;GAC9B,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,IAAI,EAAE;IACnC,IAAI,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,GAAG,KAAK,CAAC;KACd;IACD,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;GACjC,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC;;EAErB,cAAc,CAAC,IAAI,CAAC;IAClB,CAAC,EAAE,CAAC;IACJ,IAAI,EAAE,SAAS,CAAC,EAAE;MAChB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,QAAQ,EAAE;QAC7E,OAAO,KAAK,CAAC;OACd;KACF;GACF,CAAC,CAAC;;EAEH,OAAO,GAAG,WAAW;IACnB,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACrF,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACZ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;IAClB,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;IACb,IAAI,CAAC,KAAK,CAAC,EAAE;MACX,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;KAChB,MAAM;MACL,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,CAAC,GAAG,CAAC,CAAC;OACP;MACD,IAAI,CAAC,GAAG,GAAG,EAAE;QACX,CAAC,IAAI,GAAG,CAAC;OACV;MACD,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,CAAC,IAAI,GAAG,CAAC;OACV;MACD,CAAC,IAAI,EAAE,CAAC;MACR,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;MACV,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;MACjB,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;MACrB,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;MACf,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;MACX,QAAQ,CAAC;QACP,KAAK,CAAC;UACJ,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;UACpD,MAAM;QACR,KAAK,CAAC;UACJ,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;UACxD,MAAM;QACR,KAAK,CAAC;UACJ,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;UACxD,MAAM;QACR,KAAK,CAAC;UACJ,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;UACxD,MAAM;QACR,KAAK,CAAC;UACJ,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;UACxD,MAAM;QACR,KAAK,CAAC;UACJ,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;OAC3D;KACF;IACD,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;GACjD,CAAC;;EAEF,OAAO,GAAG,WAAW;IACnB,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC;IACvC,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;IAClB,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;IACtB,EAAE,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;IAC/B,IAAI,KAAK,KAAK,CAAC,EAAE;MACf,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC;KAChB,MAAM;MACL,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC;OACrB;MACD,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC;OACzB;MACD,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC;OACzB;MACD,CAAC,IAAI,EAAE,CAAC;MACR,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,CAAC,IAAI,GAAG,CAAC;OACV;KACF;IACD,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;GACnB,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,OAAO,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;MACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;MAChC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KACnD,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;GAChE,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC;;EAErB,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;IAC/B,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC3B,CAAC;;EAEF,OAAO,GAAG,SAAS,GAAG,EAAE;IACtB,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IACjC,GAAG,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;IACxB,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,KAAK,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;MACjD,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;KACpC;IACD,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,kDAAkD,CAAC,EAAE;MACrE,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACpB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;QAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;OAClB;MACD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACZ,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,wEAAwE,CAAC,EAAE;MAClG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACpB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;QAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;OAClB;KACF,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,mFAAmF,CAAC,EAAE;MAC7G,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACpB,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE;QAClC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;OAC/B;MACD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACZ,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,yGAAyG,CAAC,EAAE;MACnI,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACpB,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE;QAClC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;OAC/B;MACD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAClB,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,kFAAkF,CAAC,EAAE;MAC5G,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACpB,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;MACf,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;MACf,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;MACnB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACZ,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,wGAAwG,CAAC,EAAE;MAClI,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACpB,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;MACf,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC;MACf,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;MACnB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAChB;IACD,OAAO,GAAG,CAAC;GACZ,CAAC;;EAEF,OAAO,GAAG,SAAS,IAAI,EAAE;IACvB,IAAI,IAAI,CAAC;IACT,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC;IACpC,IAAI,IAAI,KAAK,KAAK,EAAE;MAClB,OAAO,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;KACjE,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE;MAC1B,OAAO,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KACjF,MAAM;;KAEN;GACF,CAAC;;EAEF,GAAG,GAAG,SAAS,CAAC,EAAE;IAChB,OAAO,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;GAC7B,CAAC;;EAEF,OAAO,GAAG,SAAS,GAAG,EAAE,KAAK,EAAE;IAC7B,IAAI,IAAI,CAAC;IACT,IAAI,GAAG,KAAK,GAAG,CAAC,GAAG,MAAM,GAAG,KAAK,CAAC;IAClC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1B,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACjC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACjC,IAAI,IAAI,KAAK,MAAM,EAAE;MACnB,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;KAChB;IACD,OAAO,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;GACzC,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC,EAAE;IACvB,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;GACnB,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,OAAO,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;MACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;MAChC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KACnD,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;GAChE,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,IAAI,EAAE;IACnC,IAAI,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,GAAG,KAAK,CAAC;KACd;IACD,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;MAC9B,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3B,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;MACrC,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAC1C;GACF,CAAC;;EAEF,MAAM,CAAC,KAAK,GAAG,SAAS,IAAI,EAAE;IAC5B,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;GAC9B,CAAC;;EAEF,cAAc,CAAC,IAAI,CAAC;IAClB,CAAC,EAAE,CAAC;IACJ,IAAI,EAAE,SAAS,CAAC,EAAE;MAChB,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE;QACjD,OAAO,OAAO,CAAC;OAChB;KACF;GACF,CAAC,CAAC;;EAEH,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,EAAE;IACjC,IAAI,CAAC,EAAE,CAAC,CAAC;IACT,IAAI,SAAS,CAAC,MAAM,EAAE;MACpB,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE;QACb,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;OAChC;MACD,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KAElB;IACD,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACf,KAAK,CAAC,IAAI,MAAM,EAAE;MAChB,IAAI,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,EAAE;QACnB,OAAO,CAAC,CAAC;OACV;KACF;IACD,OAAO,CAAC,CAAC;GACV,CAAC;;EAEF,OAAO,GAAG,WAAW;;;;;;;;;IASnB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IACjB,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;IAChB,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;GACpC,CAAC;;EAEF,OAAO,GAAG,WAAW;IACnB,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;IAC5C,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,GAAG,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAI,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/D,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;GACjD,CAAC;;EAEF,OAAO,GAAG,WAAW;IACnB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IACvB,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACxB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,OAAO,GAAG,GAAG,IAAI,GAAG,CAAC;IACxC,IAAI,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE;MAC1B,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC;KAChB;IACD,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;GAClB,CAAC;;EAEF,OAAO,GAAG,WAAW;IACnB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC;IAC7B,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,IAAI,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/D,OAAO,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;GACzB,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,IAAI,IAAI,CAAC;IACT,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACzB,OAAO,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;GAC/B,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,IAAI,IAAI,CAAC;IACT,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACzB,OAAO,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;GAC/B,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC;;EAErB,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IACjB,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,OAAO,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;GAC3B,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;IAC/B,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC3B,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;IAC/B,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;GACrC,CAAC;;EAEF,QAAQ,GAAG,SAAS,IAAI,EAAE;IACxB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAChC,IAAI,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,GAAG,KAAK,CAAC;KACd;IACD,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACZ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACZ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACZ,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;GACrB,CAAC;;EAEF,QAAQ,GAAG,WAAW;IACpB,IAAI,KAAK,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACrC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACnD,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtC,IAAI,CAAC,KAAK,CAAC,EAAE;MACX,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;KACzB;IACD,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACzC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACzC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACzC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;GACzB,CAAC;;EAEF,MAAM,CAAC,IAAI,GAAG,WAAW;IACvB,OAAO,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;GACpC,CAAC;;EAEF,MAAM,CAAC,IAAI,GAAG,WAAW;IACvB,OAAO,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;MACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;MAChC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KACnD,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;GACjE,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,WAAW;IAChC,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC5B,CAAC;;EAEF,MAAM,CAAC,EAAE,GAAG,WAAW;IACrB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IACpB,GAAG,GAAG,CAAC,WAAW;MAChB,IAAI,GAAG,EAAE,OAAO,CAAC;MACjB,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;MACxB,OAAO,GAAG,EAAE,CAAC;MACb,KAAK,CAAC,IAAI,GAAG,EAAE;QACb,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OACjB;MACD,OAAO,OAAO,CAAC;KAChB,EAAE,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC1B,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;MAC/B,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;KACf;IACD,OAAO,GAAG,CAAC;GACZ,CAAC;;EAEF,MAAM,CAAC,EAAE,GAAG,WAAW;IACrB,OAAO,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;MACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;MAChC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KACnD,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;GAC/D,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,WAAW;IAC9B,IAAI,GAAG,CAAC;IACR,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;IAChB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;GAC3D,CAAC;;EAEF,aAAa,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAChC,IAAI,GAAG,CAAC;IACR,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IACnB,OAAO,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;GAC7C,CAAC;;EAEF,WAAW,GAAG,SAAS,CAAC,EAAE;IACxB,CAAC,IAAI,GAAG,CAAC;IACT,IAAI,CAAC,IAAI,OAAO,EAAE;MAChB,OAAO,CAAC,GAAG,KAAK,CAAC;KAClB,MAAM;MACL,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,CAAC,CAAC;KACtC;GACF,CAAC;;EAEF,eAAe,GAAG,SAAS,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;IAC3C,IAAI,IAAI,EAAE,IAAI,CAAC;IACf,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACjB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACjB,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;GAC9H,CAAC;;EAEF,cAAc,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC;;EAE9C,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,GAAG,EAAE,IAAI,EAAE;IAC9C,IAAI,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC;IACjC,IAAI,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,GAAG,KAAK,CAAC;KACd;IACD,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;MACrB,OAAO,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACjC;IACD,IAAI,GAAG,KAAK,CAAC,EAAE;MACb,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KACrC,MAAM,IAAI,GAAG,KAAK,CAAC,EAAE;MACpB,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAC3C,MAAM;MACL,GAAG,GAAG,IAAI,CAAC;MACX,QAAQ,GAAG,EAAE,CAAC;MACd,IAAI,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;QACpB,IAAI,EAAE,EAAE,CAAC,CAAC;QACV,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAChC,EAAE,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;QACnB,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,EAAE,EAAE;UAC3C,OAAO,CAAC,CAAC;SACV;QACD,IAAI,EAAE,GAAG,GAAG,EAAE;UACZ,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACnB;QACD,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;OACnB,CAAC;MACF,OAAO,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;MACnC,IAAI,CAAC,IAAI,GAAG,CAAC,OAAO,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC;KAChG;IACD,OAAO,IAAI,CAAC;GACb,CAAC;;EAEF,eAAe,GAAG,SAAS,MAAM,EAAE;IACjC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IAClB,IAAI,GAAG,MAAM,GAAG,GAAG,CAAC;IACpB,IAAI,IAAI,GAAG,EAAE,EAAE;MACb,CAAC,GAAG,GAAG,CAAC;MACR,CAAC,GAAG,CAAC,kBAAkB,GAAG,mBAAmB,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,kBAAkB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7F,CAAC,GAAG,IAAI,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,kBAAkB,GAAG,kBAAkB,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,kBAAkB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;KAC9G,MAAM;MACL,CAAC,GAAG,kBAAkB,GAAG,iBAAiB,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,iBAAiB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1F,CAAC,GAAG,iBAAiB,GAAG,mBAAmB,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,GAAG,gBAAgB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;MAC1F,CAAC,GAAG,GAAG,CAAC;KACT;IACD,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;GAClB,CAAC;;EAEF,eAAe,GAAG,WAAW;IAC3B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC;IACnD,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,OAAO,GAAG,IAAI,CAAC;IACf,OAAO,GAAG,KAAK,CAAC;IAChB,GAAG,GAAG,GAAG,CAAC;IACV,OAAO,OAAO,GAAG,OAAO,GAAG,GAAG,EAAE;MAC9B,IAAI,GAAG,CAAC,OAAO,GAAG,OAAO,IAAI,GAAG,CAAC;MACjC,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC,CAAC;MAC5B,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;QAChC,OAAO,GAAG,IAAI,CAAC;OAChB,MAAM;QACL,OAAO,GAAG,IAAI,CAAC;OAChB;KACF;IACD,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC;GACpB,CAAC;;EAEF,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,GAAG,WAAW;IAC9C,OAAO,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;MACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;MAChC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KACnD,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;GACxE,CAAC;;EAEF,MAAM,CAAC,WAAW,GAAG,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,GAAG,eAAe,CAAC;;EAEhE,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,WAAW;IACvC,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GACnC,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC;;EAErD,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IAC/B,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC;IACtB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,QAAQ,IAAI,GAAG,KAAK,QAAQ,EAAE;MACpD,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;KAClB;IACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,QAAQ,IAAI,IAAI,KAAK,QAAQ,EAAE;MACtD,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;KAClB;IACD,EAAE,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;IACnB,EAAE,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;IACnB,IAAI,EAAE,GAAG,EAAE,EAAE;MACX,OAAO,CAAC,EAAE,GAAG,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;KAClC,MAAM;MACL,OAAO,CAAC,EAAE,GAAG,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC;KAClC;GACF,CAAC;;EAEF,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;IACrC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC;IACpC,IAAI,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,GAAG,KAAK,CAAC;KACd;IACD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,QAAQ,IAAI,GAAG,KAAK,QAAQ,EAAE;MACpD,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;KAClB;IACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,QAAQ,IAAI,IAAI,KAAK,QAAQ,EAAE;MACtD,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;KAClB;IACD,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACjB,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACjB,MAAM,GAAG,CAAC,CAAC;IACX,KAAK,CAAC,IAAI,EAAE,EAAE;MACZ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;MAChC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC;KACjB;IACD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;GAC1B,CAAC;;EAEF,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAC7H,IAAI,CAAC,IAAI,IAAI,EAAE;MACb,CAAC,GAAG,CAAC,CAAC;KACP;IACD,IAAI,CAAC,IAAI,IAAI,EAAE;MACb,CAAC,GAAG,CAAC,CAAC;KACP;IACD,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,QAAQ,IAAI,GAAG,KAAK,QAAQ,EAAE;MACpD,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;KAClB;IACD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,QAAQ,IAAI,IAAI,KAAK,QAAQ,EAAE;MACtD,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;KAClB;IACD,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACzD,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACzD,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7B,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7B,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,KAAK,GAAG,CAAC,QAAQ,GAAG,EAAE,KAAK,GAAG,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC;IAChE,EAAE,GAAG,CAAC,MAAM,GAAG,EAAE,KAAK,GAAG,GAAG,MAAM,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC;IACjD,EAAE,GAAG,EAAE,GAAG,QAAQ,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,KAAK,IAAI,EAAE,CAAC;IACxD,OAAO,EAAE,GAAG,CAAC,EAAE;MACb,EAAE,IAAI,GAAG,CAAC;KACX;IACD,OAAO,EAAE,IAAI,GAAG,EAAE;MAChB,EAAE,IAAI,GAAG,CAAC;KACX;IACD,CAAC,GAAG,CAAC,EAAE,IAAI,KAAK,MAAM,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;IAC5I,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IACvB,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC;IAC7B,EAAE,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC5B,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IACf,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IACf,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IACf,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;IACf,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;IAC9C,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACrB,EAAE,GAAG,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACrB,EAAE,GAAG,EAAE,CAAC;IACR,OAAO,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;GACpD,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,QAAQ,EAAE;IACvC,IAAI,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;IACnC,EAAE,GAAG,IAAI,CAAC;IACV,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;IACjB,IAAI,OAAO,EAAE;MACX,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;MAC1B,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;QACV,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;OACf,MAAM;QACL,OAAO,OAAO,CAAC,IAAI,CAAC,kBAAkB,GAAG,OAAO,GAAG,WAAW,GAAG,IAAI,CAAC,CAAC;OACxE;KACF,MAAM;MACL,OAAO,GAAG,CAAC;KACZ;GACF,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,QAAQ,EAAE,KAAK,EAAE;IAC9C,IAAI,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;IACnC,EAAE,GAAG,IAAI,CAAC;IACV,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,IAAI,OAAO,EAAE;MACX,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;MACjB,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;MAC1B,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;QACV,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,QAAQ,EAAE;UAC5B,QAAQ,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;YACrB,KAAK,GAAG;cACN,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;cACjB,MAAM;YACR,KAAK,GAAG;cACN,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;cACjB,MAAM;YACR,KAAK,GAAG;cACN,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7B,MAAM;YACR,KAAK,GAAG;cACN,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;cAC7B,MAAM;YACR;cACE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC;WACnB;SACF,MAAM;UACL,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;SAChB;OACF,MAAM;QACL,OAAO,CAAC,IAAI,CAAC,kBAAkB,GAAG,OAAO,GAAG,WAAW,GAAG,IAAI,CAAC,CAAC;OACjE;KACF,MAAM;MACL,GAAG,GAAG,KAAK,CAAC;KACb;IACD,OAAO,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;GAC5C,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,WAAW;IACnC,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC;GACpC,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,EAAE;IAClC,IAAI,SAAS,CAAC,MAAM,EAAE;MACpB,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;KAClE;IACD,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GACrB,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE;IACxC,IAAI,GAAG,EAAE,EAAE,CAAC;IACZ,IAAI,MAAM,IAAI,IAAI,EAAE;MAClB,MAAM,GAAG,CAAC,CAAC;KACZ;IACD,EAAE,GAAG,IAAI,CAAC;IACV,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IACf,GAAG,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,EAAE,GAAG,MAAM,CAAC;IACpC,OAAO,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;GAC1C,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,MAAM,EAAE;IAC1C,IAAI,MAAM,IAAI,IAAI,EAAE;MAClB,MAAM,GAAG,CAAC,CAAC;KACZ;IACD,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;GAC7B,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;;EAEhD,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,QAAQ,CAAC;;EAEpD,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,MAAM,EAAE;IAC1C,IAAI,GAAG,EAAE,EAAE,CAAC;IACZ,IAAI,MAAM,IAAI,IAAI,EAAE;MAClB,MAAM,GAAG,CAAC,CAAC;KACZ;IACD,EAAE,GAAG,IAAI,CAAC;IACV,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IACf,GAAG,CAAC,CAAC,CAAC,IAAI,MAAM,GAAG,aAAa,CAAC,EAAE,CAAC;IACpC,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;MACd,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;KACZ;IACD,OAAO,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;GAC1C,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,MAAM,EAAE;IAC5C,IAAI,MAAM,IAAI,IAAI,EAAE;MAClB,MAAM,GAAG,CAAC,CAAC;KACZ;IACD,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC;GAC/B,CAAC;;EAEF,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,WAAW;IACvC,IAAI,CAAC,EAAE,GAAG,CAAC;IACX,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACjB,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;GACtD,CAAC;;EAEF,KAAK,GAAG,SAAS,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE;IAClC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;MAChB,MAAM,qBAAqB,GAAG,IAAI,CAAC;KACpC;IACD,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;GACjC,CAAC;;EAEF,OAAO,GAAG,SAAS,CAAC,EAAE;IACpB,OAAO,SAAS,MAAM,EAAE,GAAG,EAAE;MAC3B,IAAI,EAAE,EAAE,EAAE,CAAC;MACX,EAAE,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;MACvB,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC;MAC1B,OAAO,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;KACjC,CAAC;GACH,CAAC;;EAEF,IAAI,GAAG,SAAS,CAAC,EAAE;IACjB,OAAO,SAAS,EAAE,EAAE,EAAE,EAAE;MACtB,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;MACd,GAAG,GAAG,EAAE,CAAC;MACT,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;QAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;OAC1B;MACD,OAAO,GAAG,CAAC;KACZ,CAAC;GACH,CAAC;;EAEF,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACtB,OAAO,CAAC,CAAC;GACV,CAAC;;EAEF,QAAQ,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACxB,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;GACpB,CAAC;;EAEF,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACtB,IAAI,CAAC,GAAG,CAAC,EAAE;MACT,OAAO,CAAC,CAAC;KACV,MAAM;MACL,OAAO,CAAC,CAAC;KACV;GACF,CAAC;;EAEF,OAAO,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACvB,IAAI,CAAC,GAAG,CAAC,EAAE;MACT,OAAO,CAAC,CAAC;KACV,MAAM;MACL,OAAO,CAAC,CAAC;KACV;GACF,CAAC;;EAEF,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACtB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;GAClD,CAAC;;EAEF,OAAO,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACvB,IAAI,CAAC,GAAG,GAAG,EAAE;MACX,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;KACxB,MAAM;MACL,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;KACtD;GACF,CAAC;;EAEF,IAAI,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACpB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;GAC9C,CAAC;;EAEF,KAAK,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACrB,IAAI,CAAC,KAAK,GAAG,EAAE;MACb,OAAO,GAAG,CAAC;KACZ;IACD,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACpC,IAAI,CAAC,GAAG,GAAG,EAAE;MACX,OAAO,GAAG,CAAC;KACZ,MAAM;MACL,OAAO,CAAC,CAAC;KACV;GACF,CAAC;;EAEF,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;EAErC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;EAEzC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;EAErC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEvC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;EAErC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEvC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEnC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEjC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;;EAErB,MAAM,CAAC,OAAO,GAAG,SAAS,IAAI,EAAE;IAC9B,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IACnB,CAAC,GAAG;MACF,GAAG,EAAE,MAAM,CAAC,SAAS;MACrB,GAAG,EAAE,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;MAC1B,GAAG,EAAE,CAAC;MACN,MAAM,EAAE,EAAE;MACV,KAAK,EAAE,CAAC;KACT,CAAC;IACF,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;MAC3C,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;MACd,IAAI,CAAC,GAAG,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;QAChC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC;QACb,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;UACf,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;SACb;QACD,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;UACf,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;SACb;QACD,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;OACd;KACF;IACD,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC,CAAC,MAAM,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;MAC7B,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;KACpC,CAAC;IACF,OAAO,CAAC,CAAC;GACV,CAAC;;EAEF,MAAM,CAAC,KAAK,GAAG,SAAS,MAAM,EAAE,SAAS,EAAE;IACzC,IAAI,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,iBAAiB,EAAE,OAAO,EAAE,AAAQ,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,AAAe,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC;IACvN,KAAK,GAAG,KAAK,CAAC;IACd,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IACxB,OAAO,GAAG,CAAC,CAAC;IAEZ,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjB,IAAI,GAAG,EAAE,CAAC;IACV,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,QAAQ,GAAG,KAAK,CAAC;IACjB,OAAO,GAAG,EAAE,CAAC;IACb,IAAI,GAAG,KAAK,CAAC;IACb,IAAI,GAAG,CAAC,CAAC;IACT,IAAI,GAAG,CAAC,CAAC;IACT,iBAAiB,GAAG,KAAK,CAAC;IAC1B,WAAW,GAAG,EAAE,CAAC;IACjB,SAAS,GAAG,IAAI,CAAC;IACjB,MAAM,GAAG,CAAC,CAAC;IACX,SAAS,GAAG,SAAS,MAAM,EAAE;MAC3B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;MAC5B,IAAI,MAAM,IAAI,IAAI,EAAE;QAClB,MAAM,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;OAC3B;MACD,IAAI,CAAC,MAAM,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,QAAQ,KAAK,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE;QAC5E,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,MAAM,CAAC;OACjF;MACD,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,OAAO,EAAE;QAC5B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACzB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;UACjG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;UAChB,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;YAC1B,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;WACzB;SACF;QACD,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;UACtG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;SACpC;OACF;MACD,UAAU,EAAE,CAAC;MACb,OAAO,OAAO,GAAG,MAAM,CAAC;KACzB,CAAC;IACF,QAAQ,GAAG,SAAS,KAAK,EAAE;MACzB,IAAI,CAAC,EAAE,CAAC,CAAC;MACT,IAAI,QAAQ,IAAI,IAAI,EAAE;QACpB,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QACxB,CAAC,GAAG,CAAC,CAAC;QACN,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;UACpC,CAAC,EAAE,CAAC;SACL;QACD,OAAO,CAAC,GAAG,CAAC,CAAC;OACd;MACD,OAAO,CAAC,CAAC;KACV,CAAC;IACF,IAAI,GAAG,SAAS,CAAC,EAAE;MACjB,OAAO,CAAC,CAAC;KACV,CAAC;IAaF,QAAQ,GAAG,SAAS,GAAG,EAAE,SAAS,EAAE;MAClC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MAC/B,IAAI,SAAS,IAAI,IAAI,EAAE;QACrB,SAAS,GAAG,KAAK,CAAC;OACnB;MACD,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE;QACd,OAAO,MAAM,CAAC;OACf;MACD,IAAI,CAAC,SAAS,EAAE;QACd,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;UACnC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;UAClB,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAC/B,MAAM,IAAI,IAAI,KAAK,IAAI,EAAE;UACxB,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC;SAClC,MAAM;UACL,CAAC,GAAG,CAAC,CAAC;SACP;OACF,MAAM;QACL,CAAC,GAAG,GAAG,CAAC;OACT;MACD,IAAI,CAAC,SAAS,EAAE;QACd,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;OACb;MACD,IAAI,MAAM,KAAK,CAAC,EAAE;QAChB,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;OACpB;MACD,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACxD,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;MAChC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;MAC1B,IAAI,SAAS,IAAI,WAAW,CAAC,CAAC,CAAC,EAAE;QAC/B,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;OACtB,MAAM;QACL,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,OAAO,EAAE;UAC7B,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;YAC/F,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,IAAI,CAAC,EAAE;cACV,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;cACjB,MAAM;aACP;YACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;cACnC,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;cACjB,MAAM;aACP;YACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;cAC5B,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;cAChC,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;cAC/D,MAAM;aACP;WACF;SACF,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,UAAU,EAAE;UACvC,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;SAClB;QACD,IAAI,SAAS,EAAE;UACb,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;SACtB;OACF;MACD,OAAO,GAAG,CAAC;KACZ,CAAC;IACF,UAAU,GAAG,WAAW;MACtB,OAAO,WAAW,GAAG,EAAE,CAAC;KACzB,CAAC;IACF,SAAS,CAAC,MAAM,CAAC,CAAC;IAClB,CAAC,GAAG,SAAS,CAAC,EAAE;MACd,IAAI,CAAC,CAAC;MACN,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;MACxB,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE;QACnB,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;OAClB,MAAM;QACL,OAAO,CAAC,CAAC;OACV;KACF,CAAC;IACF,CAAC,CAAC,OAAO,GAAG,SAAS,OAAO,EAAE;MAC5B,IAAI,CAAC,CAAC;MACN,IAAI,OAAO,IAAI,IAAI,EAAE;QACnB,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,OAAO,EAAE;UAC7B,QAAQ,GAAG,OAAO,CAAC;UACnB,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;SACrD,MAAM;UACL,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;UAC5B,IAAI,OAAO,KAAK,CAAC,EAAE;YACjB,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;WAC3B,MAAM;YACL,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;WAC3C;SACF;QACD,OAAO,CAAC,CAAC;OACV;MACD,OAAO,QAAQ,CAAC;KACjB,CAAC;IACF,CAAC,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE;MAC1B,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;MAC5B,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;QACrB,OAAO,OAAO,CAAC;OAChB;MACD,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;MACjB,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;MACjC,IAAI,GAAG,EAAE,CAAC;MACV,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC;MACnB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE;QACxC,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;UAC7C,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;UACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;SACvC;OACF,MAAM;QACL,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;UACrF,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SACxB;OACF;MACD,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;MACvB,OAAO,CAAC,CAAC;KACV,CAAC;IACF,CAAC,CAAC,IAAI,GAAG,SAAS,EAAE,EAAE;MACpB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;QACrB,OAAO,KAAK,CAAC;OACd;MACD,KAAK,GAAG,EAAE,CAAC;MACX,UAAU,EAAE,CAAC;MACb,OAAO,CAAC,CAAC;KACV,CAAC;IACF,CAAC,CAAC,KAAK,GAAG,SAAS,MAAM,EAAE,IAAI,EAAE;MAC/B,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;MACxB,OAAO,CAAC,CAAC;KACV,CAAC;IACF,CAAC,CAAC,GAAG,GAAG,SAAS,EAAE,EAAE;MACnB,IAAI,GAAG,EAAE,CAAC;MACV,OAAO,CAAC,CAAC;KACV,CAAC;IACF,CAAC,CAAC,MAAM,GAAG,SAAS,GAAG,EAAE;MACvB,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;QACrB,OAAO,OAAO,CAAC;OAChB;MACD,OAAO,GAAG,GAAG,CAAC;MACd,OAAO,CAAC,CAAC;KACV,CAAC;IACF,CAAC,CAAC,gBAAgB,GAAG,SAAS,CAAC,EAAE;MAC/B,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,CAAC,GAAG,IAAI,CAAC;OACV;MACD,iBAAiB,GAAG,CAAC,CAAC;MACtB,UAAU,EAAE,CAAC;MACb,IAAI,iBAAiB,EAAE;QACrB,IAAI,GAAG,SAAS,CAAC,EAAE;UACjB,IAAI,EAAE,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;UAC7D,EAAE,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;UAChC,EAAE,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;UAChC,GAAG,GAAG,EAAE,GAAG,EAAE,CAAC;UACd,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;UACtC,OAAO,GAAG,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;UAC7B,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;UAC5B,EAAE,GAAG,CAAC,CAAC;UACP,EAAE,GAAG,CAAC,CAAC;UACP,QAAQ,GAAG,EAAE,CAAC;UACd,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,IAAI,QAAQ,EAAE,GAAG,CAAC,EAAE;YAChD,CAAC,WAAW;cACV,IAAI,GAAG,EAAE;gBACP,MAAM,IAAI,CAAC,CAAC,CAAC;eACd;cACD,IAAI,MAAM,GAAG,CAAC,EAAE;gBACd,EAAE,GAAG,CAAC,CAAC;gBACP,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC;eACrB,MAAM;gBACL,EAAE,GAAG,CAAC,CAAC;gBACP,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,GAAG,CAAC;eACrB;cACD,QAAQ,GAAG,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;cACtC,OAAO,MAAM,GAAG,QAAQ,GAAG,OAAO,CAAC;aACpC,GAAG,CAAC;WACN;UACD,OAAO,CAAC,CAAC;SACV,CAAC;OACH,MAAM;QACL,IAAI,GAAG,SAAS,CAAC,EAAE;UACjB,OAAO,CAAC,CAAC;SACV,CAAC;OACH;MACD,OAAO,CAAC,CAAC;KACV,CAAC;IACF,CAAC,CAAC,OAAO,GAAG,SAAS,CAAC,EAAE;MACtB,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;UACxB,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACZ;QACD,QAAQ,GAAG,CAAC,CAAC;QACb,OAAO,CAAC,CAAC;OACV,MAAM;QACL,OAAO,QAAQ,CAAC;OACjB;KACF,CAAC;IACF,CAAC,CAAC,MAAM,GAAG,SAAS,SAAS,EAAE,GAAG,EAAE;MAClC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,AAAG,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;MACnD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;QACxB,GAAG,GAAG,KAAK,CAAC;OACb;MACD,MAAM,GAAG,EAAE,CAAC;MACZ,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;QAC1B,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OAC3B,MAAM,IAAI,SAAS,KAAK,CAAC,EAAE;QAC1B,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;OACnB,MAAM,IAAI,SAAS,GAAG,CAAC,EAAE;QACxB,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAChB,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACrB,MAAM,GAAG,CAAC,WAAW;UACnB,OAAO,GAAG,EAAE,CAAC;UACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,GAAG,SAAS,EAAE,CAAC,IAAI,SAAS,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;UAC/G,OAAO,OAAO,CAAC;SAChB,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;UAC7B,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,SAAS,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;SACzC,CAAC,CAAC;OACJ,MAAM;QACL,MAAM,GAAG,EAAE,CAAC;QACZ,OAAO,GAAG,EAAE,CAAC;QACb,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;UACnC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;YAC7F,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;WACrD;SACF,MAAM;UACL,OAAO,GAAG,OAAO,CAAC;SACnB;QACD,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;UAC/B,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SACb,CAAC,CAAC;OACJ;MACD,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE;QACf,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;UAC9B,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;SACjB,CAAC,CAAC;OACJ;MACD,OAAO,MAAM,CAAC;KACf,CAAC;IACF,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC,EAAE;MACpB,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,SAAS,GAAG,CAAC,CAAC;QACd,OAAO,CAAC,CAAC;OACV,MAAM;QACL,OAAO,SAAS,CAAC;OAClB;KACF,CAAC;IACF,CAAC,CAAC,KAAK,GAAG,SAAS,CAAC,EAAE;MACpB,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,MAAM,GAAG,CAAC,CAAC;QACX,OAAO,CAAC,CAAC;OACV,MAAM;QACL,OAAO,MAAM,CAAC;OACf;KACF,CAAC;IACF,OAAO,CAAC,CAAC;GACV,CAAC;;EAEF,IAAI,MAAM,CAAC,MAAM,IAAI,IAAI,EAAE;IACzB,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;GACpB;;EAED,MAAM,CAAC,MAAM,CAAC,IAAI,GAAG,WAAW;IAC9B,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;GACxE,CAAC;;EAEF,MAAM,CAAC,MAAM,CAAC,GAAG,GAAG,WAAW;IAC7B,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;GACrF,CAAC;;EAEF,MAAM,CAAC,OAAO,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE,MAAM,EAAE;IAC3C,IAAI,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC;IAClC,CAAC,GAAG;MACF,GAAG,EAAE,MAAM,CAAC,SAAS;MACrB,GAAG,EAAE,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC;MAC1B,GAAG,EAAE,CAAC;MACN,MAAM,EAAE,EAAE;MACV,KAAK,EAAE,CAAC;KACT,CAAC;IACF,IAAI,MAAM,IAAI,IAAI,EAAE;MAClB,MAAM,GAAG,WAAW;QAClB,OAAO,IAAI,CAAC;OACb,CAAC;KACH;IACD,GAAG,GAAG,SAAS,GAAG,EAAE;MAClB,IAAI,CAAC,GAAG,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;QAChC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC;QACb,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;UACf,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;SACb;QACD,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;UACf,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC;SACb;QACD,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;OACd;KACF,CAAC;IACF,KAAK,GAAG,SAAS,GAAG,EAAE,CAAC,EAAE;MACvB,IAAI,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;QAClB,IAAI,CAAC,GAAG,IAAI,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,KAAK,UAAU,EAAE;UAC7C,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SACtB,MAAM,IAAI,CAAC,GAAG,IAAI,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;UAC5E,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;SACtB,MAAM;UACL,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;SACjB;OACF;KACF,CAAC;IACF,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE;MAC1B,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC3C,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,KAAK,CAAC,GAAG,CAAC,CAAC;OACZ;KACF,MAAM;MACL,KAAK,CAAC,IAAI,IAAI,EAAE;QACd,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACd,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;OACf;KACF;IACD,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1B,CAAC,CAAC,MAAM,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;MAC7B,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;KACpC,CAAC;IACF,OAAO,CAAC,CAAC;GACV,CAAC;;EAEF,MAAM,CAAC,MAAM,GAAG,SAAS,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE;IACxeAAe,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;IACrW,IAAI,IAAI,IAAI,IAAI,EAAE;MAChB,IAAI,GAAG,OAAO,CAAC;KAChB;IACD,IAAI,GAAG,IAAI,IAAI,EAAE;MACf,GAAG,GAAG,CAAC,CAAC;KACT;IACD,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,OAAO,EAAE;MAC1B,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC7B;IACD,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACf,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACf,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACf,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;MACvC,OAAO,CAAC,GAAG,CAAC,CAAC;KACd,CAAC,CAAC;IACH,IAAI,GAAG,KAAK,CAAC,EAAE;MACb,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KACnB;IACD,MAAM,GAAG,EAAE,CAAC;IACZ,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;MAC7B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MACjB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAClB;IACD,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;MAC7B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MACjB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;QACvF,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;OAC5C;MACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAClB,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;MACpC,IAAI,GAAG,IAAI,CAAC,EAAE;QACZ,MAAM,qDAAqD,CAAC;OAC7D;MACD,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;MACjC,OAAO,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;MACjC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MACjB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE;QAC5F,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;OACjE;MACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAClB,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;MACpC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MACjB,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;QACjG,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;QAClC,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QACd,IAAI,EAAE,KAAK,CAAC,EAAE;UACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;SACzB,MAAM;UACL,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;UACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;SAC1D;OACF;MACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAClB,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;;;;;;;MAOpC,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;MAClB,WAAW,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;MAC3B,YAAY,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;MAC9B,MAAM,GAAG,IAAI,CAAC;MACd,QAAQ,GAAG,CAAC,CAAC;MACb,SAAS,GAAG,IAAI,CAAC;MACjB,SAAS,GAAG,EAAE,CAAC;MACf,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MACpB,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;QACjG,SAAS,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;OAC/C;MACD,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MACpB,OAAO,MAAM,EAAE;QACb,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;UACjG,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACrB;QACD,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;UAC/F,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;UAClB,OAAO,GAAG,MAAM,CAAC,SAAS,CAAC;UAC3B,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;YACjG,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;YACjC,IAAI,IAAI,GAAG,OAAO,EAAE;cAClB,OAAO,GAAG,IAAI,CAAC;cACf,IAAI,GAAG,CAAC,CAAC;aACV;WACF;UACD,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC;UACrB,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SACvB;QACD,YAAY,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9B,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;UACjG,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;SACxB;QACD,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;UAC/F,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;UACzB,IAAI,YAAY,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE;YAClC,YAAY,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;WACnC,MAAM;YACL,YAAY,CAAC,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;WACpC;SACF;QACD,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;UACjG,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;SACxC;QACD,MAAM,GAAG,KAAK,CAAC;QACf,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;UACtG,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,EAAE;YACpC,MAAM,GAAG,IAAI,CAAC;YACd,MAAM;WACP;SACF;QACD,SAAS,GAAG,YAAY,CAAC;QACzB,QAAQ,EAAE,CAAC;QACX,IAAI,QAAQ,GAAG,GAAG,EAAE;UAClB,MAAM,GAAG,KAAK,CAAC;SAChB;OACF;MACD,SAAS,GAAG,EAAE,CAAC;MACf,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;QACtG,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;OACnB;MACD,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;QACpG,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;QACzB,SAAS,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;OACpC;MACD,eAAe,GAAG,EAAE,CAAC;MACrB,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,GAAG,EAAE,IAAI,KAAK,EAAE,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;QACtG,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACtC,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;OAC7D;MACD,eAAe,GAAG,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;QACpD,OAAO,CAAC,GAAG,CAAC,CAAC;OACd,CAAC,CAAC;MACH,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;MAChC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,KAAK,GAAG,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE,EAAE,IAAI,KAAK,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;QAC7E,CAAC,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;UACzC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAChB;OACF;KACF;IACD,OAAO,MAAM,CAAC;GACf,CAAC;;EAEF,OAAO,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;;;;;;IAM1B,IAAI,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClB,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IACzB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;MACZ,CAAC,GAAG,CAAC,CAAC;KACP;IACD,CAAC,IAAI,GAAG,CAAC;IACT,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MACb,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;MAChB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;MAC5D,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;KACjB,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MACpB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MACX,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;MAChB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;MAC5D,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;KACjB,MAAM;MACL,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;MACX,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;MAChB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,OAAO,GAAG,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;MAC5D,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;KACjB;IACD,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrB,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrB,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACrB,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;GACnE,CAAC;;EAEF,OAAO,GAAG,WAAW;;;;;;IAMnB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC/B,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACpB,CAAC,IAAI,GAAG,CAAC;IACT,CAAC,IAAI,GAAG,CAAC;IACT,CAAC,IAAI,GAAG,CAAC;IACT,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IAChB,IAAI,CAAC,KAAK,CAAC,EAAE;MACX,CAAC,GAAG,CAAC,CAAC;KACP,MAAM;MACL,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;MAC5B,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACtD,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MACjB,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;OACf;MACD,CAAC,IAAI,KAAK,CAAC;KACZ;IACD,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;GACxB,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,WAAW;IACtB,OAAO,CAAC,SAAS,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;MACjC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;MAChC,IAAI,KAAK,GAAG,IAAI,IAAI,EAAE,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;MACvD,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,CAAC;KACnD,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;GAChE,CAAC;;EAEF,MAAM,CAAC,GAAG,GAAG,OAAO,CAAC;;EAErB,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;IAC/B,OAAO,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;GAC3B,CAAC;;EAEF,eAAe,GAAG,SAAS,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;IAC3C,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IAC3E,IAAI,CAAC,KAAK,KAAK,EAAE;MACf,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MAClB,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;KACnB,MAAM,IAAI,CAAC,KAAK,KAAK,EAAE;MACtB,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MAClB,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;KACnB,MAAM,IAAI,CAAC,KAAK,KAAK,EAAE;MACtB,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MAClB,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;KACnB,MAAM,IAAI,CAAC,KAAK,KAAK,EAAE;MACtB,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MAClB,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;KACnB,MAAM,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE;MACrC,CAAC,GAAG,KAAK,CAAC;MACV,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;MAClB,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;KACnB;IACD,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,GAAG,EAAE;MAC1B,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;MAC/C,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;KAChD;IACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;MAChC,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE;QACpC,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC;OAC1B,MAAM,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,EAAE;QAC3C,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC;OACxB,MAAM;QACL,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;OAClB;MACD,GAAG,GAAG,IAAI,GAAG,CAAC,GAAG,EAAE,CAAC;KACrB,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;MACvB,GAAG,GAAG,IAAI,CAAC;MACX,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;QAC7C,GAAG,GAAG,IAAI,CAAC;OACZ;KACF,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;MACvB,GAAG,GAAG,IAAI,CAAC;MACX,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE;QAC7C,GAAG,GAAG,IAAI,CAAC;OACZ;KACF,MAAM;MACL,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;KAClB;IACD,IAAI,GAAG,IAAI,IAAI,EAAE;MACf,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;KAChC;IACD,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;IAC/B,OAAO,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;GACvC,CAAC;;EAEF,cAAc,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,WAAW;IACjD,IAAI,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC;IACzB,GAAG,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACjD,OAAO,GAAG,EAAE,CAAC;IACb,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;MAC1C,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;MACX,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,eAAe,CAAC,CAAC,CAAC;KACpC;IACD,OAAO,OAAO,CAAC;GAChB,GAAG,CAAC,CAAC;;EAEN,eAAe,GAAG,SAAS,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;IAC3C,IAAI,EAAE,EAAE,EAAE,CAAC;IACX,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAChB,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAChB,OAAO,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;GAC9C,CAAC;;EAEF,cAAc,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC;;EAE9C,eAAe,GAAG,SAAS,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;IAC3C,IAAI,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC;IACpB,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAClB,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAClB,OAAO,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;GACpI,CAAC;;EAEF,cAAc,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC,CAAC;;CAE/C,EAAE,IAAI,CAACC,cAAI,CAAC,CAAC;;;AChsFd;;;AAGA;IAkCI;QAjCA,KAAC,MAAM,CAAC,WAAW,CAAC,GAAU,KAAK,CAAA;QAkC/B,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAA;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;KACjB;IAlCD,QAAQ;QACJ,OAAO,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,GAAG,EAAE,KAAK,EAAC,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAA;KACrG;IAED,OAAO,CAAC,UAAwD,EAAE,OAAa;QAC3E,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;YACrC,KAAK,MAAM,EAAC,GAAG,EAAE,KAAK,EAAC,IAAI,MAAM,EAAE;gBAC/B,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAA;aAC7C;SACJ;KACJ;IAED,CAAE,IAAI;QACF,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;YACrC,KAAK,MAAM,EAAC,GAAG,EAAC,IAAI,MAAM,EAAE;gBACxB,MAAM,GAAG,CAAA;aACZ;SACJ;KACJ;IAED,CAAE,MAAM;QACJ,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;YACrC,KAAK,MAAM,EAAC,KAAK,EAAC,IAAI,MAAM,EAAE;gBAC1B,MAAM,KAAK,CAAA;aACd;SACJ;KACJ;IAUD,CAAC,MAAM,CAAC,QAAQ,CAAC;QACb,OAAO,IAAI,CAAC,OAAO,EAAE,CAAA;KACxB;IAED,GAAG,CAAC,GAAM,EAAE,KAAQ;QAChB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;QACrB,OAAO,IAAI,CAAA;KACd;;;;;IAMD,IAAI,CAAC,GAAM,EAAE,GAAM;QACf,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;;QAEjE,IAAI,MAAM,EAAE;YACR,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;YAChE,IAAI,CAAC,CAAC,IAAI,SAAS,EAAE;gBACjB,MAAM,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAC,CAAC,CAAA;aACtC;iBAAM;gBACH,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,GAAG,CAAA;gBAC7B,OAAO,KAAK,CAAA;aACf;SACJ;aAAM;YACH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC,CAAA;SACpD;QACD,IAAI,CAAC,KAAK,EAAE,CAAA;QACZ,OAAO,IAAI,CAAA;KACd;IAED,GAAG,CAAC,GAAM;QACN,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;;QAEjE,OAAO,SAAS,KAAK,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;KAC3E;IAED,GAAG,CAAC,GAAM;QACN,MACQ,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EACzB,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAChC,IAAI,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;QAClE,OAAO,IAAI,IAAI,IAAI,CAAC,KAAK,CAAA;KAC5B;IAED,OAAO,CAAC,GAAM;QACV,KAAK,MAAM,QAAQ,IAAI,GAAG,CAAC,SAAU,EAAE,EAAE;YACrC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YACtC,MAAM,QAAQ,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC,CAAA;YAC7D,IAAI,QAAQ;gBAAE,OAAO,QAAQ,CAAA;SAChC;KACJ;IAED,OAAO,CAAC,GAAM,EAAE,GAAM;QAClB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;KAClD;IAED,QAAQ,CAAC,GAAM;QACX,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACjE,IAAI,MAAM,EAAE;YACR,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;YACtD,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE;gBACb,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;oBACpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;iBAC7B;qBAAM;oBACH,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;iBAC1B;gBACD,IAAI,CAAC,KAAK,EAAE,CAAA;gBACZ,OAAO,IAAI,CAAA;aACd;SACJ;QACD,OAAO,KAAK,CAAA;KACf;IAED,UAAU,CAAC,GAAM;QACb,KAAK,MAAM,QAAQ,IAAI,GAAG,CAAC,SAAU,EAAE,EAAE;YACrC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YACtC,IAAI,MAAM,EAAE;gBACR,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC,CAAA;gBACrD,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE;oBACb,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;oBAC7B,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;wBACpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;qBAC7B;yBAAM;wBACH,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;qBAC1B;oBACD,IAAI,CAAC,KAAK,EAAE,CAAA;oBACZ,OAAO,OAAO,CAAA;iBACjB;aACJ;SACJ;KACJ;IAED,CAAE,QAAQ;QACN,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;YACrC,OAAO,MAAM,CAAA;SAChB;KACJ;IAED,CAAE,OAAO;QACL,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;YACrC,KAAK,MAAM,EAAC,GAAG,EAAE,KAAK,EAAC,IAAI,MAAM,EAAE;gBAC/B,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;aACrB;SACJ;KACJ;IAED,KAAK;QACD,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;KACjB;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAA;KACpB;CACJ;;;IClJA,YAAY,QAAsB;QAVlC,KAAC,MAAM,CAAC,WAAW,CAAC,GAAU,KAAK,CAAA;QAiJnC,KAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAA;QAC5C,SAAI,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAA;QAvI9B,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAA;QACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;QACd,IAAI,QAAQ,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;SACrB;KACD;IAdD,OAAO,CAAC,UAAmD,EAAE,OAAa;QACzE,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YACnC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;SAC5C;KACD;IAYD,GAAG,CAAC,GAAM;QACT,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QACd,OAAO,IAAI,CAAA;KACX;IAED,IAAI,CAAC,GAAM;;;QAGV,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACjE,IAAI,MAAM,EAAE;YACX,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;gBACpC,OAAO,KAAK,CAAA;aACZ;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SAChB;aAAM;YACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;SAC9B;QACD,IAAI,CAAC,KAAK,EAAE,CAAA;QACZ,OAAO,IAAI,CAAA;KACX;IAED,MAAM,CAAC,QAAqB;QAC3B,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;YAC3B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;SACb;QACD,OAAO,IAAI,CAAA;KACX;IAED,YAAY,CAAC,GAAM;QAClB,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACjE,IAAI,MAAM,EAAE;YACX,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;YAChD,IAAI,QAAQ,EAAE;gBACb,OAAO,QAAQ,CAAA;aACf;YACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;SAChB;aAAM;YACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;SAC9B;QACD,IAAI,CAAC,KAAK,EAAE,CAAA;QACZ,OAAO,GAAG,CAAA;KACV;IAED,GAAG,CAAC,GAAM;QACT,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACjE,OAAO,SAAS,KAAK,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;KAC9D;IAED,OAAO,CAAC,GAAM;QACb,KAAK,MAAM,QAAQ,IAAI,GAAG,CAAC,SAAU,EAAE,EAAE;YACxC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YACtC,MAAM,QAAQ,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC,CAAA;YACzD,IAAI,QAAQ;gBAAE,OAAO,QAAQ,CAAA;SAC7B;KACD;IAED,gBAAgB,CAAC,GAAM;;QAEtB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAA;KAClD;IAED,OAAO,CAAC,GAAM;QACb,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;KAC1C;IAED,QAAQ,CAAC,GAAM;QACd,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAAE,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;QACjE,IAAI,MAAM,EAAE;YACX,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;YAClD,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE;gBAChB,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;oBACvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;iBAC1B;qBAAM;oBACN,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;iBACvB;gBACD,IAAI,CAAC,KAAK,EAAE,CAAA;gBACZ,OAAO,IAAI,CAAA;aACX;SACD;QACD,OAAO,KAAK,CAAA;KACZ;IAED,UAAU,CAAC,GAAM;QAChB,KAAK,MAAM,QAAQ,IAAI,GAAG,CAAC,SAAU,EAAE,EAAE;YACxC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YACtC,IAAI,MAAM,EAAE;gBACX,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC,CAAA;gBACjD,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE;oBAChB,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;oBAC7B,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;wBACvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;qBAC1B;yBAAM;wBACN,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;qBACvB;oBACD,IAAI,CAAC,KAAK,EAAE,CAAA;oBACZ,OAAO,OAAO,CAAA;iBACd;aACD;SACD;KACD;IAED,CAAC,MAAM;QACN,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;YACxC,OAAO,MAAM,CAAA;SACb;KACD;IACD,CAAC,OAAO;QACP,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;YACxC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;gBAC3B,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;aACpB;SACD;KACD;IAED,KAAK;QACJ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;KACd;IAED,IAAI,IAAI;QACP,OAAO,IAAI,CAAC,KAAK,CAAA;KACjB;IAED,QAAQ;QACP,OAAO,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAA;KACvD;CAID;AAED;IAEC,YAAmB,IAAO,EAAS,KAAQ;QAAxB,SAAI,GAAJ,IAAI,CAAG;QAAS,UAAK,GAAL,KAAK,CAAG;KAAI;IAE/C,QAAQ;QACP,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA;KACxD;IAED,MAAM,CAAC,KAAU;QAChB,OAAO,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;KACxI;IAED,QAAQ;QACP,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAA;KACtE;IAED,QAAQ;QACP,OAAO,WAAW,GAAI,IAAI,CAAC,IAAY,CAAC,QAAQ,EAAE,GAAG,IAAI,GAAI,IAAI,CAAC,KAAa,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAA;KAChG;CACD;;;;ICtKA,YAAqB,CAAe;QAAf,MAAC,GAAD,CAAC,CAAc;QACnC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,CAAA;KAC3B;IAED,OAAO,YAAY,CAAC,IAAS,EAAE,CAAuB;QACrD,aAAa,CAAC,IAAI,CAAC,CAAA;QACnB,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAA;QAChC,IAAI,CAAC,GAAG,IAAI,CAAA;QACZ,OAAO,CAAC,EAAE,EAAE;YACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SACX;QACD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,OAAO,MAAM,CAAC,IAAS;QACtB,OAAO,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;KACtD;IAID,OAAO,IAAI,CAAC,GAAG,IAAW;QACzB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,QAAQ,IAAI,OAAO,CAAC,CAAC,EAC9E,0EAA0E,CAAC,CAAA;QAC5E,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;KACtF;IAED,OAAO,IAAI,CAAC,IAAS;QACpB,aAAa,CAAC,IAAI,CAAC,CAAA;QACnB,IAAI,CAAC,GAAG,CAAC,CAAA;QACT,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAA;QAChC,OAAO,CAAC,EAAE,EAAE;YACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;SACR;QACD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,OAAO,IAAI,CAAC,IAAS,EAAE,GAAQ;QAC9B,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QACxB,IAAI,CAAC,GAAG,CAAC,CAAA;QACT,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAA;QAChC,OAAO,CAAC,EAAE,EAAE;YACX,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,GAAG,CAAC,CAAA;SAClB;QACD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,CAAC,MAAM,CAAC,QAAQ,CAAC;QAChB,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAA;KAChC;IAED,GAAG;QACF,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;KACpB;IAED,CAAC,CAAC,KAAU;QACX,IAAI,CAAC,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE;YACxC,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAA;SAC5C;QACD,OAAO,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;KACpB;IAED,IAAI,CAAC,MAAc;QAClB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;QAC9B,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;QACpC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAA;QAChB,OAAO,CAAC,EAAE,EAAE;YACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SAClB;QACD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,KAAK,CAAC,MAAc;QACnB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;QAC9B,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;QACpC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAA;QAChB,OAAO,CAAC,EAAE,EAAE;YACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SAClB;QACD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,KAAK,CAAC,MAAc;QACnB,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAA;QAChB,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;QACpC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAA;QAChB,OAAO,CAAC,EAAE,EAAE;YACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAA;SACpB;QACD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,GAAG,CAAC,GAAW;QACd,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAA;QAChB,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;QACpC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAA;QAChB,OAAO,CAAC,EAAE,EAAE;YACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;SACjB;QACD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,GAAG,CAAC,MAAc;QACjB,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,EAAE,sCAAsC,CAAC,CAAA;QACtE,IAAI,MAAM,GAAG,CAAC,CAAA;QACd,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;QAC9B,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAA;QAChB,OAAO,CAAC,EAAE,EAAE;YACX,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SACrB;QACD,OAAO,MAAM,CAAA;KACb;IAED,KAAK,CAAC,MAAc;QACnB,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAC1B,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,CAAA;QAC7B,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACxD,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACxD,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAExD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,KAAK,CAAC,MAAc;QACnB,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAC1B,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;QAC9B,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;QACpC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAA;QAChB,OAAO,CAAC,EAAE,EAAE;YACX,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SAClB;QACD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,MAAM,CAAC,GAAQ;QACd,IAAI,GAAG,KAAK,IAAI;YAAE,OAAO,IAAI,CAAA;QAC7B,IAAI,GAAG,CAAC,WAAW,KAAK,MAAM;YAAE,OAAO,KAAK,CAAA;QAC5C,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM;YAAE,OAAO,KAAK,CAAA;QAC/C,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;QACrB,OAAO,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAA;SAC1C;QACD,OAAO,IAAI,CAAA;KACX;IAED,GAAG,CAAC,CAAsC;QACzC,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KAChC;IAED,QAAQ,CAAC,aAAkC;QAC1C,aAAa,GAAG,aAAa,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;QACvD,OAAO,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAA;KAC7D;;;;;;;;;;;;;;;IAgBD,OAAO,CAAC,MAAc;QACrB,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAC1B,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,eAAe,CAAC,CAAA;QACvC,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,iBAAiB,CAAC,CAAA;QAC3C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,CAAA;KACpE;;;;;;;;IASD,YAAY,CAAC,MAAc;QAC1B,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAC1B,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,eAAe,CAAC,CAAA;QACvC,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,iBAAiB,CAAC,CAAA;;;QAG3C,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;KAC/F;IAED,iBAAiB,CAAC,MAAc;QAC/B,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAC1B,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,eAAe,CAAC,CAAA;QACvC,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,iBAAiB,CAAC,CAAA;QAC3C,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;KAC5B;;;;;IAMD,MAAM;QACL,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;KACzB;;;IAKD,MAAM;QACL,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;;KAE1C;IAED,aAAa;QACZ,IAAI,MAAM,GAAG,CAAC,CAAA;QACd,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAA;QAChB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAA;QAChB,OAAO,CAAC,EAAE,EAAE;YACX,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SACrB;QACD,OAAO,MAAM,CAAA;KACb;;IAGD,UAAU;QACT,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,CAAA;QAC5B,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAA;SAC/C;QACD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;KAC9B;IAED,WAAW;QACV,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;KAC3C;IAED,WAAW;QACV,OAAO,IAAI,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;KAC3C;;;;;;;;;;IAWD,WAAW,CAAC,CAAS;QACpB,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;;QAErB,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KACtC;IAED,UAAU,CAAC,CAAS;QACnB,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;;QAErB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KAClD;;;;;;IAOD,SAAS,CAAC,MAAc;QACvB,aAAa,CAAC,MAAM,CAAC,CAAA;QACrB,OAAO,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;KAChC;IAED,EAAE;;QAED,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KAC9C;CACD;;;IC7PA,YAAY,KAAU,EAAE,MAAW,EAAE,CAAe;QACnD,MAAM,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,CAAC,MAAM,EAAE,4BAA4B,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAA;QACzF,IAAI,CAAC,CAAC,GAAG,CAAC,CAAA;QACV,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;KACpB;IAED,OAAO,MAAM,CAAC,KAAU,EAAE,MAAW;QACpC,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;QAC5B,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;KAClE;IAED,OAAO,YAAY,CAAC,KAAU,EAAE,MAAW,EAAE,CAA+C;QAC3F,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,CAAA;QAC5B,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;QAC1C,IAAI,OAAO,GAAG,MAAM,GAAG,KAAK,CAAA;QAC5B,OAAO,OAAO,EAAE,EAAE;YACjB,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,EAAE,OAAO,GAAG,KAAK,EAAE,OAAO,CAAC,CAAA;SACrE;QACD,OAAO,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAA;KACnC;IAED,OAAO,SAAS,CAAC,GAAQ;QACxB,aAAa,CAAC,GAAG,CAAC,CAAA;QAClB,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA;;QAErC,IAAI,OAAO,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,CAAA;QAC7B,OAAO,OAAO,EAAE;YACf,OAAO,KAAK,GAAG,GAAG,CAAC,CAAC,CAAA;YACpB,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;SACd;QACD,OAAO,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;KAC9B;IAED,OAAO,WAAW,CAAC,GAAQ,EAAE,CAAM,EAAE,CAAM;QAC1C,aAAa,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACxB,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,CAAA;;QAErC,IAAI,OAAO,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,CAAA;QAC7B,OAAO,OAAO,EAAE;YACf,OAAO,KAAK,GAAG,GAAG,CAAC,CAAC,CAAA;YACpB,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;SACd;QACD,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;QAClB,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;QAClB,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;QAClB,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;QAClB,OAAO,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;KAC9B;IAED,OAAO,aAAa,CAAC,GAAG,IAAkB;QACzC,OAAO,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAA;KAClC;IAED,OAAO,cAAc,CAAC,MAAoB;QACzC,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAA;SACvC;QACD,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;QAC5B,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;QAC9B,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;QAC1C,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAA;QACpC,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,MAAM,EAAE,QAAQ,EAAE,EAAE;YACrD,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,IAAI,KAAK,EAAE;gBACrC,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAA;aACzD;YACD,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,GAAG,KAAK,EAAE,KAAK,CAAC,CAAA;SAC1D;QACD,OAAO,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAA;KACnC;IAED,OAAO,cAAc,CAAC,UAAoB;QACzC,OAAO,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KACvD;IAED,OAAO,cAAc,CAAC,KAAU,EAAE,MAAW;QAC5C,OAAO,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAA;KAClE;IAED,OAAO,aAAa,CAAC,SAAuB;QAC3C,IAAI,CAAC,IAAI,SAAS,CAAC,MAAM,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAA;SACvC;QACD,MAAM,KAAK,GAAG,SAAS,CAAC,MAAM,CAAA;QAC9B,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;QAClC,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;QAC1C,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;QACtD,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,KAAK,EAAE,QAAQ,EAAE,EAAE;YACpD,IAAI,SAAS,CAAC,QAAQ,CAAC,CAAC,MAAM,IAAI,MAAM,EAAE;gBACzC,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAA;aACzD;YACD,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,CAAA;SACpE;QACD,OAAO,IAAI,MAAM,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAA;KACnC;;;;;;;;;;IAWD,OAAO,MAAM,CAAC,CAAgC,EAAE,EAAc,EAAE,MAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,UAAkB,IAAI;QAC9G,MAAM,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAA;QAC3D,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YACxD,EAAE,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAA;YACvB,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YAChB,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;gBACzD,MAAM,KAAK,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAA;gBACtD,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAA;aACvC;YACD,EAAE,CAAC,QAAQ,CAAC,IAAI,OAAO,CAAA;SACvB;QACD,OAAO,MAAM,CAAA;KACb;IAED,CAAC,CAAC,QAAgB,EAAE,QAAgB;QACnC,aAAa,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;QACjC,IAAI,SAAS,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;YACrE,MAAM,IAAI,KAAK,CAAC,QAAQ,GAAG,QAAQ,GAAG,IAAI,GAAG,QAAQ,GAAG,qBAAqB,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAA;SACvH;QACD,OAAO,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAA;KAC/C;IAED,KAAK,CAAC,QAAgB,EAAE,QAAgB,EAAE,GAAW;QACpD,aAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAA;QACtC,MAAM,CAAC,CAAC,IAAI,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,yBAAyB,GAAG,QAAQ,CAAC,CAAA;QACrF,MAAM,CAAC,CAAC,IAAI,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,yBAAyB,GAAG,QAAQ,CAAC,CAAA;QACpF,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAA;KAC9C;IAED,IAAI,CAAC,CAAO;QACX,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,CAAA;QAC7B,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,CAAA;QAC/B,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QACpB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;QACrB,OAAO,CAAC,EAAE;YAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACvC,OAAO,CAAC,CAAA;KACR;IAED,KAAK,CAAC,CAAS;QACd,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC,CAAA;QAC7B,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,CAAA;QAC/B,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QACpB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;QACrB,OAAO,CAAC,EAAE;YAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACvC,OAAO,CAAC,CAAA;KACR;IAED,SAAS,CAAC,MAAc;QACvB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QACpB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;QACrB,OAAO,CAAC,EAAE;YAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAA;QACvC,OAAO,CAAC,CAAA;KACR;IAED,SAAS,CAAC,MAAc;QACvB,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QACpB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;QACrB,OAAO,CAAC,EAAE;YAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAA;QACvC,OAAO,CAAC,CAAA;KACR;IAED,GAAG;QACF,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAS,CAAA;KAC9F;IAED,QAAQ,CAAC,CAA0B,EAAE,QAAgC,EAAE,QAAgC;QACtG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;QAC9B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,EAAE,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACjD,MAAM,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,CAAA;QAClD,MAAM,CAAC,CAAC,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,CAAA;QACnD,MAAM,OAAO,GAAa,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QACnD,MAAM,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,MAAM,EACzC,CAAC,QAAQ,KAAK,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;QACjF,IAAI,QAAQ,EAAE;YACb,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAA;SAClC;QACD,IAAI,QAAQ,EAAE;YACb,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,QAAQ,KAAK,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;SAC3F;QACD,MAAM,SAAS,GAAG,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;QAC1G,OAAO,IAAI,CAAC,GAAG,CACd,CAAC,GAAG,EAAE,QAAQ,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,QAAQ;;YAEtC,MAAM,MAAM,GAAG,QAAQ,IAAI,CAAC,IAAI,QAAQ,IAAI,QAAQ,IAAI,CAAC,IAAI,QAAQ;kBAClE,MAAM,CAAC,SAAS,CAAC,MAAM;kBACvB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAA;YAC5B,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAA;SAC1C,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CACb,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;KAC7B;IAED,GAAG,CAAC,QAAa;QAChB,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACtC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;QAC1D,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,GAAG,CAAC,QAAa;QAChB,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACvC,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QACjE,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,GAAG;QACF,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAA;KACjD;IAED,SAAS;QACR,OAAO,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAA;KACrC;IAED,MAAM,CAAC,GAAQ;QACd,IAAI,GAAG,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW;YAAE,OAAO,KAAK,CAAA;QACrD,IAAI,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,MAAM;YAAE,OAAO,KAAK,CAAA;QACtE,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;QAC3B,OAAO,OAAO,EAAE,EAAE;YACjB,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC;gBAAE,OAAO,KAAK,CAAA;SACnD;QACD,OAAO,IAAI,CAAA;KACX;IAED,YAAY,CAAC,MAAc,EAAE,SAAkB;QAC9C,SAAS,GAAG,SAAS,IAAI,aAAa,CAAA;QACtC,IAAI,EAAE,MAAM,YAAY,MAAM,CAAC;YAAE,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAA;QAChE,IAAI,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM;YAAE,OAAO,KAAK,CAAA;QAC5E,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;QAC3B,OAAO,OAAO,EAAE,EAAE;YACjB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,SAAS;gBAAE,OAAO,KAAK,CAAA;SAC5E;QACD,OAAO,IAAI,CAAA;KACX;IAED,QAAQ;QACP,IAAI,MAAM,GAAG,CAAC,CAAA;QACd,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;QAC3B,OAAO,OAAO,EAAE,EAAE;YACjB,MAAM,GAAG,MAAM,GAAG,EAAE,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAA;SACrD;QACD,OAAO,MAAM,CAAA;KACb;;IAGD,MAAM;QACL,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;QAC3B,OAAO,OAAO,EAAE,EAAE;YACjB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE;gBAC1B,OAAO,KAAK,CAAA;aACZ;SACD;QACD,OAAO,IAAI,CAAA;KACX;IAED,YAAY;QACX,OAAO,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;KAClG;;;;IAKD,eAAe;QACd,OAAO,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAA;QACrD,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAA;QACtB,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAA;QACjD,MAAM,UAAU,GAAG,iBAAiB,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK,IAAI,YAAY,CAAC,GAAG,CAAC,CAAC,CAAA;QACzE,MAAM,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAA;QAClE,IAAI,eAAe,GAAG,CAAC,CAAA;QACvB,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,GAAG,EAAE,QAAQ,EAAE,EAAE;;YAElD,IAAI,WAAW,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,CAAC,EAAE,mBAAmB,GAAW,CAAC,CAAA;YACxE,KAAK,IAAI,QAAQ,GAAG,eAAe,EAAE,QAAQ,GAAG,GAAG,EAAE,QAAQ,EAAE,EAAE;gBAChE,MAAM,EAAE,GAAW,UAAU,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAA;gBACjD,mBAAmB,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAA;gBACjC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE;oBAC/B,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;oBAC1B,aAAa,GAAG,QAAQ,CAAA;iBACxB;aACD;;YAED,IAAI,CAAC,IAAI,WAAW,EAAE;;gBAErB,SAAQ;aACR;YACD,MAAM,CAAC,CAAC,CAAC,KAAK,aAAa,CAAC,CAAA;;YAE5B,SAAS,CAAC,UAAU,EAAE,eAAe,EAAE,aAAa,CAAC,CAAA;YACrD,SAAS,CAAC,UAAU,EAAE,eAAe,EAAE,aAAa,CAAC,CAAA;YACrD,SAAS,CAAC,UAAU,EAAE,eAAe,EAAE,aAAa,CAAC,CAAA;YACrD,UAAU,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;YAElC,IAAI,CAAC,GAAG,mBAAmB,EAAE;;gBAE5B,KAAK,IAAI,QAAQ,GAAG,eAAe,GAAG,CAAC,EAAE,QAAQ,GAAG,GAAG,EAAE,QAAQ,EAAE,EAAE;oBACpE,MAAM,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAA;oBAChF,UAAU,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;;oBAElC,KAAK,IAAI,SAAS,GAAG,QAAQ,EAAE,SAAS,GAAG,GAAG,EAAE,SAAS,EAAE,EAAE;wBAC5D,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,CAAA;qBAC7E;iBACD;aACD;YACD,eAAe,EAAE,CAAA;SACjB;QACD,OAAO;YACN,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC;YACpC,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC;YACpC,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC;SACpC,CAAA;KACD;IAED,KAAK;QACJ,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAA;QACjD,MAAM,UAAU,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAA;QAC9E,MAAM,UAAU,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,YAAY,CAAC,CAAA;QACrE,IAAI,eAAe,GAAG,CAAC,CAAA;QACvB,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,KAAK,EAAE,QAAQ,EAAE,EAAE;;YAEpD,IAAI,WAAW,GAAG,CAAC,EAAE,aAAa,GAAG,CAAC,CAAC,EAAE,mBAAmB,GAAG,CAAC,CAAA;YAChE,KAAK,IAAI,QAAQ,GAAG,eAAe,EAAE,QAAQ,GAAG,MAAM,EAAE,QAAQ,EAAE,EAAE;gBACnE,MAAM,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAA;gBACzC,mBAAmB,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAA;gBACjC,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE;oBAC/B,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;oBAC1B,aAAa,GAAG,QAAQ,CAAA;iBACxB;aACD;;YAED,IAAI,CAAC,IAAI,WAAW,EAAE;;gBAErB,SAAQ;aACR;YACD,MAAM,CAAC,CAAC,CAAC,KAAK,aAAa,CAAC,CAAA;;YAE5B,SAAS,CAAC,UAAU,EAAE,eAAe,EAAE,aAAa,CAAC,CAAA;YACrD,SAAS,CAAC,UAAU,EAAE,eAAe,EAAE,aAAa,CAAC,CAAA;YACrD,SAAS,CAAC,UAAU,EAAE,eAAe,EAAE,aAAa,CAAC,CAAA;YACrD,UAAU,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;YAEzC,IAAI,CAAC,GAAG,mBAAmB,EAAE;;gBAE5B,KAAK,IAAI,QAAQ,GAAG,eAAe,GAAG,CAAC,EAAE,QAAQ,GAAG,MAAM,EAAE,QAAQ,EAAE,EAAE;oBACvE,MAAM,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC,QAAQ,CAAC,CAAA;oBAChF,UAAU,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;;oBAElC,KAAK,IAAI,SAAS,GAAG,QAAQ,EAAE,SAAS,GAAG,KAAK,EAAE,SAAS,EAAE,EAAE;wBAC9D,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,CAAA;qBAC7E;iBACD;aACD;YACD,eAAe,EAAE,CAAA;SACjB;QACD,OAAO;YACN,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC;YACpC,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC;YACpC,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC;SACpC,CAAA;KACD;IAED,6BAA6B;QAW5B,qBAAqB,GAAQ,EAAE,CAAM,EAAE,CAAM,EAAE,CAAS,EAAE,CAAS;YAClE,MAAM,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAA;YAC/B,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAChB,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAChB,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAChB,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YACjB,OAAO,CAAC,CAAA;SACR;QAED,IAAI,WAAW,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QAC/C,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;;YAEzD,KAAK,IAAI,QAAQ,GAAG,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;;gBAErE,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;gBACrC,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;gBACrC,IAAI,EAAE,IAAI,CAAC,EAAE;oBACZ,SAAQ;iBACR;gBACD,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAA;gBACtC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;gBAChB,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;;gBAGhB,KAAK,IAAI,IAAI,GAAG,QAAQ,EAAE,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE;oBACpD,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;oBAClE,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAA;oBAClE,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;oBAC9B,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC,CAAA;iBAC9B;;;gBAGD,WAAW,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAA;aACnF;SACD;;;QAGD,OAAO,EAAE,CAAC,EAAE,WAAW,CAAC,UAAU,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAA;KAC/C;IAED,aAAa;QACZ,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO,KAAK,CAAA;QAClC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAAE,OAAO,KAAK,CAAA;QAEtE,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;QACpC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;YAAE,OAAO,KAAK,CAAA;QAErF,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;QACpC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;YAAE,OAAO,KAAK,CAAA;QAErF,OAAO,IAAI,CAAA;KACX;IAED,UAAU,CAAC,SAAkB;QAC5B,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAA;QACrB,OAAO,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAAE,OAAO,KAAK,CAAA;SAC/D;QACD,OAAO,IAAI,CAAA;KACX;IAED,UAAU,CAAC,SAAkB;QAC5B,OAAO,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;KAChF;IAED,iBAAiB,CAAC,SAAkB;QACnC,SAAS,GAAG,QAAQ,IAAI,OAAO,SAAS,GAAG,SAAS,GAAG,aAAa,CAAA;QACpE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO,KAAK,CAAA;QAClC,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YAC1D,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,QAAQ,EAAE,QAAQ,EAAE,EAAE;gBACvD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,EAAE,SAAS,CAAC,EAAE;oBAC9D,OAAO,KAAK,CAAA;iBACZ;aACD;SACD;QACD,OAAO,IAAI,CAAA;KACX;;;;;IAMD,iBAAiB,CAAC,CAAS;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAA;;;;QAIlC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;QACnD,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAA;QACjC,OAAO,CAAC,CAAA;KACR;IAED,oBAAoB,CAAC,SAAkB;QACtC,SAAS,GAAG,QAAQ,IAAI,OAAO,SAAS,GAAG,SAAS,GAAG,aAAa,CAAA;QACpE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO,KAAK,CAAA;QAClC,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE;YAC9D,KAAK,IAAI,QAAQ,GAAG,QAAQ,EAAE,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;gBAChE,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAA;gBACnD,IAAI,QAAQ,IAAI,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,SAAS,CAAC,EAAE;oBACvE,OAAO,KAAK,CAAA;iBACZ;aACD;SACD;QACD,OAAO,IAAI,CAAA;KACX;IAED,iBAAiB;QAChB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAAE,OAAO,KAAK,CAAA;QAClC,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,QAAQ,EAAE,EAAE;YAC9D,KAAK,IAAI,QAAQ,GAAG,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;gBACpE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,EAAE;oBACnD,OAAO,KAAK,CAAA;iBACZ;aACD;SACD;QACD,OAAO,IAAI,CAAA;KACX;IAED,cAAc,CAAC,CAAS;QACvB,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,wBAAwB,CAAC,CAAA;QACxD,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE,4BAA4B,GAAG,IAAI,CAAC,GAAG,CAAC,CAAA;QACzE,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACtC,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAA;QAC1B,OAAO,QAAQ,EAAE,EAAE;YAClB,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAA;YACxB,KAAK,IAAI,QAAQ,GAAG,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;gBACpE,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;aAChD;YACD,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;SAC/C;QACD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,oBAAoB,CAAC,MAAc;QAClC,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QAC1C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAA;QACpB,OAAO,CAAC,EAAE,EAAE;YACX,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SAClD;QACD,OAAO,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;KACxC;IAED,mBAAmB,CAAC,MAAc;QACjC,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;QAC1C,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAA;QACpB,OAAO,CAAC,EAAE,EAAE;YACX,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SACjD;QACD,OAAO,MAAM,CAAC,cAAc,CAAC,UAAU,CAAC,CAAA;KACxC;IAED,aAAa,CAAC,CAAS;QACtB,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,MAAM,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,wBAAwB,CAAC,CAAA;QACxD,OAAO,CAAC,MAAM,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;QACxD,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACtC,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE,EAAE;YAC1D,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAA;YACxB,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,QAAQ,EAAE,QAAQ,EAAE,EAAE;gBACvD,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;aAChD;YACD,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;SAC/C;QACD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;;;;;;IAOD,IAAI;QACH,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;;QAExB,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAA;QAC1B,OAAO,QAAQ,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,EAAE;YAC9C,OAAO,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA;SAC3E;QACD,OAAO,QAAQ,GAAG,CAAC,CAAA;KACnB;IAED,eAAe;QACd,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE,CAAA;KACjC;IAED,eAAe;QACd,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,EAAE,CAAA;KAChC;IAED,WAAW,CAAuB,gBAAwC;QACzE,gBAAgB,GAAG,gBAAgB,IAAI,YAAmB,CAAA;QAC1D,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAA;QAC1B,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACrC,OAAO,QAAQ,EAAE,EAAE;YAClB,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAA;SAC5D;QACD,OAAO,MAAM,CAAA;KACb;IAED,WAAW,CAAuB,gBAAwC;QACzE,gBAAgB,GAAG,gBAAgB,IAAI,YAAmB,CAAA;QAC1D,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAA;QACzB,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACpC,OAAO,QAAQ,EAAE,EAAE;YAClB,MAAM,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAA;SAC5D;QACD,OAAO,MAAM,CAAA;KACb;IAED,QAAQ,CAAuB,QAAa,EAAE,gBAAwC;QACrF,gBAAgB,GAAG,gBAAgB,IAAI,YAAmB,CAAA;QAC1D,MAAM,MAAM,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAC/C,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;QAC/D,OAAO,MAAM,CAAA;KACb;IAED,QAAQ,CAAuB,QAAa,EAAE,gBAAwC;QACrF,gBAAgB,GAAG,gBAAgB,IAAI,YAAmB,CAAA;QAC1D,MAAM,MAAM,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAC/C,aAAa,CAAC,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QACvE,OAAO,MAAM,CAAA;KACb;IAED,SAAS,CAAC,aAAkB,EAAE,QAAa,EAAE,aAAkB,EAAE,SAAc;QAC9E,MAAM,CAAC,aAAa,GAAG,QAAQ,GAAG,IAAI,CAAC,KAAK,IAAI,aAAa,GAAG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAA;QACxF,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACvC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE,aAAa,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAA;QACvF,OAAO,IAAI,MAAM,CAAC,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC,CAAA;KACzC;IAED,GAAG,CAAC,EAAgE;QACnE,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;KAC1D;IAED,SAAS,CAAC,MAAc;QACvB,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAC1B,OAAO,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAA;KACjE;IAED,QAAQ;QACP,MAAM,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAA;QAClC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QAC1C,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;QACd,MAAM,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAA;QAC7C,OAAO,OAAO,CAAA;KACd;IAED,SAAS;QACR,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAA;QAClD,MAAM,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;QAEpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAChC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAEhC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAChC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAEjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAChC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACjC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAEhC,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACnD,IAAI,CAAC,GAAG,CAAC,CAAA;QACT,OAAO,CAAC,EAAE,EAAE;YACX,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAA;SACX;QAED,OAAO,MAAM,CAAA;KACb;IAED,SAAS;QACR,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAA;QAClD,MAAM,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;QAEpE,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAErC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;QACjB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;QAElB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;QAClB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;QAEjB,OAAO,MAAM,CAAA;KACb;IAED,WAAW,CAAC,MAAc;QACzB,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAC1B,OAAO,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,CAAA;KAClC;IAED,KAAK,CAAC,MAAc;QACnB,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QAC1B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,wEAAwE,CAAC,CAAA;QAC1G,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAA;QAClE,MAAM,EAAE,GAAG,IAAI,YAAY,CAAC,MAAM,GAAG,OAAO,CAAC,CAAA;QAC7C,IAAI,SAAS,GAAG,OAAO,CAAA;QACvB,OAAO,SAAS,EAAE,EAAE;YACnB,IAAI,SAAS,GAAG,MAAM,CAAA;YACtB,OAAO,SAAS,EAAE,EAAE;gBACnB,IAAI,MAAM,GAAG,CAAC,CAAA;gBACd,IAAI,CAAC,GAAG,CAAC,CAAA;gBACT,OAAO,CAAC,EAAE,EAAE;oBACX,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,SAAS,CAAC,CAAA;iBACtE;gBACD,EAAE,CAAC,SAAS,GAAG,MAAM,GAAG,SAAS,CAAC,GAAG,MAAM,CAAA;aAC3C;SACD;QACD,OAAO,IAAI,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,CAAA;KACtC;IAED,WAAW,CAAC,CAAS;QACpB,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAA;QAC7B,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAA;QAC3C,MAAM,EAAE,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,CAAA;QACpC,IAAI,SAAS,GAAG,OAAO,CAAA;QACvB,OAAO,SAAS,EAAE,EAAE;YACnB,IAAI,MAAM,GAAG,CAAC,CAAA;YACd,IAAI,CAAC,GAAG,CAAC,CAAA;YACT,OAAO,CAAC,EAAE,EAAE;gBACX,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;aAC5C;YACD,EAAE,CAAC,SAAS,CAAC,GAAG,MAAM,CAAA;SACtB;QACD,OAAO,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA;KACrB;IAED,UAAU;QACT,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,OAAO,GAAG,IAAI,CAAC,KAAK,CAAA;QAChD,MAAM,EAAE,GAAG,IAAI,YAAY,CAAC,MAAM,GAAG,OAAO,CAAC,CAAA;QAC7C,IAAI,SAAS,GAAG,OAAO,CAAA;QACvB,OAAO,SAAS,EAAE,EAAE;YACnB,IAAI,SAAS,GAAG,MAAM,CAAA;YACtB,OAAO,SAAS,EAAE,EAAE;gBACnB,EAAE,CAAC,SAAS,GAAG,MAAM,GAAG,SAAS,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,GAAG,OAAO,GAAG,SAAS,CAAC,CAAA;aAC5E;SACD;QACD,OAAO,IAAI,MAAM,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC,CAAA;KACtC;;;;IAKD,SAAS;QACR,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;QAClD,IAAI,SAAS,GAAG,CAAC,CAAA;QACjB,OAAO,SAAS,EAAE,EAAE;YACnB,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,CAAA;YACtC,OAAO,SAAS,EAAE,EAAE;gBACnB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,CAAC,CAAA;gBAC/C,MAAM,IAAI,GAAG,EAAE,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,CAAA;gBAC1C,EAAE,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,EAAE,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,CAAA;gBAC7D,EAAE,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,IAAI,CAAA;aACpC;SACD;QACD,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;QACd,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;KACf;IAED,QAAQ;QACP,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAA;KAChC;IAED,QAAQ;QACP,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,CAAA;SACrB;QACD,MAAM,CAAC,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QACtC,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;QAC3C,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAA;QACvB,OAAO,MAAM,EAAE,EAAE;YAChB,OAAO,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;YACzB,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA;SAC3B;QACD,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAA;KACpB;IAED,KAAK;QACJ,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;KACxC;IAED,KAAK;QACJ,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;KACxC;IAED,YAAY;QACX,IAAI,MAAM,GAAG,CAAC,CAAA;QACd,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAA;QACzB,OAAO,QAAQ,EAAE,EAAE;YAClB,IAAI,MAAM,GAAG,CAAC,CAAA;YACd,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAA;YAC1B,OAAO,QAAQ,EAAE,EAAE;gBAClB,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAA;aAC5D;YACD,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;SACjC;QACD,OAAO,MAAM,CAAA;KACb;IAED,YAAY;QACX,IAAI,MAAM,GAAG,CAAC,CAAA;QACd,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAA;QAC1B,OAAO,QAAQ,EAAE,EAAE;YAClB,IAAI,MAAM,GAAG,CAAC,CAAA;YACd,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAA;YACzB,OAAO,QAAQ,EAAE,EAAE;gBAClB,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAA;aAC5D;YACD,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;SACjC;QACD,OAAO,MAAM,CAAA;KACb;IAED,wBAAwB;QACvB,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE,yBAAyB,CAAC,CAAA;QAEvF,IAAI,OAAO,GAAG,CAAC,CAAA;QACf,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAA;QAC3C,OAAO,OAAO,EAAE;YACf,OAAO,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;YACzB,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAA;SAC1B;QACD,OAAO,OAAO,CAAA;KACd;;;;;IAMD,cAAc;;;;;;QAMb,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,wBAAwB,EAAE,CAAA;KAC1D;IAED,WAAW;QACV,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAA;KACvD;IAED,qBAAqB;QACpB,OAAO,CAAC,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC,CAAA;QACnC,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACrC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;QACnB,OAAO,CAAC,EAAE,EAAE;YACX,MAAM,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAA;YACvC,IAAI,WAAW,GAAG,gBAAgB,CAAA;YAClC,OAAO,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,GAAG;gBAAE,WAAW,EAAE,CAAA;YAC/C,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,GAAG,gBAAgB,CAAA;SAC1C;QACD,OAAO,MAAM,CAAA;KACb;IAED,sBAAsB,CAAC,QAA6C,IAAI,CAAC,KAAK,EAAE;QAC/E,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAA;;QAEzB,MAAM,UAAU,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACzC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAA;QAC3B,OAAO,SAAS,EAAE,EAAE;YACnB,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;YAC7B,IAAI,IAAI,CAAC,MAAM,EAAE,GAAG,aAAa,EAAE;gBAClC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAA;aAC5B;iBAAM;gBACN,MAAK;aACL;SACD;;QAED,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAA;QAC3B,OAAO,SAAS,EAAE,EAAE;YACnB,IAAI,UAAU,CAAC,SAAS,CAAC,EAAE;gBAC1B,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;gBAC/C,OAAO,SAAS,EAAE,EAAE;oBACnB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE;wBACpC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAA;qBAC5B;iBACD;aACD;SACD;QACD,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA;QAC9C,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA;QAC3C,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA;QAC3C,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA;;QAE3C,MAAM,QAAQ,GAAG,CAAC,CAAC,qBAAqB,EAAE,CAAA;QAC1C,MAAM,mBAAmB,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,CAAA;QAC1G,OAAO,mBAAmB,CAAA;KAC1B;CAED;;ACv3BD,MAAM,EAAE,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,IAAI,CAAA;AAC9B,MAAa,GAAG,GAAG,CAAC,GAAG,EAAE,CAAA;;AAOzB,MAAa,SAAS,GAAG,IAAI,CAAA;AAC7B,MAAa,aAAa,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;AAC1C,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,aAAa,CAAC,CAAA;AAC3C,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAA;AAInC,IAAI,UAAU,GAAQ,SAAS,CAAA;AAC/B;IACC,UAAU,GAAG,OAAO,CAAC,GAAG,CAAA;IACxB,OAAO,CAAC,GAAG,GAAG,eAAe,CAAA;CAC7B;AACD;IACC,IAAI,UAAU,EAAE;QACf,OAAO,CAAC,GAAG,GAAG,UAAU,CAAA;KACxB;CACD;AACD,wBAAkC,QAAa,EAAE,IAAgC;IAChF,OAAO,QAAQ,CAAC,WAAW,IAAI,IAAI,CAAA;CACnC;AAED,sBAA6B,EAAY,EAAE,GAAW,EAAE,GAAW;IAClE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAA;IACxB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;QACpB,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;KACpB;IACD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;QACtB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;KACZ;IACD,OAAO,iBAAiB,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAqB,CAAC,CAAA;CACpF;AAED,uBAA8B,GAAG,OAAwB;IACxD,IAAI,SAAS,EAAE;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,YAAY,EAAE,IAAI,SAAS,CAAC,CAAC,CAAC,YAAY,MAAM,CAAC,EAAE;gBACpE,MAAM,IAAI,KAAK,CAAC,0BAA0B,IAAI,CAAC,CAAC,GAAG,qBAAqB,GAAG,OAAO,SAAS,CAAC,CAAC,CAAC,GAAG,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;aAC9H;SACD;KACD;IACD,OAAO,IAAI,CAAA;CACX;AACD,oBAA8B,IAAiC,EAAE,GAAG,IAAS;IAC5E,IAAI,SAAS,EAAE;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACrC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,EAAE;gBAC/B,MAAM,IAAI,KAAK,CAAC,kBAAkB,IAAI,CAAC,CAAC,GAAG,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;aAC3H;SACD;KACD;IACD,OAAO,IAAI,CAAA;CACX;AACD,uBAA8B,GAAG,OAAiB;IACjD,IAAI,SAAS,EAAE;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,QAAQ,KAAK,OAAO,OAAO,CAAC,CAAC,CAAC,EAAE;gBACnC,MAAM,IAAI,KAAK,CAAC,0BAA0B,IAAI,CAAC,CAAC,GAAG,qBAAqB,GAAG,OAAO,OAAO,CAAC,CAAC,CAAC,GAAG,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;aAC1H;SACD;KACD;IACD,OAAO,IAAI,CAAA;CACX;AACD,gBAAuB,KAAU,EAAE,GAAG,QAAkC;IACvE,IAAI,SAAS,IAAI,CAAC,KAAK,EAAE;QACxB,MAAM,IAAI,KAAK,CAAC,iBAAiB;cAC9B,QAAQ,CAAC,GAAG,CAAC,OAAO,KAAK,UAAU,KAAK,OAAO,OAAO,GAAG,OAAO,EAAE,GAAG,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;KACnG;IACD,OAAO,IAAI,CAAA;CACX;AACD,qBAA4B,KAAa;IACxC,MAAM,IAAI,KAAK,EAAE,CAAA;CACjB;AACD,iBAAwB,CAAY,EAAE,GAAG,QAA+B;IACvE,IAAI,CAAC,CAAC,EAAE,EAAE;QACT,MAAM,IAAI,KAAK,CAAC,kBAAkB,GAAG,CAAC,CAAC,QAAQ,EAAE;cAC9C,QAAQ,CAAC,GAAG,CAAC,OAAO,KAAK,UAAU,KAAK,OAAO,OAAO,GAAG,OAAO,EAAE,GAAG,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;KACnG;CACD;AAED,cAAqB,CAAS,EAAE,CAAS,EAAE,CAAS;IACnD,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;CAC1B;AACD,MAAM,sBAAsB,GAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAA;AACxD,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK;IAC1C,IAAI,EAAE,IAAI,IAAI,EAAE;QACf,OAAO,IAAI,CAAA;KACX;IACD,OAAO,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;CAC/C,CAAA;AAED,MAAa,GAAG,GAAG,CAAC,CAAS,EAAE,MAAc,aAAa,KAAc,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAA;AAC1F,MAAa,EAAE,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,MAAc,aAAa,KAAc,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAA;AACxG,MAAa,EAAE,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,MAAc,aAAa,KAAc,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAA;AAC9F,MAAa,EAAE,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,MAAc,aAAa,KAAc,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAA;AAC9F,MAAa,EAAE,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,MAAc,aAAa,KAAc,CAAC,GAAG,CAAC,IAAI,GAAG,CAAA;AAC9F,MAAa,EAAE,GAAG,CAAC,CAAS,EAAE,CAAS,EAAE,MAAc,aAAa,KAAc,CAAC,GAAG,CAAC,IAAI,GAAG,CAAA;AAE9F,MAAa,OAAO,GAAG,CAAC,CAAS,EAAE,CAAS,KAAc,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;AAC1E,MAAa,SAAS,GAAG,CAAC,CAAS,KAAc,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,aAAa,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,aAAa,CAAA;AACxI,MAAa,IAAI,GAAG,CAAC,CAAS,EAAE,EAAU,KAAa,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,aAAa,GAAG,EAAE,GAAG,CAAC,CAAA;AACjG,MAAa,KAAK,GAAG,CAAC,CAAS,EAAE,GAAG,EAAY,KAAa,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,aAAa,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;AAChI,MAAa,OAAO,GAAG,CAAC,CAAS,EAAE,GAAW,EAAE,GAAG,EAAY,KAAa,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;AACrI,MAAa,KAAK,GAAG,CAAC,CAAS,EAAE,GAAG,GAAG,aAAa,KAAa,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAA;AAC3F,MAAa,UAAU,GAAG,CAAC,CAAS,KAAa,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,CAAA;mBAEjF,MAAa,IAAI,GAAG,GAAG,CAAA;mBACvB,MAAa,GAAG,GAAG,EAAE,CAAA;;;;;;;;;AAUxC,uBAAuB,CAAwB,EAAE,KAAa,EAAE,GAAW;;IAE1E,IAAI,OAAO,GAAG,KAAK,WAAW,IAAI,CAAC,GAAG,KAAK,CAAC,EAAE;QAC7C,OAAO,CAAC,CAAC,KAAK,CAAC,CAAA;KACf;IACD,KAAK,GAAG,CAAC,KAAK,CAAA;IACd,GAAG,GAAG,CAAC,GAAG,CAAA;;IAEV,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;QAChE,OAAO,GAAG,CAAA;KACV;;IAED,IAAI,EAAE,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IACpC,KAAK,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;;IAE3D,EAAE,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAChC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC,CAAA;CACtD;AAED,MAAa,OAAO,GAA2C,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;AACxG,MAAa,OAAO,GAA2C,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;AACxG,MAAa,MAAM,GAA2C,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;AAGtG,MAAa,YAAY,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;AAElD,aAAoB,CAAS,EAAE,CAAS;IACvC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;CACxB;AACD,mBAA0B,GAAU,EAAE,CAAM,EAAE,CAAM;IACnD,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;IACnB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;IACf,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;CACb;AACD,mBAAmD,GAAM,EAAE,MAAW,EAAE,GAAM,EAAE,MAAW,EAAE,MAAW;IACvG,MAAM,IAAI,MAAM,CAAA;IAChB,MAAM,IAAI,MAAM,CAAA;IAChB,OAAO,MAAM,EAAE,GAAG,MAAM,EAAE;QACzB,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAA;KAC3B;CACD;AACD,eAAsB,GAAW,EAAE,GAAW,EAAE,GAAW;IAC1D,aAAa,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;IAC5B,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;CACxC;AAED,iBAAwB,GAAW,EAAE,GAAW,EAAE,GAAW;IAC5D,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,CAAA;CAC/B;AACD,sBAA6B,GAAW,EAAE,GAAW,EAAE,GAAW;IACjE,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;CACnC;AAED,iBAA8B,GAAgB,EAAE,GAAM,EAAE,GAAM;IAC7D,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IAC1B,IAAI,KAAK,EAAE;QACV,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;KACf;SAAM;QACN,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;KACnB;CACD;AAGD,uBAAiC,GAAe,EAAE,MAAW,EAAE,KAAU,EACxE,GAAe,EAAE,MAAW,EAAE,KAAU,EAAE,KAAU;IACpD,IAAI,QAAQ,GAAG,MAAM,GAAG,KAAK,GAAG,KAAK,CAAA;IACrC,IAAI,MAAM,GAAG,MAAM,GAAG,KAAK,GAAG,KAAK,CAAA;IACnC,OAAO,QAAQ,GAAG,MAAM,EAAE;QACzB,GAAG,CAAC,MAAM,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAA;KAC7C;CACD;AACD,yBAAmC,GAAe,EAAE,MAAW,EAAE,KAAU,EAC1E,GAAe,EAAE,MAAW,EAAE,KAAU,EACxC,SAAc,EAAE,UAAe;IAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;QACpC,SAAS,CAAC,GAAG,EAAE,MAAM,GAAG,KAAK,GAAG,CAAC,EAAE,GAAG,EAAE,MAAM,GAAG,KAAK,GAAG,CAAC,EAAE,SAAS,CAAC,CAAA;KACtE;CACD;AACD,oBAA2B,cAAmB,EAAE,YAAiB,EAAE,OAAY,CAAC;IAC/E,aAAa,CAAC,cAAc,EAAE,IAAI,CAAC,CAAA;;IAEnC,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,GAAG,cAAc,IAAI,IAAI,CAAC,CAAA;IACnE,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,CAAA;;IAEnC,KAAK,IAAI,CAAC,GAAG,cAAc,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,SAAS,EAAE,CAAC,IAAI,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9E,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;KACjB;IACD,OAAO,MAAM,CAAA;CACb;AAQD,2BAAqC,MAAW,EAAE,CAAgB;IACjE,aAAa,CAAC,MAAM,CAAC,CAAA;IACrB,MAAM,CAAC,UAAU,IAAI,OAAO,CAAC,CAAC,CAAA;IAC9B,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAA;IAC3B,IAAI,OAAO,GAAG,MAAM,CAAA;IACpB,OAAO,OAAO,EAAE,EAAE;QACjB,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAA;KACvB;IACD,OAAO,CAAC,CAAA;CACR;AAED,sBAA6B,IAAc;IAC1C,MAAM,KAAK,GAAG,CAAC,GAAW,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;IACtE,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAA;IACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA;QAC1C,IAAI,GAAG,CAAA;QACP,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC;eAClB,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;eAC5D,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EAAE;YACjE,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAA;SACtB;KACD;IACD,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAA;CAC/B;AAED,uBAAiC,IAAS,EAAE,CAAmB;IAC9D,MAAM,KAAK,GAAG,CAAC,GAAW,KAAK,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;IACtE,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAA;IACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;QAC7C,IAAI,GAAG,CAAA;QACP,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC;eAClB,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;eAC/D,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;YACpE,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAA;SACtB;KACD;IACD,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAA;CAC/B;AAGD,0BAAiC,MAAW,EAAE,KAAU,EAAE,GAAG,OAAiB;IAC7E,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG;;QAE5C,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YAC3B,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;gBAC/B,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,EAAE,wBAAwB,EAAE,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;aAC3E;YACD,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC,wBAAwB,CAAC,KAAK,EAAE,GAAG,CAAE,CAAC,CAAA;SAChF;KACD,CAAC,CAAA;CACF;;;;;;;;;AAUD,IAAW,oBAAoB,GAAG,CAAC,CAAS,KAAK,CAAC,CAAA;AAElD,qBAA4B,GAAW;IACtC,MAAM,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,CAAA;IAC5E,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,CAAC,CAAA;CAC3C;AAED,MAAa,KAAK,GAAG,CAAC,CAAS,EAAE,CAAS,KAAK,CAAC,GAAG,CAAC,CAAA;AAIpD,uBAA8B,CAAS;IACtC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;CACxB;;;;;AAOD,uBAA8B,CAAM;IACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3B,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAA;SACpB;KACD;CACD;;AAID,iCAAwC,CAAS,EAAE,CAAS;IAC3D,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IACvB,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IACvB,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;IAChB,IAAI,CAAC,GAAG,EAAE,CAAA;IACV,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;QACrB,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;KACxC;IACD,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IAEf,OAAO,CAAC,CAAA;CACR;;;;;AAOD,mBAA0B,GAAW,EAAE,EAAU;IAChD,OAAO,yBAAyB,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,SAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAI,CAAC,CAAA,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;CAC5F;;;;;AAMD,mBAA0B,GAAW,EAAE,EAAU;IAChD,OAAO,yBAAyB,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,SAAA,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAI,CAAC,CAAA,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;CAC3F;AAED,MAAa,GAAG,GAAG,mBAAmB,CAAA;AACtC,iBAAwB,GAAW;;;;;;IAOlC,OAAO,GAAG,GAAG,GAAG,CAAA;CAChB;;;;;;;;;;;AAYD,qBAA4B,KAAa,EAAE,MAAW;IACrD,IAAI,UAAU,GAAG,QAAQ,EAAE,YAAY,GAAuB,SAAS,EAAE,eAAe,GAAuB,SAAS,CAAA;IACxH,cAAc,SAAiB,EAAE,YAAoB;QACpD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAA;QAC3C,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,OAAO,CAAC,CAAA;QAC7C,IAAI,OAAO,GAAG,UAAU,EAAE;YACzB,UAAU,GAAG,OAAO,CAAA;YACpB,YAAY,GAAG,SAAS,CAAA;YACxB,eAAe,GAAG,YAAY,CAAA;SAC9B;QACD,OAAO,CAAC,IAAI,OAAO,CAAA;KACnB;IAED,kBAAkB,GAAW;QAC5B,OAAO,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;KACpD;IAED,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAAE,OAAO,eAAe,GAAG,GAAG,CAAA;IAEhG,MAAM,QAAQ,GAAG,EAAE,GAAG,KAAK,CAAA;IAC3B,MAAM,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;IAC/D,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;IAE3D,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,MAAM,EAAE,QAAQ,EAAE,EAAE;QACrD,KAAK,IAAI,MAAM,GAAG,QAAQ,GAAG,CAAC,EAAE,MAAM,IAAI,MAAM,EAAE,MAAM,EAAE,EAAE;YAC3D,MAAM,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;YACnD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;YAChD,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,GAAG,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,QAAQ,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;YACpH,IAAI,IAAI,CAAC,SAAS,EAAE,SAAS,GAAG,cAAc,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAAE,OAAO,eAAe,GAAG,GAAG,CAAA;SAChG;KACD;IAED,OAAO,eAAe,IAAI,YAAa,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA;CAC5D;AAID,cAAqB,CAAa;IACjC,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;IAC/B,CAAC,EAAE,CAAA;IACH,OAAO,WAAW,CAAC,GAAG,EAAE,GAAG,KAAK,CAAA;CAChC;AAgJD,MAAM,CAAC,GAAG,GAAG,UAAkC,CAAkB,EAChE,CAA+C,EAC/C,UAAe,SAAS;IACxB,MAAM,MAAM,GAAG,EAAqB,CAAA;IACpC,KAAK,MAAM,GAAG,IAAI,CAAC,EAAE;QACpB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;KAC7C;IACD,OAAO,MAAM,CAAA;CACb,CAAA;AACD,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC;IACjC,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAA;CAC5B,CAAA;AACD,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,GAAG,CAAC;IACpE,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;IAC1B,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;IAC1C,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,CAAA;IACrC,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,KAAK,IAAI,IAAI,CAAC,CAAA;IACpD,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,CAAA;;;IAGtC,IAAI,KAAK,GAAG,CAAC,CAAA;IACb,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,IAAI,EAAE;QACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;YACtD,MAAM,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;SACzB;KACD;IACD,MAAM,CAAC,YAAY,IAAI,KAAK,CAAC,CAAA;IAC7B,OAAO,MAAM,CAAA;CACb,CAAA;AACD,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,GAAQ;IAC1C,IAAI,IAAI,KAAK,GAAG;QAAE,OAAO,IAAI,CAAA;IAC7B,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,SAAS;QAAE,OAAO,KAAK,CAAA;IAChE,IAAI,IAAI,CAAC,MAAM,KAAK,GAAG,CAAC,MAAM;QAAE,OAAO,KAAK,CAAA;IAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YAAE,OAAO,KAAK,CAAA;KAC1C;IACD,OAAO,IAAI,CAAA;CACX,CAAA;AACD,gBAAuB,CAAM,EAAE,CAAM;IACpC,OAAO,QAAQ,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;CACpD;AACD,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG;IAC1B,IAAI,MAAM,GAAG,CAAC,CAAA;IACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,GAAG,MAAM,GAAG,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;KAC5C;IACD,OAAO,MAAM,GAAG,CAAC,CAAA;CACjB,CAAA;AACD,kBAAyB,CAAM;IAC9B,IAAI,QAAQ,KAAK,OAAO,CAAC,IAAI,SAAS,KAAK,CAAC,EAAE;QAC7C,OAAO,CAAC,GAAG,CAAC,CAAA;KACZ;SAAM;QACN,OAAO,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAA;KACpC;CACD;AACD,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC;IACtC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,MAAM,GAAG,EAAE,CAAA;IACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;QAChC,IAAI,CAAC,IAAI,IAAI,EAAE;YACd,MAAM,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;YAC/B,IAAI,GAAG,EAAE;gBACR,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aAChB;SACD;KACD;IACD,OAAO,MAAM,CAAA;CACb,CAAA;AACD,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,CAAC;IACpC,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;CACpD,CAAA;AACD,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,GAAG,QAAQ;IAC5C,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAA;CAC/C,CAAA;;;;;AAKD,KAAK,CAAC,SAAS,CAAC,YAAY,GAAG;IAC9B,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;CAC7C,CAAA;AACD,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG;IACrB,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,QAAQ,CAAA;IACnC,OAAO,CAAC,EAAE,EAAE;QACX,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;QACnB,IAAI,GAAG,GAAG,GAAG;YAAE,GAAG,GAAG,GAAG,CAAA;KACxB;IACD,OAAO,GAAG,CAAA;CACV,CAAA;AACD,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG;;IAErB,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,CAAA;IACpC,OAAO,CAAC,EAAE,EAAE;QACX,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;QACnB,IAAI,GAAG,GAAG,GAAG;YAAE,GAAG,GAAG,GAAG,CAAA;KACxB;IACD,OAAO,GAAG,CAAA;CACV,CAAA;AACD,KAAK,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,CAAC;IACzC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;QAAE,OAAO,CAAC,CAAC,CAAA;KAAE;IACnC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,QAAQ,CAAA;IACpD,OAAO,CAAC,EAAE,EAAE;QACX,MAAM,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;QAC/B,IAAI,GAAG,GAAG,MAAM,EAAE;YACjB,MAAM,GAAG,GAAG,CAAA;YACZ,MAAM,GAAG,CAAC,CAAA;SACV;KACD;IACD,OAAO,MAAM,CAAA;CACb,CAAA;AACD,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,CAAC;IACpC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,MAAM,GAAG,SAAS,EAAE,MAAM,GAAG,CAAC,QAAQ,CAAA;IAC3D,OAAO,CAAC,EAAE,EAAE;QACX,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;QACxC,IAAI,GAAG,GAAG,MAAM,EAAE;YACjB,MAAM,GAAG,GAAG,CAAA;YACZ,MAAM,GAAG,EAAE,CAAA;SACX;KACD;IACD,OAAO,MAAM,CAAA;CACb,CAAA;;;;;AAMD,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG;IACxB,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;IACnB,IAAI,MAAM,GAAG,CAAC,CAAA;IACd,OAAO,CAAC,EAAE,EAAE;QACX,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;KAC3B;IACD,OAAO,MAAM,CAAA;CACb,CAAA;AAED,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG;IACrB,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;IACnB,IAAI,MAAM,GAAG,CAAC,CAAA;IACd,OAAO,CAAC,EAAE,EAAE;QACX,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAA;KACjB;IACD,OAAO,MAAM,CAAA;CACb,CAAA;AAED,KAAK,CAAC,SAAS,CAAC,cAAc,GAAG;IAChC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM;QAAE,OAAO,CAAC,CAAA;IAC9B,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;IACnB,OAAO,CAAC,IAAI,CAAC,EAAE;QACd,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;QACpC,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;YACpC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAA;SAC9B;QACD,CAAC,GAAG,SAAS,CAAA;KACb;IACD,OAAO,IAAI,CAAC,CAAC,CAAC,CAAA;CACd,CAAA;AAED,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG;IACzB,OAAO,CAAC,IAAI,IAAI,CAAC,MAAM,CAAA;CACvB,CAAA;AAED,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG;IACxB,MAAM,SAAS,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAA;IAC/B,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;CAC5B,CAAA;AAED,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC;IACnC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IAC7B,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;QAChB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;QACrB,OAAO,IAAI,CAAA;KACX;IACD,OAAO,KAAK,CAAA;CACZ,CAAA;AAED,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,CAAC;IACxC,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;IACtB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IACjB,OAAO,MAAM,CAAA;CACb,CAAA;AACD,KAAK,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,CAAC;IAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;IACtB,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,IAAI,CAAC,GAAG,EAAE,CAAA;KACV;SAAM;QACN,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;KACpB;IACD,OAAO,MAAM,CAAA;CACb,CAAA;AAED,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,UAAa,OAA2B;IACrE,MAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA;IACrC,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE;QAChB,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAA;KAC9B;CACD,CAAA;AAED,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC;IACtC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAA;IAChB,OAAO,CAAC,EAAE,EAAE;QACX,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KACjB;CACD,CAAA;AAED,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC;IACnC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IAC7B,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;QAChB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;QACrB,OAAO,KAAK,CAAA;KACZ;SAAM;QACN,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACZ,OAAO,IAAI,CAAA;KACX;CACD,CAAA;AACD,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC;IACtC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IAC7B,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;QAChB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAA;QAC1B,OAAO,KAAK,CAAA;KACZ;SAAM;QACN,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACZ,OAAO,IAAI,CAAA;KACX;CACD,CAAA;AAED,KAAK,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,aAAa,EAAE,GAAG,GAAG,CAAC,CAAM,EAAE,CAAM,KAAK,CAAC,GAAG,CAAC;IAEvF,IAAI,QAAQ,GAAG,CAAC,CAAA;IAChB,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IAC9B,IAAI,YAAY,CAAA;IAChB,IAAI,cAAc,CAAA;IAElB,OAAO,QAAQ,IAAI,QAAQ,EAAE;QAC5B,YAAY,GAAG,CAAC,QAAQ,GAAG,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAA;QAC5C,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;QAEnC,IAAI,GAAG,CAAC,cAAc,EAAE,aAAa,CAAC,GAAG,CAAC,EAAE;YAC3C,QAAQ,GAAG,YAAY,GAAG,CAAC,CAAA;SAC3B;aACI,IAAI,GAAG,CAAC,cAAc,EAAE,aAAa,CAAC,GAAG,CAAC,EAAE;YAChD,QAAQ,GAAG,YAAY,GAAG,CAAC,CAAA;SAC3B;aACI;YACJ,OAAO,YAAY,CAAA;SACnB;KACD;IAED,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAA;CACpB,CAAA;AAED,KAAK,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,EAAO,EAAE,GAAG,GAAG,KAAK;IAC5D,IAAI,QAAQ,GAAG,CAAC,CAAA;IAChB,IAAI,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAA;IAC1B,IAAI,YAAY,CAAA;IAChB,IAAI,cAAc,CAAA;IAElB,OAAO,QAAQ,GAAG,QAAQ,EAAE;QAC3B,YAAY,GAAG,CAAC,EAAE,CAAC,QAAQ,GAAG,QAAQ,IAAI,CAAC,CAAC,CAAA;QAC5C,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;QAEnC,IAAI,GAAG,CAAC,cAAc,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE;YAChC,QAAQ,GAAG,YAAY,GAAG,CAAC,CAAA;SAC3B;aAAM;YACN,QAAQ,GAAG,YAAY,CAAA;SACvB;KACD;IAED,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;CAC5B,CAAA;AACD,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,EAAE,MAAM,EAAE;IAC9C,GAAG;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;KAC5B;IACD,GAAG,CAAC,GAAG;QACN,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAA;KAC3B;CACD,CAAC,CAAA;AAEF,MAAM,CAAC,SAAS,CAAC,qBAAqB,GAAG;IACxC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;CACnD,CAAA;AACD,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAM;IACzC,OAAO,IAAI,IAAI,CAAC,CAAA;CAChB,CAAA;AAED,aAAoB,CAAM;IACzB,QAAQ,OAAO,CAAC;QACf,KAAK,WAAW;YACf,OAAO,WAAW,CAAA;QACnB,KAAK,UAAU;YACd,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAA;QACpB,KAAK,QAAQ;YACZ,OAAO,EAAE,GAAG,CAAC,CAAA;QACd,KAAK,QAAQ;YACZ,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;QACzB,KAAK,QAAQ;YACZ,IAAI,IAAI,IAAI,CAAC,EAAE;gBACd,OAAO,MAAM,CAAA;aACb;iBAAM;gBACN,OAAO,CAAC,CAAC,GAAG,CAAA;aACZ;QACF;YACC,MAAM,IAAI,KAAK,EAAE,CAAA;KAClB;CACD;AACD,aAAoB,CAAM;IACzB,OAAO,CAAC,CAAC,GAAG,CAAA;CACZ;AACD,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,cAAc,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAA,EAAE,EAAE,CAAC,CAAA;AAC/F,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,cAAc,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAA,EAAE,EAAE,CAAC,CAAA;;;;;;;AAW/F,eAAsB,QAAc,EAAE,MAAU;IAC/C,MAAM,GAAG,GAAG,gBAAgB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;IAC9C,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,CAAA;IAChB,OAAO,GAAG,GAAG,CAAC,CAAA;CACd;AACD,0BAAiC,QAAc,EAAE,MAAU;IAC1D,MAAM,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,iBAAiB,CAAC,CAAA;IAC1C,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,EAAE,CAAA;;;IAGpC,MAAM,gBAAgB,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,QAAQ;QACrD,MAAM,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAA;;QAE9C,QAAQ,SAAS;YAChB,KAAK,CAAC;gBACL,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;YACrC,KAAK,CAAC;gBACL,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;YACrC,KAAK,CAAC;gBACL,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;SACrC;KACD,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAA;IAC1B,OAAO,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;CACjE;;;;AAKD,mBAA0B,CAAS,EAAE,CAAS;;IAE7C,MAAM,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;IACpC,IAAI,cAAc,GAAG,CAAC,aAAa,EAAE;QACpC,OAAO,EAAE,CAAA;KACT;SAAM,IAAI,cAAc,IAAI,aAAa,EAAE;QAC3C,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;KACf;SAAM;QACN,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;QACtC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAA;KACrC;CACD;;;;;;;AAQD,yBAAgC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,CAAS;IACzE,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;QACX,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;YACX,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;SACf;aAAM;YACN,OAAO,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;SAC9B;KACD;IACD,MAAM,OAAO,GAAG,CAAC,CAAA;IACjB,CAAC,GAAG,CAAC,GAAG,OAAO,CAAA;IACf,CAAC,GAAG,CAAC,GAAG,OAAO,CAAA;IACf,CAAC,GAAG,CAAC,GAAG,OAAO,CAAA;IACf,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAC5B,KAAK,GAAG,CAAC,GAAG,CAAC,EACb,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,EACjC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,EAAE,EAC7C,KAAK,GAAG,CAAC,GAAG,CAAC,EACb,YAAY,GAAG,KAAK,GAAG,KAAK,GAAG,SAAS,CAAA;;IAEzC,IAAI,YAAY,GAAG,CAAC,aAAa,GAAG,CAAC,EAAE;QACtC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,EAC9B,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAChB,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;QACpC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EACvB,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACtB,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QACzC,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QACzD,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;QACzD,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;KACnB;SAAM,IAAI,YAAY,IAAI,aAAa,GAAG,CAAC,EAAE;QAC7C,IAAI,CAAC,IAAI,KAAK,EAAE;;YAEf,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;SACf;QACD,MAAM,EAAE,GAAG,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;QAC5D,MAAM,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;QACzB,MAAM,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;QACtB,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;KACf;SAAM;QACN,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;QAClC,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAA;QACjC,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,CAAA;QAChC,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;KACxB;CACD;AACD,uBAA8B,CAAwB,EAAE,EAAyB,EAAE,CAAS,EAAE,CAAS,EAAE,YAAiB,CAAC;IAC1H,MAAM,GAAG,GAAG,IAAI,CAAA;IAChB,IAAI,MAAM,GAAG,CAAC,CAAA;IACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE;QAC1C,MAAM,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;QAClB,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAA;QACrC,MAAM,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,KAAK,SAAS,EAAE,UAAU,GAAG,OAAO,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAA;KAC3F;CACD;AACD,kBAAyB,CAAwB,EAAE,CAAS,EAAE,CAAS,EAAE,QAAgB,EAAE,EAAyB;IAEnH,MAAM,OAAO,GAAa,EAAE,CAAA;IAC5B,KAAK,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,IAAI,CAAC,EAAE,MAAM,IAAI,QAAQ,EAAE;QACrD,MAAM,EAAE,GAAG,QAAQ,GAAG,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;QACrC,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE;;YAEzB,IAAI,CAAC,GAAG,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;YACtD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;gBAE7B,CAAC,GAAG,eAAe,CAAC,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,CAAA;;;;;;aAMnC;YACD,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;gBAC9C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;aACf;SACD;KACD;IACD,OAAO,OAAO,CAAA;CACd;AAED,gBAAuB,CAAwB,EAAE,CAAS,EAAE,CAAS,EAAE,KAAU;IAChF,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;IACb,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;IACxB,OAAO,KAAK,EAAE,EAAE;QACf,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACrB,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACf,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE;YACzB,CAAC,GAAG,CAAC,CAAA;YACL,EAAE,GAAG,EAAE,CAAA;SACP;aAAM;YACN,CAAC,GAAG,CAAC,CAAA;YACL,EAAE,GAAG,EAAE,CAAA;SACP;KACD;IACD,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAA;IACxB,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAA;IACxB,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;CACtB;AACD,uBAA8B,CAA4B,EAAE,CAAW,EAAE,QAAa,CAAC,EAAE,OAAgB,EAAE,OAAO,GAAG,CAAC;IACrH,OAAO,GAAG,OAAO,IAAI,IAAI,CAAA;IAEzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC/B,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACf,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,OAAO,CAAC,CAAA;QAC7C,MAAM,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;QACtB,MAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,MAAM,CAAC,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACrE,MAAM,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;;QAErB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE;YAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,OAAO,CAAA;KAC1D;IACD,OAAO,CAAC,CAAA;CACR;AAMD,yBACC,CAAwB,EAAE,MAAc,EAAE,QAAgB,CAAC,EAAE,UAA4C,IAAI;IAC7G,IAAI,QAAQ,KAAK,OAAO,OAAO,EAAE;QAChC,IAAI,CAAC,GAAG,MAAM,CAAA;QAEd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;YAC/B,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACf,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,EAAE,IAAI,OAAO,CAAA;;YAE5C,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAA;SACjB;QACD,OAAO,CAAC,CAAA;KACR;SAAM;QACN,OAAO,2BAA2B,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;KAC7D;CACD;AACD,qCAA4C,CAAwB,EAAE,MAAc,EAAE,QAAgB,CAAC,EAAE,EAAyB;IACjI,IAAI,CAAC,GAAG,MAAM,CAAA;IACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC/B,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACf,MAAM,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;QAClB,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;YAC7B,OAAO,CAAC,GAAG,EAAE,CAAA;;SAEb;QACD,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAA;QACjB,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE;YACd,OAAO,CAAC,GAAG,EAAE,CAAA;;SAEb;KACD;IACD,OAAO,CAAC,CAAA;CACR;AACD,4BACC,CAAwB,EACxB,MAAc,EACd,QAAgB,CAAC,EACjB,EAAyB,EACzB,KAAK,GAAG,IAAI;IACZ,IAAI,CAAC,GAAG,MAAM,CAAA;IACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC/B,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACf,MAAM,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;QAClB,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,KAAK,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE;YACzC,OAAO,eAAe,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;SAC7B;QACD,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;YAC7B,OAAO,CAAC,GAAG,EAAE,CAAA;;SAEb;QACD,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI,CAAA;QACjB,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE;YACd,OAAO,CAAC,GAAG,EAAE,CAAA;;SAEb;KACD;IACD,OAAO,CAAC,CAAA;CACR;AACD,yBACC,EAAoC,EACpC,EAAoC,EACpC,MAAc,EACd,MAAc,EACd,KAAc;IACd,MAAM,OAAO,GAAG,IAAI,CAAA;IACpB,KAAK,GAAG,KAAK,IAAI,CAAC,CAAA;IAClB,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM,EAAE,IAAI,EAAE,IAAI,CAAA;IACtC,GAAG;;;;;QAKF,IAAI,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACf,IAAI,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;;;;;;;;;QASf,MAAM,IAAI,IAAI,EAAE,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,EAC3E,IAAI,IAAI,EAAE,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,IAAI,CAAC,CAAA;QACvE,MAAM,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,OAAO,CAAA;QACjD,MAAM,EAAE,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,CAAA;QAC5C,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,CAAA;QAC7C,CAAC,IAAI,EAAE,CAAA;QACP,CAAC,IAAI,EAAE,CAAA;KACP,QAAQ,EAAE,KAAK,IAAI,SAAA,IAAI,EAAI,CAAC,CAAA,GAAG,SAAA,IAAI,EAAI,CAAC,CAAA,GAAG,aAAa,EAAC;IAC1D,IAAI,SAAA,IAAI,EAAI,CAAC,CAAA,GAAG,SAAA,IAAI,EAAI,CAAC,CAAA,GAAG,aAAa,EAAE;QAC1C,OAAO,CAAC,GAAG,CAAC,SAAA,IAAI,EAAI,CAAC,CAAA,GAAG,SAAA,IAAI,EAAI,CAAC,CAAA,CAAC,CAAA;QAClC,OAAO,SAAS,CAAA;KAChB;IACD,OAAO,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CACtB;AACD,wCAA+C,CAAmC,EACjF,CAAmC,EACnC,MAAc,EAAE,MAAc,EAAE,KAAU,EAC1C,IAAsC,EACtC,IAAsC,EACtC,IAAsC,EACtC,IAAsC;IACtC,KAAK,GAAG,KAAK,IAAI,CAAC,CAAA;IAClB,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,MAAM,CAAA;IAE1B,IAAI,IAAI,EAAE,IAAI,CAAA;IACd,GAAG;;;;;QAKF,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACd,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACd,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EACzC,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;;QAErC,MAAM,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAA;QACrC,MAAM,EAAE,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,CAAA;QAC5C,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,CAAA;QAC7C,CAAC,IAAI,EAAE,CAAA;QACP,CAAC,IAAI,EAAE,CAAA;KACP,QAAQ,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,aAAa,GAAG,EAAE,EAAC;IACnE,IAAI,CAAC,KAAK,EAAE;;QAEX,OAAO,SAAS,CAAA;KAChB;IACD,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;CACjB;AAGD,MAAa,iBAAiB,GAA0B;IACvD,CAAC,0CAA0C;IAC3C,0CAA0C;IAC1C,CAAC,0CAA0C;IAC3C,0CAA0C;IAC1C,CAAC,0CAA0C;IAC3C,0CAA0C;IAC1C,CAAC,0CAA0C;IAC3C,0CAA0C;IAC1C,CAAC,0CAA0C;IAC3C,0CAA0C;IAC1C,CAAC,0CAA0C;IAC3C,0CAA0C;IAC1C,CAAC,0CAA0C;IAC3C,0CAA0C;IAC1C,CAAC,0CAA0C;IAC3C,0CAA0C;IAC1C,CAAC,0CAA0C;IAC3C,0CAA0C;IAC1C,CAAC,0CAA0C;IAC3C,0CAA0C;IAC1C,CAAC,0CAA0C;IAC3C,0CAA0C;IAC1C,CAAC,0CAA0C;IAC3C,0CAA0C;CAC1C,CAAA;AACD,MAAa,sBAAsB,GAA0B;IAC5D,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;IAC1C,0CAA0C;CAC1C,CAAA;AACD,mCAA0C,CAAwB,EAAE,MAAc,EAAE,IAAY;;;;;;;;;;;;;;;IAiB/F,OAAO,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,MAAM,CAAC,CAAA;CACrF;;;;;AAMD,kBAAyB,CAAwB;IAChD,OAAO,iBAAiB,CAAC,EAAE,EAAE,CAAC,IAAI,sBAAsB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAA;CACvG;AACD,oBAA2B,CAAwB,EAAE,MAAc,EAAE,IAAY,EAAE,KAAU;IAC5F,MAAM,EAAE,GAAG,CAAC,IAAI,GAAG,MAAM,IAAI,KAAK,CAAA;IAClC,OAAO,iBAAiB,CAAC,KAAK,EAAE,CAAC,IAAI,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,GAAG,CAAC,GAAG,EAAE,CAAA;CACpH;AAED,gCAAuC,CAAwB,EAAE,MAAc,EAAE,IAAY,EAAE,QAAa,EAAE;IAC7G,MAAM,EAAE,GAAG,CAAC,IAAI,GAAG,MAAM,IAAI,KAAK,CAAA;IAClC,OAAO,iBAAiB,CAAC,KAAK,EAAE,CAAC,IAAI,MAAM,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,GAAG,EAAE,CAAA;CAC3F;AAED,iBAAwB,IAAY,EAAE,GAAG,MAAa;IACrD,OAAO,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAA;CACnD;;;;;ACnuCD;IAiBC,YAAqB,CAAS,EACpB,CAAS,EACT,CAAS;QAFE,MAAC,GAAD,CAAC,CAAQ;QACpB,MAAC,GAAD,CAAC,CAAQ;QACT,MAAC,GAAD,CAAC,CAAQ;QAClB,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;KACtB;IAED,KAAK,CAAC,CAAC;QACN,OAAO,IAAI,CAAC,CAAC,CAAA;KACb;IACD,KAAK,CAAC,CAAC;QACN,OAAO,IAAI,CAAC,CAAC,CAAA;KACb;IACD,KAAK,CAAC,CAAC;QACN,OAAO,IAAI,CAAC,CAAC,CAAA;KACb;IAED,OAAO,MAAM;QACZ,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;KAC1D;IAED,OAAO,QAAQ,CAAC,CAAK,EAAE,CAAK;QAC3B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAA;KACzC;;;;;IAMD,OAAO,UAAU;QAChB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA;QAC7C,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAA;QAC/B,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,SAAA,CAAC,EAAI,CAAC,CAAA,CAAC,CAAA;QACrC,OAAO,IAAI,EAAE,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAA;KAC9E;;;;;IAMD,OAAO,UAAU,CAAC,KAAa,EAAE,GAAW;QAC3C,MAAM,IAAI,KAAK,EAAE,CAAA;KACjB;IAED,OAAO,YAAY,CAAC,CAA0B;QAC7C,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KAC/B;IAED,OAAO,GAAG,CAAC,CAAK,EAAE,CAAK;QACtB,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KACzE;IAED,OAAO,GAAG,CAAC,CAAK,EAAE,CAAK;QACtB,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KACzE;IAED,OAAO,IAAI,CAAC,CAAK,EAAE,CAAK,EAAE,QAAgB;QACzC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;KACzC;IAED,OAAO,SAAS,CAAC,CAAW;QAC3B,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KAC/B;IAED,OAAO,YAAY,CAAC,CAAK,EAAE,CAAK;QAC/B,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;KACnB;IAED,OAAO,GAAG,CAAC,CAAgC,EAAE,GAAG,IAAU;QACzD,MAAM,CAAC,CAAC,YAAY,QAAQ,CAAC,CAAA;QAC7B,OAAO,IAAI,EAAE,CACZ,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EACtC,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KACxC;IAED,OAAO,cAAc,CAAC,CAAK,EAAE,CAAK,EAAE,CAAK;QACxC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACtB,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;KAC7B;IAED,OAAO,GAAG,CAAC,GAAG,EAAQ;QACrB,aAAa,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAA;QAClC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;QACvB,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA;QACjB,OAAO,CAAC,EAAE,EAAE;YACX,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACZ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACZ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;SACZ;QACD,OAAO,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;KACtB;IAED,OAAO,GAAG,CAAC,GAAG,EAAQ;QACrB,aAAa,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAA;QAClC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACzC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAA;QACjB,OAAO,CAAC,EAAE,EAAE;YACX,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACZ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACZ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;SACZ;QACD,OAAO,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;KACtB;;;;;;;;;;;IAYD,OAAO,IAAI,CAAsC,KAAW,EAC3D,IAAQ,EACR,WAAmB,CAAC,EACpB,YAAoB,CAAC,EACrB,UAAkB,KAAK,CAAC,MAAM,GAAG,QAAQ;;QAEzC,MAAM,MAAM,GAAG,IAAI,IAAI,IAAI,YAAY,CAAC,CAAC,GAAG,OAAO,CAAQ,CAAA;QAC3D,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,SAAS,IAAI,OAAO,GAAG,CAAC,EAAE,wCAAwC,EAAE,MAAM,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,GAAG,CAAC,CAAC,CAAA;QAEjI,IAAI,CAAC,GAAG,OAAO,EAAE,QAAQ,GAAG,QAAQ,EAAE,SAAS,GAAG,SAAS,CAAA;QAC3D,OAAO,CAAC,EAAE,EAAE;YACX,MAAM,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAA;YAC3B,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YACzB,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YACzB,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;SACzB;QACD,OAAO,MAAM,CAAA;KACb;IAED,OAAO,MAAM,CAAC,WAAuB,EACpC,IAAW,EACX,WAAmB,CAAC,EACpB,YAAoB,CAAC,EACrB,UAAkB,CAAC,WAAW,CAAC,MAAM,GAAG,QAAQ,IAAI,CAAC;;QAErD,MAAM,MAAM,GAAG,IAAI,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA;QACzC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,SAAS,IAAI,OAAO,EAAE,oCAAoC,CAAC,CAAA;QAElF,IAAI,CAAC,GAAG,OAAO,EAAE,QAAQ,GAAG,QAAQ,EAAE,SAAS,GAAG,SAAS,CAAA;QAC3D,OAAO,CAAC,EAAE,EAAE;YACX,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,EAAE,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;SACvG;QACD,OAAO,MAAM,CAAA;KACb;IAED,OAAO,MAAM,CAAsC,KAAW,EAC7D,IAAQ,EACR,WAAmB,CAAC,EACpB,YAAoB,CAAC,EACrB,UAAkB,KAAK,CAAC,MAAM,GAAG,QAAQ;;QAEzC,MAAM,MAAM,GAAG,IAAI,IAAI,IAAI,YAAY,CAAC,CAAC,GAAG,OAAO,CAAQ,CAAA;QAC3D,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,SAAS,IAAI,OAAO,EAAE,oCAAoC,CAAC,CAAA;QAElF,IAAI,CAAC,GAAG,OAAO,EAAE,QAAQ,GAAG,QAAQ,EAAE,SAAS,GAAG,SAAS,CAAA;QAC3D,OAAO,CAAC,EAAE,EAAE;YACX,MAAM,CAAC,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAA;YAC3B,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YACzB,MAAM,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;SACzB;QACD,OAAO,MAAM,CAAA;KACb;IAED,OAAO,QAAQ,CAAC,GAAe,EAC9B,IAAW,EACX,WAAgB,CAAC,EACjB,YAAiB,CAAC,EAClB,UAAe,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,CAAC,GAAG,SAAS;;QAEpF,IAAI,GAAG,IAAI,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA;QACjC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,SAAS,IAAI,OAAO,EAAE,oCAAoC,CAAC,CAAA;QAChF,MAAM,CAAC,GAAG,CAAC,MAAM,GAAG,QAAQ,IAAI,OAAO,GAAG,CAAC,EAAE,oCAAoC,CAAC,CAAA;QAElF,IAAI,CAAC,GAAG,OAAO,EAAE,QAAQ,GAAG,QAAQ,EAAE,SAAS,GAAG,SAAS,CAAA;QAC3D,OAAO,CAAC,EAAE,EAAE;YACX,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;SAC/D;QACD,OAAO,IAAI,CAAA;KACX;IAED,OAAO,SAAS,CAAC,CAAK,EAAE,KAAc;QACrC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAA;KACzB;IAED,OAAO,KAAK,CAAC,MAAc,EAAE,GAAU,EAAE,IAAY,CAAC;QACrD,OAAO,IAAI,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;KAChE;;;;;;IAOD,OAAO,MAAM,CAAC,SAAgB,EAAE,QAAe,EAAE,MAAM,GAAG,CAAC;QAC1D,OAAO,IAAI,EAAE,CACZ,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EACjD,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,EACjD,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAA;KAC7B;IAED,OAAO,WAAW,CAAC,CAAK,EAAE,CAAK,EAAE,CAAK;QACrC,MAAM,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAClB,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,CAAA;KACrC;IAED,SAAS,CAAC,QAAgB,aAAa,GAAG,GAAG;QAC5C,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,IAAI,KAAK,CAAC,CAAA;KACvD;IAED,EAAE,MAAM,CAAC,QAAQ,CAAC;QACjB,MAAM,IAAI,CAAC,CAAC,CAAA;QACZ,MAAM,IAAI,CAAC,CAAC,CAAA;QACZ,MAAM,IAAI,CAAC,CAAC,CAAA;KACZ;IAED,CAAC,CAAC,KAAU;QACX,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAA;QAC/B,OAAO,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;KAC3D;IAED,OAAO;QACN,OAAO,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;KACxC;IAED,GAAG;QACF,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;KACnE;IAED,IAAI,CAAC,CAAK;QACT,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KACvD;;;;;;;IAQD,KAAK,CAAC,CAAK;QACV,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KACvD;;;;IAKD,IAAI,CAAC,CAAK;QACT,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KACvD;;;;IAKD,KAAK,CAAC,CAAK;QACV,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KACvD;IAED,EAAE,CAAC,CAAK;QACP,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;KACpB;IAED,KAAK,CAAC,MAAc;QACnB,aAAa,CAAC,MAAM,CAAC,CAAA;QACrB,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAA;KAChE;IAED,GAAG,CAAC,CAAS;QACZ,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;KACjD;;;;;IAMD,GAAG,CAAC,CAAK;QACR,UAAU,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;QACjB,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;KACjD;;;;IAKD,IAAI,CAAC,CAAK,EAAE,CAAS;QACpB,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;KACxC;IAED,OAAO;QACN,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;KACrB;IAED,UAAU,CAAC,CAAK;QACf,aAAa,CAAC,CAAC,CAAC,CAAA;;QAEhB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KAC3D;IAED,iBAAiB,CAAC,CAAK;QACtB,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;KAC9B;;;;;;;;;;;;;;;;;;;;;;;;;IA2BD,QAAQ;QACP,OAAO,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAA;KAC9C;IAED,iBAAiB;QAChB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;QACtB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;YACzC,OAAO,EAAE,CAAC,CAAC,CAAA;SACX;aACI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,EAAE;YAC9C,OAAO,EAAE,CAAC,CAAC,CAAA;SACX;aACI;YACJ,OAAO,EAAE,CAAC,CAAC,CAAA;SACX;KACD;IAED,KAAK,CAAC,CAAK,EAAE,CAAS;QACrB,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAA;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;QAC7B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;KAC/F;IAED,GAAG,CAAC,CAAK;QACR,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KAClF;IAED,GAAG,CAAC,CAAK;QACR,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KAClF;IAED,MAAM,CAAC,CAAM;QACZ,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;KACnE;;;;;;;;;;;IAYD,KAAK,CAAC,CAAK;QACV,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KACpG;;;;;IAMD,UAAU,KAAS,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAA,EAAE;IAEvE,UAAU;QACT,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;KACvC;IAED,UAAU;QACT,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;KACvC;IAED,OAAO,CAAC,IAAS,CAAC;QACjB,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;KAC3C;;;;;IAMD,gBAAgB;QACf,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;YAC/B,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBAChB,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;aAC9B;;YAED,OAAO,EAAE,CAAC,CAAC,CAAA;SACX;QACD,OAAO,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;KACjC;;IAGD,GAAG;QACF,OAAO,CAAC,CAAA;KACR;IAED,GAAG;QACF,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;KAC/B;IAED,OAAO;QACN,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;KACjC;IAED,QAAQ;QACP,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;;KAEjC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAA;KACxC;IAED,EAAE;QACD,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;KAChC;;;;;IAMD,GAAG,CAAC,CAA+C;QAClD,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA;KAC7D;IAED,QAAQ,CAAC,aAAkC;QAC1C,aAAa,GAAG,aAAa,IAAI,oBAAoB,CAAA;QACrD,OAAO,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;YAC1B,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAA;KACpE;IAED,OAAO,CAAC,CAAK;QACZ,MAAM,CAAC,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,CAAA;QAC7B,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAA;QACrB,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAA;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;KACvE;;;;;;;;;;IAWD,mBAAmB,CAAC,MAAU,EAAE,OAAW;QAC1C,MAAM,CAAC,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,CAAA;QAC7B,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;QAC9B,OAAO,CAAC,MAAM,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;;;;QAInC,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;KACpE;;;;;;;;IASD,YAAY,CAAC,MAAU;QACtB,aAAa,CAAC,MAAM,CAAC,CAAA;QACrB,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAA;QACrB,MAAM,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAA;;;QAGvB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;QAC5B,OAAO,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,OAAO,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,CAAA;KACvD;IAED,iBAAiB,CAAC,MAAU;QAC3B,aAAa,CAAC,MAAM,CAAC,CAAA;QACrB,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,eAAe,CAAC,CAAA;QACtC,MAAM,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,iBAAiB,CAAC,CAAA;QAC1C,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAA;KAC5B;IAED,cAAc,CAAC,KAAS;QACvB,aAAa,CAAC,KAAK,CAAC,CAAA;QACpB,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAA;QACrB,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAA;;;QAGtB,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QAC3B,OAAO,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;KAC3D;;;;;;;IAQD,MAAM;QACL,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;;KAEzC;;;;IAKD,KAAK;QACJ,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;KACtB;;;;;IAMD,IAAI,CAAC,GAAQ;QACZ,IAAI,GAAG,KAAK,IAAI;YACf,OAAO,IAAI,CAAA;QACZ,IAAI,EAAE,GAAG,YAAY,EAAE,CAAC;YACvB,OAAO,KAAK,CAAA;QACb,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAA;KAClE;;;;IAKD,cAAc,CAAC,CAAK;QACnB,OAAO,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;KACzE;;;;;IAMD,IAAI;QACH,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,8BAA8B,CAAC,CAAA;QACrD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;KAC9B;;;;;;IAOD,QAAQ,CAAC,SAAiB;QACzB,aAAa,CAAC,SAAS,CAAC,CAAA;QACxB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;KAC5C;;;;;;;;;;IAWD,WAAW,CAAC,CAAK;QAChB,aAAa,CAAC,CAAC,CAAC,CAAA;;QAEhB,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KACtC;IAED,YAAY,CAAC,CAAK;QACjB,aAAa,CAAC,CAAC,CAAC,CAAA;;QAEhB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KAClD;IAED,aAAa,CAAC,EAAM;QACnB,aAAa,CAAC,EAAE,CAAC,CAAA;QACjB,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;;QAEvB,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;KACzC;;;;;;;;;;IAWD,cAAc,CAAC,CAAK;QACnB,aAAa,CAAC,CAAC,CAAC,CAAA;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,SAAA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAI,CAAC,CAAA,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;KAC9D;;;;;;;;;;IAWD,eAAe,CAAC,EAAM;QACrB,aAAa,CAAC,EAAE,CAAC,CAAA;QACjB,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,SAAA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAI,CAAC,CAAA,CAAC,CAAA;KACpD;;;;;;IAOD,SAAS,CAAC,MAAc;QACvB,aAAa,CAAC,MAAM,CAAC,CAAA;QACrB,OAAO,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;KAChC;;;;;IAMD,MAAM;QACL,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;KAC7D;;;;IAKD,aAAa;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;KACrE;;;;IAKD,aAAa;QACZ,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;KACrE;IAED,SAAS;QACR,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QAC/E,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;KACrE;IAED,SAAS;QACR,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QAC/E,OAAO,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;KAClE;IAED,WAAW,CAAC,GAAoB,EAAE,EAAU;QAC3C,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC,CAAA;QAC/C,aAAa,CAAC,EAAE,CAAC,CAAA;QACjB,IAAI,GAAG,IAAI,GAAG,EAAE;YACf,OAAO,IAAI,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;SACjC;QACD,IAAI,GAAG,IAAI,GAAG,EAAE;YACf,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;SACjC;QACD,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAA;KACjC;IAED,QAAQ;QACP,0BAAuB,CAAS;YAC/B,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;SACxB;QAED,OAAO,CAAC,EAAE,CAACC,gBAAa,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAGA,gBAAa,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,GAAGA,gBAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;KAC5F;IAED,SAAS;;;;;;;;;QAUR,MAAM,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,EACvC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,EAClC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC,EAClC,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC,CAAA;QACrC,OAAO;YACN,CAAC,EAAE,EAAE,CAAC;YACN,CAAC,EAAE,EAAE,GAAG,GAAG,CAAC;YACZ,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC;YACX,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC;YACjB,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;YACV,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;YAChB,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;YACf,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;SACrB,CAAA;KACD;;;;;;;;;;;IAaD,SAAS,CAAC,KAAS;QAClB,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE;YACtB,OAAO,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAA;SACvB;aAAM,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAA;SACvB;aAAM;YACN,OAAO,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAA;SACvB;KACD;IAED,UAAU,CAAC,KAAS,EAAE,MAAc,aAAa;QAChD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;YAC/B,OAAO,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAA;SACvB;aAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;YACtC,OAAO,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAA;SACvB;aAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;YACtC,OAAO,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAA;SACvB;aAAM;YACN,OAAO,CAAC,CAAA;SACR;KACD;IAED,QAAQ;QACP,OAAO;YACN,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YACjC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;SACtC,CAAA;KACD;;AAvwBe,IAAC,GAAO,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACvB,IAAC,GAAO,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACvB,IAAC,GAAO,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACvB,IAAC,GAAO,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACvB,KAAE,GAAO,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACxB,MAAG,GAAO,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;AACzB,MAAG,GAAO,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAA;AAC9C,QAAK,GAAS,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;AAChC,UAAO,GAAG,IAAIC,OAAS,EAAc;KACnD,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC;KACjB,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC;KACjB,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC;KACjB,GAAG,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC;KACjB,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC;KACrB,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;AA2wBxB,WAAkB,CAAM,EAAE,CAAO,EAAE,CAAO;IACzC,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;QAC1B,OAAO,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;KAC1D;SAAM,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;QACjC,OAAO,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;KAC9C;SAAM,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;QACjC,IAAI,QAAQ,CAAC,CAAC,IAAI,QAAQ,EAAE;YAC3B,IAAI,CAAC,YAAY,EAAE,EAAE;;gBAEpB,OAAO,CAAC,CAAA;aACR;iBAAM,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,YAAY,YAAY,IAAI,CAAC,YAAY,YAAY,EAAE;gBACxF,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;oBAClB,OAAO,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;iBACpD;qBAAM,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE;oBACzB,OAAO,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;iBACnE;aACD;iBAAM,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,EAAE;gBACpC,OAAO,IAAI,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;aAC/E;SACD;KACD;IACD,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,SAAS,CAAC,CAAA;CAChD;;MCrzBY,IAAI,GAAG,EAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAA;AACzC,MAAa,IAAI,GAAG,EAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAA;AACzC,MAAa,IAAI,GAAG,EAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAA;AAEzC;IACC,MAAM,CAAC,KAAiC;QACvC,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAA;KACvC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;KACxB;IAED,OAAO;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;KACxB;IAED,OAAO;QACN,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;KACxB;IAED,OAAO,CAAC,KAAiC;QACxC,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAA;KACxC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;KACvC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;KACvC;IAED,SAAS;QACR,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;KACvC;IAID,SAAS,CAAC,GAAG,IAAW;QACvB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,EACxD,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,YAAY,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;KAChD;IAID,KAAK,CAAC,GAAG,IAAW;QACnB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,EACpD,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;KAC5C;IAED,OAAO,CAAC,OAAc;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,YAAY,OAAO,GAAG,CAAC,CAAA;KAClE;IAED,OAAO,CAAC,OAAc;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,YAAY,OAAO,GAAG,CAAC,CAAA;KAClE;IAED,OAAO,CAAC,OAAc;QACrB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,YAAY,OAAO,GAAG,CAAC,CAAA;KAClE;IAED,MAAM,CAAC,cAAkB,EAAE,YAAgB,EAAE,OAAc;QAC1D,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,cAAc,EAAE,YAAY,EAAE,OAAO,CAAC,EACzE,OAAO,CAAC,SAAS,EAAE,cAAc,EAAE,YAAY,EAAE,OAAO,CAAC,CAAC,CAAA;KAC3D;IAED,QAAQ,CAAC,IAAQ,EAAE,EAAM;QACxB,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,OAAO,CAAC,WAAW,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,CAAA;KAC5E;IAED,QAAQ,CAAC,KAAY,EAAE,IAAW,EAAE,KAAY;QAC/C,MAAM,IAAI,KAAK,EAAE,CAAA;;KAEjB;IAED,MAAM,CAAC,CAAS,EAAE,CAAS;QAC1B,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YAC5B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;YACV,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;SAAC,CAAC,CAAC,CAAA;KACd;IAED,GAAG;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;KAC7B;IAED,GAAG;QACF,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;KAC7B;IASD,KAAK,CAAC,OAAyE,EAAE,GAAG,IAAW;QAC9F,IAAI,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAA;;QAEvC,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,aAAa,CAAC,SAAS,EAAE;YAC5F,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAA;SACpC;QACD,IAAI,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;YACnD,OAAO,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SACxD;aAAM;YACN,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;SACjE;KACD;CACD;;AC1GD,MAAM,MAAEC,IAAE,OAAEC,KAAG,EAAE,GAAG,IAAI,CAAA;AAExB,QAAgB,SAAQ,MAAM;;;;;IA6B7B,YAAY,GAAG,QAA+B;QAC7C,IAAI,CAAC,CAAA;QACL,IAAI,CAAC,IAAI,SAAS,CAAC,MAAM,EAAE;YAC1B,CAAC,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,CAAA;SACxB;aAAM;YACN,MAAM,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,EAAE,SAAS,CAAC,CAAA;YAC7D,MAAM,CAAC,SAAS,CAAC,MAAM,IAAI,EAAE,EAAE,wBAAwB,GAAG,SAAS,CAAC,MAAM,CAAC,CAAA;YAC3E,CAAC,GAAG,IAAI,YAAY,CAAC,SAAS,CAAC,CAAA;SAC/B;QACD,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;KACd;IAED,IAAI,CAAC;QACJ,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;KACjC;IAED,IAAI,CAAC;QACJ,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;KACjC;IAED,IAAI,CAAC;QACJ,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;KACjC;IAED,IAAI,CAAC;QACJ,OAAO,IAAI,CAAC,cAAc,EAAE,CAAA;KAC5B;;;;;;;IAQD,OAAO,OAAO,CAAC,MAAU,EAAE,MAAW;QACrC,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAA;QACtB,CAAC,MAAM,IAAI,UAAU,CAAC,EAAE,EAAE,MAAM,CAAC,CAAA;QACjC,MAAM,CAAC,MAAM,IAAI,MAAM,EAAE,kBAAkB,CAAC,CAAA;QAC5C,MAAM,GAAG,MAAM,IAAI,IAAI,EAAE,EAAE,CAAA;QAC3B,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAA;;;;QAKhC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QAC5I,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QAC7I,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACxI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAEvI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QAC7I,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;QAC5I,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACzI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAEtI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAC1I,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAC3I,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACzI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAEtI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAC5I,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAC3I,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QAC1I,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,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AAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAEhE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAC/D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAC/D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAChE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAEhE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACjE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACjE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QAEnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACpE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,G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,MAAM,mBAAmB,GAAG;IACxB,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,CAAC,EAAE,CAAC;IACJ,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,EAAE;IACN,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,EAAE,EAAE,CAAC;IACL,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,EAAE;IACP,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,EAAE;IACP,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;IACN,GAAG,EAAE,CAAC;C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M,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAC5B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAC9B,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;CACjC,CAAC;;AAEF,SAAS,eAAe,CAAC,OAAO,EAAE;IAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC9C,MAAM,KAAK,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QAC/B,IAAI,OAAO,IAAI,KAAK,CAAC,KAAK,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE;YAC/C,OAAO,CAAC,CAAC;SACZ;KACJ;;IAED,OAAO,CAAC,CAAC,CAAC;CACb;;;AAGD,SAAS,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE;IAChC,MAAM,GAAG,GAAG,EAAE,CAAC;IACf,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACxC,GAAG,CAAC,OAAO,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAC9B,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACnC,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IACpC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IACnC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAC7B,GAAG,CAAC,eAAe,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACrC,GAAG,CAAC,eAAe,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACrC,GAAG,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACvC,GAAG,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACvC,GAAG,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACvC,GAAG,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACvC,GAAG,CAAC,mBAAmB,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACzC,GAAG,CAAC,mBAAmB,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACzC,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACpC,GAAG,CAAC,kBAAkB,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACxC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IAClC,GAAG,CAAC,MAAM,GAAG,EAAE,CAAC;IAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;QACzB,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;KACjC;;IAED,GAAG,CAAC,eAAe,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACrC,GAAG,CAAC,eAAe,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACrC,GAAG,CAAC,eAAe,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACrC,GAAG,CAAC,eAAe,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACrC,GAAG,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;IAChG,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAClC,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IACvC,GAAG,CAAC,eAAe,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IACtC,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACnC,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACpC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IAClC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAClC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IACnC,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE;QAClB,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;QACtC,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;KACzC;;IAED,IAAI,GAAG,CAAC,OAAO,IAAI,CAAC,EAAE;QAClB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;QAC9B,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;QAChC,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QACpC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QAClC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;KACtC;;IAED,OAAO,GAAG,CAAC;CACd;;AAED,SAAS,YAAY,CAAC,OAAO,EAAE;IAC3B,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;QAC3B,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC;QAChD,CAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAChD,CAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QACjD,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAChD,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAC1C,CAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC;QACpD,CAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC;QACpD,CAAC,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACpD,CAAC,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC;QACtD,CAAC,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC;QACtD,CAAC,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC;QACtD,CAAC,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACtD,CAAC,IAAI,EAAE,qBAAqB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC;QACxD,CAAC,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC;QAClD,CAAC,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAC;QACvD,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7C,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7C,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QACzC,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7C,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAC3C,CAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAClD,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAC3C,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7C,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAC1C,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC;QAC1C,CAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAClD,CAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAClD,CAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAClD,CAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAClD,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,CAAC;QACrD,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QACpD,CAAC,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QACnD,CAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAChD,CAAC,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACjD,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAChD,CAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACnD,CAAC,IAAI,EAAE,kBAAkB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACnD,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC3C,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7C,CAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QACjD,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;KACnD,EAAE,OAAO,CAAC,CAAC;CACf;;AAED,UAAe,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,EAAE,CAAC;;ACxP5F;AACA,AAKA;;AAEA,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;IACjC,MAAM,IAAI,GAAG,EAAE,CAAC;IAChB,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACxC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC;IAChC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IAClC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACxC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACzC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACnC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACnC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACnC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IAClC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IAClC,QAAQ,IAAI,CAAC,OAAO;QAChB,KAAK,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,EAAE,CAAC;YACnC,MAAM;QACV,KAAK,CAAC;YACF,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;YACtC,IAAI,CAAC,cAAc,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YACrD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;aAC5C;;YAED,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,MAAM,EAAE;oBAChD,MAAM,UAAU,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;oBACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC,CAAC;iBAC9C;aACJ;;YAED,MAAM;QACV,KAAK,GAAG;YACJ,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;YACtC,IAAI,CAAC,MAAM,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;gBAC1C,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;aAClC;;YAED,MAAM;KACb;IACD,OAAO,IAAI,CAAC;CACf;;AAED,SAAS,aAAa,GAAG;IACrB,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;QAC3B,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,UAAU,CAAC;QACnD,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC9C,CAAC,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACpD,CAAC,IAAI,EAAE,oBAAoB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACrD,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC9C,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;KACjD,CAAC,CAAC;CACN;;AAED,WAAe,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;;AClE9D;AACA,AAKA;AACA,MAAM,eAAe,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;;;AAGrC,eAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG;IACzC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;IAChD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACvC,IAAI,WAAW,KAAK,CAAC,EAAE;QACnB,OAAO;YACH,WAAW,EAAE,CAAC;YACd,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC5C,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE;SACnC,CAAC;KACL,MAAM,IAAI,WAAW,KAAK,CAAC,EAAE;QAC1B,OAAO;YACH,WAAW,EAAE,CAAC;YACd,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC5C,UAAU,EAAE,IAAI,CAAC,iBAAiB,EAAE;SACvC,CAAC;KACL;IACD,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,wCAAwC,CAAC,CAAC;CAC7F,CAAC;;;AAGF,eAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG;IACzC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACvC,KAAK,CAAC,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAE,iEAAiE,CAAC,CAAC;IACrG,OAAO;QACH,WAAW,EAAE,WAAW;QACxB,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;QAC5C,SAAS,EAAE,IAAI,CAAC,gBAAgB,EAAE;KACrC,CAAC;CACL,CAAC;;;AAGF,eAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG;IACzC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACvC,KAAK,CAAC,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAE,kEAAkE,CAAC,CAAC;IACtG,OAAO;QACH,WAAW,EAAE,WAAW;QACxB,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;QAC5C,aAAa,EAAE,IAAI,CAAC,gBAAgB,EAAE;KACzC,CAAC;CACL,CAAC;;;AAGF,eAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG;IACzC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACvC,KAAK,CAAC,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAE,iDAAiD,CAAC,CAAC;IACrF,OAAO;QACH,WAAW,EAAE,WAAW;QACxB,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;QAC5C,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW;YAC3C,OAAO;gBACH,QAAQ,EAAE,IAAI,CAAC,WAAW,EAAE;gBAC5B,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;aAC3D,CAAC;SACL,CAAC;KACL,CAAC;CACL,CAAC;;AAEF,MAAM,gBAAgB,GAAG;IACrB,aAAa,EAAE,MAAM,CAAC,MAAM;IAC5B,eAAe,EAAE,MAAM,CAAC,MAAM;CACjC,CAAC;;;AAGF,eAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG;IACzC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;IAChD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;;IAEvC,IAAI,WAAW,KAAK,CAAC,EAAE;QACnB,OAAO;YACH,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC5C,QAAQ,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW;gBACvC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBACtC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBACtC,OAAO;oBACH,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,CAAC,CAAC;oBAC3C,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,gBAAgB,CAAC;iBACpE,CAAC;aACL,CAAC;SACL,CAAC;KACL,MAAM,IAAI,WAAW,KAAK,CAAC,EAAE;QAC1B,OAAO;YACH,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC5C,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC5C,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW;gBACxC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBACtC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;gBACtC,OAAO;oBACH,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,GAAG,CAAC,CAAC;oBAC7C,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,gBAAgB,CAAC;iBACpE,CAAC;aACL,CAAC;SACL,CAAC;KACL,MAAM,IAAI,WAAW,KAAK,CAAC,EAAE;QAC1B,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACtC,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACtC,OAAO;YACH,WAAW,EAAE,WAAW;YACxB,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YACtE,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,gBAAgB,CAAC;SACpE,CAAC;KACL;IACD,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,2CAA2C,CAAC,CAAC;CAChG,CAAC;;;AAGF,eAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG;IACzC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;IAChD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACvC,IAAI,WAAW,KAAK,CAAC,EAAE;QACnB,OAAO;YACH,WAAW,EAAE,CAAC;YACd,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC5C,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW;gBAC5C,OAAO;oBACH,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE;oBACjC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;oBAClD,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE;oBACjC,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;iBACxD,CAAC;aACL,CAAC;SACL,CAAC;KACL,MAAM,IAAI,WAAW,KAAK,CAAC,EAAE;QAC1B,OAAO;YACH,WAAW,EAAE,CAAC;YACd,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YAC5C,iBAAiB,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YACrD,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YACjD,iBAAiB,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;YACrD,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,WAAW;gBAC5C,OAAO;oBACH,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE;oBACjC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;oBAClD,SAAS,EAAE,IAAI,CAAC,eAAe,EAAE;oBACjC,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;iBACxD,CAAC;aACL,CAAC;SACL,CAAC;KACL,MAAM,IAAI,WAAW,KAAK,CAAC,EAAE;QAC1B,OAAO;YACH,WAAW,EAAE,CAAC;YACd,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAClE,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC9D,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAClE,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC;SACxD,CAAC;KACL;IACD,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,2CAA2C,CAAC,CAAC;CAChG,CAAC;;;AAGF,eAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG;;IAEzC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACvC,KAAK,CAAC,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAE,kEAAkE,CAAC,CAAC;IACtG,MAAM,mBAAmB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC/C,MAAM,eAAe,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;IAC/E,OAAO;QACH,WAAW,EAAE,CAAC;QACd,UAAU,EAAE,mBAAmB;QAC/B,SAAS,EAAE,eAAe,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC;KACxE,CAAC;CACL,CAAC;;;AAGF,eAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG;IACzC,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACvC,KAAK,CAAC,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAE,2FAA2F,CAAC,CAAC;IAC/H,OAAO;QACH,WAAW,EAAE,WAAW;QACxB,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;QAC5C,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAClE,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAClE,WAAW,EAAE,IAAI,CAAC,eAAe,EAAE;KACtC,CAAC;CACL,CAAC;;;AAGF,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;IACjC,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACnB,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAClC,MAAM,YAAY,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC;IACtC,KAAK,CAAC,QAAQ,CAAC,YAAY,KAAK,CAAC,EAAE,iCAAiC,CAAC,CAAC;IACtE,OAAO;QACH,OAAO,EAAE,YAAY;QACrB,OAAO,EAAE,CAAC,CAAC,eAAe,EAAE;QAC5B,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE;QAC9B,OAAO,EAAE,CAAC,CAAC,eAAe,CAAC,eAAe,CAAC;KAC9C,CAAC;CACL;;;AAGD,MAAM,cAAc,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEpC,cAAc,CAAC,CAAC,CAAC,GAAG,SAAS,WAAW,CAAC,QAAQ,EAAE;IAC/C,IAAI,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAE;QAC5B,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,mBAAmB,EAAE;YACxC,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YAC/C,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC/E,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,YAAY,CAAC;SACvE,CAAC,CAAC;KACN,MAAM;QACH,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,mBAAmB,EAAE;YACxC,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;YAC/C,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;SAClF,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,YAAY,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;KAClE;IACD,KAAK,CAAC,IAAI,CAAC,2CAA2C,CAAC,CAAC;CAC3D,CAAC;;AAEF,cAAc,CAAC,CAAC,CAAC,GAAG,SAAS,WAAW,CAAC,QAAQ,EAAE;IAC/C,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAE,sCAAsC,CAAC,CAAC;IACjF,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,mBAAmB,EAAE;QACxC,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KAClF,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,aAAa,EAAE,SAAS,YAAY,EAAE;QAC9E,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,mBAAmB,EAAE,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,CAAC;KAC5F,CAAC,CAAC,CAAC,CAAC;CACR,CAAC;;AAEF,cAAc,CAAC,CAAC,CAAC,GAAG,SAAS,WAAW,CAAC,QAAQ,EAAE;IAC/C,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAE,sCAAsC,CAAC,CAAC;IACjF,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,mBAAmB,EAAE;QACxC,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;KAClF,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,YAAY,EAAE,SAAS,WAAW,EAAE;QAC5E,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,SAAS,CAAC,UAAU,EAAE,WAAW,EAAE,SAAS,QAAQ,EAAE;YACnG,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,eAAe;gBAClC,CAAC,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;iBAC7D,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;aAC9F,CAAC;SACL,CAAC,CAAC,CAAC;KACP,CAAC,CAAC,CAAC,CAAC;CACR,CAAC;;AAEF,SAAS,aAAa,CAAC,IAAI,EAAE;IACzB,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;QAC3B,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC;QAChD,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3E,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC9E,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,cAAc,CAAC,CAAC;KAC9F,CAAC,CAAC;CACN;;AAED,WAAe,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;;AC/P9D;AACA,AAMA;;;AAGA,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;IACjC,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACxC,MAAM,YAAY,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACpC,KAAK,CAAC,QAAQ,CAAC,YAAY,KAAK,CAAC,EAAE,iCAAiC,CAAC,CAAC;IACtE,CAAC,CAAC,UAAU,EAAE,CAAC;IACf,CAAC,CAAC,UAAU,EAAE,CAAC;IACf,MAAM,WAAW,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;;IAEnC,MAAM,IAAI,GAAG,EAAE,CAAC;IAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;QAClC,MAAM,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;QACzB,MAAM,UAAU,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;QAClC,MAAM,UAAU,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;QAClC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,UAAU,EAAE,UAAU,CAAC,CAAC;;QAE/D,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;KACpB;IACD,OAAO,IAAI,CAAC;CACf;;AAED,SAAS,aAAa,CAAC,IAAI,EAAE;IACzB,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;IACzC,IAAI,UAAU,GAAG,EAAE,CAAC;IACpB,MAAM,gBAAgB,GAAG,EAAE,GAAG,OAAO,GAAG,EAAE,CAAC;;IAE3C,MAAM,MAAM,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;QACnC,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QAC1C,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC;QACxC,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,gBAAgB,CAAC;QACxD,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC;KACnD,CAAC,CAAC;;IAEH,KAAK,IAAI,GAAG,IAAI,IAAI,EAAE;QAClB,MAAM,GAAG,GAAG,UAAU,CAAC,MAAM,CAAC;QAC9B,UAAU,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;;QAExB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,MAAM,GAAG,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;QAClE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,SAAS,GAAG,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,gBAAgB,GAAG,GAAG,CAAC,CAAC,CAAC;QAC1F,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,SAAS,GAAG,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;KACvF;;IAED,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,UAAU,CAAC,CAAC,CAAC;;IAE/E,OAAO,MAAM,CAAC;CACjB;;AAED,WAAe,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;;ACxD9D;AACA,AAoBA;AACA,SAASE,MAAI,CAAC,CAAC,EAAE;IACb,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CACxC;;AAED,SAAS,eAAe,CAAC,KAAK,EAAE;IAC5B,OAAO,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAC3B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;;IAED,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACtC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;aACjB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;aACnB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;aAClB,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KACtB;;IAED,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACvB,OAAO,GAAG,CAAC;CACd;;AAED,SAAS,eAAe,CAAC,GAAG,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE;IACpD,OAAO,IAAI,KAAK,CAAC,MAAM,CAAC,cAAc,EAAE;QACpC,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,KAAK,SAAS,GAAG,GAAG,GAAG,EAAE,CAAC;QAC/D,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,CAAC,CAAC;QAC/E,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,KAAK,SAAS,GAAG,MAAM,GAAG,CAAC,CAAC;QACzE,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,KAAK,SAAS,GAAG,MAAM,GAAG,CAAC,CAAC;KAC5E,CAAC,CAAC;CACN;;AAED,SAAS,aAAa,CAAC,MAAM,EAAE;IAC3B,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;QACjC,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC;QAC7C,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAC7C,CAAC,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QAC/C,CAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;QACjD,CAAC,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;KACjD,CAAC,CAAC;IACH,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACrB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC;IAC/B,MAAM,eAAe,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAEA,MAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1D,IAAI,CAAC,WAAW,GAAG,EAAE,GAAG,eAAe,CAAC;IACxC,IAAI,CAAC,aAAa,GAAGA,MAAI,CAAC,eAAe,CAAC,CAAC;IAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;;IAEzD,MAAM,YAAY,GAAG,EAAE,CAAC;IACxB,MAAM,WAAW,GAAG,EAAE,CAAC;;IAEvB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,eAAe,EAAE,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IAC3E,OAAO,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QACrB,MAAM,IAAI,CAAC,CAAC;QACZ,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;KAC/D;;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACvC,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QACpB,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,YAAY,GAAG,CAAC,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC;QACtF,MAAM,WAAW,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;QAC/B,MAAM,WAAW,GAAG,eAAe,CAAC,CAAC,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;QACnG,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,WAAW,CAAC,GAAG,GAAG,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC;QACjG,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,SAAS,GAAG,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QAC3E,MAAM,IAAI,WAAW,CAAC;QACtB,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,8CAA8C,CAAC,CAAC;QAC/E,OAAO,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;YACrB,MAAM,IAAI,CAAC,CAAC;YACZ,WAAW,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/D;KACJ;;;IAGD,YAAY,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,EAAE;QAC/B,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE;YAC7B,OAAO,CAAC,CAAC;SACZ,MAAM;YACH,OAAO,CAAC,CAAC,CAAC;SACb;KACJ,CAAC,CAAC;;IAEH,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;IAC/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAC9C,OAAO,IAAI,CAAC;CACf;;;;;AAKD,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,eAAe,EAAE;IAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACtC,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,UAAU,GAAG,CAAC,EAAE;YAChB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAC1C,OAAO,KAAK,CAAC,UAAU,EAAE,CAAC;SAC7B;KACJ;;IAED,OAAO,eAAe,CAAC;CAC1B;;AAED,SAAS,OAAO,CAAC,EAAE,EAAE;IACjB,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QACnC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;KAChB;;IAED,OAAO,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC;CAC1B;;;;AAID,SAAS,eAAe,CAAC,IAAI,EAAE;IAC3B,MAAM,KAAK,GAAG,EAAE,CAAC;IACjB,MAAM,KAAK,GAAG,EAAE,CAAC;IACjB,MAAM,KAAK,GAAG,EAAE,CAAC;IACjB,MAAM,KAAK,GAAG,EAAE,CAAC;IACjB,MAAM,aAAa,GAAG,EAAE,CAAC;IACzB,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,iBAAiB,GAAG,EAAE,CAAC;IAC7B,IAAI,cAAc,CAAC;IACnB,IAAI,aAAa,GAAG,CAAC,CAAC;IACtB,IAAI,eAAe,GAAG,CAAC,CAAC;IACxB,IAAI,eAAe,GAAG,CAAC,CAAC;IACxB,IAAI,eAAe,GAAG,CAAC,CAAC;IACxB,IAAI,eAAe,GAAG,CAAC,CAAC;;IAExB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC5C,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACjC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;;QAElC,IAAI,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,kCAAkC,CAAC,CAAC;SAC1F;;QAED,IAAI,cAAc,GAAG,OAAO,IAAI,cAAc,KAAK,SAAS,EAAE;;YAE1D,IAAI,OAAO,GAAG,CAAC,EAAE;gBACb,cAAc,GAAG,OAAO,CAAC;aAC5B;SACJ;;QAED,IAAI,aAAa,GAAG,OAAO,EAAE;YACzB,aAAa,GAAG,OAAO,CAAC;SAC3B;;QAED,MAAM,QAAQ,GAAG,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,QAAQ,GAAG,EAAE,EAAE;YACf,eAAe,IAAI,CAAC,IAAI,QAAQ,CAAC;SACpC,MAAM,IAAI,QAAQ,GAAG,EAAE,EAAE;YACtB,eAAe,IAAI,CAAC,IAAI,QAAQ,GAAG,EAAE,CAAC;SACzC,MAAM,IAAI,QAAQ,GAAG,EAAE,EAAE;YACtB,eAAe,IAAI,CAAC,IAAI,QAAQ,GAAG,EAAE,CAAC;SACzC,MAAM,IAAI,QAAQ,GAAG,GAAG,EAAE;YACvB,eAAe,IAAI,CAAC,IAAI,QAAQ,GAAG,EAAE,CAAC;SACzC,MAAM;YACH,MAAM,IAAI,KAAK,CAAC,2DAA2D,CAAC,CAAC;SAChF;;QAED,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE,SAAS;QACvC,MAAM,OAAO,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;QACnC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;QAC/C,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC;QACjD,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;KAC1C;;IAED,MAAM,OAAO,GAAG;QACZ,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;QACjC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;QACjC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;QACjC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;QACjC,eAAe,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,aAAa,CAAC;QACpD,eAAe,EAAE,OAAO,CAAC,aAAa,CAAC;QACvC,kBAAkB,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,gBAAgB,CAAC;QAC1D,kBAAkB,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,gBAAgB,CAAC;QAC1D,mBAAmB,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,iBAAiB,CAAC;KAC/D,CAAC;IACF,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACjC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;;IAEnC,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,KAAK,EAAE,CAAC;QACR,UAAU,EAAE,IAAI,CAAC,UAAU;QAC3B,IAAI,EAAE,OAAO,CAAC,IAAI;QAClB,IAAI,EAAE,OAAO,CAAC,IAAI;QAClB,IAAI,EAAE,OAAO,CAAC,IAAI;QAClB,IAAI,EAAE,OAAO,CAAC,IAAI;QAClB,aAAa,EAAE,CAAC;QAChB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;KAC1C,CAAC,CAAC;;IAEH,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,QAAQ,EAAE,OAAO,CAAC,QAAQ;QAC1B,SAAS,EAAE,OAAO,CAAC,SAAS;QAC5B,eAAe,EAAE,OAAO,CAAC,eAAe;QACxC,kBAAkB,EAAE,OAAO,CAAC,kBAAkB;QAC9C,mBAAmB,EAAE,OAAO,CAAC,mBAAmB;QAChD,UAAU,EAAE,OAAO,CAAC,kBAAkB,IAAI,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;QACtE,gBAAgB,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;KACvC,CAAC,CAAC;;IAEH,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;;IAEhD,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;QACtB,aAAa,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC;QAClD,aAAa,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa;QAC5C,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,YAAY;QAC1C,gBAAgB,EAAE,cAAc;QAChC,eAAe,EAAE,aAAa;QAC9B,eAAe,EAAE,eAAe;QAChC,eAAe,EAAE,eAAe;QAChC,eAAe,EAAE,eAAe;QAChC,eAAe,EAAE,eAAe;QAChC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW;;;;;QAKxC,aAAa,EAAE,OAAO,CAAC,QAAQ;QAC/B,cAAc,EAAE,OAAO,CAAC,SAAS;QACjC,YAAY,EAAE,CAAC;QACf,WAAW,EAAE,OAAO,CAAC,IAAI;QACzB,YAAY,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC;QACpC,gBAAgB,EAAE,CAAC;QACnB,QAAQ,EAAE,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI;QACrF,UAAU,EAAE,cAAc,CAAC,IAAI,EAAE,2BAA2B,EAAE,OAAO,CAAC,CAAC,IAAI;QAC3E,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;QACzC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;KAC1C,CAAC,CAAC;;IAEH,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;IAEzC,MAAM,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IAC5D,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAC9D,MAAM,eAAe,GAAG,iBAAiB,GAAG,GAAG,GAAG,gBAAgB,CAAC;IACnE,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;IAC3D,IAAI,CAAC,cAAc,EAAE;QACjB,cAAc,GAAG,iBAAiB,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,gBAAgB,CAAC;KAClF;;IAED,MAAM,KAAK,GAAG,EAAE,CAAC;IACjB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,EAAE;QACtB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC5B;;IAED,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;QACjB,KAAK,CAAC,QAAQ,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,GAAG,GAAG,GAAG,eAAe,CAAC,CAAC;KACtF;;IAED,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;QACvB,KAAK,CAAC,cAAc,GAAG,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;KAC/C;;IAED,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;QACxB,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;KACjD;;IAED,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE;QAC3B,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;KACvD;;IAED,MAAM,YAAY,GAAG,EAAE,CAAC;IACxB,MAAM,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;IAClD,MAAM,SAAS,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC;;IAElF,MAAM,SAAS,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;IAC9B,MAAM,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;QACnC,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;QACvC,QAAQ,EAAE,eAAe;QACzB,UAAU,EAAE,iBAAiB;QAC7B,UAAU,EAAE,gBAAgB;QAC5B,cAAc,EAAE,cAAc;QAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;QAC3B,QAAQ,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,eAAe,CAAC;KACzE,CAAC,CAAC;;IAEH,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;;;IAGzG,MAAM,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;IACjH,IAAI,SAAS,EAAE;QACX,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC1B;;IAED,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;KAC5C;IACD,IAAI,SAAS,EAAE;QACX,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;KAC1B;;IAED,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC;;;IAGxC,MAAM,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;IACjC,MAAM,QAAQ,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;IACxC,MAAM,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC;IACrC,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC5C,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,YAAY,EAAE;YACtC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,kBAAkB,GAAG,UAAU,GAAG,QAAQ,CAAC;YAChE,gBAAgB,GAAG,IAAI,CAAC;YACxB,MAAM;SACT;KACJ;;IAED,IAAI,CAAC,gBAAgB,EAAE;QACnB,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC;KACzE;;IAED,OAAO,SAAS,CAAC;CACpB;;AAED,WAAe,EAAE,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,eAAe,EAAE,eAAe,EAAE,CAAC;;ACjVtF;AACA,AAGA;AACA,SAAS,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE;;IAEzB,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,OAAO,IAAI,IAAI,IAAI,EAAE;QACjB,MAAM,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC;QACjC,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC;QAC1B,IAAI,GAAG,KAAK,GAAG,EAAE;YACb,OAAO,IAAI,CAAC;SACf,MAAM,IAAI,GAAG,GAAG,GAAG,EAAE;YAClB,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;SACnB,MAAM,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE;KAC9B;;IAED,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;CACpB;;AAED,SAAS,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE;;IAE3B,IAAI,IAAI,GAAG,CAAC,CAAC;IACb,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,OAAO,IAAI,IAAI,IAAI,EAAE;QACjB,MAAM,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC;QACjC,MAAM,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,GAAG,KAAK,KAAK,EAAE;YACf,OAAO,IAAI,CAAC;SACf,MAAM,IAAI,GAAG,GAAG,KAAK,EAAE;YACpB,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC;SACnB,MAAM,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,EAAE;KAC9B;;IAED,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;CACpB;;;;;;AAMD,SAAS,MAAM,CAAC,IAAI,EAAE,SAAS,EAAE;IAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;CAC9B;;AAED,MAAM,CAAC,SAAS,GAAG;;;;;;;;;;;IAWf,SAAS,EAAE,SAAS;;;;;;;;;;;IAWpB,SAAS,EAAE,SAAS;;;;;;;IAOpB,QAAQ,EAAE,SAAS,MAAM,EAAE;QACvB,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9C,IAAI,CAAC,MAAM,IAAI,MAAM,EAAE;YACnB,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;SACzE;QACD,OAAO,MAAM,CAAC;KACjB;;;;;;;IAOD,cAAc,EAAE,WAAW;QACvB,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;QAC3B,OAAO,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,MAAM,EAAE;YACvC,OAAO,MAAM,CAAC,GAAG,CAAC;SACrB,CAAC,CAAC;KACN;;;;;;;;IAQD,oBAAoB,EAAE,WAAW;QAC7B,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE;QACxB,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5C,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YACnC,IAAI,IAAI,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC;YACjC,IAAI,IAAI,KAAK,MAAM,EAAE,OAAO,GAAG,IAAI,CAAC;SACvC;QACD,IAAI,OAAO,EAAE,OAAO,MAAM,CAAC;KAC9B;;;;;;;;;IASD,cAAc,EAAE,SAAS,MAAM,EAAE,MAAM,EAAE;QACrC,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,MAAM,EAAE;YACR,MAAM,GAAG,MAAM,IAAI,MAAM,CAAC;YAC1B,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAC/B,MAAM,GAAG,GAAG,SAAS,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAC9C,IAAI,GAAG,IAAI,CAAC,EAAE;gBACV,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;aAC9B,MAAM,IAAI,MAAM,EAAE;gBACf,MAAM,GAAG,GAAG;oBACR,GAAG,EAAE,MAAM;oBACX,MAAM,EAAE;wBACJ,cAAc,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,eAAe,EAAE,MAAM,EAAE,cAAc,EAAE,EAAE,CAAC;wBAC1E,cAAc,EAAE,EAAE;qBACrB;iBACJ,CAAC;gBACF,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;gBACjC,OAAO,GAAG,CAAC,MAAM,CAAC;aACrB;SACJ;KACJ;;;;;;;;;;IAUD,eAAe,EAAE,SAAS,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE;QAChD,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACxD,IAAI,WAAW,EAAE;YACb,IAAI,CAAC,QAAQ,IAAI,QAAQ,KAAK,MAAM,IAAI,QAAQ,KAAK,MAAM,EAAE;gBACzD,OAAO,WAAW,CAAC,cAAc,CAAC;aACrC;YACD,MAAM,GAAG,GAAG,SAAS,CAAC,WAAW,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;YAC5D,IAAI,GAAG,IAAI,CAAC,EAAE;gBACV,OAAO,WAAW,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;aAClD,MAAM,IAAI,MAAM,EAAE;gBACf,MAAM,aAAa,GAAG;oBAClB,GAAG,EAAE,QAAQ;oBACb,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,EAAE,eAAe,EAAE,MAAM,EAAE,cAAc,EAAE,EAAE,CAAC;iBACtE,CAAC;gBACF,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC;gBAC9D,OAAO,aAAa,CAAC,OAAO,CAAC;aAChC;SACJ;KACJ;;;;;;;;;;;IAWD,eAAe,EAAE,SAAS,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;QACzD,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;QACpE,IAAI,YAAY,EAAE;YACd,IAAI,aAAa,CAAC;YAClB,MAAM,WAAW,GAAG,YAAY,CAAC,cAAc,CAAC;YAChD,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC;;;YAG9D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACzC,aAAa,GAAG,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5C,IAAI,aAAa,CAAC,GAAG,KAAK,OAAO,EAAE;oBAC/B,OAAO,aAAa,CAAC,OAAO,CAAC;iBAChC;aACJ;YACD,IAAI,MAAM,EAAE;gBACR,MAAM,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC;;gBAEjC,KAAK,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,OAAO,IAAI,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,+CAA+C,CAAC,CAAC;gBACpH,aAAa,GAAG;oBACZ,GAAG,EAAE,OAAO;oBACZ,OAAO,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,iBAAiB,EAAE,EAAE,EAAE;iBAChD,CAAC;gBACF,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAChC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxB,OAAO,aAAa,CAAC,OAAO,CAAC;aAChC;SACJ;KACJ;;;;;;;;;;;;IAYD,eAAe,EAAE,SAAS,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE;QACrE,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;QAC7E,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAI,YAAY,EAAE;YACd,IAAI,WAAW,CAAC;YAChB,MAAM,iBAAiB,GAAG,YAAY,CAAC,iBAAiB,CAAC;YACzD,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC;;YAE5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAC/C,WAAW,GAAG,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC/C,IAAI,WAAW,CAAC,UAAU,KAAK,UAAU,EAAE;oBACvC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBAC5B;aACJ;YACD,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,EAAE;gBAC/B,WAAW,GAAG;oBACV,UAAU,EAAE,UAAU;oBACtB,UAAU,EAAE,CAAC;oBACb,SAAS,EAAE,EAAE;oBACb,gBAAgB,EAAE,SAAS;iBAC9B,CAAC;gBACF,MAAM,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC;gBAChC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC7B,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9B,OAAO,CAAC,WAAW,CAAC,CAAC;aACxB;SACJ;QACD,OAAO,MAAM,CAAC;KACjB;;;;;;;;;;IAUD,cAAc,EAAE,SAAS,aAAa,EAAE;QACpC,IAAI,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;YAC5B,OAAO,aAAa,CAAC,MAAM,CAAC;SAC/B,MAAM;YACH,MAAM,MAAM,GAAG,EAAE,CAAC;YAClB,MAAM,MAAM,GAAG,aAAa,CAAC,MAAM,CAAC;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;gBAC1B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;gBACtB,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;oBAC/B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBAClB;aACJ;YACD,OAAO,MAAM,CAAC;SACjB;KACJ;;CAEJ,CAAC;;ACrRF;AACA,AAIA;;;;;;;;AAQA,SAAS,YAAY,CAAC,IAAI,EAAE;IACxB,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;CACnC;;;AAGD,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;IAC3B,MAAM,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;IACrB,IAAI,CAAC,KAAK,GAAG,CAAC,MAAM,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;IACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,KAAK,CAAC,EAAE;KAC3C;IACD,OAAO,IAAI,CAAC;CACf;;;AAGD,SAAS,cAAc,CAAC,WAAW,EAAE,MAAM,EAAE,eAAe,EAAE;IAC1D,MAAM,SAAS,GAAG,WAAW,CAAC,SAAS,CAAC;IACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACvC,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,QAAQ,CAAC,WAAW,KAAK,MAAM,EAAE;YACjC,OAAO,QAAQ,CAAC;SACnB;KACJ;IACD,IAAI,eAAe,EAAE;QACjB,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAChC,OAAO,eAAe,CAAC;KAC1B;IACD,OAAO,SAAS,CAAC;CACpB;;AAED,YAAY,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;;;;;;AAM1C,YAAY,CAAC,SAAS,CAAC,kBAAkB,GAAG,WAAW;;IAEnD,OAAO;QACH,OAAO,EAAE,CAAC;QACV,OAAO,EAAE,CAAC;YACN,GAAG,EAAE,MAAM;YACX,MAAM,EAAE;gBACJ,cAAc,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,eAAe,EAAE,MAAM,EAAE,cAAc,EAAE,EAAE,EAAE;gBAC5E,cAAc,EAAE,EAAE;aACrB;SACJ,CAAC;QACF,QAAQ,EAAE,EAAE;QACZ,OAAO,EAAE,EAAE;KACd,CAAC;CACL,CAAC;;;;;;;;;AASF,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE;IACnE,MAAM,aAAa,GAAG,EAAE,CAAC;IACzB,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IACxE,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAChD,MAAM,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;QAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACtD,IAAI,CAAC,CAAC;YACN,IAAI,QAAQ,CAAC,WAAW,KAAK,CAAC,EAAE;gBAC5B,MAAM,KAAK,GAAG,QAAQ,CAAC,YAAY,CAAC;gBACpC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChC,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;oBACxB,aAAa,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC;iBACzD;aACJ,MAAM;gBACH,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;gBACvC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChC,aAAa,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;iBAC7D;aACJ;SACJ;KACJ;IACD,OAAO,aAAa,CAAC;CACxB,CAAC;;;;;;;;;AASF,YAAY,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE;IACvE,MAAM,UAAU,GAAG,EAAE,CAAC;IACtB,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IACxE,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAChD,MAAM,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;QAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACtD,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;YAC7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,UAAU,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;aAC7D;SACJ;KACJ;IACD,OAAO,UAAU,CAAC;CACrB,CAAC;;;;;;;;;;AAUF,YAAY,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE;IACtE,MAAM,SAAS,GAAG,EAAE,CAAC;IACrB,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;IACxE,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE;QAChD,MAAM,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;QAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,MAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACtD,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;YAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,UAAU,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBAC7B,MAAM,MAAM,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpC,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;oBACtB,SAAS,CAAC,IAAI,CAAC;wBACX,GAAG,EAAE,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC;wBACxC,EAAE,EAAE,GAAG,CAAC,QAAQ;qBACnB,CAAC,CAAC;iBACN;aACJ;SACJ;KACJ;IACD,OAAO,SAAS,CAAC;CACpB,CAAC;;;;;;;;;;AAUF,YAAY,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAE;IACjF,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,MAAM,QAAQ,GAAG,cAAc,CAAC,WAAW,EAAE,CAAC,EAAE;QAC5C,WAAW,EAAE,CAAC;QACd,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC;QACjC,UAAU,EAAE,EAAE;KACjB,CAAC,CAAC;IACH,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,mDAAmD,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC7H,MAAM,aAAa,GAAG,YAAY,CAAC,GAAG,CAAC;IACvC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;IAClE,IAAI,GAAG,GAAG,CAAC,EAAE;QACT,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QACf,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC;QACvD,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KACzC;IACD,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,EAAE,CAAC;CAC9C,CAAC;;;;;;;;;AASF,YAAY,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAE;IACpF,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,MAAM,QAAQ,GAAG,cAAc,CAAC,WAAW,EAAE,CAAC,EAAE;QAC5C,WAAW,EAAE,CAAC;QACd,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC;QACjC,aAAa,EAAE,EAAE;KACpB,CAAC,CAAC;IACH,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,mDAAmD,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC7H,MAAM,aAAa,GAAG,YAAY,CAAC,GAAG,CAAC;IACvC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;IAClE,IAAI,GAAG,GAAG,CAAC,EAAE;QACT,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QACf,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC;QACvD,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAC5C;IACD,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,EAAE,CAAC;CACjD,CAAC;;;;;;;;;;AAUF,YAAY,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC/E,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,IAAI,QAAQ,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACxC,IAAI,CAAC,QAAQ,EAAE;QACX,QAAQ,GAAG;YACP,WAAW,EAAE,CAAC;YACd,QAAQ,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;YACnC,YAAY,EAAE,EAAE;SACnB,CAAC;QACF,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;KACvC;IACD,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,mDAAmD,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC7H,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtC,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5C,MAAM,aAAa,GAAG;QAClB,QAAQ,EAAE,QAAQ,CAAC,EAAE;QACrB,UAAU,EAAE,aAAa;KAC5B,CAAC;IACF,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;IAClE,IAAI,GAAG,IAAI,CAAC,EAAE;;QAEV,MAAM,WAAW,GAAG,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;YAEzC,IAAI,WAAW,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,aAAa,CAAC,EAAE;gBACvD,OAAO;aACV;SACJ;;QAED,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;KACnC,MAAM;;QAEH,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;QACf,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC;QACvD,QAAQ,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;KACzD;CACJ,CAAC;;;;;;;;;AASF,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE;IACpE,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;QACxB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;KACpD;IACD,QAAQ,OAAO;QACX,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM;YACP,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC;qBACvC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;QACnE,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM,EAAE,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;KACpE;IACD,OAAO,SAAS,CAAC;CACpB,CAAC;;;;;;;;;AASF,YAAY,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE;IAClE,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;QACxB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;KACzD;IACD,QAAQ,OAAO;QACX,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM;YACP,IAAI,OAAO,GAAG,CAAC,EAAE,KAAK,QAAQ,EAAE;gBAC5B,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;aACzD;YACD,OAAO,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAC7D,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM,CAAC;QACZ,KAAK,MAAM;YACP,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;KAC/D;IACD,OAAO,SAAS,CAAC;CACpB,CAAC;;AC3SF,SAAS,SAAS,GAAG;IACjB,OAAO,OAAO,MAAM,KAAK,WAAW,CAAC;CACxC;AACD,AAIA;AACA,SAAS,uBAAuB,CAAC,MAAM,EAAE;IACrC,MAAM,EAAE,GAAG,IAAI,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1C,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;IAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACpC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;KACvB;;IAED,OAAO,EAAE,CAAC;CACb;;AAED,SAAS,uBAAuB,CAAC,EAAE,EAAE;IACjC,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;IACzC,MAAM,IAAI,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC;IAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACpC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB;;IAED,OAAO,MAAM,CAAC;CACjB;;AAED,SAAS,aAAa,CAAC,UAAU,EAAE,OAAO,EAAE;IACxC,IAAI,CAAC,UAAU,EAAE;QACb,MAAM,OAAO,CAAC;KACjB;CACJ;;AChCD;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,AACA;AACA,IAAI,gBAAgB,CAAC;AACrB,IAAI,IAAI,CAAC;AACT,IAAI,SAAS,CAAC;AACd,IAAI,aAAa,CAAC;;;;;;;;AAQlB,SAAS,OAAO,CAAC,IAAI,EAAE;;IAEnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;;IAGjB,IAAI,CAAC,UAAU;IACf,IAAI,CAAC,UAAU;QACX,SAAS,CAAC;;;;;;;;;IASd,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;CACxB;;;;;AAKD,SAAS,QAAQ,CAAC,CAAC,EAAE;IACjB,OAAO,CAAC,CAAC;CACZ;;;;;AAKD,SAAS,WAAW,CAAC,CAAC,EAAE;;IAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CACjD;;;;;AAKD,SAAS,iBAAiB,CAAC,CAAC,EAAE;IAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CACzD;;;;;AAKD,SAAS,eAAe,CAAC,CAAC,EAAE;IACxB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;CAC/D;;;;;AAKD,SAAS,aAAa,CAAC,CAAC,EAAE;IACtB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CAChD;;;;;AAKD,SAAS,eAAe,CAAC,CAAC,EAAE;IACxB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CACjD;;;;;AAKD,MAAM,UAAU,GAAG,UAAU,CAAC,EAAE;IAC5B,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC7B,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC;IACzB,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;IACnC,IAAI,IAAI,GAAG,CAAC,CAAC;;IAEb,IAAI,CAAC,GAAG,CAAC,EAAE;QACP,CAAC,GAAG,CAAC,CAAC,CAAC;QACP,IAAI,GAAG,CAAC,CAAC,CAAC;KACb;;IAED,CAAC,IAAI,SAAS,GAAG,KAAK,CAAC;;IAEvB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,MAAM,CAAC;;IAEpC,CAAC,IAAI,KAAK,CAAC;;;IAGX,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,KAAK,CAAC;IACpC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,KAAK,CAAC;;IAErC,OAAO,CAAC,GAAG,IAAI,CAAC;CACnB,CAAC;;;;;AAKF,MAAM,WAAW,GAAG;IAChB,CAAC,EAAE,CAAC;;IAEJ,CAAC,EAAE,CAAC;;IAEJ,IAAI,EAAE,GAAG;;;;IAIT,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAChC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;KACpD;;;;;;;IAOD,WAAW,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;QACpC,IAAI,GAAG,CAAC;QACR,IAAI,GAAG,CAAC;QACR,IAAI,IAAI,CAAC;QACT,IAAI,IAAI,CAAC;QACT,IAAI,GAAG,CAAC;QACR,IAAI,GAAG,CAAC;QACR,IAAI,EAAE,CAAC;;QAEP,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE;YACpB,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;YACpB,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;YACpB,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;YACrB,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;YACrB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;;YAEjB,IAAI,EAAE,KAAK,CAAC,EAAE;gBACV,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;gBAC7B,OAAO;aACV;;YAED,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5C,OAAO;SACV;;QAED,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACtC,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACtC,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACzC,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACzC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;;QAEjB,IAAI,EAAE,KAAK,CAAC,EAAE;YACV,WAAW,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YACzD,OAAO;SACV;;QAED,WAAW,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3E;;;IAGD,WAAW,EAAE,MAAM,CAAC,iBAAiB;;;;;;;;;;;;IAYrC,WAAW,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE;QACtC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE;YACpB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;YAC/B,OAAO;SACV;;QAED,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAC/B,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAC/B,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAC5B,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;;QAE5B,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,CAAC;KAC9C;;;IAGD,KAAK,EAAE,CAAC;;;IAGR,KAAK,EAAE,UAAU,CAAC,EAAE;QAChB,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;KACrB;;;IAGD,OAAO,EAAE,UAAU,CAAC,EAAE;QAClB,OAAO,CAAC,CAAC,QAAQ,CAAC;KACrB;;;IAGD,OAAO,EAAE,UAAU,CAAC,EAAE;QAClB,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;KACtB;CACJ,CAAC;;;;;AAKF,MAAM,WAAW,GAAG;IAChB,CAAC,EAAE,CAAC;;IAEJ,CAAC,EAAE,CAAC;;IAEJ,IAAI,EAAE,GAAG;;;;IAIT,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAChC,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;KACpD;;;;;;;IAOD,WAAW,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;QACpC,IAAI,GAAG,CAAC;QACR,IAAI,GAAG,CAAC;QACR,IAAI,IAAI,CAAC;QACT,IAAI,IAAI,CAAC;QACT,IAAI,GAAG,CAAC;QACR,IAAI,GAAG,CAAC;QACR,IAAI,EAAE,CAAC;;QAEP,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE;YACpB,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;YACpB,GAAG,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;YACpB,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;YACrB,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;YACrB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACrB,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;;YAEjB,IAAI,EAAE,KAAK,CAAC,EAAE;gBACV,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;gBAC7B,OAAO;aACV;;YAED,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YAC5C,OAAO;SACV;;QAED,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACtC,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACtC,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACzC,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACzC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACrB,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;;QAEjB,IAAI,EAAE,KAAK,CAAC,EAAE;YACV,WAAW,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YACzD,OAAO;SACV;;QAED,WAAW,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;KAC3E;;;IAGD,WAAW,EAAE,CAAC;;;;;;;;;;;;IAYd,WAAW,EAAE,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE;QACtC,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,EAAE;YACpB,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;YAC/B,OAAO;SACV;;QAED,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAC/B,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAC/B,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAC5B,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;;QAE5B,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,WAAW,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;KAC9C;;;IAGD,KAAK,EAAE,MAAM,CAAC,iBAAiB;;;IAG/B,KAAK,EAAE,UAAU,CAAC,EAAE;QAChB,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;KACrB;;;IAGD,OAAO,EAAE,UAAU,CAAC,EAAE;QAClB,OAAO,CAAC,CAAC,QAAQ,CAAC;KACrB;;;IAGD,OAAO,EAAE,UAAU,CAAC,EAAE;QAClB,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;KACtB;CACJ,CAAC;;AAEF,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAC3B,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;;;;;AAK3B,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE;IACtB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACX,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;IACtB,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;IACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;CACvB;;;;;;AAMD,UAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACrD;QACI,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAC7C,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MAC/C;CACL,CAAC;;;;;;;;;AASF,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE;IACzD,IAAI,GAAG,CAAC;IACR,IAAI,GAAG,CAAC;IACR,IAAI,GAAG,CAAC;IACR,IAAI,GAAG,CAAC;IACR,IAAI,IAAI,CAAC;IACT,IAAI,IAAI,CAAC;IACT,IAAI,EAAE,CAAC;;IAEP,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACtC,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACzC,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACzC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC;;IAEjB,IAAI,EAAE,KAAK,CAAC,EAAE;QACV,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QAClD,OAAO;KACV;;IAED,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;CACpE,CAAC;;;;;;;;;;;;;;AAcF,UAAU,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE;IAC3D,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC;;IAEhB,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC/B,MAAM,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC/B,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC5B,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;;IAE5B,MAAM,IAAI,GAAG,EAAE,CAAC,WAAW,CAAC;IAC5B,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;;IAEvB,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACf,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEf,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE,KAAK,GAAG,GAAG,IAAI,CAAC,CAAC;IAC1D,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;CAC/B,CAAC;;;;;AAKF,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,EAAE;IACrC,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;IAClB,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC;CACrB,CAAC;;;;;AAKF,SAAS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE;IACzB,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;IAEnC,CAAC,IAAI,CAAC,CAAC;IACP,CAAC,IAAI,CAAC,CAAC;;IAEP,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,WAAW,CAAC;SACtC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,OAAO,WAAW,CAAC;SAC3C,OAAO,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CACpC;;;;;AAKD,SAAS,MAAM;IACX,CAAC;IACD,CAAC;IACD,kBAAkB;IAClB,OAAO;EACT;IACE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IAC3C,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;;IAE3C,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;IAC7C,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACvB,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;IACpC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;IACpC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;;IAEtB,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC;CAClC;;;;;;;AAOD,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,EAAE;IACvC,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC;;IAEhC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,kBAAkB,CAAC;;IAE7D,OAAO,CAAC,CAAC;CACZ,CAAC;;;;;;;AAOF,MAAM,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,EAAE;IACvC,IAAI,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC;;IAEhC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,kBAAkB,CAAC;;IAE7D,OAAO,CAAC,CAAC;CACZ,CAAC;;;;;AAKF,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;;;;;;;;AAU/C,MAAM,YAAY,GAAG;IACjB,OAAO,EAAE,EAAE,GAAG,EAAE;IAChB,SAAS,EAAE,CAAC;IACZ,UAAU,EAAE,KAAK;IACjB,IAAI,EAAE,CAAC;IACP,MAAM,EAAE,CAAC;IACT,QAAQ,EAAE,IAAI;CACjB,CAAC;;;;;;;;AAQF,SAAS,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE;IACtB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;IAEjB,QAAQ,GAAG;QACP,KAAK,MAAM;YACP,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;YACnC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;;QAEvC,KAAK,MAAM;YACP,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC;YAC3C,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC;KAChC;CACJ;;;;;;;;;;;;AAYD,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,KAAK,EAAE,IAAI,EAAE;IAC3C,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;QAC1B,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;KAClD;;;IAGD,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,OAAO;;IAEjC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACvB,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;;IAEhC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,IAAI,EAAE;QACvC,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;;QAEhC,IAAI,CAAC,SAAS,EAAE;;;YAGZ,KAAK,CAAC,SAAS,GAAG,YAAY,CAAC;;YAE/B,SAAS;YACT,IAAI,CAAC,UAAU;gBACX,IAAI,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;YAExC,SAAS,CAAC,KAAK,GAAG,GAAG,CAAC;YACtB,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;;YAEtB,IAAI,OAAO,CAAC,KAAK,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;gBAC/B,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;aACvB;;YAED,IAAI;gBACA,IAAI,CAAC,SAAS,CAAC,CAAC;aACnB,CAAC,OAAO,CAAC,EAAE;gBACR,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,OAAO;aACV;SACJ;;;;;;QAMD,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;QAC5B,SAAS;QACT,IAAI,CAAC,UAAU;YACX,IAAI,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;QAExC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;;;;QAItB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;QAC7B,IAAI,IAAI,EAAE;YACN,MAAM,GAAG,GAAG,SAAS,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnD,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;aAC5B;SACJ,MAAM;YACH,SAAS,CAAC,GAAG,GAAG,EAAE,CAAC;SACtB;;QAED,IAAI,OAAO,CAAC,KAAK,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;YAC/B,SAAS,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;SACvB;;QAED,IAAI;YACA,IAAI,CAAC,SAAS,CAAC,CAAC;SACnB,CAAC,OAAO,CAAC,EAAE;YACR,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;gBACtB,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,CAAC,CAAC,CAAC;aAC7C;YACD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACxB;KACJ;;IAED,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE,OAAO;;IAEjC,IAAI;QACA,OAAO,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;KACtC,CAAC,OAAO,CAAC,EAAE;QACR,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,EAAE;YACtB,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;YAClC,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;SAC5D;QACD,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,OAAO,SAAS,CAAC;KACpB;CACJ,CAAC;;;;;AAKF,SAAS,GAAG,SAAS,KAAK,EAAE,SAAS,EAAE;;IAEnC,MAAM,MAAM,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC;IAC1D,MAAM,MAAM,GAAG,MAAM,CAAC;IACtB,IAAI,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;IAClC,IAAI,QAAQ,CAAC;IACb,IAAI,KAAK,CAAC;IACV,IAAI,KAAK,CAAC;;IAEV,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;IAC5B,IAAI,CAAC,UAAU,EAAE;QACb,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;QAC9C,IAAI,OAAO,CAAC,KAAK,EAAE;YACf,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;YAChC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;SACnB;QACD,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAC5C,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;KACvB,MAAM;QACH,MAAM,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QAC5B,KAAK,GAAG,EAAE,CAAC;QACX,QAAQ,GAAG,EAAE,CAAC;QACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,MAAM,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YACxB,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;;YAEzC,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC,CAAC;;YAE3C,IAAI,OAAO,CAAC,KAAK,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC;gBACzC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;aACnB;;YAED,aAAa,CAAC,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;;;YAGzC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;YACrC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;YACrC,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;YACvB,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC;YAC1B,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;gBACnC,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;gBACjB,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC;gBAChC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACtB,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;aACzB;;YAED,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC;YAC1B,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YAC5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAChC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;aAC/B;SACJ;;QAED,IAAI,KAAK,CAAC,YAAY,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE;;YAE7C,KAAK,GAAG,IAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,YAAY,CAAC,CAAC;;YAE9C,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC;;YAErD,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC;;;;YAI1B,KAAK,CAAC,IAAI;gBACN,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;gBAChB,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;aACzD,CAAC;;YAEF,IAAI,OAAO,CAAC,KAAK,EAAE;gBACf,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;gBACpC,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;aACnB;;YAED,IAAI,CAAC,KAAK,CAAC,CAAC;;YAEZ,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;SACrB;KACJ;;IAED,OAAO,KAAK,CAAC;CAChB,CAAC;;;;;;AAMF,aAAa,GAAG,SAAS,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM;AACrD;IACI,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC;IAClC,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;IAC3B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;IAChE,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;;;;IAIrC,IAAI,EAAE,CAAC;IACP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;QAC3B,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;;QAEf,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM;YACjB,EAAE,CAAC,CAAC,GAAG,MAAM;YACb,EAAE,CAAC,CAAC,GAAG,MAAM;YACb,EAAE,CAAC,kBAAkB;YACrB,EAAE,CAAC,OAAO;SACb,CAAC;KACL;;;IAGD,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;;IAEP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;QAC3B,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;QAEd,IAAI,CAAC,EAAE,EAAE;YACL,EAAE,GAAG,EAAE,CAAC;YACR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACpB;;QAED,IAAI,EAAE,CAAC,kBAAkB,EAAE;YACvB,EAAE,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC3B,EAAE,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC3B,EAAE,GAAG,SAAS,CAAC;SAClB,MAAM;YACH,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClB,EAAE,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC3B,EAAE,CAAC,kBAAkB,GAAG,EAAE,CAAC;SAC9B;KACJ;;IAED,IAAI,KAAK,CAAC,cAAc,EAAE,OAAO;;IAEjC,KAAK,CAAC,IAAI;QACN,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;QAChB,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;KACzD,CAAC;;IAEF,IAAI,CAAC,KAAK,CAAC,CAAC;;;IAGZ,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;;IAElB,IAAI,OAAO,CAAC,KAAK,EAAE;QACf,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;YAC3B,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SAC1C;KACJ;CACJ,CAAC;;;;;AAKF,IAAI,GAAG,SAAS,KAAK,EAAE;IACnB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;;IAEtB,IAAI,CAAC,IAAI,EAAE,OAAO;;IAElB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;IACzB,IAAI,GAAG,CAAC;;IAER,KAAK,KAAK,CAAC,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,EAAE,GAAG,IAAI,EAAE,KAAK,CAAC,EAAE,EAAE,EAAE;QAC5C,IAAI,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC;QAChC,GAAG,GAAG,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;;QAEvC,IAAI,CAAC,GAAG,EAAE;YACN,MAAM,IAAI,KAAK;gBACX,yBAAyB;gBACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;aACtC,CAAC;SACL;;QAED,GAAG,CAAC,KAAK,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA2Cd;CACJ,CAAC;;;;;;;;AAQF,SAAS,SAAS,CAAC,KAAK;AACxB;IACI,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;;;IAG1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;IACrC;QACI,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KAC/B;CACJ;;;;;;AAMD,SAAS,IAAI,CAAC,KAAK,EAAE,UAAU;AAC/B;IACI,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACxB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IAClB,IAAI,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI,GAAG,CAAC;;IAER,GAAG;QACC,GAAG,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACjB,IAAI,GAAG,KAAK,IAAI;YACZ,OAAO,EAAE,CAAC;aACT,IAAI,GAAG,KAAK,IAAI;YACjB,OAAO,EAAE,CAAC;aACT,IAAI,GAAG,KAAK,IAAI;YACjB,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;aACtB,IAAI,GAAG,KAAK,IAAI;YACjB,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;aAC1B,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI;YAC/B,EAAE,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;aACpB,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI;YAC/B,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;aAC1B,IAAI,UAAU,IAAI,OAAO,KAAK,CAAC,IAAI,GAAG,KAAK,IAAI;YAChD,MAAM;KACb,QAAQ,OAAO,GAAG,CAAC,EAAE;;IAEtB,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;CACjB;;;;;;;;AAQD,SAAS,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE;IACrB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;;IAEpE,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;CACvC;;;;AAID,SAAS,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE;IACtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;;IAErE,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;CAC5B;;;;AAID,SAAS,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE;IACtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;;IAErE,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC;CAChB;;;;AAID,SAAS,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE;IACrB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACxB,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACxB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACzB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;;IAEzB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;IAE7D,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;;IAEP,IAAI,CAAC,CAAC,EAAE;QACJ,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACjB,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;KACpB,MAAM;QACH,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACjB,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;KACpB;;IAED,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CAChD;;;;AAID,SAAS,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE;IACrB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACxB,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACxB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACzB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;;IAEzB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;IAE7D,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;;IAEP,IAAI,CAAC,CAAC,EAAE;QACJ,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACjB,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;KACpB,MAAM;QACH,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACjB,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;KACpB;;IAED,KAAK,CAAC,EAAE,GAAG,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACpC;;;;AAID,SAAS,KAAK,CAAC,KAAK,EAAE;IAClB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE5D,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAC9C;;;;AAID,SAAS,KAAK,CAAC,KAAK,EAAE;IAClB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE5D,KAAK,CAAC,EAAE,GAAG,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAClC;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAEpB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;IAEpD,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;IAC1B,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;CAC7B;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAEpB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;IAEpD,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;IAC1B,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;CAC7B;;;;AAID,SAAS,MAAM,CAAC,KAAK,EAAE;IACnB,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAEpB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;CAC1D;;;;AAID,SAAS,KAAK,CAAC,KAAK;AACpB;IACI,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACzB,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACzB,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACzB,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACzB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IACrB,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IACrB,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IACrB,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IACrB,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;;;;;IAKxE,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IACjB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IACjB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IACjB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IACjB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IACjB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IACjB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IACjB,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;;IAEjB,MAAM,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;IAC1D,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC7B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;;IAE7B,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,GAAG,CAAC;IAC9C,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,GAAG,CAAC;CACjD;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE9B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;CACnE;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE9B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;CACnE;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE9B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;CACnE;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE5B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;;IAExD,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;;IAEd,QAAQ,CAAC;QACL,KAAK,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;YACnC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;YACvB,MAAM;QACV,KAAK,CAAC;YACF,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;YACvB,MAAM;QACV;YACI,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;KAC/C;CACJ;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE5B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;;IAExD,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;;IAEd,QAAQ,CAAC;QACL,KAAK,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;YACnC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;YACvB,MAAM;QACV,KAAK,CAAC;YACF,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;YACvB,MAAM;QACV;YACI,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;KAC/C;CACJ;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE5B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;;IAExD,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;;IAEd,QAAQ,CAAC;QACL,KAAK,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;YACnC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;YACvB,MAAM;QACV,KAAK,CAAC;YACF,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;YACvB,MAAM;QACV;YACI,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;KAC/C;CACJ;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE5B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;;IAExD,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;;IAEtC,QAAQ,CAAC;QACL,KAAK,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC;YACnC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;YAC7C,MAAM;QACV,KAAK,CAAC;YACF,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;YAC7C,MAAM;QACV;YACI,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;KAC/C;CACJ;;;;AAID,SAAS,KAAK,CAAC,KAAK,EAAE;IAClB,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE/B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;CACrE;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;IAEpD,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC;CAC7B;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;IAErD,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC;CACjC;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE5B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;IAEvD,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC;CAC3B;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;;;;;;;IAOjB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;IAErD,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;CACtB;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE5B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;;;IAGxD,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;CACrB;;;;AAID,SAAS,MAAM,CAAC,KAAK,EAAE;IACnB,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE5B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;;IAE1D,KAAK,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC;CAC5B;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;IAE1B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;IAEpD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;CACvC;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;;IAEpD,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;CACrB;;;;AAID,SAAS,KAAK,CAAC,KAAK,EAAE;IAClB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;;IAEtD,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;CAC1B;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;IAE1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;IAErD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACd,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;;;;AAID,SAAS,KAAK,CAAC,KAAK,EAAE;IAClB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;IAE1B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;;IAEtD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;CAC5B;;;;AAID,SAAS,QAAQ,CAAC,KAAK,EAAE;IACrB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;;IAGhE,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC;IACrB,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;;IAEzB,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;;IAG7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,IAAI,CAAC,KAAK,CAAC,CAAC;;QAEZ,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG;YAC1B,EAAE,KAAK,CAAC,IAAI;YACZ,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,eAAe,GAAG,eAAe;YAC7C,CAAC;SACJ,CAAC;KACL;;;IAGD,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC;IACf,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;CACtB;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE7B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;;;IAGzD,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC;IACrB,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC;;IAEzB,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;;IAG7B,IAAI,CAAC,KAAK,CAAC,CAAC;;;IAGZ,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC;IACf,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;;IAEnB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,IAAI,EAAE,gBAAgB,EAAE,EAAE,CAAC,CAAC;CACtE;;;;AAID,SAAS,MAAM,CAAC,KAAK,EAAE;IACnB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;;;;IAI1D,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;CACvC;;;;AAID,SAAS,MAAM,CAAC,KAAK,EAAE;IACnB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;;IAE1D,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACpD;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,IAAI,KAAK,CAAC,GAAG,KAAK,MAAM,EAAE,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;IACnE,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACxB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAElB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,OAAO,GAAG,EAAE,CAAC;;IAEnB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;;IAEzD,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC;;IAE5B,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;IACd,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;CACjD;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE;IACxB,MAAM,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC7B,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAEpB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,GAAG,KAAK,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;;IAEtE,IAAI,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;;IAE/B,IAAI,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAE9B,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IACjC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAEZ,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;CAC9B;;;;AAID,SAAS,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE;IACnB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,IAAI,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;IAC3B,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;;IAEP,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;;IAElE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;QAC3B,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;;;QAGX,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,SAAS;;QAE5B,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;;QAGvB,IAAI,EAAE,KAAK,EAAE,EAAE,SAAS;;QAExB,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;;QAEvB,IAAI,EAAE,KAAK,EAAE,EAAE;;;;YAIX,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;SACnE;;QAED,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;KAChC;CACJ;;;;AAID,SAAS,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE;IACnB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IACtC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC1C,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACtB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAEpB,OAAO,IAAI,EAAE;IACb;QACI,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACvB,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;QAEjB,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QAC3C,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC5B,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;QAEZ,IAAI,OAAO,CAAC,KAAK,EAAE;YACf,OAAO,CAAC,GAAG;gBACP,KAAK,CAAC,IAAI;gBACV,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC;mBACZ,OAAO,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI;mBACpC,EAAE;;gBAEL,MAAM,IAAI,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,GAAG,EAAE,EAAE;aACzC,CAAC;SACL;KACJ;;IAED,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;CAClB;;;;AAID,SAAS,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE;IACnB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IACtC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC1C,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACxC,IAAI,CAAC,GAAG,EAAE,CAAC;;IAEX,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;;IAEjE,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;;IAE3C,GAAG;QACC,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC1C,CAAC,GAAG,CAAC,CAAC,kBAAkB,CAAC;KAC5B,QAAQ,CAAC,KAAK,EAAE,EAAE;CACtB;;;;AAID,SAAS,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE;IACnB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IACtC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;IAC1C,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAEpB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;;IAEhE,IAAI,CAAC,CAAC;IACN,QAAQ,CAAC;QACL,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM;QAChC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,MAAM;QAChC,UAAU,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;KAC7C;;IAED,IAAI,CAAC,CAAC;IACN,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IAC3C,MAAM,IAAI,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE;IAC7B;QACI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,IAAI,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;KAC7C;CACJ;;;;AAID,SAAS,KAAK,CAAC,KAAK,EAAE;IAClB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACtB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC;IAC7B,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAEpB,OAAO,IAAI,EAAE,EAAE;QACX,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACvB,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;QAEjB,IAAI,OAAO,CAAC,KAAK,EAAE;YACf,OAAO,CAAC,GAAG;gBACP,KAAK,CAAC,IAAI;gBACV,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,OAAO,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE;gBAC3D,SAAS,EAAE,EAAE,EAAE,CAAC;aACnB,CAAC;SACL;;QAED,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACxB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACf;;IAED,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;CAClB;;;;AAID,SAAS,EAAE,CAAC,KAAK,EAAE;IACf,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC;IACvB,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC;IACvB,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACtB,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3B,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3B,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;IACrB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAEpB,OAAO,IAAI,EAAE,EAAE;QACX,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACvB,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;QAEjB,IAAI,OAAO,CAAC,KAAK,EAAE;YACf,OAAO,CAAC,GAAG;gBACP,KAAK,CAAC,IAAI;gBACV,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,OAAO,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE;gBAC3D,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI;aAChC,CAAC;SACL;;QAED,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;;QAEhC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACf;;IAED,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;CAClB;;;;AAID,SAAS,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE;IACrB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IAC3B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvB,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAChC,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAEpB,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC9B,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAEZ,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;;IAEtE,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IACtB,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;IACf,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;CACzB;;;;AAID,SAAS,OAAO,CAAC,KAAK,EAAE;IACpB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC;IACvB,MAAM,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC3B,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACtB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAEpB,OAAO,IAAI,EAAE,EAAE;QACX,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACvB,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;;QAEjB,IAAI,OAAO,CAAC,KAAK,EAAE;YACf,OAAO,CAAC,GAAG;gBACP,KAAK,CAAC,IAAI;gBACV,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,OAAO,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE;gBAC3D,WAAW,EAAE,EAAE;aAClB,CAAC;SACL;;QAED,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;QAC9B,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACf;;IAED,KAAK,CAAC,IAAI,GAAG,CAAC,CAAC;CAClB;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;IAErD,KAAK,CAAC,KAAK,GAAG,iBAAiB,CAAC;CACnC;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE;IACxB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;;IAGtB,IAAI,KAAK,EAAE,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;IAEhC,IAAI,OAAO,CAAC,KAAK,EAAE;QACf,OAAO,CAAC,GAAG;YACP,KAAK,CAAC,IAAI;YACV,OAAO,GAAG,KAAK,GAAG,GAAG;YACrB,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE;SACtB,CAAC;KACL;;IAED,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAElC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,EAAE;QACjB,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QACX,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;KACd;;IAED,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAEZ,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;CAC9B;;;;AAID,SAAS,MAAM,CAAC,KAAK,EAAE;IACnB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACxB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IAClB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;IAE1B,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;;IAErB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;;IAE1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAEnD,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;CACjB;;;;AAID,SAAS,MAAM,CAAC,KAAK,EAAE;IACnB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IAClB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACxB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;;IAErB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;;IAE1D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC;QACxC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;;IAED,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;CACjB;;;;AAID,SAAS,EAAE,CAAC,KAAK,EAAE;IACf,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;IAExB,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;;IAErC,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEvD,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CAChB;;;;AAID,SAAS,EAAE,CAAC,KAAK,EAAE;IACf,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;IAE1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;;IAEpD,MAAM,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;;IAEnC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;;;;AAID,SAAS,KAAK,CAAC,KAAK,EAAE;IAClB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;IAE1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE1D,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;CAC3B;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEzB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;;IAEzD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;CACtC;;;;AAID,SAAS,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE;IAClB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;;IAEhE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;CAC9D;;;;AAID,SAAS,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE;IAClB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACxB,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACxB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACzB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACzB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE3C,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;;IAE/E,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;CACxC;;;;AAID,SAAS,KAAK,CAAC,KAAK,EAAE;IAClB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACtD,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;CAChC;;;;AAID,SAAS,MAAM,CAAC,KAAK,EAAE;IACnB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IACvD,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;CACzB;;;;AAID,SAAS,EAAE,CAAC,KAAK,EAAE;IACf,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE3D,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CAC/B;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE7D,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CAChC;;;;AAID,SAAS,EAAE,CAAC,KAAK,EAAE;IACf,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE3D,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CAC/B;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE7D,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CAChC;;;;AAID,SAAS,EAAE,CAAC,KAAK,EAAE;IACf,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE3D,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CACjC;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE5D,KAAK,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CACjC;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;IAEvD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CACzC;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC,CAAC;;IAExD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CACzC;;;;AAID,SAAS,EAAE,CAAC,KAAK,EAAE;IACf,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC7B,IAAI,GAAG,CAAC;;IAER,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;;;;IAIzD,IAAI,CAAC,IAAI,EAAE;QACP,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;;QAElB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,KAAK,IAAI,GAAG,QAAQ,GAAG,OAAO,CAAC,CAAC;KACjF;CACJ;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;;;;;IAKhB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;CACvD;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE5D,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CAChC;;;;AAID,SAAS,EAAE,CAAC,KAAK,EAAE;IACf,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE3D,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CAChC;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;IAEvD,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;CACzB;;;;;;AAMD,SAAS,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE;IACzB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACxB,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAC5C,MAAM,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC;IAC5B,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAEpB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;;IAE1E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC1B;QACI,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACvB,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACxB,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;QACzC,IAAI,KAAK,KAAK,IAAI,EAAE,SAAS;;QAE7B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC;QAC3B,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACpB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;;QAE5E,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACjB,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;KACtC;CACJ;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;IAEvD,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;CACvB;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;IAEvD,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;CACvC;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE5D,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;CACvB;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE5D,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;CACvB;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE5D,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;CAC5B;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE5D,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;CAC5B;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;IAEvD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;CAC3B;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEpB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;;IAEvD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;CAClB;;;;AAID,SAAS,KAAK,CAAC,KAAK,EAAE;IAClB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;;IAEzD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;CAC3C;;;;AAID,SAAS,OAAO,CAAC,KAAK,EAAE;IACpB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;;IAE3D,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;CAC1C;;;;AAID,SAAS,KAAK,CAAC,EAAE,EAAE,KAAK,EAAE;IACtB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;;IAEtD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;CAC5C;;;;AAID,SAAS,KAAK,CAAC,KAAK,EAAE;IAClB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE5D,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC;CACzD;;;;;;AAMD,SAAS,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE;IACzB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACxB,MAAM,IAAI,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAC5C,MAAM,EAAE,GAAG,KAAK,CAAC,UAAU,CAAC;;IAE5B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;;IAE1E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACtB,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QACxB,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;QACzC,IAAI,KAAK,KAAK,IAAI,EAAE,SAAS;;QAE7B,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC;QAC3B,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;;QAEpB,MAAM,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC;;QAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;QAExE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC;KACzB;CACJ;;;;AAID,SAAS,MAAM,CAAC,KAAK,EAAE;IACnB,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE1B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;;IAE1D,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;;IAEzB,IAAI,MAAM,CAAC;;IAEX,QAAQ,CAAC,GAAG,IAAI;QACZ,KAAK,IAAI;YACL,MAAM,GAAG,GAAG,CAAC;YACb,MAAM;QACV,KAAK,IAAI;YACL,MAAM,GAAG,CAAC,CAAC;YACX,MAAM;QACV,KAAK,IAAI;YACL,MAAM,GAAG,CAAC,CAAC;YACX,MAAM;QACV;YACI,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;KAC/C;;IAED,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;;IAExB,QAAQ,CAAC,GAAG,IAAI;QACZ,KAAK,IAAI;YACL,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;YAClB,MAAM;QACV,KAAK,IAAI;YACL,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAC;YAC9B,MAAM;QACV,KAAK,IAAI;YACL,KAAK,CAAC,OAAO,GAAG,GAAG,IAAI,MAAM,CAAC;YAC9B,MAAM;QACV,KAAK,IAAI;YACL,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAC;YAC9B,MAAM;QACV,SAAS,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;KACpD;;IAED,CAAC,IAAI,IAAI,CAAC;;IAEV,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;SAC9B,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC;CACnD;;;;AAID,SAAS,QAAQ,CAAC,KAAK,EAAE;IACrB,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE1B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;;IAE5D,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC;;IAEzB,IAAI,MAAM,CAAC;;IAEX,QAAQ,CAAC,GAAG,IAAI;QACZ,KAAK,IAAI;YACL,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAC1B,MAAM;QACV,KAAK,IAAI;YACL,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,MAAM;QACV,KAAK,IAAI;YACL,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM;QACV;YACI,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;KACjD;;IAED,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;;IAExB,QAAQ,CAAC,GAAG,IAAI;QACZ,KAAK,IAAI;YACL,KAAK,CAAC,OAAO,GAAG,CAAC,CAAC;YAClB,MAAM;QACV,KAAK,IAAI;YACL,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAC;YAC9B,MAAM;QACV,KAAK,IAAI;YACL,KAAK,CAAC,OAAO,GAAG,GAAG,IAAI,MAAM,CAAC;YAC9B,MAAM;QACV,KAAK,IAAI;YACL,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,MAAM,CAAC;YAC9B,MAAM;QACV;YACI,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;KACjD;;IAED,CAAC,IAAI,IAAI,CAAC;;IAEV,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC;SAC9B,KAAK,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC;CACnD;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;IAErD,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;CAC1B;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;IAErD,KAAK,CAAC,KAAK,GAAG,aAAa,CAAC;CAC/B;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;IAErD,KAAK,CAAC,KAAK,GAAG,eAAe,CAAC;CACjC;;;;AAID,SAAS,QAAQ,CAAC,KAAK,EAAE;IACrB,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;;;IAI5B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;CAC/D;;;;AAID,SAAS,MAAM,CAAC,CAAC,EAAE,KAAK,EAAE;IACtB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACxB,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACxB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACzB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;;IAEzB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;IAE9D,IAAI,EAAE,CAAC;IACP,IAAI,EAAE,CAAC;;IAEP,IAAI,CAAC,CAAC,EAAE;QACJ,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACjB,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;KACpB,MAAM;QACH,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACjB,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;KACpB;;IAED,KAAK,CAAC,GAAG,GAAG,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;CACrC;;;;AAID,SAAS,OAAO,CAAC,KAAK,EAAE;IACpB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACxB,IAAI,CAAC,GAAG,CAAC,CAAC;;IAEV,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,EAAE,GAAG,CAAC,CAAC;;;IAG7D,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC;;;;;;IAMvB,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,IAAI,MAAM,CAAC;;IAE5B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;;;;AAID,SAAS,IAAI,CAAC,KAAK,EAAE;IACjB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACtB,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEtB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;IAErD,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACd,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACd,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACjB;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE5D,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;CAChC;;;;AAID,SAAS,GAAG,CAAC,KAAK,EAAE;IAChB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;;IAEvB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;;IAE5D,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;CAChC;;;;AAID,SAAS,QAAQ,CAAC,KAAK,EAAE;IACrB,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE5B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;CAC/D;;;;AAID,SAAS,QAAQ,CAAC,KAAK,EAAE;IACrB,MAAM,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC5B,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;;IAE1B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;;IAE/D,QAAQ,CAAC;QACL,KAAK,CAAC,GAAG,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO;QAC5C,KAAK,CAAC,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO;QACvC,SAAS,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;KAC3D;CACJ;;;;AAID,SAAS,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE;IACrB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACxB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;;IAElB,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;;IAE/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAEnD,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;CACjB;;;;AAID,SAAS,KAAK,CAAC,CAAC,EAAE,KAAK,EAAE;IACrB,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IAClB,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACxB,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;;IAE1B,IAAI,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,EAAE,QAAQ,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;;IAE7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QACxB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,MAAM,IAAI,CAAC,CAAC,CAAC;QACxC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACjB;;IAED,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;CACjB;;;;;;;;;;;;AAYD,SAAS,SAAS,CAAC,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE;IACvD,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1B,MAAM,IAAI,GAAG,QAAQ,IAAI,KAAK,CAAC,GAAG,EAAE,CAAC;IACrC,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;IACvB,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IAC1B,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;IAEvB,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC;IACxB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;IACpB,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC;IACrB,IAAI,EAAE,CAAC;IACP,IAAI,CAAC,CAAC;IACN,IAAI,IAAI,CAAC;IACT,IAAI,EAAE,CAAC;;IAEP,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACxC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;;IAGvB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;IAEhB,IAAI,QAAQ,EAAE;QACV,EAAE,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;QAErB,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC;KACtD;;IAED,IAAI,KAAK,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC;;IAE5B,IAAI,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAE3B,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC;IACpC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;IAEZ,IAAI,OAAO,CAAC,KAAK,EAAE;QACf,OAAO,CAAC,GAAG;YACP,KAAK,CAAC,IAAI;YACV,CAAC,QAAQ,GAAG,OAAO,GAAG,OAAO;aAC5B,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;aACnB,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;aAClB,EAAE,GAAG,GAAG,GAAG,GAAG,CAAC;aACf,EAAE,KAAK,CAAC,GAAG,IAAI,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,IAAI,EAAE,KAAK,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;YAC9D,GAAG;YACH,QAAQ;gBACJ,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,EAAE,GAAG,GAAG;gBAC9C,EAAE;YACN,EAAE;YACF,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC,EAAE,GAAG;SAClC,CAAC;KACL;;IAED,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;IACtB,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;IACf,IAAI,MAAM,EAAE,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;CAC9B;;;;;AAKD,gBAAgB,GAAG;eACJ,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC;eAClC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC;eAClC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC;eACnC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC;eACnC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC;eACnC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC;eACnC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK;eACL,KAAK;eACL,GAAG;eACH,GAAG;eACH,MAAM;eACN,KAAK;eACL,IAAI;eACJ,IAAI;eACJ,IAAI;eACJ,IAAI;eACJ,IAAI;eACJ,IAAI;eACJ,IAAI;eACJ,KAAK;eACL,GAAG;eACH,IAAI;eACJ,GAAG;eACH,IAAI;eACJ,IAAI;eACJ,MAAM;eACN,SAAS;eACT,SAAS;eACT,GAAG;eACH,GAAG;eACH,KAAK;eACL,IAAI;eACJ,KAAK;eACL,MAAM;eACN,MAAM;eACN,SAAS;eACT,SAAS;eACT,SAAS;eACT,QAAQ;eACR,IAAI;eACJ,IAAI;eACJ,SAAS;eACT,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACvB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACvB,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC;eAChC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,WAAW,CAAC;eAChC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACtB,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACtB,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACtB,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACtB,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACtB,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACtB,KAAK;eACL,EAAE;eACF,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,OAAO;eACP,IAAI;eACJ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACvB,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACvB,MAAM;eACN,MAAM;eACN,EAAE;eACF,EAAE;eACF,KAAK;eACL,IAAI;eACJ,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACrB,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACrB,SAAS;eACT,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACrB,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACrB,KAAK;eACL,SAAS;eACT,MAAM;eACN,SAAS;eACT,SAAS;eACT,EAAE;eACF,IAAI;eACJ,EAAE;eACF,IAAI;eACJ,EAAE;eACF,GAAG;eACH,GAAG;eACH,IAAI;eACJ,EAAE;eACF,GAAG;eACH,GAAG;eACH,EAAE;eACF,GAAG;eACH,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eAC5B,GAAG;eACH,GAAG;eACH,GAAG;eACH,GAAG;eACH,GAAG;eACH,GAAG;eACH,GAAG;eACH,GAAG;eACH,KAAK;eACL,OAAO;eACP,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,KAAK;eACL,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eAC5B,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eAC5B,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eAC5B,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eAC5B,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eAC5B,MAAM;eACN,QAAQ;eACR,SAAS;eACT,SAAS;eACT,IAAI;eACJ,SAAS;eACT,IAAI;eACJ,IAAI;eACJ,GAAG;eACH,GAAG;eACH,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,QAAQ;eACR,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACzB,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACzB,OAAO;eACP,SAAS;eACT,IAAI;eACJ,GAAG;eACH,GAAG;eACH,QAAQ;eACR,QAAQ;eACR,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,SAAS;eACT,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;eACxB,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;eACxC,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,C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CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,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"}