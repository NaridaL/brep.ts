{"version":3,"file":"viewer.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/chroma.ts/src/index.ts","../node_modules/debounce/index.js","../../ts3dutils/node_modules/javasetmap.ts/src/JavaMap.ts","../../ts3dutils/src/util.ts","../../ts3dutils/src/arrayUtils.ts","../../ts3dutils/src/V3.ts","../../ts3dutils/src/Transformable.ts","../../ts3dutils/src/Vector.ts","../../ts3dutils/src/Matrix.ts","../../ts3dutils/src/M4.ts","../../ts3dutils/src/toSource.ts","../../ts3dutils/src/AABB.ts","../../ts3dutils/src/NLA.ts","../node_modules/tsgl/node_modules/tslib/tslib.es6.js","../node_modules/tsgl/src/Buffer.ts","../node_modules/tsgl/src/Mesh.ts","../node_modules/tsgl/src/Shader.ts","../node_modules/tsgl/src/Texture.ts","../node_modules/tsgl/src/shaders/posCoordVS.glslx","../node_modules/tsgl/src/shaders/sdfRenderFS.glslx","../node_modules/tsgl/src/KhronosGroupWebGLDebug.ts","../node_modules/tsgl/src/TSGLContext.ts","../src/math.ts","../src/curve/Curve.ts","../src/curve/XiEtaCurve.ts","../src/curve/ImplicitCurve.ts","../src/curve/BezierCurve.ts","../src/curve/HyperbolaCurve.ts","../src/curve/L3.ts","../src/curve/PICurve.ts","../src/curve/PPCurve.ts","../src/curve/ParabolaCurve.ts","../src/curve/EllipseCurve.ts","../src/curve/NURBS.ts","../src/P3.ts","../src/surface/Surface.ts","../src/surface/ParametricSurface.ts","../src/surface/ConicSurface.ts","../src/surface/ProjectedCurveSurface.ts","../src/surface/RotatedCurveSurface.ts","../src/surface/CylinderSurface.ts","../src/surface/EllipsoidSurface.ts","../src/surface/PlaneSurface.ts","../src/surface/PointProjectedSurface.ts","../src/surface/NURBSSurface.ts","../src/surface/ZDirVolumeVisitor.ts","../src/surface/CalculateAreaVisitor.ts","../node_modules/opentype.js/node_modules/string.prototype.codepointat/codepointat.js","../node_modules/opentype.js/node_modules/tiny-inflate/index.js","../node_modules/opentype.js/src/bbox.js","../node_modules/opentype.js/src/path.js","../node_modules/opentype.js/src/check.js","../node_modules/opentype.js/src/types.js","../node_modules/opentype.js/src/table.js","../node_modules/opentype.js/src/parse.js","../node_modules/opentype.js/src/tables/cmap.js","../node_modules/opentype.js/src/encoding.js","../node_modules/opentype.js/src/draw.js","../node_modules/opentype.js/src/glyph.js","../node_modules/opentype.js/src/glyphset.js","../node_modules/opentype.js/src/tables/cff.js","../node_modules/opentype.js/src/tables/head.js","../node_modules/opentype.js/src/tables/hhea.js","../node_modules/opentype.js/src/tables/hmtx.js","../node_modules/opentype.js/src/tables/ltag.js","../node_modules/opentype.js/src/tables/maxp.js","../node_modules/opentype.js/src/tables/name.js","../node_modules/opentype.js/src/tables/os2.js","../node_modules/opentype.js/src/tables/post.js","../node_modules/opentype.js/src/tables/gsub.js","../node_modules/opentype.js/src/tables/meta.js","../node_modules/opentype.js/src/tables/sfnt.js","../node_modules/opentype.js/src/layout.js","../node_modules/opentype.js/src/position.js","../node_modules/opentype.js/src/substitution.js","../node_modules/opentype.js/src/util.js","../node_modules/opentype.js/src/tables/glyf.js","../node_modules/opentype.js/src/hintingtt.js","../node_modules/opentype.js/src/tokenizer.js","../node_modules/opentype.js/src/char.js","../node_modules/opentype.js/src/features/featureQuery.js","../node_modules/opentype.js/src/features/arab/contextCheck/arabicWord.js","../node_modules/opentype.js/src/features/arab/contextCheck/arabicSentence.js","../node_modules/opentype.js/src/features/applySubstitution.js","../node_modules/opentype.js/src/features/arab/arabicPresentationForms.js","../node_modules/opentype.js/src/features/arab/arabicRequiredLigatures.js","../node_modules/opentype.js/src/features/latn/contextCheck/latinWord.js","../node_modules/opentype.js/src/features/latn/latinLigatures.js","../node_modules/opentype.js/src/bidi.js","../node_modules/opentype.js/src/font.js","../node_modules/opentype.js/src/tables/fvar.js","../node_modules/opentype.js/src/tables/gpos.js","../node_modules/opentype.js/src/tables/kern.js","../node_modules/opentype.js/src/tables/loca.js","../node_modules/opentype.js/src/opentype.js","../src/BRepGenerators.ts","../src/CustomPlane.ts","../src/Edge.ts","../src/StraightEdge.ts","../src/PCurveEdge.ts","../node_modules/svg-pathdata/src/SVGPathDataEncoder.ts","../node_modules/svg-pathdata/src/mathUtils.ts","../node_modules/svg-pathdata/src/SVGPathDataTransformer.ts","../node_modules/svg-pathdata/src/TransformableSVG.ts","../node_modules/svg-pathdata/src/SVGPathDataParser.ts","../node_modules/svg-pathdata/src/SVGPathData.ts","../src/edgeUtil.ts","../src/FaceInfo.ts","../node_modules/javasetmap.ts/src/JavaMap.ts","../node_modules/javasetmap.ts/src/JavaSet.ts","../src/Face.ts","../node_modules/earcut/src/earcut.js","../node_modules/nerdamer/nerdamer.core.js","../src/BRep.ts","../src/ClassSerializer.ts","../src/shaders.ts","../src/BREPGLContext.ts","../src/Quaternion.ts","../src/surface/ImplicitSurface.ts","../src/viewer.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * @license\n *\n * js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// tslint:disable:no-unnecessary-qualifier\n\nconst { abs, atan2, cos, floor, log, min, max, round, sign, sin, sqrt, cbrt, PI, hypot } = Math\n\nfunction lerp(a: number, b: number, f: number) {\n\treturn a + (b - a) * f\n}\nfunction lerpInv(a: number, b: number, f: number) {\n\treturn (f - a) / (b - a)\n}\nfunction clamp(x: number, min = 0, max = 1) {\n\treturn x < min ? min : x > max ? max : x\n}\n\nfunction newtonIterate1d(f: (x: number) => number, xStart: number, max_steps: number, eps: number = 1e-8): number {\n\tlet x = xStart,\n\t\tfx\n\twhile (max_steps-- && abs((fx = f(x))) > eps) {\n\t\tconst dfdx = (f(x + eps) - fx) / eps\n\t\tconsole.log(\"fx / dfdx\", fx / dfdx, \"fx\", fx, \"x\", x)\n\t\tx = x - fx / dfdx\n\t}\n\treturn x\n}\nfunction bisect(f: (x: number) => number, a: number, b: number, steps: number) {\n\t//assert(a < b)\n\tlet fA = f(a)\n\t// let fB = f(b)\n\t//assert(fA * fB < 0)\n\twhile (steps--) {\n\t\tconst c = (a + b) / 2\n\t\tconst fC = f(c)\n\t\t// console.log(\"fC\", fC, \"c\", c)\n\t\tif (sign(fA) == sign(fC)) {\n\t\t\ta = c\n\t\t\tfA = fC\n\t\t} else {\n\t\t\tb = c\n\t\t\t// fB = fC\n\t\t}\n\t}\n\t//assert(a <= (b + a) / 2)\n\t//assert(b >= (b + a) / 2)\n\treturn (a + b) / 2\n}\n\nconst TWOPI = 2 * PI\n\nconst DEG2RAD = PI / 180\n\nconst RAD2DEG = 180 / PI\n/**\n * @param alpha1 default=1\n * @example chroma.color(99, 99, 44, 0.7)\n */\nexport function color(red255: number, green255: number, blue255: number, alpha1?: number): Color\n/**\n * @example chroma.color('mediumorchid') // a css string\n * @example chroma.color([56, 203, 30]) // a RGB triple\n * @example chroma.color(0x4b0082) // a hex num\n * @example chroma.color([30, 0.8, 0.3], 'hsl') // explicit format\n */\nexport function color(x: Chromable, format?: ColorFormat): Color\n/**\n * This overload allows VS Code to suggest color names when you type `color('`.\n */\nexport function color(colorname: keyof typeof w3cx11, format?: \"name\"): Color\n/** @example chroma.color(30, 0.8, 0.3, 'hsl') */\nexport function color(channel0: number, channel1: number, channel2: number, format: ColorFormat): Color\n/** @example chroma.color(0.3, 0.8, 0.3, 1, 'gl') */\nexport function color(\n\tchannel0: number,\n\tchannel1: number,\n\tchannel2: number,\n\tchannel3: number,\n\tformat: ColorFormat,\n): Color\nexport function color(...args: any[]) {\n\tif (args[0] instanceof Color) {\n\t\treturn args[0]\n\t}\n\tif (args.length > 1 && \"string\" == typeof args[args.length - 1]) {\n\t\treturn guess(args.slice(0, args.length - 1), args[args.length - 1])\n\t} else if (Array.isArray(args[0])) {\n\t\treturn guess(args[0])\n\t} else {\n\t\treturn guess(args)\n\t}\n}\n/**\n * A Chromable is any value which can be converted to a color. For ease of use, most functions accept these instead of\n * only Color values.\n */\nexport type Chromable = number | string | Color | number[]\n\nexport class Color {\n\t/** @internal */\n\tconstructor(\n\t\tprivate readonly r: number,\n\t\tprivate readonly g: number,\n\t\tprivate readonly b: number,\n\t\tprivate readonly a = 1,\n\t) {}\n\n\t// public shade() {\n\t// \tconst shades: [string, string, number][] = [\n\t// \t\t[\"ff0000\", \"red\"],\n\t// \t\t[\"ffa500\", \"orange\"],\n\t// \t\t[\"ffff00\", \"yellow\"],\n\t// \t\t[\"008000\", \"green\"],\n\t// \t\t[\"0000ff\", \"blue\"],\n\t// \t\t[\"ee82ee\", \"violet\"],\n\t// \t\t[\"a52a2a\", \"brown\"],\n\t// \t\t[\"000000\", \"black\"],\n\t// \t\t[\"808080\", \"grey\"],\n\t// \t\t[\"ffffff\", \"white\"],\n\t// \t] as any\n\t// \tfunction angleDiff(a: number, b: number) {\n\t// \t\tconst d = (a - b) % 360\n\t// \t\tif (d > 180) return d - 360\n\t// \t\tif (d < -180) return d + 360\n\t// \t\treturn d\n\t// \t}\n\t// \tshades.forEach(arr => arr.push(color(arr[0]).hsl()[0]))\n\t// \tconst [h, s, l] = this.hsl()\n\t// \tif (l > 0.9) return \"white\"\n\t// \tif (l > 0.8 && s < 0.2) return \"white\"\n\t// \tif (s < 0.1) return \"grey\"\n\t// \tif (s < 0.4 && h > 0 && h < 48) return \"brown\"\n\n\t// \tconst distanceInXYZ: { [hue: number]: number } = { 0: 0 }\n\t// \tfor (let i = 60; i <= 360; i += 60) {\n\t// \t\tdistanceInXYZ[i] =\n\t// \t\t\tdistanceInXYZ[i - 60] + distance(hsl(i - 60, 1, 0.5), hsl(i, 1, 0.5), \"xyz\")\n\t// \t}\n\t// \t// console.log(distanceInXYZ)\n\n\t// \tconst shadeEnds: { [hue: number]: number } = {\n\t// \t\t0: 9,\n\t// \t\t38: 48,\n\t// \t\t60: 65,\n\t// \t\t120: 165,\n\t// \t\t240: 245,\n\t// \t\t300: 338,\n\t// \t\t360: 369,\n\t// \t}\n\n\t// \tconst getColorDistanceAlongXYZHue = (hueDegrees: number) => {\n\t// \t\tconst base = hueDegrees - (hueDegrees % 60)\n\t// \t\treturn (\n\t// \t\t\tdistanceInXYZ[base] + distance(hsl(base, 1, 0.5), hsl(hueDegrees, 1, 0.5), \"xyz\")\n\t// \t\t)\n\t// \t}\n\t// \tconst colorXYZD = getColorDistanceAlongXYZHue(this.hsl()[0])\n\t// \tconst md = distanceInXYZ[360]\n\t// \tconst shadeHue =\n\t// \t\t(Object.keys(shadeEnds) as any[]).find(shadeHue => shadeEnds[shadeHue | 0] >= this.hsl()[0])! % 360\n\t// \treturn shades.find(([_hex, _name, _hue]) => (_hue | 0) === shadeHue)![1]\n\t// \t// process.exit()\n\t// \treturn withMax(shades, ([_hex, _name, _hue]) => {\n\t// \t\treturn -abs(angleDiff(this.hsl()[0], _hue))\n\t// \t})[1]\n\t// \treturn withMax(shades, ([_hex, _name, _hue]) => {\n\t// \t\tconst [thisL, thisA, thisB] = this.lab()\n\t// \t\tconst [L, A, B] = color(_hex).lab()\n\t// \t\treturn -hypot(thisL - L, thisA - A, thisB - B)\n\t// \t})[1]\n\t// }\n\n\t/**\n\t * @see [[mix]]\n\t */\n\tpublic mix(col2: Chromable, f: number, m: InterpolationMode = \"rgb\") {\n\t\treturn mix(this, col2, f, m)\n\t}\n\tpublic rgb(doRound = true, clamp_ = true): RGB {\n\t\tconst f = (t: number) => {\n\t\t\tif (doRound) t = round(t)\n\t\t\tif (clamp_) t = clamp(t, 0, 255)\n\t\t\treturn t\n\t\t}\n\t\tconst { r, g, b } = this\n\t\treturn [f(r), f(g), f(b)]\n\t}\n\tpublic rgba(doRound = true, clamp_ = true): RGBA {\n\t\tconst f = (t: number) => {\n\t\t\tif (doRound) t = round(t)\n\t\t\tif (clamp_) t = clamp(t, 0, 255)\n\t\t\treturn t\n\t\t}\n\t\tconst { r, g, b, a } = this\n\t\treturn [f(r), f(g), f(b), a]\n\t}\n\n\t/**\n\t * Return a hex-string representation of this color.\n\t *\n\t * @param mode\n\t * @see #num for a hex-number representation.\n\t * @example chroma.color('yellow').alpha(0.7).hex()\n\t * @example chroma.color('yellow').alpha(0.7).hex('rgba')\n\t * @example chroma.color('yellow').alpha(0.7).hex('argb')\n\t */\n\tpublic hex(mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\t\tconst { r, g, b, a } = this\n\t\treturn rgb2hex(r, g, b, a, mode)\n\t}\n\n\t/**\n\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hsl()\n\t */\n\tpublic hsl(): HSL {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hsl(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hsv()\n\t */\n\tpublic hsv() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hsv(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hcg()\n\t */\n\tpublic hcg() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hcg(r, g, b)\n\t}\n\n\t/**\n\t * Returns a CSS `rgb(...)` or `hsl(...)` string representation that can be used as CSS-color definition. The alpha\n\t * value is not output if it 1.\n\t * @example chroma.color('teal').css() // == \"rgb(0,128,128)\"\n\t * @example chroma.color('teal').alpha(0.5).css() // == \"rgba(0,128,128,0.5)\"\n\t * @example chroma.color('teal').css('hsl') // == \"hsl(180,100%,25.1%)\"\n\t */\n\tpublic css(mode: \"rgb\" | \"hsl\" = \"rgb\") {\n\t\tif (\"rgb\" == mode) {\n\t\t\tconst { r, g, b, a } = this\n\t\t\treturn rgb2css(r, g, b, a)\n\t\t} else if (\"hsl\" == mode) {\n\t\t\treturn hsl2css(this.hsl(), this.alpha())\n\t\t} else {\n\t\t\tthrow new Error()\n\t\t}\n\t}\n\n\tpublic name(closest: true): string\n\t/**\n\t * Get the name of a color. By default, this method will try to match the color exactly (comparing rounded RGB\n\t * values). Pass `true` to return the name of the color which is closest to `this` in CIELAB color space. CIELAB is\n\t * used as it is perceptually uniform.\n\t * @param closest Whether this should find the closest color name. default=false\n\t * @return If `closest == false`, the name of this color or `undefined` if there is no match. Otherwise, will always\n\t * return a color name.\n\t * @example chroma.color('#ff0000').name() // == \"red\"\n\t * @example chroma.color('#ff0001').name() // == undefined\n\t * @example chroma.color('#ff0001').name(true) // == \"red\"\n\t */\n\tpublic name(closest?: boolean): string | undefined\n\tpublic name(closest: boolean = false): string | undefined {\n\t\tconst thisNum = this.num()\n\t\tconst name = Object.keys(w3cx11).find((name) => (w3cx11 as any)[name] == thisNum)\n\t\tif (!name && closest) {\n\t\t\tconst [thisLStar, thisAStar, thisBStar] = this.lab()\n\t\t\treturn withMax(Object.keys(w3cx11) as (keyof typeof w3cx11)[], (name) => {\n\t\t\t\tconst [lStar, aStar, bStar] = num(w3cx11[name]).lab()\n\t\t\t\treturn -hypot(thisLStar - lStar, thisAStar - aStar, thisBStar - bStar)\n\t\t\t})\n\t\t}\n\t\treturn name\n\t}\n\n\t/**\n\t * Get the [CMYK](#CMYK) representation of this color.\n\t *\n\t * @example chroma.color('red').cmyk()\n\t */\n\tpublic cmyk() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2cmyk(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [GL] representation of this color.\n\t * @example chroma.color('33cc00').gl()\n\t */\n\tpublic gl(): GL {\n\t\tconst { r, g, b, a } = this\n\t\treturn [r / 255, g / 255, b / 255, a]\n\t}\n\n\t/**\n\t * Get luminance of the color. This is equal to the Y channel of the XYZ color space.\n\t * @example chroma.color('black').luminance() // == 0\n\t * @example chroma.color('white').luminance() // == 1\n\t * @example chroma.color('red').luminance() // == ~0.21\n\t * @see https://en.wikipedia.org/wiki/Relative_luminance\n\t */\n\tpublic luminance(): number\n\t/**\n\t * Return a new [Color] with `lum1` by linearly interpolating `this` with white (when increasing the luminance) or\n\t * black (otherwise) in the [XYZ] color space.\n\t * @see https://en.wikipedia.org/wiki/Relative_luminance\n\t * @example // Approximately doubling the luminance of red\n\t * @example chroma.color('red').luminance(0.4) // == #ff8686 // \"Vivid Tangerine\"\n\t * @param lum1 The desired luminance.\n\t */\n\tpublic luminance(lum1: number): this\n\tpublic luminance(lum1?: number) {\n\t\tconst { r, g, b, a } = this\n\t\tconst [, Y] = rgb2xyz(r, g, b)\n\t\tif (undefined === lum1) {\n\t\t\treturn Y\n\t\t}\n\t\tconst inverseLerp = (a: number, b: number, val: number) => (val - a) / (b - a)\n\t\tif (lum1 > Y) {\n\t\t\t// lerp to white\n\t\t\treturn mix(this, white, inverseLerp(Y, 1, lum1), \"xyz\").alpha(a)\n\t\t} else {\n\t\t\t// lerp to black\n\t\t\treturn mix(black, this, inverseLerp(0, Y, lum1), \"xyz\").alpha(a)\n\t\t}\n\t}\n\n\t/**\n\t * Get color temperature of this color in Kelvin. This only makes sense for colors close to those output by\n\t * kelvin\n\t *\n\t * @example [c = chroma.color('#ff3300'), c.temperature()]\n\t * @example [c = chroma.color('#ffe3cd'), c.temperature()]\n\t * @example [c = chroma.color('#b3ccff'), c.temperature()]\n\t */\n\tpublic temperature() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2kelvin(r, g, b)\n\t}\n\n\t/**\n\t * Returns a new [Color] with a channel changed.\n\t * @example chroma.color('skyblue').set('hsl.h', 0) // change hue to 0 deg (=red)\n\t * @example chroma.color('hotpink').set('lch.c', 30) // set chromaticity to 30\n\t * @example chroma.color('orangered').set('lab.l', x => x / 2) // half Lab lightness\n\t * @example chroma.color('darkseagreen').set('lch.c', x => x * 2) // double Lch saturation\n\t */\n\tpublic set(modeAndChannel: string, value: number | ((channel: number) => number)) {\n\t\tconst [mode, channel] = modeAndChannel.split(\".\") as [ColorMode, string]\n\t\tconst src = this[mode]()\n\t\tconst i = mode.indexOf(channel)\n\t\tif (-1 == i) throw new Error(\"invalid channel\")\n\t\tsrc[i] = \"number\" == typeof value ? value : value(src[i])\n\t\treturn color(src, mode).alpha(this.a)\n\t}\n\n\t/**\n\t * Returns whether this color is outside the RGB color cube and will be clipped/clamped when calling .rgb()\n\t *\n\t * @example [c = chroma.lch( 20, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch( 40, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch( 60, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch( 80, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch(100, 40, 50), c.clipped()]\n\t */\n\tpublic clipped() {\n\t\tconst { r, g, b } = this\n\t\treturn !(0 <= r && r <= 255 && 0 <= g && g <= 255 && 0 <= b && b <= 255)\n\t}\n\n\t/**\n\t * Returns black or white, whichever has the highest contrast to `this`.\n\t * In the readme you should see the result of this.\n\t *\n\t * @example chroma.color('red')\n\t * @example chroma.color('yellow')\n\t */\n\tpublic textColor() {\n\t\treturn this.luminance() > 0.5 ? black : white\n\t}\n\n\t/**\n\t * Get alpha value of color.\n\t * @example chroma.rgb(0, 0, 255, 0.5).alpha() // == 0.5\n\t */\n\tpublic alpha(): number\n\t/**\n\t * Return new [Color] with given alpha value.\n\t * @example chroma.color('green').alpha(0.3)\n\t * @example chroma.color('green').alpha(0.3).hex('rgba') // == \"#00ff004d\"\n\t * @param alpha1 The desired alpha value.\n\t */\n\tpublic alpha(alpha1: number): Color\n\tpublic alpha(alpha1?: number): number | Color {\n\t\tif (undefined === alpha1) {\n\t\t\treturn this.a\n\t\t}\n\t\tconst { r, g, b } = this\n\t\treturn rgb(r, g, b, alpha1)\n\t}\n\n\tpublic darker(amount = 1) {\n\t\tconst [l, a, b] = this.lab()\n\t\treturn lab(l - LAB_Kn * amount, a, b, this.alpha())\n\t}\n\n\t/**\n\t *\n\t * @param amount\n\t * @example chroma.color('hotpink')\n\t * @example chroma.color('hotpink').brighter()\n\t * @example chroma.color('hotpink').brighter(2)\n\t * @example chroma.color('hotpink').brighter(3)\n\t */\n\tpublic brighter(amount = 1) {\n\t\treturn this.darker(-amount)\n\t}\n\n\t/**\n\t * Returns a new [Color] with increased saturation.\n\t * @param amount How much.\n\t * @example chroma.color('slategray')\n\t * @example chroma.color('slategray').saturate()\n\t * @example chroma.color('slategray').saturate(2)\n\t * @example chroma.color('slategray').saturate(3)\n\t */\n\tpublic saturate(amount = 1) {\n\t\tconst [l, c, h] = this.lch()\n\t\treturn lch(l, max(0, c + amount * LAB_Kn), h, this.alpha())\n\t}\n\n\t/**\n\t * Equivalent to `saturate(-amount)`.\n\t * @see #saturate\n\t */\n\tpublic desaturate(amount = 1) {\n\t\treturn this.saturate(-amount)\n\t}\n\n\tpublic premultiplied() {\n\t\tconst { r, g, b, a } = this\n\t\treturn rgb(r * a, g * a, b * a, a)\n\t}\n\n\t/**\n\t * Returns the [HSI] representation of this color. hue will always be in [0; 360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hsi()\n\t */\n\tpublic hsi() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hsi(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [LAB] representation of this color.\n\t *\n\t * @example chroma.color('purple').lab()\n\t */\n\tpublic lab() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2lab(r, g, b)\n\t}\n\n\t/**\n\t * Return a hex-num of this color.\n\t *\n\t * @param mode\n\t * @see #num for a hex-number representation.\n\t * @example chroma.color('yellow').alpha(0.7).hex()\n\t * @example chroma.color('yellow').alpha(0.7).hex('rgba')\n\t * @example chroma.color('yellow').alpha(0.7).hex('argb')\n\t */\n\tpublic num(mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\t\tconst { r, g, b, a } = this\n\t\treturn rgb2num(r, g, b, a, mode)\n\t}\n\n\t/**\n\t * Returns the [LCH] representation of this color. hue will always be in [0; 360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').lch()\n\t */\n\tpublic lch() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2lch(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [XYZ] representation of this color. hue will always be in [0; 360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').xyz()\n\t */\n\tpublic xyz() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2xyz(r, g, b)\n\t}\n\n\t/**\n\t * Whether this [Color](#Color) is identical (strict equality of r, g, b, a) to `color`.\n\t */\n\tpublic equals(color: Color) {\n\t\tconst { r, g, b, a } = this\n\t\tconst { r: r2, g: g2, b: b2, a: a2 } = color\n\t\treturn r == r2 && g == g2 && b == b2 && a == a2\n\t}\n\n\tpublic hashCode() {\n\t\treturn this.num(\"rgba\")\n\t}\n\n\t/**\n\t * @example chroma.color('red').toSource() // == \"rgb(255, 0, 0)\"\n\t * @example chroma.rgb(-2, 100.02, 200, 0.5).toSource() // == \"rgb(-2, 100.02, 200, 0.5)\"\n\t */\n\tpublic toSource() {\n\t\tconst { r, g, b, a } = this\n\t\treturn \"chroma.rgb(\" + r + \", \" + g + \", \" + b + (a === 1 ? \")\" : \", \" + a + \")\")\n\t}\n}\nexport interface Color {\n\ttoString(): string\n\t//darker(amount: number): Color\n\t//brighter(amount: number): Color\n\tkelvin(): number\n}\nColor.prototype.toString = Color.prototype.css\nColor.prototype.kelvin = Color.prototype.temperature\n/**\n * @example chroma.black\n */\nexport const black = new Color(0, 0, 0, 1)\n\n/**\n * @example chroma.black\n */\nexport const white = new Color(255, 255, 255, 1)\n\nexport const brewer = {\n\tOrRd: [0xfff7ec, 0xfee8c8, 0xfdd49e, 0xfdbb84, 0xfc8d59, 0xef6548, 0xd7301f, 0xb30000, 0x7f0000],\n\tPuBu: [0xfff7fb, 0xece7f2, 0xd0d1e6, 0xa6bddb, 0x74a9cf, 0x3690c0, 0x0570b0, 0x045a8d, 0x023858],\n\tBuPu: [0xf7fcfd, 0xe0ecf4, 0xbfd3e6, 0x9ebcda, 0x8c96c6, 0x8c6bb1, 0x88419d, 0x810f7c, 0x4d004b],\n\tOranges: [0xfff5eb, 0xfee6ce, 0xfdd0a2, 0xfdae6b, 0xfd8d3c, 0xf16913, 0xd94801, 0xa63603, 0x7f2704],\n\tBuGn: [0xf7fcfd, 0xe5f5f9, 0xccece6, 0x99d8c9, 0x66c2a4, 0x41ae76, 0x238b45, 0x006d2c, 0x00441b],\n\tYlOrBr: [0xffffe5, 0xfff7bc, 0xfee391, 0xfec44f, 0xfe9929, 0xec7014, 0xcc4c02, 0x993404, 0x662506],\n\tYlGn: [0xffffe5, 0xf7fcb9, 0xd9f0a3, 0xaddd8e, 0x78c679, 0x41ab5d, 0x238443, 0x006837, 0x004529],\n\tReds: [0xfff5f0, 0xfee0d2, 0xfcbba1, 0xfc9272, 0xfb6a4a, 0xef3b2c, 0xcb181d, 0xa50f15, 0x67000d],\n\tRdPu: [0xfff7f3, 0xfde0dd, 0xfcc5c0, 0xfa9fb5, 0xf768a1, 0xdd3497, 0xae017e, 0x7a0177, 0x49006a],\n\tGreens: [0xf7fcf5, 0xe5f5e0, 0xc7e9c0, 0xa1d99b, 0x74c476, 0x41ab5d, 0x238b45, 0x006d2c, 0x00441b],\n\tYlGnBu: [0xffffd9, 0xedf8b1, 0xc7e9b4, 0x7fcdbb, 0x41b6c4, 0x1d91c0, 0x225ea8, 0x253494, 0x081d58],\n\tPurples: [0xfcfbfd, 0xefedf5, 0xdadaeb, 0xbcbddc, 0x9e9ac8, 0x807dba, 0x6a51a3, 0x54278f, 0x3f007d],\n\tGnBu: [0xf7fcf0, 0xe0f3db, 0xccebc5, 0xa8ddb5, 0x7bccc4, 0x4eb3d3, 0x2b8cbe, 0x0868ac, 0x084081],\n\tGreys: [0xffffff, 0xf0f0f0, 0xd9d9d9, 0xbdbdbd, 0x969696, 0x737373, 0x525252, 0x252525, 0x000000],\n\tYlOrRd: [0xffffcc, 0xffeda0, 0xfed976, 0xfeb24c, 0xfd8d3c, 0xfc4e2a, 0xe31a1c, 0xbd0026, 0x800026],\n\tPuRd: [0xf7f4f9, 0xe7e1ef, 0xd4b9da, 0xc994c7, 0xdf65b0, 0xe7298a, 0xce1256, 0x980043, 0x67001f],\n\tBlues: [0xf7fbff, 0xdeebf7, 0xc6dbef, 0x9ecae1, 0x6baed6, 0x4292c6, 0x2171b5, 0x08519c, 0x08306b],\n\tPuBuGn: [0xfff7fb, 0xece2f0, 0xd0d1e6, 0xa6bddb, 0x67a9cf, 0x3690c0, 0x02818a, 0x016c59, 0x014636],\n\tViridis: [0x440154, 0x482777, 0x3f4a8a, 0x31678e, 0x26838f, 0x1f9d8a, 0x6cce5a, 0xb6de2b, 0xfee825],\n\tSpectral: [\n\t\t0x9e0142,\n\t\t0xd53e4f,\n\t\t0xf46d43,\n\t\t0xfdae61,\n\t\t0xfee08b,\n\t\t0xffffbf,\n\t\t0xe6f598,\n\t\t0xabdda4,\n\t\t0x66c2a5,\n\t\t0x3288bd,\n\t\t0x5e4fa2,\n\t],\n\tRdYlGn: [\n\t\t0xa50026,\n\t\t0xd73027,\n\t\t0xf46d43,\n\t\t0xfdae61,\n\t\t0xfee08b,\n\t\t0xffffbf,\n\t\t0xd9ef8b,\n\t\t0xa6d96a,\n\t\t0x66bd63,\n\t\t0x1a9850,\n\t\t0x006837,\n\t],\n\tRdBu: [\n\t\t0x67001f,\n\t\t0xb2182b,\n\t\t0xd6604d,\n\t\t0xf4a582,\n\t\t0xfddbc7,\n\t\t0xf7f7f7,\n\t\t0xd1e5f0,\n\t\t0x92c5de,\n\t\t0x4393c3,\n\t\t0x2166ac,\n\t\t0x053061,\n\t],\n\tPiYG: [\n\t\t0x8e0152,\n\t\t0xc51b7d,\n\t\t0xde77ae,\n\t\t0xf1b6da,\n\t\t0xfde0ef,\n\t\t0xf7f7f7,\n\t\t0xe6f5d0,\n\t\t0xb8e186,\n\t\t0x7fbc41,\n\t\t0x4d9221,\n\t\t0x276419,\n\t],\n\tPRGn: [\n\t\t0x40004b,\n\t\t0x762a83,\n\t\t0x9970ab,\n\t\t0xc2a5cf,\n\t\t0xe7d4e8,\n\t\t0xf7f7f7,\n\t\t0xd9f0d3,\n\t\t0xa6dba0,\n\t\t0x5aae61,\n\t\t0x1b7837,\n\t\t0x00441b,\n\t],\n\tRdYlBu: [\n\t\t0xa50026,\n\t\t0xd73027,\n\t\t0xf46d43,\n\t\t0xfdae61,\n\t\t0xfee090,\n\t\t0xffffbf,\n\t\t0xe0f3f8,\n\t\t0xabd9e9,\n\t\t0x74add1,\n\t\t0x4575b4,\n\t\t0x313695,\n\t],\n\tBrBG: [\n\t\t0x543005,\n\t\t0x8c510a,\n\t\t0xbf812d,\n\t\t0xdfc27d,\n\t\t0xf6e8c3,\n\t\t0xf5f5f5,\n\t\t0xc7eae5,\n\t\t0x80cdc1,\n\t\t0x35978f,\n\t\t0x01665e,\n\t\t0x003c30,\n\t],\n\tRdGy: [\n\t\t0x67001f,\n\t\t0xb2182b,\n\t\t0xd6604d,\n\t\t0xf4a582,\n\t\t0xfddbc7,\n\t\t0xffffff,\n\t\t0xe0e0e0,\n\t\t0xbababa,\n\t\t0x878787,\n\t\t0x4d4d4d,\n\t\t0x1a1a1a,\n\t],\n\tPuOr: [\n\t\t0x7f3b08,\n\t\t0xb35806,\n\t\t0xe08214,\n\t\t0xfdb863,\n\t\t0xfee0b6,\n\t\t0xf7f7f7,\n\t\t0xd8daeb,\n\t\t0xb2abd2,\n\t\t0x8073ac,\n\t\t0x542788,\n\t\t0x2d004b,\n\t],\n\tSet2: [0x66c2a5, 0xfc8d62, 0x8da0cb, 0xe78ac3, 0xa6d854, 0xffd92f, 0xe5c494, 0xb3b3b3],\n\tAccent: [0x7fc97f, 0xbeaed4, 0xfdc086, 0xffff99, 0x386cb0, 0xf0027f, 0xbf5b17, 0x666666],\n\tSet1: [0xe41a1c, 0x377eb8, 0x4daf4a, 0x984ea3, 0xff7f00, 0xffff33, 0xa65628, 0xf781bf, 0x999999],\n\tSet3: [\n\t\t0x8dd3c7,\n\t\t0xffffb3,\n\t\t0xbebada,\n\t\t0xfb8072,\n\t\t0x80b1d3,\n\t\t0xfdb462,\n\t\t0xb3de69,\n\t\t0xfccde5,\n\t\t0xd9d9d9,\n\t\t0xbc80bd,\n\t\t0xccebc5,\n\t\t0xffed6f,\n\t],\n\tDark2: [0x1b9e77, 0xd95f02, 0x7570b3, 0xe7298a, 0x66a61e, 0xe6ab02, 0xa6761d, 0x666666],\n\tPaired: [\n\t\t0xa6cee3,\n\t\t0x1f78b4,\n\t\t0xb2df8a,\n\t\t0x33a02c,\n\t\t0xfb9a99,\n\t\t0xe31a1c,\n\t\t0xfdbf6f,\n\t\t0xff7f00,\n\t\t0xcab2d6,\n\t\t0x6a3d9a,\n\t\t0xffff99,\n\t\t0xb15928,\n\t],\n\tPastel2: [0xb3e2cd, 0xfdcdac, 0xcbd5e8, 0xf4cae4, 0xe6f5c9, 0xfff2ae, 0xf1e2cc, 0xcccccc],\n\tPastel1: [0xfbb4ae, 0xb3cde3, 0xccebc5, 0xdecbe4, 0xfed9a6, 0xffffcc, 0xe5d8bd, 0xfddaec, 0xf2f2f2],\n}\n\n/**\n * X11 color names\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @example chroma.Object.keys(w3cx11).slice(0, 4)\n */\nexport const w3cx11 = {\n\taliceblue: 0xf0f8ff,\n\tantiquewhite: 0xfaebd7,\n\taqua: 0x00ffff,\n\taquamarine: 0x7fffd4,\n\tazure: 0xf0ffff,\n\tbeige: 0xf5f5dc,\n\tbisque: 0xffe4c4,\n\tblack: 0x000000,\n\tblanchedalmond: 0xffebcd,\n\tblue: 0x0000ff,\n\tblueviolet: 0x8a2be2,\n\tbrown: 0xa52a2a,\n\tburlywood: 0xdeb887,\n\tcadetblue: 0x5f9ea0,\n\tchartreuse: 0x7fff00,\n\tchocolate: 0xd2691e,\n\tcoral: 0xff7f50,\n\tcornflower: 0x6495ed,\n\tcornflowerblue: 0x6495ed,\n\tcornsilk: 0xfff8dc,\n\tcrimson: 0xdc143c,\n\tcyan: 0x00ffff,\n\tdarkblue: 0x00008b,\n\tdarkcyan: 0x008b8b,\n\tdarkgoldenrod: 0xb8860b,\n\tdarkgray: 0xa9a9a9,\n\tdarkgreen: 0x006400,\n\tdarkgrey: 0xa9a9a9,\n\tdarkkhaki: 0xbdb76b,\n\tdarkmagenta: 0x8b008b,\n\tdarkolivegreen: 0x556b2f,\n\tdarkorange: 0xff8c00,\n\tdarkorchid: 0x9932cc,\n\tdarkred: 0x8b0000,\n\tdarksalmon: 0xe9967a,\n\tdarkseagreen: 0x8fbc8f,\n\tdarkslateblue: 0x483d8b,\n\tdarkslategray: 0x2f4f4f,\n\tdarkslategrey: 0x2f4f4f,\n\tdarkturquoise: 0x00ced1,\n\tdarkviolet: 0x9400d3,\n\tdeeppink: 0xff1493,\n\tdeepskyblue: 0x00bfff,\n\tdimgray: 0x696969,\n\tdimgrey: 0x696969,\n\tdodgerblue: 0x1e90ff,\n\tfirebrick: 0xb22222,\n\tfloralwhite: 0xfffaf0,\n\tforestgreen: 0x228b22,\n\tfuchsia: 0xff00ff,\n\tgainsboro: 0xdcdcdc,\n\tghostwhite: 0xf8f8ff,\n\tgold: 0xffd700,\n\tgoldenrod: 0xdaa520,\n\tgray: 0x808080,\n\tgreen: 0x008000,\n\tgreenyellow: 0xadff2f,\n\tgrey: 0x808080,\n\thoneydew: 0xf0fff0,\n\thotpink: 0xff69b4,\n\tindianred: 0xcd5c5c,\n\tindigo: 0x4b0082,\n\tivory: 0xfffff0,\n\tkhaki: 0xf0e68c,\n\tlaserlemon: 0xffff54,\n\tlavender: 0xe6e6fa,\n\tlavenderblush: 0xfff0f5,\n\tlawngreen: 0x7cfc00,\n\tlemonchiffon: 0xfffacd,\n\tlightblue: 0xadd8e6,\n\tlightcoral: 0xf08080,\n\tlightcyan: 0xe0ffff,\n\tlightgoldenrod: 0xfafad2,\n\tlightgoldenrodyellow: 0xfafad2,\n\tlightgray: 0xd3d3d3,\n\tlightgreen: 0x90ee90,\n\tlightgrey: 0xd3d3d3,\n\tlightpink: 0xffb6c1,\n\tlightsalmon: 0xffa07a,\n\tlightseagreen: 0x20b2aa,\n\tlightskyblue: 0x87cefa,\n\tlightslategray: 0x778899,\n\tlightslategrey: 0x778899,\n\tlightsteelblue: 0xb0c4de,\n\tlightyellow: 0xffffe0,\n\tlime: 0x00ff00,\n\tlimegreen: 0x32cd32,\n\tlinen: 0xfaf0e6,\n\tmagenta: 0xff00ff,\n\tmaroon: 0x800000,\n\tmaroon2: 0x7f0000,\n\tmaroon3: 0xb03060,\n\tmediumaquamarine: 0x66cdaa,\n\tmediumblue: 0x0000cd,\n\tmediumorchid: 0xba55d3,\n\tmediumpurple: 0x9370db,\n\tmediumseagreen: 0x3cb371,\n\tmediumslateblue: 0x7b68ee,\n\tmediumspringgreen: 0x00fa9a,\n\tmediumturquoise: 0x48d1cc,\n\tmediumvioletred: 0xc71585,\n\tmidnightblue: 0x191970,\n\tmintcream: 0xf5fffa,\n\tmistyrose: 0xffe4e1,\n\tmoccasin: 0xffe4b5,\n\tnavajowhite: 0xffdead,\n\tnavy: 0x000080,\n\toldlace: 0xfdf5e6,\n\tolive: 0x808000,\n\tolivedrab: 0x6b8e23,\n\torange: 0xffa500,\n\torangered: 0xff4500,\n\torchid: 0xda70d6,\n\tpalegoldenrod: 0xeee8aa,\n\tpalegreen: 0x98fb98,\n\tpaleturquoise: 0xafeeee,\n\tpalevioletred: 0xdb7093,\n\tpapayawhip: 0xffefd5,\n\tpeachpuff: 0xffdab9,\n\tperu: 0xcd853f,\n\tpink: 0xffc0cb,\n\tplum: 0xdda0dd,\n\tpowderblue: 0xb0e0e6,\n\tpurple: 0x800080,\n\tpurple2: 0x7f007f,\n\tpurple3: 0xa020f0,\n\trebeccapurple: 0x663399,\n\tred: 0xff0000,\n\trosybrown: 0xbc8f8f,\n\troyalblue: 0x4169e1,\n\tsaddlebrown: 0x8b4513,\n\tsalmon: 0xfa8072,\n\tsandybrown: 0xf4a460,\n\tseagreen: 0x2e8b57,\n\tseashell: 0xfff5ee,\n\tsienna: 0xa0522d,\n\tsilver: 0xc0c0c0,\n\tskyblue: 0x87ceeb,\n\tslateblue: 0x6a5acd,\n\tslategray: 0x708090,\n\tslategrey: 0x708090,\n\tsnow: 0xfffafa,\n\tspringgreen: 0x00ff7f,\n\tsteelblue: 0x4682b4,\n\ttan: 0xd2b48c,\n\tteal: 0x008080,\n\tthistle: 0xd8bfd8,\n\ttomato: 0xff6347,\n\tturquoise: 0x40e0d0,\n\tviolet: 0xee82ee,\n\twheat: 0xf5deb3,\n\twhite: 0xffffff,\n\twhitesmoke: 0xf5f5f5,\n\tyellow: 0xffff00,\n\tyellowgreen: 0x9acd32,\n}\n\n/**\n * Return a new [[CubeHelix]].\n *\n * @example chroma.cubehelix() // use the default helix\n * @example chroma.cubehelix().start(200).rotations(-0.5).gamma(0.8).lightness([0.3, 0.8])\n */\nexport function cubehelix(\n\tstart = 300,\n\trotations = -1.5,\n\thue: number | [number, number] = 1,\n\tgamma = 1,\n\tlightness: number | [number, number] = [0, 1],\n) {\n\tconst f: CubeHelix = ((t) => f.at(t)) as CubeHelix\n\t;(Object.getOwnPropertyNames(CubeHelix.prototype) as (keyof typeof CubeHelix)[]).forEach(\n\t\t(key) => (f[key] = CubeHelix.prototype[key]),\n\t)\n\tf.start(start)\n\tf.rotations(rotations)\n\tf.hue(hue)\n\tf.gamma(gamma)\n\tf.lightness(lightness)\n\treturn f\n}\n\n/**\n * [Dave Green's cubehelix color scheme](http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/)!\n *\n * A CubeHelix is a function defined on [0, 1] which returns colors.\n */\nexport interface CubeHelix {\n\t(f: number): Color\n}\nexport class CubeHelix {\n\tprivate _start!: number\n\tprivate _rotations!: number\n\tprivate _gamma!: number\n\tprivate _hue!: [number, number]\n\tprivate _lightness!: [number, number]\n\n\tpublic start(): number\n\tpublic start(s: number): this\n\tpublic start(s?: number) {\n\t\tif (undefined === s) {\n\t\t\treturn this._start\n\t\t}\n\t\tthis._start = s\n\t\treturn this\n\t}\n\n\tpublic rotations(): number\n\tpublic rotations(r: number): this\n\tpublic rotations(r?: number) {\n\t\tif (undefined === r) {\n\t\t\treturn this._rotations\n\t\t}\n\t\tthis._rotations = r\n\t\treturn this\n\t}\n\n\tpublic gamma(): number\n\tpublic gamma(g: number): this\n\tpublic gamma(g?: number) {\n\t\tif (undefined === g) {\n\t\t\treturn this._gamma\n\t\t}\n\t\tthis._gamma = g\n\t\treturn this\n\t}\n\n\tpublic hue(): [number, number]\n\tpublic hue(h: number | [number, number]): this\n\tpublic hue(h?: number | [number, number]) {\n\t\tif (undefined === h) {\n\t\t\treturn this._hue\n\t\t}\n\t\tthis._hue = Array.isArray(h) ? h : [h, h]\n\t\treturn this\n\t}\n\n\tpublic lightness(): [number, number]\n\tpublic lightness(h: number | [number, number]): this\n\tpublic lightness(h?: number | [number, number]) {\n\t\tif (undefined === h) {\n\t\t\treturn this._lightness\n\t\t}\n\t\tthis._lightness = Array.isArray(h) ? h : [h, h]\n\t\treturn this\n\t}\n\n\t/**\n\t * Convert to a [[Scale]].\n\t *\n\t * @example chroma.cubehelix().scale().correctLightness().domain(2, 22)\n\t */\n\tpublic scale() {\n\t\treturn scale(this)\n\t}\n\n\tpublic at(fract: number) {\n\t\tconst a = TWOPI * ((this._start + 120) / 360 + this._rotations * fract)\n\t\tconst l = lerp(this._lightness[0], this._lightness[1], fract) ** this._gamma\n\t\tconst h = lerp(this._hue[0], this._hue[1], fract)\n\t\tconst amp = (h * l * (1 - l)) / 2\n\t\tconst cos_a = cos(a)\n\t\tconst sin_a = sin(a)\n\t\tconst r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a)\n\t\tconst g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a)\n\t\tconst b = l + amp * (+1.97294 * cos_a)\n\t\treturn rgb([r * 255, g * 255, b * 255, 1])\n\t}\n}\n\n/**\n * Create a new random [Color] from a random point in the RGB color space.\n * @param randomSource A function which returns random `number`s in the interval [0; 1). Useful if you want to\n *     create a deterministic sequence of \"random\" colors. Defaults to `Math.random`.\n */\nexport function random(randomSource = Math.random) {\n\treturn num((randomSource() * 0x1_00_00_00) | 0)\n}\n\n/**\n * Create a valid RGB color (`.clipped() == false`) from a random point in the CIELAB color space. This results in\n * more colors in the RGB color space where humans can perceive more differences.\n * @param randomSource A function which returns random `number`s in the interval [0; 1). Useful if you want to\n *     create a deterministic sequence of \"random\" colors. Defaults to `Math.random`.\n * @example chroma.random((() => { let i = 0; return () => (i = (i *Math.SQRT2) % 1); })())\n */\n// export function randomLab(randomSource = Math.random) {\n// \tconst labAMin = -87,\n// \t\tlabAMax = 99,\n// \t\tlabBMin = -108,\n// \t\tlabBMax = 95\n// \tlet maxIterations = 100\n// \twhile (maxIterations--) {\n// \t\tconst u = randomSource(),\n// \t\t\tv = randomSource(),\n// \t\t\tw = randomSource()\n// \t\t// The following matrix multiplication transform the random point (u v w) in the unit cube into the\n// \t\t// oriented bounding box (OBB) of the projection of the RGB space into the LAB space. This is necessary to\n// \t\t// avoid a huge number of misses.\n// \t\tconst color = lab(\n// \t\t\tu * -53.903 + v * -88.755 + w * 71.7 + 99.707,\n// \t\t\tu * -82.784 + v * 187.036 + w * -2.422 + -28.17,\n// \t\t\tu * -75.813 + v * -141.406 + w * -48.261 + 152.469,\n// \t\t)\n// \t\tconsole.log(color.lab())\n// \t\tconsole.log(color.rgba(false, false))\n// \t\tif (!color.clipped()) return color\n// \t}\n// \tthrow new Error(\"Could find a random color in 100 iterations\")\n// }\n\n/**\n * Mixes two colors. The mix ratio is a value between 0 and 1.\n * The color mixing produces different results based the color space used for interpolation.\n *\n * @param col2\n * @param f\n * @param m\n * @example chroma.mix('red', 'blue')\n * @example chroma.mix('red', 'blue', 0.25)\n * @example chroma.mix('red', 'blue', 0.75)\n *\n * @example chroma.mix('red', 'blue', 0.5, 'rgb')\n * @example chroma.mix('red', 'blue', 0.5, 'hsl')\n * @example chroma.mix('red', 'blue', 0.5, 'lab')\n * @example chroma.mix('red', 'blue', 0.5, 'lch')\n * @example chroma.mix('red', 'blue', 0.5, 'lrgb')\n */\nexport function mix(col1: Chromable, col2: Chromable, f = 0.5, m: InterpolationMode = \"rgb\") {\n\tconst c1 = color(col1)\n\tconst c2 = color(col2)\n\tconst res = interpolators[m] && ((interpolators as any)[m](c1, c2, f, m) as Color)\n\tif (!res) {\n\t\tthrow new Error(\"color mode \" + m + \" is not supported\")\n\t}\n\treturn res.alpha(lerp(c1.alpha(), c2.alpha(), f))\n}\n\n/**\n * Parse a CSS color. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color) for all the possible\n * variants.\n *\n * @example chroma.css('hsl(2rad 90% 50% / 0.9)')\n * @example chroma.css('laserlemon')\n */\nexport function css(cssString: string) {\n\tconst [r, g, b, a] = css2rgb(cssString)\n\treturn new Color(r, g, b, a)\n}\n\n/**\n * @example chroma.cmyk(0.2, 0.8, 0, 0)\n * @example chroma.color(0.2, 0.8, 0, 0, 'cmyk')\n */\nexport function cmyk(cmyk: CMYK): Color\nexport function cmyk(cyan1: number, magenta1: number, yellow1: number, key1: number): Color\nexport function cmyk(...args: any[]) {\n\treturn guess(args, \"cmyk\")\n}\n\n/**\n * @example chroma.gl(1, 1, 0, 1)\n */\nexport function gl(gl: RGBA | RGB): Color\n/**\n * @example chroma.gl([1, 0, 1, 0.5])\n */\nexport function gl(red1: number, green1: number, blue1: number, alpha1: number): Color\nexport function gl(...args: any[]) {\n\treturn guess(args, \"gl\")\n}\n\nexport function hcg(hcg: HCG): Color\n/**\n * @param alpha1 default=1\n */\nexport function hcg(h: number, c: number, g: number, alpha1?: number): Color\nexport function hcg(...args: any[]) {\n\treturn guess(args, \"hcg\")\n}\n\nexport function lch(lch: LCH): Color\n/**\n * @param alpha1 default=1\n */\nexport function lch(h: number, c: number, l: number, alpha1?: number): Color\nexport function lch(...args: any[]) {\n\treturn guess(args, \"lch\")\n}\n\nexport function hsi(hsi: HSI): Color\n/**\n * @param alpha1 default=1\n */\nexport function hsi(h: number, s: number, i: number, alpha1?: number): Color\nexport function hsi(...args: any[]) {\n\treturn guess(args, \"hsi\")\n}\n\nexport function hsl(hsl: HSL): Color\n/**\n * @param alpha1 default=1\n * @example chroma.hsl(30, 1, 0.5)\n * @example chroma.hsl(30, 0.6, 0.5)\n */\nexport function hsl(hueDegrees: number, saturation1: number, lightness1: number, alpha1?: number): Color\nexport function hsl(...args: any[]) {\n\treturn guess(args, \"hsl\")\n}\n\nexport function hsv(hsv: LAB): Color\nexport function hsv(h: number, s: number, v: number): Color\nexport function hsv(...args: any[]) {\n\treturn guess(args, \"hsv\")\n}\n\n/**\n *\n * @param temperature\n * @example chroma.kelvin(2000) // candle light\n * @example chroma.kelvin(3500) // sunset\n * @example chroma.kelvin(6500) // daylight\n * @example x0_1 => chroma.kelvin(x0_1 * 30000) // effective range: [0; 30000]\n */\nexport function kelvin(temperature: number) {\n\tconst [r, g, b] = kelvin2rgb(temperature)\n\treturn new Color(r, g, b)\n}\n\nexport function lab(lab: LAB): Color\n/**\n * @param alpha1 default=1\n */\nexport function lab(lightness1: number, a1: number, b: number, alpha1?: number): Color\nexport function lab(...args: any[]) {\n\treturn guess(args, \"lab\")\n}\n\n/**\n * @example chroma.num(0x663399) // rebeccapurple\n */\nexport function num(num: number) {\n\tconst [r, g, b] = num2rgb(num)\n\treturn new Color(r, g, b)\n}\n\nexport function rgb(rgb: RGBA | RGB): Color\n/**\n * @param alpha1 default=1\n * @example chroma.rgb(0, 100, 200)\n */\nexport function rgb(red255: number, green255: number, blue255: number, alpha1?: number): Color\nexport function rgb(...args: any[]) {\n\treturn guess(args, \"rgb\")\n}\n\nexport function xyz(xyz: XYZ): Color\n/** @param alpha1 default=1 */\nexport function xyz(x1: number, y1: number, z1: number, alpha1?: number): Color\nexport function xyz(...args: any[]) {\n\treturn guess(args, \"xyz\")\n}\n\n/**\n * Similar to mix, but accepts more than two colors.\n *\n * @example colors = ['#ddd', 'yellow', 'red', 'teal']\n * @example chroma.average(colors) // default = 'rgb'\n * @example chroma.average(colors, 'lab')\n * @example chroma.average(colors, 'lch')\n * @example chroma.average(colors, 'lrgb')\n * @example chroma.average(['red', 'rgba(0,0,0,0.5)']).css()\n */\nexport function average(chromables: Chromable[], mode: InterpolationMode = \"rgb\") {\n\tconst colors = chromables.map((c) => color(c))\n\tif (mode == \"lrgb\") {\n\t\treturn _average_lrgb(colors)\n\t}\n\tif (mode == \"num\") {\n\t\tlet numSum = 0,\n\t\t\talphaSum = 0\n\t\tfor (const col of colors) {\n\t\t\tnumSum += col.num()\n\t\t\talphaSum += col.alpha()\n\t\t}\n\t\treturn num(numSum / colors.length).alpha(alphaSum / colors.length)\n\t}\n\tconst xyz = [0, 0, 0]\n\tlet dx = 0\n\tlet dy = 0\n\tlet alphaSum = 0\n\tfor (const c of colors) {\n\t\tconst xyz2 = c[mode]()\n\t\talphaSum += c.alpha()\n\n\t\tfor (let i = 0; i < xyz.length; i++) {\n\t\t\tif (mode.charAt(i) == \"h\") {\n\t\t\t\tconst A = xyz2[i] * DEG2RAD\n\t\t\t\tdx += cos(A)\n\t\t\t\tdy += sin(A)\n\t\t\t} else {\n\t\t\t\txyz[i] += xyz2[i]\n\t\t\t}\n\t\t}\n\t}\n\tfor (let i = 0; i < xyz.length; i++) {\n\t\tif (mode.charAt(i) == \"h\") {\n\t\t\tconst A = atan2(dy / colors.length, dx / colors.length) * RAD2DEG\n\t\t\txyz[i] = (A + 360) % 360\n\t\t} else {\n\t\t\txyz[i] = xyz[i] / colors.length\n\t\t}\n\t}\n\treturn guess(xyz, mode).alpha(alphaSum / colors.length)\n}\n\n/**\n *\n * @param chromables\n * @example chroma.scale('black', 'red', 'gold') // linear interpolation\n * @example chroma.bezier('black', 'red', 'gold') // bezier interpolation\n */\nexport function bezier(chromables: Chromable[]): { (t: number): Color; scale(): Scale }\nexport function bezier(...chromables: Chromable[]): { (t: number): Color; scale(): Scale }\nexport function bezier(...args: any[]) {\n\tconst chromables: Chromable[] = Array.isArray(args[0]) ? args[0] : args\n\tconst f = _bezier(chromables) as { (t: number): Color; scale(): Scale }\n\tf.scale = CubeHelix.prototype.scale\n\treturn f\n}\n\n/**\n * Blends two colors using RGB channel-wise blend functions.\n * @param bottom\n * @param top\n * @param mode\n * @example chroma.blend('4CBBFC', 'EEEE22', 'multiply')\n * @example chroma.blend('4CBBFC', 'EEEE22', 'darken')\n * @example chroma.blend('4CBBFC', 'EEEE22', 'lighten')\n */\nexport function blend(bottom: Chromable, top: Chromable, mode: BlendMode) {\n\tif (!blend_fs[mode]) {\n\t\tthrow new Error(\"unknown blend mode \" + mode)\n\t}\n\treturn blend_fs[mode](bottom, top)\n}\nexport type BlendMode = keyof typeof blend_fs\nconst blend_fs = {\n\tnormal: blend_f(each((a, _) => a)),\n\tmultiply: blend_f(each((a, b) => (a * b) / 255)),\n\tscreen: blend_f(each(_screen)),\n\toverlay: blend_f(each(_overlay)),\n\tdarken: blend_f(each(min)),\n\tlighten: blend_f(each(max)),\n\tdodge: blend_f(each(_dodge)),\n\tburn: blend_f(each(_burn)),\n}\n\n/**\n * @param colors\n * @example scale = chroma.scale(['yellow', '008ae5'])\n * @example scale(0.25)\n * @example scale(0.5)\n * @example scale(0.75)\n * @example chroma.scale('Viridis')\n */\nexport function scale(colors: Chromable[] | keyof typeof brewer | ((f: number) => Color)): Scale\nexport function scale(...colors: Chromable[]): Scale\nexport function scale(...args: any[]) {\n\tconst f: Scale = ((t) => (f as any)._at(t)) as Scale\n\t;(Object.getOwnPropertyNames(Scale.prototype) as (keyof typeof Scale)[]).forEach(\n\t\t(key) => (f[key] = Scale.prototype[key]),\n\t)\n\tif (Array.isArray(args[0])) args = args[0]\n\tif (args.length == 1 && \"string\" == typeof args[0]) args = brewer[args[0] as keyof typeof brewer]\n\t;(f as any)._init(\"function\" == typeof args[0] ? args[0] : args.map((a) => color(a)))\n\t//f.setColors(args.length > 1 ? args : args[0])\n\treturn f\n}\n/**\n * A color scale, created with scale, is a function that maps numeric values to a color palette.\n *\n * The type parameter describes the output type and can be changed with out(). Defaults to Color objects.\n *\n * @param T The output format. default=Color\n * @example chroma.scale('Purples')\n * @example chroma.scale('Purples')(0.4)\n */\nexport interface Scale<T = Color> {\n\t(val: number): T\n}\nexport class Scale<T = Color> {\n\tprivate _colors!: Color[] | ((t: number) => Color)\n\tprivate _classes!: number[] | undefined\n\t/**\n\t * Color cache. undefined if the cache should not be used.\n\t */\n\tprivate _cache!: Map<number, Color> | undefined\n\tprivate _correctLightness!: boolean\n\tprivate _gamma!: number\n\tprivate _mode!: InterpolationMode\n\tprivate _out!: ColorFormat | undefined\n\tprivate _min!: number\n\tprivate _max!: number\n\tprivate _paddingLeft!: number\n\tprivate _paddingRight!: number\n\t// positions of the colors on the interval [0, 1]. guaranteed to have the same length as _colors\n\t// undefined when _colors is a function\n\tprivate _pos: number[] | undefined\n\n\t/**\n\t * Get the current scale classes.\n\t */\n\tpublic classes(): number[]\n\t/**\n\t * Make the scale return a number of distint color instead of a continuous gradient.\n\t * If you pass a number the scale will broken into equi-distant classes:\n\t *\n\t * @example chroma.scale('OrRd') // continous\n\t * @example chroma.scale('OrRd').classes(5) // equidistant classes\n\t * @example chroma.scale('OrRd').classes(8)\n\t *\n\t * @example chroma.scale('OrRd').classes([0, 6, 11, 17, 20]) // also sets domain\n\t */\n\tpublic classes(classes: number | number[]): this\n\tpublic classes(classes?: number | number[]) {\n\t\tif (undefined === classes) {\n\t\t\treturn this._classes\n\t\t}\n\t\tif (Array.isArray(classes)) {\n\t\t\tthis._classes = classes\n\t\t\tthis.domain(classes[0], classes[classes.length - 1])\n\t\t} else {\n\t\t\tif (classes % 1 != 0 || classes < 1) throw new Error(\"invalid classes param\")\n\t\t\t// const d = analyze(this.domain())\n\t\t\tthis._classes = limits(this.domain(), \"e\", classes)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the domain.\n\t * @return If _colors is a function, [this._min, this._max]. If _colors is an array of colors, an array with the\n\t * same length as the number of colors.\n\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 20).domain() // == [0, 10, 20]\n\t */\n\tpublic domain(): number[]\n\t/**\n\t * Set the domain interval on which the scale is defined. Colors are distributed equidistantly along the\n\t * interval.\n\t * @param start\n\t * @param end\n\t * @return `this`\n\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 100)(50) // == white\n\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 0.25, 1).domain(0, 100).domain() // == [0, 25, 100]\n\t */\n\tpublic domain(start: number, end: number): this\n\t/**\n\t * Set the domain interval and the individual positions of the colors. The number of passed values must match\n\t * the number of colors which define the scale. Not valid if the scale is defined by a function.\n\t * @param domain The positions of all scale colors. Values must be in ascending order and should not have\n\t * duplicates.\n\t * @return `this`\n\t * @example scale = chroma.scale(\"red\", \"white\", \"blue\").domain(0, 25, 100)\n\t * @example scale(25) // == white\n\t * @example scale(100) // == blue\n\t * @example scale(50) // == #aaaaff\n\t */\n\tpublic domain(...domain: number[]): this\n\tpublic domain(...domain: number[]): number[] | this {\n\t\tif (undefined === domain[0]) {\n\t\t\treturn \"function\" !== typeof this._colors\n\t\t\t\t? this._pos!.map((p) => lerp(this._min, this._max, p))\n\t\t\t\t: [this._min, this._max]\n\t\t}\n\t\tthis._min = domain[0]\n\t\tthis._max = domain[domain.length - 1]\n\t\tif (2 == domain.length) {\n\t\t\tif (\"function\" !== typeof this._colors) {\n\t\t\t\t// equidistant positions\n\t\t\t\tthis._pos = this._colors.map((_, c) => c / (this._colors.length - 1))\n\t\t\t}\n\t\t} else if (\"function\" !== typeof this._colors && domain.length == this._colors.length) {\n\t\t\tthis._pos = domain.map((d) => lerpInv(this._min, this._max, d))\n\t\t} else {\n\t\t\tthrow new Error(\"invalid domain \" + domain)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the interpolation mode used when calculating colors.\n\t */\n\tpublic mode(): InterpolationMode\n\t/**\n\t * Set the interpolation mode used when calculating colors. The defaut mode is \"rgb\".\n\t * See also {@link chroma#mix}\n\t * @param mode the mode to set.\n\t * @return `this`\n\t * @example chroma.scale(\"red\", \"green\").mode(\"lab\")\n\t * @example chroma.scale(\"red\", \"green\").mode(\"lrgb\")\n\t */\n\tpublic mode(mode: InterpolationMode): this\n\tpublic mode(mode?: InterpolationMode) {\n\t\tif (undefined === mode) {\n\t\t\treturn this._mode\n\t\t}\n\t\tthis._mode = mode\n\t\tthis._resetCache()\n\t\treturn this\n\t}\n\n\t/**\n\t * Set the output format return by `this(x)` and `this.colors(n)`.\n\t * @param outputFormat The color format to use. Pass `undefined` to return [Color] objects.\n\t * @return `this`\n\t * @example chroma.scale(\"red\", \"white\").out(\"hex\")(0) // == \"#ff0000\"\n\t * @example chroma.scale(\"red\", \"white\").out(\"num\").colors(2) // == [0xff0000, 0xffffff]\n\t */\n\tpublic out<M extends ColorFormat | undefined>(\n\t\toutputFormat: M,\n\t): Scale<M extends ColorFormat ? ReturnType<Color[M]> : Color> {\n\t\tthis._out = outputFormat\n\t\treturn this as any\n\t}\n\n\t/**\n\t * This makes sure the lightness range is spread evenly across a color scale. Especially useful when working\n\t * with [multi-hue color scales](https://www.vis4.net/blog/2013/09/mastering-multi-hued-color-scales/), where\n\t * simple gamma correction can't help you very much.\n\t *\n\t * @example chroma.scale('black','red','yellow','white')\n\t * @example chroma.scale('black','red','yellow','white').correctLightness()\n\t */\n\tpublic correctLightness(enableCorrectLightness = true) {\n\t\tif (this._correctLightness != enableCorrectLightness) {\n\t\t\tthis._resetCache()\n\t\t\tconst colors = this._colors\n\t\t\tif (enableCorrectLightness && \"function\" !== typeof colors) {\n\t\t\t\t// make sure that the colors have ascending or descending lightnesses\n\t\t\t\tlet sign = 0\n\t\t\t\tfor (let i = 1; i < colors.length; i++) {\n\t\t\t\t\tconst sign2 = colors[i].lab()[0] - colors[i - 1].lab()[0]\n\t\t\t\t\tif (0 == sign) {\n\t\t\t\t\t\tsign = sign2\n\t\t\t\t\t} else if (sign * sign2 < 0) {\n\t\t\t\t\t\tthrow new Error(\"scale color lightnesses must be monotonic\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._correctLightness = enableCorrectLightness\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the padding.\n\t * @returns [paddingLeft, paddingRight]\n\t */\n\tpublic padding(): [number, number]\n\t/**\n\t * Set the padding. Positive values will \"cut off\" the ends of gradient, while negative values will add a\n\t * section of constant color at the ends.\n\t * @example chroma.scale(\"red\", \"white\").padding(0.2)\n\t * @example chroma.scale(\"red\", \"white\").padding(0.1)(0) // == color('#ff1a1a'), instead of red\n\t * @example chroma.scale(\"red\", \"white\").padding(-0.1)(0) // == color('red')\n\t * @param paddingLeft padding on left side.(lower-valued end of the interval).\n\t * @param paddingRight padding on right (higher-valued end of the interval).\n\t * default=paddingLeft\n\t */\n\tpublic padding(paddingLeft: number, paddingRight?: number): this\n\tpublic padding(paddingLeft?: number, paddingRight: number | undefined = paddingLeft) {\n\t\tif (!paddingLeft) {\n\t\t\treturn [this._paddingLeft, this._paddingRight]\n\t\t}\n\t\tthis._paddingLeft = paddingLeft\n\t\tthis._paddingRight = paddingRight!\n\t\treturn this\n\t}\n\n\t/**\n\t * Get a number of equidistant colors.\n\t * @param numColors The number of colors to return.\n\t * @param format Output format. Defaults to `\"hex\"`. Pass `\"color\"` to get {@link Color} objects.\n\t * @returns If `numColors` is `undefined`, the colors which define this [Scale]. If `numColors` is 1,\n\t * `[this((min + max) / 2)]`. Otherwise, an array where the first element is `this(min)`, the last one is\n\t * `this(max)` and the rest are equidistant samples between min and max.\n\t * @example chroma.scale('OrRd').colors(5)\n\t * @example chroma.scale(['white', 'black']).colors(12)\n\t */\n\tpublic colors<M extends ColorFormat | \"color\" | undefined = \"hex\">(\n\t\tnumColors?: number,\n\t\tformat: M = \"hex\" as any,\n\t): Array<M extends ColorFormat ? ReturnType<Color[M]> : M extends \"color\" ? Color : string> {\n\t\tlet result: Color[]\n\t\tif (undefined === numColors) {\n\t\t\tresult = (this._colors as Color[]).slice()\n\t\t} else if (numColors == 1) {\n\t\t\tresult = [this._color((this._min + this._max) / 2)]\n\t\t} else if (numColors > 1) {\n\t\t\tresult = Array.from({ length: numColors }, (_, i) =>\n\t\t\t\tthis._color(lerp(this._min, this._max, i / (numColors - 1))),\n\t\t\t)\n\t\t} else {\n\t\t\t// returns all colors based on the defined classes\n\t\t\tlet samples\n\t\t\tif (this._classes && this._classes.length > 2) {\n\t\t\t\tsamples = Array.from(\n\t\t\t\t\t{ length: this._classes.length - 1 },\n\t\t\t\t\t(_, i) => (this._classes![i] + this._classes![i + 1]) * 0.5,\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tsamples = this.domain() // TODO?!\n\t\t\t}\n\t\t\tresult = samples.map((s) => this._color(s))\n\t\t}\n\n\t\treturn (format != \"color\" ? result.map((c) => c[format as \"hex\"]()) : result) as any\n\t}\n\n\t/**\n\t * Get whether the cache is enabled. Defaults to true.\n\t */\n\tpublic cache(): boolean\n\t/**\n\t * Enable or disable the cache.\n\t * @param enableCache Whether the cache should be enabled.\n\t */\n\tpublic cache(enableCache: boolean): this\n\tpublic cache(enableCache?: boolean) {\n\t\tif (undefined === enableCache) {\n\t\t\treturn !!this._cache\n\t\t}\n\t\tthis._cache = enableCache ? this._cache || new Map() : undefined\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the current gamma value. Defaults to 1.\n\t */\n\tpublic gamma(): number\n\t/**\n\t * Set the gamma value. Gamma-correction can be used to \"shift\" a scale's center more the the beginning (gamma <\n\t * 1) or end (gamma > 1), typically used to \"even\" the lightness gradient. Default is 1.\n\t * @example chroma.scale('YlGn').gamma(0.5)\n\t * @example chroma.scale('YlGn').gamma(1)\n\t * @example chroma.scale('YlGn').gamma(2)\n\t */\n\tpublic gamma(gamma: number): this\n\tpublic gamma(gamma?: number) {\n\t\tif (undefined === gamma) {\n\t\t\treturn this._gamma\n\t\t}\n\t\tthis._gamma = gamma\n\t\treturn this\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _at(t: number) {\n\t\tconst c = this._color(t)\n\t\treturn this._out ? c[this._out]() : c\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _init(colorsOrFunction: Color[] | ((t: number) => Color)) {\n\t\tthis._colors = colorsOrFunction\n\t\tif (\"function\" != typeof colorsOrFunction) {\n\t\t\tthis._pos = colorsOrFunction.map((_, i) => i / (colorsOrFunction.length - 1))\n\t\t}\n\t\tthis._mode = \"rgb\"\n\t\tthis.domain(0, 1)\n\t\tthis._paddingLeft = 0\n\t\tthis._paddingRight = 0\n\t\tthis._correctLightness = false\n\t\tthis._cache = new Map()\n\t\tthis._gamma = 1\n\t}\n\n\tprivate _getClass(value: number) {\n\t\treturn this._classes!.findIndex((cls) => value <= cls) - 1\n\t}\n\n\tprivate _color(val: number, bypassMap = false) {\n\t\tlet t\n\t\tif (!bypassMap) {\n\t\t\tconst min = this._min,\n\t\t\t\tmax = this._max\n\t\t\tif (this._classes && this._classes.length > 2) {\n\t\t\t\tconst c = this._getClass(val)\n\t\t\t\tt = c / (this._classes.length - 2)\n\t\t\t} else if (max !== min) {\n\t\t\t\tt = (val - min) / (max - min)\n\t\t\t} else {\n\t\t\t\tt = 1\n\t\t\t}\n\t\t\tif (this._correctLightness) {\n\t\t\t\tt = this._tCorrectedLightness(t)\n\t\t\t}\n\t\t} else {\n\t\t\tt = val\n\t\t}\n\t\tt = t ** this._gamma\n\t\tt = (this._paddingLeft + t) / (1 + this._paddingLeft + this._paddingRight)\n\t\t//\tt = this._paddingLeft + t * (1 - this._paddingLeft - this._paddingRight)\n\t\tt = clamp(t, 0, 1)\n\t\tconst tHash = t\n\t\tconst cacheResult = this._cache && this._cache.get(tHash)\n\t\tif (cacheResult) {\n\t\t\treturn cacheResult\n\t\t} else {\n\t\t\tlet col: Color\n\t\t\tif (Array.isArray(this._colors)) {\n\t\t\t\tfor (let i = 0; i < this._pos!.length; i++) {\n\t\t\t\t\tconst p = this._pos![i]\n\t\t\t\t\tif (t <= p) {\n\t\t\t\t\t\tcol = this._colors[i]\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif (t >= p && i == this._pos!.length - 1) {\n\t\t\t\t\t\tcol = this._colors[i]\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif (t > p && t < this._pos![i + 1]) {\n\t\t\t\t\t\tt = (t - p) / (this._pos![i + 1] - p)\n\t\t\t\t\t\tcol = mix(this._colors[i], this._colors[i + 1], t, this._mode)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcol = this._colors(t)\n\t\t\t}\n\t\t\tif (this._cache) {\n\t\t\t\t// tslint:disable-next-line\n\t\t\t\tthis._cache.set(tHash, col!)\n\t\t\t}\n\t\t\t// tslint:disable-next-line\n\t\t\treturn col!\n\t\t}\n\t}\n\tprivate _tCorrectedLightness(t0_1: number) {\n\t\tconst L0 = this._color(0, true).lab()[0]\n\t\tconst L1 = this._color(1, true).lab()[0]\n\t\tconst L_ideal = lerp(L0, L1, t0_1)\n\t\treturn bisect((t) => this._color(t, true).lab()[0] - L_ideal, 0, 1, 8)\n\t}\n\tprivate _resetCache() {\n\t\tif (this._cache) this._cache.clear()\n\t}\n}\n\nexport namespace scales {\n\t/**\n\t * @example chroma.scales.cool()\n\t */\n\texport function cool() {\n\t\treturn scale([hsl(180, 1, 0.9), hsl(250, 0.7, 0.4)])\n\t}\n\n\t/**\n\t * @example chroma.scales.hot()\n\t */\n\texport function hot() {\n\t\treturn scale([\"#000\", \"#f00\", \"#ff0\", \"#fff\"]).mode(\"rgb\")\n\t}\n}\n\n/**\n * Computes the WCAG contrast ratio between two colors. A minimum contrast of 4.5:1\n * [is recommended](http://www.w3.org/TR/WCAG20-TECHS/G18.html) to ensure that text is still readable against a\n * background color.\n *\n * @param a\n * @param b\n */\nexport function contrast(a: Chromable, b: Chromable) {\n\tconst l1 = color(a).luminance()\n\tconst l2 = color(b).luminance()\n\tif (l1 > l2) {\n\t\treturn (l1 + 0.05) / (l2 + 0.05)\n\t} else {\n\t\treturn (l2 + 0.05) / (l1 + 0.05)\n\t}\n}\n\n/**\n * Compute the [euclidean distance](https://en.wikipedia.org/wiki/Euclidean_distance#Three_dimensions) between two\n * colors in a given color space.\n * @param a First color.\n * @param b Second color.\n * @param mode The color space in which to compute the distance. Defaults to \"lab\".\n * @example chroma.distance('#fff', '#ff0', 'rgb')\n * @example chroma.distance('#fff', '#f0f', 'rgb')\n * @example chroma.distance('#fff', '#ff0')\n * @example chroma.distance('#fff', '#f0f')\n */\nexport function distance(a: Chromable, b: Chromable, mode: ColorMode = \"lab\") {\n\tconst l1 = color(a)[mode]()\n\tconst l2 = color(b)[mode]()\n\tconst channelDifferences = l1.map((channelValue: number, channelIndex: number) => channelValue - l2[channelIndex])\n\treturn hypot(...channelDifferences)\n}\n\n/**\n * Computes color difference as developed by the Colour Measurement Committee of the Society of Dyers and Colourists\n * (CMC) in 1984. The implementation is adapted from Bruce Lindbloom. The parameters L and C are weighting factors\n * for lightness and chromaticity.\n * @param reference\n * @param sample\n * @param L\n * @param C\n * @example [r = '#ededee', s = '#edeeed', chroma.deltaE(r, s)]\n * @example [r = '#ececee', s = '#eceeec', chroma.deltaE(r, s)]\n * @example [r = '#e9e9ee', s = '#e9eee9', chroma.deltaE(r, s)]\n * @example [r = '#e4e4ee', s = '#e4eee4', chroma.deltaE(r, s)]\n * @example [r = '#e0e0ee', s = '#e0eee0', chroma.deltaE(r, s)]\n */\nexport function deltaE(reference: Chromable, sample: Chromable, L = 1, C = 1) {\n\tconst [L1, a1, b1] = color(reference).lab()\n\tconst [L2, a2, b2] = color(sample).lab()\n\tconst c1 = sqrt(a1 * a1 + b1 * b1)\n\tconst c2 = sqrt(a2 * a2 + b2 * b2)\n\tconst sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1)\n\tconst sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638\n\tconst h1 = norm360(c1 < 0.000001 ? 0.0 : atan2(b1, a1) * RAD2DEG)\n\tconst t =\n\t\th1 >= 164.0 && h1 <= 345.0\n\t\t\t? 0.56 + abs(0.2 * cos((h1 + 168.0) * DEG2RAD))\n\t\t\t: 0.36 + abs(0.4 * cos((h1 + 35.0) * DEG2RAD))\n\tconst c4 = c1 * c1 * c1 * c1\n\tconst f = sqrt(c4 / (c4 + 1900.0))\n\tconst sh = sc * (f * t + 1.0 - f)\n\tconst delL = L1 - L2\n\tconst delC = c1 - c2\n\tconst delA = a1 - a2\n\tconst delB = b1 - b2\n\tconst dH2 = delA * delA + delB * delB - delC * delC\n\tconst v1 = delL / (L * sl)\n\tconst v2 = delC / (C * sc)\n\tconst v3 = sh\n\treturn sqrt(v1 * v1 + v2 * v2 + dH2 / (v3 * v3))\n}\ntype DataInfo = {\n\tmin: number\n\tmax: number\n\tsum: number\n\tvalues: number[]\n\tcount: number\n\tdomain: [number, number]\n\tlimits(mode: LimitsMode, num: number): number[]\n}\nexport function analyze(data: number[]): DataInfo {\n\tconst r: DataInfo = {\n\t\tmin: Infinity,\n\t\tmax: -Infinity,\n\t\tsum: 0,\n\t\tvalues: [] as number[],\n\t\tcount: 0,\n\t} as DataInfo\n\tfunction add(val: number) {\n\t\tif (val != undefined && !isNaN(val)) {\n\t\t\tr.values.push(val)\n\t\t\tr.sum += val\n\t\t\tif (val < r.min) r.min = val\n\t\t\tif (val > r.max) r.max = val\n\t\t\tr.count += 1\n\t\t}\n\t}\n\tdata.forEach((val) => add(val))\n\tr.domain = [r.min, r.max]\n\tr.limits = function (mode, num) {\n\t\treturn limits(this, mode, num)\n\t}\n\treturn r\n}\n\ntype LimitsMode = \"c\" | \"e\" | \"q\" | \"l\" | \"k\"\nexport function limits(data: number[] | DataInfo, mode: LimitsMode = \"e\", num = 7): number[] {\n\tconst info = Array.isArray(data) ? analyze(data) : data\n\tconst { min, max, values } = info\n\tvalues.sort((a, b) => a - b)\n\tif (num == 1) {\n\t\treturn [min, max]\n\t}\n\tif (mode.startsWith(\"c\")) {\n\t\treturn [min, max]\n\t} else if (mode.startsWith(\"e\")) {\n\t\treturn Array.from({ length: num + 1 }, (_, i) => lerp(min, max, i / num))\n\t} else if (mode.startsWith(\"l\")) {\n\t\tif (min <= 0) {\n\t\t\tthrow new Error(\"Logarithmic scales are only possible for values > 0\")\n\t\t}\n\t\tconst min_log = Math.LOG10E * log(min)\n\t\tconst max_log = Math.LOG10E * log(max)\n\t\treturn Array.from({ length: num + 1 }, (_, i) => 10 ** lerp(min_log, max_log, i / num))\n\t} else if (mode.startsWith(\"q\")) {\n\t\treturn Array.from({ length: num + 1 }, (_, i) => {\n\t\t\tconst p = ((values.length - 1) * i) / num\n\t\t\tconst pb = floor(p)\n\t\t\treturn pb == p ? values[pb] : lerp(values[pb], values[pb + 1], p - pb)\n\t\t})\n\t} else if (mode.startsWith(\"k\")) {\n\t\t// implementation based on\n\t\t// http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n\t\t// simplified for 1-d input values\n\t\tconst n = values.length\n\t\tconst assignments = new Array(n)\n\t\tconst clusterSizes = new Array(num)\n\t\tlet repeat = true\n\t\tlet nb_iters = 0\n\t\tlet centroids = Array.from({ length: num + 1 }, (_, i) => lerp(min, max, i / num))\n\t\tdo {\n\t\t\t// assignment step\n\t\t\tclusterSizes.fill(0)\n\t\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\t\tconst value = values[i]\n\t\t\t\tconst minDistIndex = indexOfMax(centroids, (c) => -abs(c - value))\n\t\t\t\tclusterSizes[minDistIndex]++\n\t\t\t\tassignments[i] = minDistIndex\n\t\t\t}\n\n\t\t\t// update centroids step\n\t\t\tconst newCentroids = new Array(num).fill(0)\n\t\t\tfor (let i = 0; i < assignments.length; i++) {\n\t\t\t\tconst cluster = assignments[i]\n\t\t\t\tnewCentroids[cluster] += values[i]\n\t\t\t}\n\t\t\tfor (let j = 0; j < newCentroids.length; j++) {\n\t\t\t\tnewCentroids[j] /= clusterSizes[j]\n\t\t\t}\n\n\t\t\t// check convergence\n\t\t\trepeat = newCentroids.some((nc, j) => nc != centroids[j])\n\t\t\tcentroids = newCentroids\n\t\t} while (nb_iters++ < 200 && repeat)\n\n\t\t// finished k-means clustering\n\t\t// the next part is borrowed from gabrielflor.it\n\t\tconst kClusters: number[][] = Array.from({ length: num }, () => [])\n\t\tfor (let i = 0; i < assignments.length; i++) {\n\t\t\tconst cluster = assignments[i]\n\t\t\tkClusters[cluster].push(values[i])\n\t\t}\n\t\tconst tmpKMeansBreaks = []\n\t\tfor (const kCluster of kClusters) {\n\t\t\ttmpKMeansBreaks.push(kCluster[0], kCluster[kCluster.length - 1])\n\t\t}\n\t\ttmpKMeansBreaks.sort((a, b) => a - b)\n\n\t\tconst limits = []\n\t\tlimits.push(tmpKMeansBreaks[0])\n\t\tfor (let i = 1; i < tmpKMeansBreaks.length; i += 2) {\n\t\t\tconst v = tmpKMeansBreaks[i]\n\t\t\tif (!isNaN(v) && limits.indexOf(v) == -1) {\n\t\t\t\tlimits.push(v)\n\t\t\t}\n\t\t}\n\t\treturn limits\n\t} else {\n\t\tthrow new Error(\"unknown mode\")\n\t}\n}\n\nconst interpolators: { [K in InterpolationMode]?: (color1: Color, color2: Color, f: number, mode: K) => Color } = {}\n\n// const _guess_formats: { p: number; test: (args: any[]) => ColorFormat | undefined }[] = []\nconst _input: {\n\t[mode: string]: (...args: any[]) => RGB | RGBA\n} = {}\n\nfunction linear_interpolator(col1: Color, col2: Color, f: number, m: ColorMode) {\n\tconst xyz1 = col1[m]()\n\tconst xyz2 = col2[m]()\n\treturn guess(\n\t\t[\n\t\t\tlerp(xyz1[0], xyz2[0], f),\n\t\t\tlerp(xyz1[1], xyz2[1], f),\n\t\t\tlerp(xyz1[2], xyz2[2], f),\n\t\t\tlerp(col1.alpha(), col2.alpha(), f),\n\t\t],\n\t\tm,\n\t)\n}\ninterpolators.xyz = interpolators.rgb = interpolators.lab = linear_interpolator\n\ninterpolators.num = function (col1, col2, f) {\n\tconst n1 = col1.num()\n\tconst n2 = col2.num()\n\treturn num(lerp(n1, n2, f))\n}\n\ninterpolators.lrgb = function (col1, col2, f) {\n\tconst [r1, g1, b1, a1] = col1.rgba(false, false)\n\tconst [r2, g2, b2, a2] = col2.rgba(false, false)\n\treturn new Color(\n\t\tsqrt(r1 ** 2 * (1 - f) + r2 ** 2 * f),\n\t\tsqrt(g1 ** 2 * (1 - f) + g2 ** 2 * f),\n\t\tsqrt(b1 ** 2 * (1 - f) + b2 ** 2 * f),\n\t\tlerp(a1, a2, f),\n\t)\n}\n\nfunction _bezier(chromables: Chromable[]): (t: number) => Color {\n\tconst colors = chromables.map((c) => color(c))\n\tconst [lab0, lab1, lab2, lab3] = colors.map((c) => c.lab())\n\tif (2 == chromables.length) {\n\t\t// linear interpolation\n\t\treturn (t) => {\n\t\t\treturn lab([0, 1, 2].map((i) => lerp(lab0[i], lab1[i], t)) as LAB)\n\t\t}\n\t} else if (3 == chromables.length) {\n\t\t// quadratic bezier interpolation\n\t\tconst bezier2 = (p0: number, p1: number, p2: number, t: number) =>\n\t\t\t(1 - t) ** 2 * p0 + 2 * (1 - t) * t * p1 + t ** 2 * p2\n\t\treturn (t) => lab([0, 1, 2].map((i) => bezier2(lab0[i], lab1[i], lab2[i], t)) as LAB)\n\t} else if (4 == chromables.length) {\n\t\t// cubic bezier interpolation\n\t\tconst bezier3 = (p0: number, p1: number, p2: number, p3: number, t: number) =>\n\t\t\t(1 - t) ** 3 * p0 + 3 * (1 - t) ** 2 * t * p1 + 3 * (1 - t) * t ** 2 * p2 + t ** 3 * p3\n\t\treturn (t) => lab([0, 1, 2].map((i) => bezier3(lab0[i], lab1[i], lab2[i], lab3[i], t)) as LAB)\n\t} else if (5 == chromables.length) {\n\t\tconst I0 = _bezier(colors.slice(0, 3))\n\t\tconst I1 = _bezier(colors.slice(2, 5))\n\t\treturn (t) => (t < 0.5 ? I0(t * 2) : I1((t - 0.5) * 2))\n\t} else throw new Error()\n}\n\nfunction guess(args: any[], mode?: ColorFormat): Color {\n\tif (Array.isArray(args[0])) args = args[0]\n\tif (!mode) {\n\t\tif (args.length == 1 && args[0] in w3cx11) {\n\t\t\tmode = \"name\"\n\t\t} else if (args.length == 1 && \"string\" == typeof args[0]) {\n\t\t\tmode = \"css\"\n\t\t} else if (args.length == 3) {\n\t\t\tmode = \"rgb\"\n\t\t} else if (args.length == 4 && \"number\" == typeof args[3] && args[3] >= 0 && args[3] <= 1) {\n\t\t\tmode = \"rgb\"\n\t\t} else if (args.length == 1 && \"number\" == typeof args[0] && args[0] >= 0 && args[0] <= 0xffffff) {\n\t\t\tmode = \"num\"\n\t\t} else throw new Error(\"could not guess mode. args \" + JSON.stringify(args))\n\t}\n\tconst channels = _input[mode](...args)\n\treturn new Color(channels[0], channels[1], channels[2], undefined !== channels[3] ? channels[3] : 1)\n}\n\nfunction _average_lrgb(colors: Color[]) {\n\tlet rSquareSum = 0,\n\t\tgSquareSum = 0,\n\t\tbSquareSum = 0,\n\t\talphaSum = 0\n\tfor (const col of colors) {\n\t\tconst [r, g, b, alpha] = col.rgba(false, false)\n\t\trSquareSum += r ** 2\n\t\tgSquareSum += g ** 2\n\t\tbSquareSum += b ** 2\n\t\talphaSum += alpha\n\t}\n\treturn new Color(\n\t\tsqrt(rSquareSum) / colors.length,\n\t\tsqrt(gSquareSum) / colors.length,\n\t\tsqrt(bSquareSum) / colors.length,\n\t\talphaSum / colors.length,\n\t)\n}\n\nfunction hex2rgb(hex: string): RGBA {\n\tlet m\n\tif ((m = hex.match(/^#?([A-F\\d]{2})([A-F\\d]{2})([A-F\\d]{2})([A-F\\d]{2})?$/i))) {\n\t\treturn [parseInt(m[1], 16), parseInt(m[2], 16), parseInt(m[3], 16), m[4] ? parseInt(m[4], 16) / 255 : 1]\n\t} else if ((m = hex.match(/^#?([A-F\\d])([A-F\\d])([A-F\\d])([A-F\\d])?$/i))) {\n\t\treturn [\n\t\t\tparseInt(m[1], 16) * 0x11,\n\t\t\tparseInt(m[2], 16) * 0x11,\n\t\t\tparseInt(m[3], 16) * 0x11,\n\t\t\tm[4] ? (parseInt(m[4], 16) * 0x11) / 255 : 1,\n\t\t]\n\t}\n\tthrow new Error(\"invalid hex color: \" + hex)\n}\n// color mode, i.e. representation as array of number\nexport type ColorMode = \"rgb\" | \"cmyk\" | \"lab\" | \"hsv\" | \"hsi\" | \"hcg\" | \"hsl\" | \"gl\" | \"lch\" | \"xyz\"\nexport type InterpolationMode = \"rgb\" | \"lab\" | \"hsv\" | \"hsi\" | \"hcg\" | \"hsl\" | \"lch\" | \"xyz\" | \"lrgb\" | \"num\"\nexport type ColorFormat = ColorMode | \"hex\" | \"num\" | \"name\" | \"kelvin\" | \"css\"\n/**\n * CMYK color space\n * @see https://en.wikipedia.org/wiki/cmyk_color_model\n * [cyan, magenta, yellow, alpha1]\n */\ntype CMYK = [number, number, number, number]\n/**\n * WebGL colors. Like RGB, but floats in [0; 1] instead of 0-255.\n * [red255, green255, blue255, alpha1]\n */\ntype GL = [number, number, number, number]\n/**\n * Red, green, blue ranging from 0-255.\n * Can be floats and outside the above range internally.\n */\ntype RGB = [number, number, number]\n/**\n * RGB plus alpha ranging from 0-1\n * [red255, green255, blue255, alpha1]\n */\ntype RGBA = [number, number, number, number]\n/**\n * CIELAB color space\n * [lightness, A*, B*]\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space\n */\ntype LAB = [number, number, number]\n/**\n * Cylindrical representation of CIELAB\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#Cylindrical_representation:_CIELCh_or_CIEHLC\n *\n */\ntype LCH = [number, number, number]\n/**\n * @see https://en.wikipedia.org/wiki/HSL_and_HSV\n * [hueDegrees, saturation1, lightness1]\n */\ntype HSL = [number, number, number]\n/**\n * @see https://en.wikipedia.org/wiki/HSL_and_HSV\n * [hueDegrees, saturation1, value1]\n */\ntype HSV = [number, number, number]\n/**\n * @see https://en.wikipedia.org/w/index.php?title=HSI_color_space&redirect=no\n * [hueDegrees, saturation1, intensity1]\n */\ntype HSI = [number, number, number]\ntype XYZ = [number, number, number]\n/**\n * HCG Color Model\n * See https://github.com/acterhd/hcg-color\n * A color value in the HCG format is an array of three numbers [h, c, g], where\n * `h` is the hue as an angle in degrees [0; 360)\n * `c` is the chroma value in [0; 1]\n * `g` is the gray value in [0; 1]\n */\ntype HCG = [number, number, number]\n\n// interface ColorModes {\n// \tcmyk: CMYK\n// \tgl: GL\n// \trgb: RGB\n// \trgba: RGBA\n// \tlab: LAB\n// \thsl: HSL\n// \thsv: HSV\n// \thsi: HSI\n// \txyz: XYZ\n// \thcg: HCG\n// \tlch: LCH\n// \thex: string\n// \tnum: number\n// \tname: string\n// \tkelvin: number\n// \tcss: string\n// }\nfunction rgb2hex(r255: number, g255: number, b255: number, a1: number, mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\tr255 = clamp(round(r255), 0, 255)\n\tg255 = clamp(round(g255), 0, 255)\n\tb255 = clamp(round(b255), 0, 255)\n\tconst rgb = (r255 << 16) | (g255 << 8) | b255\n\tconst rgbString = rgb.toString(16).padStart(6, \"0\")\n\tconst alphaString = round(clamp(a1) * 255)\n\t\t.toString(16)\n\t\t.padStart(2, \"0\")\n\treturn \"#\" + (\"argb\" == mode ? alphaString + rgbString : \"rgba\" == mode ? rgbString + alphaString : rgbString)\n}\n\n_input.lrgb = _input.rgb\n\n_input.hex = hex2rgb\n_input.hsl = hsl2rgb\nfunction norm360(degrees: number) {\n\treturn ((degrees % 360) + 360) % 360\n}\n\n_input.hsv = hsv2rgb\n\nfunction num2rgb(num: number): RGBA {\n\tif (!(\"number\" == typeof num && num >= 0 && num <= 0xffffff)) {\n\t\tthrow new Error(\"unknown num color: \" + num)\n\t}\n\tconst r = num >> 16\n\tconst g = (num >> 8) & 0xff\n\tconst b = num & 0xff\n\treturn [r, g, b, 1]\n}\n\nfunction rgb2num(r255: number, g255: number, b255: number, a1: number = 1, mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\tconst rgbNum = (round(r255) << 16) | (round(g255) << 8) | round(b255)\n\tif (\"rgb\" === mode) {\n\t\treturn rgbNum\n\t} else if (\"rgba\" === mode) {\n\t\treturn (rgbNum << 8) | (round(a1 * 255) << 24)\n\t} else {\n\t\treturn (round(a1 * 255) << 24) | rgbNum\n\t}\n}\n\n_input.num = num2rgb\n\nconst WS = \"\\\\s*\"\nconst FLOAT = \"([+-]?(?:\\\\d*\\\\.?)?\\\\d+(?:[eE][+-]?\\\\d+)?)\"\nconst CSS_RGB_REGEX = new RegExp(\n\t[\"^rgba?\\\\(\", FLOAT, \",\", FLOAT, \",\", FLOAT, \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nconst CSS_RGB_WS_REGEX = new RegExp([\"^rgba?\\\\(\", FLOAT, FLOAT, FLOAT, \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS), \"i\")\nconst CSS_RGB_PERCENT_REGEX = new RegExp(\n\t[\"^rgba?\\\\(\", FLOAT + \"%\", \",\", FLOAT + \"%\", \",\", FLOAT + \"%\", \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nconst CSS_RGB_WS_PERCENT_REGEX = new RegExp(\n\t[\"^rgba?\\\\(\", FLOAT + \"%\", FLOAT + \"%\", FLOAT + \"%\", \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nconst CSS_HSL_REGEX = new RegExp(\n\t[\"^hsla?\\\\(\", FLOAT + \"(deg|rad|turn)?\", \",\", FLOAT + \"%\", \",\", FLOAT + \"%\", \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(\n\t\tWS,\n\t),\n\t\"i\",\n)\nconst CSS_HSL_WS_REGEX = new RegExp(\n\t[\"^hsla?\\\\(\", FLOAT + \"(deg|rad|turn)?\\\\s+\" + FLOAT + \"%\", FLOAT + \"%\", \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nfunction css2rgb(css: string): RGBA {\n\tif (w3cx11 && w3cx11.hasOwnProperty(css)) {\n\t\treturn num2rgb((w3cx11 as any)[css.toLowerCase()])\n\t}\n\tlet m\n\tif ((m = css.match(CSS_RGB_REGEX) || css.match(CSS_RGB_WS_REGEX))) {\n\t\treturn [\n\t\t\tclamp(+m[1], 0, 255),\n\t\t\tclamp(+m[2], 0, 255),\n\t\t\tclamp(+m[3], 0, 255),\n\t\t\tm[4] ? clamp(m[5] ? +m[4] / 100 : +m[4]) : 1,\n\t\t]\n\t} else if ((m = css.match(CSS_RGB_PERCENT_REGEX) || css.match(CSS_RGB_WS_PERCENT_REGEX))) {\n\t\treturn [\n\t\t\tclamp(+m[1] / 100) * 255,\n\t\t\tclamp(+m[2] / 100) * 255,\n\t\t\tclamp(+m[3] / 100) * 255,\n\t\t\tm[4] ? clamp(m[5] ? +m[4] / 100 : +m[4]) : 1,\n\t\t]\n\t} else if ((m = css.match(CSS_HSL_REGEX) || css.match(CSS_HSL_WS_REGEX))) {\n\t\tconst CONVERSION = { deg: 1, rad: RAD2DEG, turn: 360 }\n\t\tconst angleUnit = (m[2] ? m[2].toLowerCase() : \"deg\") as \"deg\" | \"rad\" | \"turn\"\n\t\treturn hsl2rgb(\n\t\t\t(((+m[1] * CONVERSION[angleUnit]) % 360) + 360) % 360,\n\t\t\tclamp(+m[3] / 100),\n\t\t\tclamp(+m[4] / 100),\n\t\t\tm[5] ? clamp(m[6] ? +m[5] / 100 : +m[5]) : 1,\n\t\t)\n\t} else {\n\t\treturn hex2rgb(css)\n\t}\n}\n\nfunction rgb2css(r: number, g: number, b: number, a = 1) {\n\tif (a >= 1) {\n\t\treturn \"rgb(\" + [r, g, b].map(round).join(\",\") + \")\"\n\t} else {\n\t\treturn \"rgba(\" + [r, g, b].map(round).join(\",\") + \",\" + a + \")\"\n\t}\n}\n\nfunction rnd(a: any) {\n\treturn round(a * 100) / 100\n}\n\nfunction hsl2css([h, s, l]: HSL, alpha: number) {\n\tconst mode = alpha < 1 ? \"hsla\" : \"hsl\"\n\treturn (\n\t\tmode +\n\t\t\"(\" +\n\t\trnd(h) +\n\t\t\",\" +\n\t\trnd(s * 100) +\n\t\t\"%\" +\n\t\t\",\" +\n\t\trnd(l * 100) +\n\t\t\"%\" +\n\t\t(\"hsla\" == mode ? \",\" + rnd(alpha) : \"\") +\n\t\t\")\"\n\t)\n}\n\n_input.css = css2rgb\n\n_input.name = function (name) {\n\treturn num2rgb((w3cx11 as any)[name])\n}\n\nfunction lch2lab(l: number, c: number, hueDegrees: number): LAB {\n\t/*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n     */\n\treturn [l, cos(hueDegrees * DEG2RAD) * c, sin(hueDegrees * DEG2RAD) * c]\n}\n\nfunction lch2rgb(l: number, c: number, hDegrees: number, alpha1 = 1): RGBA {\n\tconst [, a, b] = lch2lab(l, c, hDegrees)\n\treturn cielab2rgb(l, a, b, alpha1)\n}\n\nfunction lab2lch(l: number, a: number, b: number): LCH {\n\tconst c = hypot(a, b)\n\tconst h = (atan2(b, a) * RAD2DEG + 360) % 360\n\treturn [l, c, h]\n}\n\nfunction rgb2lch(r255: number, g255: number, b255: number) {\n\tconst [l, a, b2] = rgb2lab(r255, g255, b255)\n\treturn lab2lch(l, a, b2)\n}\n\n_input.lch = lch2rgb\n\nfunction rgb2cmyk(r255: number, g255: number, b255: number): CMYK {\n\tr255 /= 255\n\tg255 /= 255\n\tb255 /= 255\n\tconst k = 1 - max(r255, g255, b255)\n\tif (1 == k) return [0, 0, 0, 1]\n\tconst c = (1 - r255 - k) / (1 - k)\n\tconst m = (1 - g255 - k) / (1 - k)\n\tconst y = (1 - b255 - k) / (1 - k)\n\treturn [c, m, y, k]\n}\n\nfunction cmyk2rgb(c1: number, m1: number, y1: number, k1: number, alpha1 = 1): RGBA {\n\tif (k1 == 1) {\n\t\treturn [0, 0, 0, alpha1]\n\t}\n\tconst r255 = 255 * (1 - c1) * (1 - k1)\n\tconst g255 = 255 * (1 - m1) * (1 - k1)\n\tconst b255 = 255 * (1 - y1) * (1 - k1)\n\treturn [r255, g255, b255, alpha1]\n}\n\n_input.cmyk = cmyk2rgb\n\n_input.gl = function (r: number, g: number, b: number, a: number = 1): RGBA {\n\treturn [r * 255, g * 255, b * 255, a]\n}\n\n//function rgb2luminance(r: number, g: number, b: number) {\n//\t// https://en.wikipedia.org/wiki/Relative_luminance\n//\tconst [, Y] = rgb2xyz(r, g, b)\n//\treturn Y\n//}\n\nfunction rgbChannel2RgbLinear(x255: number) {\n\tconst x1 = x255 / 255\n\t// http://entropymine.com/imageworsener/srgbformula/\n\tif (x1 <= 0.04045) {\n\t\treturn x1 / 12.92\n\t} else {\n\t\treturn ((x1 + 0.055) / 1.055) ** 2.4\n\t}\n}\nfunction rgbLinearChannel2Rgb(xLinear1: number) {\n\tif (xLinear1 <= 0.0031308) {\n\t\treturn 255 * (12.92 * xLinear1)\n\t} else {\n\t\treturn 255 * ((1 + 0.055) * xLinear1 ** (1 / 2.4) - 0.055)\n\t}\n}\n\nfunction kelvin2rgb(kelvin: number): RGB {\n\tconst t = kelvin / 100\n\tlet r, g, b\n\tif (t < 66) {\n\t\tr = 255\n\t\tg = -155.25485562709179 - 0.44596950469579133 * (t - 2) + 104.49216199393888 * log(t - 2)\n\t\tb = t < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (t - 10) + 115.67994401066147 * log(t - 10)\n\t} else {\n\t\tr = 351.97690566805693 + 0.114206453784165 * (t - 55) - 40.25366309332127 * log(t - 55)\n\t\tg = 325.4494125711974 + 0.07943456536662342 * (t - 50) - 28.0852963507957 * log(t - 50)\n\t\tb = 255\n\t}\n\treturn [r, g, b]\n}\n\n_input.rgb = (...args: number[]) => args as RGB\n\nfunction rgb2kelvin(r255: number, g255: number, b255: number) {\n\tconsole.log(b255 - r255)\n\tif (g255 + b255 < 158.61) {\n\t\tconsole.log(\"0 < t < 20\")\n\t\t// calc from green\n\t\treturn round(\n\t\t\tnewtonIterate1d(\n\t\t\t\t(t) => g255 - (-155.25485562709179 - 0.44596950469579133 * (t - 2) + 104.49216199393888 * log(t - 2)),\n\t\t\t\t15,\n\t\t\t\t4,\n\t\t\t) * 100,\n\t\t)\n\t\treturn (Math.E ** ((g255 + 155.25485562709179 + 0.44596950469579133 * (15 - 2)) / 104.49216199393888) + 2) * 100\n\t} else if (b255 - r255 < 0) {\n\t\tconsole.log(\"20 < t < 66\")\n\t\treturn round(\n\t\t\tnewtonIterate1d(\n\t\t\t\t(t) => b255 - (-254.76935184120902 + 0.8274096064007395 * (t - 10) + 115.67994401066147 * log(t - 10)),\n\t\t\t\t43,\n\t\t\t\t4,\n\t\t\t) * 100,\n\t\t)\n\t\treturn (\n\t\t\t(Math.E ** ((b255 + 254.76935184120902 - 0.8274096064007395 * (43 - 10)) / 115.67994401066147) + 10) * 100\n\t\t)\n\t} else {\n\t\tconsole.log(\"0 < t < 400, start= \" + (-1.4 * (r255 + g255) + 755))\n\t\treturn round(\n\t\t\tnewtonIterate1d(\n\t\t\t\t(t) => r255 - (351.97690566805693 + 0.114206453784165 * (t - 55) - 40.25366309332127 * log(t - 55)),\n\t\t\t\t-1.4 * (r255 + g255) + 755,\n\t\t\t\t8,\n\t\t\t) * 100,\n\t\t)\n\t\treturn ((r255 / 329.698727446) ** (1 / -0.1332047592) + 60) * 100\n\t}\n\treturn newtonIterate1d(\n\t\t(k) => {\n\t\t\tconst eps = 1e-9\n\t\t\tconst [kr, kg, kb] = kelvin2rgb(k)\n\t\t\tconst [kr2, kg2, kb2] = kelvin2rgb(k + eps)\n\t\t\tconst dkr = (kr2 - kr) / eps,\n\t\t\t\tdkg = (kg2 - kg) / eps,\n\t\t\t\tdkb = (kb2 - kb) / eps\n\t\t\treturn dkr * (kr - r255) + dkg * (kg - g255) + dkb * (kb - b255)\n\n\t\t\treturn kb / kr - b255 / r255\n\t\t},\n\t\t//1000,\n\t\t//40000,\n\t\tMath.E ** ((b255 / r255 + 2.5) / 0.4),\n\t\t20,\n\t\t//1e-6,\n\t)\n\tlet maxTemp = 40000\n\tlet minTemp = 1000\n\tconst eps = 0.4\n\tlet temp: number = 0\n\tlet rgb\n\twhile (maxTemp - minTemp > eps) {\n\t\ttemp = (maxTemp + minTemp) * 0.5\n\t\trgb = kelvin2rgb(temp)\n\t\tif (rgb[2] / rgb[0] >= b255 / r255) {\n\t\t\tmaxTemp = temp\n\t\t} else {\n\t\t\tminTemp = temp\n\t\t}\n\t}\n\treturn round(temp)\n}\n\n_input.temperature = _input.kelvin = _input.K = kelvin2rgb\n\nfunction blend_f(f: (c1: RGB, c2: RGB) => RGB) {\n\treturn function (bottom: Chromable, top: Chromable) {\n\t\tconst [r, g, b] = f(color(top).rgb(), color(bottom).rgb())\n\t\treturn rgb(r, g, b)\n\t}\n}\n\nfunction each(f: (a: number, b: number) => number) {\n\treturn function (c1: RGB, c2: RGB): RGB {\n\t\treturn c1.map((e, i) => f(e, c2[i])) as RGB\n\t}\n}\n\nfunction _screen(a: number, b: number) {\n\treturn 255 * (1 - (1 - a / 255) * (1 - b / 255))\n}\n\nfunction _overlay(a: number, b: number) {\n\tif (b < 128) {\n\t\treturn (2 * a * b) / 255\n\t} else {\n\t\treturn 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255))\n\t}\n}\n\nfunction _burn(a: number, b: number) {\n\treturn 255 * (1 - (1 - b / 255) / (a / 255))\n}\n\nfunction _dodge(a: number, b: number) {\n\tif (a == 255) {\n\t\treturn 255\n\t}\n\treturn 255 * min(1, b / 255 / (1 - a / 255))\n}\n\n/**\n * r, g, b can be in any interval (0-1 or 0-255)\n * @param r\n * @param g\n * @param b\n */\nfunction rgb2hexhue(r: number, g: number, b: number) {\n\tconst m = min(r, g, b)\n\tconst M = max(r, g, b)\n\tconst delta = M - m\n\tlet hueTurnX6 // angle as value between 0 and 6\n\tif (0 == delta) {\n\t\thueTurnX6 = 0\n\t} else if (r == M) {\n\t\t// second term to make sure the value is > 0\n\t\thueTurnX6 = (g - b) / delta + (g < b ? 6 : 0)\n\t} else if (g == M) {\n\t\thueTurnX6 = 2 + (b - r) / delta\n\t} else {\n\t\thueTurnX6 = 4 + (r - g) / delta\n\t}\n\treturn [hueTurnX6 * 60, m, M]\n}\nfunction hcxm2rgb(hueDegrees: number, c1: number, x1: number, m1: number, alpha1: number): RGBA {\n\tconst m255 = m1 * 255\n\tconst cm255 = c1 * 255 + m255\n\tconst xm255 = x1 * 255 + m255\n\tif (hueDegrees < 60) {\n\t\treturn [cm255, xm255, m255, alpha1]\n\t} else if (hueDegrees < 120) {\n\t\treturn [xm255, cm255, m255, alpha1]\n\t} else if (hueDegrees < 180) {\n\t\treturn [m255, cm255, xm255, alpha1]\n\t} else if (hueDegrees < 240) {\n\t\treturn [m255, xm255, cm255, alpha1]\n\t} else if (hueDegrees < 300) {\n\t\treturn [xm255, m255, cm255, alpha1]\n\t} else {\n\t\treturn [cm255, m255, xm255, alpha1]\n\t}\n}\n\n/**\n * https://en.wikipedia.org/w/index.php?title=HSL_and_HSV&oldid=856714654#From_HSL\n */\nfunction hsl2rgb(hueDegrees: number, s1: number, l1: number, alpha1 = 1): RGBA {\n\thueDegrees = norm360(hueDegrees)\n\tconst c1 = (1 - abs(2 * l1 - 1)) * s1\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), l1 - c1 / 2, alpha1)\n}\nfunction rgb2hsl(r255: number, g255: number, b255: number): HSL {\n\tconst [hue, min1, max1] = rgb2hexhue(r255 / 255, g255 / 255, b255 / 255)\n\tconst l1 = (max1 + min1) / 2\n\tlet s1: number\n\tif (max1 == min1) {\n\t\ts1 = 0\n\t} else {\n\t\ts1 = l1 < 0.5 ? (max1 - min1) / (max1 + min1) : (max1 - min1) / (2 - max1 - min1)\n\t}\n\treturn [hue, s1, l1]\n}\n\nfunction hsv2rgb(hueDegrees: number, s1: number, v1: number, alpha1: number = 1): RGBA {\n\thueDegrees = norm360(hueDegrees)\n\tconst c1 = v1 * s1\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), v1 - c1, alpha1)\n}\n\nfunction rgb2hsv(r255: number, g255: number, b255: number): HSV {\n\tconst [hue, min255, max255] = rgb2hexhue(r255, g255, b255)\n\tconst delta255 = max255 - min255\n\tconst v1 = max255 / 255.0\n\tconst s1 = max255 == 0 ? 0 : delta255 / max255\n\treturn [hue, s1, v1]\n}\n\nfunction hcg2rgb(hueDegrees: number, c1: number, g1: number, alpha1 = 1): RGBA {\n\thueDegrees = norm360(hueDegrees)\n\tconst p = g1 * (1 - c1)\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), p, alpha1)\n}\n\nfunction rgb2hcg(r255: number, g255: number, b255: number): HCG {\n\tconst [hue, min255, max255] = rgb2hexhue(r255, g255, b255)\n\tconst c1 = (max255 - min255) / 255\n\tconst _g1 = c1 < 1 ? min255 / 255 / (1 - c1) : 0\n\treturn [hue, c1, _g1]\n}\n\n_input.hcg = hcg2rgb\n\nfunction cielab2rgb(LStar100: number, aStar: number, bStar: number, alpha = 1): RGBA {\n\tconst [x, y, z] = cielab2xyz(LStar100, aStar, bStar)\n\treturn xyz2rgb(x, y, z, alpha)\n}\n\nfunction cielab2xyz(LStar100: number, aStar: number, bStar: number) {\n\tfunction fInv(t: number) {\n\t\tif (t > LAB_delta) {\n\t\t\treturn t ** 3\n\t\t} else {\n\t\t\treturn LAB_3DeltaPow2 * (t - 4 / 29)\n\t\t}\n\t}\n\treturn [\n\t\tLAB_Xn * fInv((LStar100 + 16) / 116 + aStar / 500),\n\t\tLAB_Yn * fInv((LStar100 + 16) / 116),\n\t\tLAB_Zn * fInv((LStar100 + 16) / 116 - bStar / 200),\n\t]\n}\nfunction xyz2cielab(x: number, y: number, z: number): LAB {\n\t// https://en.wikipedia.org/w/index.php?title=CIELAB_color_space&oldid=849576085#Forward_transformation\n\tfunction f(t: number) {\n\t\tif (t > LAB_deltaPow3) {\n\t\t\treturn cbrt(t)\n\t\t} else {\n\t\t\treturn t / LAB_3DeltaPow2 + 4 / 29\n\t\t}\n\t}\n\treturn [116 * f(y / LAB_Yn) - 16, 500 * (f(x / LAB_Xn) - f(y / LAB_Yn)), 200 * (f(y / LAB_Yn) - f(z / LAB_Zn))]\n}\n\n// const LAB_CONSTANTS = {\nconst LAB_Kn = 18\nconst LAB_Xn = 0.95047\nconst LAB_Yn = 1\nconst LAB_Zn = 1.08883\nconst LAB_delta = 0.206896552 // delta = 6 / 29\nconst LAB_3DeltaPow2 = 0.12841855 // 3 * delta ** 2\nconst LAB_deltaPow3 = 0.008856452 // delta ** 3\n// }\n\nfunction rgb2lab(r255: number, g255: number, b255: number): RGB {\n\tconst [x, y, z] = rgb2xyz(r255, g255, b255)\n\treturn xyz2cielab(x, y, z)\n}\n\nfunction rgb2xyz(r255: number, g255: number, b255: number): XYZ {\n\t// https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\n\tconst r1Linear = rgbChannel2RgbLinear(r255)\n\tconst g1Linear = rgbChannel2RgbLinear(g255)\n\tconst b1Linear = rgbChannel2RgbLinear(b255)\n\tconst X = 0.4124564 * r1Linear + 0.3575761 * g1Linear + 0.1804375 * b1Linear\n\tconst Y = 0.2126729 * r1Linear + 0.7151522 * g1Linear + 0.072175 * b1Linear\n\tconst Z = 0.0193339 * r1Linear + 0.119192 * g1Linear + 0.9503041 * b1Linear\n\treturn [X, Y, Z]\n}\nfunction xyz2rgb(X1: number, Y1: number, Z1: number, alpha1 = 1): RGBA {\n\t// https://en.wikipedia.org/wiki/SRGB#The_forward_transformation_(CIE_XYZ_to_sRGB)\n\tconst r1Linear = 3.2404542 * X1 - 1.5371385 * Y1 - 0.4985314 * Z1\n\tconst g1Linear = -0.969266 * X1 + 1.8760108 * Y1 + 0.041556 * Z1\n\tconst b1Linear = 0.0556434 * X1 - 0.2040259 * Y1 + 1.0572252 * Z1\n\treturn [rgbLinearChannel2Rgb(r1Linear), rgbLinearChannel2Rgb(g1Linear), rgbLinearChannel2Rgb(b1Linear), alpha1]\n}\n\n_input.xyz = xyz2rgb\n_input.lab = cielab2rgb\n\n/**\n * For HSI, we use the direct angle calculation. I.e. atan2(beta, alpha). See wikipedia link. This is why we don't use\n * hcxm2rgb.\n */\nfunction hsi2rgb(hueDegrees: number, s1: number, i1: number, alpha1 = 1): RGBA {\n\t/*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n\tlet r, g, b\n\tlet hRad = hueDegrees * DEG2RAD\n\tif (hRad < (2 * PI) / 3) {\n\t\tb = (1 - s1) / 3\n\t\tr = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\n\t\tg = 1 - (b + r)\n\t} else if (hRad < (4 * PI) / 3) {\n\t\thRad -= (2 * PI) / 3\n\t\tr = (1 - s1) / 3\n\t\tg = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\n\t\tb = 1 - (r + g)\n\t} else {\n\t\thRad -= (4 * PI) / 3\n\t\tg = (1 - s1) / 3\n\t\tb = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\n\t\tr = 1 - (g + b)\n\t}\n\treturn [3 * i1 * r * 255, 3 * i1 * g * 255, 3 * i1 * b * 255, alpha1]\n}\n\n/**\n * For HSI, we use the direct angle calculation. I.e. atan2(beta, alpha). See wikipedia link. This is why we don't use\n * rgb2hexhue.\n */\nfunction rgb2hsi(r255: number, g255: number, b255: number): HSI {\n\t// See https://en.wikipedia.org/wiki/HSL_and_HSV#Hue_and_chroma\n\t// See https://en.wikipedia.org/wiki/HSL_and_HSV#Lightness\n\tconst r1 = r255 / 255\n\tconst g1 = g255 / 255\n\tconst b1 = b255 / 255\n\tconst i1 = (r1 + g1 + b1) / 3\n\tif (r1 == g1 && g1 == b1) {\n\t\treturn [0, 0, i1]\n\t} else {\n\t\tconst alpha = (1 / 2) * (2 * r1 - g1 - b1)\n\t\tconst beta = (sqrt(3) / 2) * (g1 - b1)\n\t\tconst hRad = atan2(beta, alpha)\n\t\tconst min1 = min(r1, g1, b1)\n\t\tconst s1 = 1 - min1 / i1\n\t\treturn [(hRad < 0 ? 2 * PI + hRad : hRad) * RAD2DEG, s1, i1]\n\t}\n}\n\n_input.hsi = hsi2rgb\n\ninterpolators.hsv = interpolators.hsl = interpolators.hsi = interpolators.lch = interpolators.hcg = function interpolate_hsx(\n\tcolor1: Color,\n\tcolor2: Color,\n\tf: number,\n\tm: \"hsv\" | \"hsl\" | \"hsi\" | \"lch\" | \"hcg\",\n) {\n\tconst [a1, b1, c1] = color1[m]()\n\tconst [a2, b2, c2] = color2[m]()\n\tfunction lerpHue(hue1: number, hue2: number, f: number) {\n\t\tconst dh = norm360(hue2 - hue1 + 180) - 180\n\t\treturn hue1 + f * dh\n\t}\n\treturn color(\n\t\t(\"h\" == m.charAt(0) ? lerpHue : lerp)(a1, a2, f),\n\t\tlerp(b1, b2, f),\n\t\t(\"h\" == m.charAt(2) ? lerpHue : lerp)(c1, c2, f),\n\t\tm,\n\t)\n}\n\nfunction indexOfMax<T>(arr: ArrayLike<T>, f: (el: T) => number) {\n\tlet maxValue = -Infinity,\n\t\tmaxValueIndex = -1\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst value = f(arr[i])\n\t\tif (value > maxValue) {\n\t\t\tmaxValue = value\n\t\t\tmaxValueIndex = i\n\t\t}\n\t}\n\treturn maxValueIndex\n}\nfunction withMax<T>(arr: ArrayLike<T>, f: (el: T) => number): T {\n\treturn arr[indexOfMax(arr, f)]\n}\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n",null,null,null,null,null,null,null,null,null,null,null,"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/// <reference types=\"webgl-strict-types\" />\nimport { assert, int, NLA_DEBUG, V3 } from 'ts3dutils'\nimport { currentGL, TSGLContext } from './index'\n\nimport GL = WebGLRenderingContextStrict\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\n\nexport class Buffer {\n\tbuffer: WebGLBuffer | undefined = undefined\n\tdata: any[] = []\n\n\t/** Number of elements in buffer. 2 V3s is still 2, not 6. */\n\tcount: int = 0\n\n\t/** Space between elements in buffer. 3 for V3s. */\n\tspacing: 1 | 2 | 3 | 4 = 1\n\n\thasBeenCompiled: boolean = false\n\n\tname?: string\n\n\tmaxValue?: number\n\n\tbindSize: GL['UNSIGNED_INT'] | GL['UNSIGNED_SHORT']\n\n\t/**\n\t * Provides a simple method of uploading data to a GPU buffer.\n\t *\n\t * @example\n\t *     const vertices = new Buffer(WGL.ARRAY_BUFFER, Float32Array)\n\t *     vertices.data = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 1, 0]]\n\t *     vertices.compile()\n\t *\n\t * @example\n\t *     const indices = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, Uint16Array)\n\t *     indices.data = [[0, 1, 2], [2, 1, 3]]\n\t *     indices.compile()\n\t *\n\t * @param target Specifies the target to which the buffer object is bound.\n\t * @param type\n\t */\n\tconstructor(\n\t\tpublic readonly target: GL.BufferTarget,\n\t\tpublic readonly type: typeof Float32Array | typeof Uint16Array | typeof Uint32Array,\n\t) {\n\t\tassert(\n\t\t\ttarget == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER,\n\t\t\t'target == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER',\n\t\t)\n\t\tassert(\n\t\t\ttype == Float32Array || type == Uint16Array || type == Uint32Array,\n\t\t\t'type == Float32Array || type == Uint16Array || type == Uint32Array',\n\t\t)\n\t\tif (Uint16Array == type) {\n\t\t\tthis.bindSize = WGL.UNSIGNED_SHORT\n\t\t} else if (Uint32Array == type) {\n\t\t\tthis.bindSize = WGL.UNSIGNED_INT\n\t\t}\n\t}\n\n\t/**\n\t * Upload the contents of `data` to the GPU in preparation for rendering. The data must be a list of lists\n\t * where each inner list has the same length. For example, each element of data for vertex normals would be a\n\t * list of length three. This will remember the data length and element length for later use by shaders.\n\t *\n\t * This could have used `[].concat.apply([], this.data)` to flatten the array but Google\n\t * Chrome has a maximum number of arguments so the concatenations are chunked to avoid that limit.\n\t *\n\t * @param usage Either `WGL.STATIC_DRAW` or `WGL.DYNAMIC_DRAW`. Defaults to `WGL.STATIC_DRAW`\n\t */\n\tcompile(usage: GL.BufferDataUsage = WGL.STATIC_DRAW, gl: TSGLContext = currentGL()): void {\n\t\tassert(\n\t\t\tWGL.STATIC_DRAW == usage || WGL.DYNAMIC_DRAW == usage,\n\t\t\t'WGL.STATIC_DRAW == type || WGL.DYNAMIC_DRAW == type',\n\t\t)\n\t\tthis.buffer = this.buffer || gl.createBuffer()!\n\t\tlet buffer: Float32Array | Uint16Array | Uint32Array\n\t\tif (this.data.length == 0) {\n\t\t\tconsole.warn('empty buffer ' + this.name)\n\t\t\t//console.trace()\n\t\t}\n\t\tif (this.data.length == 0 || this.data[0] instanceof V3) {\n\t\t\tassert(!(this.data[0] instanceof V3) || this.type == Float32Array)\n\t\t\tV3.pack(this.data, (buffer = new this.type(this.data.length * 3) as Float32Array)) // asserts that all\n\t\t\t// elements are V3s\n\t\t\tthis.spacing = 3\n\t\t\tthis.count = this.data.length\n\t\t\tthis.maxValue = 0\n\t\t} else {\n\t\t\t//assert(Array != this.data[0].constructor, this.name + this.data[0])\n\t\t\tif (Array.isArray(this.data[0])) {\n\t\t\t\tconst bufferLength = this.data.length * this.data[0].length\n\t\t\t\tbuffer = new this.type(bufferLength)\n\t\t\t\tlet i = this.data.length,\n\t\t\t\t\tdestPtr = bufferLength\n\t\t\t\twhile (i--) {\n\t\t\t\t\tconst subArray = this.data[i]\n\t\t\t\t\tlet j = subArray.length\n\t\t\t\t\twhile (j--) {\n\t\t\t\t\t\tbuffer[--destPtr] = subArray[j]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassert(0 == destPtr)\n\t\t\t} else {\n\t\t\t\tbuffer = new this.type(this.data)\n\t\t\t}\n\n\t\t\tconst spacing = this.data.length ? buffer.length / this.data.length : 0\n\t\t\tassert(spacing % 1 == 0, `buffer ${this.name} elements not of consistent size, average size is ` + spacing)\n\t\t\tif (NLA_DEBUG) {\n\t\t\t\tif (10000 <= buffer.length) {\n\t\t\t\t\tthis.maxValue = 0\n\t\t\t\t} else {\n\t\t\t\t\tthis.maxValue = Math.max.apply(undefined, buffer)\n\t\t\t\t}\n\t\t\t}\n\t\t\tassert([1, 2, 3, 4].includes(spacing))\n\t\t\tthis.spacing = spacing as 1 | 2 | 3 | 4\n\t\t\tthis.count = this.data.length\n\t\t}\n\t\tgl.bindBuffer(this.target, this.buffer)\n\t\tgl.bufferData(this.target, buffer, usage)\n\t\tthis.hasBeenCompiled = true\n\t}\n}\n","/// <reference types=\"webgl-strict-types\" />\nimport {\n\tAABB,\n\tarrayFromFunction,\n\tassert,\n\tassertVectors,\n\teq0,\n\tint,\n\tlerp,\n\tM4,\n\tNLA_PRECISION,\n\traddd,\n\tTransformable,\n\tTuple3,\n\tV,\n\tV3,\n} from 'ts3dutils'\n\nimport { Buffer, currentGL, GL_COLOR, pushQuad, TSGLContext } from './index'\n\nconst { cos, sin, PI, min, max } = Math\n\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\nimport GL = WebGLRenderingContextStrict\n\nconst tempM4_1 = new M4()\nconst tempM4_2 = new M4()\n\nexport interface MeshData {\n\tnormals: V3[]\n\tcoords: [number, number][]\n\tcolors: GL_COLOR[]\n\tTRIANGLES: int[]\n\tLINES: int[]\n}\nexport type MeshWith<T extends keyof MeshData = never> = Mesh & Pick<MeshData, T>\n\n/**\n * @example new Mesh()\n *        .addIndexBuffer('TRIANGLES')\n *        .addIndexBuffer('LINES')\n *        .addVertexBuffer('normals', 'ts_Normal')\n */\nexport class Mesh extends Transformable {\n\thasBeenCompiled: boolean = false\n\tvertexBuffers: { [name: string]: Buffer } = {}\n\tindexBuffers: { [name: string]: Buffer } = {}\n\n\tvertices: V3[]\n\tnormals?: V3[]\n\n\tconstructor() {\n\t\tsuper()\n\t\tthis.addVertexBuffer('vertices', 'ts_Vertex')\n\t}\n\n\t/**\n\t * Calculate area, volume and centroid of the mesh.\n\t *\n\t * The area is the sum of the areas of the triangles.\n\t *\n\t * For closed meshes, the volume is the contained volume. If the volume is inside-out, i.e. the face normals point\n\t * inwards, the returned value is negative. In general, this calculates the sum of the z-direction shadow volumes\n\t * of the triangles. The z-dir shadow volume is the cut-off prism with the triangle projected onto the XY plane as\n\t * the base face and the triangle itself as the top face.\n\t *\n\t * The centroid is the \"mean point of all points inside the volume\". If a uniform density is assumed, this is\n\t * equivalent to the center of gravity. In general, this calculates the weighted average of the centroids of all the\n\t * triangle shadow volumes.\n\t */\n\tcalcVolume(this: Mesh & { TRIANGLES: int[] }): { volume: number; centroid: V3; area: number } {\n\t\tlet totalVolumeX2 = 0,\n\t\t\ttotalCentroidWithZX2 = V3.O,\n\t\t\ttotalAreaX2 = 0\n\t\tconst triangles = this.TRIANGLES\n\t\tconst vertices = this.vertices\n\t\tfor (let i = 0; i < triangles.length; i += 3) {\n\t\t\tconst ai = triangles[i + 0],\n\t\t\t\tbi = triangles[i + 1],\n\t\t\t\tci = triangles[i + 2]\n\t\t\tconst a = vertices[ai],\n\t\t\t\tb = vertices[bi],\n\t\t\t\tc = vertices[ci]\n\t\t\tconst ab = b.minus(a),\n\t\t\t\tac = c.minus(a)\n\t\t\tconst normal = ab.cross(ac)\n\t\t\t//const centroidZ = (v0.z + v1.z + v2.z) / 3\n\t\t\tconst faceCentroid = V3.add(a, b, c).div(3)\n\t\t\t//totalVolume += centroidZ * (area === v01.cross(v02).length() / 2) * v01.cross(v02).unit().z\n\t\t\ttotalVolumeX2 += faceCentroid.z * normal.z\n\t\t\tconst faceAreaX2 = normal.length()\n\t\t\ttotalAreaX2 += faceAreaX2\n\n\t\t\t// NB: the shadow volume centroid does NOT have the same XY coordinates\n\t\t\t// as the face centroid.\n\t\t\t// calculate the weighted centroid of the shadow volume:\n\t\t\t// faceShadowCentroid = INTEGRATE [0; 1] (\n\t\t\t//   INTEGRATE [0; 1 - s] (\n\t\t\t//     normal.z *\n\t\t\t//     ((1 - s - t) a + s b + t c) *\n\t\t\t//     ((1 - s - t) a + s b + t c).z\n\t\t\t//   ) dt\n\t\t\t// ) ds\n\t\t\t// = (a (2 a.z + b.z + c.z) + b (a.z + 2 b.z + c.z) + c (a.z + b.z + 2 c.z)) / 24\n\t\t\tconst faceShadowCentroid = V3.add(\n\t\t\t\ta.times(2 * a.z + b.z + c.z),\n\t\t\t\tb.times(a.z + 2 * b.z + c.z),\n\t\t\t\tc.times(a.z + b.z + 2 * c.z),\n\t\t\t).times(normal.z) // 1/24 factor is done at very end\n\t\t\ttotalCentroidWithZX2 = totalCentroidWithZX2.plus(faceShadowCentroid)\n\t\t}\n\t\t// sumInPlaceTree adds negligible additional accuracy for XY sphere\n\t\tconst volume = totalVolumeX2 / 2\n\t\treturn {\n\t\t\tvolume,\n\t\t\tcentroid: eq0(volume) ? V3.O : totalCentroidWithZX2.div(24 * volume).schur(new V3(1, 1, 0.5)),\n\t\t\tarea: totalAreaX2 / 2,\n\t\t}\n\t}\n\n\t/**\n\t * Add a new vertex buffer with a list as a property called `name` on this object and map it to\n\t * the attribute called `attribute` in all shaders that draw this mesh.\n\t * @example new Mesh().addVertexBuffer('coords', 'ts_TexCoord')\n\t */\n\taddVertexBuffer<K extends string>(name: K, attribute: string): this & { [k in K]: any[] } {\n\t\tassert(!this.vertexBuffers[attribute], 'Buffer ' + attribute + ' already exists.')\n\t\t//assert(!this[name])\n\t\tthis.hasBeenCompiled = false\n\t\tassert('string' == typeof name)\n\t\tassert('string' == typeof attribute)\n\t\tconst buffer = (this.vertexBuffers[attribute] = new Buffer(WGL.ARRAY_BUFFER, Float32Array))\n\t\tbuffer.name = name\n\t\t;(this as any)[name] = []\n\t\treturn this as any\n\t}\n\n\t/**\n\t * Add a new index buffer.\n\t * @example new Mesh().addIndexBuffer('TRIANGLES')\n\t * @example new Mesh().addIndexBuffer('LINES')\n\t */\n\taddIndexBuffer<K extends string>(\n\t\tname: K,\n\t\ttype: GL['UNSIGNED_SHORT'] | GL['UNSIGNED_INT'] = WGL.UNSIGNED_SHORT,\n\t): this & { [k in K]: int[] } {\n\t\tthis.hasBeenCompiled = false\n\t\tconst arrayType = WGL.UNSIGNED_SHORT == type ? Uint16Array : Uint32Array\n\t\tconst buffer = (this.indexBuffers[name] = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, arrayType))\n\t\tbuffer.name = name\n\t\t;(this as any)[name] = []\n\t\treturn this as any\n\t}\n\n\tconcat(...others: this[]): this {\n\t\tconst result = new Mesh() as any\n\t\tconst allMeshes = [this as Mesh].concat(others)\n\t\tObject.getOwnPropertyNames(this.vertexBuffers).forEach((attribute) => {\n\t\t\tassert(others.every((other) => !!other.vertexBuffers[attribute]))\n\t\t\tconst bufferName = this.vertexBuffers[attribute].name!\n\t\t\tif ('ts_Vertex' !== attribute) {\n\t\t\t\tresult.addVertexBuffer(bufferName, attribute)\n\t\t\t}\n\t\t\tresult[bufferName] = [].concat(...allMeshes.map((mesh) => (mesh as any)[bufferName]))\n\t\t})\n\t\tObject.getOwnPropertyNames(this.indexBuffers).forEach((name) => {\n\t\t\tassert(others.every((other) => !!other.indexBuffers[name]))\n\t\t\tresult.addIndexBuffer(name, this.indexBuffers[name].bindSize)\n\t\t\tconst newIndexBufferData = new Array(allMeshes.reduce((sum, mesh) => sum + (mesh as any)[name].length, 0))\n\t\t\tlet ptr = 0\n\t\t\tlet startIndex = 0\n\t\t\tfor (const mesh of allMeshes) {\n\t\t\t\tfor (const index of (mesh as any)[name] as int[]) {\n\t\t\t\t\tnewIndexBufferData[ptr++] = startIndex + index\n\t\t\t\t}\n\t\t\t\tstartIndex += mesh.vertices.length\n\t\t\t}\n\t\t\tresult[name] = newIndexBufferData\n\t\t})\n\t\tresult.compile()\n\t\treturn result\n\t}\n\n\t/**\n\t * Upload all attached buffers to the GPU in preparation for rendering. This doesn't need to be called every\n\t * frame, only needs to be done when the data changes.\n\t *\n\t * Sets `this.hasBeenCompiled` to true.\n\t */\n\tcompile(gl: TSGLContext = currentGL()) {\n\t\t// figure out shortest vertex buffer to make sure indexBuffers are in bounds\n\t\tlet minVertexBufferLength = Infinity // TODO, _minBufferName\n\t\tObject.getOwnPropertyNames(this.vertexBuffers).forEach((attribute) => {\n\t\t\tconst buffer = this.vertexBuffers[attribute]\n\t\t\tbuffer.data = (this as any)[buffer.name!]\n\t\t\tbuffer.compile(undefined, gl)\n\t\t\tif ((this as any)[buffer.name!].length < minVertexBufferLength) {\n\t\t\t\t// _minBufferName = attribute\n\t\t\t\tminVertexBufferLength = (this as any)[buffer.name!].length\n\t\t\t}\n\t\t})\n\n\t\tfor (const name in this.indexBuffers) {\n\t\t\tconst buffer = this.indexBuffers[name]\n\t\t\tbuffer.data = (this as any)[buffer.name!]\n\t\t\tbuffer.compile(undefined, gl)\n\t\t\t// if (NLA_DEBUG && buffer.maxValue >= minVertexBufferLength) {\n\t\t\t// \tthrow new Error(`max index value for buffer ${name}\n\t\t\t// \tis too large ${buffer.maxValue} min Vbuffer size: ${minVertexBufferLength} ${minBufferName}`)\n\t\t\t// }\n\t\t}\n\t\tthis.hasBeenCompiled = true\n\t\treturn this\n\t}\n\n\tstatic async fromBinarySTL(stl: Blob) {\n\t\treturn new Promise<Mesh & { normals: V3[] }>((resolve, reject) => {\n\t\t\tconst mesh = new Mesh().addVertexBuffer('normals', 'ts_Normal')\n\t\t\tconst fileReader = new FileReader()\n\t\t\tfileReader.onerror = reject\n\t\t\tfileReader.onload = function (_progressEvent) {\n\t\t\t\tconst dataView = new DataView(this.result as ArrayBuffer)\n\t\t\t\tconst HEADER_BYTE_SIZE = 80\n\t\t\t\tconst triangleCount = dataView.getUint32(HEADER_BYTE_SIZE, true)\n\t\t\t\tmesh.normals.length = triangleCount * 3\n\t\t\t\tmesh.vertices.length = triangleCount * 3\n\t\t\t\tlet i = triangleCount * 3,\n\t\t\t\t\tbufferPtr = HEADER_BYTE_SIZE + 4\n\n\t\t\t\tfunction readV3() {\n\t\t\t\t\tconst x = dataView.getFloat32(bufferPtr, true)\n\t\t\t\t\tbufferPtr += 4\n\t\t\t\t\tconst y = dataView.getFloat32(bufferPtr, true)\n\t\t\t\t\tbufferPtr += 4\n\t\t\t\t\tconst z = dataView.getFloat32(bufferPtr, true)\n\t\t\t\t\tbufferPtr += 4\n\t\t\t\t\treturn new V3(x, y, z)\n\t\t\t\t}\n\n\t\t\t\twhile (i) {\n\t\t\t\t\ti -= 3\n\t\t\t\t\tconst normal = readV3()\n\t\t\t\t\tmesh.normals[i + 0] = normal\n\t\t\t\t\tmesh.normals[i + 1] = normal\n\t\t\t\t\tmesh.normals[i + 2] = normal\n\t\t\t\t\tmesh.vertices[i + 0] = readV3()\n\t\t\t\t\tmesh.vertices[i + 1] = readV3()\n\t\t\t\t\tmesh.vertices[i + 2] = readV3()\n\n\t\t\t\t\tbufferPtr += 2\n\t\t\t\t}\n\t\t\t\tresolve(mesh)\n\t\t\t}\n\t\t\tfileReader.readAsArrayBuffer(stl)\n\t\t})\n\t}\n\n\ttoBinarySTL(this: Mesh & { TRIANGLES: number[] }): Blob {\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\n\t\tconst HEADER_BYTE_SIZE = 80,\n\t\t\tFLOAT_BYTE_SIZE = 4\n\t\tconst triangles = this.TRIANGLES\n\t\tconst triangleCount = triangles.length / 3\n\t\tconst buffer = new ArrayBuffer(HEADER_BYTE_SIZE + 4 + triangleCount * (4 * 3 * FLOAT_BYTE_SIZE + 2))\n\t\tconst dataView = new DataView(buffer)\n\t\tdataView.setUint32(HEADER_BYTE_SIZE, triangleCount, true)\n\t\tlet bufferPtr = HEADER_BYTE_SIZE + 4\n\t\tlet i = triangles.length\n\t\twhile (i) {\n\t\t\ti -= 3\n\t\t\tconst a = this.vertices[triangles[i]],\n\t\t\t\tb = this.vertices[triangles[i + 1]],\n\t\t\t\tc = this.vertices[triangles[i + 2]]\n\t\t\tconst normal = V3.normalOnPoints(a, b, c)\n\t\t\t;[normal, a, b, c].forEach((v) => {\n\t\t\t\tdataView.setFloat32(bufferPtr, v.x, true)\n\t\t\t\tbufferPtr += 4\n\t\t\t\tdataView.setFloat32(bufferPtr, v.y, true)\n\t\t\t\tbufferPtr += 4\n\t\t\t\tdataView.setFloat32(bufferPtr, v.z, true)\n\t\t\t\tbufferPtr += 4\n\t\t\t})\n\t\t\t// skip 2 bytes, already initalized to zero\n\t\t\tbufferPtr += 2\n\t\t}\n\t\tassert(bufferPtr == buffer.byteLength, bufferPtr + ' ' + buffer.byteLength)\n\t\treturn new Blob([buffer], { type: 'application/octet-stream' })\n\t}\n\n\t/**\n\t * Returns a new Mesh with transformed vertices.\n\t *\n\t * Transform all vertices by `matrix` and all normals by the inverse transpose of `matrix`.\n\t *\n\t * Index buffer data is referenced.\n\t */\n\ttransform(m4: M4): this {\n\t\tconst mesh = new Mesh()\n\t\tmesh.vertices = m4.transformedPoints(this.vertices)\n\t\tif (this.normals) {\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\n\t\t\tconst invTrans = m4.as3x3(tempM4_1).inversed(tempM4_2).transposed(tempM4_1)\n\t\t\tmesh.normals = this.normals.map((n) => invTrans.transformVector(n).unit())\n\t\t\t// mesh.normals.forEach(n => assert(n.hasLength(1)))\n\t\t}\n\t\tfor (const name in this.indexBuffers) {\n\t\t\tmesh.addIndexBuffer(name)\n\t\t\t;(mesh as any)[name] = (this as any)[name]\n\t\t}\n\t\tfor (const attribute in this.vertexBuffers) {\n\t\t\tif ('ts_Vertex' !== attribute && 'ts_Normal' !== attribute) {\n\t\t\t\tconst name = this.vertexBuffers[attribute].name!\n\t\t\t\tmesh.addVertexBuffer(name, attribute)\n\t\t\t\t;(mesh as any)[name] = (this as any)[name]\n\t\t\t}\n\t\t}\n\t\t// this.hasBeenCompiled && mesh.compile()\n\t\treturn mesh as this\n\t}\n\n\t/**\n\t * Computes a new normal for each vertex from the average normal of the neighboring triangles. This means\n\t * adjacent triangles must share vertices for the resulting normals to be smooth.\n\t */\n\tcomputeNormalsFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { normals: V3[] } {\n\t\tif (!this.normals) this.addVertexBuffer('normals', 'ts_Normal')\n\t\t// tslint:disable:no-string-literal\n\t\t//this.vertexBuffers['ts_Normal'].data = arrayFromFunction(this.vertices.length, i => V3.O)\n\n\t\tconst TRIANGLES = this.TRIANGLES,\n\t\t\tvertices = this.vertices,\n\t\t\tnormals = this.normals!\n\t\tnormals.length = vertices.length\n\t\tfor (let i = 0; i < TRIANGLES.length; i += 3) {\n\t\t\tconst ai = TRIANGLES[i],\n\t\t\t\tbi = TRIANGLES[i + 1],\n\t\t\t\tci = TRIANGLES[i + 2]\n\t\t\tconst a = vertices[ai]\n\t\t\tconst b = vertices[bi]\n\t\t\tconst c = vertices[ci]\n\t\t\tconst normal = b.minus(a).cross(c.minus(a)).unit()\n\t\t\tnormals[ai] = normals[ai].plus(normal)\n\t\t\tnormals[bi] = normals[bi].plus(normal)\n\t\t\tnormals[ci] = normals[ci].plus(normal)\n\t\t}\n\t\tfor (let i = 0; i < vertices.length; i++) {\n\t\t\tnormals[i] = normals[i].unit()\n\t\t}\n\t\tthis.hasBeenCompiled = false\n\t\treturn this as any\n\t}\n\n\t/**\n\t * Populate the specified index buffer (default 'LINES') from the `triangles` index buffer.\n\t */\n\tcomputeWireframeFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\n\tcomputeWireframeFromFlatTriangles<T extends string>(\n\t\tthis: Mesh & { TRIANGLES: int[] },\n\t\tindexBufferName: T,\n\t): this & { [k in T]: int[] }\n\tcomputeWireframeFromFlatTriangles(this: any, indexBufferName: string = 'LINES'): this {\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\n\t\tconst canonEdges = new Set<number>()\n\n\t\tfunction canonEdge(i0: int, i1: int) {\n\t\t\tconst iMin = min(i0, i1),\n\t\t\t\tiMax = max(i0, i1)\n\t\t\treturn (iMin << 16) | iMax\n\t\t}\n\n\t\t// function uncanonEdge(key) {\n\t\t// \treturn [key >> 16, key & 0xffff]\n\t\t// }\n\t\tconst t = this.TRIANGLES\n\t\tfor (let i = 0; i < t.length; i += 3) {\n\t\t\tcanonEdges.add(canonEdge(t[i + 0], t[i + 1]))\n\t\t\tcanonEdges.add(canonEdge(t[i + 1], t[i + 2]))\n\t\t\tcanonEdges.add(canonEdge(t[i + 2], t[i + 0]))\n\t\t}\n\t\tconst data = indexBufferName\n\t\tif (!this[data]) this.addIndexBuffer(indexBufferName)\n\t\t//this.LINES = new Array(canonEdges.size)\n\t\tcanonEdges.forEach((val) => this[data].push(val >> 16, val & 0xffff))\n\t\tthis.hasBeenCompiled = false\n\t\treturn this\n\t}\n\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\n\tcomputeWireframeFromFlatTrianglesClosedMesh<T extends string>(\n\t\tthis: Mesh & { TRIANGLES: int[] },\n\t\tindexBufferName: T,\n\t): this & { [k in T]: int[] }\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: any, indexBufferName: string = 'LINES'): this {\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\n\t\tif (!this.LINES) this.addIndexBuffer('LINES')\n\t\tconst tris = this.TRIANGLES\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\n\t\tconst lines = this[indexBufferName]\n\t\tfor (let i = 0; i < tris.length; i += 3) {\n\t\t\tif (tris[i + 0] < tris[i + 1]) lines.push(tris[i + 0], tris[i + 1])\n\t\t\tif (tris[i + 1] < tris[i + 2]) lines.push(tris[i + 1], tris[i + 2])\n\t\t\tif (tris[i + 2] < tris[i + 0]) lines.push(tris[i + 2], tris[i + 0])\n\t\t}\n\t\tthis.hasBeenCompiled = false\n\t\treturn this\n\t}\n\n\tcomputeNormalLines(this: Mesh & { normals: V3[] }, length: number): this & { LINES: int[] }\n\tcomputeNormalLines<T extends string>(\n\t\tthis: Mesh & { normals: V3[] },\n\t\tlength: number,\n\t\tindexBufferName: T,\n\t): this & { [k in T]: int[] }\n\tcomputeNormalLines(this: any, length: number = 1, indexBufferName: string = 'LINES') {\n\t\tif (!this.normals) {\n\t\t\tthrow new Error('normals must be defined.')\n\t\t}\n\t\tconst vs = this.vertices,\n\t\t\tsi = this.vertices.length\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\n\n\t\tfor (let i = 0; i < this.normals.length; i++) {\n\t\t\tvs[si + i] = vs[i].plus(this.normals[i].toLength(length))\n\t\t\tthis[indexBufferName].push(si + i, i)\n\t\t}\n\t\tthis.hasBeenCompiled = false\n\t\treturn this\n\t}\n\n\tgetAABB(): AABB {\n\t\treturn new AABB().addPoints(this.vertices)\n\t}\n\n\tgetBoundingSphere(): { center: V3; radius: number } {\n\t\tconst sphere = { center: this.getAABB().getCenter(), radius: 0 }\n\t\tfor (let i = 0; i < this.vertices.length; i++) {\n\t\t\tsphere.radius = Math.max(sphere.radius, this.vertices[i].minus(sphere.center).length())\n\t\t}\n\t\treturn sphere\n\t}\n\n\t/**\n\t * Generates a square mesh in the XY plane.\n\t * Texture coordinates (buffer \"coords\") are set to go from 0 to 1 in either direction.\n\t *\n\t * @param options foo\n\t * @param options.detail Defaults to 1\n\t * @param options.detailX Defaults to options.detail. Number of subdivisions in X direction.\n\t * @param options.detailY Defaults to options.detail. Number of subdivisions in Y direction.j\n\t * @param options.width defaults to 1\n\t * @param options.height defaults to 1\n\t * @param options.startX defaults to 0\n\t * @param options.startY defaults to 0\n\t */\n\tstatic plane(\n\t\toptions: {\n\t\t\tdetail?: int\n\t\t\tdetailX?: int\n\t\t\tdetailY?: int\n\t\t\twidth?: number\n\t\t\theight?: number\n\t\t\tstartX?: number\n\t\t\tstartY?: number\n\t\t} = {},\n\t) {\n\t\tconst detailX = options.detailX || options.detail || 1\n\t\tconst detailY = options.detailY || options.detail || 1\n\t\tconst startX = options.startX || 0\n\t\tconst startY = options.startY || 0\n\t\tconst width = options.width || 1\n\t\tconst height = options.height || 1\n\t\tconst mesh = new Mesh()\n\t\t\t.addIndexBuffer('LINES')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t.addVertexBuffer('coords', 'ts_TexCoord')\n\n\t\tfor (let j = 0; j <= detailY; j++) {\n\t\t\tconst t = j / detailY\n\t\t\tfor (let i = 0; i <= detailX; i++) {\n\t\t\t\tconst s = i / detailX\n\t\t\t\tmesh.vertices.push(new V3(startX + s * width, startY + t * height, 0))\n\t\t\t\tmesh.coords.push([s, t])\n\t\t\t\tmesh.normals.push(V3.Z)\n\t\t\t\tif (i < detailX && j < detailY) {\n\t\t\t\t\tconst offset = i + j * (detailX + 1)\n\t\t\t\t\tmesh.TRIANGLES.push(\n\t\t\t\t\t\toffset,\n\t\t\t\t\t\toffset + detailX + 1,\n\t\t\t\t\t\toffset + 1,\n\t\t\t\t\t\toffset + detailX + 1,\n\t\t\t\t\t\toffset + detailX + 2,\n\t\t\t\t\t\toffset + 1,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < detailX; i++) {\n\t\t\tmesh.LINES.push(i, i + 1)\n\t\t\tmesh.LINES.push((detailX + 1) * detailY + i, (detailX + 1) * detailY + i + 1)\n\t\t}\n\t\tfor (let j = 0; j < detailY; j++) {\n\t\t\tmesh.LINES.push(detailX * j, detailX * (j + 1) + 1)\n\t\t\tmesh.LINES.push(detailX * (j + 1), detailX * (j + 2) + 1)\n\t\t}\n\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\t// unique corners of a unit cube. Used by Mesh.cube to generate a cube mesh.\n\tstatic UNIT_CUBE_CORNERS = [\n\t\tV3.O,\n\t\tnew V3(0, 0, 1),\n\t\tnew V3(0, 1, 0),\n\t\tnew V3(0, 1, 1),\n\n\t\tnew V3(1, 0, 0),\n\t\tnew V3(1, 0, 1),\n\t\tnew V3(1, 1, 0),\n\t\tV3.XYZ,\n\t]\n\n\tstatic box(xDetail: int = 1, yDetail: int = 1, zDetail: int = 1) {\n\t\tconst mesh = new Mesh()\n\t\t\t.addIndexBuffer('LINES')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\tmesh.vertices.length = mesh.normals.length =\n\t\t\t2 * ((xDetail + 1) * (yDetail + 1) + (yDetail + 1) * (zDetail + 1) + (zDetail + 1) * (xDetail + 1))\n\t\tmesh.TRIANGLES.length = 4 * (xDetail * yDetail + yDetail * zDetail + zDetail * xDetail)\n\t\tlet vi = 0,\n\t\t\tti = 0\n\t\tfunction x(detailX: int, detailY: int, m: M4, startX = 0, width = 1, startY = 0, height = 1) {\n\t\t\tconst normal = m.transformVector(V3.Z)\n\t\t\tfor (let j = 0; j <= detailY; j++) {\n\t\t\t\tconst t = j / detailY\n\t\t\t\tfor (let i = 0; i <= detailX; i++) {\n\t\t\t\t\tconst s = i / detailX\n\t\t\t\t\tmesh.vertices[vi] = m.transformPoint(new V3(startX + s * width, startY + t * height, 0))\n\t\t\t\t\tmesh.normals[vi] = normal\n\t\t\t\t\tvi++\n\t\t\t\t\tif (i < detailX && j < detailY) {\n\t\t\t\t\t\tconst offset = i + j * (detailX + 1)\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 1\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + 1\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 1\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 2\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tx(yDetail, xDetail, M4.forSys(V3.Y, V3.X, V3.Z.negated()))\n\t\tx(xDetail, yDetail, M4.translate(V3.Z))\n\t\tx(zDetail, yDetail, M4.forSys(V3.Z, V3.Y, V3.X.negated()))\n\t\tx(yDetail, zDetail, M4.forSys(V3.Y, V3.Z, V3.X, V3.X))\n\t\tx(xDetail, zDetail, M4.forSys(V3.X, V3.Z, V3.Y.negated()))\n\t\tx(zDetail, xDetail, M4.forSys(V3.Z, V3.X, V3.Y, V3.Y))\n\t\treturn mesh\n\t}\n\n\t/**\n\t * Generates a unit cube (1x1x1) starting at the origin and extending into the (+ + +) octant.\n\t * I.e. box from V3.O to V3(1,1,1)\n\t * Creates line (only cube edges), triangle, vertex and normal1 buffers.\n\t */\n\tstatic cube() {\n\t\tconst mesh = new Mesh()\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addIndexBuffer('LINES')\n\n\t\t// basically indexes for faces of the cube. vertices each need to be added 3 times,\n\t\t// as they have different normals depending on the face being rendered\n\t\t// prettier-ignore\n\t\tconst VERTEX_CORNERS = [\n\t\t\t0, 1, 2, 3, // X = 0\n\t\t\t4, 5, 6, 7, // X = 1\n\n\t\t\t0, 4, 1, 5, // Y = 0\n\t\t\t2, 6, 3, 7, // Y = 1\n\n\t\t\t2, 6, 0, 4, // Z = 0\n\t\t\t3, 7, 1, 5, // Z = 1\n\t\t]\n\t\tmesh.vertices = VERTEX_CORNERS.map((i) => Mesh.UNIT_CUBE_CORNERS[i])\n\t\tmesh.normals = [V3.X.negated(), V3.X, V3.Y.negated(), V3.Y, V3.Z.negated(), V3.Z].flatMap((v) => [v, v, v, v])\n\t\tfor (let i = 0; i < 6 * 4; i += 4) {\n\t\t\tpushQuad(\n\t\t\t\tmesh.TRIANGLES,\n\t\t\t\t0 != i % 8,\n\t\t\t\tVERTEX_CORNERS[i],\n\t\t\t\tVERTEX_CORNERS[i + 1],\n\t\t\t\tVERTEX_CORNERS[i + 2],\n\t\t\t\tVERTEX_CORNERS[i + 3],\n\t\t\t)\n\t\t}\n\t\t// indexes of LINES relative to UNIT_CUBE_CORNERS. Mapped to VERTEX_CORNERS.indexOf\n\t\t// so they make sense in the context of the mesh\n\t\t// prettier-ignore\n\t\tmesh.LINES = [\n\t\t\t0, 1,\n\t\t\t0, 2,\n\t\t\t1, 3,\n\t\t\t2, 3,\n\n\t\t\t0, 4,\n\t\t\t1, 5,\n\t\t\t2, 6,\n\t\t\t3, 7,\n\n\t\t\t4, 5,\n\t\t\t4, 6,\n\t\t\t5, 7,\n\t\t\t6, 7,\n\t\t].map(i => VERTEX_CORNERS.indexOf(i))\n\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\tstatic isocahedron() {\n\t\treturn Mesh.sphere(0)\n\t}\n\n\tstatic sphere2(latitudes: int, longitudes: int) {\n\t\tconst baseVertices = arrayFromFunction(latitudes, (i) => {\n\t\t\tconst angle = (i / (latitudes - 1)) * PI - PI / 2\n\t\t\treturn new V3(0, cos(angle), sin(angle))\n\t\t})\n\t\treturn Mesh.rotation(baseVertices, { anchor: V3.O, dir1: V3.Z }, 2 * PI, longitudes, true, baseVertices)\n\t}\n\n\t/**\n\t * Returns a sphere mesh with radius 1 created by subdividing the faces of a isocahedron (20-sided) recursively\n\t * The sphere is positioned at the origin\n\t * @param subdivisions\n\t *      How many recursive divisions to do. A subdivision divides a triangle into 4,\n\t *      so the total number of triangles is 20 * 4^subdivisions\n\t * @returns\n\t *      Contains vertex and normal1 buffers and index buffers for triangles and LINES\n\t */\n\tstatic sphere(subdivisions: int = 3) {\n\t\tconst golden = (1 + Math.sqrt(5)) / 2,\n\t\t\tu = new V3(1, golden, 0).unit(),\n\t\t\ts = u.x,\n\t\t\tt = u.y\n\t\t// base vertices of isocahedron\n\t\tconst vertices = [\n\t\t\tnew V3(-s, t, 0),\n\t\t\tnew V3(s, t, 0),\n\t\t\tnew V3(-s, -t, 0),\n\t\t\tnew V3(s, -t, 0),\n\n\t\t\tnew V3(0, -s, t),\n\t\t\tnew V3(0, s, t),\n\t\t\tnew V3(0, -s, -t),\n\t\t\tnew V3(0, s, -t),\n\n\t\t\tnew V3(t, 0, -s),\n\t\t\tnew V3(t, 0, s),\n\t\t\tnew V3(-t, 0, -s),\n\t\t\tnew V3(-t, 0, s),\n\t\t]\n\t\t// base triangles of isocahedron\n\t\t// prettier-ignore\n\t\tconst triangles = [\n\t\t\t// 5 faces around point 0\n\t\t\t0, 11, 5,\n\t\t\t0, 5, 1,\n\t\t\t0, 1, 7,\n\t\t\t0, 7, 10,\n\t\t\t0, 10, 11,\n\n\t\t\t// 5 adjacent faces\n\t\t\t1, 5, 9,\n\t\t\t5, 11, 4,\n\t\t\t11, 10, 2,\n\t\t\t10, 7, 6,\n\t\t\t7, 1, 8,\n\n\t\t\t// 5 faces around point 3\n\t\t\t3, 9, 4,\n\t\t\t3, 4, 2,\n\t\t\t3, 2, 6,\n\t\t\t3, 6, 8,\n\t\t\t3, 8, 9,\n\n\t\t\t// 5 adjacent faces\n\t\t\t4, 9, 5,\n\t\t\t2, 4, 11,\n\t\t\t6, 2, 10,\n\t\t\t8, 6, 7,\n\t\t\t9, 8, 1,\n\t\t]\n\n\t\t/**\n\t\t * Tesselates triangle a b c\n\t\t * a b c must already be in vertices with the indexes ia ib ic\n\t\t * res is the number of subdivisions to do. 0 just results in triangle and line indexes being added to the\n\t\t * respective buffers.\n\t\t */\n\t\tfunction tesselateRecursively(\n\t\t\ta: V3,\n\t\t\tb: V3,\n\t\t\tc: V3,\n\t\t\tres: int,\n\t\t\tvertices: V3[],\n\t\t\ttriangles: int[],\n\t\t\tia: int,\n\t\t\tib: int,\n\t\t\tic: int,\n\t\t\tlines: int[],\n\t\t) {\n\t\t\tif (0 == res) {\n\t\t\t\ttriangles.push(ia, ib, ic)\n\t\t\t\tif (ia < ib) lines.push(ia, ib)\n\t\t\t\tif (ib < ic) lines.push(ib, ic)\n\t\t\t\tif (ic < ia) lines.push(ic, ia)\n\t\t\t} else {\n\t\t\t\t// subdivide the triangle abc into 4 by adding a vertex (with the correct distance from the origin)\n\t\t\t\t// between each segment ab, bc and cd, then calling the function recursively\n\t\t\t\tconst abMid1 = a.plus(b).toLength(1),\n\t\t\t\t\tbcMid1 = b.plus(c).toLength(1),\n\t\t\t\t\tcaMid1 = c.plus(a).toLength(1)\n\t\t\t\t// indexes of new vertices:\n\t\t\t\tconst iabm = vertices.length,\n\t\t\t\t\tibcm = iabm + 1,\n\t\t\t\t\ticam = iabm + 2\n\t\t\t\tvertices.push(abMid1, bcMid1, caMid1)\n\t\t\t\ttesselateRecursively(abMid1, bcMid1, caMid1, res - 1, vertices, triangles, iabm, ibcm, icam, lines)\n\t\t\t\ttesselateRecursively(a, abMid1, caMid1, res - 1, vertices, triangles, ia, iabm, icam, lines)\n\t\t\t\ttesselateRecursively(b, bcMid1, abMid1, res - 1, vertices, triangles, ib, ibcm, iabm, lines)\n\t\t\t\ttesselateRecursively(c, caMid1, bcMid1, res - 1, vertices, triangles, ic, icam, ibcm, lines)\n\t\t\t}\n\t\t}\n\n\t\tconst mesh = new Mesh()\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t.addIndexBuffer('TRIANGLES')\n\t\t\t.addIndexBuffer('LINES')\n\t\tmesh.vertices.push(...vertices)\n\t\tsubdivisions = undefined == subdivisions ? 4 : subdivisions\n\t\tfor (let i = 0; i < 20; i++) {\n\t\t\tconst [ia, ic, ib] = triangles.slice(i * 3, i * 3 + 3)\n\t\t\ttesselateRecursively(\n\t\t\t\tvertices[ia],\n\t\t\t\tvertices[ic],\n\t\t\t\tvertices[ib],\n\t\t\t\tsubdivisions,\n\t\t\t\tmesh.vertices,\n\t\t\t\tmesh.TRIANGLES,\n\t\t\t\tia,\n\t\t\t\tic,\n\t\t\t\tib,\n\t\t\t\tmesh.LINES,\n\t\t\t)\n\t\t}\n\n\t\tmesh.normals = mesh.vertices\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\tstatic aabb(aabb: AABB) {\n\t\tconst matrix = M4.product(\n\t\t\tM4.translate(aabb.min),\n\t\t\tM4.scale(aabb.size().max(new V3(NLA_PRECISION, NLA_PRECISION, NLA_PRECISION))),\n\t\t)\n\t\tconst mesh = Mesh.cube().transform(matrix)\n\t\t// mesh.vertices = aabb.corners()\n\t\tmesh.computeNormalLines(20)\n\t\tmesh.compile()\n\n\t\treturn mesh\n\t}\n\n\tstatic offsetVertices(\n\t\tvertices: V3[],\n\t\toffset: V3,\n\t\tclose: boolean,\n\t): Mesh & { TRIANGLES: int[]; coords: [number, number][] }\n\tstatic offsetVertices(\n\t\tvertices: V3[],\n\t\toffset: V3,\n\t\tclose: boolean,\n\t\tnormals: V3[],\n\t): Mesh & { TRIANGLES: int[]; coords: [number, number][]; normals: V3[] }\n\tstatic offsetVertices(vertices: V3[], offset: V3, close: boolean, normals?: V3[]) {\n\t\tassertVectors.apply(undefined, vertices)\n\t\tassertVectors(offset)\n\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('coords', 'ts_TexCoord')\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\n\t\tmesh.vertices = vertices.concat(vertices.map((v) => v.plus(offset)))\n\t\tconst vl = vertices.length\n\t\tmesh.coords = arrayFromFunction(vl * 2, (i): [number, number] => [(i % vl) / vl, (i / vl) | 0])\n\n\t\tconst triangles = mesh.TRIANGLES\n\t\tfor (let i = 0; i < vertices.length - 1; i++) {\n\t\t\tpushQuad(triangles, false, i, i + 1, vertices.length + i, vertices.length + i + 1)\n\t\t}\n\t\tif (close) {\n\t\t\tpushQuad(triangles, false, vertices.length - 1, 0, vertices.length * 2 - 1, vertices.length)\n\t\t}\n\t\tif (normals) {\n\t\t\tmesh.normals = normals.concat(normals)\n\t\t}\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\t// Creates a new $Mesh by rotating $vertices by $totalRads around $lineAxis (according to the right-hand\n\t// rule). $steps is the number of steps to take. $close is whether the vertices of the first and last step\n\t// should be connected by triangles. If $normals is set (pass an array of V3s of the same length as $vertices),\n\t// these will also be rotated and correctly added to the mesh.\n\t// @example const precious = Mesh.rotation([V(10, 0, -2), V(10, 0, 2), V(11, 0, 2), V(11, 0, -2)], , L3.Z, 512)\n\tstatic rotation(\n\t\tvertices: V3[],\n\t\tlineAxis: { anchor: V3; dir1: V3 },\n\t\ttotalRads: raddd,\n\t\tsteps: int,\n\t\tclose = true,\n\t\tnormals?: V3[],\n\t) {\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES')\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\n\t\tconst vc = vertices.length,\n\t\t\tvTotal = vc * steps\n\n\t\tconst rotMat = new M4()\n\t\tconst triangles = mesh.TRIANGLES\n\t\tfor (let i = 0; i < steps; i++) {\n\t\t\t// add triangles\n\t\t\tconst rads = (totalRads / steps) * i\n\t\t\tM4.rotateLine(lineAxis.anchor, lineAxis.dir1, rads, rotMat)\n\t\t\tmesh.vertices.push(...rotMat.transformedPoints(vertices))\n\n\t\t\tnormals && mesh.normals!.push(...rotMat.transformedVectors(normals))\n\t\t\tif (close || i !== steps - 1) {\n\t\t\t\tfor (let j = 0; j < vc - 1; j++) {\n\t\t\t\t\tpushQuad(\n\t\t\t\t\t\ttriangles,\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\ti * vc + j + 1,\n\t\t\t\t\t\ti * vc + j,\n\t\t\t\t\t\t((i + 1) * vc + j + 1) % vTotal,\n\t\t\t\t\t\t((i + 1) * vc + j) % vTotal,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\tstatic parametric(\n\t\tpF: (d: number, z: number) => V3,\n\t\tpN: undefined,\n\t\tsMin: number,\n\t\tsMax: number,\n\t\ttMin: number,\n\t\ttMax: number,\n\t\tsRes: number,\n\t\ttRes: number,\n\t): Mesh & { TRIANGLES: int[] }\n\tstatic parametric(\n\t\tpF: (d: number, z: number) => V3,\n\t\tpN: (d: number, z: number) => V3,\n\t\tsMin: number,\n\t\tsMax: number,\n\t\ttMin: number,\n\t\ttMax: number,\n\t\tsRes: number,\n\t\ttRes: number,\n\t): Mesh & { normals: V3[]; TRIANGLES: int[] }\n\tstatic parametric(\n\t\tpF: (d: number, z: number) => V3,\n\t\tpN: ((d: number, z: number) => V3) | undefined,\n\t\tsMin: number,\n\t\tsMax: number,\n\t\ttMin: number,\n\t\ttMax: number,\n\t\tsRes: number,\n\t\ttRes: number,\n\t) {\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('normals', 'ts_Normal')\n\t\tfor (let si = 0; si <= sRes; si++) {\n\t\t\tconst s = lerp(sMin, sMax, si / sRes)\n\t\t\tfor (let ti = 0; ti <= tRes; ti++) {\n\t\t\t\tconst t = lerp(tMin, tMax, ti / tRes)\n\t\t\t\tmesh.vertices.push(pF(s, t))\n\t\t\t\tpN && mesh.normals.push(pN(s, t))\n\t\t\t\tif (ti < tRes && si < sRes) {\n\t\t\t\t\tconst offset = ti + si * (tRes + 1)\n\t\t\t\t\tpushQuad(mesh.TRIANGLES, false, offset, offset + tRes + 1, offset + 1, offset + tRes + 2)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn mesh\n\t}\n\n\tstatic load(json: { vertices: Tuple3<number>[]; triangles?: Tuple3<number>[]; normals?: Tuple3<number>[] }) {\n\t\tconst mesh = new Mesh()\n\t\tif (Array.isArray(json.vertices[0])) {\n\t\t\tmesh.vertices = json.vertices.map((x) => V(x))\n\t\t} else {\n\t\t\tthrow new Error()\n\t\t}\n\t\tif (json.triangles) {\n\t\t\tmesh.addIndexBuffer('TRIANGLES')\n\t\t\t;(mesh as any).TRIANGLES = json.triangles\n\t\t}\n\t\tif (json.normals) {\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\n\t\t\t;(mesh as any).normals = json.normals\n\t\t}\n\t\tmesh.compile()\n\t\treturn mesh\n\t}\n\n\ttoJSON() {\n\t\treturn {\n\t\t\tvertices: this.vertices.map((x) => x.toArray()),\n\t\t\tTRIANGLES: (this as any).TRIANGLES,\n\t\t}\n\t}\n}\n","/* tslint:disable:no-string-literal */\n/// <reference types=\"webgl-strict-types\" />\nimport { assert, assertf, assertInst, assertVectors, int, M4, NLA_DEBUG, V3 } from 'ts3dutils'\n\nimport { Buffer, currentGL, GL_COLOR, Mesh, TSGLContext } from './index'\n\nimport GL = WebGLRenderingContextStrict\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\n\n/**\n * These are all the draw modes usable in OpenGL ES\n */\nconst DRAW_MODE_NAMES = {\n\t[WGL.POINTS]: 'POINTS',\n\t[WGL.LINES]: 'LINES',\n\t[WGL.LINE_STRIP]: 'LINE_STRIP',\n\t[WGL.LINE_LOOP]: 'LINE_LOOP',\n\t[WGL.TRIANGLES]: 'TRIANGLES',\n\t[WGL.TRIANGLE_STRIP]: 'TRIANGLE_STRIP',\n\t[WGL.TRIANGLE_FAN]: 'TRIANGLE_FAN',\n}\nconst DRAW_MODE_CHECKS: { [type: string]: (x: int) => boolean } = {\n\t[WGL.POINTS]: (_) => true,\n\t[WGL.LINES]: (x) => 0 == x % 2, // divisible by 2\n\t[WGL.LINE_STRIP]: (x) => x > 2, // need at least 2\n\t[WGL.LINE_LOOP]: (x) => x > 2, // more like > 3, but oh well\n\t[WGL.TRIANGLES]: (x) => 0 == x % 3, // divisible by 3\n\t[WGL.TRIANGLE_STRIP]: (x) => x > 3,\n\t[WGL.TRIANGLE_FAN]: (x) => x > 3,\n}\n\nexport const SHADER_VAR_TYPES = [\n\t'FLOAT',\n\t'FLOAT_MAT2',\n\t'FLOAT_MAT3',\n\t'FLOAT_MAT4',\n\t'FLOAT_VEC2',\n\t'FLOAT_VEC3',\n\t'FLOAT_VEC4',\n\t'INT',\n\t'INT_VEC2',\n\t'INT_VEC3',\n\t'INT_VEC4',\n\t'UNSIGNED_INT',\n]\n\nexport function isArray<T>(obj: any): obj is T[] {\n\treturn Array == obj.constructor || Float32Array == obj.constructor || Float64Array == obj.constructor\n}\n\nexport interface UniformTypesMap {\n\tFLOAT_VEC4: GL_COLOR | V3\n\tFLOAT_VEC3: [number, number, number] | V3\n\tFLOAT_VEC2: [number, number] | V3\n\tFLOAT: number\n\tINT: int\n\tFLOAT_MAT4: M4 | number[]\n\tFLOAT_MAT3: M4 | number[]\n\tSAMPLER_2D: int\n\tBOOL: boolean\n}\nexport type UniformTypes = keyof UniformTypesMap\n\nfunction isFloatArray(obj: any): obj is number[] | Float64Array | Float32Array {\n\treturn (\n\t\tFloat32Array == obj.constructor ||\n\t\tFloat64Array == obj.constructor ||\n\t\t(Array.isArray(obj) && obj.every((x) => 'number' == typeof x))\n\t)\n}\n\nfunction isIntArray(x: any) {\n\tif (\n\t\t[Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array].some(\n\t\t\t(y) => x instanceof y,\n\t\t)\n\t) {\n\t\treturn true\n\t}\n\treturn (\n\t\t(x instanceof Float32Array || x instanceof Float64Array || Array.isArray(x)) &&\n\t\t(x as number[]).every((x) => Number.isInteger(x))\n\t)\n}\n\nexport type ShaderType<UniformTypes, AttributeTypes = {}> = string & { T?: UniformTypes; A?: AttributeTypes }\nexport type VarTypeMap = { [name: string]: UniformTypes }\nexport type ShaderSource<\n\tU extends VarTypeMap,\n\tIN extends VarTypeMap,\n\tOUT extends VarTypeMap,\n\tkind extends 'vertex' | 'fragment'\n> = string & { U: U; IN: IN; OUT: OUT; kind: kind }\n\n//const x:UniformTypes = undefined as 'FLOAT_VEC4' | 'FLOAT_VEC3'\nexport class Shader<UniformTypes extends VarTypeMap = any, AttributeTypes extends VarTypeMap = any> {\n\tprogram: WebGLProgram\n\tactiveMatrices: { [matrixName: string]: boolean }\n\tattributeLocations: { [attributeName: string]: number }\n\tconstantAttributes: { [attributeName: string]: boolean }\n\tuniformLocations: { [uniformName: string]: WebGLUniformLocation }\n\tuniformInfos: { [uniformName: string]: GL.WebGLActiveInfo<GL.UniformType> }\n\tprojectionMatrixVersion = -1\n\tmodelViewMatrixVersion = -1\n\tgl: TSGLContext\n\n\t/**\n\t * Create shader drom typed vertex and fragment source. Weird generic arguments are because\n\t * the vertex shader is required to have the OUT types the fragment shader needs as IN,\n\t * but not vice-versa.\n\t */\n\tstatic create<\n\t\tFragSrc extends ShaderSource<{}, {}, {}, 'fragment'>,\n\t\tVertSrc extends ShaderSource<{}, {}, FragSrc['IN'], 'vertex'>\n\t>(\n\t\tvertexSource: VertSrc,\n\t\tfragmentSource: FragSrc,\n\t\tgl?: TSGLContext,\n\t): Shader<VertSrc['U'] & FragSrc['U'], VertSrc['IN']>\n\t/**\n\t * Create shader from typed vertex and untyped fragment source. Uniform of the fragment shader\n\t * can optionally be manually specified.\n\t */\n\tstatic create<FU extends VarTypeMap, VertSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(\n\t\tvertexSource: VertSrc,\n\t\tfragmentSource: string & { IN?: undefined },\n\t\tgl?: TSGLContext,\n\t): Shader<FU & VertSrc['U'], VertSrc['IN']>\n\t/**\n\t * Create shader from untyped vertex and typed fragment source. Uniform and attribute types of the shader\n\t * can optionally be manually specified.\n\t */\n\tstatic create<VU extends VarTypeMap, VA extends VarTypeMap, FragSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(\n\t\tvertexSource: string & { IN?: undefined },\n\t\tfragmentSource: FragSrc,\n\t\tgl?: TSGLContext,\n\t): Shader<VU & FragSrc['U'], VA>\n\t/**\n\t * Create shader from untyped vertex and fragment source. Uniform and attribute types of the shader\n\t * can optionally be manually specified.\n\t */\n\tstatic create<U extends VarTypeMap = {}, A extends VarTypeMap = {}>(\n\t\tvertexSource: string & { IN?: undefined },\n\t\tfragmentSource: string & { IN?: undefined },\n\t\tgl?: TSGLContext,\n\t): Shader<U, A>\n\tstatic create(vertexSource: string, fragmentSource: string, gl?: TSGLContext) {\n\t\treturn new Shader(vertexSource, fragmentSource, gl) as any\n\t}\n\n\t/**\n\t * Provides a convenient wrapper for WebGL shaders. A few uniforms and attributes,\n\t * prefixed with `gl_`, are automatically added to all shader sources to make\n\t * simple shaders easier to write.\n\t * Headers for the following variables are automatically prepended to the passed source. The correct variables\n\t * are also automatically passed to the shader when drawing.\n\t *\n\t * For vertex and fragment shaders:\n\t uniform mat3 ts_NormalMatrix;\n\t uniform mat4 ts_ModelViewMatrix;\n\t uniform mat4 ts_ProjectionMatrix;\n\t uniform mat4 ts_ModelViewProjectionMatrix;\n\t uniform mat4 ts_ModelViewMatrixInverse;\n\t uniform mat4 ts_ProjectionMatrixInverse;\n\t uniform mat4 ts_ModelViewProjectionMatrixInverse;\n\t *\n\t *\n\t * Example usage:\n\t *\n\t *  const shader = new GL.Shader(\n\t *      `void main() { gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex; }`,\n\t *      `uniform vec4 color; void main() { gl_FragColor = color; }`)\n\t *\n\t *  shader.uniforms({ color: [1, 0, 0, 1] }).draw(mesh)\n\t *\n\t * Compiles a shader program using the provided vertex and fragment shaders.\n\t */\n\tprotected constructor(vertexSource: string, fragmentSource: string, gl = currentGL()) {\n\t\t// const versionRegex = /^(?:\\s+|\\/\\/[\\s\\S]*?[\\r\\n]+|\\/\\*[\\s\\S]*?\\*\\/)+(#version\\s+(\\d+)\\s+es)/\n\t\t// Headers are prepended to the sources to provide some automatic functionality.\n\t\tconst header = `\n\t\tuniform mat3 ts_NormalMatrix;\n\t\tuniform mat4 ts_ModelViewMatrix;\n\t\tuniform mat4 ts_ProjectionMatrix;\n\t\tuniform mat4 ts_ModelViewProjectionMatrix;\n\t\tuniform mat4 ts_ModelViewMatrixInverse;\n\t\tuniform mat4 ts_ProjectionMatrixInverse;\n\t\tuniform mat4 ts_ModelViewProjectionMatrixInverse;\n\t`\n\t\tconst matrixNames = header.match(/\\bts_\\w+/g)\n\n\t\t// Compile and link errors are thrown as strings.\n\t\tfunction compileSource(type: GL.ShaderType, source: string) {\n\t\t\tconst shader = gl.createShader(type)!\n\t\t\tgl.shaderSource(shader, source)\n\t\t\tgl.compileShader(shader)\n\t\t\tif (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t\t\t\tthrow new Error('compile error: ' + gl.getShaderInfoLog(shader))\n\t\t\t}\n\t\t\treturn shader\n\t\t}\n\n\t\tthis.gl = gl\n\t\tthis.program = gl.createProgram()!\n\t\tgl.attachShader(this.program, compileSource(gl.VERTEX_SHADER, vertexSource))\n\t\tgl.attachShader(this.program, compileSource(gl.FRAGMENT_SHADER, fragmentSource))\n\t\tgl.linkProgram(this.program)\n\t\tif (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n\t\t\tthrow new Error('link error: ' + gl.getProgramInfoLog(this.program))\n\t\t}\n\t\tthis.attributeLocations = {}\n\t\tthis.uniformLocations = {}\n\t\tthis.constantAttributes = {}\n\n\t\t// Check for the use of built-in matrices that require expensive matrix\n\t\t// multiplications to compute, and record these in `activeMatrices`.\n\t\tthis.activeMatrices = {}\n\t\tmatrixNames &&\n\t\t\tmatrixNames.forEach((name) => {\n\t\t\t\tif (gl.getUniformLocation(this.program, name)) {\n\t\t\t\t\tthis.activeMatrices[name] = true\n\t\t\t\t}\n\t\t\t})\n\n\t\tthis.uniformInfos = {}\n\t\tfor (let i = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS); i-- > 0; ) {\n\t\t\t// see https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glGetActiveUniform.xml\n\t\t\t// this.program has already been checked\n\t\t\t// i is in bounds\n\t\t\tconst info = gl.getActiveUniform(this.program, i)!\n\t\t\tthis.uniformInfos[info.name] = info\n\t\t}\n\t}\n\n\t/**\n\t * Set a uniform for each property of `uniforms`. The correct `viewerGL.uniform*()` method is inferred from the\n\t * value types and from the stored uniform sampler flags.\n\t */\n\tuniforms(uniforms: Partial<{ [K in keyof UniformTypes]: UniformTypesMap[UniformTypes[K]] }>): this {\n\t\tconst gl = this.gl\n\t\tgl.useProgram(this.program)\n\n\t\tfor (const name in uniforms) {\n\t\t\tconst location = this.uniformLocations[name] || gl.getUniformLocation(this.program, name)\n\t\t\t// !location && console.warn(name + ' uniform is not used in shader')\n\t\t\tif (!location) continue\n\t\t\tthis.uniformLocations[name] = location\n\t\t\tlet value: any = uniforms[name] as any\n\t\t\tconst info = this.uniformInfos[name]\n\t\t\tif (NLA_DEBUG) {\n\t\t\t\t// TODO: better errors\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\n\t\t\t\t\tif (1 == info.size) {\n\t\t\t\t\t\tassert(Number.isInteger(value))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tassert(\n\t\t\t\t\t\t\tisIntArray(value) && value.length == info.size,\n\t\t\t\t\t\t\t'value must be int array if info.size != 1',\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassert(gl.FLOAT != info.type || (1 == info.size && 'number' === typeof value) || isFloatArray(value))\n\t\t\t\tassert(\n\t\t\t\t\tgl.FLOAT_VEC3 != info.type ||\n\t\t\t\t\t\t(1 == info.size && value instanceof V3) ||\n\t\t\t\t\t\t(Array.isArray(value) && info.size == value.length && assertVectors(...value)),\n\t\t\t\t)\n\t\t\t\tassert(gl.FLOAT_VEC4 != info.type || 1 != info.size || (isFloatArray(value) && value.length == 4))\n\t\t\t\tassert(gl.FLOAT_MAT4 != info.type || value instanceof M4, () => value.toSource())\n\t\t\t\tassert(gl.FLOAT_MAT3 != info.type || value.length == 9 || value instanceof M4)\n\t\t\t}\n\t\t\tif (value instanceof V3) {\n\t\t\t\tvalue = value.toArray()\n\t\t\t}\n\t\t\tif (gl.FLOAT_VEC4 == info.type && info.size != 1) {\n\t\t\t\tif (value instanceof Float32Array || value instanceof Float64Array) {\n\t\t\t\t\tgl.uniform4fv(location, value instanceof Float32Array ? value : Float32Array.from(value))\n\t\t\t\t} else {\n\t\t\t\t\tgl.uniform4fv(location, value.concatenated())\n\t\t\t\t}\n\t\t\t} else if (gl.FLOAT == info.type && info.size != 1) {\n\t\t\t\tgl.uniform1fv(location, value)\n\t\t\t} else if (gl.FLOAT_VEC3 == info.type && info.size != 1) {\n\t\t\t\tgl.uniform3fv(location, V3.pack(value))\n\t\t\t} else if (value.length) {\n\t\t\t\tswitch (value.length) {\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tgl.uniform1fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tgl.uniform2fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tgl.uniform3fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tgl.uniform4fv(location, value)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t// Matrices are automatically transposed, since WebGL uses column-major\n\t\t\t\t\t// indices instead of row-major indices.\n\t\t\t\t\tcase 9:\n\t\t\t\t\t\t// prettier-ignore\n\t\t\t\t\t\tgl.uniformMatrix3fv(location, false, new Float32Array([\n\t\t\t\t\t\t\tvalue[0], value[3], value[6],\n\t\t\t\t\t\t\tvalue[1], value[4], value[7],\n\t\t\t\t\t\t\tvalue[2], value[5], value[8],\n\t\t\t\t\t\t]))\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase 16:\n\t\t\t\t\t\t// prettier-ignore\n\t\t\t\t\t\tgl.uniformMatrix4fv(location, false, new Float32Array([\n\t\t\t\t\t\t\tvalue[0], value[4], value[8], value[12],\n\t\t\t\t\t\t\tvalue[1], value[5], value[9], value[13],\n\t\t\t\t\t\t\tvalue[2], value[6], value[10], value[14],\n\t\t\t\t\t\t\tvalue[3], value[7], value[11], value[15],\n\t\t\t\t\t\t]))\n\t\t\t\t\t\tbreak\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('don\\'t know how to load uniform \"' + name + '\" of length ' + value.length)\n\t\t\t\t}\n\t\t\t} else if ('number' == typeof value) {\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\n\t\t\t\t\tgl.uniform1i(location, value)\n\t\t\t\t} else {\n\t\t\t\t\tgl.uniform1f(location, value)\n\t\t\t\t}\n\t\t\t} else if ('boolean' == typeof value) {\n\t\t\t\tgl.uniform1i(location, +value)\n\t\t\t} else if (value instanceof M4) {\n\t\t\t\tconst m = value.m\n\t\t\t\tif (gl.FLOAT_MAT4 == info.type) {\n\t\t\t\t\t// prettier-ignore\n\t\t\t\t\tgl.uniformMatrix4fv(location, false, [\n\t\t\t\t\t\tm[0], m[4], m[8], m[12],\n\t\t\t\t\t\tm[1], m[5], m[9], m[13],\n\t\t\t\t\t\tm[2], m[6], m[10], m[14],\n\t\t\t\t\t\tm[3], m[7], m[11], m[15]])\n\t\t\t\t} else if (gl.FLOAT_MAT3 == info.type) {\n\t\t\t\t\t// prettier-ignore\n\t\t\t\t\tgl.uniformMatrix3fv(location, false, [\n\t\t\t\t\t\tm[0], m[4], m[8],\n\t\t\t\t\t\tm[1], m[5], m[9],\n\t\t\t\t\t\tm[2], m[6], m[10]])\n\t\t\t\t} else if (gl.FLOAT_MAT2 == info.type) {\n\t\t\t\t\t// prettier-ignore\n\t\t\t\t\tgl.uniformMatrix2fv(location, false, new Float32Array([\n\t\t\t\t\t\tm[0], m[4],\n\t\t\t\t\t\tm[1], m[5]]))\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(`Can't assign M4 to ${info.type}`)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthrow new Error('attempted to set uniform \"' + name + '\" to invalid value ' + value)\n\t\t\t}\n\t\t}\n\n\t\treturn this\n\t}\n\n\tattributes(attributes: Partial<{ [K in keyof AttributeTypes]: UniformTypesMap[AttributeTypes[K]] }>): this {\n\t\tconst gl = this.gl\n\t\tgl.useProgram(this.program)\n\n\t\tfor (const name in attributes) {\n\t\t\tconst location = this.attributeLocations[name] || gl.getAttribLocation(this.program, name)\n\t\t\tif (location == -1) {\n\t\t\t\tif (!name.startsWith('ts_')) {\n\t\t\t\t\tconsole.warn(`Vertex buffer ${name} was not bound because the attribute is not active.`)\n\t\t\t\t}\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tthis.attributeLocations[name] = location\n\t\t\tgl.disableVertexAttribArray(location)\n\t\t\tlet value = attributes[name]\n\t\t\tif (value instanceof V3) {\n\t\t\t\t// TODO: figure out the types here...\n\t\t\t\tvalue = value.toArray() as any\n\t\t\t}\n\t\t\tif ('number' === typeof value) {\n\t\t\t\tgl.vertexAttrib1f(location, value)\n\t\t\t} else {\n\t\t\t\tgl.vertexAttrib4fv(location, value as number[])\n\t\t\t\t// switch ((value as number[]).length) {\n\t\t\t\t// \tcase 1:\n\t\t\t\t// \t\tgl.vertexAttrib1fv(location, value as number[])\n\t\t\t\t// \t\tbreak\n\t\t\t\t// \tcase 2:\n\t\t\t\t// \t\tgl.vertexAttrib2fv(location, value as number[])\n\t\t\t\t// \t\tbreak\n\t\t\t\t// \tcase 3:\n\t\t\t\t// \t\tgl.vertexAttrib3fv(location, value as number[])\n\t\t\t\t// \t\tbreak\n\t\t\t\t// \tcase 4:\n\t\t\t\t// \t\tbreak\n\t\t\t\t// }\n\t\t\t}\n\t\t\tthis.constantAttributes[name] = true\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the mesh geometry as indexed\n\t * triangles or indexed LINES. Set `mode` to `gl.LINES` (and either add indices to `LINES` or call\n\t * `computeWireframe()`) to draw the mesh in wireframe.\n\t *\n\t * @param mesh\n\t * @param mode Defaults to 'TRIANGLES'. Must be passed as string so the correct index buffer can be\n\t *     automatically drawn.\n\t * @param start int\n\t * @param count int\n\t */\n\tdraw(mesh: Mesh, mode: GL.DrawMode = WGL.TRIANGLES, start?: int, count?: int): this {\n\t\tassert(mesh.hasBeenCompiled, 'mesh.hasBeenCompiled')\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\n\t\tconst modeName: string = DRAW_MODE_NAMES[mode]\n\t\t// assert(mesh.indexBuffers[modeStr], `mesh.indexBuffers[${modeStr}] undefined`)\n\t\treturn this.drawBuffers(mesh.vertexBuffers, mesh.indexBuffers[modeName], mode, start, count)\n\t}\n\n\t/**\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the\n\t * indexed mesh geometry. The `vertexBuffers` argument is a map from attribute\n\t * names to `Buffer` objects of type `WGL.ARRAY_BUFFER`, `indexBuffer` is a `Buffer`\n\t * object of type `WGL.ELEMENT_ARRAY_BUFFER`, and `mode` is a WebGL primitive mode\n\t * like `WGL.TRIANGLES` or `WGL.LINES`. This method automatically creates and caches\n\t * vertex attribute pointers for attributes as needed.\n\t */\n\tdrawBuffers(\n\t\tvertexBuffers: { [attributeName: string]: Buffer },\n\t\tindexBuffer: Buffer | undefined,\n\t\tmode: GL.DrawMode = WGL.TRIANGLES,\n\t\tstart: int = 0,\n\t\tcount?: int,\n\t): this {\n\t\tconst gl = this.gl\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\n\t\tassertf(() => 1 <= Object.keys(vertexBuffers).length)\n\t\tObject.keys(vertexBuffers).forEach((key) => assertInst(Buffer, vertexBuffers[key]))\n\n\t\t// Only varruct up the built-in matrices that are active in the shader\n\t\tconst on = this.activeMatrices\n\t\tconst modelViewMatrixInverse =\n\t\t\t(on['ts_ModelViewMatrixInverse'] || on['ts_NormalMatrix']) &&\n\t\t\t//&& this.modelViewMatrixVersion != gl.modelViewMatrixVersion\n\t\t\tgl.modelViewMatrix.inversed()\n\t\tconst projectionMatrixInverse =\n\t\t\ton['ts_ProjectionMatrixInverse'] &&\n\t\t\t//&& this.projectionMatrixVersion != gl.projectionMatrixVersion\n\t\t\tgl.projectionMatrix.inversed()\n\t\tconst modelViewProjectionMatrix =\n\t\t\t(on['ts_ModelViewProjectionMatrix'] || on['ts_ModelViewProjectionMatrixInverse']) &&\n\t\t\t//&& (this.projectionMatrixVersion != gl.projectionMatrixVersion || this.modelViewMatrixVersion !=\n\t\t\t// gl.modelViewMatrixVersion)\n\t\t\tgl.projectionMatrix.times(gl.modelViewMatrix)\n\n\t\tconst uni: { [matrixName: string]: M4 } = {} // Uniform Matrices\n\t\ton['ts_ModelViewMatrix'] &&\n\t\t\tthis.modelViewMatrixVersion != gl.modelViewMatrixVersion &&\n\t\t\t(uni['ts_ModelViewMatrix'] = gl.modelViewMatrix)\n\t\ton['ts_ModelViewMatrixInverse'] && (uni['ts_ModelViewMatrixInverse'] = modelViewMatrixInverse as M4)\n\t\ton['ts_ProjectionMatrix'] &&\n\t\t\tthis.projectionMatrixVersion != gl.projectionMatrixVersion &&\n\t\t\t(uni['ts_ProjectionMatrix'] = gl.projectionMatrix)\n\t\tprojectionMatrixInverse && (uni['ts_ProjectionMatrixInverse'] = projectionMatrixInverse)\n\t\tmodelViewProjectionMatrix && (uni['ts_ModelViewProjectionMatrix'] = modelViewProjectionMatrix)\n\t\tmodelViewProjectionMatrix &&\n\t\t\ton['ts_ModelViewProjectionMatrixInverse'] &&\n\t\t\t(uni['ts_ModelViewProjectionMatrixInverse'] = modelViewProjectionMatrix.inversed())\n\t\ton['ts_NormalMatrix'] &&\n\t\t\tthis.modelViewMatrixVersion != gl.modelViewMatrixVersion &&\n\t\t\t(uni['ts_NormalMatrix'] = (modelViewMatrixInverse as M4).transposed())\n\t\tthis.uniforms(uni as any)\n\t\tthis.projectionMatrixVersion = gl.projectionMatrixVersion\n\t\tthis.modelViewMatrixVersion = gl.modelViewMatrixVersion\n\n\t\t// Create and enable attribute pointers as necessary.\n\t\tlet minVertexBufferLength = Infinity\n\t\tfor (const attribute in vertexBuffers) {\n\t\t\tconst buffer = vertexBuffers[attribute]\n\t\t\tassert(buffer.hasBeenCompiled)\n\t\t\tconst location = this.attributeLocations[attribute] || gl.getAttribLocation(this.program, attribute)\n\t\t\tif (location == -1 || !buffer.buffer) {\n\t\t\t\tif (!attribute.startsWith('ts_')) {\n\t\t\t\t\tconsole.warn(`Vertex buffer ${attribute} was not bound because the attribute is not active.`)\n\t\t\t\t}\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tthis.attributeLocations[attribute] = location\n\t\t\tgl.bindBuffer(WGL.ARRAY_BUFFER, buffer.buffer)\n\n\t\t\tgl.enableVertexAttribArray(location)\n\n\t\t\tgl.vertexAttribPointer(location, buffer.spacing, WGL.FLOAT, false, 0, 0)\n\n\t\t\tminVertexBufferLength = Math.min(minVertexBufferLength, buffer.count)\n\t\t}\n\n\t\t// Disable unused attribute pointers.\n\t\tfor (const attribute in this.attributeLocations) {\n\t\t\tif (!(attribute in vertexBuffers)) {\n\t\t\t\tgl.disableVertexAttribArray(this.attributeLocations[attribute])\n\t\t\t}\n\t\t}\n\n\t\tif (NLA_DEBUG) {\n\t\t\tconst numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES)\n\t\t\tfor (let i = 0; i < numAttribs; ++i) {\n\t\t\t\tconst buffer = gl.getVertexAttrib(i, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)\n\t\t\t\tif (!buffer) {\n\t\t\t\t\tconst info = gl.getActiveAttrib(this.program, i)!\n\t\t\t\t\tif (!this.constantAttributes[info.name]) {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t'No buffer is bound to attribute ' + info.name + ' and it was not set with .attributes()',\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// console.log('name:', info.name, 'type:', info.type, 'size:', info.size)\n\t\t\t}\n\t\t}\n\n\t\t// Draw the geometry.\n\t\tif (minVertexBufferLength) {\n\t\t\tif (undefined === count) {\n\t\t\t\tcount = indexBuffer ? indexBuffer.count : minVertexBufferLength\n\t\t\t}\n\t\t\tassert(\n\t\t\t\tDRAW_MODE_CHECKS[mode](count),\n\t\t\t\t'count ' +\n\t\t\t\t\tcount +\n\t\t\t\t\t\"doesn't fulfill requirement +\" +\n\t\t\t\t\tDRAW_MODE_CHECKS[mode].toString() +\n\t\t\t\t\t' for mode ' +\n\t\t\t\t\tDRAW_MODE_NAMES[mode],\n\t\t\t)\n\n\t\t\tif (indexBuffer) {\n\t\t\t\tassert(indexBuffer.hasBeenCompiled)\n\t\t\t\tassert(minVertexBufferLength > indexBuffer.maxValue!)\n\t\t\t\tassert(count % indexBuffer.spacing == 0)\n\t\t\t\tassert(start % indexBuffer.spacing == 0)\n\t\t\t\tif (start + count > indexBuffer.count) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Buffer not long enough for passed parameters start/length/buffer length ' +\n\t\t\t\t\t\t\tstart +\n\t\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t\tcount +\n\t\t\t\t\t\t\t' ' +\n\t\t\t\t\t\t\tindexBuffer.count,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tgl.bindBuffer(WGL.ELEMENT_ARRAY_BUFFER, indexBuffer.buffer!)\n\t\t\t\t// start parameter has to be multiple of sizeof(WGL.UNSIGNED_SHORT)\n\t\t\t\tgl.drawElements(\n\t\t\t\t\tmode,\n\t\t\t\t\tcount,\n\t\t\t\t\tindexBuffer.bindSize as GL['UNSIGNED_SHORT'],\n\t\t\t\t\tindexBuffer.type.BYTES_PER_ELEMENT * start,\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tif (start + count > minVertexBufferLength) {\n\t\t\t\t\tthrow new Error('invalid')\n\t\t\t\t}\n\t\t\t\tgl.drawArrays(mode, start, count)\n\t\t\t}\n\t\t\tgl.drawCallCount++\n\t\t}\n\n\t\treturn this\n\t}\n}\n","/// <reference types=\"webgl-strict-types\" />\nimport { assert, int } from 'ts3dutils'\n\nimport { currentGL, TSGLContext } from './index'\nimport GL = WebGLRenderingContextStrict\nimport GL2 = WebGL2RenderingContextStrict\n\nexport interface TextureOptions {\n\twrap?: GL.TextureWrap // defaults to WGL.CLAMP_TO_EDGE, or set wrapS and wrapT individually.\n\twrapS?: GL.TextureWrap\n\twrapT?: GL.TextureWrap\n\tfilter?: GL.TextureMagFilter // defaults to WGL.LINEAR, or set minFilter and magFilter individually.\n\tminFilter?: GL.TextureMinFilter\n\tmagFilter?: GL.TextureMagFilter\n\tformat?: GL2.TextureFormat // defaults to WGL.RGBA.\n\tinternalFormat?: GL2.TextureInternalFormat\n\ttype?: GL.ReadPixelsType // defaults to WGL.UNSIGNED_BYTE.\n\tdata?: any\n}\n\nexport class Texture {\n\theight: int\n\twidth: int\n\ttexture: WebGLTexture\n\t// e.g. viewerGL.UNSIGNED_BYTE, viewerGL.FLOAT\n\tinternalFormat: GL2.TextureInternalFormat\n\tformat: GL2.TextureFormat\n\t// e.g. viewerGL.RGBA\n\ttype: GL.ReadPixelsType\n\n\t/**\n\t * Provides a simple wrapper around WebGL textures that supports render-to-texture.\n\t *\n\t * The arguments `width` and `height` give the size of the texture in texels.\n\t * WebGL texture dimensions must be powers of two unless `filter` is set to\n\t * either `WGL.NEAREST` or `WGL.LINEAR` and `wrap` is set to `WGL.CLAMP_TO_EDGE`\n\t * (which they are by default).\n\t *\n\t * Texture parameters can be passed in via the `options` argument.\n\t * Example usage:\n\t *\n\t *      let tex = new GL.Texture(256, 256, {\n\t *       magFilter: WGL.NEAREST,\n\t *       minFilter: WGL.LINEAR,\n\t *\n\t *       wrapS: WGL.REPEAT,\n\t *       wrapT: WGL.REPEAT,\n\t *\n\t *       format: WGL.RGB, // Defaults to WGL.RGBA\n\t *       type: WGL.FLOAT // Defaults to WGL.UNSIGNED_BYTE\n\t *     })\n\t *\n\t */\n\tconstructor(width: int, height: int, options: TextureOptions = {}, readonly gl = currentGL()) {\n\t\tthis.width = width\n\t\tthis.height = height\n\t\tthis.format = options.format || gl.RGBA\n\t\tthis.internalFormat = options.internalFormat || gl.RGBA\n\t\tthis.type = options.type || gl.UNSIGNED_BYTE\n\t\tconst magFilter = options.filter || options.magFilter || gl.LINEAR\n\t\tconst minFilter = options.filter || options.minFilter || gl.LINEAR\n\t\tif (this.type === gl.FLOAT) {\n\t\t\tif (gl.version != 2 && !gl.getExtension('OES_texture_float')) {\n\t\t\t\tthrow new Error('OES_texture_float is required but not supported')\n\t\t\t}\n\t\t\tif (\n\t\t\t\t(minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\n\t\t\t\t!gl.getExtension('OES_texture_float_linear')\n\t\t\t) {\n\t\t\t\tthrow new Error('OES_texture_float_linear is required but not supported')\n\t\t\t}\n\t\t} else if (this.type === gl.HALF_FLOAT_OES) {\n\t\t\tif (!gl.getExtension('OES_texture_half_float')) {\n\t\t\t\tthrow new Error('OES_texture_half_float is required but not supported')\n\t\t\t}\n\t\t\tif (\n\t\t\t\t(minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\n\t\t\t\t!gl.getExtension('OES_texture_half_float_linear')\n\t\t\t) {\n\t\t\t\tthrow new Error('OES_texture_half_float_linear is required but not supported')\n\t\t\t}\n\t\t}\n\n\t\tthis.texture = gl.createTexture()!\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, options.wrap || options.wrapS || gl.CLAMP_TO_EDGE)\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, options.wrap || options.wrapT || gl.CLAMP_TO_EDGE)\n\t\tgl.texImage2D(\n\t\t\tgl.TEXTURE_2D,\n\t\t\t0,\n\t\t\tthis.internalFormat as any,\n\t\t\twidth,\n\t\t\theight,\n\t\t\t0,\n\t\t\tthis.format as any,\n\t\t\tthis.type as any,\n\t\t\toptions.data,\n\t\t)\n\t}\n\n\tsetData(data: ArrayBufferView) {\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\n\t\tthis.gl.texImage2D(\n\t\t\tthis.gl.TEXTURE_2D,\n\t\t\t0,\n\t\t\tthis.internalFormat as any,\n\t\t\tthis.width,\n\t\t\tthis.height,\n\t\t\t0,\n\t\t\tthis.format as any,\n\t\t\tthis.type as any,\n\t\t\tdata as any,\n\t\t)\n\t}\n\n\tbind(unit: int) {\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\n\t}\n\n\tunbind(unit: int) {\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, null)\n\t}\n\n\tprivate framebuffer: WebGLFramebuffer | undefined\n\tstatic checkerBoardCanvas: HTMLCanvasElement\n\n\tdrawTo(render: (gl: TSGLContext) => void): void {\n\t\tconst gl = this.gl\n\t\tconst prevFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING)\n\t\tif (!this.framebuffer) {\n\t\t\t// create a renderbuffer for the depth component\n\t\t\tconst prevRenderbuffer = gl.getParameter(gl.RENDERBUFFER_BINDING)\n\t\t\tconst depthRenderbuffer = gl.createRenderbuffer()\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderbuffer)\n\t\t\t// DEPTH_COMPONENT16 is the only depth format\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height)\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, prevRenderbuffer)\n\n\t\t\t// create a framebuffer to render to\n\t\t\tthis.framebuffer = gl.createFramebuffer()!\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0)\n\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthRenderbuffer)\n\t\t\tif (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\tthrow new Error('Rendering to this texture is not supported (incomplete this.framebuffer)')\n\t\t\t}\n\t\t} else if (prevFramebuffer !== this.framebuffer) {\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\n\t\t}\n\n\t\tconst prevViewport = gl.getParameter(gl.VIEWPORT)\n\n\t\tgl.viewport(0, 0, this.width, this.height)\n\t\trender(gl)\n\n\t\t// restore previous state\n\t\tprevFramebuffer !== this.framebuffer && gl.bindFramebuffer(gl.FRAMEBUFFER, prevFramebuffer)\n\t\tgl.viewport(prevViewport[0], prevViewport[1], prevViewport[2], prevViewport[3])\n\t}\n\n\tswapWith(other: Texture): void {\n\t\tassert(this.gl == other.gl)\n\t\tlet temp\n\t\ttemp = other.texture\n\t\tother.texture = this.texture\n\t\tthis.texture = temp\n\n\t\ttemp = other.width\n\t\tother.width = this.width\n\t\tthis.width = temp\n\n\t\ttemp = other.height\n\t\tother.height = this.height\n\t\tthis.height = temp\n\t}\n\n\t/**\n\t * Return a new texture created from `imgElement`, an `<img>` tag.\n\t */\n\tstatic fromImage(\n\t\timgElement: HTMLImageElement | HTMLCanvasElement,\n\t\toptions: TextureOptions = {},\n\t\tgl: TSGLContext = currentGL(),\n\t): Texture {\n\t\tconst texture = new Texture(imgElement.width, imgElement.height, options, gl)\n\t\ttry {\n\t\t\tgl.texImage2D(\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t0,\n\t\t\t\ttexture.format as any,\n\t\t\t\ttexture.format as any,\n\t\t\t\ttexture.type as any,\n\t\t\t\timgElement,\n\t\t\t)\n\t\t} catch (e) {\n\t\t\tif (location.protocol == 'file:') {\n\t\t\t\tthrow new Error('imgElement not loaded for security reasons (serve this page over \"http://\" instead)')\n\t\t\t} else {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'imgElement not loaded for security reasons (imgElement must originate from the same ' +\n\t\t\t\t\t\t'domain as this page or use Cross-Origin Resource Sharing)',\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t\tif (options.minFilter && options.minFilter != gl.NEAREST && options.minFilter != gl.LINEAR) {\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D)\n\t\t}\n\t\treturn texture\n\t}\n\n\t/**\n\t * Returns a checkerboard texture that will switch to the correct texture when it loads.\n\t */\n\tstatic fromURLSwitch(url: string, options?: TextureOptions, gl = currentGL()): Texture {\n\t\tTexture.checkerBoardCanvas =\n\t\t\tTexture.checkerBoardCanvas ||\n\t\t\t(function () {\n\t\t\t\tconst c = document.createElement('canvas').getContext('2d')\n\t\t\t\tif (!c) throw new Error('Could not create 2d canvas.')\n\t\t\t\tc.canvas.width = c.canvas.height = 128\n\t\t\t\tfor (let y = 0; y < c.canvas.height; y += 16) {\n\t\t\t\t\tfor (let x = 0; x < c.canvas.width; x += 16) {\n\t\t\t\t\t\t//noinspection JSBitwiseOperatorUsage\n\t\t\t\t\t\tc.fillStyle = (x ^ y) & 16 ? '#FFF' : '#DDD'\n\t\t\t\t\t\tc.fillRect(x, y, 16, 16)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn c.canvas\n\t\t\t})()\n\t\tconst texture = Texture.fromImage(Texture.checkerBoardCanvas, options)\n\t\tconst image = new Image()\n\t\timage.onload = () => Texture.fromImage(image, options, gl).swapWith(texture)\n\t\t// error event doesn't return a reason. Most likely a 404.\n\t\timage.onerror = () => {\n\t\t\tthrow new Error('Could not load image ' + image.src + '. 404?')\n\t\t}\n\t\timage.src = url\n\t\treturn texture\n\t}\n\n\tstatic fromURL(url: string, options?: TextureOptions, gl = currentGL()): Promise<Texture> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst image = new Image()\n\t\t\timage.onload = () => resolve(Texture.fromImage(image, options, gl))\n\t\t\timage.onerror = (ev) => reject('Could not load image ' + image.src + '. 404?' + ev)\n\t\t\timage.src = url\n\t\t})\n\t}\n}\n","\r\nattribute vec2 ts_TexCoord;\r\nattribute vec4 ts_Vertex;\r\nuniform mat4 ts_ModelViewProjectionMatrix;\r\nvarying vec2 coord;\r\nvoid main() {\r\n    coord = ts_TexCoord.xy;\r\n    gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n}","// A fragment shader for rendering signed distance fields. Main use case: text.\r\n\r\nprecision mediump float;\r\n\r\n// the atlas texture\r\nuniform sampler2D u_texture;\r\n\r\n// the color the text should be rendered\r\nuniform vec4 u_color;\r\n\r\n// the zero distance value in the texture\r\nuniform float u_buffer;\r\n\r\n// control the bluriness of the output 0.05 is a good value\r\nuniform float u_gamma;\r\n\r\n// set to > 1.0 to just output the texture \r\nuniform float u_debug;\r\n\r\nvarying vec2 coord;\r\n\r\nvoid main() {\r\n    float dist = texture2D(u_texture, coord).r;\r\n    if (u_debug > 0.0) {\r\n        gl_FragColor = vec4(dist, dist, dist, 1);\r\n    } else {\r\n        float alpha = smoothstep(u_buffer - u_gamma, u_buffer + u_gamma, dist);\r\n        gl_FragColor = vec4(u_color.rgb, alpha * u_color.a);\r\n        if (gl_FragColor.a == 0.0) {\r\n            discard;\r\n        }\r\n    }\r\n}","/*\n ** Copyright (c) 2012 The Khronos Group Inc.\n **\n ** Permission is hereby granted, free of charge, to any person obtaining a\n ** copy of this software and/or associated documentation files (the\n ** 'Materials'), to deal in the Materials without restriction, including\n ** without limitation the rights to use, copy, modify, merge, publish,\n ** distribute, sublicense, and/or sell copies of the Materials, and to\n ** permit persons to whom the Materials are furnished to do so, subject to\n ** the following conditions:\n **\n ** The above copyright notice and this permission notice shall be included\n ** in all copies or substantial portions of the Materials.\n **\n ** THE MATERIALS ARE PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n ** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n ** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n ** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n ** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n ** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n ** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\n */\n\n// tslint:disable\nimport GL = WebGLRenderingContextStrict\nconst GL = (WebGLRenderingContext as any) as new () => WebGLRenderingContextStrict\n\n// Various functions for helping debug WebGL apps.\n\n/**\n * Wrapped logging function.\n * @param msg Message to log.\n */\nfunction log(msg: string) {\n\tif (window.console && window.console.log) {\n\t\twindow.console.log(msg)\n\t}\n}\n\n/**\n * Wrapped error logging function.\n * @param msg Message to log.\n */\nfunction error(msg: string) {\n\tif (window.console && window.console.error) {\n\t\twindow.console.error(msg)\n\t} else {\n\t\tlog(msg)\n\t}\n}\n\n/**\n * Which arguments are enums based on the number of arguments to the function.\n * So\n *    'texImage2D': {\n *       9: { 0:true, 2:true, 6:true, 7:true },\n *       6: { 0:true, 2:true, 3:true, 4:true },\n *    },\n *\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\n * arguments 3 and 4 are enums\n *\n * @type {!Object.<number, !Object.<number, string>}\n */\nconst glValidEnumContexts: {\n\t[funcName: string]: { [argCount: number]: { [argIndex: number]: boolean | { enumBitwiseOr: string[] } } }\n} = {\n\t// Generic setters and getters\n\n\tenable: { 1: { 0: true } },\n\tdisable: { 1: { 0: true } },\n\tgetParameter: { 1: { 0: true } },\n\n\t// Rendering\n\n\tdrawArrays: { 3: { 0: true } },\n\tdrawElements: { 4: { 0: true, 2: true } },\n\n\t// Shaders\n\n\tcreateShader: { 1: { 0: true } },\n\tgetShaderParameter: { 2: { 1: true } },\n\tgetProgramParameter: { 2: { 1: true } },\n\tgetShaderPrecisionFormat: { 2: { 0: true, 1: true } },\n\n\t// Vertex attributes\n\n\tgetVertexAttrib: { 2: { 1: true } },\n\tvertexAttribPointer: { 6: { 2: true } },\n\n\t// Textures\n\n\tbindTexture: { 2: { 0: true } },\n\tactiveTexture: { 1: { 0: true } },\n\tgetTexParameter: { 2: { 0: true, 1: true } },\n\ttexParameterf: { 3: { 0: true, 1: true } },\n\ttexParameteri: { 3: { 0: true, 1: true, 2: true } },\n\t// texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\n\tcopyTexImage2D: { 8: { 0: true, 2: true } },\n\tcopyTexSubImage2D: { 8: { 0: true } },\n\tgenerateMipmap: { 1: { 0: true } },\n\t// compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\n\n\t// Buffer objects\n\n\tbindBuffer: { 2: { 0: true } },\n\t// bufferData and bufferSubData are defined below with WebGL 2 entrypoints\n\tgetBufferParameter: { 2: { 0: true, 1: true } },\n\n\t// Renderbuffers and framebuffers\n\n\tpixelStorei: { 2: { 0: true, 1: true } },\n\t// readPixels is defined below with WebGL 2 entrypoints\n\tbindRenderbuffer: { 2: { 0: true } },\n\tbindFramebuffer: { 2: { 0: true } },\n\tcheckFramebufferStatus: { 1: { 0: true } },\n\tframebufferRenderbuffer: { 4: { 0: true, 1: true, 2: true } },\n\tframebufferTexture2D: { 5: { 0: true, 1: true, 2: true } },\n\tgetFramebufferAttachmentParameter: { 3: { 0: true, 1: true, 2: true } },\n\tgetRenderbufferParameter: { 2: { 0: true, 1: true } },\n\trenderbufferStorage: { 4: { 0: true, 1: true } },\n\n\t// Frame buffer operations (clear, blend, depth test, stencil)\n\n\tclear: { 1: { 0: { enumBitwiseOr: ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] } } },\n\tdepthFunc: { 1: { 0: true } },\n\tblendFunc: { 2: { 0: true, 1: true } },\n\tblendFuncSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } },\n\tblendEquation: { 1: { 0: true } },\n\tblendEquationSeparate: { 2: { 0: true, 1: true } },\n\tstencilFunc: { 3: { 0: true } },\n\tstencilFuncSeparate: { 4: { 0: true, 1: true } },\n\tstencilMaskSeparate: { 2: { 0: true } },\n\tstencilOp: { 3: { 0: true, 1: true, 2: true } },\n\tstencilOpSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } },\n\n\t// Culling\n\n\tcullFace: { 1: { 0: true } },\n\tfrontFace: { 1: { 0: true } },\n\n\t// ANGLE_instanced_arrays extension\n\n\tdrawArraysInstancedANGLE: { 4: { 0: true } },\n\tdrawElementsInstancedANGLE: { 5: { 0: true, 2: true } },\n\n\t// EXT_blend_minmax extension\n\n\tblendEquationEXT: { 1: { 0: true } },\n\n\t// WebGL 2 Buffer objects\n\n\tbufferData: {\n\t\t3: { 0: true, 2: true }, // WebGL 1\n\t\t4: { 0: true, 2: true }, // WebGL 2\n\t\t5: { 0: true, 2: true }, // WebGL 2\n\t},\n\tbufferSubData: {\n\t\t3: { 0: true }, // WebGL 1\n\t\t4: { 0: true }, // WebGL 2\n\t\t5: { 0: true }, // WebGL 2\n\t},\n\tcopyBufferSubData: { 5: { 0: true, 1: true } },\n\tgetBufferSubData: { 3: { 0: true }, 4: { 0: true }, 5: { 0: true } },\n\n\t// WebGL 2 Framebuffer objects\n\n\tblitFramebuffer: {\n\t\t10: { 8: { enumBitwiseOr: ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9: true },\n\t},\n\tframebufferTextureLayer: { 5: { 0: true, 1: true } },\n\tinvalidateFramebuffer: { 2: { 0: true } },\n\tinvalidateSubFramebuffer: { 6: { 0: true } },\n\treadBuffer: { 1: { 0: true } },\n\n\t// WebGL 2 Renderbuffer objects\n\n\tgetInternalformatParameter: { 3: { 0: true, 1: true, 2: true } },\n\trenderbufferStorageMultisample: { 5: { 0: true, 2: true } },\n\n\t// WebGL 2 Texture objects\n\n\ttexStorage2D: { 5: { 0: true, 2: true } },\n\ttexStorage3D: { 6: { 0: true, 2: true } },\n\ttexImage2D: {\n\t\t9: { 0: true, 2: true, 6: true, 7: true }, // WebGL 1 & 2\n\t\t6: { 0: true, 2: true, 3: true, 4: true }, // WebGL 1\n\t\t10: { 0: true, 2: true, 6: true, 7: true }, // WebGL 2\n\t},\n\ttexImage3D: {\n\t\t10: { 0: true, 2: true, 7: true, 8: true },\n\t\t11: { 0: true, 2: true, 7: true, 8: true },\n\t},\n\ttexSubImage2D: {\n\t\t9: { 0: true, 6: true, 7: true }, // WebGL 1 & 2\n\t\t7: { 0: true, 4: true, 5: true }, // WebGL 1\n\t\t10: { 0: true, 6: true, 7: true }, // WebGL 2\n\t},\n\ttexSubImage3D: {\n\t\t11: { 0: true, 8: true, 9: true },\n\t\t12: { 0: true, 8: true, 9: true },\n\t},\n\tcopyTexSubImage3D: { 9: { 0: true } },\n\tcompressedTexImage2D: {\n\t\t7: { 0: true, 2: true }, // WebGL 1 & 2\n\t\t8: { 0: true, 2: true }, // WebGL 2\n\t\t9: { 0: true, 2: true }, // WebGL 2\n\t},\n\tcompressedTexImage3D: {\n\t\t8: { 0: true, 2: true },\n\t\t9: { 0: true, 2: true },\n\t\t10: { 0: true, 2: true },\n\t},\n\tcompressedTexSubImage2D: {\n\t\t8: { 0: true, 6: true }, // WebGL 1 & 2\n\t\t9: { 0: true, 6: true }, // WebGL 2\n\t\t10: { 0: true, 6: true }, // WebGL 2\n\t},\n\tcompressedTexSubImage3D: {\n\t\t10: { 0: true, 8: true },\n\t\t11: { 0: true, 8: true },\n\t\t12: { 0: true, 8: true },\n\t},\n\n\t// WebGL 2 Vertex attribs\n\n\tvertexAttribIPointer: { 5: { 2: true } },\n\n\t// WebGL 2 Writing to the drawing buffer\n\n\tdrawArraysInstanced: { 4: { 0: true } },\n\tdrawElementsInstanced: { 5: { 0: true, 2: true } },\n\tdrawRangeElements: { 6: { 0: true, 4: true } },\n\n\t// WebGL 2 Reading back pixels\n\n\treadPixels: {\n\t\t7: { 4: true, 5: true }, // WebGL 1 & 2\n\t\t8: { 4: true, 5: true }, // WebGL 2\n\t},\n\n\t// WebGL 2 Multiple Render Targets\n\n\tclearBufferfv: { 3: { 0: true }, 4: { 0: true } },\n\tclearBufferiv: { 3: { 0: true }, 4: { 0: true } },\n\tclearBufferuiv: { 3: { 0: true }, 4: { 0: true } },\n\tclearBufferfi: { 4: { 0: true } },\n\n\t// WebGL 2 Query objects\n\n\tbeginQuery: { 2: { 0: true } },\n\tendQuery: { 1: { 0: true } },\n\tgetQuery: { 2: { 0: true, 1: true } },\n\tgetQueryParameter: { 2: { 1: true } },\n\n\t// WebGL 2 Sampler objects\n\n\tsamplerParameteri: { 3: { 1: true, 2: true } },\n\tsamplerParameterf: { 3: { 1: true } },\n\tgetSamplerParameter: { 2: { 1: true } },\n\n\t// WebGL 2 Sync objects\n\n\tfenceSync: { 2: { 0: true, 1: { enumBitwiseOr: [] } } },\n\tclientWaitSync: { 3: { 1: { enumBitwiseOr: ['SYNC_FLUSH_COMMANDS_BIT'] } } },\n\twaitSync: { 3: { 1: { enumBitwiseOr: [] } } },\n\tgetSyncParameter: { 2: { 1: true } },\n\n\t// WebGL 2 Transform Feedback\n\n\tbindTransformFeedback: { 2: { 0: true } },\n\tbeginTransformFeedback: { 1: { 0: true } },\n\ttransformFeedbackVaryings: { 3: { 2: true } },\n\n\t// WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\n\n\tbindBufferBase: { 3: { 0: true } },\n\tbindBufferRange: { 5: { 0: true } },\n\tgetIndexedParameter: { 2: { 0: true } },\n\tgetActiveUniforms: { 3: { 2: true } },\n\tgetActiveUniformBlockParameter: { 3: { 2: true } },\n}\n\n/**\n * Map of numbers to names.\n * @type {Object}\n */\nlet glEnums: { [k: number]: string } = null as any\n\n/**\n * Map of names to numbers.\n * @type {Object}\n */\nlet enumStringToValue: { [k: string]: GL.GLenum<string> } = null as any\n\n/**\n * Initializes this module. Safe to call more than once.\n * @param ctx A WebGL context. If\n *    you have more than one context it doesn't matter which one\n *    you pass in, it is only used to pull out constants.\n */\nexport function init() {\n\tif (null === glEnums) {\n\t\tglEnums = {}\n\t\tenumStringToValue = {}\n\t\tconst c = (window as any).WebGL2RenderingContext || (window as any).WebGLRenderingContext\n\t\tif (!c) throw new Error('Neither WebGL2RenderingContext nor WebGLRenderingContext exists on window.')\n\t\tfor (const propertyName in c) {\n\t\t\tconst prop = c[propertyName]\n\t\t\tif ('number' === typeof prop) {\n\t\t\t\tglEnums[prop] = propertyName\n\t\t\t\tenumStringToValue[propertyName] = prop as any\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Returns true or false if value matches any WebGL enum\n * @param value Value to check if it might be an enum.\n * @return True if value matches one of the WebGL defined enums\n */\nexport function mightBeEnum(value: number): boolean {\n\tinit()\n\treturn glEnums[value] !== undefined\n}\n\n/**\n * Gets an string version of an WebGL enum.\n *\n * Example:\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError())\n *\n * @param value Value to return an enum for\n * @return The string version of the enum.\n */\nexport function glEnumToString(value: GL.GLenum<string>): string {\n\tinit()\n\tvar name = glEnums[value as any]\n\treturn name !== undefined ? 'gl.' + name : '/*UNKNOWN WebGL ENUM*/ 0x' + (value as any).toString(16) + ''\n}\n\n/**\n * Converts the argument of a WebGL function to a string.\n * Attempts to convert enum arguments to strings.\n *\n * Example:\n *   WebGLDebugUtil.init(ctx)\n *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D)\n *\n * would return 'TEXTURE_2D'\n *\n * @param functionName the name of the WebGL function.\n * @param numArgs the number of arguments passed to the function.\n * @param argumentIndex the index of the argument.\n * @param value The value of the argument.\n * @return The value as a string.\n */\nexport function glFunctionArgToString(\n\tfunctionName: string,\n\tnumArgs: number,\n\targumentIndex: number,\n\tvalue: any,\n): string {\n\tconst funcInfo = glValidEnumContexts[functionName]\n\tif (funcInfo !== undefined) {\n\t\tconst funcOverloadInfo = funcInfo[numArgs]\n\t\tif (funcOverloadInfo !== undefined) {\n\t\t\tconst argInfo = funcOverloadInfo[argumentIndex]\n\t\t\tif (argInfo) {\n\t\t\t\tif (typeof argInfo === 'object') {\n\t\t\t\t\tconst enums = argInfo.enumBitwiseOr\n\t\t\t\t\tconst orEnums = []\n\t\t\t\t\tlet orResult = 0\n\t\t\t\t\tfor (let i = 0; i < enums.length; ++i) {\n\t\t\t\t\t\tconst enumValue = enumStringToValue[enums[i]]\n\t\t\t\t\t\tif ((value & enumValue) !== 0) {\n\t\t\t\t\t\t\torResult |= enumValue\n\t\t\t\t\t\t\torEnums.push(glEnumToString(enumValue))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (orResult === value) {\n\t\t\t\t\t\treturn orEnums.join(' | ')\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn glEnumToString(value)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn glEnumToString(value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif (value === null) {\n\t\treturn 'null'\n\t} else if (value === undefined) {\n\t\treturn 'undefined'\n\t} else {\n\t\treturn value.toString()\n\t}\n}\n\n/**\n * Converts the arguments of a WebGL function to a string.\n * Attempts to convert enum arguments to strings.\n *\n * @param functionName the name of the WebGL function.\n * @param args The arguments.\n * @return The arguments as a string.\n */\nexport function glFunctionArgsToString(functionName: string, args: number[]): string {\n\t// apparently we can't do args.join(',')\n\tvar argStr = ''\n\tvar numArgs = args.length\n\tfor (var ii = 0; ii < numArgs; ++ii) {\n\t\targStr += (ii == 0 ? '' : ', ') + glFunctionArgToString(functionName, numArgs, ii, args[ii])\n\t}\n\treturn argStr\n}\n\nfunction makePropertyWrapper(wrapper: any, original: any, propertyName: string) {\n\t//log('wrap prop: ' + propertyName)\n\twrapper.__defineGetter__(propertyName, function () {\n\t\treturn original[propertyName]\n\t})\n\t// TODO(gmane): this needs to handle properties that take more than\n\t// one value?\n\twrapper.__defineSetter__(propertyName, function (value: any) {\n\t\t//log('set: ' + propertyName)\n\t\toriginal[propertyName] = value\n\t})\n}\n\n/**\n * Given a WebGL context returns a wrapped context that calls\n * gl.getError after every command and calls a function if the\n * result is not NO_ERROR.\n *\n * You can supply your own function if you want. For example, if you'd like\n * an exception thrown on any GL error you could do this\n *\n *    function throwOnGLError(err, funcName, args) {\n *      throw new Error(WebGLDebugUtils.glEnumToString(err) +\n *            ' was caused by call to ' + funcName)\n *    }\n *\n *    ctx = WebGLDebugUtils.makeDebugContext(\n *        canvas.getContext('webgl'), throwOnGLError)\n *\n * @param ctx The webgl context to wrap.\n * @param opt_onErrorFunc The function\n *     to call when gl.getError returns an error. If not specified the default\n *     function calls console.log with a message.\n * @param opt_onFunc The\n *     function to call when each webgl function is called. You\n *     can use this to log all calls for example.\n * @param opt_err_ctx The webgl context\n *        to call getError on if different than ctx.\n */\nexport function makeDebugContext(\n\tctx: WebGLRenderingContextStrict,\n\topt_onErrorFunc?: (err: GL.Error, funcName: string, args: any[]) => void,\n\topt_onFunc?: (funcName: string, args: any[]) => void,\n\topt_err_ctx: WebGLRenderingContextStrict = ctx,\n): WebGLRenderingContext {\n\tinit()\n\topt_onErrorFunc =\n\t\topt_onErrorFunc ||\n\t\tfunction (err, functionName, args) {\n\t\t\t// apparently we can't do args.join(',')\n\t\t\tvar argStr = ''\n\t\t\tvar numArgs = args.length\n\t\t\tfor (let i = 0; i < numArgs; ++i) {\n\t\t\t\targStr += (i == 0 ? '' : ', ') + glFunctionArgToString(functionName, numArgs, i, args[i])\n\t\t\t}\n\t\t\terror('WebGL error ' + glEnumToString(err) + ' in ' + functionName + '(' + argStr + ')')\n\t\t}\n\n\t// Holds booleans for each GL error so after we get the error ourselves\n\t// we can still return it to the client app.\n\tconst glErrorShadow: { [k: number]: boolean } = {}\n\n\t// Makes a function that calls a WebGL function and then calls getError.\n\tfunction makeErrorWrapper(ctx: WebGLRenderingContextStrict, functionName: string) {\n\t\treturn function (...args: any[]) {\n\t\t\tif (opt_onFunc) {\n\t\t\t\topt_onFunc(functionName, args)\n\t\t\t}\n\t\t\tconst result = (ctx as any)[functionName].apply(ctx, args)\n\t\t\tconst err = opt_err_ctx.getError()\n\t\t\tif (err != 0) {\n\t\t\t\tglErrorShadow[err] = true\n\t\t\t\topt_onErrorFunc!(err, functionName, args)\n\t\t\t}\n\t\t\treturn result\n\t\t}\n\t}\n\n\t// Make a an object that has a copy of every property of the WebGL context\n\t// but wraps all functions.\n\tconst wrapper: any = {}\n\tfor (let propertyName in ctx) {\n\t\tconst prop = ctx[propertyName as keyof WebGLRenderingContextStrict]\n\t\tif ('function' === typeof prop) {\n\t\t\tif (propertyName != 'getExtension') {\n\t\t\t\twrapper[propertyName] = makeErrorWrapper(ctx, propertyName)\n\t\t\t} else {\n\t\t\t\tlet wrapped = makeErrorWrapper(ctx, propertyName)\n\t\t\t\twrapper[propertyName as any] = function () {\n\t\t\t\t\tconst result = wrapped.apply(ctx, arguments)\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\t\t\t\t\treturn makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx)\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tmakePropertyWrapper(wrapper, ctx, propertyName)\n\t\t}\n\t}\n\n\t// Override the getError function with one that returns our saved results.\n\twrapper.getError = function () {\n\t\tfor (const err in glErrorShadow) {\n\t\t\tif (glErrorShadow.hasOwnProperty(err)) {\n\t\t\t\tif (glErrorShadow[err]) {\n\t\t\t\t\tglErrorShadow[err] = false\n\t\t\t\t\treturn parseInt(err)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ctx.NO_ERROR\n\t}\n\n\treturn wrapper\n}\nexport function isWebGL2RenderingContext(o: any): o is WebGL2RenderingContext {\n\treturn !!o.createTransformFeedback\n}\n/**\n * Resets a context to the initial state.\n * @param ctx The webgl context to\n *     reset.\n */\nexport function resetToInitialState(ctx2: WebGL2RenderingContextStrict | WebGLRenderingContextStrict) {\n\tif (isWebGL2RenderingContext(ctx2)) {\n\t\tctx2.bindVertexArray(null)\n\t}\n\n\tconst numAttribs = ctx2.getParameter(ctx2.MAX_VERTEX_ATTRIBS)\n\tconst tmp = ctx2.createBuffer()\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, tmp)\n\tfor (let ii = 0; ii < numAttribs; ++ii) {\n\t\tctx2.disableVertexAttribArray(ii)\n\t\tctx2.vertexAttribPointer(ii, 4, ctx2.FLOAT, false, 0, 0)\n\t\tctx2.vertexAttrib1f(ii, 0)\n\t\tif (isWebGL2RenderingContext(ctx2)) {\n\t\t\tctx2.vertexAttribDivisor(ii, 0)\n\t\t}\n\t}\n\tctx2.deleteBuffer(tmp)\n\n\tconst numTextureUnits = ctx2.getParameter(ctx2.MAX_TEXTURE_IMAGE_UNITS)\n\tfor (let ii = 0; ii < numTextureUnits; ++ii) {\n\t\tctx2.activeTexture((ctx2.TEXTURE0 + ii) as GL.TextureUnit)\n\t\tctx2.bindTexture(ctx2.TEXTURE_CUBE_MAP, null)\n\t\tctx2.bindTexture(ctx2.TEXTURE_2D, null)\n\t\tif (isWebGL2RenderingContext(ctx2)) {\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_2D_ARRAY, null)\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_3D, null)\n\t\t\tctx2.bindSampler(ii, null)\n\t\t}\n\t}\n\n\tctx2.activeTexture(ctx2.TEXTURE0)\n\tctx2.useProgram(null)\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, null)\n\tctx2.bindBuffer(ctx2.ELEMENT_ARRAY_BUFFER, null)\n\tctx2.bindFramebuffer(ctx2.FRAMEBUFFER, null)\n\tctx2.bindRenderbuffer(ctx2.RENDERBUFFER, null)\n\tctx2.disable(ctx2.BLEND)\n\tctx2.disable(ctx2.CULL_FACE)\n\tctx2.disable(ctx2.DEPTH_TEST)\n\tctx2.disable(ctx2.DITHER)\n\tctx2.disable(ctx2.SCISSOR_TEST)\n\tctx2.blendColor(0, 0, 0, 0)\n\tctx2.blendEquation(ctx2.FUNC_ADD)\n\tctx2.blendFunc(ctx2.ONE, ctx2.ZERO)\n\tctx2.clearColor(0, 0, 0, 0)\n\tctx2.clearDepth(1)\n\tctx2.clearStencil(-1)\n\tctx2.colorMask(true, true, true, true)\n\tctx2.cullFace(ctx2.BACK)\n\tctx2.depthFunc(ctx2.LESS)\n\tctx2.depthMask(true)\n\tctx2.depthRange(0, 1)\n\tctx2.frontFace(ctx2.CCW)\n\tctx2.hint(ctx2.GENERATE_MIPMAP_HINT, ctx2.DONT_CARE)\n\tctx2.lineWidth(1)\n\tctx2.pixelStorei(ctx2.PACK_ALIGNMENT, 4)\n\tctx2.pixelStorei(ctx2.UNPACK_ALIGNMENT, 4)\n\tctx2.pixelStorei(ctx2.UNPACK_FLIP_Y_WEBGL, false)\n\tctx2.pixelStorei(ctx2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false)\n\tctx2.pixelStorei(ctx2.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx2.BROWSER_DEFAULT_WEBGL)\n\tctx2.polygonOffset(0, 0)\n\tctx2.sampleCoverage(1, false)\n\tctx2.scissor(0, 0, ctx2.canvas.width, ctx2.canvas.height)\n\tctx2.stencilFunc(ctx2.ALWAYS, 0, 0xffffffff)\n\tctx2.stencilMask(0xffffffff)\n\tctx2.stencilOp(ctx2.KEEP, ctx2.KEEP, ctx2.KEEP)\n\tctx2.viewport(0, 0, ctx2.canvas.width, ctx2.canvas.height)\n\tctx2.clear(ctx2.COLOR_BUFFER_BIT | ctx2.DEPTH_BUFFER_BIT | ctx2.STENCIL_BUFFER_BIT)\n\n\tif (isWebGL2RenderingContext(ctx2)) {\n\t\tctx2.drawBuffers([ctx2.BACK])\n\t\tctx2.readBuffer(ctx2.BACK)\n\t\tctx2.bindBuffer(ctx2.COPY_READ_BUFFER, null)\n\t\tctx2.bindBuffer(ctx2.COPY_WRITE_BUFFER, null)\n\t\tctx2.bindBuffer(ctx2.PIXEL_PACK_BUFFER, null)\n\t\tctx2.bindBuffer(ctx2.PIXEL_UNPACK_BUFFER, null)\n\t\tconst numTransformFeedbacks = ctx2.getParameter(ctx2.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)\n\t\tfor (let ii = 0; ii < numTransformFeedbacks; ++ii) {\n\t\t\tctx2.bindBufferBase(ctx2.TRANSFORM_FEEDBACK_BUFFER, ii, null)\n\t\t}\n\t\tconst numUBOs = ctx2.getParameter(ctx2.MAX_UNIFORM_BUFFER_BINDINGS)\n\t\tfor (let ii = 0; ii < numUBOs; ++ii) {\n\t\t\tctx2.bindBufferBase(ctx2.UNIFORM_BUFFER, ii, null)\n\t\t}\n\t\tctx2.disable(ctx2.RASTERIZER_DISCARD)\n\t\tctx2.pixelStorei(ctx2.UNPACK_IMAGE_HEIGHT, 0)\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_IMAGES, 0)\n\t\tctx2.pixelStorei(ctx2.UNPACK_ROW_LENGTH, 0)\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_ROWS, 0)\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_PIXELS, 0)\n\t\tctx2.pixelStorei(ctx2.PACK_ROW_LENGTH, 0)\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_ROWS, 0)\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_PIXELS, 0)\n\t\tctx2.hint(ctx2.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx2.DONT_CARE)\n\t}\n\n\t// TODO: This should NOT be needed but Firefox fails with 'hint'\n\twhile (ctx2.getError()) {}\n}\n\n/**\n * Given a canvas element returns a wrapped canvas element that will\n * simulate lost context. The canvas returned adds the following functions.\n *\n * loseContext:\n *   simulates a lost context event.\n *\n * restoreContext:\n *   simulates the context being restored.\n *\n * lostContextInNCalls:\n *   loses the context after N gl calls.\n *\n * getNumCalls:\n *   tells you how many gl calls there have been so far.\n *\n * setRestoreTimeout:\n *   sets the number of milliseconds until the context is restored\n *   after it has been lost. Defaults to 0. Pass -1 to prevent\n *   automatic restoring.\n *\n * @param canvas The canvas element to wrap.\n */\nexport function makeLostContextSimulatingCanvas(canvas: HTMLCanvasElement) {\n\tconst canvas2 = canvas as any\n\tlet unwrappedContext_: WebGLRenderingContextStrict | WebGL2RenderingContextStrict\n\tconst onLost_: WebGLContextEventListener[] = []\n\tconst onRestored_: WebGLContextEventListener[] = []\n\tlet wrappedContext_: any = {}\n\tlet contextId_ = 1\n\tlet contextLost_ = false\n\t// const resourceId_ = 0\n\tconst resourceDb_: WebGLObject[] = []\n\tlet numCallsToLoseContext_ = 0\n\tlet numCalls_ = 0\n\tlet canRestore_ = false\n\tlet restoreTimeout_ = 0\n\n\t// Holds booleans for each GL error so can simulate errors.\n\tconst glErrorShadow_: { [e: number]: boolean } = {}\n\n\tcanvas2.getContext = (function (f) {\n\t\treturn function () {\n\t\t\tconst ctx = f.apply(canvas2, arguments) as WebGLRenderingContextStrict\n\t\t\t// Did we get a context and is it a WebGL context?\n\t\t\t// @ts-ignore\n\t\t\tif (\n\t\t\t\tctx instanceof GL ||\n\t\t\t\t((window as any).WebGL2RenderingContext && ctx instanceof WebGL2RenderingContext)\n\t\t\t) {\n\t\t\t\tif (ctx != unwrappedContext_) {\n\t\t\t\t\tif (unwrappedContext_) {\n\t\t\t\t\t\tthrow new Error('got different context')\n\t\t\t\t\t}\n\t\t\t\t\tunwrappedContext_ = ctx\n\t\t\t\t\twrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_)\n\t\t\t\t}\n\t\t\t\treturn wrappedContext_\n\t\t\t}\n\t\t\treturn ctx\n\t\t}\n\t})(canvas2.getContext)\n\n\tfunction wrapEvent(listener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener }) {\n\t\tif (typeof listener == 'function') {\n\t\t\treturn listener\n\t\t} else {\n\t\t\treturn function (e: CustomWebGLContextEvent) {\n\t\t\t\tlistener.handleEvent(e)\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addOnContextLostListener(\n\t\tlistener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener },\n\t) {\n\t\tonLost_.push(wrapEvent(listener))\n\t}\n\n\tfunction addOnContextRestoredListener(\n\t\tlistener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener },\n\t) {\n\t\tonRestored_.push(wrapEvent(listener))\n\t}\n\n\tfunction wrapAddEventListener(canvas: HTMLCanvasElement) {\n\t\tconst f = canvas.addEventListener\n\t\tcanvas.addEventListener = function (type: string, listener: any) {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'webglcontextlost':\n\t\t\t\t\taddOnContextLostListener(listener)\n\t\t\t\t\tbreak\n\t\t\t\tcase 'webglcontextrestored':\n\t\t\t\t\taddOnContextRestoredListener(listener)\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tf.apply(canvas, arguments)\n\t\t\t}\n\t\t}\n\t}\n\n\twrapAddEventListener(canvas2)\n\n\tcanvas2.loseContext = function () {\n\t\tif (!contextLost_) {\n\t\t\tcontextLost_ = true\n\t\t\tnumCallsToLoseContext_ = 0\n\t\t\t++contextId_\n\t\t\twhile (unwrappedContext_.getError()) clearErrors()\n\t\t\tglErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true\n\t\t\tconst event = makeWebGLContextEvent('context lost')\n\t\t\tconst callbacks = onLost_.slice()\n\t\t\tsetTimeout(function () {\n\t\t\t\t//log('numCallbacks:' + callbacks.length)\n\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\n\t\t\t\t\t//log('calling callback:' + ii)\n\t\t\t\t\tcallbacks[ii](event)\n\t\t\t\t}\n\t\t\t\tif (restoreTimeout_ >= 0) {\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tcanvas2.restoreContext()\n\t\t\t\t\t}, restoreTimeout_)\n\t\t\t\t}\n\t\t\t}, 0)\n\t\t}\n\t}\n\n\tcanvas2.restoreContext = function () {\n\t\tif (contextLost_) {\n\t\t\tif (onRestored_.length) {\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (!canRestore_) {\n\t\t\t\t\t\tthrow new Error('can not restore. webglcontestlost listener did not call event.preventDefault')\n\t\t\t\t\t}\n\t\t\t\t\tfreeResources()\n\t\t\t\t\tresetToInitialState(unwrappedContext_)\n\t\t\t\t\tcontextLost_ = false\n\t\t\t\t\tnumCalls_ = 0\n\t\t\t\t\tcanRestore_ = false\n\t\t\t\t\tconst callbacks = onRestored_.slice()\n\t\t\t\t\tconst event = makeWebGLContextEvent('context restored')\n\t\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\n\t\t\t\t\t\tcallbacks[ii](event)\n\t\t\t\t\t}\n\t\t\t\t}, 0)\n\t\t\t}\n\t\t}\n\t}\n\n\tcanvas2.loseContextInNCalls = function (numCalls: number) {\n\t\tif (contextLost_) {\n\t\t\tthrow new Error('You can not ask a lost context to be lost')\n\t\t}\n\t\tnumCallsToLoseContext_ = numCalls_ + numCalls\n\t}\n\n\tcanvas2.getNumCalls = function () {\n\t\treturn numCalls_\n\t}\n\n\tcanvas2.setRestoreTimeout = function (timeout: number) {\n\t\trestoreTimeout_ = timeout\n\t}\n\n\t// function isWebGLObject(obj: any): obj is WebGLObject {\n\t// \t//return false\n\t// \treturn (\n\t// \t\tobj instanceof WebGLBuffer ||\n\t// \t\tobj instanceof WebGLFramebuffer ||\n\t// \t\tobj instanceof WebGLProgram ||\n\t// \t\tobj instanceof WebGLRenderbuffer ||\n\t// \t\tobj instanceof WebGLShader ||\n\t// \t\tobj instanceof WebGLTexture\n\t// \t)\n\t// }\n\n\t// function checkResources(args: any[]) {\n\t// \tfor (let i = 0; i < args.length; ++i) {\n\t// \t\tconst arg = args[i]\n\t// \t\tif (isWebGLObject(arg)) {\n\t// \t\t\treturn (arg as any).__webglDebugContextLostId__ == contextId_\n\t// \t\t}\n\t// \t}\n\t// \treturn true\n\t// }\n\n\tfunction clearErrors() {\n\t\tconst k = (Object.keys(glErrorShadow_) as any) as number[]\n\t\tfor (let i = 0; i < k.length; ++i) {\n\t\t\tdelete glErrorShadow_[k[i]]\n\t\t}\n\t}\n\n\tfunction loseContextIfTime() {\n\t\t++numCalls_\n\t\tif (!contextLost_) {\n\t\t\tif (numCallsToLoseContext_ == numCalls_) {\n\t\t\t\tcanvas2.loseContext()\n\t\t\t}\n\t\t}\n\t}\n\n\t// Makes a function that simulates WebGL when out of context.\n\tfunction makeLostContextFunctionWrapper(ctx: WebGLRenderingContextStrict, functionName: string) {\n\t\tconst f = (ctx as any)[functionName]\n\t\treturn function () {\n\t\t\t// log('calling:' + functionName)\n\t\t\t// Only call the functions if the context is not lost.\n\t\t\tloseContextIfTime()\n\t\t\tif (!contextLost_) {\n\t\t\t\t//if (!checkResources(arguments)) {\n\t\t\t\t//  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true\n\t\t\t\t//  return\n\t\t\t\t//}\n\t\t\t\tconst result = f.apply(ctx, arguments)\n\t\t\t\treturn result\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction freeResources() {\n\t\tfor (let ii = 0; ii < resourceDb_.length; ++ii) {\n\t\t\tconst resource = resourceDb_[ii]\n\t\t\tif (resource instanceof WebGLBuffer) {\n\t\t\t\tunwrappedContext_.deleteBuffer(resource)\n\t\t\t} else if (resource instanceof WebGLFramebuffer) {\n\t\t\t\tunwrappedContext_.deleteFramebuffer(resource)\n\t\t\t} else if (resource instanceof WebGLProgram) {\n\t\t\t\tunwrappedContext_.deleteProgram(resource)\n\t\t\t} else if (resource instanceof WebGLRenderbuffer) {\n\t\t\t\tunwrappedContext_.deleteRenderbuffer(resource)\n\t\t\t} else if (resource instanceof WebGLShader) {\n\t\t\t\tunwrappedContext_.deleteShader(resource)\n\t\t\t} else if (resource instanceof WebGLTexture) {\n\t\t\t\tunwrappedContext_.deleteTexture(resource)\n\t\t\t} else if (isWebGL2RenderingContext(unwrappedContext_)) {\n\t\t\t\tif (resource instanceof WebGLQuery) {\n\t\t\t\t\tunwrappedContext_.deleteQuery(resource)\n\t\t\t\t} else if (resource instanceof WebGLSampler) {\n\t\t\t\t\tunwrappedContext_.deleteSampler(resource)\n\t\t\t\t} else if (resource instanceof WebGLSync) {\n\t\t\t\t\tunwrappedContext_.deleteSync(resource)\n\t\t\t\t} else if (resource instanceof WebGLTransformFeedback) {\n\t\t\t\t\tunwrappedContext_.deleteTransformFeedback(resource)\n\t\t\t\t} else if (resource instanceof WebGLVertexArrayObject) {\n\t\t\t\t\tunwrappedContext_.deleteVertexArray(resource)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tinterface CustomWebGLContextEvent {\n\t\tstatusMessage: string\n\t\tpreventDefault: () => void\n\t}\n\ttype WebGLContextEventListener = (e: CustomWebGLContextEvent) => void\n\tfunction makeWebGLContextEvent(statusMessage: string): CustomWebGLContextEvent {\n\t\treturn {\n\t\t\tstatusMessage: statusMessage,\n\t\t\tpreventDefault: function () {\n\t\t\t\tcanRestore_ = true\n\t\t\t},\n\t\t}\n\t}\n\n\treturn canvas2\n\n\tfunction makeLostContextSimulatingContext(ctx: WebGLRenderingContextStrict) {\n\t\t// copy all functions and properties to wrapper\n\t\tfor (const propertyName in ctx) {\n\t\t\tif (typeof (ctx as any)[propertyName] == 'function') {\n\t\t\t\twrappedContext_[propertyName] = makeLostContextFunctionWrapper(ctx, propertyName)\n\t\t\t} else {\n\t\t\t\tmakePropertyWrapper(wrappedContext_, ctx, propertyName)\n\t\t\t}\n\t\t}\n\n\t\t// Wrap a few functions specially.\n\t\twrappedContext_.getError = function () {\n\t\t\tloseContextIfTime()\n\t\t\tif (!contextLost_) {\n\t\t\t\tlet err\n\t\t\t\twhile ((err = unwrappedContext_.getError())) {\n\t\t\t\t\tglErrorShadow_[err] = true\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const err in glErrorShadow_) {\n\t\t\t\tif (glErrorShadow_[err]) {\n\t\t\t\t\tdelete glErrorShadow_[err]\n\t\t\t\t\treturn err\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn wrappedContext_.NO_ERROR\n\t\t}\n\n\t\tconst creationFunctions = [\n\t\t\t'createBuffer',\n\t\t\t'createFramebuffer',\n\t\t\t'createProgram',\n\t\t\t'createRenderbuffer',\n\t\t\t'createShader',\n\t\t\t'createTexture',\n\t\t]\n\t\tif (isWebGL2RenderingContext(ctx)) {\n\t\t\tcreationFunctions.push(\n\t\t\t\t'createQuery',\n\t\t\t\t'createSampler',\n\t\t\t\t'fenceSync',\n\t\t\t\t'createTransformFeedback',\n\t\t\t\t'createVertexArray',\n\t\t\t)\n\t\t}\n\t\tfor (let i = 0; i < creationFunctions.length; ++i) {\n\t\t\tconst functionName = creationFunctions[i]\n\t\t\twrappedContext_[functionName] = (function (f) {\n\t\t\t\treturn function () {\n\t\t\t\t\tloseContextIfTime()\n\t\t\t\t\tif (contextLost_) {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\t\t\t\t\tconst obj = f.apply(ctx, arguments)\n\t\t\t\t\tobj.__webglDebugContextLostId__ = contextId_\n\t\t\t\t\tresourceDb_.push(obj)\n\t\t\t\t\treturn obj\n\t\t\t\t}\n\t\t\t})((ctx as any)[functionName])\n\t\t}\n\n\t\tconst functionsThatShouldReturnNull = [\n\t\t\t'getActiveAttrib',\n\t\t\t'getActiveUniform',\n\t\t\t'getBufferParameter',\n\t\t\t'getContextAttributes',\n\t\t\t'getAttachedShaders',\n\t\t\t'getFramebufferAttachmentParameter',\n\t\t\t'getParameter',\n\t\t\t'getProgramParameter',\n\t\t\t'getProgramInfoLog',\n\t\t\t'getRenderbufferParameter',\n\t\t\t'getShaderParameter',\n\t\t\t'getShaderInfoLog',\n\t\t\t'getShaderSource',\n\t\t\t'getTexParameter',\n\t\t\t'getUniform',\n\t\t\t'getUniformLocation',\n\t\t\t'getVertexAttrib',\n\t\t]\n\t\tif (isWebGL2RenderingContext(ctx)) {\n\t\t\tfunctionsThatShouldReturnNull.push(\n\t\t\t\t'getInternalformatParameter',\n\t\t\t\t'getQuery',\n\t\t\t\t'getQueryParameter',\n\t\t\t\t'getSamplerParameter',\n\t\t\t\t'getSyncParameter',\n\t\t\t\t'getTransformFeedbackVarying',\n\t\t\t\t'getIndexedParameter',\n\t\t\t\t'getUniformIndices',\n\t\t\t\t'getActiveUniforms',\n\t\t\t\t'getActiveUniformBlockParameter',\n\t\t\t\t'getActiveUniformBlockName',\n\t\t\t)\n\t\t}\n\t\tfor (let ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\n\t\t\tconst functionName = functionsThatShouldReturnNull[ii]\n\t\t\twrappedContext_[functionName] = (function (f) {\n\t\t\t\treturn function () {\n\t\t\t\t\tloseContextIfTime()\n\t\t\t\t\tif (contextLost_) {\n\t\t\t\t\t\treturn null\n\t\t\t\t\t}\n\t\t\t\t\treturn f.apply(ctx, arguments)\n\t\t\t\t}\n\t\t\t})(wrappedContext_[functionName])\n\t\t}\n\n\t\tconst isFunctions = [\n\t\t\t'isBuffer',\n\t\t\t'isEnabled',\n\t\t\t'isFramebuffer',\n\t\t\t'isProgram',\n\t\t\t'isRenderbuffer',\n\t\t\t'isShader',\n\t\t\t'isTexture',\n\t\t]\n\t\tif (isWebGL2RenderingContext(ctx)) {\n\t\t\tisFunctions.push('isQuery', 'isSampler', 'isSync', 'isTransformFeedback', 'isVertexArray')\n\t\t}\n\t\tfor (let ii = 0; ii < isFunctions.length; ++ii) {\n\t\t\tconst functionName = isFunctions[ii]\n\t\t\twrappedContext_[functionName] = (function (f) {\n\t\t\t\treturn function () {\n\t\t\t\t\tloseContextIfTime()\n\t\t\t\t\tif (contextLost_) {\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\treturn f.apply(ctx, arguments)\n\t\t\t\t}\n\t\t\t})(wrappedContext_[functionName])\n\t\t}\n\n\t\twrappedContext_.checkFramebufferStatus = (function (f) {\n\t\t\treturn function () {\n\t\t\t\tloseContextIfTime()\n\t\t\t\tif (contextLost_) {\n\t\t\t\t\treturn wrappedContext_.FRAMEBUFFER_UNSUPPORTED\n\t\t\t\t}\n\t\t\t\treturn f.apply(ctx, arguments)\n\t\t\t}\n\t\t})(wrappedContext_.checkFramebufferStatus)\n\n\t\twrappedContext_.getAttribLocation = (function (f) {\n\t\t\treturn function () {\n\t\t\t\tloseContextIfTime()\n\t\t\t\tif (contextLost_) {\n\t\t\t\t\treturn -1\n\t\t\t\t}\n\t\t\t\treturn f.apply(ctx, arguments)\n\t\t\t}\n\t\t})(wrappedContext_.getAttribLocation)\n\n\t\twrappedContext_.getVertexAttribOffset = (function (f) {\n\t\t\treturn function () {\n\t\t\t\tloseContextIfTime()\n\t\t\t\tif (contextLost_) {\n\t\t\t\t\treturn 0\n\t\t\t\t}\n\t\t\t\treturn f.apply(ctx, arguments)\n\t\t\t}\n\t\t})(wrappedContext_.getVertexAttribOffset)\n\n\t\twrappedContext_.isContextLost = function () {\n\t\t\treturn contextLost_\n\t\t}\n\n\t\tif (isWebGL2RenderingContext(ctx)) {\n\t\t\twrappedContext_.getFragDataLocation = (function (f) {\n\t\t\t\treturn function () {\n\t\t\t\t\tloseContextIfTime()\n\t\t\t\t\tif (contextLost_) {\n\t\t\t\t\t\treturn -1\n\t\t\t\t\t}\n\t\t\t\t\treturn f.apply(ctx, arguments)\n\t\t\t\t}\n\t\t\t})(wrappedContext_.getFragDataLocation)\n\n\t\t\twrappedContext_.clientWaitSync = (function (f) {\n\t\t\t\treturn function () {\n\t\t\t\t\tloseContextIfTime()\n\t\t\t\t\tif (contextLost_) {\n\t\t\t\t\t\treturn wrappedContext_.WAIT_FAILED\n\t\t\t\t\t}\n\t\t\t\t\treturn f.apply(ctx, arguments)\n\t\t\t\t}\n\t\t\t})(wrappedContext_.clientWaitSync)\n\n\t\t\twrappedContext_.getUniformBlockIndex = (function (f) {\n\t\t\t\treturn function () {\n\t\t\t\t\tloseContextIfTime()\n\t\t\t\t\tif (contextLost_) {\n\t\t\t\t\t\treturn wrappedContext_.INVALID_INDEX\n\t\t\t\t\t}\n\t\t\t\t\treturn f.apply(ctx, arguments)\n\t\t\t\t}\n\t\t\t})(wrappedContext_.getUniformBlockIndex)\n\t\t}\n\n\t\treturn wrappedContext_\n\t}\n}\n","/// <reference types=\"webgl-strict-types\" />\nimport * as chroma from 'chroma.ts'\nimport { addOwnProperties, assert, DEG, int, M4, P3ZX, V, V3 } from 'ts3dutils'\n\nimport posCoordVS from '../src/shaders/posCoordVS.glslx'\nimport sdfRenderFS from '../src/shaders/sdfRenderFS.glslx'\nimport { makeDebugContext, Mesh, Shader, Texture } from './index'\nimport { glEnumToString } from './KhronosGroupWebGLDebug'\n\nimport GL = WebGLRenderingContextStrict\nexport type GL_COLOR = [number, number, number, number]\n/**\n * There's only one constant, use it for default values. Use chroma-js or similar for actual colors.\n */\nexport const GL_COLOR_BLACK: GL_COLOR = [0, 0, 0, 1]\n\nexport function currentGL(): TSGLContext {\n\treturn TSGLContextBase.gl\n}\n\nexport function isNumber(obj: any) {\n\tconst str = Object.prototype.toString.call(obj)\n\treturn str == '[object Number]' || str == '[object Boolean]'\n}\n\nexport type UniformType = V3 | M4 | number[] | boolean | number\nexport type TSGLContext = TSGLContextBase & (WebGLRenderingContextStrict | WebGL2RenderingContextStrict)\nexport interface TSGLContextBase extends WebGLRenderingContextStrict {}\nexport class TSGLContextBase {\n\tmodelViewMatrix: M4 = M4.identity()\n\tprojectionMatrix: M4 = M4.identity()\n\tstatic readonly MODELVIEW: { __MATRIX_MODE_CONSTANT: any } = 0 as any\n\tstatic readonly PROJECTION: { __MATRIX_MODE_CONSTANT: any } = 1 as any\n\tMODELVIEW: typeof TSGLContextBase.MODELVIEW\n\tPROJECTION: typeof TSGLContextBase.PROJECTION\n\n\treadonly version: 1 | 2\n\n\tstatic HALF_FLOAT_OES: int = 0x8d61\n\tHALF_FLOAT_OES: int\n\n\tprivate tempMatrix = new M4()\n\tprivate resultMatrix = new M4()\n\tprivate modelViewStack: M4[] = []\n\tprivate projectionStack: M4[] = []\n\tprivate currentMatrixName: 'modelViewMatrix' | 'projectionMatrix'\n\tprivate stack: M4[]\n\n\tmeshes: { [name: string]: Mesh }\n\tshaders: { [name: string]: Shader }\n\tpublic drawCallCount: int = 0\n\tpublic projectionMatrixVersion: int = 0\n\tpublic modelViewMatrixVersion: int = 0\n\ttextCtx!: CanvasRenderingContext2D\n\tTEXT_TEXTURE_HEIGHT: string\n\tTEXT_TEXTURE_FONT: string\n\ttextMetrics: FontJsonMetrics\n\ttextAtlas: Texture\n\ttextRenderShader: Shader<any, any>\n\n\tprotected constructor(\n\t\tgl: TSGLContextBase,\n\t\tprivate immediate = {\n\t\t\tmesh: new Mesh().addVertexBuffer('coords', 'ts_TexCoord').addVertexBuffer('colors', 'ts_Color'),\n\t\t\tmode: -1 as GL.DrawMode | -1,\n\t\t\tcoord: [0, 0] as [number, number],\n\t\t\tcolor: [1, 1, 1, 1] as GL_COLOR,\n\t\t\tpointSize: 1,\n\t\t\tshader: Shader.create(\n\t\t\t\t`\n\t\t\tattribute vec4 ts_Color;\n\t\t\tattribute vec4 ts_Vertex;\n\t\t\tuniform mat4 ts_ModelViewProjectionMatrix;\n\t\t\tattribute vec2 ts_TexCoord;\n            uniform float pointSize;\n            varying vec4 color;\n            varying vec2 coord;\n            void main() {\n                color = ts_Color;\n                coord = ts_TexCoord;\n                gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n                gl_PointSize = pointSize;\n            }\n\t\t`,\n\t\t\t\t`\n\t\t\tprecision highp float;\n            uniform sampler2D texture;\n            uniform float pointSize;\n            // uniform bool useTexture;\n            varying vec4 color;\n            varying vec2 coord;\n            void main() {\n                gl_FragColor = color;\n                // if (useTexture) gl_FragColor *= texture2D(texture, coord.xy);\n            }\n        `,\n\t\t\t\tgl,\n\t\t\t),\n\t\t},\n\t) {\n\t\tthis.matrixMode(TSGLContextBase.MODELVIEW)\n\t}\n\n\t/// Implement the OpenGL modelview and projection matrix stacks, along with some other useful GLU matrix functions.\n\tmatrixMode(mode: { __MATRIX_MODE_CONSTANT: any }): void {\n\t\tswitch (mode) {\n\t\t\tcase this.MODELVIEW:\n\t\t\t\tthis.currentMatrixName = 'modelViewMatrix'\n\t\t\t\tthis.stack = this.modelViewStack\n\t\t\t\tbreak\n\t\t\tcase this.PROJECTION:\n\t\t\t\tthis.currentMatrixName = 'projectionMatrix'\n\t\t\t\tthis.stack = this.projectionStack\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tthrow new Error('invalid matrix mode ' + mode)\n\t\t}\n\t}\n\n\tloadIdentity(): void {\n\t\tM4.identity(this[this.currentMatrixName])\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\tloadMatrix(m4: M4) {\n\t\tM4.copy(m4, this[this.currentMatrixName])\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\tmultMatrix(m4: M4) {\n\t\tM4.multiply(this[this.currentMatrixName], m4, this.resultMatrix)\n\t\tconst temp = this.resultMatrix\n\t\tthis.resultMatrix = this[this.currentMatrixName]\n\t\tthis[this.currentMatrixName] = temp\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\tmirror(plane: { normal1: V3; w: number }) {\n\t\tthis.multMatrix(M4.mirror(plane))\n\t}\n\n\tperspective(fovDegrees: number, aspect: number, near: number, far: number) {\n\t\tthis.multMatrix(M4.perspectiveRad(fovDegrees * DEG, aspect, near, far, this.tempMatrix))\n\t}\n\n\tfrustum(left: number, right: number, bottom: number, top: number, near: number, far: number) {\n\t\tthis.multMatrix(M4.frustum(left, right, bottom, top, near, far, this.tempMatrix))\n\t}\n\n\tortho(left: number, right: number, bottom: number, top: number, near: number, far: number) {\n\t\tthis.multMatrix(M4.ortho(left, right, bottom, top, near, far, this.tempMatrix))\n\t}\n\n\tscale(x: number, y: number, z?: number): void\n\tscale(scale: number): void\n\tscale(v: V3): void\n\tscale(...args: any[]) {\n\t\tthis.multMatrix((M4.scale as any)(...args, this.tempMatrix))\n\t}\n\n\tmirroredX() {\n\t\tthis.multMatrix(M4.mirror(P3ZX))\n\t}\n\n\ttranslate(x: number, y?: number, z?: number): void\n\ttranslate(v: V3): void\n\ttranslate(x: any, y?: any, z?: any) {\n\t\tif (undefined !== y) {\n\t\t\tthis.multMatrix(M4.translate(x, y, z, this.tempMatrix))\n\t\t} else {\n\t\t\tthis.multMatrix(M4.translate(x, this.tempMatrix))\n\t\t}\n\t}\n\n\trotate(angleDegrees: number, x: number, y: number, z: number) {\n\t\tthis.multMatrix(M4.rotate(angleDegrees * DEG, { x, y, z }, this.tempMatrix))\n\t}\n\n\tlookAt(eye: V3, center: V3, up: V3) {\n\t\tthis.multMatrix(M4.lookAt(eye, center, up, this.tempMatrix))\n\t}\n\n\tpushMatrix() {\n\t\tthis.stack.push(M4.copy(this[this.currentMatrixName]))\n\t}\n\n\tpopMatrix() {\n\t\tconst pop = this.stack.pop()\n\t\tassert(undefined !== pop)\n\t\tthis[this.currentMatrixName] = pop as M4\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\n\t}\n\n\t/**\n\t * World coordinates (WC) to screen/window coordinates matrix\n\t */\n\twcToWindowMatrix() {\n\t\tconst viewport = this.getParameter(this.VIEWPORT)\n\t\tconst [x, y, w, h] = viewport\n\t\t// prettier-ignore\n\t\tconst viewportToScreenMatrix = new M4([\n\t\t\tw / 2, 0, 0, x + w / 2,\n\t\t\th / 2, 0, 0, y + h / 2,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t])\n\t\treturn M4.product(viewportToScreenMatrix, this.projectionMatrix, this.modelViewMatrix)\n\t}\n\n\t/////////// IMMEDIATE MODE\n\t// ### Immediate mode\n\t//\n\t// Provide an implementation of OpenGL's deprecated immediate mode. This is\n\t// deprecated for a reason: constantly re-specifying the geometry is a bad\n\t// idea for performance. You should use a `GL.Mesh` instead, which specifies\n\t// the geometry once and caches it on the graphics card. Still, nothing\n\t// beats a quick `viewerGL.begin(WGL.POINTS); viewerGL.vertex(1, 2, 3); viewerGL.end();` for\n\t// debugging. This intentionally doesn't implement fixed-function lighting\n\t// because it's only meant for quick debugging tasks.\n\n\tpointSize(pointSize: number): void {\n\t\tthis.immediate.shader.uniforms({ pointSize: pointSize })\n\t}\n\n\tbegin(mode: GL.DrawMode) {\n\t\tif (this.immediate.mode != -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\n\t\tthis.immediate.mode = mode\n\t\tthis.immediate.mesh.colors = []\n\t\tthis.immediate.mesh.coords = []\n\t\tthis.immediate.mesh.vertices = []\n\t}\n\n\tcolor(cssColor: string): void\n\tcolor(r: number, g: number, b: number, a?: number): void\n\tcolor(hexInt: int): void\n\tcolor(glColor: GL_COLOR): void\n\tcolor(...args: any[]) {\n\t\tthis.immediate.color =\n\t\t\t1 == args.length && Array.isArray(args[0])\n\t\t\t\t? (args[0] as GL_COLOR)\n\t\t\t\t: 1 == args.length && 'number' == typeof args[0]\n\t\t\t\t? hexIntToGLColor(args[0])\n\t\t\t\t: 1 == args.length && 'string' == typeof args[0]\n\t\t\t\t? chroma.color(args[0]).gl()\n\t\t\t\t: [args[0], args[1], args[2], args[3] || 1]\n\t}\n\n\ttexCoord(s: number, t: number): void\n\ttexCoord(coords: [number, number]): void\n\ttexCoord(coords: { x: number; y: number }): void\n\ttexCoord(...args: any[]) {\n\t\tthis.immediate.coord = V.apply(undefined, args).toArray(2)\n\t}\n\n\tvertex(v: V3): void\n\tvertex(x: number, y: number, z: number): void\n\tvertex(...args: any[]) {\n\t\tthis.immediate.mesh.colors.push(this.immediate.color)\n\t\tthis.immediate.mesh.coords.push(this.immediate.coord)\n\t\tthis.immediate.mesh.vertices.push(V.apply(undefined, args))\n\t}\n\n\tend(): void {\n\t\tif (this.immediate.mode == -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\n\t\tthis.immediate.mesh.compile()\n\t\tthis.immediate.shader\n\t\t\t.uniforms({\n\t\t\t\tuseTexture: !!TSGLContextBase.gl.getParameter(this.TEXTURE_BINDING_2D),\n\t\t\t})\n\t\t\t.drawBuffers(this.immediate.mesh.vertexBuffers, undefined, this.immediate.mode)\n\t\tthis.immediate.mode = -1\n\t}\n\n\t////////// MISCELLANEOUS METHODS\n\tstatic gl: TSGLContextBase\n\n\tmakeCurrent() {\n\t\tTSGLContextBase.gl = this\n\t}\n\n\t/**\n\t * Starts an animation loop.\n\t */\n\tanimate(callback: (this: TSGLContextBase, domHighResTimeStamp: number, timeSinceLast: number) => void): () => void {\n\t\tconst requestAnimationFrame: typeof window.requestAnimationFrame =\n\t\t\twindow.requestAnimationFrame ||\n\t\t\t(window as any).mozRequestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\tfunction (callback: FrameRequestCallback) {\n\t\t\t\tsetTimeout(() => callback(performance.now()), 1000 / 60)\n\t\t\t}\n\t\tlet time = performance.now(),\n\t\t\tkeepUpdating = true\n\t\tconst update = (now: number) => {\n\t\t\tif (keepUpdating) {\n\t\t\t\tcallback.call(this, now, now - time)\n\t\t\t\ttime = now\n\t\t\t\trequestAnimationFrame(update)\n\t\t\t}\n\t\t}\n\t\trequestAnimationFrame(update)\n\t\treturn () => {\n\t\t\tkeepUpdating = false\n\t\t}\n\t}\n\n\t/**\n\t * Provide an easy way to get a fullscreen app running, including an\n\t * automatic 3D perspective projection matrix by default. This should be\n\t * called once.\n\t *\n\t * Just fullscreen, no automatic camera:\n\t *\n\t *     viewerGL.fullscreen({ camera: false })\n\t *\n\t * Adjusting field of view, near plane distance, and far plane distance:\n\t *\n\t *     viewerGL.fullscreen({ fov: 45, near: 0.1, far: 1000 })\n\t *\n\t * Adding padding from the edge of the window:\n\t *\n\t *     viewerGL.fullscreen({ paddingLeft: 250, paddingBottom: 60 })\n\t */\n\tfullscreen(\n\t\toptions: {\n\t\t\tpaddingTop?: number\n\t\t\tpaddingLeft?: number\n\t\t\tpaddingRight?: number\n\t\t\tpaddingBottom?: number\n\t\t\tcamera?: boolean\n\t\t\tfov?: number\n\t\t\tnear?: number\n\t\t\tfar?: number\n\t\t} = {},\n\t) {\n\t\tconst top = options.paddingTop || 0\n\t\tconst left = options.paddingLeft || 0\n\t\tconst right = options.paddingRight || 0\n\t\tconst bottom = options.paddingBottom || 0\n\t\tif (!document.body) {\n\t\t\tthrow new Error(\n\t\t\t\t\"document.body doesn't exist yet (call viewerGL.fullscreen() from \" +\n\t\t\t\t\t'window.onload() or from inside the <body> tag)',\n\t\t\t)\n\t\t}\n\t\tdocument.body.appendChild(this.canvas)\n\t\tdocument.body.style.overflow = 'hidden'\n\t\tthis.canvas.style.position = 'absolute'\n\t\tthis.canvas.style.left = left + 'px'\n\t\tthis.canvas.style.top = top + 'px'\n\t\tthis.canvas.style.width = window.innerWidth - left - right + 'px'\n\t\tthis.canvas.style.bottom = window.innerHeight - top - bottom + 'px'\n\n\t\tconst gl = this\n\n\t\tfunction windowOnResize() {\n\t\t\tgl.canvas.width = (window.innerWidth - left - right) * window.devicePixelRatio\n\t\t\tgl.canvas.height = (window.innerHeight - top - bottom) * window.devicePixelRatio\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\n\t\t\tif (options.camera) {\n\t\t\t\tgl.matrixMode(TSGLContextBase.PROJECTION)\n\t\t\t\tgl.loadIdentity()\n\t\t\t\tgl.perspective(\n\t\t\t\t\toptions.fov || 45,\n\t\t\t\t\tgl.canvas.width / gl.canvas.height,\n\t\t\t\t\toptions.near || 0.1,\n\t\t\t\t\toptions.far || 1000,\n\t\t\t\t)\n\t\t\t\tgl.matrixMode(TSGLContextBase.MODELVIEW)\n\t\t\t}\n\t\t}\n\n\t\twindow.addEventListener('resize', windowOnResize)\n\t\twindowOnResize()\n\t\treturn this\n\t}\n\tgetMouseLine(e: MouseEvent): { anchor: V3; dir: V3 }\n\tgetMouseLine(canvasPosX: number, canvasPosY: number): { anchor: V3; dir: V3 }\n\tgetMouseLine(canvasPosXOrE: number | MouseEvent, canvasPosY?: number): { anchor: V3; dir: V3 } {\n\t\tif (canvasPosXOrE instanceof MouseEvent) {\n\t\t\treturn this.getMouseLine(canvasPosXOrE.offsetX, canvasPosXOrE.offsetY)\n\t\t}\n\t\tconst ndc1 = V(\n\t\t\t(canvasPosXOrE * 2) / this.canvas.offsetWidth - 1,\n\t\t\t(-canvasPosY! * 2) / this.canvas.offsetHeight + 1,\n\t\t\t0,\n\t\t)\n\t\tconst ndc2 = V(\n\t\t\t(canvasPosXOrE * 2) / this.canvas.offsetWidth - 1,\n\t\t\t(-canvasPosY! * 2) / this.canvas.offsetHeight + 1,\n\t\t\t1,\n\t\t)\n\t\tconst inverseProjectionMatrix = this.projectionMatrix.inversed()\n\t\tconst anchor = inverseProjectionMatrix.transformPoint(ndc1)\n\t\tconst dir = inverseProjectionMatrix.transformPoint(ndc2).minus(anchor)\n\t\treturn { anchor, dir }\n\t}\n\n\tviewportFill() {\n\t\tthis.viewport(0, 0, this.canvas.width, this.canvas.height)\n\t}\n\n\tasync setupTextRendering(pngURL: string, jsonURL: string) {\n\t\tthis.textRenderShader = Shader.create(posCoordVS, sdfRenderFS)\n\t\t;[this.textAtlas, this.textMetrics] = await Promise.all([\n\t\t\tTexture.fromURL(pngURL, {\n\t\t\t\tformat: this.LUMINANCE,\n\t\t\t\tinternalFormat: this.LUMINANCE,\n\t\t\t\ttype: this.UNSIGNED_BYTE,\n\t\t\t}),\n\t\t\tfetch(jsonURL).then((r) => r.json()),\n\t\t])\n\t\t// const cs = this.textMetrics.chars\n\t\t// const maxY = Object.keys(cs).reduce((a, b) => Math.max(a, cs[b][3]), 0)\n\t\t// const minY = Object.keys(cs).reduce((a, b) => Math.min(a, cs[b][3] - cs[b][1]), 0)\n\t\t// console.log(maxY, minY)\n\t}\n\n\tcachedSDFMeshes: {\n\t\t[str: string]: Mesh & { TRIANGLES: int[]; coords: number[]; width: number; lineCount: int }\n\t} = {}\n\n\tgetSDFMeshForString(str: string) {\n\t\tassert(this.textMetrics)\n\t\treturn (\n\t\t\tthis.cachedSDFMeshes[str] ||\n\t\t\t(this.cachedSDFMeshes[str] = createTextMesh(this.textMetrics, this.textAtlas, str))\n\t\t)\n\t}\n\n\trenderText(\n\t\tstring: string,\n\t\tcolor: GL_COLOR,\n\t\tsize = 1,\n\t\txAlign: 'left' | 'center' | 'right' = 'left',\n\t\tbaseline: 'top' | 'middle' | 'alphabetic' | 'bottom' = 'bottom',\n\t\tgamma = 0.05,\n\t\tlineHeight = 1.2,\n\t) {\n\t\tconst strMesh = this.getSDFMeshForString(string)\n\t\tthis.pushMatrix()\n\t\tthis.scale(size)\n\t\tconst xTranslate = { left: 0, center: -0.5, right: -1 }\n\t\tconst yTranslate = {\n\t\t\ttop: -this.textMetrics.ascender / this.textMetrics.size,\n\t\t\tmiddle: (-this.textMetrics.ascender - this.textMetrics.descender) / 2 / this.textMetrics.size,\n\t\t\talphabetic: 0,\n\t\t\tbottom: -this.textMetrics.descender / this.textMetrics.size,\n\t\t}\n\t\t// console.log('yTranslate[baseline]', yTranslate[baseline])\n\t\tthis.translate(xTranslate[xAlign] * strMesh.width, yTranslate[baseline], 0)\n\t\tthis.multMatrix(M4.forSys(V3.X, V3.Y, new V3(0, -lineHeight, 0)))\n\t\tthis.textAtlas.bind(0)\n\t\tthis.textRenderShader\n\t\t\t.uniforms({ texture: 0, u_color: color, u_debug: 0, u_gamma: gamma, u_buffer: 192 / 256 })\n\t\t\t.draw(strMesh)\n\t\tthis.popMatrix()\n\n\t\t// gl.uniform1f(shader.u_debug, debug ? 1 : 0)\n\n\t\t// gl.uniform4fv(shader.u_color, [1, 1, 1, 1])\n\t\t// gl.uniform1f(shader.u_buffer, buffer)\n\t\t// gl.drawArrays(gl.TRIANGLES, 0, vertexBuffer.numItems)\n\n\t\t// gl.uniform4fv(shader.u_color, [0, 0, 0, 1])\n\t\t// gl.uniform1f(shader.u_buffer, 192 / 256)\n\t\t// gl.uniform1f(shader.u_gamma, (gamma * 1.4142) / scale)\n\t\t// gl.drawArrays(gl.TRIANGLES, 0, vertexBuffer.numItems)\n\t}\n\n\tstatic create(\n\t\toptions: Partial<GL.WebGLContextAttributes & { canvas: HTMLCanvasElement; throwOnError: boolean }> = {},\n\t): TSGLContext {\n\t\tconst canvas = options.canvas || document.createElement('canvas')\n\t\tif (!options.canvas) {\n\t\t\tcanvas.width = 800\n\t\t\tcanvas.height = 600\n\t\t}\n\t\tif (!('alpha' in options)) options.alpha = false\n\t\tlet newGL: any = undefined\n\t\ttry {\n\t\t\tnewGL = canvas.getContext('webgl2', options)\n\t\t\tnewGL && (newGL.version = 2)\n\t\t\tif (!newGL) {\n\t\t\t\tnewGL = canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options)\n\t\t\t\tnewGL && (newGL.version = 1)\n\t\t\t}\n\t\t\tconsole.log('getting context')\n\t\t} catch (e) {\n\t\t\tconsole.log(e, 'Failed to get context')\n\t\t}\n\t\tif (!newGL) throw new Error('WebGL not supported')\n\t\tif (options.throwOnError) {\n\t\t\tnewGL = makeDebugContext(newGL, (err, funcName) => {\n\t\t\t\tthrow new Error(glEnumToString(err) + ' was caused by ' + funcName)\n\t\t\t})\n\t\t}\n\n\t\tTSGLContextBase.gl = newGL\n\t\taddOwnProperties(newGL, TSGLContextBase.prototype)\n\t\taddOwnProperties(newGL, new TSGLContextBase(newGL))\n\t\t//addEventListeners(newGL)\n\t\treturn newGL\n\t}\n\n\t/**\n\t * Sets the canvas render resolution (canvas.width and canvas.height) to match the display. I.e. it takes into\n\t * account window.devicePixelRatio.\n\t * @param maxPixelRatio A limit for the pixelRatio. Useful for very high DPI devices such as mobile devices.\n\t */\n\tfixCanvasRes(maxPixelRatio = Infinity) {\n\t\tthis.canvas.width = this.canvas.clientWidth * Math.min(window.devicePixelRatio, maxPixelRatio)\n\t\tthis.canvas.height = this.canvas.clientHeight * Math.min(window.devicePixelRatio, maxPixelRatio)\n\t\tthis.viewport(0, 0, this.canvas.width, this.canvas.height)\n\t}\n}\nexport namespace TSGLContext {\n\t/**\n\t * `create()` creates a new WebGL context and augments it with more methods. The alpha channel is disabled\n\t * by default because it usually causes unintended transparencies in the canvas.\n\t */\n\texport const create = TSGLContextBase.create\n}\n\n// enum WGL_ERROR {\n// \tNO_ERROR = WGL.NO_ERROR,\n// \tINVALID_ENUM = WGL.INVALID_ENUM,\n// \tINVALID_VALUE = WGL.INVALID_VALUE,\n// \tINVALID_OPERATION = WGL.INVALID_OPERATION,\n// \tINVALID_FRAMEBUFFER_OPERATION = WGL.INVALID_FRAMEBUFFER_OPERATION,\n// \tOUT_OF_MEMORY = WGL.OUT_OF_MEMORY,\n// \tCONTEXT_LOST_WEBGL = WGL.CONTEXT_LOST_WEBGL,\n// }\n\nTSGLContextBase.prototype.MODELVIEW = TSGLContextBase.MODELVIEW\nTSGLContextBase.prototype.PROJECTION = TSGLContextBase.PROJECTION\nTSGLContextBase.prototype.HALF_FLOAT_OES = TSGLContextBase.HALF_FLOAT_OES\n\n/**\n *\n * Push two triangles:\n * ```\n c - d\n | \\ |\n a - b\n ```\n */\nexport function pushQuad(triangles: int[], flipped: boolean, a: int, b: int, c: int, d: int) {\n\t// prettier-ignore\n\tif (flipped) {\n\t\ttriangles.push(\n\t\t\ta, c, b,\n\t\t\tb, c, d)\n\t} else {\n\t\ttriangles.push(\n\t\t\ta, b, c,\n\t\t\tb, d, c)\n\t}\n}\n\nfunction hexIntToGLColor(color: int): GL_COLOR {\n\treturn [(color >> 16) / 255.0, ((color >> 8) & 0xff) / 255.0, (color & 0xff) / 255.0, 1.0]\n}\n\nexport interface FontJsonMetrics {\n\tfamily: string\n\tstyle: string\n\n\t// buffer refers to the width of the margin around glyph bounding boxes with distance values\n\tbuffer: int\n\tsize: number\n\n\t// [width, height, horiBearingX, horiBearingY, horiAdvance, posX, posY]\n\t// see https://www.freetype.org/freetype2/docs/tutorial/step2.html\n\tchars: { [char: string]: [number, number, number, number, number, number, number] }\n\n\tdescender: number\n\tascender: number\n}\n// function measureText(metrics: FontJsonMetrics, text: string, size: number) {\n// \tconst dimensions = {\n// \t\tadvance: 0,\n// \t}\n\n// \tconst scale = size / metrics.size\n// \tfor (let i = 0; i < text.length; i++) {\n// \t\tconst horiAdvance = metrics.chars[text[i]][4]\n// \t\tdimensions.advance += horiAdvance * scale\n// \t}\n\n// \treturn dimensions\n// }\n\n// gl.getExtension('OES_standard_derivatives')\n\n// gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE)\n\n// gl.enable(gl.BLEND)\n\n// const texture = gl.createTexture()\n\n// const vertexBuffer = gl.createBuffer()\n// const textureBuffer = gl.createBuffer()\n\nfunction createTextMesh(fontMetrics: FontJsonMetrics, fontTextureAtlas: Texture, str: string, lineHeight = 1) {\n\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('coords', 'ts_TexCoord')\n\n\tlet cursorX = 0\n\tlet cursorY = 0\n\n\tfunction drawGlyph(chr: string) {\n\t\tconst metric = fontMetrics.chars[chr]\n\t\tif (!metric) return\n\n\t\tconst [width, height, horiBearingX, horiBearingY, horiAdvance, posX, posY] = metric\n\t\tconst { size, buffer } = fontMetrics\n\t\tconst quadStartIndex = mesh.vertices.length\n\n\t\t// buffer = margin on texture\n\t\tif (width > 0 && height > 0) {\n\t\t\t// Add a quad (= two triangles) per glyph.\n\t\t\tconst left = (cursorX + horiBearingX - buffer) / size\n\t\t\tconst right = (cursorX + horiBearingX + width + buffer) / size\n\t\t\tconst bottom = (horiBearingY - height - buffer) / size\n\t\t\tconst top = (horiBearingY + buffer) / size\n\t\t\tmesh.vertices.push(\n\t\t\t\tnew V3(left, bottom, cursorY / size),\n\t\t\t\tnew V3(right, bottom, cursorY / size),\n\t\t\t\tnew V3(left, top, cursorY / size),\n\t\t\t\tnew V3(right, top, cursorY / size),\n\t\t\t)\n\n\t\t\tconst coordsLeft = posX / fontTextureAtlas.width\n\t\t\tconst coordsRight = (posX + width + 2 * buffer) / fontTextureAtlas.width\n\t\t\tconst coordsBottom = (posY + height + 2 * buffer) / fontTextureAtlas.height\n\t\t\tconst coordsTop = posY / fontTextureAtlas.height\n\t\t\tmesh.coords.push(\n\t\t\t\t[coordsLeft, coordsBottom],\n\t\t\t\t[coordsRight, coordsBottom],\n\t\t\t\t[coordsLeft, coordsTop],\n\t\t\t\t[coordsRight, coordsTop],\n\t\t\t)\n\t\t\t// mesh.coords.push([0, 0], [0, 1], [1, 0], [1, 1])\n\n\t\t\tpushQuad(mesh.TRIANGLES, false, quadStartIndex, quadStartIndex + 1, quadStartIndex + 2, quadStartIndex + 3)\n\t\t}\n\n\t\t// pen.x += Math.ceil(horiAdvance * scale);\n\t\tcursorX += horiAdvance\n\t}\n\n\tfor (let i = 0; i < str.length; i++) {\n\t\tconst chr = str[i]\n\t\tif ('\\n' == chr) {\n\t\t\tcursorX = 0\n\t\t\tcursorY += lineHeight * fontMetrics.size\n\t\t} else {\n\t\t\tdrawGlyph(chr)\n\t\t}\n\t}\n\n\treturn Object.assign(mesh.compile(), { width: cursorX / fontMetrics.size, lineCount: cursorY + 1 })\n}\n","export const {\n  abs,\n  acos,\n  acosh,\n  asin,\n  asinh,\n  atan,\n  atanh,\n  atan2,\n  ceil,\n  cbrt,\n  expm1,\n  clz32,\n  cos,\n  cosh,\n  exp,\n  floor,\n  fround,\n  hypot,\n  imul,\n  log,\n  log1p,\n  log2,\n  log10,\n  max,\n  min,\n  pow,\n  random,\n  round,\n  sign,\n  sin,\n  sinh,\n  sqrt,\n  tan,\n  tanh,\n  trunc,\n  E,\n  LN10,\n  LN2,\n  LOG10E,\n  LOG2E,\n  PI,\n  SQRT1_2,\n  SQRT2,\n} = Math\n","import { Equalable } from \"javasetmap.ts\"\nimport {\n  AABB,\n  arrayEquals,\n  arrayFromFunction,\n  arrayHashCode,\n  assert,\n  assertNumbers,\n  callsce,\n  clamp,\n  eq,\n  eq0,\n  fuzzyUniquesF,\n  getIntervals,\n  getLast,\n  glqInSteps,\n  hasConstructor,\n  int,\n  le,\n  M4,\n  mapFilter,\n  newtonIterate1d,\n  newtonIterate2dWithDerivatives,\n  newtonIterateWithDerivative,\n  NLA_PRECISION,\n  Transformable,\n  Tuple3,\n  V,\n  V3,\n  withMax,\n} from \"ts3dutils\"\n\nimport {\n  curvePointPP,\n  EllipsoidSurface,\n  followAlgorithm2d,\n  followAlgorithmPP,\n  MathFunctionR2R,\n  P3,\n  ParametricSurface,\n  PlaneSurface,\n  PPCurve,\n  ProjectedCurveSurface,\n  Surface,\n} from \"../index\"\n\nimport { abs, ceil, floor } from \"../math\"\nimport { WebGLDebugable } from \"../WebGLDebugable\"\n\n/**\n * Information about the intersection of two curves.\n */\nexport interface ISInfo {\n  /** curve parameter of the \"this\" curve */\n  tThis: number\n  /** curve parameter of the \"other\" curve */\n  tOther: number\n  /** intersection point */\n  p: V3\n}\n\nlet insideIsInfosWithCurve = false\n\nexport abstract class Curve\n  extends Transformable\n  implements Equalable, WebGLDebugable {\n  static hlol = 0\n  tIncrement!: number\n  hlol!: number;\n  readonly [\"constructor\"]: new (...args: any[]) => this\n\n  debugInfo?(): { points: V3[]; lines: V3[] }\n\n  /**\n   * Derivative of tangentAt for parameter t at t.\n   */\n  ddt?(t: number): V3\n\n  constructor(readonly tMin: number, readonly tMax: number) {\n    super()\n    assertNumbers(tMin, tMax)\n    assert(\"number\" === typeof tMin && !isNaN(tMin))\n    assert(\"number\" === typeof tMax && !isNaN(tMax))\n    assert(tMin < tMax, \"tMin < tMax \" + tMin + \" < \" + tMax)\n  }\n\n  static integrate(\n    curve: Curve,\n    startT: number,\n    endT: number,\n    steps: int,\n  ): number {\n    const step = (endT - startT) / steps\n    let length = 0\n    let p = curve.at(startT)\n    let i = 0,\n      t = startT + step\n    for (; i < steps; i++, t += step) {\n      const next = curve.at(t)\n      length += p.distanceTo(next)\n      p = next\n    }\n    return length\n  }\n\n  static ispsRecursive(\n    curve1: Curve,\n    tMin: number,\n    tMax: number,\n    curve2: Curve,\n    sMin: number,\n    sMax: number,\n  ): ISInfo[] {\n    // the recursive function finds good approximates for the intersection points\n    // curve1 function uses newton iteration to improve the result as much as possible\n    function handleStartTS(startT: number, startS: number) {\n      if (\n        !result.some(\n          (info) => eq(info.tThis, startT) && eq(info.tOther, startS),\n        )\n      ) {\n        const f1 = (t: number, s: number) =>\n          curve1.tangentAt(t).dot(curve1.at(t).minus(curve2.at(s)))\n        const f2 = (t: number, s: number) =>\n          curve2.tangentAt(s).dot(curve1.at(t).minus(curve2.at(s)))\n        // f = (b1, b2, t1, t2) = b1.tangentAt(t1).dot(b1.at(t1).minus(b2.at(t2)))\n        const dfdt1 = (b1: Curve, b2: Curve, t1: number, t2: number) =>\n          b1.ddt!(t1).dot(b1.at(t1).minus(b2.at(t2))) +\n          b1.tangentAt(t1).squared()\n        const dfdt2 = (b1: Curve, b2: Curve, t1: number, t2: number) =>\n          -b1.tangentAt(t1).dot(b2.tangentAt(t2))\n        const ni = newtonIterate2dWithDerivatives(\n          f1,\n          f2,\n          startT,\n          startS,\n          16,\n          dfdt1.bind(undefined, curve1, curve2),\n          dfdt2.bind(undefined, curve1, curve2),\n          (t, s) => -dfdt2(curve2, curve1, s, t),\n          (t, s) => -dfdt1(curve2, curve1, s, t),\n        )!\n        assert(isFinite(ni.x))\n        assert(isFinite(ni.y))\n        if (ni == undefined) console.log(startT, startS, curve1.sce, curve2.sce)\n        result.push({ tThis: ni.x, tOther: ni.y, p: curve1.at(ni.x) })\n      }\n    }\n\n    // returns whether an intersection was immediately found (i.e. without further recursion)\n    function findRecursive(\n      tMin: number,\n      tMax: number,\n      sMin: number,\n      sMax: number,\n      curve1AABB: AABB,\n      curve2AABB: AABB,\n      depth = 0,\n    ) {\n      const EPS = NLA_PRECISION\n      if (curve1AABB.touchesAABBfuzzy(curve2AABB)) {\n        const tMid = (tMin + tMax) / 2\n        const sMid = (sMin + sMax) / 2\n        if (Math.abs(tMax - tMin) < EPS || Math.abs(sMax - sMin) < EPS) {\n          handleStartTS(tMid, sMid)\n          return true\n        } else {\n          const curve1AABBleft = curve1.getAABB(tMin, tMid)\n          const curve2AABBleft = curve2.getAABB(sMin, sMid)\n          let curve1AABBright, curve2AABBright\n          // if one of the following calls immediately finds an intersection, we don't want to call the others\n          // as that will lead to the same intersection being output multiple times\n          findRecursive(\n            tMin,\n            tMid,\n            sMin,\n            sMid,\n            curve1AABBleft,\n            curve2AABBleft,\n            depth + 1,\n          ) ||\n            findRecursive(\n              tMin,\n              tMid,\n              sMid,\n              sMax,\n              curve1AABBleft,\n              (curve2AABBright = curve2.getAABB(sMid, sMax)),\n              depth + 1,\n            ) ||\n            findRecursive(\n              tMid,\n              tMax,\n              sMin,\n              sMid,\n              (curve1AABBright = curve1.getAABB(tMid, tMax)),\n              curve2AABBleft,\n              depth + 1,\n            ) ||\n            findRecursive(\n              tMid,\n              tMax,\n              sMid,\n              sMax,\n              curve1AABBright,\n              curve2AABBright,\n              depth + 1,\n            )\n        }\n      }\n      return false\n    }\n\n    const result: ISInfo[] = []\n    findRecursive(\n      tMin,\n      tMax,\n      sMin,\n      sMax,\n      curve1.getAABB(tMin, tMax),\n      curve2.getAABB(sMin, sMax),\n    )\n    return fuzzyUniquesF(result, (info) => info.tThis)\n  }\n\n  /**\n   * Searches a 2d area for (an) implicit curve(s).\n   * @param implicitCurve\n   * @param bounds Defines area to search.\n   * @param uStep Granularity of search in s-direction.\n   * @param vStep Granularity of search in t-direction.\n   * @param stepSize step size to take along the curve\n   * @return\n   */\n  static breakDownIC(\n    implicitCurve: MathFunctionR2R,\n    bounds: AABB2,\n    uStep: number,\n    vStep: number,\n    stepSize: number,\n    validUV: R2<boolean>,\n  ): { points: V3[]; tangents: V3[] }[] {\n    //undefined == didu && (didu = (u, v) => (implicitCurve(u + EPS, v) - implicitCurve(u, v)) / EPS)\n    //undefined == didv && (didv = (u, v) => (implicitCurve(u, v + EPS) - implicitCurve(u, v)) / EPS)\n\n    const { uMin, uMax, vMin, vMax } = bounds\n    const deltaS = uMax - uMin,\n      deltaT = vMax - vMin\n    const sRes = ceil(deltaS / uStep),\n      tRes = ceil(deltaT / vStep)\n    const grid = new Array(sRes * tRes).fill(0)\n    // const printGrid = () =>\n    // \tconsole.log(\n    // \t\tarrayFromFunction(tRes, i =>\n    // \t\t\tgrid\n    // \t\t\t\t.slice(sRes * i, sRes * (i + 1))\n    // \t\t\t\t.map(v => (v ? 'X' : '_'))\n    // \t\t\t\t.join(''),\n    // \t\t).join('\\n'),\n    // \t)\n    const get = (i: int, j: int) => grid[j * sRes + i]\n    const set = (i: int, j: int) =>\n      0 <= i && i < sRes && 0 <= j && j < tRes && (grid[j * sRes + i] = 1)\n    const result: { points: V3[]; tangents: V3[] }[] = []\n    const logTable = []\n    for (let i = 0; i < sRes; i++) {\n      search: for (let j = 0; j < tRes; j++) {\n        if (get(i, j)) continue\n        set(i, j)\n        let u = uMin + (i + 0.5) * uStep,\n          v = vMin + (j + 0.5) * vStep\n        const startS = u,\n          startT = v\n        // basically curvePoint\n        for (let k = 0; k < 8; k++) {\n          const fp = implicitCurve(u, v)\n          const dfpdx = implicitCurve.x(u, v),\n            dfpdy = implicitCurve.y(u, v)\n          if (0 === dfpdx ** 2 + dfpdy ** 2) {\n            // top of a hill, keep looking\n            continue search\n          }\n          const scale = fp / (dfpdx ** 2 + dfpdy ** 2)\n          u -= scale * dfpdx\n          v -= scale * dfpdy\n        }\n        const li = floor((u - uMin) / uStep),\n          lj = floor((v - vMin) / vStep)\n        logTable.push({\n          i,\n          j,\n          li,\n          lj,\n          startS,\n          startT,\n          u,\n          v,\n          \"bounds(u, v)\": uvInAABB2(bounds, u, v),\n          \"ic(s,t)\": implicitCurve(u, v),\n        })\n        if (!(i == li && j == lj) && get(li, lj)) {\n          continue search\n        }\n        set(li, lj)\n        // u, v are now good starting coordinates to use follow algorithm\n        if (\n          uvInAABB2(bounds, u, v) &&\n          validUV(u, v) &&\n          eq0(implicitCurve(u, v))\n        ) {\n          const subResult = mkcurves(\n            implicitCurve,\n            u,\n            v,\n            stepSize,\n            bounds,\n            validUV,\n          )\n          for (const curveData of subResult) {\n            assert(curveData.points.length > 2)\n            for (const { x, y } of curveData.points) {\n              const lif = (x - uMin) / uStep,\n                ljf = (y - vMin) / vStep\n              set((lif - 0.5) | 0, (ljf - 0.5) | 0)\n              set((lif - 0.5) | 0, (ljf + 0.5) | 0)\n              set((lif + 0.5) | 0, (ljf - 0.5) | 0)\n              set((lif + 0.5) | 0, (ljf + 0.5) | 0)\n            }\n          }\n          //printGrid()\n          result.push(...subResult)\n        }\n      }\n    }\n    // console.table(logTable)\n    for (const { points } of result) {\n      for (let i = 0; i < points.length - 1; i++) {\n        assert(!points[i].equals(points[i + 1]))\n      }\n    }\n    return result\n  }\n\n  toString() {\n    return this.toSource()\n  }\n\n  toSource(rounder: (x: number) => number = (x) => x): string {\n    return callsce.call(\n      undefined,\n      \"new \" + this.constructor.name,\n      ...this.getConstructorParameters(),\n      this.tMin,\n      this.tMax,\n    )\n  }\n\n  /**\n   * Excludes tMin, tMax.\n   */\n  abstract getConstructorParameters(): any[]\n\n  withBounds<T extends Curve>(this: T, tMin = this.tMin, tMax = this.tMax): T {\n    //assert(this.tMin <= tMin && tMin <= this.tMax)\n    //assert(this.tMin <= tMax && tMax <= this.tMax)\n    return new this.constructor(...this.getConstructorParameters(), tMin, tMax)\n  }\n\n  /**\n   * Curve parameter t for point p on curve.\n   */\n  abstract pointT(p: V3, tMin?: number, tMax?: number): number\n\n  /**\n   * The point on the line that is closest to the given point.\n   */\n  closestPointToPoint(p: V3): V3 {\n    return this.at(this.closestTToPoint(p))\n  }\n\n  isValidT(t: number): boolean {\n    return le(this.tMin, t) && le(t, this.tMax)\n  }\n\n  diff(t: number, eps: number): V3 {\n    return this.at(t).to(this.at(t + eps))\n  }\n\n  // TODO: tmin/tmax first\n  closestTToPoint(\n    p: V3,\n    tStart?: number,\n    tMin = this.tMin,\n    tMax = this.tMax,\n  ): number {\n    // this.at(t) has minimal distance to p when this.tangentAt(t) is perpendicular to\n    // the vector between this.at(t) and p. This is the case iff the dot product of the two is 0.\n    // f = (this.at(t) - p) . (this.tangentAt(t)\n    // df = this.tangentAt(t) . this.tangentAt(t) + (this.at(t) - p) . this.ddt(t)\n    //    = this.tangentAt(t)² + (this.at(t) - p) . this.ddt(t)\n    const f = (t: number) => this.at(t).minus(p).dot(this.tangentAt(t)) // 5th degree polynomial\n    const df = (t: number) =>\n      this.tangentAt(t).squared() + this.at(t).minus(p).dot(this.ddt!(t))\n    //checkDerivate(f, df, tMin, tMax)\n\n    const STEPS = 32\n    if (undefined === tStart) {\n      tStart = withMax(\n        arrayFromFunction(\n          STEPS,\n          (i) => tMin + ((tMax - tMin) * i) / (STEPS - 1),\n        ),\n        (t) => -this.at(t).distanceTo(p),\n      )!\n    }\n\n    return newtonIterateWithDerivative(f, tStart, 16, df)\n  }\n\n  /**\n   * So different edges on the same curve do not have different vertices, they are always generated\n   * on fixed points this.at(k * this.tIncrement), with k taking integer values\n   *\n   */\n  calcSegmentPoints(\n    aT: number,\n    bT: number,\n    a: V3,\n    b: V3,\n    reversed: boolean,\n    includeFirst: boolean,\n  ): V3[] {\n    assert(this.tIncrement, \"tIncrement not defined on \" + this)\n    const inc = this.tIncrement\n    const result = []\n    if (includeFirst) result.push(a)\n    assert(reversed != aT < bT)\n    if (aT < bT) {\n      const start = Math.ceil((aT + NLA_PRECISION) / inc)\n      const end = Math.floor((bT - NLA_PRECISION) / inc)\n      for (let i = start; i <= end; i++) {\n        result.push(this.at(i * inc))\n      }\n    } else {\n      const start = Math.floor((aT - NLA_PRECISION) / inc)\n      const end = Math.ceil((bT + NLA_PRECISION) / inc)\n      for (let i = start; i >= end; i--) {\n        result.push(this.at(i * inc))\n      }\n    }\n    result.push(b)\n    return result\n  }\n\n  calcSegmentTs(\n    aT: number,\n    bT: number,\n    reversed: boolean,\n    includeFirst: boolean,\n  ): number[] {\n    assert(this.tIncrement, \"tIncrement not defined on \" + this)\n    const inc = this.tIncrement\n    const result = []\n    if (includeFirst) result.push(aT)\n    assert(reversed != aT < bT)\n    if (aT < bT) {\n      const start = Math.ceil((aT + NLA_PRECISION) / inc)\n      const end = Math.floor((bT - NLA_PRECISION) / inc)\n      for (let i = start; i <= end; i++) {\n        result.push(i * inc)\n      }\n    } else {\n      const start = Math.floor((aT - NLA_PRECISION) / inc)\n      const end = Math.ceil((bT + NLA_PRECISION) / inc)\n      for (let i = start; i >= end; i--) {\n        result.push(i * inc)\n      }\n    }\n    result.push(bT)\n    return result\n  }\n\n  /**\n   *\n   * @param p\n   * @param tStart Defines interval with tEnd in which a start value for t will be searched.\n   * Result is not necessarily in this interval.\n   * @param tEnd\n   */\n  distanceToPoint(p: V3, tStart?: number, tEnd?: number) {\n    const closestT = this.closestTToPoint(p, tStart, tEnd)\n    return this.at(closestT).distanceTo(p)\n  }\n\n  asSegmentDistanceToPoint(p: V3, tStart: number, tEnd: number) {\n    let t = this.closestTToPoint(p, tStart, tEnd)\n    t = clamp(t, tStart, tEnd)\n    return this.at(t).distanceTo(p)\n  }\n\n  /**\n   * Behavior when curves are colinear: self intersections\n   */\n  isInfosWithCurve(curve: Curve): ISInfo[] {\n    if (insideIsInfosWithCurve) {\n      return Curve.ispsRecursive(\n        this,\n        this.tMin,\n        this.tMax,\n        curve,\n        curve.tMin,\n        curve.tMax,\n      )\n    } else {\n      try {\n        insideIsInfosWithCurve = true\n        const infos = curve.isInfosWithCurve(this)\n        return infos.map((info) => {\n          assert(info)\n          const { tThis, tOther, p } = info\n          return { tOther: tThis, tThis: tOther, p }\n        })\n      } finally {\n        insideIsInfosWithCurve = false\n      }\n    }\n  }\n\n  abstract transform4(m4: M4): Curve\n\n  /**\n   * Curve point at parameter t.\n   */\n  abstract at(t: number): V3\n\n  /**\n   * Tangent of curve at parameter t. This is also the first derivative of {@see at}\n   */\n  abstract tangentAt(t: number): V3\n\n  abstract containsPoint(p: V3): boolean\n\n  abstract isInfosWithLine(\n    anchorWC: V3,\n    dirWC: V3,\n    tMin?: number,\n    tMax?: number,\n    lineMin?: number,\n    lineMax?: number,\n  ): ISInfo[]\n\n  abstract transform(m4: M4, desc?: string): this\n\n  isTsWithSurface(surface: Surface): number[] {\n    if (surface instanceof PlaneSurface) {\n      return this.isTsWithPlane(surface.plane)\n    }\n    if (surface instanceof ProjectedCurveSurface) {\n      const projPlane = new P3(surface.dir.unit(), 0)\n      const projThis = this.project(projPlane)\n      const projEllipse = surface.baseCurve.project(projPlane)\n      return projEllipse.isInfosWithCurve(projThis).map((info) => info.tOther)\n    }\n    if (surface instanceof EllipsoidSurface) {\n      const thisOC = this.transform(surface.matrixInverse)\n      if (\n        !thisOC.getAABB().touchesAABBfuzzy(new AABB(V3.XYZ.negated(), V3.XYZ))\n      ) {\n        return []\n      }\n      const f = (t: number) => thisOC.at(t).length() - 1\n      const df = (t: number) => thisOC.at(t).unit().dot(thisOC.tangentAt(t))\n\n      const stepSize = 1 / (1 << 11)\n      const result: number[] = []\n      for (let startT = this.tMin; startT <= this.tMax; startT += stepSize) {\n        const dt = stepSize * thisOC.tangentAt(startT).length()\n        if (abs(f(startT)) <= dt) {\n          //const t = newtonIterate1d(f, startT, 16)\n          let t = newtonIterateWithDerivative(f, startT, 16, df)\n          if (!eq0(f(t)) || eq0(df(t))) {\n            t = newtonIterate1d(df, startT, 16)\n            //if (f(a) * f(b) < 0) {\n            //    t = bisect(f, a, b, 16)\n            //} else if (df(a) * df(b) < 0) {\n            //    t = bisect(df, a, b, 16)\n            //}\n          }\n          if (eq0(f(t)) && !result.some((r) => eq(r, t))) {\n            result.push(t)\n          }\n        }\n      }\n      return result.filter((t) => surface.containsPoint(this.at(t)))\n    }\n    throw new Error()\n  }\n\n  abstract isTsWithPlane(planeWC: P3): number[]\n\n  arcLength(startT: number, endT: number, steps: int = 1): number {\n    assert(startT < endT, \"startT < endT\")\n    return glqInSteps((t) => this.tangentAt(t).length(), startT, endT, steps)\n  }\n\n  /**\n   * iff for any t, this.at(t) == curve.at(t)\n   */\n  abstract likeCurve(curve: Curve): boolean\n\n  equals(obj: any): boolean {\n    if (this === obj) return true\n    return (\n      hasConstructor(obj, this.constructor) &&\n      arrayEquals(\n        this.getConstructorParameters(),\n        obj.getConstructorParameters(),\n      )\n    )\n  }\n\n  hashCode(): int {\n    return arrayHashCode(this.getConstructorParameters())\n  }\n\n  /**\n   * Return whether the curves occupy the same points in space. They do\n   * not necessarily need to share the same parameter values.\n   *\n   *\n   * iff for every t, there is an s so that this.at(t) == curve.at(s)\n   * and for every s, there is a t so that curve.at(s) == this.a(t)\n   */\n  abstract isColinearTo(curve: Curve): boolean\n\n  getAABB(tMin = this.tMin, tMax = this.tMax): AABB {\n    tMin = isFinite(tMin) ? tMin : this.tMin\n    tMax = isFinite(tMax) ? tMax : this.tMax\n    const tMinAt = this.at(tMin),\n      tMaxAt = this.at(tMax)\n    const roots = this.roots()\n    const mins = [0, 0, 0]\n    const maxs = [0, 0, 0]\n    for (let dim = 0; dim < 3; dim++) {\n      const tRoots = roots[dim]\n      mins[dim] = Math.min(tMinAt.e(dim), tMaxAt.e(dim))\n      maxs[dim] = Math.max(tMinAt.e(dim), tMaxAt.e(dim))\n      for (const tRoot of tRoots) {\n        if (tMin < tRoot && tRoot < tMax) {\n          mins[dim] = Math.min(mins[dim], this.at(tRoot).e(dim))\n          maxs[dim] = Math.max(maxs[dim], this.at(tRoot).e(dim))\n        }\n      }\n    }\n    return new AABB(V3.fromArray(mins), V3.fromArray(maxs))\n  }\n\n  /**\n   * Calculates, for each dimension individually, the parameters at which the curve has\n   * local extrema. This is mainly used for calculating the AABB of the curve.\n   * @returns {number[][]}\n   */\n  abstract roots(): [number[], number[], number[]]\n\n  reversed(): Curve {\n    throw new Error()\n  }\n\n  clipPlane(plane: P3): Curve[] {\n    const ists = this.isTsWithPlane(plane).filter(\n      (ist) => this.tMin <= ist && ist <= this.tMax,\n    )\n    return mapFilter(getIntervals(ists, this.tMin, this.tMax), ([a, b]) => {\n      const midT = (a + b) / 2\n      return (\n        !eq(a, b) &&\n        plane.distanceToPointSigned(this.at(midT)) < 0 &&\n        this.withBounds(a, b)\n      )\n    })\n  }\n}\n\nfunction mkcurves(\n  implicitCurve: MathFunctionR2R,\n  sStart: number,\n  tStart: number,\n  stepSize: number,\n  bounds: AABB2,\n  validUV: R2<boolean>,\n): { points: V3[]; tangents: V3[] }[] {\n  const start = V(sStart, tStart)\n  assert(stepSize > 0)\n  // checkDerivate(s => implicitCurve(s, 0), s => didu(s, 0), -1, 1, 0)\n  // checkDerivate(t => implicitCurve(0, t), t => didv(0, t), -1, 1, 0)\n  const { points, tangents } = followAlgorithm2d(\n    implicitCurve,\n    start,\n    stepSize,\n    bounds,\n    validUV,\n  )\n  if (\n    points.length > 4 &&\n    points[0].distanceTo(getLast(points)) <= abs(stepSize)\n  ) {\n    // this is a loop: split it\n    for (let i = 0; i < points.length - 1; i++) {\n      assert(!points[i].equals(points[i + 1]))\n    }\n    const half = floor(points.length / 2)\n    const points1 = points.slice(0, half),\n      points2 = points.slice(half - 1, points.length)\n    const tangents1 = tangents.slice(0, half),\n      tangents2 = tangents.slice(half - 1, tangents.length)\n    //tangents2[tangents2.length - 1] = tangents1[0]\n    //points2[tangents2.length - 1] = points1[0]\n    for (let i = 0; i < points1.length - 1; i++) {\n      assert(!points1[i].equals(points1[i + 1]))\n    }\n    for (let i = 0; i < points2.length - 1; i++) {\n      assert(!points2[i].equals(points2[i + 1]))\n    }\n    return [\n      { points: points1, tangents: tangents1 },\n      { points: points2, tangents: tangents2 },\n    ]\n  } else {\n    // not a loop: check in the other direction\n    const {\n      points: reversePoints,\n      tangents: reverseTangents,\n    } = followAlgorithm2d(implicitCurve, start, -stepSize, bounds, validUV)\n    const result = followAlgorithm2d(\n      implicitCurve,\n      getLast(reversePoints),\n      stepSize,\n      bounds,\n      validUV,\n      undefined,\n      getLast(reverseTangents).negated(),\n    )\n    assert(result.points.length > 2)\n    return [result]\n  }\n}\n\nexport function breakDownPPCurves(\n  ps1: ParametricSurface,\n  ps2: ParametricSurface,\n  uStep: number,\n  vStep: number,\n  stepSize: number,\n): Curve[] {\n  const { uMin, uMax, vMin, vMax } = ps1\n  const bounds = uvInAABB2.bind(undefined, ps1)\n  const bounds2 = uvInAABB2.bind(undefined, ps2)\n  const deltaU = uMax - uMin,\n    deltaV = vMax - vMin\n  const sRes = ceil(deltaU / uStep),\n    tRes = ceil(deltaV / vStep)\n  const grid = new Array(sRes * tRes).fill(0)\n  //const printGrid = () => console.log(arrayFromFunction(tRes, i => grid.slice(sRes * i, sRes * (i + 1)).map(v => v ? 'X' : '_').join('')).join('\\n'))\n  const at = (i: int, j: int) => grid[j * sRes + i]\n  const set = (i: int, j: int) =>\n    0 <= i && i < sRes && 0 <= j && j < tRes && (grid[j * sRes + i] = 1)\n  const result: { points: V3[]; tangents: V3[]; st1s: V3[] }[] = []\n  const logTable = []\n  for (let i = 0; i < sRes; i++) {\n    search: for (let j = 0; j < tRes; j++) {\n      if (at(i, j)) continue\n      set(i, j)\n      const startU = uMin + (i + 0.5) * uStep,\n        startV = vMin + (j + 0.5) * vStep\n      // assume point is valid, currently (TODO)\n      const curvePointPPResult = curvePointPP(ps1, ps2, ps1.pUV(startU, startV))\n      if (undefined === curvePointPPResult) {\n        continue search\n      }\n      const {\n        p: startP,\n        st1: { x: u, y: v },\n        st2: { x: u2, y: v2 },\n      } = curvePointPPResult\n      const li = floor((u - uMin) / uStep),\n        lj = floor((v - vMin) / vStep)\n      logTable.push({\n        i,\n        j,\n        li,\n        lj,\n        startU,\n        startV,\n        u,\n        v,\n        \"bounds(u, v)\": bounds(u, v),\n      })\n      if (!(i == li && j == lj) && at(li, lj)) {\n        continue search\n      }\n      set(li, lj)\n      // u, v are now good starting coordinates to use follow algorithm\n      if (bounds(u, v) && bounds2(u2, v2)) {\n        console.log(V(u, v).sce)\n        const subResult = mkPPCurves(\n          ps1,\n          ps2,\n          startP,\n          stepSize,\n          bounds,\n          bounds2,\n        )\n        for (const curveData of subResult) {\n          assert(curveData.st1s.length > 2)\n          for (const { x, y } of curveData.st1s) {\n            const lif = (x - uMin) / uStep,\n              ljf = (y - vMin) / vStep\n            set((lif - 0.5) | 0, (ljf - 0.5) | 0)\n            set((lif - 0.5) | 0, (ljf + 0.5) | 0)\n            set((lif + 0.5) | 0, (ljf - 0.5) | 0)\n            set((lif + 0.5) | 0, (ljf + 0.5) | 0)\n          }\n        }\n        //printGrid()\n        result.push(...subResult)\n      }\n    }\n  }\n  console.table(logTable)\n  for (const { points } of result) {\n    for (let i = 0; i < points.length - 1; i++) {\n      assert(!points[i].equals(points[i + 1]))\n    }\n  }\n  return result.map(({ points, tangents, st1s }) => {\n    return new PPCurve(points, tangents, ps1, ps2, st1s, undefined, stepSize, 1)\n  })\n}\n\nfunction mkPPCurves(\n  ps1: ParametricSurface,\n  ps2: ParametricSurface,\n  startPoint: V3,\n  stepSize: number,\n  bounds1: (u: number, v: number) => boolean,\n  bounds2: (u: number, v: number) => boolean,\n): { points: V3[]; tangents: V3[]; st1s: V3[] }[] {\n  // checkDerivate(s => implicitCurve(s, 0), s => didu(s, 0), -1, 1, 0)\n  // checkDerivate(t => implicitCurve(0, t), t => didv(0, t), -1, 1, 0)\n  const { points, tangents, st1s } = followAlgorithmPP(\n    ps1,\n    ps2,\n    startPoint,\n    stepSize,\n    bounds1,\n    bounds2,\n  )\n  if (points[0].distanceTo(getLast(points)) < stepSize && points.length > 2) {\n    // this is a loop: split it\n    for (let i = 0; i < points.length - 1; i++) {\n      assert(!points[i].equals(points[i + 1]))\n    }\n    const half = floor(points.length / 2)\n    const points1 = points.slice(0, half),\n      points2 = points.slice(half - 1, points.length)\n    const tangents1 = tangents.slice(0, half),\n      tangents2 = tangents.slice(half - 1, tangents.length)\n    const st1s1 = st1s.slice(0, half),\n      st1s2 = st1s.slice(half - 1, tangents.length)\n    tangents2[tangents2.length - 1] = tangents1[0]\n    points2[tangents2.length - 1] = points1[0]\n    st1s2[tangents2.length - 1] = st1s1[0]\n    for (let i = 0; i < points1.length - 1; i++) {\n      assert(!points1[i].equals(points1[i + 1]))\n    }\n    for (let i = 0; i < points2.length - 1; i++) {\n      assert(!points2[i].equals(points2[i + 1]))\n    }\n    return [\n      { points: points1, tangents: tangents1, st1s: st1s1 },\n      { points: points2, tangents: tangents2, st1s: st1s2 },\n    ]\n  } else {\n    // not a loop: check in the other direction\n    const { points: reversePoints } = followAlgorithmPP(\n      ps1,\n      ps2,\n      startPoint,\n      -stepSize,\n      bounds1,\n      bounds2,\n    )\n    const result = followAlgorithmPP(\n      ps1,\n      ps2,\n      getLast(reversePoints),\n      stepSize,\n      bounds1,\n      bounds2,\n    )\n    assert(result.points.length > 2)\n    return [result]\n  }\n}\n\nexport type R2_R = (u: number, v: number) => number\nexport type R2<R> = (u: number, v: number) => R\n\nexport interface AABB2 {\n  uMin: number\n  uMax: number\n  vMin: number\n  vMax: number\n}\n\nexport function AABB2(\n  uMin: number,\n  uMax: number,\n  vMin: number,\n  vMax: number,\n): AABB2 {\n  return { uMin, uMax, vMin, vMax }\n}\n\nexport function uvInAABB2(aabb2: AABB2, u: number, v: number) {\n  return (\n    aabb2.uMin <= u && u <= aabb2.uMax && aabb2.vMin <= v && v <= aabb2.vMax\n  )\n}\n\n/**\n * Finds a point on a 2D implicit curve.\n *\n * @param implicitCurve The curve follows the path where implicitCurve(u, v) is zero.\n * @param startPoint The point from which to start looking (only .x = u and .y = v will be read).\n * @param didu Derivative of implicitCurve in the first parameter.\n * @param didv Derivative of implicitCurve in the second parameter.\n */\nexport function curvePoint(\n  implicitCurve: R2_R,\n  startPoint: V3,\n  didu: R2_R,\n  didv: R2_R,\n): V3 {\n  let p = startPoint\n  for (let i = 0; i < 8; i++) {\n    const fp = implicitCurve(p.x, p.y)\n    const dfpdx = didu(p.x, p.y)\n    const dfpdy = didv(p.x, p.y)\n    const scale = fp / (dfpdx * dfpdx + dfpdy * dfpdy)\n    p = p.minus(new V3(scale * dfpdx, scale * dfpdy, 0))\n  }\n  return p\n}\n\nexport function curvePointMF(\n  mf: MathFunctionR2R,\n  startPoint: V3,\n  steps: int = 8,\n  eps: number = 1 / (1 << 30),\n): V3 {\n  let p = startPoint\n  for (let i = 0; i < steps; i++) {\n    const fp = mf(p.x, p.y)\n    const dfpdx = mf.x(p.x, p.y)\n    const dfpdy = mf.y(p.x, p.y)\n    const scale = fp / (dfpdx * dfpdx + dfpdy * dfpdy)\n    p = p.minus(new V3(scale * dfpdx, scale * dfpdy, 0))\n    if (abs(fp) <= eps) break\n  }\n  return p\n}\n","import {\n  arrayFromFunction,\n  assertInst,\n  assertNumbers,\n  assertVectors,\n  DEG,\n  eq0,\n  hasConstructor,\n  int,\n  M4,\n  mapFilter,\n  NLA_PRECISION,\n  snap0,\n  solveCubicReal2,\n  TAU,\n  toSource,\n  V,\n  V3,\n} from \"ts3dutils\"\nimport { Mesh, pushQuad } from \"tsgl\"\n\nimport {\n  BezierCurve,\n  ConicSurface,\n  Curve,\n  EllipseCurve,\n  EllipsoidSurface,\n  HyperbolaCurve,\n  ISInfo,\n  L3,\n  P3,\n  ParabolaCurve,\n  PlaneSurface,\n  ProjectedCurveSurface,\n  Surface,\n} from \"../index\"\nimport { abs, acos, acosh, sign, sqrt } from \"../math\"\n\nexport abstract class XiEtaCurve extends Curve {\n  readonly normal: V3\n  readonly matrix: M4\n  readonly matrixInverse: M4;\n  readonly [\"constructor\"]: typeof XiEtaCurve &\n    (new (center: V3, f1: V3, f2: V3, tMin: number, tMax: number) => this)\n\n  constructor(\n    readonly center: V3,\n    readonly f1: V3,\n    readonly f2: V3,\n    readonly tMin: number,\n    readonly tMax: number,\n  ) {\n    super(tMin, tMax)\n    assertVectors(center, f1, f2)\n    this.normal = f1.cross(f2)\n    if (!this.normal.likeO()) {\n      this.normal = this.normal.unit()\n      this.matrix = M4.forSys(f1, f2, this.normal, center)\n      this.matrixInverse = this.matrix.inversed()\n    } else {\n      this.matrix = M4.forSys(f1, f2, f1.unit(), center)\n      const f1p = f1.getPerpendicular()\n      // prettier-ignore\n      this.matrixInverse = new M4(\n        1, 0, 0, 0,\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        0, 0, 0, 1).times(M4.forSys(f1, f1p, f1.cross(f1p), center).inversed())\n    }\n  }\n\n  /**\n   * Intersection of the unit curve with the line ax + by = c.\n   */\n  static intersectionUnitLine(\n    a: number,\n    b: number,\n    c: number,\n    tMin?: number,\n    tMax?: number,\n  ): number[] {\n    throw new Error(\"abstract\")\n  }\n\n  /**\n   * Returns a new EllipseCurve representing an ellipse parallel to the XY-plane\n   * with semi-major/minor axes parallel t the X and Y axes.\n   *\n   * @param a length of the axis parallel to X axis.\n   * @param b length of the axis parallel to Y axis.\n   * @param center center of the ellipse.\n   */\n  static forAB(a: number, b: number, center: V3 = V3.O): XiEtaCurve {\n    return new (this as any)(center, V(a, 0, 0), V(0, b, 0))\n  }\n\n  static XYLCValid(pLC: V3): boolean {\n    throw new Error(\"abstract\")\n  }\n\n  static XYLCPointT(pLC: V3, tMin?: number, tMax?: number): number {\n    throw new Error(\"abstract\")\n  }\n\n  static unitIsInfosWithLine(\n    anchorLC: V3,\n    dirLC: V3,\n    anchorWC: V3,\n    dirWC: V3,\n    tMin?: number,\n    tMax?: number,\n  ): ISInfo[] {\n    throw new Error(\"abstract\")\n  }\n\n  addToMesh(\n    mesh: Mesh & { TRIANGLES: int[]; normals: V3[] },\n    res: int = 4,\n    radius: number = 0,\n    pointStep = 1,\n  ): void {\n    const baseNormals = arrayFromFunction(res, (i) =>\n      V3.polar(1, (TAU * i) / res),\n    )\n    const baseVertices = arrayFromFunction(res, (i) =>\n      V3.polar(radius, (TAU * i) / res),\n    )\n    const inc = this.tIncrement\n    const start = Math.ceil((this.tMin + NLA_PRECISION) / inc)\n    const end = Math.floor((this.tMax - NLA_PRECISION) / inc)\n    for (let i = start; i <= end; i += pointStep) {\n      const t = i * inc\n      const start = mesh.vertices.length\n      if (0 !== i) {\n        for (let j = 0; j < res; j++) {\n          pushQuad(\n            mesh.TRIANGLES,\n            true,\n            start - res + j,\n            start + j,\n            start - res + ((j + 1) % res),\n            start + ((j + 1) % res),\n          )\n        }\n      }\n      const point = this.at(t),\n        tangent = this.tangentAt(t)\n      const matrix = M4.forSys(\n        this.normal,\n        tangent.cross(this.normal),\n        tangent,\n        point,\n      )\n      mesh.normals.push(...matrix.transformedVectors(baseNormals))\n      mesh.vertices.push(...matrix.transformedPoints(baseVertices))\n    }\n  }\n\n  getConstructorParameters(): any[] {\n    return [this.center, this.f1, this.f2]\n  }\n\n  isInfosWithCurve(curve: Curve): ISInfo[] {\n    if (curve instanceof L3) {\n      return this.isInfosWithLine(\n        curve.anchor,\n        curve.dir1,\n        this.tMin,\n        this.tMax,\n        curve.tMin,\n        curve.tMax,\n      )\n    }\n    if (curve instanceof BezierCurve) {\n      return this.isInfosWithBezier(curve)\n    }\n    if (curve instanceof XiEtaCurve) {\n      if (!this.normal.isParallelTo(curve.normal)) {\n        return mapFilter(this.isTsWithPlane(curve.getPlane()), (tThis) => {\n          const p = this.at(tThis)\n          if (curve.containsPoint(p)) {\n            return { tThis, tOther: curve.pointT(p), p }\n          }\n          return undefined\n        })\n      }\n    }\n    return super.isInfosWithCurve(curve)\n  }\n\n  transform(m4: M4) {\n    return new this.constructor(\n      m4.transformPoint(this.center),\n      m4.transformVector(this.f1),\n      m4.transformVector(this.f2),\n      this.tMin,\n      this.tMax,\n    ) as this\n  }\n\n  equals(obj: any): obj is this {\n    return (\n      this == obj ||\n      (undefined != obj &&\n        this.constructor == obj.constructor &&\n        this.center.equals(obj.center) &&\n        this.f1.equals(obj.f1) &&\n        this.f2.equals(obj.f2))\n    )\n  }\n\n  hashCode(): int {\n    let hashCode = 0\n    hashCode = hashCode * 31 + this.center.hashCode()\n    hashCode = hashCode * 31 + this.f1.hashCode()\n    hashCode = hashCode * 31 + this.f2.hashCode()\n    return hashCode | 0\n  }\n\n  likeCurve(curve: Curve): boolean {\n    return (\n      hasConstructor(curve, this.constructor) &&\n      this.center.like(curve.center) &&\n      this.f1.like(curve.f1) &&\n      this.f2.like(curve.f2)\n    )\n  }\n\n  normalP(t: number): V3 {\n    return this.tangentAt(t).cross(this.normal)\n  }\n\n  getPlane(): P3 {\n    return P3.normalOnAnchor(this.normal, this.center)\n  }\n\n  isTsWithPlane(planeWC: P3): number[] {\n    assertInst(P3, planeWC)\n    /*\n\t\t this: x = center + f1 * cos t + f2 * sin t  (1)\n\t\t plane:\n\t\t n := plane.normal1\n\t\t n DOT x == plane.w           (2)\n\t\t plane defined by f1/f2\n\t\t x = center + f1 * xi + f2 * eta         (3)\n\t\t intersection plane and planef1/f2:\n\t\t insert (3) into (2):\n\t\t n DOT center + n DOT f1 * xi + n DOT f2 * eta = plane.w | -n DOT center\n\t\t n DOT f1 * xi + n DOT f2 * eta = plane.w - n DOT center (4)\n\t\t points on ellipse have additional condition\n\t\t eta * eta + xi * xi = 1 (5)\n\t\t g1 := n DOT f1\n\t\t g2 := n DOT f2\n\t\t g3 := w - n DOT center\n\t\t solve system (5)/(6)\n\t\t g1 * xi + g2 * eta = g3 (6)\n\t\t */\n    if (planeWC.normal1.isParallelTo(this.normal)) {\n      return []\n    }\n    const n = planeWC.normal1,\n      w = planeWC.w,\n      center = this.center,\n      f1 = this.f1,\n      f2 = this.f2,\n      g1 = n.dot(f1),\n      g2 = n.dot(f2),\n      g3 = w - n.dot(center)\n\n    return this.constructor.intersectionUnitLine(\n      g1,\n      g2,\n      g3,\n      this.tMin,\n      this.tMax,\n    )\n  }\n\n  pointT(p: V3): number {\n    assertVectors(p)\n    const pLC = this.matrixInverse.transformPoint(p)\n    return this.constructor.XYLCPointT(pLC)\n  }\n\n  containsPoint(p: V3): boolean {\n    const pLC = this.matrixInverse.transformPoint(p)\n    return (\n      eq0(pLC.z) &&\n      this.isValidT(this.constructor.XYLCPointT(pLC, this.tMin, this.tMax))\n    )\n  }\n\n  isInfosWithLine(\n    anchorWC: V3,\n    dirWC: V3,\n    tMin: number = this.tMin,\n    tMax: number = this.tMax,\n    lineMin = -100000,\n    lineMax = 100000,\n  ): ISInfo[] {\n    const anchorLC = this.matrixInverse.transformPoint(anchorWC)\n    const dirLC = this.matrixInverse.transformVector(dirWC)\n    if (eq0(dirLC.z)) {\n      // local line parallel to XY-plane\n      if (eq0(anchorLC.z)) {\n        // local line lies in XY-plane\n        return this.constructor.unitIsInfosWithLine(\n          anchorLC,\n          dirLC,\n          anchorWC,\n          dirWC,\n          tMin,\n          tMax,\n        )\n      }\n    } else {\n      // if the line intersects the XY-plane in a single point, there can be an intersection there\n      // find point, then check if distance from circle = 1\n      const otherTAtZ0 = anchorLC.z / dirLC.z\n      const isp = dirLC.times(otherTAtZ0).plus(anchorLC)\n      if (this.constructor.XYLCValid(isp)) {\n        // point lies on unit circle\n        return [\n          {\n            tThis: this.constructor.XYLCPointT(isp),\n            tOther: otherTAtZ0,\n            p: anchorWC.plus(dirWC.times(otherTAtZ0)),\n          },\n        ]\n      }\n    }\n    return []\n  }\n\n  isTsWithSurface(surface: Surface): number[] {\n    if (surface instanceof PlaneSurface) {\n      return this.isTsWithPlane(surface.plane)\n    } else if (surface instanceof EllipsoidSurface) {\n      const isEllipses = surface.isCurvesWithPlane(this.getPlane())\n      return isEllipses\n        .flatMap((isEllipse) => this.isInfosWithCurve(isEllipse))\n        .filter((info) => surface.containsPoint(info.p))\n        .map((info) => info.tThis)\n    } else if (\n      surface instanceof ProjectedCurveSurface ||\n      surface instanceof ConicSurface\n    ) {\n      return surface\n        .isCurvesWithPlane(this.getPlane())\n        .flatMap((curve) => this.isInfosWithCurve(curve))\n        .map((info) => info.tThis)\n    } else {\n      throw new Error()\n    }\n  }\n\n  isInfosWithBezier(bezierWC: BezierCurve): ISInfo[] {\n    const bezierLC = bezierWC.transform(this.matrixInverse)\n    if (new PlaneSurface(P3.XY).containsCurve(bezierLC)) {\n      return this.isInfosWithBezier2D(bezierWC)\n    } else {\n      const infos = mapFilter(bezierLC.isTsWithPlane(P3.XY), (tOther) => {\n        const pLC = bezierLC.at(tOther)\n        if (this.constructor.XYLCValid(pLC)) {\n          return {\n            tOther: tOther,\n            p: bezierWC.at(tOther),\n            tThis: this.constructor.XYLCPointT(pLC),\n          }\n        }\n        return undefined\n      })\n      return infos\n    }\n  }\n\n  isInfosWithBezier2D(\n    bezierWC: BezierCurve,\n    sMin: number = bezierWC.tMin,\n    sMax: number = bezierWC.tMax,\n  ): ISInfo[] {\n    return Curve.ispsRecursive(this, this.tMin, this.tMax, bezierWC, sMin, sMax)\n  }\n\n  isOrthogonal(): boolean {\n    return this.f1.isPerpendicularTo(this.f2)\n  }\n\n  at2(xi: number, eta: number): V3 {\n    assertNumbers(xi, eta)\n    // center + f1 xi + f2 eta\n    return this.center.plus(this.f1.times(xi)).plus(this.f2.times(eta))\n  }\n\n  debugInfo() {\n    return {\n      points: [\n        this.center,\n        this.at2(0.5, 0),\n        this.at2(0, 1 / 3),\n        this.at2(0, 2 / 3),\n      ],\n      lines: [this.center, this.at2(0, 1), this.center, this.at2(1, 0)],\n    }\n  }\n}\n\n/**\n * Transforms the unit 4d parabola\n * P(t) = t² (0, 1, 0, 0) + t (1, 0, 0, 0) + (0, 0, 0, 1) using m and projects\n * the result into 3d. This is used for the transform4 implementation of conics.\n * The parabola may not cross the vanishing plane of m in the interval\n * [tMin, tMax], as that would result in discontinuities.\n */\nexport function parabola4Projection(\n  m: M4,\n  tMin: number,\n  tMax: number,\n): L3 | HyperbolaCurve | ParabolaCurve | EllipseCurve {\n  const w1 = m.m[12]\n  const w2 = m.m[13]\n  const wc = m.m[15]\n  // if the 4d parabola crosses the vanishing plane, it will lead to multiple/infinite hyperbolas, both of which we\n  // want to avoid. Hence, we must check that the entire interval [tMin, tMax] is on one side of the vanishing plane.\n  // Checking tMax, tMin and the extremas is enough.\n  const extremas = solveCubicReal2(0, w2, w1, wc)\n  const wx0 = (x: number) =>\n    Number.isFinite(x) ? snap0(x ** 2 * w2 + x * w1 + wc) : sign(w2) * Infinity\n  if (\n    wx0(tMin) * wx0(tMax) < 0 ||\n    extremas.some((x) => wx0(x) * (wx0(tMin) + wx0(tMax)) < 0)\n  ) {\n    console.log(m.str)\n    throw new Error(\n      \"The entire interval must be on one side of the vanishing plane. P=\" +\n        toSource(P3.vanishingPlane(m)),\n    )\n  }\n  if (eq0(wc)) {\n    // the following matrix maps a curve C onto itself, with the parameter being inverted:\n    // C2(t) = C(-1/t). This makes C(0) a real value, which is necessary for the projection calculation.\n    // the sign inversion is so the tangent direction does not change.\n    // prettier-ignore\n    const mm = new M4(\n      -1, 0, 0, 0,\n       0, 0, 0, 1,\n       0, 0, 1, 0,\n       0, 1, 0, 0,\n    )\n    if (!eq0(w2)) {\n      return parabola4Projection(m.times(mm), -1 / tMin, -1 / tMax)\n    }\n    // wc == w2 == 0 => degenerates to a line:\n    // C(t) = (t² f2 + t f1 + c) / (t w1)\n    // C(t) = (t f2 + f1 + c) / (t w2 + w1)\n    // substitute t = (1/s - w1) / w2\n    // C(s) = f2 / w2 + s (f1 - f2 w1 / w2), which is a line\n    // we can multiply the direction vector by w2 to avoid divisions:\n    // C(t) = f2 / w2 + s (f1 w2 - f2 w1)\n    const f1 = m.col(0)\n    const f2 = m.col(1)\n    return L3.anchorDirection(\n      f2.p3(),\n      f1.V3().times(f2.w).minus(f2.V3().times(f1.w)),\n    )\n  }\n  {\n    // ensure that the bottom-right value = 1. this does not change the 3d result.\n    m.m[15] !== 1 && (m = m.divScalar(m.m[15]))\n    const w2 = m.m[13]\n    const w1 = m.m[12]\n    const wc = m.m[15]\n    // we want to split m into X * P, such that X is a transformation with no projective component (first three\n    // values of the bottom row = 0), which can be handled by the usual .transform() method, and P which has only a\n    // projective component (only the last row differs from the identity matrix). This simplifies the following\n    // calculation. X * P = m => X * P * P^-1 = m * P^-1 => X = m * P^-1\n    // prettier-ignore\n    const Pinv = new M4(\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      -m.m[12], -m.m[13], -m.m[14], 1)\n    const X = m.times(Pinv)\n\n    // P'(t) = 0 is true for t = 0 and t1. The center is in between P(0) and P(t1), or P(t1) / 2, as P(0) = O\n    const delta = 4 * w2 * wc - w1 ** 2\n    const center = new V3((-w1 * wc) / delta, (2 * wc ** 2) / delta, 0)\n    // f2 is parallel to P'(0), i.e. horizontal. Solve Py(t2) = Cy = Py(t1) / 2 for t2 and simplify\n    // f2x = Px(t2) - Cx = Px(t2) - Px(t1) / 2 to get the x-component of f2:\n    const f2x = 1 / sqrt(abs(delta)) / wc\n    const f2 = new V3(f2x, 0, 0)\n    let result\n    if (eq0(delta)) {\n      result = new ParabolaCurve(V3.O, V3.X, V3.Y, tMin, tMax)\n    } else if (0 < delta) {\n      const tMapInv = (t: number) => {\n        const wt = t ** 2 * w2 + t * w1 + wc\n        const xi =\n          1 -\n          (delta / 2 / wc ** 2) * (Number.isFinite(t) ? t ** 2 / wt : 1 / w2)\n        const eta =\n          (t * 2 * wc ** 2 - t ** 2 * delta) / wt / 2 / wc ** 2 -\n          (2 * w1 * wc) / delta\n        const xx = acos(xi)\n        const p = Number.isFinite(t)\n          ? new V3(t, t ** 2, 0).div(wt)\n          : new V3(0, 1 / w2, 0)\n        const pLC = M4.forSys(center.negated(), f2, V3.Z, center)\n          .inversed()\n          .transformPoint(p)\n        const angle = pLC.angleXY()\n        if (t > 0 && pLC.y < 0) {\n          return angle + TAU\n        } else if (t < 0 && pLC.y > 0) {\n          return angle - TAU\n        }\n        return angle\n      }\n      result = EllipseCurve.andFixTs(\n        center,\n        center.negated(),\n        f2,\n        tMapInv(tMin),\n        tMapInv(tMax),\n      )\n    } else {\n      const tMapInv = (t: number) =>\n        sign(t) *\n        acosh(\n          1 -\n            (delta / 2 / wc ** 2) *\n              (Number.isFinite(t)\n                ? t ** 2 / (t ** 2 * w2 + t * w1 + wc)\n                : 1 / w2),\n        )\n      result = new HyperbolaCurve(\n        center,\n        center.negated(),\n        f2,\n        tMapInv(tMin),\n        tMapInv(tMax),\n      )\n    }\n    return result.transform(X)\n  }\n}\n","import {\n  arrayFromFunction,\n  arrayHashCode,\n  arrayRange,\n  assert,\n  assertVectors,\n  bisect,\n  clamp,\n  eq,\n  eq0,\n  int,\n  M4,\n  TAU,\n  Tuple3,\n  V3,\n  withMax,\n} from \"ts3dutils\"\nimport { MeshWith, pushQuad } from \"tsgl\"\n\nimport { Curve, ISInfo, L3, PICurve, Surface } from \"../index\"\nimport { ceil, floor, max, min } from \"../math\"\n\nexport abstract class ImplicitCurve extends Curve {\n  constructor(\n    readonly points: ReadonlyArray<V3>,\n    readonly tangents: ReadonlyArray<V3>,\n    readonly dir: number = 1,\n    readonly generator?: string,\n    tMin: number = 1 == dir ? 0 : -(points.length - 1),\n    tMax: number = 1 == dir ? points.length - 1 : 0,\n  ) {\n    super(tMin, tMax)\n    assert(points.length > 2)\n    assert(0 <= tMin && tMin <= points.length - 1, tMin, points.length)\n    assert(0 <= tMax && tMax <= points.length - 1, tMax, points.length)\n  }\n\n  likeCurve(curve: Curve): boolean {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  toSource(rounder: (x: number) => number = (x) => x): string {\n    return this.generator || super.toSource(rounder)\n  }\n\n  containsPoint(p: V3): boolean {\n    assertVectors(p)\n    return !isNaN(this.pointT(p))\n  }\n\n  equals(obj: any): boolean {\n    return (\n      this == obj ||\n      (Object.getPrototypeOf(obj) == PICurve.prototype &&\n        this.points[0].equals(obj.points[0]) &&\n        this.tangents[0].equals(obj.tangents[0]))\n    )\n  }\n\n  hashCode(): int {\n    return arrayHashCode([this.points[0], this.tangents[0]])\n  }\n\n  tangentP(pWC: V3): V3 {\n    assertVectors(pWC)\n    assert(\n      this.containsPoint(pWC),\n      \"this.containsPoint(pWC)\" + this.containsPoint(pWC),\n    )\n    const t = this.pointT(pWC)\n    return this.tangentAt(t)\n  }\n\n  tangentAt(t: number): V3 {\n    t = clamp(t, this.tMin, this.tMax)\n    return V3.lerp(this.tangents[floor(t)], this.tangents[ceil(t)], t % 1)\n  }\n\n  at(t: number): V3 {\n    assert(isFinite(t))\n    return V3.lerp(this.points[floor(t)], this.points[ceil(t)], t % 1)\n  }\n\n  getConstructorParameters(): any[] {\n    throw new Error()\n  }\n\n  roots(): [number[], number[], number[]] {\n    const allTs = arrayRange(0, this.points.length)\n    return [allTs, allTs, allTs]\n  }\n\n  /**\n   * @param mesh\n   * @param res\n   * @param radius default to 0. Use the shader to achieve dynamic scaling.\n   * @param pointStep\n   */\n  addToMesh(\n    mesh: MeshWith<\"normals\" | \"TRIANGLES\">,\n    res: int = 4,\n    radius: number = 0,\n    pointStep = 1,\n  ): void {\n    const baseNormals = arrayFromFunction(res, (i) =>\n      V3.polar(1, (TAU * i) / res),\n    )\n    const baseVertices = arrayFromFunction(res, (i) =>\n      V3.polar(radius, (TAU * i) / res),\n    )\n    let prevTangent = V3.Z,\n      prevMatrix = M4.IDENTITY\n    for (let i = 0; i < this.points.length; i += pointStep) {\n      const start = mesh.vertices.length\n      if (0 !== i) {\n        for (let j = 0; j < res; j++) {\n          pushQuad(\n            mesh.TRIANGLES,\n            true,\n            start - res + j,\n            start + j,\n            start - res + ((j + 1) % res),\n            start + ((j + 1) % res),\n          )\n        }\n      }\n      const point = this.points[i],\n        tangent = this.tangents[i]\n      const tangentMatrix = M4.rotateAB(prevTangent, tangent).times(prevMatrix)\n      mesh.normals.push(...tangentMatrix.transformedVectors(baseNormals))\n      const baseMatrix = M4.translate(point).times(tangentMatrix)\n      mesh.vertices.push(...baseMatrix.transformedPoints(baseVertices))\n      prevTangent = tangent\n      prevMatrix = tangentMatrix\n    }\n  }\n\n  rootsApprox() {\n    const roots: Tuple3<number[]> = [[], [], []]\n    const points = this.points\n    let lastDiff = points[1].minus(points[0])\n    for (let i = 2; i < points.length; i++) {\n      const diff = points[i].minus(points[i - 1])\n      for (let dim = 0; dim < 3; dim++) {\n        if (Math.sign(lastDiff.e(dim)) != Math.sign(diff.e(dim))) {\n          roots[dim].push(i)\n        }\n      }\n      lastDiff = diff\n    }\n    return roots\n  }\n\n  pointT(pWC: V3): number {\n    const startT = withMax(\n      arrayRange(floor(this.tMin), ceil(this.tMax), 1),\n      (t) => -pWC.distanceTo(this.points[t]),\n    )\n    if (undefined === startT) throw new Error()\n    if (this.points[startT].like(pWC)) return startT\n    const a = max(0, startT - 1),\n      b = min(this.points.length - 1, startT + 1)\n    const tangent = this.tangentAt(startT)\n    const f = (t: number) => this.at(t).to(pWC).dot(tangent)\n    // const df = (t: number) => -this.tangentAt(clamp(t, 0, this.points.length - 1)).dot(tangent)\n    //checkDerivate(f, df, 0, this.points.length - 2, 3)\n    const t = bisect(f, a, b, 32)\n    if (!isFinite(t) || !eq0(this.at(t).distanceTo(pWC))) {\n      return NaN\n    }\n    return t\n  }\n}\n\nImplicitCurve.prototype.tIncrement = 1\n\n/**\n * isInfosWithLine for an ImplicitCurve defined as the intersection of two surfaces.\n */\nexport function surfaceIsICurveIsInfosWithLine(\n  this: ImplicitCurve,\n  surface1: Surface,\n  surface2: Surface,\n  anchorWC: V3,\n  dirWC: V3,\n  tMin?: number | undefined,\n  tMax?: number | undefined,\n  lineMin?: number | undefined,\n  lineMax?: number | undefined,\n): ISInfo[] {\n  const line = new L3(anchorWC, dirWC.unit())\n  const psTs = surface1.isTsForLine(line)\n  const isTs = surface2.isTsForLine(line)\n  const commonTs = psTs.filter((psT) => isTs.some((isT) => eq(psT, isT)))\n  const commonTInfos = commonTs.map((t) => ({\n    tThis: 0,\n    tOther: t / dirWC.length(),\n    p: line.at(t),\n  }))\n  const result = commonTInfos.filter((info) => this.containsPoint(info.p))\n  result.forEach((info) => (info.tThis = this.pointT(info.p)))\n  return result\n}\n","import {\n  arrayFromFunction,\n  assert,\n  assertf,\n  assertInst,\n  assertNever,\n  assertNumbers,\n  assertVectors,\n  between,\n  combinations,\n  concatenated,\n  eq,\n  eq0,\n  fuzzyUniques,\n  hasConstructor,\n  int,\n  lerp,\n  M4,\n  MINUS,\n  newtonIterate1d,\n  newtonIterate2dWithDerivatives,\n  NLA_PRECISION,\n  solveCubicReal2,\n  V,\n  V3,\n  withMax,\n} from \"ts3dutils\"\n\nimport {\n  Curve,\n  CylinderSurface,\n  EllipseCurve,\n  ISInfo,\n  L3,\n  NURBS,\n  P3,\n  R2_R,\n  Surface,\n} from \"../index\"\n\nimport { abs, cos, PI, sin } from \"../math\"\n\n/**\n * Bezier curve with degree 3.\n */\nexport class BezierCurve extends Curve {\n  /**\n   * https://en.wikipedia.org/wiki/Cubic_function#/media/File:Graph_of_cubic_polynomial.svg\n   */\n  static readonly EX2D = BezierCurve.graphXY(2, -3, -3, 2)\n  static readonly EX3D = new BezierCurve(\n    V3.O,\n    V(-0.1, -1, 1),\n    V(1.1, 1, 1),\n    V3.X,\n  )\n  static readonly QUARTER_CIRCLE = BezierCurve.approximateUnitArc(PI / 2)\n  readonly p0: V3\n  readonly p1: V3\n  readonly p2: V3\n  readonly p3: V3\n\n  constructor(\n    p0: V3,\n    p1: V3,\n    p2: V3,\n    p3: V3,\n    tMin: number = -0.1,\n    tMax: number = 1.1,\n  ) {\n    super(tMin, tMax)\n    assertVectors(p0, p1, p2, p3)\n    assert(isFinite(tMin) && isFinite(tMax))\n    //assert(!L3.throughPoints(p0, p3).containsPoint(p1) || !L3.throughPoints(p0, p3).containsPoint(p2))\n    this.p0 = p0\n    this.p1 = p1\n    this.p2 = p2\n    this.p3 = p3\n  }\n\n  get points(): V3[] {\n    return [this.p0, this.p1, this.p2, this.p3]\n  }\n\n  /**\n   * Returns a new BezierCurve with curve.at(x) == V(x, ax³ + bx² + cx + d, 0).\n   */\n  static graphXY(\n    a: number,\n    b: number,\n    c: number,\n    d: number,\n    tMin?: number,\n    tMax?: number,\n  ): BezierCurve {\n    // d = p0y\n    // c = -3 p0y + 3 p1y => p1y = c/3 + p0y\n    // b = 3 p0y - 6 p1y + 3 p2y => p2y = b/3 - p0y + 2 p1y\n    // a = -p0y + 3 p1y -3 p2y + p3y => p3y = a + p0y - 3 p1y + 3 p2y\n    const p0y = d\n    const p1y = c / 3 + p0y\n    const p2y = b / 3 - p0y + 2 * p1y\n    const p3y = a + p0y - 3 * p1y + 3 * p2y\n    return new BezierCurve(\n      V(0, p0y),\n      V(1 / 3, p1y),\n      V(2 / 3, p2y),\n      V(1, p3y),\n      tMin,\n      tMax,\n    )\n  }\n\n  static quadratic(\n    a: V3,\n    b: V3,\n    c: V3,\n    tMin: number = 0,\n    tMax: number = 1,\n  ): BezierCurve | L3 {\n    const line = L3.throughPoints(a, c)\n    if (line.containsPoint(b)) {\n      return line\n    } else {\n      // p1 = 1/3 a + 2/3 b\n      // p2 = 1/3 c + 2/3 b\n      return new BezierCurve(\n        a,\n        b.times(2).plus(a).div(3),\n        b.times(2).plus(c).div(3),\n        c,\n        tMin,\n        tMax,\n      )\n    }\n  }\n\n  /**\n   * Returns a bezier curve which approximates a CCW unit circle arc starting at V3.X of angle phi\n   * phi <= PI / 2 is recommended\n   *\n   * Formula from here: https://pomax.github.io/bezierinfo/#circles_cubic\n   */\n  static approximateUnitArc(phi: number): BezierCurve {\n    const f = (4 / 3) * Math.tan(phi / 4)\n    return new BezierCurve(\n      V3.X,\n      new V3(1, f, 0),\n      new V3(cos(phi) + f * sin(phi), sin(phi) - f * cos(phi), 0),\n      V3.sphere(phi, 0),\n      0,\n      1,\n    )\n  }\n\n  getConstructorParameters(): any[] {\n    return [this.p0, this.p1, this.p2, this.p3]\n  }\n\n  at(t: number): V3 {\n    // = s^3 p0 + 3 s^2 t p1 + 3 s t^2 p2 + t^3 p3\n    assertNumbers(t)\n    const p0 = this.p0,\n      p1 = this.p1,\n      p2 = this.p2,\n      p3 = this.p3\n    const s = 1 - t,\n      c0 = s * s * s,\n      c1 = 3 * s * s * t,\n      c2 = 3 * s * t * t,\n      c3 = t * t * t\n    return new V3(\n      p0.x * c0 + p1.x * c1 + p2.x * c2 + p3.x * c3,\n      p0.y * c0 + p1.y * c1 + p2.y * c2 + p3.y * c3,\n      p0.z * c0 + p1.z * c1 + p2.z * c2 + p3.z * c3,\n    )\n  }\n\n  /**\n   * s := (1 - t)\n   * at(t) := s³ p0 + 3 s² t p1 + 3 s t² p2 + t³ p3\n   * tangent(t) := 3 s² (p1 - p0) + 6 s t (p2 - p1) + 3 t² (p3 - p2)\n   *            := 3 (1 - t)² (p1 - p0) + 6 (1 - t) t (p2 - p1) + 3 t² (p3 - p2)\n   *            := 3 (1 - 2 t + t²) (p1 - p0) + 6 (t - t²) (p2 - p1) + 3 t² (p3 - p2)\n   *            := (3 (p3 - p2) - 6 (p2 - p1) + 3 (p1 - p0)) t²*\n   *                + (-6 (p1 - p0) + (p2 - p1)) t\n   *                + 3 (p1 - p0)\n   */\n  tangentAt(t: number): V3 {\n    assertNumbers(t)\n    const p0 = this.p0,\n      p1 = this.p1,\n      p2 = this.p2,\n      p3 = this.p3\n    const s = 1 - t,\n      c01 = 3 * s * s,\n      c12 = 6 * s * t,\n      c23 = 3 * t * t\n    return new V3(\n      (p1.x - p0.x) * c01 + (p2.x - p1.x) * c12 + (p3.x - p2.x) * c23,\n      (p1.y - p0.y) * c01 + (p2.y - p1.y) * c12 + (p3.y - p2.y) * c23,\n      (p1.z - p0.z) * c01 + (p2.z - p1.z) * c12 + (p3.z - p2.z) * c23,\n    )\n  }\n\n  ddt(t: number): V3 {\n    assertNumbers(t)\n    const p0 = this.p0,\n      p1 = this.p1,\n      p2 = this.p2,\n      p3 = this.p3\n    const c012 = 6 * (1 - t),\n      c123 = 6 * t\n    return new V3(\n      (p2.x - 2 * p1.x + p0.x) * c012 + (p3.x - 2 * p2.x + p1.x) * c123,\n      (p2.y - 2 * p1.y + p0.y) * c012 + (p3.y - 2 * p2.y + p1.y) * c123,\n      (p2.z - 2 * p1.z + p0.z) * c012 + (p3.z - 2 * p2.z + p1.z) * c123,\n    )\n  }\n\n  normalP(t: number): V3 {\n    const tangent = this.tangentAt(t)\n    const rot = tangent.cross(this.ddt(t))\n    return rot.cross(tangent)\n  }\n\n  isTsWithPlane(planeWC: P3) {\n    assertInst(P3, planeWC)\n    /*\n\t\t We are solving for t:\n\t\t n := plane.normal1\n\t\t this.at(t) DOT n == plane.w // according to plane definition\n\t\t (a t³ + b t² + c t + d) DOT n == plane.w // bezier curve as cubic equation\n\t\t (a DOT n) t³ + (b DOT n) t³ + (c DOT n) t + d DOT n - plane.w == 0 // multiply out DOT n, minus plane.w\n\t\t */\n\n    const { p0, p1, p2, p3 } = this\n    const n = planeWC.normal1\n    const a = p1.minus(p2).times(3).minus(p0).plus(p3)\n    const b = p0.plus(p2).times(3).minus(p1.times(6))\n    const c = p1.minus(p0).times(3)\n    const d = p0\n\n    return solveCubicReal2(\n      a.dot(n),\n      b.dot(n),\n      c.dot(n),\n      d.dot(n) - planeWC.w,\n    ).filter((t) => between(t, this.tMin, this.tMax))\n  }\n\n  isTsWithSurface(surfaceWC: Surface): number[] {\n    if (surfaceWC instanceof CylinderSurface) {\n      const projPlane = new P3(surfaceWC.dir.unit(), 0)\n      const projThis = this.project(projPlane)\n      const projEllipse = surfaceWC.baseCurve.project(projPlane)\n      return projEllipse\n        .isInfosWithBezier2D(projThis)\n        .map((info) => info.tOther)\n    }\n    return super.isTsWithSurface(surfaceWC)\n  }\n\n  likeCurve(curve: Curve): boolean {\n    return (\n      this == curve ||\n      (hasConstructor(curve, BezierCurve) &&\n        this.p0.like(curve.p0) &&\n        this.p1.like(curve.p1) &&\n        this.p2.like(curve.p2) &&\n        this.p3.like(curve.p3))\n    )\n  }\n\n  equals(obj: any): boolean {\n    return (\n      this == obj ||\n      (hasConstructor(obj, BezierCurve) &&\n        this.p0.equals(obj.p0) &&\n        this.p1.equals(obj.p1) &&\n        this.p2.equals(obj.p2) &&\n        this.p3.equals(obj.p3))\n    )\n  }\n\n  hashCode(): int {\n    let hashCode = 0\n    hashCode = hashCode * 31 + this.p0.hashCode()\n    hashCode = hashCode * 31 + this.p1.hashCode()\n    hashCode = hashCode * 31 + this.p2.hashCode()\n    hashCode = hashCode * 31 + this.p3.hashCode()\n    return hashCode | 0\n  }\n\n  /**\n   * Checks if this curve is colinear to the passed curve, i.e.\n   * for every t:number there exists a s:number with this.at(t) = curve.at(s)\n   */\n  isColinearTo(curve: BezierCurve): boolean {\n    if (this === curve || this.likeCurve(curve)) return true\n    if (!(curve instanceof BezierCurve)) return false\n    // first, find out where/if curve.p0 and curve.p3 are on this\n    // then split this at curve.p0 --> curve.p3 to compare points p1 and p2\n    let curveP0T, curveP3T\n    // assign in if condition to exploit short-circuit\n    if (\n      isNaN((curveP0T = this.pointT(curve.p0))) ||\n      isNaN((curveP3T = this.pointT(curve.p3)))\n    ) {\n      return false\n    }\n    let thisSplit\n    if (eq(1, curveP0T)) {\n      // this.split(curveP0T).right is degenerate in this case, so we need to handle it separately\n\n      // this.split(curveP3T): 0 --> curveP3T --> 1\n      // .right: curveP3T --> 1\n      // .reversed(): 1 --> curveP3T\n      thisSplit = this.split(curveP3T)[1].reversed()\n    } else {\n      // curveP3T describes the point on this\n      // adjust it so it describes the same point on this.split(curveP0T).right\n      // this:                       0           p0t        p3t      1\n      //                             |            |          |       |\n      // this.split(curveP0T).right:              0        p3tad     1\n      const curveP3Tadjusted = (curveP3T - curveP0T) / (1 - curveP0T)\n      thisSplit = this.split(curveP0T)[1].split(curveP3Tadjusted)[0]\n    }\n\n    return curve.likeCurve(thisSplit)\n  }\n\n  selectPart(t0: number, t1: number) {\n    const t1Adjusted = (t1 - t0) / (1 - t0)\n    return this.split(t0)[1].split(t1Adjusted)[0]\n  }\n\n  reversed(): BezierCurve {\n    return new BezierCurve(\n      this.p3,\n      this.p2,\n      this.p1,\n      this.p0,\n      1 - this.tMax,\n      1 - this.tMin,\n    )\n  }\n\n  getCoefficients() {\n    const { p0, p1, p2, p3 } = this\n    // calculate cubic equation coefficients\n    // a t³ + b t² + c t + d = 0\n    // multiplying out the cubic Bézier curve equation gives:\n    // a = -p0 + 3 p1 - 3 p2 + p3\n    // b = 3 p0 - 6 p1 + 3 p2\n    // c = -3 p0 + 3 p1\n    // d = p0 - p\n    const a = p1.minus(p2).times(3).minus(p0).plus(p3)\n    const b = p0.plus(p2).times(3).minus(p1.times(6))\n    const c = p1.minus(p0).times(3)\n    const d = p0\n    return [a, b, c, d]\n  }\n\n  tangentCoefficients() {\n    const { p0, p1, p2, p3 } = this\n    const p01 = p1.minus(p0),\n      p12 = p2.minus(p1),\n      p23 = p3.minus(p2)\n    const a = p01.plus(p23).times(3).minus(p12.times(6))\n    const b = p12.minus(p01).times(6)\n    const c = p01.times(3)\n    return [V3.O, a, b, c]\n  }\n\n  pointT2(p: V3, tMin = this.tMin, tMax = this.tMax): number {\n    const t = this.closestTToPoint(p, undefined, tMin, tMax)\n    assert(this.at(t).like(p))\n    return t\n  }\n\n  pointT(p: V3) {\n    const { p0, p1, p2, p3 } = this\n    // calculate cubic equation coefficients\n    // a t³ + b t² + c t + d = 0\n    // multiplying out the cubic Bézier curve equation gives:\n    // a = -p0 + 3 p1 - 3 p2 + p3\n    // b = 3 p0 - 6 p1 + 3 p2\n    // c = -3 p0 + 3 p1\n    // d = p0 - p\n    const a = p1.minus(p2).times(3).minus(p0).plus(p3)\n    const b = p0.plus(p2).times(3).minus(p1.times(6))\n    const c = p1.minus(p0).times(3)\n    const d = p0.minus(p)\n\n    // a t³ + b t² + c t + d = 0 is 3 cubic equations, some of which can be degenerate\n    const maxDim =\n      NLA_PRECISION < a.maxAbsElement()\n        ? a.maxAbsDim()\n        : NLA_PRECISION < b.maxAbsElement()\n        ? b.maxAbsDim()\n        : NLA_PRECISION < c.maxAbsElement()\n        ? c.maxAbsDim()\n        : assertNever()\n\n    const results = solveCubicReal2(\n      a.e(maxDim),\n      b.e(maxDim),\n      c.e(maxDim),\n      d.e(maxDim),\n    ).filter((t) => this.at(t).like(p))\n    if (0 == results.length) return NaN\n    if (1 == results.length) return results[0]\n    throw new Error(\"multiple intersection \" + this.toString() + p.sce)\n  }\n\n  pointT3(p: V3) {\n    const { p0, p1, p2, p3 } = this\n    // calculate cubic equation coefficients\n    // a t³ + b t² + c t + d = 0\n    // multiplying out the cubic Bézier curve equation gives:\n    // a = -p0 + 3 p1 - 3 p2 + p3\n    // b = 3 p0 - 6 p1 + 3 p2\n    // c = -3 p0 + 3 p1\n    // d = p0 - p\n    const a = p1.minus(p2).times(3).minus(p0).plus(p3).els()\n    const b = p0.plus(p2).times(3).minus(p1.times(6)).els()\n    const c = p1.minus(p0).times(3).els()\n    const d = p0.minus(p).els()\n    let results = undefined\n\n    // assume passed point is on curve and that curve does not self-intersect,\n    // i.e. there is exactly one correct result for t\n    // try to find a single result in the x-dimension, if multiple are found,\n    // filter them by checking the other dimensions\n    for (let dim = 0; dim < 3; dim++) {\n      if (eq0(a[dim]) && eq0(b[dim]) && eq0(c[dim])) {\n        // for case x:\n        // ax == bx == cx == 0 => x(t) = dx\n        // x value is constant\n        // if x == 0 for all t, this does not limit the result, otherwise, there is no result, i.e\n        // the passed point is not on the curve\n        if (!eq0(d[dim])) return NaN\n      } else {\n        const newResults = solveCubicReal2(a[dim], b[dim], c[dim], d[dim])\n        if (0 == newResults.length) return NaN\n        if (1 == newResults.length) return newResults[0]\n        if (results) {\n          results = results.filter((t) => newResults.some((t2) => eq(t, t2)))\n          if (0 == results.length) return NaN\n          if (1 == results.length) return results[0]\n        } else {\n          results = newResults\n        }\n      }\n    }\n    throw new Error(\n      \"multiple intersection \" + results + this.toString() + p.sce,\n    )\n  }\n\n  transform(m4: M4) {\n    // perspective projection turn bezier curve into rational spline\n    assert(m4.isNoProj(), m4.str)\n    return new BezierCurve(\n      m4.transformPoint(this.p0),\n      m4.transformPoint(this.p1),\n      m4.transformPoint(this.p2),\n      m4.transformPoint(this.p3),\n      this.tMin,\n      this.tMax,\n    ) as this\n  }\n\n  transform4(m4: M4): BezierCurve | NURBS {\n    if (m4.isNoProj()) {\n      return this.transform(m4)\n    } else {\n      return this.toNURBS().transform4(m4)\n    }\n  }\n\n  isClosed(): boolean {\n    return this.p0.like(this.p3)\n  }\n\n  isQuadratic(): boolean {\n    return this.p0.lerp(this.p1, 1.5).like(this.p3.lerp(this.p2, 1.5))\n  }\n\n  debugInfo() {\n    return {\n      lines: [0, 1, 1, 2, 2, 3].map((i) => this.points[i]),\n      points: this.points,\n    }\n  }\n\n  split(t: number): [BezierCurve, BezierCurve] {\n    // do de Casteljau's algorithm at t, the resulting points are the points needed to create 2 new curves\n    const s = 1 - t\n    const { p0, p1, p2, p3 } = this\n    /*\n\t\tp3 // n3\n\t\tb01 = s p0 + t p1\n\t\tb11 = s p1 + t p2\n\t\tb21 = s p2 + t p3 // n2\n\t\tb02 = s b01 + t b11\n\t\tb12 = s b11 + t b21 // n1\n\t\tb03 = s b02 + t b12 // n0\n\n\t\tc01 =\n\t\t*/\n    const b01 = p0.times(s).plus(p1.times(t)),\n      b11 = p1.times(s).plus(p2.times(t)),\n      b21 = p2.times(s).plus(p3.times(t))\n    const b02 = b01.times(s).plus(b11.times(t)),\n      b12 = b11.times(s).plus(b21.times(t))\n    const b03 = b02.times(s).plus(b12.times(t))\n    return [\n      new BezierCurve(p0, b01, b02, b03),\n      new BezierCurve(b03, b12, b21, p3),\n    ]\n  }\n\n  containsPoint(p: V3): boolean {\n    return isFinite(this.pointT(p))\n  }\n\n  roots(): [number[], number[], number[]] {\n    /**\n     *            := (3 (p3 - p2) - 6 (p2 - p1) + 3 (p1 - p0)) t²*\n     *                + (-6 (p1 - p0) + 6 (p2 - p1)) t\n     *                + 3 (p1 - p0)\n     *                */\n    const { p0, p1, p2, p3 } = this\n    const p01 = p1.minus(p0),\n      p12 = p2.minus(p1),\n      p23 = p3.minus(p2)\n    const a = p01.plus(p23).times(3).minus(p12.times(6))\n    const b = p12.minus(p01).times(6)\n    const c = p01.times(3)\n\n    return arrayFromFunction(3, (dim) =>\n      solveCubicReal2(0, a.e(dim), b.e(dim), c.e(dim)),\n    )\n  }\n\n  isInfosWithLine(\n    anchorWC: V3,\n    dirWC: V3,\n    tMin?: number,\n    tMax?: number,\n    lineMin = -100000,\n    lineMax = 100000,\n  ): ISInfo[] {\n    // const dirLength = dirWC.length()\n    // // TODO: no:\n    // let result = Curve.ispsRecursive(this, this.tMin, this.tMax, new L3(anchorWC, dirWC.unit()), lineMin, lineMax)\n    // result = fuzzyUniquesF(result, info => info.tOther)\n    // result.forEach(info => (info.tOther /= dirLength))\n    // return result\n    // looking for this.at(t) == line.at(s)\n    // this.at(t).x == anchorWC.x + dirWC.x * s\n    // (this.at(t).x - anchorWC.x) / dirWC.x == s (analogue for y and z) (1x, 1y, 1z)\n    // (1x) - (1y):\n    // (this.at(t).x - anchorWC.x) / dirWC.x - (this.at(t).y - anchorWC.y) / dirWC.y == 0\n    // (this.at(t).x - anchorWC.x) * dirWC.y - (this.at(t).y - anchorWC.y) * dirWC.x == 0 (2)\n\n    // cubic equation params (see #pointT):\n    const { p0, p1, p2, p3 } = this\n    const a = p1.minus(p2).times(3).minus(p0).plus(p3)\n\n    const v1 = V3.UNITS[a.minAbsDim()]\n    const testPlane = P3.forAnchorAndPlaneVectors(\n      anchorWC,\n      dirWC,\n      v1.isParallelTo(dirWC) ? a : v1,\n    )\n\n    return this.isTsWithPlane(testPlane)\n      .map((tThis) => {\n        const p = this.at(tThis)\n        return { tThis, tOther: L3.pointT(anchorWC, dirWC, p), p }\n      })\n      .filter((info) => L3.containsPoint(anchorWC, dirWC, info.p))\n  }\n\n  closestPointToLine(line: L3, tMin: number, tMax: number) {\n    // (this(t)-line(s)) * line.dir == 0 (1)\n    // (this(t)-line(s)) * this.tangentAt(t) == 0 (2)\n    // this(t) * line.dir - line(s) * line.dir == 0\n    // this(t) * line.dir - line.anchor * line.dir - s line.dir * line.dir == 0\n    // this(t) * line.dir - line.anchor * line.dir == s (3)\n    // insert (3) in (2)\n    // (this(t)-line(this(t) * line.dir - line.anchor * line.dir)) * this.tangentAt(t) == 0 (4)\n    // (4) is a 5th degree polynomial, solve numerically\n\n    tMin = isFinite(tMin) ? tMin : this.tMin\n    tMax = isFinite(tMax) ? tMax : this.tMax\n\n    const anchorDotDir1 = line.anchor.dot(line.dir1)\n    const f = (t: number) => {\n      const atT = this.at(t)\n      return atT\n        .minus(line.at(atT.dot(line.dir1) - anchorDotDir1))\n        .dot(this.tangentAt(t))\n    }\n\n    const STEPS = 32\n    const startT = withMax(\n      arrayFromFunction(STEPS, (i) => tMin + ((tMax - tMin) * i) / STEPS),\n      (t) => -f(t),\n    )!\n\n    return newtonIterate1d(f, startT, 8)\n  }\n\n  /**\n   *\n   * @param bezier\n   * @param tMin\n   * @param tMax\n   * @param sMin\n   * @param {number=} sMax\n   * @returns\n   */\n  isInfosWithBezier3(\n    bezier: BezierCurve,\n    tMin?: number,\n    tMax?: number,\n    sMin?: number,\n    sMax?: number,\n  ) {\n    const handleStartTS = (startT: number, startS: number) => {\n      if (\n        !result.some(\n          (info) => eq(info.tThis, startT) && eq(info.tOther, startS),\n        )\n      ) {\n        const f1: R2_R = (t, s) =>\n          this.tangentAt(t).dot(this.at(t).minus(bezier.at(s)))\n        const f2: R2_R = (t, s) =>\n          bezier.tangentAt(s).dot(this.at(t).minus(bezier.at(s)))\n        // f = (b1, b2, t1, t2) = b1.tangentAt(t1).dot(b1.at(t1).minus(b2.at(t2)))\n        const fdt1 = (\n          b1: BezierCurve,\n          b2: BezierCurve,\n          t1: number,\n          t2: number,\n        ) =>\n          b1.ddt(t1).dot(b1.at(t1).minus(b2.at(t2))) +\n          b1.tangentAt(t1).squared()\n        const fdt2 = (\n          b1: BezierCurve,\n          b2: BezierCurve,\n          t1: number,\n          t2: number,\n        ) => -b1.tangentAt(t1).dot(b2.tangentAt(t2))\n        const ni = newtonIterate2dWithDerivatives(\n          f1,\n          f2,\n          startT,\n          startS,\n          16,\n          fdt1.bind(undefined, this, bezier),\n          fdt2.bind(undefined, this, bezier),\n          (t, s) => -fdt2(bezier, this, s, t),\n          (t, s) => -fdt1(bezier, this, s, t),\n        )!\n        result.push({ tThis: ni.x, tOther: ni.y, p: this.at(ni.x) })\n      }\n    }\n\n    tMin = undefined !== tMin ? tMin : this.tMin\n    tMax = undefined !== tMax ? tMax : this.tMax\n    sMin = undefined !== sMin ? sMin : bezier.tMin\n    sMax = undefined !== sMax ? sMax : bezier.tMax\n\n    // stack of indices:\n    const indices = [tMin, tMax, sMin, sMax]\n    const result: ISInfo[] = []\n    while (indices.length) {\n      const i = indices.length - 4\n      const tMin = indices[i],\n        tMax = indices[i + 1],\n        sMin = indices[i + 2],\n        sMax = indices[i + 3]\n      indices.length -= 4\n      const thisAABB = this.getAABB(tMin, tMax)\n      const otherAABB = bezier.getAABB(sMin, sMax)\n      // console.log(tMin, tMax, sMin, sMax, thisAABB.sce, otherAABB.sce)\n      if (thisAABB && otherAABB && thisAABB.intersectsAABB2d(otherAABB)) {\n        const tMid = (tMin + tMax) / 2\n        const sMid = (sMin + sMax) / 2\n        const EPS = 0.00001\n        if (tMax - tMin < EPS || sMax - sMin < EPS) {\n          console.log(tMin, tMax, sMin, sMax)\n          console.log(thisAABB.sce)\n          console.log(otherAABB.sce)\n          console.log(tMid, sMid)\n          handleStartTS(tMid, sMid)\n        } else {\n          indices.push(\n            tMin,\n            tMid,\n            sMin,\n            sMid,\n            tMin,\n            tMid,\n            sMid,\n            sMax,\n            tMid,\n            tMax,\n            sMin,\n            sMid,\n            tMid,\n            tMax,\n            sMid,\n            sMax,\n          )\n        }\n      }\n    }\n\n    return result\n  }\n\n  isInfosWithBezier(\n    bezier: BezierCurve,\n    tMin?: number,\n    tMax?: number,\n    sMin?: number,\n    sMax?: number,\n  ): ISInfo[] {\n    tMin = undefined !== tMin ? tMin : this.tMin\n    tMax = undefined !== tMax ? tMax : this.tMax\n    sMin = undefined !== sMin ? sMin : bezier.tMin\n    sMax = undefined !== sMax ? sMax : bezier.tMax\n\n    assertf(() => tMin! < tMax!)\n    assertf(() => sMin! < sMax!)\n    const result: ISInfo[] = []\n\n    const likeCurves = this.likeCurve(bezier),\n      colinearCurves = this.isColinearTo(bezier)\n    if (likeCurves || colinearCurves) {\n      if (!likeCurves) {\n        // only colinear\n        // recalculate sMin and sMax so they are valid on this, from then on we can ignore bezier\n        sMin = this.pointT(bezier.at(sMin))\n        sMax = this.pointT(bezier.at(sMax))\n      }\n      tMin = Math.min(tMin, sMin)\n      tMax = Math.max(tMax, sMax)\n      const splits = fuzzyUniques(\n        concatenated(this.roots()).filter(isFinite).concat([tMin, tMax]),\n      ).sort(MINUS)\n      //const aabbs = arrayFromFunction(splits.length - 1, i => this.getAABB(splits[i], splits[i + 1]))\n      Array.from(combinations(splits.length - 1)).forEach(({ i, j }) => {\n        // adjacent curves can't intersect\n        if (Math.abs(i - j) > 2) {\n          // console.log(splits[i], splits[i + 1], splits[j], splits[j + 1], aabbs[i], aabbs[j])\n          //findRecursive(splits[i], splits[i + 1], splits[j], splits[j + 1], aabbs[i], aabbs[j])\n          result.push(\n            ...Curve.ispsRecursive(\n              this,\n              splits[i],\n              splits[i + 1],\n              bezier,\n              splits[j],\n              splits[j + 1],\n            ),\n          )\n        }\n      })\n    } else {\n      return Curve.ispsRecursive(this, tMin, tMax, bezier, sMin, sMax)\n    }\n\n    return result\n  }\n\n  selfIntersectionsInfo() {\n    return this.isInfosWithBezier(this)\n  }\n\n  isInfosWithCurve(curve: Curve): ISInfo[] {\n    if (curve instanceof L3) {\n      return this.isInfosWithLine(\n        curve.anchor,\n        curve.dir1,\n        curve.tMin,\n        curve.tMax,\n      )\n    }\n    if (curve instanceof BezierCurve) {\n      return this.isInfosWithBezier(curve)\n    }\n    return curve\n      .isInfosWithCurve(this)\n      .map(({ tThis, tOther, p }) => ({ tThis: tOther, tOther: tThis, p }))\n  }\n\n  /**\n   * Approximate this bezier curve with a number of circular segments. This curve is recursively split in half until\n   * segments are close enough (relative error < REL_ERR in two test points) to an arc which goes through the start,\n   * end and mid points of the segment.\n   * @returns each EllipseCurve is circular and their tMin and tMax respectively define their start and end points.\n   * @param t0 Start parameter of segment which should be approximated.\n   * @param t1 End parameter of segment which should be approximated.\n   * @param REL_ERROR max allowable relative error.\n   * @param result Resulting circle arcs are stored in this array. Mainly used by the recursion.\n   */\n  circleApprox(\n    t0: number = this.tMin,\n    t1: number = this.tMax,\n    REL_ERROR = 1 / 1024,\n    result: EllipseCurve[] = [],\n  ): EllipseCurve[] {\n    const a = this.at(t0),\n      b = this.at(t1),\n      tMid = (t0 + t1) / 2,\n      pMid = this.at(tMid),\n      abLine = L3.throughPoints(a, b)\n    if (\n      !abLine.containsPoint(pMid) &&\n      between(abLine.pointT(pMid), 0, abLine.pointT(b))\n    ) {\n      const arc = EllipseCurve.circleThroughPoints(a, pMid, b),\n        arcRadius = arc.f1.length(),\n        pTest1 = this.at(lerp(t0, t1, 0.25)),\n        pTest2 = this.at(lerp(t0, t1, 0.75))\n      if (\n        abs(arc.center.distanceTo(pTest1) / arcRadius - 1) <= REL_ERROR &&\n        abs(arc.center.distanceTo(pTest2) / arcRadius - 1) <= REL_ERROR\n      ) {\n        result.push(arc)\n        return result\n      }\n    }\n    this.circleApprox(t0, tMid, REL_ERROR, result)\n    this.circleApprox(tMid, t1, REL_ERROR, result)\n    return result\n  }\n\n  public toNURBS() {\n    return NURBS.fromBezier(this)\n  }\n}\n\nBezierCurve.prototype.hlol = Curve.hlol++\nBezierCurve.prototype.tIncrement = 1 / 80\n","import {\n  arrayFromFunction,\n  assertNumbers,\n  eq,\n  eq0,\n  hasConstructor,\n  le,\n  M4,\n  snap0,\n  V3,\n} from \"ts3dutils\"\n\nimport {\n  Curve,\n  EllipseCurve,\n  intersectionUnitHyperbolaLine,\n  L3,\n  parabola4Projection,\n  ParabolaCurve,\n  XiEtaCurve,\n} from \"../index\"\n\nimport { abs, cosh, min, PI, sign, sqrt } from \"../math\"\n\n/**\n * x² - y² = 1\n * C(t) = center + f1 * cosh(t) + f2 * sinh(t)\n */\nexport class HyperbolaCurve extends XiEtaCurve {\n  static XY = new HyperbolaCurve(V3.O, V3.X, V3.Y)\n\n  constructor(center: V3, f1: V3, f2: V3, tMin: number = -7, tMax: number = 7) {\n    super(center, f1, f2, tMin, tMax)\n  }\n\n  static XYLCValid(pLC: V3): boolean {\n    return pLC.x > 0 && eq(1, pLC.x * pLC.x - pLC.y * pLC.y)\n  }\n\n  static XYLCPointT(pLC: V3): number {\n    return Math.asinh(pLC.y)\n  }\n\n  /**\n   * http://www.wolframalpha.com/input/?i=x%C2%BRep-y%C2%BRep%3D1,ax%2Bby%3Dc\n   * Minor empiric test shows asinh(eta) consistently gets more accurate results than atanh(eta/xi)\n   */\n  static intersectionUnitLine(a: number, b: number, c: number): number[] {\n    if (eq0(b)) {\n      const sqrtVal = snap0(c ** 2 / a ** 2 - 1)\n      if (sqrtVal < 0 || c * a < 0) {\n        return []\n      } else if (sqrtVal == 0) {\n        return [0]\n      }\n      const eta1 = Math.sqrt(sqrtVal)\n      return [-Math.asinh(eta1), Math.asinh(eta1)]\n    } else if (eq(abs(a), abs(b))) {\n      if (le(c * a, 0)) {\n        return []\n      }\n      const eta = (sign(a * b) * (c ** 2 - a ** 2)) / 2 / a / c\n      return [Math.asinh(eta)]\n    } else {\n      const sqrtVal = snap0(b ** 2 * (-(a ** 2) + b ** 2 + c ** 2))\n      if (sqrtVal < 0) {\n        return []\n      }\n      const xi1 = (a * c - Math.sqrt(sqrtVal)) / (a ** 2 - b ** 2)\n      const xi2 = (a * c + Math.sqrt(sqrtVal)) / (a ** 2 - b ** 2)\n      const eta1 =\n        (b ** 2 * c - a * Math.sqrt(sqrtVal)) / (b * (b ** 2 - a ** 2))\n      const eta2 =\n        (b ** 2 * c + a * Math.sqrt(sqrtVal)) / (b * (b ** 2 - a ** 2))\n      return [xi1 > 0 && Math.asinh(eta1), xi2 > 0 && Math.asinh(eta2)].filter(\n        (x: any): x is number => x !== false,\n      )\n    }\n  }\n\n  at(t: number): V3 {\n    assertNumbers(t)\n    // = center + f1 cosh t + f2 sinh t\n    return this.center\n      .plus(this.f1.times(Math.cosh(t)))\n      .plus(this.f2.times(Math.sinh(t)))\n  }\n\n  toString() {\n    return `${this.center} + ${this.f1} * cosh(t) + ${this.f2} * sinh(t)`\n  }\n\n  tangentAt(t: number): V3 {\n    assertNumbers(t)\n    // = f1 sinh t + f2 cosh t\n    return this.f1.times(Math.sinh(t)).plus(this.f2.times(Math.cosh(t)))\n  }\n\n  tangentAt2(xi: number, eta: number): V3 {\n    assertNumbers(xi, eta)\n    // = f1 eta + f2 xi\n    return this.f1.times(eta).plus(this.f2.times(xi))\n  }\n\n  ddt(t: number): V3 {\n    assertNumbers(t)\n    return this.f1.times(Math.cosh(t)).plus(this.f2.times(Math.sinh(t)))\n  }\n\n  isColinearTo(curve: Curve): boolean {\n    if (!hasConstructor(curve, HyperbolaCurve)) return false\n    if (!curve.center || !this.center.like(curve.center)) {\n      return false\n    }\n    if (this === curve) {\n      return true\n    }\n    const { f1: f1, f2: f2 } = this.rightAngled(),\n      { f1: c1, f2: c2 } = curve.rightAngled()\n    return (\n      eq(f1.squared(), Math.abs(f1.dot(c1))) &&\n      eq(f2.squared(), Math.abs(f2.dot(c2)))\n    )\n  }\n\n  reversed() {\n    return new HyperbolaCurve(\n      this.center,\n      this.f1,\n      this.f2.negated(),\n      -this.tMax,\n      -this.tMin,\n    )\n  }\n\n  rightAngled(): HyperbolaCurve {\n    const f1 = this.f1,\n      f2 = this.f2,\n      a = f1.dot(f2),\n      b = f2.squared() + f1.squared()\n    if (eq0(a)) {\n      return this\n    }\n    const g1 = 2 * a,\n      g2 = b + Math.sqrt(b * b - 4 * a * a)\n    const { x1: xi, y1: eta } = intersectionUnitHyperbolaLine(g1, g2, 0)\n    return new HyperbolaCurve(\n      this.center,\n      f1.times(xi).plus(f2.times(eta)),\n      f1.times(eta).plus(f2.times(xi)),\n    )\n  }\n\n  eccentricity(): number {\n    const mainAxes = this.rightAngled()\n    const f1length = mainAxes.f1.length(),\n      f2length = mainAxes.f1.length()\n    const [a, b] =\n      f1length > f2length ? [f1length, f2length] : [f2length, f1length]\n    return Math.sqrt(1 + (b * b) / a / a)\n  }\n\n  roots(): [number[], number[], number[]] {\n    // tangent(t) = f1 sinh t + f2 cosh t = 0\n    // tangentAt2(xi, eta) = f1 eta + f2 xi = V3.O\n    // xi² - eta² = 1 (by def for hyperbola)\n\n    return arrayFromFunction(3, (dim) => {\n      const a = this.f2.e(dim),\n        b = this.f1.e(dim)\n      return HyperbolaCurve.intersectionUnitLine(a, b, 0)\n    })\n  }\n\n  transform4(m4: M4): L3 | HyperbolaCurve | ParabolaCurve | EllipseCurve {\n    const tMap = (t: number) =>\n      sign(t) * min(10, sqrt(-(1 - cosh(t)) / (1 + cosh(t))))\n    // prettier-ignore\n    const parabolaToUnitHyperbola = new M4(\n            0,  1, 0, 1,\n            2,  0, 0, 0,\n            0,  0, 1, 0,\n            0, -1, 0, 1)\n    return parabola4Projection(\n      M4.product(m4, this.matrix, parabolaToUnitHyperbola),\n      tMap(this.tMin),\n      tMap(this.tMax),\n    )\n  }\n}\n\nHyperbolaCurve.prototype.tIncrement = PI / 16\n","import {\n  assert,\n  assertf,\n  assertInst,\n  assertNumbers,\n  assertVectors,\n  clamp,\n  eq,\n  eq0,\n  hasConstructor,\n  int,\n  le,\n  lt,\n  M4,\n  V3,\n  VV,\n} from \"ts3dutils\"\n\nimport { Curve, ISInfo, P3, Surface } from \"../index\"\n\n/**\n * A 3-dimensional line. Defined by an anchor and a normalized direction vector.\n */\nexport class L3 extends Curve {\n  isTsWithSurface(surface: Surface): number[] {\n    return surface.isTsForLine(this)\n  }\n  static readonly X: L3 = new L3(V3.O, V3.X)\n  static readonly Y: L3 = new L3(V3.O, V3.Y)\n  static readonly Z: L3 = new L3(V3.O, V3.Z)\n\n  constructor(\n    readonly anchor: V3, // line anchor\n    readonly dir1: V3, // normalized line dir\n    tMin: number = -4096,\n    tMax: number = 4096,\n  ) {\n    super(tMin, tMax)\n    assertVectors(anchor, dir1)\n    assert(dir1.hasLength(1), \"dir must be unit\" + dir1)\n    assertf(() => !Number.isNaN(anchor.x))\n  }\n\n  static throughPoints(anchor: V3, b: V3, tMin: number = 0, tMax?: number): L3 {\n    const dir = b.minus(anchor)\n    return new L3(\n      anchor,\n      dir.unit(),\n      tMin,\n      undefined !== tMax ? tMax : dir.length(),\n    )\n  }\n\n  static anchorDirection(\n    anchor: V3,\n    dir: V3,\n    min: number | V3 = 0,\n    max: number | V3 = dir.length(),\n  ): L3 {\n    const dir1 = dir.unit()\n    return new L3(\n      anchor,\n      dir1,\n      \"number\" == typeof min ? min : min.minus(anchor).dot(dir1),\n      \"number\" == typeof max ? max : max.minus(anchor).dot(dir1),\n    )\n  }\n\n  static pointT(anchor: V3, dir: V3, x: V3) {\n    assertVectors(anchor, dir, x)\n    return x.minus(anchor).dot(dir) / dir.squared()\n  }\n\n  static at(anchor: V3, dir: V3, t: number) {\n    return anchor.plus(dir.times(t))\n  }\n\n  /**\n   * Create new line which is the intersection of two planes. Throws error if planes are parallel.\n   * @param plane1\n   * @param plane2\n   */\n  static fromPlanes(plane1: P3, plane2: P3): L3 {\n    assertInst(P3, plane1, plane2)\n    const dir = plane1.normal1.cross(plane2.normal1)\n    const length = dir.length()\n    if (length < 1e-10) {\n      throw new Error(\"Parallel planes\")\n    }\n\n    return plane1.intersectionWithPlane(plane2)!\n  }\n\n  static containsPoint(anchor: V3, dir: V3, p: V3) {\n    const closestT = L3.pointT(anchor, dir, p)\n    const distance = L3.at(anchor, dir, closestT).distanceTo(p)\n    return eq0(distance)\n  }\n\n  roots(): [number[], number[], number[]] {\n    return [[], [], []]\n  }\n\n  containsPoint(p: V3): boolean {\n    assertVectors(p)\n    const dist = this.distanceToPoint(p)\n    assertNumbers(dist)\n    return eq0(dist)\n  }\n\n  likeCurve(curve: Curve): boolean {\n    return (\n      this == curve ||\n      (hasConstructor(curve, L3) &&\n        this.anchor.like(curve.anchor) &&\n        this.dir1.like(curve.dir1))\n    )\n  }\n\n  equals(obj: any): boolean {\n    return (\n      this == obj ||\n      (Object.getPrototypeOf(obj) == L3.prototype &&\n        this.anchor.equals(obj.anchor) &&\n        this.dir1.equals(obj.dir1))\n    )\n  }\n\n  isColinearTo(obj: Curve): boolean {\n    return (\n      obj instanceof L3 &&\n      this.containsPoint(obj.anchor) &&\n      eq(1, Math.abs(this.dir1.dot(obj.dir1)))\n    )\n  }\n\n  distanceToLine(line: L3): number {\n    assertInst(L3, line)\n    if (this.isParallelToLine(line)) {\n      return this.distanceToPoint(line.anchor)\n    }\n    const dirCross1 = this.dir1.cross(line.dir1).unit()\n    const anchorDiff = this.anchor.minus(line.anchor)\n    return Math.abs(anchorDiff.dot(dirCross1))\n  }\n\n  distanceToPoint(x: V3): number {\n    assertVectors(x)\n    // See http://mathworld.wolfram.com/Point-LineDistance3-Dimensional.html\n    const t = x.minus(this.anchor).dot(this.dir1)\n    return this.at(t).distanceTo(x)\n\n    //return x.minus(this.anchor).cross(x.minus(this.anchor.plus(this.dir1))).length()\n  }\n\n  asSegmentDistanceToPoint(x: V3, sStart: number, sEnd: number) {\n    let t = x.minus(this.anchor).dot(this.dir1)\n    t = clamp(t, sStart, sEnd)\n    return this.at(t).minus(x).length()\n  }\n\n  asSegmentDistanceToLine(line: L3, sStart: number, sEnd: number) {\n    assertInst(L3, line)\n    const dirCross = this.dir1.cross(line.dir1)\n    const div = dirCross.squared()\n    if (eq0(div)) {\n      return undefined\n    } // lines parallel\n    const anchorDiff = line.anchor.minus(this.anchor)\n    // check if distance is zero (see also L3.distanceToLine)\n    if (!eq0(anchorDiff.dot(dirCross.unit()))) {\n      return undefined\n    }\n    let t = this.infoClosestToLine(line).t\n    t = clamp(t, sStart, sEnd)\n    return this.at(clamp(t, sStart, sEnd))\n  }\n\n  at(t: number): V3 {\n    assertNumbers(t)\n    return this.anchor.plus(this.dir1.times(t))\n  }\n\n  /**\n   * This function returns lambda for a given point x\n   *\n   * Every point x on this line is described by the equation\n   *      x = this.anchor + lambda * this.dir1 | - this.anchor\n   *      x - this.anchor = lambda * this.dir1 | DOT this.dir1\n   *      (x - this.anchor) DOT this.dir1 = lambda (dir1² is 1 as |dir1| == 1)\n   *\n   *  @param x\n   *  @returns\n   */\n  pointT(x: V3): number {\n    assertVectors(x)\n    const t = x.minus(this.anchor).dot(this.dir1)\n    return t\n  }\n\n  /**\n   * Returns true if the line is parallel (this.dir = line.dir || this.dir = -line.dir) to the argument.\n   */\n  isParallelToLine(line: L3): boolean {\n    assertInst(L3, line)\n    // we know that 1 == this.dir1.length() == line.dir1.length(), we can check for parallelity simpler than\n    // isParallelTo()\n    return eq(1, Math.abs(this.dir1.dot(line.dir1)))\n  }\n\n  angleToLine(line: L3): number {\n    assertInst(L3, line)\n    return this.dir1.angleTo(line.dir1)\n  }\n\n  /**\n   *\n   * @param line\n   * @returns {boolean} If the distance between the lines is zero\n   */\n  intersectsLine(line: L3): boolean {\n    return eq0(this.distanceToLine(line))\n  }\n\n  isInfosWithCurve(curve: Curve): ISInfo[] {\n    if (curve instanceof L3) {\n      return this.isInfosWithLine(curve.anchor, curve.dir1)\n    }\n    return super.isInfosWithCurve(curve)\n  }\n\n  isInfosWithLine(anchorWC: V3, dirWC: V3): ISInfo[] {\n    const dirCross = this.dir1.cross(dirWC)\n    const div = dirCross.squared()\n    if (eq0(div)) {\n      // lines are parallel\n      return []\n    }\n    const anchorDiff = anchorWC.minus(this.anchor)\n    if (eq0(anchorDiff.dot(dirCross))) {\n      const tThis = anchorDiff.cross(dirWC).dot(dirCross) / div\n      const tOther = anchorDiff.cross(this.dir1).dot(dirCross) / div\n      const p = this.at(tThis)\n      return [{ tThis: tThis, tOther: tOther, p: p }]\n    }\n    return []\n  }\n\n  isInfoWithLine(line: L3): V3 | undefined {\n    // todo infos?\n    assertInst(L3, line)\n    const dirCross = this.dir1.cross(line.dir1)\n    const div = dirCross.squared()\n    if (eq0(div)) {\n      return undefined\n    } // lines parallel\n    const anchorDiff = line.anchor.minus(this.anchor)\n    // check if distance is zero (see also L3.distanceToLine)\n    if (!eq0(anchorDiff.dot(dirCross.unit()))) {\n      return undefined\n    }\n    const t = anchorDiff.cross(line.dir1).dot(dirCross) / div\n    return this.at(t)\n  }\n\n  /**\n   * returns s and t with this.at(s) == line.at(t)\n   */\n  intersectionLineST(line: L3): { s: number; t: number } {\n    // the two points on two lines the closest two each other are the ones whose\n    // connecting\n    // TODO Where does this come from?\n    // TODO: return value when no IS?\n    assertInst(L3, line)\n    const dirCross = this.dir1.cross(line.dir1)\n    const div = dirCross.squared()\n    const anchorDiff = line.anchor.minus(this.anchor)\n    const s = anchorDiff.cross(this.dir1).dot(dirCross) / div\n    const t = anchorDiff.cross(line.dir1).dot(dirCross) / div\n    return { s: s, t: t }\n    // console.log(segmentIntersectsRay, a, b, \"ab\", ab, \"p\", p, \"dir\", dir, s > 0 && t / div >= 0 && t / div <= 1,\n    // \"s\", s, \"t\", t, \"div\", div)\n  }\n\n  ddt(): V3 {\n    return V3.O\n  }\n\n  getConstructorParameters(): any[] {\n    return [this.anchor, this.dir1]\n  }\n\n  closestTToPoint(p: V3): number {\n    // similar logic as pointT; we project the vector (anchor -> p) onto dir1, then add anchor back to it\n    const nearestT = p.minus(this.anchor).dot(this.dir1)\n    return nearestT\n  }\n\n  infoClosestToLine(\n    line: L3,\n  ): { t: number; s: number; closest?: V3; closest2?: V3; distance: number } {\n    /*\n\t\t line = a + s*b\n\t\t this = c + t*d\n\n\t\t (this - line) * b = 0\n\t\t (this - line) * d = 0\n\n\t\t (a + s*b - c - t*d) * b = 0\n\t\t (a + s*b - c - t*d) * d = 0\n\n\t\t (a - c + s*b - t*d) * b = 0\n\t\t (a - c + s*b - t*d) * d = 0\n\n\t\t (a - c)*b + (s*b - t*d)*b = 0\n\t\t (a - c)*d + (s*b - t*d)*d = 0\n\n\t\t (a - c)*b + s*(b*b) - t*(d*b) = 0\n\t\t (a - c)*d + s*(b*d) - t*(d*d) = 0\n\n\t\t s = (t*(d*b) - (a - c)*b) / (b*b)\n\t\t =>\n\t\t (a - c)*d + (t*(d*b) - (a - c)*b) / (b*b)*(b*d) - t*(d*d) = 0 | * (b*b)\n\t\t (a - c)*d * (b*b) + (t*(d*b) - (a - c)*b)*(b*d) - t*(d*d) * (b*b) = 0\n\t\t (a - c)*d * (b*b) + t*(d*b)*(b*d) - (a - c)*b*(b*d) - t*(d*d) * (b*b) = 0\n\t\t t = ((a - c)*b*(b*d) - (a - c)*d * (b*b)) / ((d*b)*(b*d) - (d*d) * (b*b))\n\t\t */\n    if (this.isParallelToLine(line)) {\n      return { t: NaN, s: NaN, distance: this.distanceToLine(line) }\n    }\n    const a = line.anchor,\n      b = line.dir1,\n      c = this.anchor,\n      d = this.dir1\n    const bd = b.dot(d),\n      bb = b.squared(),\n      dd = d.squared(),\n      ca = a.minus(c),\n      divisor = bd * bd - dd * bb\n    const t = (ca.dot(b) * bd - ca.dot(d) * bb) / divisor\n    const s = (ca.dot(b) * dd - ca.dot(d) * bd) / divisor\n    return {\n      t: t,\n      s: s,\n      closest: this.at(t),\n      closest2: line.at(s),\n      distance: this.at(t).distanceTo(line.at(s)),\n    }\n  }\n\n  intersectionWithPlane(plane: P3): V3 {\n    // plane: plane.normal1 * p = plane.w\n    // line: p=line.point + lambda * line.dir1\n    const lambda =\n      (plane.w - plane.normal1.dot(this.anchor)) / plane.normal1.dot(this.dir1)\n    const point = this.anchor.plus(this.dir1.times(lambda))\n    return point\n  }\n\n  tangentAt(): V3 {\n    return this.dir1\n  }\n\n  isTWithPlane(plane: P3): number {\n    // plane: plane.normal1 * p = plane.w\n    // line: p=line.point + lambda * line.dir1\n    const div = plane.normal1.dot(this.dir1)\n    if (eq0(div)) return NaN\n    const lambda = (plane.w - plane.normal1.dot(this.anchor)) / div\n    return lambda\n  }\n\n  reversed() {\n    return new L3(this.anchor, this.dir1.negated(), -this.tMax, -this.tMin)\n  }\n\n  isTsWithPlane(planeWC: P3) {\n    const t = this.isTWithPlane(planeWC)\n    return isNaN(t) ? [] : [t]\n  }\n\n  flipped() {\n    return new L3(this.anchor, this.dir1.negated())\n  }\n\n  transform(m4: M4) {\n    const newAnchor = m4.transformPoint(this.anchor)\n    const newDir = m4.transformVector(this.dir1)\n    return new L3(\n      newAnchor,\n      newDir.unit(),\n      this.tMin * newDir.length(),\n      this.tMax * newDir.length(),\n    ) as this\n  }\n\n  transform4(m4: M4) {\n    const vanishingPlane = P3.vanishingPlane(m4)\n    if (!vanishingPlane) return this.transform(m4)\n    const pMin = this.at(this.tMin)\n    const pMax = this.at(this.tMax)\n    if (\n      le(vanishingPlane.distanceToPointSigned(pMin), 0) ||\n      le(vanishingPlane.distanceToPointSigned(pMax), 0)\n    ) {\n      throw new Error(\"line must be in front of vanishingPlane in [tMin, tMax]\")\n    }\n    const anchor = lt(0, vanishingPlane.distanceToPointSigned(this.anchor))\n      ? this.anchor\n      : this.at((this.tMin + this.tMax) / 2)\n    const transformedAnchor = m4.timesVector(\n      VV(anchor.x, anchor.y, anchor.z, 1),\n    )\n    const transformedVector = m4.timesVector(\n      VV(this.dir1.x, this.dir1.y, this.dir1.z, 0),\n    )\n    const newDir = transformedVector\n      .times(transformedAnchor.w)\n      .minus(transformedAnchor.times(transformedVector.w))\n      .V3()\n    const newAnchor = transformedAnchor.p3()\n    return L3.anchorDirection(\n      newAnchor,\n      newDir,\n      m4.transformPoint(pMin),\n      m4.transformPoint(pMax),\n    ) as this\n  }\n\n  hashCode(): int {\n    return this.anchor.hashCode() * 31 + this.dir1.hashCode()\n  }\n}\n\nL3.prototype.hlol = Curve.hlol++\nL3.prototype.tIncrement = 256\n","import {\n  arrayRange,\n  assert,\n  assertVectors,\n  bisect,\n  callsce,\n  clamp,\n  fuzzyUniques,\n  getLast,\n  int,\n  M4,\n  newtonIterate2dWithDerivatives,\n  V3,\n  withMax,\n} from \"ts3dutils\"\n\nimport {\n  Curve,\n  curvePoint,\n  EllipsoidSurface,\n  followAlgorithm2d,\n  ImplicitCurve,\n  ImplicitSurface,\n  ISInfo,\n  MathFunctionR2R,\n  P3,\n  ParametricSurface,\n  PlaneSurface,\n  ProjectedCurveSurface,\n  R2_R,\n  Surface,\n  surfaceIsICurveIsInfosWithLine,\n} from \"../index\"\n\nimport { abs, ceil, floor, max, min } from \"../math\"\n\nexport class PICurve extends ImplicitCurve {\n  didu: (u: number, v: number) => number\n  didv: (u: number, v: number) => number\n\n  constructor(\n    points: ReadonlyArray<V3>,\n    tangents: ReadonlyArray<V3>,\n    readonly parametricSurface: ParametricSurface,\n    readonly implicitSurface: ImplicitSurface,\n    readonly pmPoints: ReadonlyArray<V3>,\n    readonly pmTangents: ReadonlyArray<V3>,\n    readonly stepSize: number,\n    dir: number = 1,\n    generator?: string,\n    tMin?: number,\n    tMax?: number,\n  ) {\n    super(points, tangents, dir, generator, tMin, tMax)\n    assert(Array.isArray(pmPoints))\n    assert(dir == 1)\n    assert(stepSize <= 1)\n    const pf = parametricSurface.pUVFunc()\n    const dpdu = parametricSurface.dpdu()\n    const dpdv = parametricSurface.dpdv()\n    const didp = implicitSurface.didp.bind(implicitSurface)\n    this.didu = (u, v) => didp(pf(u, v)).dot(dpdu(u, v))\n    this.didv = (u, v) => didp(pf(u, v)).dot(dpdv(u, v))\n    for (let i = 0; i < points.length - 1; i++) {\n      assert(!points[i].equals(points[i + 1]))\n      //assert(parametricSurface.pUV(pmPoints[i].x, pmPoints[i].y).equals(points[i]))\n    }\n    {\n      const ps = this.parametricSurface\n      const is = implicitSurface\n      const pFunc = ps.pUVFunc(),\n        iFunc = is.implicitFunction()\n      const dpdu = ps.dpdu()\n      const dpdv = ps.dpdv()\n      const didp = is.didp.bind(is)\n      const mf = MathFunctionR2R.forFFxFy(\n        (x, y) => iFunc(pFunc(x, y)),\n        (u, v) => didp(pFunc(u, v)).dot(dpdu(u, v)),\n        (u, v) => didp(pFunc(u, v)).dot(dpdv(u, v)),\n      )\n      const { points } = followAlgorithm2d(\n        mf,\n        this.pmPoints[0],\n        stepSize,\n        ps,\n        (u, v) => is.containsPoint(pFunc(u, v)),\n        getLast(this.pmPoints),\n        this.pmTangents[0],\n      )\n      if (points.length !== this.points.length) {\n        followAlgorithm2d(\n          mf,\n          this.pmPoints[0],\n          stepSize,\n          ps,\n          (u, v) => is.containsPoint(pFunc(u, v)),\n          getLast(this.pmPoints),\n          this.pmTangents[0],\n        )\n      }\n      assert(\n        points.length == this.points.length,\n        points.length,\n        this.points.length,\n      )\n    }\n  }\n\n  static forParametricStartEnd(\n    ps: ParametricSurface,\n    is: ImplicitSurface,\n    pmStart: V3,\n    pmEnd: V3,\n    stepSize: number = 0.02,\n    startPMTangent?: V3,\n    tMin?: number,\n    tMax?: number,\n  ): PICurve {\n    const pFunc = ps.pUVFunc(),\n      iFunc = is.implicitFunction()\n    const dpdu = ps.dpdu()\n    const dpdv = ps.dpdv()\n    const didp = is.didp.bind(is)\n    const mf = MathFunctionR2R.forFFxFy(\n      (x, y) => iFunc(pFunc(x, y)),\n      (u, v) => didp(pFunc(u, v)).dot(dpdu(u, v)),\n      (u, v) => didp(pFunc(u, v)).dot(dpdv(u, v)),\n    )\n    const { points, tangents } = followAlgorithm2d(\n      mf,\n      pmStart,\n      stepSize,\n      ps,\n      (u, v) => is.containsPoint(pFunc(u, v)),\n      pmEnd,\n      startPMTangent,\n    )\n    return PICurve.forParametricPointsTangents(\n      ps,\n      is,\n      points,\n      tangents,\n      stepSize,\n      1,\n      tMin,\n      tMax,\n    )\n  }\n\n  static forStartEnd(\n    ps: ParametricSurface,\n    is: ImplicitSurface,\n    start: V3,\n    end: V3,\n    stepSize: number = 0.02,\n    startTangent?: V3,\n    min?: V3,\n    max?: V3,\n  ): PICurve {\n    const startPM = ps.uvP(start)\n    const dpdu = ps.dpdu()(startPM.x, startPM.y),\n      dpdv = ps.dpdv()(startPM.x, startPM.y)\n    const startPMTangent =\n      startTangent &&\n      M4.forSys(dpdu, dpdv).inversed().transformVector(startTangent)\n    // assert(dpdu.times(startPMTangent.x).plus(dpdv.times(startPMTangent.y)).like(startTangent))\n    const curve = PICurve.forParametricStartEnd(\n      ps,\n      is,\n      startPM,\n      ps.uvP(end),\n      stepSize,\n      startPMTangent,\n    )\n\n    return curve.withBounds(min && curve.pointT(min), max && curve.pointT(max))\n  }\n\n  static forParametricPointsTangents(\n    ps: ParametricSurface,\n    is: ImplicitSurface,\n    pmPoints: V3[],\n    pmTangents: V3[],\n    stepSize: number,\n    dir: number = 1,\n    tMin?: number,\n    tMax?: number,\n  ): PICurve {\n    const pFunc = ps.pUVFunc(),\n      dpdu = ps.dpdu()\n    const dpdv = ps.dpdv()\n    const points = pmPoints.map(({ x, y }) => pFunc(x, y))\n    const tangents = pmPoints.map(({ x: u, y: v }, i) => {\n      const ds = dpdu(u, v)\n      const dt = dpdv(u, v)\n      return ds.times(pmTangents[i].x).plus(dt.times(pmTangents[i].y))\n      //const p = points[i]\n      //return cs.normalP(p).cross(ses.normalP(p))\n      //\t.toLength(ds.times(pmTangents[i].x).plus(dt.times(pmTangents[i].y)).length())\n    })\n    return new PICurve(\n      points,\n      tangents,\n      ps,\n      is,\n      pmPoints,\n      pmTangents,\n      stepSize,\n      dir,\n      undefined,\n      tMin,\n      tMax,\n    )\n  }\n\n  getConstructorParameters(): any[] {\n    return [\n      this.points,\n      this.tangents,\n      this.parametricSurface,\n      this.implicitSurface,\n      this.pmPoints,\n      this.pmTangents,\n      this.stepSize,\n      this.dir,\n      this.generator,\n    ]\n  }\n\n  implicitCurve(): R2_R {\n    const pF = this.parametricSurface.pUVFunc()\n    const iF = this.implicitSurface.implicitFunction()\n    return (u, v) => iF(pF(u, v))\n  }\n\n  isColinearTo(curve: Curve) {\n    if (curve instanceof PICurve) {\n      if (this.equals(curve)) {\n        return true\n      }\n      if (\n        this.parametricSurface.isCoplanarTo(curve.parametricSurface) &&\n        this.implicitSurface.isCoplanarTo(curve.implicitSurface)\n      ) {\n        // TODO\n      }\n      return false\n    } else {\n      return false\n    }\n  }\n\n  containsPoint(p: V3): boolean {\n    assertVectors(p)\n    const t = this.pointT(p)\n    return !isNaN(t) && this.isValidT(t)\n  }\n\n  equals(obj: any): boolean {\n    return (\n      Object.getPrototypeOf(obj) == PICurve.prototype &&\n      this.parametricSurface.equals(obj.parametricSurface) &&\n      this.implicitSurface.equals(obj.implicitSurface) &&\n      this.points[0].equals(obj.points[0]) &&\n      this.tangents[0].equals(obj.tangents[0]) &&\n      this.dir === obj.dir\n    )\n  }\n\n  hashCode(): int {\n    let hashCode = 0\n    hashCode = hashCode * 31 + this.parametricSurface.hashCode()\n    hashCode = hashCode * 31 + this.implicitSurface.hashCode()\n    hashCode = hashCode * 31 + this.points[0].hashCode()\n    hashCode = hashCode * 31 + this.tangents[0].hashCode()\n    return hashCode | 0\n  }\n\n  tangentP(point: V3): V3 {\n    assertVectors(point)\n    assert(this.containsPoint(point), \"this.containsPoint(point)\")\n    const t = this.pointT(point)\n    return this.tangentAt(t)\n  }\n\n  tangentAt(t: number): V3 {\n    assert(!isNaN(t))\n    if (0 === t % 1) return this.tangents[t]\n    const uv = this.uvT(t)\n    const uvTangent = new V3(\n      -this.didv(uv.x, uv.y),\n      this.didu(uv.x, uv.y),\n      0,\n    ).toLength(this.stepSize)\n    const du = this.parametricSurface.dpdu()(uv.x, uv.y)\n    const dv = this.parametricSurface.dpdv()(uv.x, uv.y)\n    return du.times(uvTangent.x).plus(dv.times(uvTangent.y))\n  }\n\n  at(t: number): V3 {\n    assert(!isNaN(t))\n    if (0 === t % 1) return this.points[t]\n    const startParams = V3.lerp(\n      this.pmPoints[floor(t)],\n      this.pmPoints[ceil(t)],\n      t % 1,\n    )\n    return this.closestPointToParams(startParams)\n  }\n\n  uvT(t: number): V3 {\n    assert(!isNaN(t))\n    //TODO: use elerp\n    if (0 === t % 1) return this.pmPoints[t]\n    const startParams = V3.lerp(\n      this.pmPoints[floor(t)],\n      this.pmPoints[ceil(t)],\n      t % 1,\n    )\n    return curvePoint(this.implicitCurve(), startParams, this.didu, this.didv)\n  }\n\n  closestTToPoint(p: V3, tStart?: number): number {\n    // TODO\n    return 0\n  }\n\n  closestPointToParams(startUV: V3): V3 {\n    const pointParams = curvePoint(\n      this.implicitCurve(),\n      startUV,\n      this.didu,\n      this.didv,\n    )\n    return this.parametricSurface.pUVFunc()(pointParams.x, pointParams.y)\n  }\n\n  isTsWithSurface(surface: Surface): number[] {\n    if (surface instanceof EllipsoidSurface) {\n      const pS = this.parametricSurface,\n        iS = this.implicitSurface\n      if (\n        pS instanceof ProjectedCurveSurface &&\n        iS instanceof EllipsoidSurface\n      ) {\n        const iscs = iS.isCurvesWithSurface(surface)\n        const points = iscs.flatMap((isc) =>\n          isc.isTsWithSurface(pS).map((t) => isc.at(t)),\n        )\n        const ts = fuzzyUniques(points.map((p) => this.pointT(p)))\n        return ts.filter((t) => !isNaN(t) && this.isValidT(t))\n      }\n    } else if (ImplicitSurface.is(surface)) {\n      const result: number[] = []\n      const iF = surface.implicitFunction()\n      let prevSignedDistance = iF(this.points[0])\n      for (let i = 1; i < this.points.length; i++) {\n        const point = this.points[i]\n        const signedDistance = iF(point)\n        if (prevSignedDistance * signedDistance <= 0) {\n          const pF = this.parametricSurface.pUVFunc()\n          const dpdu = this.parametricSurface.dpdu()\n          const dpdv = this.parametricSurface.dpdv()\n          const startUV = this.pmPoints[\n            abs(prevSignedDistance) < abs(signedDistance) ? i - 1 : i\n          ]\n          const isUV = newtonIterate2dWithDerivatives(\n            this.implicitCurve(),\n            (u, v) => iF(pF(u, v)),\n            startUV.x,\n            startUV.y,\n            4,\n            this.didu,\n            this.didv,\n            (u, v) => dpdu(u, v).dot(surface.didp(pF(u, v))),\n            (u, v) => dpdv(u, v).dot(surface.didp(pF(u, v))),\n          )!\n          result.push(this.pointT(this.parametricSurface.pUV(isUV.x, isUV.y)))\n        }\n        prevSignedDistance = signedDistance\n      }\n      return result\n    }\n    throw new Error()\n  }\n\n  isTsWithPlane(planeWC: P3): number[] {\n    return this.isTsWithSurface(new PlaneSurface(planeWC))\n    // version which intersects the plane with the defining surfaces of this PICurve, but this causes\n    // issues when they are PICurves too:\n    // assertInst(P3, planeWC)\n    // const ps = this.parametricSurface,\n    // \tis = this.implicitSurface\n    // const pscs = ps.isCurvesWithPlane(planeWC)\n    // const iscs = is.isCurvesWithPlane(planeWC)\n    // const infos = iscs.flatMap(isc => pscs.flatMap(psc => isc.isInfosWithCurve(psc)))\n    // const ts = fuzzyUniques(infos.map(info => this.pointT(info.p)))\n    // return ts.filter(t => !isNaN(t) && this.isValidT(t))\n  }\n\n  pointT(p: V3): number {\n    assertVectors(p)\n    if (\n      !this.parametricSurface.containsPoint(p) ||\n      !this.implicitSurface.containsPoint(p)\n    ) {\n      return NaN\n    }\n    const pmPoint = this.parametricSurface.uvPFunc()(p)\n    const ps = this.points,\n      pmps = this.pmPoints\n    let t = 0,\n      pmDistance = pmPoint.distanceTo(pmps[0])\n    while (pmDistance > abs(this.stepSize) && t < ps.length - 1) {\n      // TODO -1?\n      //console.log(t, pmps[t].$, pmDistance)\n      t = min(\n        pmps.length - 1,\n        t + max(1, Math.round(pmDistance / abs(this.stepSize) / 2 / 2)),\n      )\n      pmDistance = pmPoint.distanceTo(pmps[t])\n    }\n    // if (t < this.pmPoints.length - 1 && pmDistance > pmPoint.distanceTo(pmps[t + 1])) {\n    //     t++\n    // }\n    if (pmDistance > abs(this.stepSize) * 1.1) {\n      // p is not on this curve\n      return NaN\n    }\n    if (t == ps.length - 1) {\n      t--\n    }\n    if (ps[t].like(p)) return t\n    if (ps[t + 1].like(p)) return t + 1\n    const startT = withMax(\n      arrayRange(floor(this.tMin), ceil(this.tMax), 1),\n      (t) => -pmPoint.distanceTo(pmps[t]),\n    )\n    if (undefined === startT) throw new Error()\n    if (ps[startT].like(p)) return startT\n    //const [a, b] = 0 === startT\n    //    ? [0, 1]\n    //    : this.points.length - 1 === startT\n    //        ? [startT - 1, startT]\n    //        : pmPoint.distanceTo(pmps[startT - 1]) < pmPoint.distanceTo(pmps[startT + 1])\n    //            ? [startT - 1, startT]\n    //            : [startT, startT + 1]\n    const a = max(0, startT - 1),\n      b = min(this.points.length - 1, startT + 1)\n    const tangent = this.tangentAt(startT)\n    const f = (t: number) =>\n      this.at(clamp(t, 0, this.points.length - 1))\n        .to(p)\n        .dot(tangent)\n    // const df = (t: number) => -this.tangentAt(clamp(t, 0, this.points.length - 1)).dot(tangent)\n    //checkDerivate(f, df, 0, this.points.length - 2, 3)\n    // 8 steps necessary because df can currently be way off\n    t = bisect(f, a, b, 32)\n    if (!isFinite(t) || this.at(t).distanceTo(p) > abs(this.stepSize)) {\n      return NaN\n    }\n    return t\n  }\n\n  transform(m4: M4): this {\n    const dirFactor = m4.isMirroring() ? -1 : 1\n    return PICurve.forStartEnd(\n      this.parametricSurface.transform(m4),\n      this.implicitSurface.transform(m4),\n      m4.transformPoint(this.points[0]),\n      m4.transformPoint(getLast(this.points)),\n      this.stepSize * dirFactor,\n      m4.transformVector(this.tangents[0]),\n      m4.transformPoint(this.at(this.tMin)),\n      m4.transformPoint(this.at(this.tMax)),\n    ) as this\n    //return PICurve.forParametricStartEnd(\n    //\tthis.parametricSurface.transform(m4),\n    //\tthis.implicitSurface.transform(m4),\n    //\tthis.pmPoints[0],\n    //\tgetLast(this.pmPoints),\n    //\tthis.stepSize,\n    //\tthis.dir,\n    //\tthis.tMin,\n    //\tthis.tMax)\n    // TODO: pass transformed points?\n    //return new PICurve(\n    //\tm4.transformedPoints(this.points),\n    //\tm4.transformedVectors(this.tangents),\n    //    this.parametricSurface.transform(m4),\n    //   this.implicitSurface.transform(m4),\n    //   this.pmPoints,\n    //   this.pmTangents,\n    //this.stepSize,\n    //   this.dir,\n    //this.generator,\n    //this.tMin, this.tMax)\n  }\n\n  roots(): [number[], number[], number[]] {\n    const allTs = arrayRange(0, this.points.length)\n    return [allTs, allTs, allTs]\n  }\n\n  isInfosWithLine(\n    anchorWC: V3,\n    dirWC: V3,\n    tMin?: number | undefined,\n    tMax?: number | undefined,\n    lineMin?: number | undefined,\n    lineMax?: number | undefined,\n  ): ISInfo[] {\n    return surfaceIsICurveIsInfosWithLine.call(\n      this,\n      this.implicitSurface,\n      this.parametricSurface,\n      anchorWC,\n      dirWC,\n      tMin,\n      tMax,\n      lineMin,\n      lineMax,\n    )\n  }\n\n  toSource(rounder: (x: number) => number = (x) => x): string {\n    const result = callsce(\n      \"PICurve.forParametricStartEnd\",\n      this.parametricSurface,\n      this.implicitSurface,\n      this.pmPoints[0],\n      getLast(this.pmPoints),\n      this.stepSize,\n      this.pmTangents[0],\n      this.tMin,\n      this.tMax,\n    )\n    return result\n  }\n}\n\nPICurve.prototype.tIncrement = 1\n","import {\n  assert,\n  assertVectors,\n  callsce,\n  getLast,\n  M4,\n  newtonIterate,\n  Tuple3,\n  V3,\n} from \"ts3dutils\"\n\nimport {\n  Curve,\n  curvePointPP,\n  followAlgorithmPP,\n  ImplicitCurve,\n  ImplicitSurface,\n  ISInfo,\n  P3,\n  ParametricSurface,\n  PlaneSurface,\n  Surface,\n  surfaceIsICurveIsInfosWithLine,\n} from \"../index\"\nimport { abs, ceil, floor } from \"../math\"\n\nexport class PPCurve extends ImplicitCurve {\n  constructor(\n    points: ReadonlyArray<V3>,\n    tangents: ReadonlyArray<V3>,\n    readonly parametricSurface1: ParametricSurface,\n    readonly parametricSurface2: ParametricSurface,\n    readonly st1s: ReadonlyArray<V3>,\n    readonly pmTangents: ReadonlyArray<V3> | undefined,\n    readonly stepSize: number,\n    dir: number = 1,\n    generator?: string,\n    tMin?: number,\n    tMax?: number,\n  ) {\n    super(points, tangents, dir, generator, tMin, tMax)\n    assert(ParametricSurface.is(parametricSurface1))\n    assert(ParametricSurface.is(parametricSurface2))\n    assert(Array.isArray(st1s))\n    assert(dir == 1)\n    assert(stepSize <= 1)\n  }\n\n  at(t: number) {\n    assert(!isNaN(t))\n    if (0 === t % 1) return this.points[t]\n    const startPoint = V3.lerp(\n      this.points[floor(t)],\n      this.points[ceil(t)],\n      t % 1,\n    )\n    return curvePointPP(\n      this.parametricSurface1,\n      this.parametricSurface2,\n      startPoint,\n    )!.p\n  }\n\n  isColinearTo(curve: Curve) {\n    if (curve instanceof PPCurve) {\n      if (this.equals(curve)) {\n        return true\n      }\n      if (\n        this.parametricSurface1.isCoplanarTo(curve.parametricSurface1) &&\n        this.parametricSurface1.isCoplanarTo(curve.parametricSurface2)\n      ) {\n        // TODO\n      }\n      return false\n    } else {\n      return false\n    }\n  }\n\n  containsPoint(p: V3) {\n    assertVectors(p)\n    // TODO: wrong, as there could be another curve\n    return (\n      this.parametricSurface1.containsPoint(p) &&\n      this.parametricSurface2.containsPoint(p) &&\n      !isNaN(this.pointT(p))\n    )\n  }\n\n  rootPoints() {\n    const pF1 = this.parametricSurface1.pUVFunc()\n    const pF2 = this.parametricSurface2.pUVFunc()\n    const pN1 = this.parametricSurface1.normalUVFunc()\n    const pN2 = this.parametricSurface2.normalUVFunc()\n\n    const rootsApprox = this.rootsApprox()\n    const results: Tuple3<V3[]> = [[], [], []]\n    for (let dim = 0; dim < 3; dim++) {\n      for (let i = 0; i < rootsApprox[dim].length; i++) {\n        const lambda = rootsApprox[dim][i]\n        const p = this.at(lambda)\n        assert(this.parametricSurface1.containsPoint(p))\n        const pp1 = this.parametricSurface1.uvP(p)\n        const { x: u, y: v } = this.parametricSurface2.uvP(p)\n        const startValues = [pp1.x, pp1.y, u, v]\n\n        function f(vals: number[]) {\n          const [u1, v1, u2, v2] = vals\n          const diff = pF1(u1, v1).minus(pF2(u2, v2))\n          const n1 = pN1(u1, v1)\n          const n2 = pN2(u2, v2)\n          const tangent = n1.cross(n2)\n          return [diff.x, diff.y, diff.z, tangent.e(dim)]\n        }\n\n        const pps = newtonIterate(f, startValues, 8)\n        // assert(pF1(pps[0], pps[1]).like(pF2(pps[2], pps[3])),\n        // \tpF1(pps[0], pps[1]).sce + pF2(pps[2], pps[3]).sce)\n        const result = pF1(pps[0], pps[1])\n        results[dim].push(result)\n      }\n    }\n    return results\n  }\n\n  roots(): [number[], number[], number[]] {\n    return this.rootPoints().map((ps) => ps.map((p) => this.pointT(p)))\n  }\n\n  pointTangent(pWC: V3): V3 {\n    assertVectors(pWC)\n    assert(this.containsPoint(pWC), \"this.containsPoint(pWC)\")\n    const n1 = this.parametricSurface1.normalP(pWC)\n    const n2 = this.parametricSurface2.normalP(pWC)\n    return n1.cross(n2)\n  }\n\n  transform(m4: M4) {\n    return new PPCurve(\n      m4.transformedPoints(this.points),\n      m4.transformedVectors(this.tangents),\n      this.parametricSurface1.transform(m4),\n      this.parametricSurface2.transform(m4),\n      this.st1s,\n      undefined,\n      this.stepSize,\n      this.dir,\n      undefined,\n    ) as this\n  }\n\n  toSource(): string {\n    return callsce(\n      \"PPCurve.forStartEnd\",\n      this.parametricSurface1,\n      this.parametricSurface2,\n      this.points[0],\n      getLast(this.points),\n      this.stepSize,\n    )\n  }\n\n  static forStartEnd(\n    ps1: ParametricSurface,\n    ps2: ParametricSurface,\n    startPoint: V3,\n    end: V3,\n    stepSize = 0.02,\n  ) {\n    const { points, tangents, st1s } = followAlgorithmPP(\n      ps1,\n      ps2,\n      startPoint,\n      stepSize,\n    )\n    return new PPCurve(points, tangents, ps1, ps2, st1s, undefined, stepSize, 1)\n  }\n\n  isInfosWithLine(\n    anchorWC: V3,\n    dirWC: V3,\n    tMin?: number | undefined,\n    tMax?: number | undefined,\n    lineMin?: number | undefined,\n    lineMax?: number | undefined,\n  ): ISInfo[] {\n    return surfaceIsICurveIsInfosWithLine.call(\n      this,\n      this.parametricSurface1,\n      this.parametricSurface2,\n      anchorWC,\n      dirWC,\n      tMin,\n      tMax,\n      lineMin,\n      lineMax,\n    )\n  }\n\n  isTsWithSurface(surface: Surface): number[] {\n    if (ImplicitSurface.is(surface)) {\n      const result: number[] = []\n      const iF = surface.implicitFunction()\n      const pUV1 = this.parametricSurface1.pUVFunc()\n      const pUV2 = this.parametricSurface2.pUVFunc()\n      let prevSignedDistance = iF(this.points[0])\n      for (let i = 1; i < this.points.length; i++) {\n        const point = this.points[i]\n        const signedDistance = iF(point)\n        if (prevSignedDistance * signedDistance <= 0) {\n          const startIndex =\n            abs(prevSignedDistance) < abs(signedDistance) ? i - 1 : i\n          const startPoint = this.points[startIndex]\n          const startUV1 = this.st1s[startIndex]\n          const startUV2 = this.parametricSurface2.uvP(startPoint)\n          const isSTUV = newtonIterate(\n            ([u1, v1, u2, v2]: number[]) => {\n              const ps1p = pUV1(u1, v1)\n              const ps2p = pUV2(u2, v2)\n              return [...ps1p.to(ps2p), iF(ps1p)]\n            },\n            [startUV1.x, startUV1.y, startUV2.x, startUV2.y],\n          )\n          result.push(\n            this.pointT(this.parametricSurface1.pUV(isSTUV[0], isSTUV[1])),\n          )\n        }\n        prevSignedDistance = signedDistance\n      }\n      return result\n    }\n    throw new Error(\"Method not implemented.\")\n  }\n\n  isTsWithPlane(planeWC: P3): number[] {\n    return this.isTsWithSurface(new PlaneSurface(planeWC))\n  }\n}\n","import {\n  arrayFromFunction,\n  assertNumbers,\n  eq,\n  eq0,\n  hasConstructor,\n  int,\n  le,\n  M4,\n  pqFormula,\n  V3,\n} from \"ts3dutils\"\n\nimport {\n  BezierCurve,\n  Curve,\n  EllipseCurve,\n  HyperbolaCurve,\n  ISInfo,\n  L3,\n  XiEtaCurve,\n} from \"../index\"\nimport { parabola4Projection } from \"./XiEtaCurve\"\n\n/**\n * eta = xi²\n */\nexport class ParabolaCurve extends XiEtaCurve {\n  static readonly XY = new ParabolaCurve(V3.O, V3.X, V3.Y)\n  static readonly YZ = new ParabolaCurve(V3.O, V3.Y, V3.Z)\n  static readonly ZX = new ParabolaCurve(V3.O, V3.Z, V3.X)\n\n  constructor(\n    center: V3,\n    f1: V3,\n    f2: V3,\n    tMin: number = -10,\n    tMax: number = 10,\n  ) {\n    super(center, f1, f2, tMin, tMax)\n  }\n\n  static eccentricity() {\n    return 1\n  }\n\n  static unitIsInfosWithLine(\n    anchorLC: V3,\n    dirLC: V3,\n    anchorWC: V3,\n    dirWC: V3,\n  ): ISInfo[] {\n    // para: x² = y\n    // line(t) = anchor + t dir\n    // (ax + t dx)² = ay + t dy\n    // ax² + t ax dx + t² dx² = ay + t dy\n    // t² dx² + t (ax dx + dy) + ay² + ay = 0\n    const pqDiv = dirLC.x ** 2\n    const lineTs = pqFormula(\n      (anchorLC.x * dirLC.x + dirLC.y) / pqDiv,\n      (anchorLC.x ** 2 + anchorLC.y) / pqDiv,\n    )\n    return lineTs\n      .filter((tOther) => le(0, anchorLC.y + tOther * dirLC.y))\n      .map((tOther) => ({\n        tThis: dirLC.x * tOther + anchorLC.x,\n        tOther: tOther,\n        p: L3.at(anchorWC, dirWC, tOther),\n      }))\n  }\n\n  static intersectionUnitLine(a: number, b: number, c: number): number[] {\n    /*\n\t\t solve system (5)/(6)\n\t\t g1 * xi + g2 * eta = g3 (6)\n\t\t g1 * xi + g2 * xi * xi = g3\n\t\t xi² + xi * g1/g2 - g3/g2 = 0\n\t\t */\n    return pqFormula(a / b, -c / b)\n  }\n\n  static XYLCValid(pLC: V3): boolean {\n    return eq(pLC.x ** 2, pLC.y)\n  }\n\n  static XYLCPointT(pLC: V3): number {\n    return pLC.x\n  }\n\n  static quadratic(a: V3, b: V3, c: V3): ParabolaCurve {\n    // (1 - t)² a + 2 * t * (1 - t) b + t² c\n    // (1 -2t +t²)a + (2t -2t²) b + t² c\n    // = t²(a - 2b + c) + t (-2a + 2b) + a\n    // (2t - 2) a + (1 - 2t) b + 2t c = t(2a + 2b - 2c) - 2a + b\n    // 2 a + -2 b + 2 c\n    const f2 = a.plus(c).minus(b.times(2))\n    const f1 = b.minus(a).times(2)\n    const center = a\n    return new ParabolaCurve(center, f1, f2, 0, 1)\n  }\n\n  at(t: number): V3 {\n    // center + f1 t + f2 t²\n    return this.center.plus(this.f1.times(t)).plus(this.f2.times(t * t))\n  }\n\n  tangentAt(t: number): V3 {\n    assertNumbers(t)\n    // f1 + f2 2 t\n    return this.f1.plus(this.f2.times(2 * t))\n  }\n\n  ddt(t: number): V3 {\n    assertNumbers(t)\n    return this.f2.times(2)\n  }\n\n  tangentAt2(xi: number, eta: number): V3 {\n    assertNumbers(xi, eta)\n    return this.f1.plus(this.f2.times(2 * eta))\n  }\n\n  reversed() {\n    return new this.constructor(\n      this.center,\n      this.f1.negated(),\n      this.f2,\n      -this.tMax,\n      -this.tMin,\n    )\n  }\n\n  /**\n   * tangent: f1 + 2 * t * f2 = 0\n   * t = -f1 / 2 / f2 (for individual dimensions)\n   */\n  roots(): [number[], number[], number[]] {\n    const dimRoots = (dim: int) =>\n      eq0(this.f2.e(dim)) ? [] : [-this.f1.e(dim) / 2 / this.f2.e(dim)]\n    return arrayFromFunction(3, dimRoots)\n  }\n\n  isColinearTo(curve: Curve): boolean {\n    if (!hasConstructor(curve, ParabolaCurve)) return false\n    const thisRA = this.rightAngled(),\n      curveRA = curve.rightAngled()\n    return (\n      thisRA.center.like(curveRA.center) &&\n      thisRA.f2.like(curveRA.f2) &&\n      thisRA.f1.likeOrReversed(curveRA.f1)\n    )\n  }\n\n  rightAngled() {\n    // looking for vertex of parabola\n    // this is the point where the tangent is perpendicular to the main axis (f2)\n    // tangent = f1 + f2 * 2 * t0\n    // f2 DOT (f1 + f2 * 2 * t0) == 0\n    // f1 DOT f2 + f2 DOT f2 * 2 * t0 == 0\n    // t0 == -(f1 DOT f2) / (f2 DOT f2 * 2)\n    const f1 = this.f1,\n      f2 = this.f2\n    const f1DOTf2 = f1.dot(f2)\n    if (eq0(f1DOTf2) && f1.hasLength(1)) {\n      return this\n    }\n    const t0 = -f1DOTf2 / f2.squared() / 2\n    // we need to rearange tMin/tMax\n    // tMin' = pointT(at(tMin)) =\n    const raCenter = this.at(t0)\n    const raF1 = this.tangentAt(t0),\n      raF1Length = raF1.length(),\n      raF11 = raF1.unit()\n    const repos = (t: number) => this.at(t).minus(raCenter).dot(raF11)\n    return new ParabolaCurve(\n      raCenter,\n      raF11,\n      f2.div(raF1Length ** 2),\n      repos(this.tMin),\n      repos(this.tMax),\n    )\n  }\n\n  arcLength(startT: number, endT: number): number {\n    let f1 = this.f1\n    const f2 = this.f2\n    const f1DOTf2 = f1.dot(f2)\n    let t0 = 0\n    if (!eq0(f1DOTf2)) {\n      t0 = -f1DOTf2 / f2.squared() / 2\n      f1 = f1.plus(f2.times(2 * t0))\n    }\n    const f1Length = f1.length()\n    const a = f2.length() / f1Length\n\n    function F(x: number) {\n      return (\n        Math.asinh(a * 2 * x) / 4 / a +\n        (x * Math.sqrt(1 + a * a * 4 * x * x)) / 2\n      )\n    }\n\n    return f1Length * (F(endT - t0) - F(startT - t0))\n  }\n\n  transform4(m4: M4): L3 | HyperbolaCurve | ParabolaCurve | EllipseCurve {\n    return parabola4Projection(this.matrix.transform(m4), this.tMin, this.tMax)\n  }\n\n  asBezier() {\n    return BezierCurve.quadratic(\n      this.at(-1),\n      new L3(this.at(-1), this.tangentAt(-1).unit()).isInfoWithLine(\n        new L3(this.at(1), this.tangentAt(1).unit()),\n      )!,\n      this.at(1),\n    ) as BezierCurve\n  }\n\n  /**\n   * Returns new ParabolaCurve that has its center point at this.at(t0)\n   * @param t0\n   */\n  recenter(t0: number) {\n    // this.at(t) = f2 t² + f1 t + center\n    // c2.at(t) = f2 (t + t0)² + f1 (t + t0) + center\n    // c2.at(t) = f2 (t² + 2 t0 t + t0²) + f1 (t + t0) + center\n    // c2.at(t) = f2 t² + (f1 + 2 f2 t0) t + center + f2 t0² + f1 t0\n    return new ParabolaCurve(\n      this.at(t0),\n      this.f1.plus(this.f2.times(2 * t0)),\n      this.f2,\n    )\n  }\n}\n\nParabolaCurve.prototype.tIncrement = 1 / 32\n","import {\n  arrayFromFunction,\n  assert,\n  assertf,\n  assertNumbers,\n  assertVectors,\n  between,\n  checkDerivate,\n  eq,\n  eq0,\n  fuzzyBetween,\n  hasConstructor,\n  int,\n  le,\n  lerp,\n  lt,\n  M4,\n  mapFilter,\n  newtonIterate1d,\n  newtonIterateSmart,\n  pqFormula,\n  TAU,\n  V3,\n} from \"ts3dutils\"\n\nimport {\n  Curve,\n  HyperbolaCurve,\n  intersectionUnitCircleLine,\n  intersectionUnitCircleLine2,\n  ISInfo,\n  L3,\n  P3,\n  ParabolaCurve,\n  XiEtaCurve,\n} from \"../index\"\n\nimport { atan2, cos, max, min, PI, sign, sqrt } from \"../math\"\nimport { parabola4Projection } from \"./XiEtaCurve\"\n\nexport class EllipseCurve extends XiEtaCurve {\n  static andFixTs(\n    center: V3,\n    f1: V3,\n    f2: V3,\n    tMin: number = 0,\n    tMax: number = PI,\n  ): EllipseCurve {\n    if (-PI <= tMin && tMax <= PI) {\n      return new EllipseCurve(center, f1, f2, tMin, tMax)\n    }\n    if (0 <= tMin && tMax <= TAU) {\n      return new EllipseCurve(\n        center,\n        f1.negated(),\n        f2.negated(),\n        tMin - PI,\n        tMax - PI,\n      )\n    }\n    if (-TAU <= tMin && tMax <= 0) {\n      return new EllipseCurve(\n        center,\n        f1.negated(),\n        f2.negated(),\n        tMin + PI,\n        tMax + PI,\n      )\n    }\n    throw new Error(\"Method not implemented.\")\n  }\n  static readonly UNIT = new EllipseCurve(V3.O, V3.X, V3.Y)\n\n  constructor(center: V3, f1: V3, f2: V3, tMin: number = 0, tMax: number = PI) {\n    super(center, f1, f2, tMin, tMax)\n    assert(-PI <= this.tMin && this.tMin < PI)\n    assert(-PI < this.tMax && this.tMax <= PI)\n  }\n\n  static XYLCValid(pLC: V3): boolean {\n    const { x, y } = pLC\n    return eq0(x ** 2 + y ** 2 - 1)\n  }\n\n  static XYLCPointT(pLC: V3, tMin: number, tMax: number): number {\n    assertNumbers(tMin, tMax)\n    const t = atan2(pLC.y, pLC.x)\n    const lowSplitter = lerp(tMin, tMax - TAU, 0.5)\n    if (t < lowSplitter) {\n      return t + TAU\n    }\n    const highSplitter = lerp(tMax, tMin + TAU, 0.5)\n    if (t > highSplitter) {\n      return t - TAU\n    }\n    return t\n  }\n\n  static intersectionUnitLine(\n    a: number,\n    b: number,\n    c: number,\n    tMin: number,\n    tMax: number,\n  ): number[] {\n    const isLC = intersectionUnitCircleLine2(a, b, c)\n    const result = []\n    for (const [xi, eta] of isLC) {\n      const t = EllipseCurve.XYLCPointT(new V3(xi, eta, 0), tMin, tMax)\n      fuzzyBetween(t, tMin, tMax) && result.push(t)\n    }\n    return result\n  }\n\n  static unitIsInfosWithLine(\n    anchorLC: V3,\n    dirLC: V3,\n    anchorWC: V3,\n    dirWC: V3,\n    tMin: number,\n    tMax: number,\n  ): ISInfo[] {\n    // ell: x² + y² = 1 = p²\n    // line(t) = anchor + t dir\n    // anchor² - 1 + 2 t dir anchor + t² dir² = 0\n    const pqDiv = dirLC.squared()\n    const lineTs = pqFormula(\n      (2 * dirLC.dot(anchorLC)) / pqDiv,\n      (anchorLC.squared() - 1) / pqDiv,\n    )\n    return lineTs\n      .filter((tOther) => le(0, anchorLC.y + tOther * dirLC.y))\n      .map((tOther) => ({\n        tThis: EllipseCurve.XYLCPointT(\n          dirLC.times(tOther).plus(anchorLC),\n          tMin,\n          tMax,\n        ),\n        tOther: tOther,\n        p: L3.at(anchorWC, dirWC, tOther),\n      }))\n  }\n\n  /**\n   * Returns a new EllipseCurve representing a circle parallel to the XY-plane.`\n   */\n  static semicircle(\n    radius: number,\n    center: V3 = V3.O,\n    tMin?: number,\n    tMax?: number,\n  ): EllipseCurve {\n    return new EllipseCurve(\n      center,\n      new V3(radius, 0, 0),\n      new V3(0, radius, 0),\n      tMin,\n      tMax,\n    )\n  }\n\n  static circleForCenter2P(\n    center: V3,\n    a: V3,\n    b: V3,\n    radius: number,\n    tMin?: number,\n    tMax?: number,\n  ) {\n    const f1 = center.to(a)\n    const normal = f1.cross(center.to(b))\n    const f2 = normal.cross(f1).toLength(f1.length())\n    return new EllipseCurve(\n      center,\n      f1,\n      f2,\n      undefined !== tMin ? tMin : 0,\n      undefined !== tMax ? tMax : f1.angleTo(center.to(b)),\n    )\n  }\n\n  split(tMin = this.tMin, tMax = this.tMax): EllipseCurve[] {\n    const result: EllipseCurve[] = []\n    tMin < 0 &&\n      result.push(\n        new EllipseCurve(\n          this.center,\n          this.f1.negated(),\n          this.f2.negated(),\n          tMin + PI,\n          min(0, tMax) + PI,\n        ),\n      )\n    tMax > 0 &&\n      result.push(\n        new EllipseCurve(this.center, this.f1, this.f2, max(0, tMin), tMax),\n      )\n    return result\n  }\n\n  static forAB(a: number, b: number, center: V3 = V3.O): EllipseCurve {\n    return super.forAB(a, b, center) as EllipseCurve\n  }\n\n  /**\n   * Create a circle curve which has a, b and c on it. a, b, c can't be on a straight line.\n   * tMin defaults to 0, tMax defaults to the value for c\n   */\n  static circleThroughPoints(a: V3, b: V3, c: V3, tMin = 0, tMax?: number) {\n    assertf(() => !L3.throughPoints(a, c).containsPoint(b))\n    const normal = a.to(b).cross(b.to(c))\n    const center = new L3(\n      a.lerp(b, 0.5),\n      normal.cross(a.to(b)).unit(),\n    ).isInfoWithLine(new L3(b.lerp(c, 0.5), normal.cross(b.to(c)).unit()))!\n    const f1 = center.to(a).negated()\n    return new EllipseCurve(\n      center,\n      f1,\n      normal.unit().cross(f1),\n      -PI,\n      undefined === tMax\n        ? f1.angleRelativeNormal(center.to(c), normal.unit())\n        : tMax,\n    )\n  }\n\n  getAreaInDir(\n    right: V3,\n    up: V3,\n    tStart: number,\n    tEnd: number,\n  ): { area: number; centroid: V3 } {\n    //assertf(() => tStart < tEnd)\n    assertf(() => right.isPerpendicularTo(this.normal))\n    assertf(() => up.isPerpendicularTo(this.normal))\n    //assertf(() => EllipseCurve.isValidT(tStart), tStart)\n    //assertf(() => EllipseCurve.isValidT(tEnd), tEnd)\n\n    const upLC = this.matrixInverse.transformVector(up)\n    const rightLC = upLC.cross(V3.Z)\n    const normTStart = tStart - rightLC.angleXY()\n    const normTEnd = tEnd - rightLC.angleXY()\n    const transformedOriginY = this.matrixInverse\n      .getTranslation()\n      .dot(upLC.unit())\n    // integral of sqrt(1 - x²) from 0 to cos(t)\n    // Basically, we want\n    // INTEGRAL[cos(t); PI/2] sqrt(1 - x²) dx\n    // INTEGRAL[PI/2: cos(t)] -sqrt(1 - x²) dx\n    // = INTEGRAL[cos(0); cos(t)] -sqrt(1 - x²) dx\n    // = INTEGRAL[0; t] -sqrt(1 - cos²(t)) * -sin(t) dt\n    // = INTEGRAL[0; t] -sin(t) * -sin(t) dt\n    // = INTEGRAL[0; t] sin²(t) dt (partial integration / wolfram alpha)\n    // = (1/2 * (t - sin(t) * cos(t)))[0; t] (this form has the distinct advantage of being defined everywhere)\n    function fArea(t: number) {\n      return (t - Math.sin(t) * Math.cos(t)) / 2\n    }\n\n    // for the centroid, we want\n    // cx = 1 / area * INTEGRAL[cos(t); PI/2] x * f(x) dx\n    // cx = 1 / area * INTEGRAL[cos(t); PI/2] x * sqrt(1 - x²) dx\n    // cx = 1 / area * INTEGRAL[cos(0); cos(t)] x * -sqrt(1 - x²) dx\n    // ...\n    // cx = 1 / area * INTEGRAL[0; t] cos(t) * sin²(t) dt // WA\n    // cx = 1 / area * (sin^3(t) / 3)[0; t]\n    function cxTimesArea(t: number) {\n      return Math.pow(Math.sin(t), 3) / 3\n    }\n\n    // cy = 1 / area * INTEGRAL[cos(t); PI/2] f²(x) / 2 dx\n    // cy = 1 / area * INTEGRAL[cos(0); cos(t)] -(1 - x²) / 2 dx\n    // cy = 1 / area * INTEGRAL[0; t] (cos²(t) - 1) * -sin(t) / 2 dt\n    // cy = 1 / area * (cos (3 * t) - 9 * cos(t)) / 24 )[0; t]\n    function cyTimesArea(t: number) {\n      return (Math.cos(3 * t) - 9 * Math.cos(t)) / 24\n    }\n\n    const restArea =\n      -transformedOriginY * (-Math.cos(normTEnd) + Math.cos(normTStart))\n    const area = fArea(normTEnd) - fArea(normTStart) + restArea\n    const cxt =\n      (cxTimesArea(normTEnd) -\n        cxTimesArea(normTStart) +\n        ((-transformedOriginY * (-Math.cos(normTEnd) - Math.cos(normTStart))) /\n          2) *\n          restArea) /\n      area\n    const cyt =\n      (cyTimesArea(normTEnd) -\n        cyTimesArea(normTStart) -\n        (-transformedOriginY / 2) * restArea) /\n      area\n    const factor = this.matrix.xyAreaFactor() // * upLC.length()\n    //console.log('fctor', factor, 'area', area, 'resultarea', area* factor)\n    assert(!eq0(factor))\n    return {\n      area: area * factor,\n      centroid: this.matrix.transformPoint(\n        M4.rotateZ(rightLC.angleXY()).transformPoint(new V3(cxt, cyt, 0)),\n      ),\n    }\n  }\n\n  at(t: number): V3 {\n    assertNumbers(t)\n    //assert(this.isValidT(t))\n    // = center + f1 cos t + f2 sin t\n    return this.center\n      .plus(this.f1.times(Math.cos(t)))\n      .plus(this.f2.times(Math.sin(t)))\n  }\n\n  tangentAt(t: number): V3 {\n    assertNumbers(t)\n    //assert(this.isValidT(t))\n    // ) f2 cos(t) - f1 sin(t)\n    return this.f2.times(Math.cos(t)).minus(this.f1.times(Math.sin(t)))\n  }\n\n  ddt(t: number): V3 {\n    assertNumbers(t)\n    assert(this.isValidT(t))\n    return this.f2.times(-Math.sin(t)).minus(this.f1.times(Math.cos(t)))\n  }\n\n  tangentAt2(xi: number, eta: number): V3 {\n    return this.f2.times(xi).minus(this.f1.times(eta))\n  }\n\n  isCircular(): boolean {\n    return (\n      eq(this.f1.length(), this.f2.length()) &&\n      this.f1.isPerpendicularTo(this.f2)\n    )\n  }\n\n  isColinearTo(curve: Curve): boolean {\n    if (!hasConstructor(curve, EllipseCurve)) return false\n    if (!this.center.like(curve.center)) {\n      return false\n    }\n    if (this == curve) {\n      return true\n    }\n    if (this.isCircular()) {\n      return (\n        curve.isCircular() &&\n        eq(this.f1.length(), curve.f1.length()) &&\n        this.normal.isParallelTo(curve.normal)\n      )\n    } else {\n      let { f1: f1, f2: f2 } = this.rightAngled(),\n        { f1: c1, f2: c2 } = curve.rightAngled()\n      if (f1.length() > f2.length()) {\n        ;[f1, f2] = [f2, f1]\n      }\n      if (c1.length() > c2.length()) {\n        ;[c1, c2] = [c2, c1]\n      }\n      return (\n        eq(f1.squared(), Math.abs(f1.dot(c1))) &&\n        eq(f2.squared(), Math.abs(f2.dot(c2)))\n      )\n    }\n  }\n\n  pointT(pWC: V3) {\n    assertVectors(pWC)\n    assert(this.containsPoint(pWC))\n    const pLC = this.matrixInverse.transformPoint(pWC)\n    const t = EllipseCurve.XYLCPointT(pLC, this.tMin, this.tMax)\n    assert(this.isValidT(t))\n    return t\n  }\n\n  reversed(): EllipseCurve {\n    return new EllipseCurve(\n      this.center,\n      this.f1.negated(),\n      this.f2,\n      PI - this.tMax,\n      PI - this.tMin,\n    )\n  }\n\n  eccentricity() {\n    const mainAxes = this.rightAngled()\n    const f1length = mainAxes.f1.length(),\n      f2length = mainAxes.f1.length()\n    const [a, b] =\n      f1length > f2length ? [f1length, f2length] : [f2length, f1length]\n    return Math.sqrt(1 - (b * b) / a / a)\n  }\n\n  circumference(): number {\n    return this.arcLength(-Math.PI, Math.PI)\n  }\n\n  arcLength(\n    tStart: number = this.tMin,\n    tEnd: number = this.tMax,\n    steps: int = 2,\n  ): number {\n    assert(tStart < tEnd, \"startT < endT\")\n    const f1Length = this.f1.length()\n    if (eq(f1Length, this.f2.length())) {\n      return f1Length * (tEnd - tStart)\n    }\n    return super.arcLength(tStart, tEnd, steps)\n  }\n\n  circumferenceApproximate(): number {\n    // approximate circumference by Ramanujan\n    // https://en.wikipedia.org/wiki/Ellipse#Circumference\n    const { f1, f2 } = this.rightAngled(),\n      a = f1.length(),\n      b = f2.length()\n    const h = (a - b) ** 2 / (a + b) ** 2\n    return Math.PI * (a + b) * (1 + (3 * h) / (10 + Math.sqrt(4 - 3 * h)))\n  }\n\n  /**\n   * Radii of the ellipse are described by\n   * q(phi) = f1 * cos(phi) + f2 * sin(phi)\n   * or q(xi, eta) = f1 * xi + f2 * eta (1) with the added condition\n   * xi² + eta² = 1 (2)\n   * we want to find the radius where the corresponding tangent is perpendicular\n   * tangent: q'(phi) = f1 * -sin(phi) + f2 * cos(phi)\n   * tangent: q'(xi, eta) = f1 * -eta + f2 * xi\n   * perpendicular when: q'(xi, eta) DOT q(xi, eta) = 0\n   * (f1 * -eta + f2 * xi) DOT (f1 * xi + f2 * eta) = 0\n   * DOT is distributive:\n   * f1² * (-eta * xi) + f1 * f2 * (-eta² + xi²) + f2² * (xi * eta) = 0\n   * (f2² - f1²) * (eta * xi) + f1 * f2 * (-eta² + xi²) = 0\n   * a * (xi² - eta²) + b * xi * eta = 0 (2)\n   * with a = f1 * f2, b = f2² - f1²\n   * => (xi/eta)² + xi/eta * b/a + 1 = 0 (divide by a * eta²)\n   * xi/eta = b/a/2 +- sqrt(b²/a²/4 - 1) | * 2*a*eta\n   * 2 * a * xi = eta * (b +- sqrt(b² - 4 * a²))\n   * g1 * xi - g2 * eta = 0 (3)\n   * with g1 = 2 * a, g2 = b +- sqrt(b² - 4 * a²)\n   * Solve (3), (2) with intersectionUnitCircleLine\n   */\n  rightAngled(): EllipseCurve {\n    const f1 = this.f1,\n      f2 = this.f2,\n      a = f1.dot(f2),\n      b = f2.squared() - f1.squared()\n    if (eq0(a)) {\n      return this\n    }\n    const g1 = 2 * a,\n      g2 = b + Math.sqrt(b * b + 4 * a * a)\n    const { x1: xi, y1: eta } = intersectionUnitCircleLine(g1, g2, 0)\n    const f1RA = f1.times(xi).plus(f2.times(eta))\n    const f2RA = f1.times(-eta).plus(f2.times(xi))\n    return new EllipseCurve(this.center, f1RA, f2RA, -PI, PI)\n  }\n\n  isInfosWithEllipse(ellipse: EllipseCurve): ISInfo[] {\n    if (\n      this.normal.isParallelTo(ellipse.normal) &&\n      eq0(this.center.minus(ellipse.center).dot(ellipse.normal))\n    ) {\n      // ellipses are coplanar\n      const ellipseLCRA = ellipse.transform(this.matrixInverse).rightAngled()\n\n      const r1 = ellipseLCRA.f1.lengthXY(),\n        r2 = ellipseLCRA.f2.lengthXY(),\n        centerDist = ellipseLCRA.center.lengthXY()\n      const rMin = min(r1, r2),\n        rMax = max(r1, r2)\n      if (\n        lt(centerDist + rMax, 1) || // entirely inside unit circle\n        lt(1, centerDist - rMax) || // entirely outside unit circle\n        lt(1, rMin - centerDist) || // contains unit circle\n        (eq(1, r1) && eq(1, r2) && eq0(centerDist)) // also unit circle, return no IS\n      ) {\n        return []\n      }\n\n      const f = (t: number) => ellipseLCRA.at(t).lengthXY() - 1\n      const df = (t: number) =>\n        ellipseLCRA.at(t).xy().dot(ellipseLCRA.tangentAt(t)) /\n        ellipseLCRA.at(t).lengthXY()\n      checkDerivate(f, df, -PI, PI, 1)\n      const ellipseLCRATs: number[] = []\n      for (let startT = (-4 / 5) * PI; startT < PI; startT += PI / 4) {\n        let t = newtonIterateSmart(f, startT, 16, df, 1e-4)\n        le(t, -PI) && (t += TAU)\n        assert(!isNaN(t))\n        if (\n          between(t, -PI, PI) &&\n          eq0(f(t)) &&\n          !ellipseLCRATs.some((r) => eq(t, r))\n        ) {\n          ellipseLCRATs.push(t)\n        }\n      }\n      const result: ISInfo[] = []\n      for (const ellipseLCRAT of ellipseLCRATs) {\n        const p = this.matrix.transformPoint(ellipseLCRA.at(ellipseLCRAT))\n        if (this.containsPoint(p) && ellipse.containsPoint(p)) {\n          result.push({ tThis: this.pointT(p), tOther: ellipse.pointT(p), p })\n        }\n      }\n      return result\n\n      //const angle = ellipseLCRA.f1.angleXY()\n      //const aSqr = ellipseLCRA.f1.squared(), bSqr = ellipseLCRA.f2.squared()\n      //const a = Math.sqrt(aSqr), b = Math.sqrt(bSqr)\n      //const {x: centerX, y: centerY} = ellipseLCRA.center\n      //const rotCenterX = centerX * Math.cos(-angle) + centerY * -Math.sin(-angle)\n      //const rotCenterY = centerX * Math.sin(-angle) + centerY * Math.cos(-angle)\n      //const rotCenter = V(rotCenterX, rotCenterY)\n      //const f = t => {\n      //\tconst lex = Math.cos(t) - rotCenterX, ley = Math.sin(t) - rotCenterY\n      //\treturn lex * lex / aSqr + ley * ley / bSqr - 1\n      //}\n      //const f2 = (x, y) => (x * x + y * y - 1)\n      //const f3 = (x, y) => ((x - rotCenterX) * (x - rotCenterX) / aSqr + (y - rotCenterY) * (y - rotCenterY) /\n      // bSqr - 1) const results = [] const resetMatrix = this.matrix.times(M4.rotateZ(angle)) for (let startT =\n      // Math.PI / 4; startT < 2 * Math.PI; startT += Math.PI / 2) { const startP = EllipseCurve.XY.at(startT)\n      // const p = newtonIterate2d(f3, f2, startP.x, startP.y, 10) if (p && !results.some(r => r.like(p))) {\n      // results.push(p) } } const rotEl = new EllipseCurve(rotCenter, V(a, 0, 0), V(0, b, 0)) return\n      // results.map(pLC => { const p = resetMatrix.transformPoint(pLC) return {tThis: this.pointT(p, PI),\n      // tOther: ellipse.pointT(p, PI), p} })\n    } else {\n      return mapFilter(\n        this.isTsWithPlane(\n          P3.normalOnAnchor(ellipse.normal.unit(), ellipse.center),\n        ),\n        (t) => {\n          const p = this.at(t)\n          if (ellipse.containsPoint(p)) {\n            return { tThis: t, tOther: ellipse.pointT(p), p }\n          }\n          return undefined\n        },\n      )\n    }\n  }\n\n  isInfosWithCurve(curve: Curve): ISInfo[] {\n    if (curve instanceof EllipseCurve) {\n      return this.isInfosWithEllipse(curve)\n    }\n    return super.isInfosWithCurve(curve)\n  }\n\n  transform4(m4: M4): L3 | HyperbolaCurve | ParabolaCurve | EllipseCurve {\n    const tMap = (t: number) => sign(t) * sqrt((1 - cos(t)) / (1 + cos(t)))\n    // prettier-ignore\n    const parabolaToUnitEllipse = new M4(\n      0, -1, 0, 1,\n      2,  0, 0, 0,\n      0,  0, 1, 0,\n      0,  1, 0, 1);\n    return parabola4Projection(\n      M4.product(m4, this.matrix, parabolaToUnitEllipse),\n      tMap(this.tMin),\n      tMap(this.tMax),\n    )\n  }\n\n  roots(): [number[], number[], number[]] {\n    // tangent(t) = f2 cos t - f1 sin t\n    // solve for each dimension separately\n    // tangent(eta, xi) = f2 eta - f1 xi\n\n    return arrayFromFunction(3, (dim) => {\n      const a = this.f2.e(dim)\n      const b = -this.f1.e(dim)\n      return intersectionUnitCircleLine2(a, b, 0)\n        .map(([xi, eta]) => Math.atan2(eta, xi))\n        .filter((t) => this.isValidT(t))\n    })\n  }\n\n  closestTToPoint(p: V3, tStart?: number): number {\n    // (at(t) - p) * tangentAt(t) = 0\n    // (xi f1 + eta f2 + q) * (xi f2 - eta f1) = 0\n    // xi eta (f2^2-f1^2) + xi f2 q - eta² f1 f2 + xi² f1 f2 - eta f1 q = 0\n    //  (xi² - eta²) f1 f2 + xi eta (f2^2-f1^2) + xi f2 q - eta f1 q = 0\n\n    // atan2 of p is a good first approximation for the searched t\n    tStart = tStart || this.matrixInverse.transformPoint(p).angleXY()\n    const pRelCenter = p.minus(this.center)\n    const f = (t: number) =>\n      this.tangentAt(t).dot(\n        this.f1\n          .times(Math.cos(t))\n          .plus(this.f2.times(Math.sin(t)))\n          .minus(pRelCenter),\n      )\n    return newtonIterate1d(f, tStart, 8)\n  }\n\n  area(): number {\n    // see\n    // https://upload.wikimedia.org/wikipedia/commons/thumb/4/4e/Cross_product_parallelogram.svg/220px-Cross_product_parallelogram.svg.png\n    return Math.PI * this.f1.cross(this.f2).length()\n  }\n\n  angleToT(phi: number): number {\n    // atan2(y, x) = phi\n    const phiDir = this.f1\n      .unit()\n      .times(Math.cos(phi))\n      .plus(this.f2.rejectedFrom(this.f1).unit().times(Math.sin(phi)))\n    const dirLC = this.matrixInverse.transformVector(phiDir)\n    return dirLC.angleXY()\n  }\n}\n\nEllipseCurve.prototype.hlol = Curve.hlol++\nEllipseCurve.prototype.tIncrement = (2 * Math.PI) / (4 * 32)\n","import {\n  arrayFromFunction,\n  arraySamples,\n  assert,\n  between,\n  DEG,\n  eq,\n  eq0,\n  firstUnsorted,\n  getLast,\n  hasConstructor,\n  int,\n  le,\n  lerp,\n  M4,\n  max,\n  MINUS,\n  newtonIterateWithDerivative2,\n  NLA_DEBUG,\n  setLast,\n  snap,\n  snap0,\n  Tuple2,\n  Tuple3,\n  V,\n  V3,\n  vArrGet,\n  Vector,\n  VV,\n  withMax,\n} from \"ts3dutils\"\n\nimport {\n  BezierCurve,\n  Curve,\n  EllipseCurve,\n  HyperbolaCurve,\n  L3,\n  P3,\n  ParabolaCurve,\n} from \"../index\"\nimport { abs, cos, cosh, PI, sin, sinh, sqrt, SQRT1_2 } from \"../math\"\nimport { ISInfo } from \"./Curve\"\nimport * as ts3dutils from \"ts3dutils\"\n/**\n * Non-Uniform Rational B-Spline implementation.\n *\n * See https://pages.mtu.edu/~shene/COURSES/cs3621/NOTES/ for a good reference.\n *\n *\n */\nexport class NURBS extends Curve {\n  constructor(\n    /**\n     * The control points of the NURBS curve, as 4D homogeneous coordinates.\n     */\n    readonly points: ReadonlyArray<Vector>,\n    /**\n     * The degree of the NURBS curve. Must be at least 1 (linear).\n     */\n    readonly degree: int,\n    readonly knots: ReadonlyArray<number> = NURBS.openUniformKnots(\n      points.length,\n      degree,\n    ),\n    tMin: number = knots[degree],\n    tMax: number = knots[knots.length - degree - 1],\n  ) {\n    super(tMin, tMax)\n    const knotsLength = points.length + degree + 1\n    NLA_DEBUG && Object.freeze(points)\n    NLA_DEBUG && Object.freeze(knots)\n\n    assert(\n      knots.length === knotsLength,\n      \"bad knot vector length: expected \" +\n        knotsLength +\n        \" (degree = \" +\n        degree +\n        \" pcount = \" +\n        points.length +\n        \"), but was \" +\n        knots.length,\n    )\n    assert(knots[degree] <= tMin)\n    assert(tMax <= knots[knots.length - degree - 1])\n    for (let i = 0; i < points.length; i++) {\n      assert(points[i].dim() == 4)\n    }\n    assert(degree >= 1, \"degree must be at least 1 (linear)\")\n    assert(degree % 1 == 0)\n    assert(\n      -1 == firstUnsorted(knots, MINUS),\n      \"knot values must be in ascending order\",\n    )\n  }\n\n  getConstructorParameters() {\n    return [this.points, this.degree, this.knots]\n  }\n\n  at4(t: number) {\n    NLA_DEBUG &&\n      assert(\n        between(t, this.tMin, this.tMax),\n        t + \" \" + this.tMin + \" \" + this.tMax,\n      )\n    const { points, degree, knots } = this\n\n    // find s (the spline segment) for the [t] value provided\n    const s = this.tInterval(t)\n\n    const v = Vector.pack(\n      points,\n      new Float64Array((degree + 1) * 4),\n      s - degree,\n      0,\n      degree + 1,\n    )\n\n    for (let level = 0; level < degree; level++) {\n      // build level l of the pyramid\n      for (let i = degree; i > level; i--) {\n        const alpha =\n          (t - knots[i + s - degree]) /\n          (knots[i + s - level] - knots[i + s - degree])\n\n        // interpolate each component\n        for (let dim = 0; dim < 4; dim++) {\n          v[i * 4 + dim] =\n            (1 - alpha) * v[(i - 1) * 4 + dim] + alpha * v[i * 4 + dim]\n        }\n      }\n    }\n\n    return new Vector(v.slice(degree * 4, (degree + 1) * 4))\n  }\n\n  at(t: number) {\n    return this.at4(t).p3()\n  }\n\n  /**\n   d(k, i, t) = a(i, k, t) * d(k - 1, i, t) + (1 - a(i, k, t)) * d(k - 1, i - 1, t)\n   a(i, k, t) = (t - knots[i]) / (knots[i + 1 + n - k] - knots[i])\n   a'(i, k, t) = 1 / (knots[i + 1 + n - k] - knots[i])\n\n   d/dt =  a(i, k, t) * d'(k - 1, i, t) + a'(i, k, t) * d(k - 1, i, t)\n   + (1 - a(i, k, t)) * d'(k - 1, i - 1, t) + a'(i, k, t) * d(k - 1, i - 1, t)\n   */\n  ptDtDdt4(t: number): [Vector, Vector, Vector] {\n    const { points, degree, knots } = this\n\n    // find s (the spline segment) for the [t] value provided\n    const s = this.tInterval(t)\n\n    const v = Vector.pack(\n      points,\n      new Float64Array((degree + 1) * 4),\n      s - degree,\n      0,\n      degree + 1,\n    )\n\n    let ddt: Vector = Vector.Zero(4)\n    let derivative: Vector\n\n    for (let level = 0; level < degree; level++) {\n      if (level == degree - 2) {\n        // see https://www.globalspec.com/reference/61012/203279/10-8-derivatives\n        const a = new Vector(v.slice(degree * 4, (degree + 1) * 4))\n        const b = new Vector(v.slice((degree - 1) * 4, degree * 4))\n        const c = new Vector(v.slice((degree - 2) * 4, (degree - 1) * 4))\n\n        function step(\n          k: int,\n          i: int,\n          dkMinus1iMinus1: Vector,\n          dkMinus1i: Vector,\n        ) {\n          return dkMinus1i\n            .minus(dkMinus1iMinus1)\n            .times(k / (knots[i + degree - k] - knots[i - 1]))\n        }\n\n        ddt = step(\n          degree,\n          s + 1,\n          step(degree - 1, s + 1, a, b),\n          step(degree - 1, s, b, c),\n        )\n      }\n      if (level == degree - 1) {\n        const a = new Vector(v.slice(degree * 4, (degree + 1) * 4))\n        const b = new Vector(v.slice((degree - 1) * 4, degree * 4))\n        derivative = b!.minus(a!).times(degree / (knots[s] - knots[s + 1]))\n      }\n      for (let i = degree; i > level; i--) {\n        const alpha =\n          (t - knots[i + s - degree]) /\n          (knots[i + s - level] - knots[i + s - degree])\n\n        // interpolate each component\n        for (let dim = 0; dim < 4; dim++) {\n          v[i * 4 + dim] =\n            (1 - alpha) * v[(i - 1) * 4 + dim] + alpha * v[i * 4 + dim]\n        }\n      }\n    }\n\n    const p = new Vector(v.slice(degree * 4, degree * 4 + 4))\n\n    return [p, derivative!, ddt!]\n  }\n\n  tangentAt(t: number) {\n    // x(t) = xw(t) / w(t)\n    // quotient rule\n\n    const [p, derivative] = this.ptDtDdt4(t)\n\n    const expected = derivative\n      .times(p.w)\n      .minus(p.times(derivative.w))\n      .div(p.w ** 2)\n      .V3()\n\n    return expected\n  }\n\n  ddt(t: number) {\n    const [p, dt, ddt] = this.ptDtDdt4(t)\n    // =(-w(t) x(t) w''(t) - 2 w(t) w'(t) x'(t) + 2 x(t) w'(t)^2 + w(t)^2 x''(t))/w(t)^3\n    // =(x(t) ((-w(t)) w''(t) + 2 w'(t)^2) - x'(t) 2 w(t) w'(t) + x''(t) w(t)^2 )/w(t)^3\n    // prettier-ignore\n    return Vector.add(\n      p.times(-p.w * ddt.w + 2 * dt.w ** 2),\n      dt.times(-2 * p.w * dt.w),\n      ddt.times(p.w ** 2),\n    ).div(p.w ** 3).V3()\n  }\n\n  ptDtDdt(t: number) {\n    const [pt, dt4, ddt4] = this.ptDtDdt4(t)\n    return [\n      pt.p3(),\n      dt4\n        .times(pt.w)\n        .minus(pt.times(dt4.w))\n        .div(pt.w ** 2)\n        .V3(),\n      Vector.add(\n        pt.times(-pt.w * ddt4.w + 2 * dt4.w ** 2), //\n        dt4.times(-2 * pt.w * dt4.w),\n        ddt4.times(pt.w ** 2),\n      )\n        .div(pt.w ** 3)\n        .V3(),\n    ]\n  }\n\n  pointT(pWC: V3) {\n    return this.closestTToPoint(pWC)\n  }\n\n  closestTToPoint(\n    p: V3,\n    tStart?: number,\n    tMin = this.tMin,\n    tMax = this.tMax,\n  ): number {\n    // this.at(t) has minimal distance to p when this.tangentAt(t) is perpendicular to\n    // the vector between this.at(t) and p. This is the case iff the dot product of the two is 0.\n    // f = (this.at(t) - p) . (this.tangentAt(t)\n    // df = this.tangentAt(t) . this.tangentAt(t) + (this.at(t) - p) . this.ddt(t)\n    //    = this.tangentAt(t)² + (this.at(t) - p) . this.ddt(t)\n    const f = (t: number): Tuple2<number> => {\n      const [pt, dt, ddt] = this.ptDtDdt(t)\n      return [pt.minus(p).dot(dt), dt.squared() + pt.minus(p).dot(ddt)]\n    }\n    //checkDerivate(f, df, tMin, tMax)\n\n    const STEPS = 32\n    if (undefined === tStart) {\n      tStart = withMax(\n        arraySamples(tMin, tMax, STEPS),\n        (t) => -this.at(t).distanceTo(p),\n      )!\n    }\n\n    const result = newtonIterateWithDerivative2(\n      f,\n      tStart,\n      8,\n      this.tMin,\n      this.tMax,\n    )\n    //assert(undefined !== result)\n    return result!\n  }\n\n  containsPoint(pWC: V3) {\n    const tGuess = this.closestTToPoint(pWC)\n    return undefined === tGuess ? false : this.at(tGuess).like(pWC)\n  }\n\n  derivate(): NURBS {\n    const k = this.degree\n    const ps = arrayFromFunction(this.points.length - 1, (i) =>\n      this.points[i]\n        .to(this.points[i + 1])\n        .times(k / (this.knots[i + k + 1] - this.knots[i + 1])),\n    )\n    return new NURBS(\n      ps,\n      this.degree - 1,\n      this.knots.slice(1, -1),\n      this.tMin,\n      this.tMax,\n    )\n  }\n\n  /**\n   * Create a new NURBS of equal degree with the added knot [newKnot]. New NURBS will have one additional control\n   * point.\n   */\n  withKnot(newKnot: number) {\n    assert(between(newKnot, this.tMin, this.tMax))\n    const k = this.tInterval(newKnot)\n    const { knots, points, degree } = this\n    const insertPoints = arrayFromFunction(this.degree, (j) => {\n      const i = k - degree + 1 + j\n      const aiNumerator = newKnot - knots[i]\n      // 0/0 defined as 0:\n      const ai =\n        aiNumerator == 0 ? 0 : aiNumerator / (knots[i + degree] - knots[i])\n      assert(between(ai, 0, 1))\n      return Vector.lerp(points[i - 1], points[i], ai)\n    })\n    const newPoints = points.slice()\n    newPoints.splice(k - degree + 1, degree - 1, ...insertPoints)\n    const newKnots = knots.slice()\n    newKnots.splice(k + 1, 0, newKnot)\n    return new NURBS(newPoints, degree, newKnots, this.tMin, this.tMax)\n  }\n\n  removeKnot(t: number) {\n    const { knots, points, degree } = this\n    let k = this.tInterval(t),\n      s = 0 // s = multiplicity of the knot\n    while (knots[k + 1] == t) {\n      k++\n      s++\n    }\n    if (s == 0) throw new Error(\"There is no knot \" + t + \"!\")\n    // the points which were relevant when inserting were (k - p - 1) to (k - 1). (- 1) because the current k has\n    // been increased by one due to the insertion.\n    // p - 1 points were replaced by p points, hence we need to generate the original p - 1 point, + 1 to check if\n    // this transformation is valid.\n    const insertPoints = [points[k - degree - 1]]\n    const oldKnots = knots.slice()\n    oldKnots.splice(k, 1)\n    for (let i = k - degree; i <= k - s; i++) {\n      const alphaInv = (oldKnots[i + degree] - oldKnots[i]) / (t - oldKnots[i])\n      const oldPoint = Vector.lerp(getLast(insertPoints), points[i], alphaInv)\n      insertPoints.push(oldPoint)\n    }\n    if (getLast(insertPoints).like(points[k + 1 - s])) {\n      const oldPoints = points.slice()\n      oldPoints.splice(k - degree - 1, degree - s + 3, ...insertPoints)\n      return new NURBS(oldPoints, degree, oldKnots)\n    }\n    return undefined\n  }\n\n  static openUniformKnots(pointCount: int, degree: int, tMin = 0, tMax = 1) {\n    const knotsLength = pointCount + degree + 1\n    return arrayFromFunction(knotsLength, (i) => {\n      if (i <= degree) {\n        return tMin\n      } else if (i >= knotsLength - degree - 1) {\n        return tMax\n      } else {\n        return lerp(tMin, tMax, (i - degree) / (knotsLength - degree * 2 - 1))\n      }\n    })\n  }\n\n  static bezierKnots(\n    degree: int,\n    tMin: number = 0,\n    tMax: number = 1,\n  ): number[] {\n    const result = new Array((degree + 1) * 2)\n    for (let i = 0; i < degree + 1; i++) {\n      result[i] = tMin\n      result[degree + 1 + i] = tMax\n    }\n    return result\n  }\n\n  static fromBezier(bezier: BezierCurve) {\n    const bezier01 = bezier.selectPart(bezier.tMin, bezier.tMax)\n    return NURBS.Bezier(bezier01.points)\n  }\n\n  static Bezier(points: (V3 | Vector)[], tMin = 0, tMax = 1) {\n    return new NURBS(\n      points.map((p) =>\n        p instanceof V3 ? new Vector(new Float64Array([p.x, p.y, p.z, 1])) : p,\n      ),\n      points.length - 1,\n      arrayFromFunction(points.length * 2, (i) => (i < points.length ? 0 : 1)),\n      tMin,\n      tMax,\n    )\n  }\n\n  static fromHyperbola(\n    hyperbola: HyperbolaCurve,\n    tMin = hyperbola.tMin,\n    tMax = hyperbola.tMax,\n  ) {\n    const p0 = HyperbolaCurve.XY.at(tMin)\n    const p2 = HyperbolaCurve.XY.at(tMax)\n    const p1 = new V3(\n      (sinh(tMin) - sinh(tMax)) / sinh(tMin - tMax),\n      (cosh(tMin) - cosh(tMax)) / sinh(tMin - tMax),\n      0,\n    )\n    // M: midpoint between p0 and p2\n    // X: intersection of line through p1 and M and unit hyperbola\n    // result.at(1/2) = X\n    // result.at(1/2) = (1/4 p0 + 1/2 p1 w + 1/4 p2) / (1/4 + 1/ 2 w + 1/4)\n    // result.at(1/2) = (1/2 p0 + p1 w + 1/2 p2) / (1 + w)\n    // result.at(1/2) = (M + p1 w) / (1 + w) = X\n    // => w * (p1 - X) = (X - M)\n    // as p1, X and M are all on the same line, we can solve this equation with only the x\n    const M = p0.lerp(p2, 0.5)\n    const Xx = 1 / sqrt(1 - (M.y / M.x) ** 2)\n    const w = (Xx - M.x) / (p1.x - Xx)\n    return NURBS.fromV3s([p0, p1, p2], 2, undefined, [1, w, 1]).transform(\n      hyperbola.matrix,\n    )\n  }\n\n  static fromParabola(parabola: ParabolaCurve) {\n    return NURBS.fromBezier(parabola.asBezier())\n  }\n\n  static fromEllipse(ellipse: EllipseCurve) {\n    const unitSemiEllipse = new NURBS(\n      [\n        VV(1, 0, 0, 1),\n        VV(1, 1, 0, 1).times(SQRT1_2),\n        VV(0, 1, 0, 1),\n        VV(-1, 1, 0, 1).times(SQRT1_2),\n        VV(-1, 0, 0, 1),\n        VV(-1, -1, 0, 1).times(SQRT1_2),\n        VV(0, -1, 0, 1),\n      ],\n      2,\n      [0, 0, 0, PI / 2, PI / 2, PI, PI, (3 * PI) / 2, (3 * PI) / 2, 2 * PI],\n    )\n    return unitSemiEllipse.transform(ellipse.matrix)\n  }\n\n  /**\n   * Create a new NURBS from V3s, with optional weights.\n   * @param points\n   * @param degree\n   * @param knots\n   * @param weights\n   */\n  static fromV3s(\n    points: V3[],\n    degree: int,\n    knots?: number[],\n    weights: number[] = arrayFromFunction(points.length, () => 1),\n  ) {\n    assert(points.length == weights.length)\n    return new NURBS(\n      points.map((p, i) => Vector.fromV3AndWeight(p, weights[i])),\n      degree,\n      knots,\n    )\n  }\n\n  isUniform(precision = 0) {\n    const intervals = arrayFromFunction(\n      this.knots.length - 1,\n      (i) => this.knots[i + 1] - this.knots[i],\n    )\n    const [min, max] = minAndMax(intervals)\n    return eq(min, max, precision)\n  }\n\n  /**\n   * NURBS is a B spline if control points all have the same weight.\n   */\n  isBSpline(precision = 0) {\n    const [minWeight, maxWeight] = minAndMax(this.points.map((p) => p.w))\n    return eq(minWeight, maxWeight, precision)\n  }\n\n  /**\n   * Whether this is a (rational) bezier curve.\n   */\n  isBezier(precision = 0) {\n    if (this.degree + 1 != this.points.length) return false\n    const [min0, max0] = minAndMax(this.knots, 0, this.degree + 1)\n    if (!eq(min0, max0, precision)) return false\n    const [min1, max1] = minAndMax(this.knots, this.degree + 1)\n    if (!eq(min1, max1, precision)) return false\n    return true\n  }\n\n  /**\n   * Splits NURBS curve into rational bezier curves.\n   * See https://pages.mtu.edu/~shene/COURSES/cs3621/NOTES/spline/B-spline/subdivision.html\n   */\n  getSegments() {\n    const { knots, points, degree } = this\n    const result: NURBS[] = []\n    const v = Vector.pack(points, new Float64Array(points.length * 4))\n    const vectorFromV = (i: int) => new Vector(v.slice(i * 4, (i + 1) * 4))\n\n    let k = degree + 1 // k = knot index we are duplicating\n    while (k < knots.length - degree - 1) {\n      const t = knots[k]\n      const prevKnot = knots[k - 1]\n      let s = 1 // s = multiplicity of the knot\n      while (knots[k + 1] == t) {\n        k++\n        s++\n      }\n      const newNURBSPoints = new Array(degree + 1)\n      // the first s + 1 points are identical to the current curve\n      for (let i = 0; i < s + 1; i++) {\n        newNURBSPoints[i] = vectorFromV(k - degree - s + i)\n      }\n      // we need to have multiplicity degree, so insert (degree - s) times\n      for (let level = 1; level <= degree - s; level++) {\n        for (let i = k - degree; i <= k - s - level; i++) {\n          const alpha = (t - prevKnot) / (knots[i + degree + 1] - prevKnot)\n          for (let dim = 0; dim < 4; dim++) {\n            v[i * 4 + dim] =\n              (1 - alpha) * v[i * 4 + dim] + alpha * v[(i + 1) * 4 + dim]\n          }\n        }\n        newNURBSPoints[s + level] = vectorFromV(k - degree)\n      }\n      const newNURBSKnots = arrayFromFunction((degree + 1) * 2, (i) =>\n        i < degree + 1 ? knots[k - s] : t,\n      )\n      result.push(new NURBS(newNURBSPoints, degree, newNURBSKnots))\n      k++\n    }\n\n    // last curve\n    const newNURBSPoints = arrayFromFunction(degree + 1, (i) =>\n      vectorFromV(points.length - degree - 1 + i),\n    )\n    const newNURBSKnots = arrayFromFunction((degree + 1) * 2, (i) =>\n      i < degree + 1 ? knots[k - 1] : knots[k],\n    )\n    result.push(new NURBS(newNURBSPoints, degree, newNURBSKnots))\n    return result\n  }\n\n  split(t: number) {\n    const { knots, points, degree } = this\n    assert(le(this.tMin, t) && le(t, this.tMax))\n    let k = this.tInterval(t),\n      s = 0 // s = multiplicity of the knot\n    while (knots[k + 1] == t) {\n      k++\n      s++\n    }\n    const vectorFromV = (i: int) => new Vector(v.slice(i * 4, (i + 1) * 4))\n\n    const leftPoints = new Array(k + 1 - s)\n    // the first k + s + 1 points are identical to the current curve\n    for (let i = 0; i < k + s - degree + 1; i++) {\n      leftPoints[i] = this.points[i]\n    }\n    const rightPointsLength = points.length - (k - degree)\n    const v = Vector.pack(\n      points,\n      new Float64Array(rightPointsLength * 4),\n      k - degree,\n    )\n    // we need to have multiplicity degree, so insert (degree - s) times\n    for (let level = 1; level <= degree - s; level++) {\n      for (let i = k - degree; i <= k - s - level; i++) {\n        const alpha =\n          (t - knots[i + level]) / (knots[i + degree + 1] - knots[i + level])\n        const j = i - (k - degree)\n        for (let dim = 0; dim < 4; dim++) {\n          v[j * 4 + dim] =\n            (1 - alpha) * v[j * 4 + dim] + alpha * v[(j + 1) * 4 + dim]\n        }\n      }\n      leftPoints[k - degree + level] = vectorFromV(0)\n    }\n    const leftKnots = knots.slice(0, k + degree + 2 - s)\n    for (let i = 0; i < degree - s + 1; i++) {\n      leftKnots[k - s + 1 + i] = t\n    }\n    const rightKnots = knots.slice(k - degree)\n    for (let i = 0; i < degree + 1; i++) {\n      rightKnots[i] = t\n    }\n\n    const rightPoints = arrayFromFunction(rightPointsLength, (i) =>\n      vArrGet(v, 4, i),\n    )\n    return [\n      new NURBS(leftPoints, degree, leftKnots),\n      new NURBS(rightPoints, degree, rightKnots),\n    ]\n  }\n\n  simplify() {\n    assert(this.isBezier())\n    if (3 == this.degree && this.isBSpline()) {\n      return new BezierCurve(\n        this.points[0].p3(),\n        this.points[1].p3(),\n        this.points[2].p3(),\n        this.points[3].p3(),\n        this.tMin,\n        this.tMax,\n      )\n    } else if (2 == this.degree) {\n      const [P0, P1, P2] = this.points\n      const [p0, p1, p2] = this.points.map((p) => p.p3())\n      const c = NURBS.simplifyUnit2(P0.w, P1.w, P2.w).transform(\n        M4.forSys(p1.to(p0), p1.to(p2), undefined, p1),\n      )\n      const [tMin, tMax] = [c.pointT(p0), c.pointT(p2)].sort()\n      return c.withBounds(snap(tMin, c.tMin), snap(tMax, c.tMax))\n    } else if (1 == this.degree) {\n      return L3.throughPoints(this.points[0].p3(), this.points[1].p3())\n    } else {\n      return this\n    }\n  }\n\n  static simplifyUnit2(w0: number, w1: number, w2: number) {\n    // see https://math.stackexchange.com/a/2794874/230980\n    const delta = w0 * w2 - w1 ** 2\n    const cxy = (w0 * w2) / 2 / delta\n    const center = new V3(cxy, cxy, 0)\n    const k = (w1 ** 2 + delta - 2 * w1 * sqrt(abs(delta))) / 2 / delta\n    const p = V3.X\n    const q = new V3(k, cxy, 0)\n    // const q = new V3(cxy, k, 0)\n    if (eq0(delta)) {\n      return new ParabolaCurve(\n        new V3(1 / 4, 1 / 4, 0),\n        new V3(1, -1, 0),\n        new V3(1, 1, 0),\n        -0.5,\n        0.5,\n      )\n    } else if (delta < 0) {\n      // hyperbola\n      return new HyperbolaCurve(center, center.to(p), center.to(q))\n    } else {\n      // ellipse\n      return new EllipseCurve(center, center.to(p), center.to(q), 0)\n    }\n  }\n\n  elevateDegreeBezier() {\n    assert(this.isBezier())\n    const newPoints = new Array(this.points.length + 1)\n    newPoints[0] = this.points[0]\n    newPoints[this.points.length] = this.points[this.points.length - 1]\n    for (let i = 1; i < this.points.length; i++) {\n      newPoints[i] = Vector.lerp(\n        this.points[i],\n        this.points[i - 1],\n        i / (this.degree + 1),\n      )\n    }\n    const newKnots = NURBS.bezierKnots(\n      this.degree + 1,\n      this.knots[0],\n      this.knots[this.degree + 1],\n    )\n    return new NURBS(\n      newPoints,\n      this.degree + 1,\n      newKnots as number[],\n      this.tMin,\n      this.tMax,\n    )\n  }\n\n  elevateDegree() {\n    const segmentsElevated = this.getSegments().map((b) =>\n      b.elevateDegreeBezier(),\n    )\n    // stitch together the segments\n    const newPoints = new Array(2 + segmentsElevated.length * this.degree)\n    newPoints[0] = segmentsElevated[0].points[0]\n    setLast(newPoints, getLast(getLast(segmentsElevated).points))\n    for (let i = 0; i < segmentsElevated.length; i++) {\n      for (let pi = 1; pi < segmentsElevated[i].points.length - 1; pi++) {\n        newPoints[i * (segmentsElevated[0].points.length - 2) + pi] =\n          segmentsElevated[i].points[pi]\n      }\n    }\n    const newKnots = new Array(newPoints.length + this.degree + 2)\n    for (let i = 0; i < this.degree + 2; i++) {\n      newKnots[i] = this.knots[0]\n    }\n    for (let i = 0; i < segmentsElevated.length; i++) {\n      for (let pi = 1; pi < segmentsElevated[i].points.length - 1; pi++) {\n        newKnots[\n          i * (segmentsElevated[0].points.length - 2) + pi + this.degree + 1\n        ] = getLast(segmentsElevated[i].knots)\n      }\n    }\n    newKnots[newKnots.length - 1] = getLast(this.knots)\n    newKnots[newKnots.length - 2] = getLast(this.knots)\n\n    let result = new NURBS(\n      newPoints,\n      this.degree + 1,\n      newKnots as number[],\n      this.tMin,\n      this.tMax,\n    )\n    for (let i = 0; i < segmentsElevated.length - 1; i++) {\n      let optimization\n      while (\n        (optimization = result.removeKnot(getLast(segmentsElevated[i].knots)))\n      ) {\n        result = optimization\n      }\n    }\n    return result\n  }\n\n  transform(m4: M4) {\n    return this.transform4(m4) as this\n  }\n\n  transform4(m4: M4) {\n    return new NURBS(\n      this.points.map((p) => m4.timesVector(p)),\n      this.degree,\n      this.knots,\n      this.tMin,\n      this.tMax,\n    )\n  }\n\n  /**\n   * Returns the index of the interval which contains the value t.\n   */\n  tInterval(t: number) {\n    const { degree, knots } = this\n    for (let s = degree; s < knots.length - 1 - degree; s++) {\n      if (t >= knots[s] && t <= knots[s + 1]) {\n        return s\n      }\n    }\n    throw new Error(t + \" \" + knots)\n  }\n\n  static EX2D = NURBS.fromV3s(\n    [\n      V(51, 141),\n      V(11, 76),\n      V(29, 32),\n      V(46, 102),\n      V(74, 148),\n      V(189, 107),\n      V(56, 10),\n      V(206, 10),\n      V(211, 98),\n      V(195, 141),\n      V(139, 148),\n    ],\n    4,\n  )\n  static EX3D = new NURBS(\n    [\n      VV(94, 0, -34, 1),\n      VV(69, 57, 45, 0.5),\n      VV(-20, 44, 91, 1),\n      VV(-89, -13, 47, 0.5),\n      VV(-56, -97, -7, 1),\n      VV(34, -83, -54, 0.5),\n      VV(112, -53, 16, 1),\n      VV(79, 30, 70, 0.5),\n      VV(-2, -9, 141, 1),\n      VV(-80, -40, 72, 0.5),\n      VV(-38, -150, 43, 1),\n      VV(43, -110, -29, 0.5),\n      VV(130, -106, 65, 1),\n    ],\n    2,\n    [-12, -12, -12, -8, -8, -4, -4, 0, 0, 4, 4, 8, 8, 12, 12, 12],\n  )\n\n  static UnitCircle(\n    sections: int = 2,\n    tMin: number = 0,\n    tMax: number = PI,\n  ): NURBS {\n    const dt = tMax - tMin\n    const tStep = dt / sections\n    const w = sin(PI / 2 - tStep / 2)\n    // cos\n    const r = 1 / cos(tStep / 2)\n    const points = arrayFromFunction(sections * 2 + 1, (i) => {\n      const t = lerp(tMin, tMax, i / 2 / sections)\n      if (i % 2 == 0) {\n        // control point on circle\n        return VV(cos(t), sin(t), 0, 1)\n      } else {\n        return VV(r * w * cos(t), r * w * sin(t), 0, w)\n      }\n    })\n    const knots = []\n    knots.push(tMin, tMin, tMin)\n    for (let i = 0; i < sections - 1; i++) {\n      const knot = lerp(tMin, tMax, (i + 1) / sections)\n      knots.push(knot, knot)\n    }\n    knots.push(tMax, tMax, tMax)\n    return new NURBS(points, 2, knots)\n  }\n\n  debugInfo() {\n    return {\n      points: [\n        ...this.knots.slice(this.degree, -this.degree).map((t) => this.at(t)),\n        ...this.points.map((p) => p.p3()),\n      ],\n      lines: this.points.flatMap((p, i, ps) =>\n        ps[i + 1] ? [p.p3(), ps[i + 1].p3()] : [],\n      ),\n    }\n  }\n\n  isTsWithPlane(planeWC: P3) {\n    const { knots, degree, points } = this\n    const controlPointTs = [\n      knots[degree],\n      ...points\n        .slice(1, -1)\n        .map((p, i) =>\n          this.closestTToPoint(\n            p.p3(),\n            undefined,\n            knots[i + 3],\n            knots[i + degree],\n          ),\n        ),\n      knots[knots.length - degree - 1],\n    ]\n    const result: number[] = []\n    for (let i = 0; i < this.points.length - 1; i++) {\n      const findClosest = (startT: number) => {\n        console.log(\"startT\", startT)\n        // try {\n        const f = (t: number): Tuple2<number> => {\n          const [p, dt] = this.ptDtDdt(t)\n          return [planeWC.distanceToPointSigned(p), planeWC.normal1.dot(dt)]\n        }\n        let t = newtonIterateWithDerivative2(f, startT, 8, this.tMin, this.tMax)\n        let [distanceAtT, distanceDtAtT] =\n          undefined === t ? [undefined, undefined] : f(t)\n        if (t === undefined || !eq0(distanceAtT!) || eq0(distanceDtAtT!)) {\n          t = newtonIterateWithDerivative2(\n            (t) => {\n              const [, dt, ddt] = this.ptDtDdt(t)\n              return [planeWC.normal1.dot(dt), planeWC.normal1.dot(ddt)]\n            },\n            startT,\n            8,\n            this.tMin,\n            this.tMax,\n          )\n        }\n        ;[distanceAtT, distanceDtAtT] = undefined === t ? [] : f(t)\n        if (\n          undefined !== t &&\n          eq0(distanceAtT!) &&\n          !result.some((r) => eq(r, t!))\n        ) {\n          result.push(t)\n        }\n      }\n      const a = this.points[i].p3()\n      const b = this.points[i + 1].p3()\n\n      const ad = snap0(planeWC.distanceToPointSigned(a))\n      const bd = snap0(planeWC.distanceToPointSigned(b))\n      if (ad * bd < 0) {\n        const startT = lerp(\n          controlPointTs[i],\n          controlPointTs[i + 1],\n          ad / (ad - bd),\n        )\n        findClosest(startT)\n      } else if (0 == bd) {\n        findClosest(this.closestTToPoint(b, controlPointTs[i + 1]))\n      }\n    }\n    return result\n  }\n\n  isInfosWithCurve(curveWC: Curve) {\n    if (curveWC instanceof L3) {\n      return this.isInfosWithLine(curveWC.anchor, curveWC.dir1)\n    }\n    return super.isInfosWithCurve(curveWC)\n  }\n\n  isInfosWithLine(anchor: V3, dir: V3): ISInfo[] {\n    const thisPlane = P3.fromPoints(this.points.map((p) => p.p3()))!\n    const l = L3.anchorDirection(anchor, dir)\n    const maxDistanceToPlane = max(\n      this.points.map((p) => thisPlane.distanceToPoint(p.p3())),\n    )\n    const thisIsPlanar = eq0(maxDistanceToPlane)\n    if (thisIsPlanar && !thisPlane.containsLine(l)) {\n      const [t] = l.isTsWithPlane(thisPlane)\n      if (undefined === t) return []\n\n      const p = l.at(t)\n      return this.containsPoint(p)\n        ? [{ tThis: this.pointT(p), tOther: L3.pointT(anchor, dir, p), p }]\n        : []\n    } else {\n      const thisTs = this.isTsWithPlane(\n        P3.normalOnAnchor(thisPlane.normal1.cross(dir), anchor),\n      )\n      const infos = thisTs.map((tThis) => {\n        const p = this.at(tThis)\n        return { tThis, tOther: L3.pointT(anchor, dir, p), p }\n      })\n      return thisIsPlanar\n        ? infos\n        : infos.filter((info) => L3.containsPoint(anchor, dir, info.p))\n    }\n  }\n\n  roots() {\n    console.log(this.tMin, this.tMax)\n    arraySamples(this.tMin, this.tMax, 30).forEach((t) => {\n      console.log(t + \",\" + this.tangentAt(t).z)\n    })\n\n    const result: Tuple3<number[]> = [[], [], []]\n    for (let i = 0; i < this.points.length - 1; i++) {\n      const findClosest = (startT: number, d: int) => {\n        console.log(\"d\", d, \"startT\", startT)\n        // try {\n        const root = newtonIterateWithDerivative2(\n          (t) => {\n            const [, dt, ddt] = this.ptDtDdt(t)\n            return [dt.e(d), ddt.e(d)]\n          },\n          startT,\n          8,\n          this.tMin,\n          this.tMax,\n        )\n        if (undefined !== root) {\n          result[d].push(root)\n        }\n        console.log(\"d\", d, \"startT\", startT, \"root\", root)\n      }\n      const a = this.points[i].p3()\n      const b = this.points[i + 1].p3()\n      const ab = a.to(b)\n      for (let d = 0; d < 3; d++) {\n        if (0 !== i && eq0(ab.e(d))) {\n          const startT = lerp(\n            this.knots[i],\n            this.knots[i + this.degree + 2],\n            0.5,\n          )\n          findClosest(startT, d)\n        } else if (i < this.points.length - 2) {\n          const bc = b.to(this.points[i + 2].p3())\n          if (!eq0(bc.e(d)) && ab.e(d) * bc.e(d) < 0) {\n            findClosest(\n              this.closestTToPoint(b, this.guessTClosestToControlPoint(i + 1)),\n              d,\n            )\n          }\n        }\n      }\n    }\n    console.log(result)\n    return result\n  }\n\n  //getAABB() {\n  //\treturn new AABB().addPoints(this.points.map(p => p.p3()))\n  //}\n\n  /**\n   * Rough approximation of t param for points closest to control point.\n   */\n  guessTClosestToControlPoint(pointIndex: int) {\n    return lerp(\n      this.knots[pointIndex],\n      this.knots[pointIndex + this.degree + 1],\n      0.5,\n    )\n  }\n\n  likeCurve(curve: Curve): boolean {\n    return (\n      this == curve ||\n      (hasConstructor(curve, NURBS) &&\n        this.degree === curve.degree &&\n        this.points.every((p, i) => p.like(curve.points[i])) &&\n        this.knots.every((k, i) => eq(k, curve.knots[i])))\n    )\n  }\n\n  isColinearTo(curve: Curve): boolean {\n    throw new Error(\"This doesn't even make sense.\")\n  }\n}\n\nNURBS.prototype.tIncrement = 1 / 128\n\nfunction minAndMax(\n  arr: ReadonlyArray<number>,\n  start: int = 0,\n  end: int = arr.length,\n) {\n  let min = Infinity,\n    max = -Infinity\n  for (let i = start; i < end; i++) {\n    if (min > arr[i]) min = arr[i]\n    if (max < arr[i]) max = arr[i]\n  }\n  return [min, max]\n}\n","import {\n  AABB,\n  assert,\n  assertInst,\n  assertNumbers,\n  assertVectors,\n  callsce,\n  eq,\n  eq0,\n  floatHashCode,\n  hasConstructor,\n  int,\n  M4,\n  Transformable,\n  V3,\n  VV,\n} from \"ts3dutils\"\n\nimport {\n  BezierCurve,\n  Curve,\n  EllipseCurve,\n  HyperbolaCurve,\n  L3,\n  ParabolaCurve,\n} from \".\"\n\n/**\n * Plane x DOT this.normal1 = this.w\n */\nexport class P3 extends Transformable {\n  static readonly YZ = new P3(V3.X, 0)\n  static readonly ZX = new P3(V3.Y, 0)\n  static readonly XY = new P3(V3.Z, 0)\n\n  /**\n   * Oriented plane, i.e. splits R^3 in half, with one half being \"in front\" of the plane.\n   * Leads to multiple comparisons: isCoplanarToPlane returns if the plane occupies the same space,\n   * like returns if the plane occupies the same space and has the same orientation\n   *\n   * Points x on the plane fulfill the equation: normal1 DOT x = w\n   *\n   * @param normal1 unit plane normal1\n   * @param w signed (rel to normal1) distance from the origin\n   */\n  constructor(readonly normal1: V3, readonly w: number = 0) {\n    super()\n    assertVectors(normal1)\n    assertNumbers(w)\n    assert(normal1.hasLength(1), \"normal1.hasLength(1)\" + normal1)\n  }\n\n  get anchor(): V3 {\n    return this.normal1.times(this.w)\n  }\n\n  static throughPoints(a: V3, b: V3, c: V3): P3 {\n    assertVectors(a, b, c)\n    const n1 = b.minus(a).cross(c.minus(a)).unit()\n    return new P3(n1, n1.dot(a))\n  }\n\n  static normalOnAnchor(normal: V3, anchor: V3): P3 {\n    assertVectors(normal, anchor)\n    const n1 = normal.unit()\n    return new this(n1, n1.dot(anchor))\n  }\n\n  /**\n   * Create a plane which intersects the X, Y and Z axes at the specified offsets.\n   * x/x0 + y/y0 + y/y0 = 1\n   */\n  static forAxisIntercepts(x0: number, y0: number, z0: number): P3 {\n    assertNumbers(x0, y0, z0)\n    const normal = new V3(1 / x0, 1 / y0, 1 / z0)\n    return new P3(normal.unit(), normal.length())\n  }\n\n  /**\n   * Create a plane containing `anchor` and extending in directions `v0` and `v1`.\n   * `v0` and `v1` may not be parallel.\n   * @param anchor\n   * @param v0\n   * @param v1\n   */\n  static forAnchorAndPlaneVectors(anchor: V3, v0: V3, v1: V3): P3 {\n    assertVectors(anchor, v0, v1)\n    assert(!v0.isParallelTo(v1))\n    return this.normalOnAnchor(v0.cross(v1), anchor)\n  }\n\n  /**\n   * Create a plane which contains botha point and a line. The point may not lie on the line.\n   * @param p\n   * @param line\n   */\n  static forPointAndLine(p: V3, line: L3) {\n    return this.forAnchorAndPlaneVectors(\n      line.anchor,\n      line.dir1,\n      line.anchor.to(p),\n    )\n  }\n\n  /**\n   * ax + by + cz + d = 0\n   */\n  static forABCD(a: number, b: number, c: number, d: number) {\n    const normalLength = Math.hypot(a, b, c)\n    if (eq0(normalLength)) return undefined\n    return new P3(\n      new V3(a / normalLength, b / normalLength, c / normalLength),\n      -d / normalLength,\n    )\n  }\n\n  static vanishingPlane(m4: M4) {\n    return P3.forABCD(m4.m[12], m4.m[13], m4.m[14], m4.m[15])\n  }\n\n  static forAABB(aabb: AABB, distance = 0) {\n    return [\n      new P3(V3.X, aabb.max.x + distance),\n      new P3(V3.X.negated(), -aabb.min.x - distance),\n      new P3(V3.Y, aabb.max.y + distance),\n      new P3(V3.Y.negated(), -aabb.min.y - distance),\n      new P3(V3.Z, aabb.max.z + distance),\n      new P3(V3.Z.negated(), -aabb.min.z - distance),\n    ]\n  }\n\n  // Fit a plane to a collection of points.\n  // Fast, and accurate to within a few degrees.\n  // Returns None if the points do not span a plane.\n  static fromPoints(points: V3[]): P3 | undefined {\n    const n = points.length\n    if (n < 3) {\n      return undefined\n    }\n\n    const centroid = V3.add(...points).div(n)\n\n    // Calculate full 3x3 covariance matrix, excluding symmetries:\n    let xx = 0.0\n    let xy = 0.0\n    let xz = 0.0\n    let yy = 0.0\n    let yz = 0.0\n    let zz = 0.0\n\n    for (const p of points) {\n      const r = p.minus(centroid)\n      xx += r.x * r.x\n      xy += r.x * r.y\n      xz += r.x * r.z\n      yy += r.y * r.y\n      yz += r.y * r.z\n      zz += r.z * r.z\n    }\n\n    xx /= n\n    xy /= n\n    xz /= n\n    yy /= n\n    yz /= n\n    zz /= n\n\n    let weighted_dir = V3.O\n\n    {\n      const det_x = yy * zz - yz * yz\n      const axis_dir = new V3(det_x, xz * yz - xy * zz, xy * yz - xz * yy)\n      let weight = det_x * det_x\n      if (weighted_dir.dot(axis_dir) < 0.0) {\n        weight = -weight\n      }\n      weighted_dir = weighted_dir.plus(axis_dir.times(weight))\n    }\n\n    {\n      const det_y = xx * zz - xz * xz\n      const axis_dir = new V3(xz * yz - xy * zz, det_y, xy * xz - yz * xx)\n      let weight = det_y * det_y\n      if (weighted_dir.dot(axis_dir) < 0.0) {\n        weight = -weight\n      }\n      weighted_dir = weighted_dir.plus(axis_dir.times(weight))\n    }\n\n    {\n      const det_z = xx * yy - xy * xy\n      const axis_dir = new V3(xy * yz - xz * yy, xy * xz - yz * xx, det_z)\n      let weight = det_z * det_z\n      if (weighted_dir.dot(axis_dir) < 0.0) {\n        weight = -weight\n      }\n      weighted_dir = weighted_dir.plus(axis_dir.times(weight))\n    }\n\n    const normal = weighted_dir.unit()\n    return P3.normalOnAnchor(normal, centroid)\n  }\n\n  axisIntercepts(): V3 {\n    const w = this.w,\n      n = this.normal1\n    return new V3(w / n.x, w / n.y, w / n.z)\n  }\n\n  isCoplanarToPlane(plane: P3): boolean {\n    assertInst(P3, plane)\n    return this.like(plane) || this.likeFlipped(plane)\n  }\n\n  like(plane: P3): boolean {\n    assertInst(P3, plane)\n    return eq(this.w, plane.w) && this.normal1.like(plane.normal1)\n  }\n\n  likeFlipped(plane: P3): boolean {\n    assertInst(P3, plane)\n    return eq(this.w, -plane.w) && this.normal1.like(plane.normal1.negated())\n  }\n\n  /**\n   * True iff plane.normal1 is equal to this.normal1 or it's negation.\n   *\n   */\n  isParallelToPlane(plane: P3): boolean {\n    assertInst(P3, plane)\n    return eq(1, Math.abs(this.normal1.dot(plane.normal1)))\n  }\n\n  isParallelToLine(line: L3): boolean {\n    assertInst(L3, line)\n    return eq0(this.normal1.dot(line.dir1))\n  }\n\n  isPerpendicularToLine(line: L3): boolean {\n    assertInst(L3, line)\n    // this.normal1 || line.dir1\n    return eq(1, Math.abs(this.normal1.dot(line.dir1)))\n  }\n\n  isPerpendicularToPlane(plane: P3): boolean {\n    assertInst(P3, plane)\n    return eq0(this.normal1.dot(plane.normal1))\n  }\n\n  toSource(): string {\n    return callsce(\"new P3\", this.normal1, this.w)\n  }\n\n  translated(offset: V3): P3 {\n    return new P3(this.normal1, this.w + offset.dot(this.normal1))\n  }\n\n  transform(m4: M4) {\n    // See https://stackoverflow.com/questions/7685495/transforming-a-3d-plane-using-a-4x4-matrix\n    // See http://www.songho.ca/opengl/gl_normaltransform.html\n    // with homogeneous coordinates, the hessian normal form of this plane is\n    // (p, 1) * (normal1, -w) = 0\n    // transformation: (m4^-1 * (p, 1)) DOT (normal1, -w) = 0\n    // => (p, 1) DOT ((m4^-T) * (normal1, -w)) = 0\n    // (validity of the above transformation is easily seen by expanding the matrix multiplication and dot product)\n    // hence, (newNormal, newW) = (m4^-T) * (normal1, -w)\n    // we divide both newNormal and newW by newNormal.length() to normalize the normal vector\n    const m4InversedTransposed = M4.transpose(\n      M4.inverse(m4, M4.temp0),\n      M4.temp1,\n    )\n    const [nx, ny, nz] = this.normal1\n    const newNormal = m4InversedTransposed.timesVector(VV(nx, ny, nz, -this.w))\n    return P3.forABCD(\n      newNormal.x,\n      newNormal.y,\n      newNormal.z,\n      newNormal.w,\n    ) as this\n  }\n\n  distanceToLine(line: L3): number {\n    assertInst(L3, line)\n    if (!this.isParallelToLine(line)) {\n      return this.distanceToPoint(line.anchor)\n    } else {\n      return 0\n    }\n  }\n\n  containsPoint(x: V3): boolean {\n    assertVectors(x)\n    return eq(this.w, this.normal1.dot(x))\n  }\n\n  containsLine(line: L3): boolean {\n    assertInst(L3, line)\n    return this.containsPoint(line.anchor) && this.isParallelToLine(line)\n  }\n\n  distanceToPointSigned(point: V3): number {\n    assertInst(V3, point)\n    return this.normal1.dot(point) - this.w\n  }\n\n  distanceToPoint(point: V3): number {\n    assertInst(V3, point)\n    return Math.abs(this.normal1.dot(point) - this.w)\n  }\n\n  intersectionWithLine(line: L3): V3 {\n    return line.intersectionWithPlane(this)\n  }\n\n  intersectionWithPlane(plane: P3): L3 | undefined {\n    assertInst(P3, plane)\n    /*\n\n\t\t this: n0 * x = w0\n\t\t plane: n1 * x = w1\n\t\t plane perpendicular to both which goes through origin:\n\t\t n2 := n0 X x1\n\t\t n2 * x = 0\n\t\t */\n    if (this.isParallelToPlane(plane)) {\n      return undefined\n    }\n    /*\n\t\t var n0 = this.normal1, n1 = plane.normal1, n2 = n0.cross(n1).unit(), m = M4.forSys(n0, n1, n2)\n\t\t var x0 = this.anchor, x1 = plane.anchor, x2 = V3.O\n\t\t var p = n2.times(x2.dot(n2))\n\t\t .plus(n1.cross(n2).times(x0.dot(n0)))\n\t\t .plus(n2.cross(n0).times(x1.dot(n1)))\n\t\t .div(m.determinant())\n\t\t */\n    const n0 = this.normal1,\n      n1 = plane.normal1,\n      n2 = n0.cross(n1).unit()\n    const p = M4.forRows(n0, n1, n2)\n      .inversed()\n      .transformVector(new V3(this.w, plane.w, 0))\n    return new L3(p, n2)\n  }\n\n  /**\n   * Returns the point in the plane closest to the given point\n   *\n   */\n  projectedPoint(x: V3): V3 {\n    // See http://math.stackexchange.com/questions/444968/project-a-point-in-3d-on-a-given-plane\n    // p = x - ((x - planeAnchor) * normal1) * normal1\n    return x.minus(this.normal1.times(x.minus(this.anchor).dot(this.normal1)))\n  }\n\n  projectedVector(x: V3): V3 {\n    // See V3.rejectedFrom. Simplified, as this.normal1.length() == 1\n    return x.minus(this.normal1.times(x.dot(this.normal1)))\n  }\n\n  flipped(): P3 {\n    return new P3(this.normal1.negated(), -this.w)\n  }\n\n  containsCurve(curve: Curve): boolean {\n    if (curve instanceof L3) {\n      return this.containsLine(curve)\n    } else if (\n      curve instanceof EllipseCurve ||\n      curve instanceof HyperbolaCurve ||\n      curve instanceof ParabolaCurve\n    ) {\n      return (\n        this.containsPoint(curve.center) &&\n        this.normal1.isParallelTo(curve.normal)\n      )\n    } else if (curve instanceof BezierCurve) {\n      return curve.points.every((p) => this.containsPoint(p))\n    } else {\n      throw new Error(\"\" + curve)\n    }\n  }\n\n  equals(obj: any) {\n    return (\n      hasConstructor(obj, P3) &&\n      this.normal1.equals(obj.normal1) &&\n      this.w == obj.w\n    )\n  }\n\n  hashCode(): int {\n    return (this.normal1.hashCode() * 31) | (0 + floatHashCode(this.w))\n  }\n}\n","import { Equalable } from \"javasetmap.ts\"\nimport {\n  arrayEquals,\n  arrayHashCode,\n  callsce,\n  eq,\n  eq0,\n  int,\n  le,\n  NLA_PRECISION,\n  Transformable,\n  V3,\n} from \"ts3dutils\"\n\nimport {\n  CalculateAreaVisitor,\n  Curve,\n  dotCurve2,\n  Edge,\n  EllipseCurve,\n  ImplicitCurve,\n  L3,\n  P3,\n  PICurve,\n  PPCurve,\n  ZDirVolumeVisitor,\n} from \"..\"\n\nimport { ceil, floor, PI, sign } from \"../math\"\nimport { WebGLDebugable } from \"../WebGLDebugable\"\n\nexport abstract class Surface\n  extends Transformable\n  implements Equalable, WebGLDebugable {\n  readonly [\"constructor\"]: new (...args: any[]) => this\n\n  debugInfo?(): { points?: V3[]; lines?: V3[] }\n\n  static loopContainsPointGeneral(\n    loop: Edge[],\n    pWC: V3,\n    testLine: L3,\n    lineOut: V3,\n  ): PointVsFace {\n    const testPlane = P3.normalOnAnchor(lineOut, pWC)\n    // edges colinear to the testing line; these will always be counted as \"inside\" relative to the testing line\n    const colinearEdges = loop.map((edge) => edge.colinearToLine(testLine))\n    let inside = false\n\n    function logIS(isP: V3) {\n      const isT = testLine.pointT(isP)\n      if (eq0(isT)) {\n        return true\n      } else if (isT > 0) {\n        inside = !inside\n      }\n      return false\n    }\n\n    for (let edgeIndex = 0; edgeIndex < loop.length; edgeIndex++) {\n      const edge = loop[edgeIndex]\n      const nextEdgeIndex = (edgeIndex + 1) % loop.length,\n        nextEdge = loop[nextEdgeIndex]\n      //console.log(edge.toSource()) {p:V(2, -2.102, 0),\n      if (colinearEdges[edgeIndex]) {\n        const lineAT = testLine.pointT(edge.a),\n          lineBT = testLine.pointT(edge.b)\n        if (\n          Math.min(lineAT, lineBT) <= NLA_PRECISION &&\n          -NLA_PRECISION <= Math.max(lineAT, lineBT)\n        ) {\n          return PointVsFace.ON_EDGE\n        }\n        // edge colinear to intersection\n        const nextInside =\n          colinearEdges[nextEdgeIndex] ||\n          dotCurve2(\n            nextEdge.curve,\n            nextEdge.aT,\n            lineOut,\n            sign(nextEdge.deltaT()),\n          ) < 0\n        if (!nextInside) {\n          if (logIS(edge.b)) return PointVsFace.ON_EDGE\n        }\n      } else {\n        for (const edgeT of edge.edgeISTsWithPlane(testPlane)) {\n          if (edgeT == edge.bT) {\n            if (!testLine.containsPoint(edge.b)) continue\n            // endpoint lies on intersection line\n            if (edge.b.like(pWC)) {\n              // TODO: refactor, dont check for different sides, just logIs everything\n              return PointVsFace.ON_EDGE\n            }\n            const edgeInside =\n              dotCurve2(edge.curve, edge.bT, lineOut, -sign(edge.deltaT())) < 0\n            const nextInside =\n              colinearEdges[nextEdgeIndex] ||\n              dotCurve2(\n                nextEdge.curve,\n                nextEdge.aT,\n                lineOut,\n                sign(nextEdge.deltaT()),\n              ) < 0\n            if (edgeInside != nextInside) {\n              if (logIS(edge.b)) return PointVsFace.ON_EDGE\n            }\n          } else if (edgeT != edge.aT) {\n            const p = edge.curve.at(edgeT)\n            if (!testLine.containsPoint(p)) continue\n            // edge crosses line, neither starts nor ends on it\n            if (logIS(p)) return PointVsFace.ON_EDGE\n            // TODO: tangents?\n          }\n        }\n      }\n    }\n    return inside ? PointVsFace.INSIDE : PointVsFace.OUTSIDE\n  }\n\n  static loopContainsPointEllipse(\n    loop: Edge[],\n    pWC: V3,\n    testLine: EllipseCurve,\n    pWCT?: number,\n  ): PointVsFace {\n    const lineOut = testLine.normal\n    const testPlane = P3.normalOnAnchor(testLine.normal, pWC)\n    const colinearEdges = loop.map((edge) => testLine.isColinearTo(edge.curve))\n    let inside = false\n    if (undefined === pWCT) {\n      pWCT = testLine.pointT(pWC)\n    }\n    const pT = pWCT!\n\n    function logIS(isP: V3) {\n      const isT = testLine.pointT(isP)\n      if (eq(pT, isT)) {\n        return true\n      } else if (pT < isT && le(isT, PI)) {\n        inside = !inside\n      }\n      return false\n    }\n\n    for (let edgeIndex = 0; edgeIndex < loop.length; edgeIndex++) {\n      const edge = loop[edgeIndex]\n      const nextEdgeIndex = (edgeIndex + 1) % loop.length,\n        nextEdge = loop[nextEdgeIndex]\n      //console.log(edge.toSource()) {p:V(2, -2.102, 0),\n      if (colinearEdges[edgeIndex]) {\n        let edgeT\n        if (\n          edge.curve.containsPoint(pWC) &&\n          le(edge.minT, (edgeT = edge.curve.pointT(pWC))) &&\n          le(edgeT, edge.maxT)\n        ) {\n          return PointVsFace.ON_EDGE\n        }\n        // edge colinear to intersection\n        const nextInside =\n          colinearEdges[nextEdgeIndex] ||\n          dotCurve2(\n            nextEdge.curve,\n            nextEdge.aT,\n            lineOut,\n            sign(nextEdge.deltaT()),\n          ) < 0\n        if (!nextInside && testLine.containsPoint(edge.b)) {\n          if (logIS(edge.b)) return PointVsFace.ON_EDGE\n        }\n      } else {\n        for (const edgeT of edge.edgeISTsWithPlane(testPlane)) {\n          if (edgeT == edge.bT) {\n            if (!testLine.containsPoint(edge.b)) continue\n            // endpoint lies on intersection testLine\n            const edgeInside =\n              dotCurve2(edge.curve, edge.bT, lineOut, -sign(edge.deltaT())) < 0\n            const nextInside =\n              colinearEdges[nextEdgeIndex] ||\n              dotCurve2(\n                nextEdge.curve,\n                nextEdge.aT,\n                lineOut,\n                sign(nextEdge.deltaT()),\n              ) < 0\n            if (edgeInside != nextInside) {\n              if (logIS(edge.b)) return PointVsFace.ON_EDGE\n            }\n          } else if (edgeT != edge.aT) {\n            const p = edge.curve.at(edgeT)\n            if (!testLine.containsPoint(p)) continue\n            // edge crosses testLine, neither starts nor ends on it\n            if (logIS(p)) return PointVsFace.ON_EDGE\n            // TODO: tangents?\n          }\n        }\n      }\n    }\n    return inside ? PointVsFace.INSIDE : PointVsFace.OUTSIDE\n  }\n\n  toString(): string {\n    return this.toSource()\n  }\n\n  toSource(rounder: (x: number) => number = (x) => x): string {\n    return callsce.call(\n      undefined,\n      \"new \" + this.constructor.name,\n      ...this.getConstructorParameters(),\n    )\n  }\n\n  /**\n   * Return points which would touch AABB. Doesnt include borders due to parametric bounds, for example.\n   */\n  getExtremePoints(): V3[] {\n    return []\n  }\n\n  abstract normalP(p: V3): V3\n\n  abstract getConstructorParameters(): any[]\n\n  abstract isTsForLine(line: L3): number[]\n\n  /**\n   * TODO remove constraint\n   * IMPORTANT: The tangents of the resulting curves need to be equal to the cross product of this and surface in the\n   * point. I.e.: for every point p p on a returned curve: curve.tangentAt(curve.pointT(p)) == this.normalP(p)\n   * X surface.normalP(p)\n   *\n   * Cross product is not commutative, so curve.tangentAt(curve.pointT(p)) == surface.normalP(p) X\n   * this.normalP(p) is not valid.\n   */\n  abstract isCurvesWithPlane(plane: P3): Curve[]\n\n  isCurvesWithSurface(surface: Surface): Curve[] {\n    return surface.isCurvesWithSurface(this) //.map(curve => curve.reversed())\n  }\n\n  containsCurve(curve: Curve): boolean {\n    if (curve instanceof PICurve) {\n      // if (this.equals(curve.parametricSurface) || this.equals(curve.implicitSurface)) {\n      // \treturn true\n      // }\n    }\n    if (curve instanceof PPCurve) {\n      if (\n        this.equals(curve.parametricSurface1) ||\n        this.equals(curve.parametricSurface2)\n      ) {\n        return true\n      }\n    }\n    if (curve instanceof ImplicitCurve) {\n      for (let i = ceil(curve.tMin) + 1; i <= floor(curve.tMax) - 1; i++) {\n        if (!this.containsPoint(curve.points[i])) {\n          return false\n        }\n      }\n      return true\n    }\n    return false\n  }\n\n  abstract containsPoint(pWC: V3): boolean\n\n  abstract flipped(): this\n\n  flipped2(doFlip: boolean): this {\n    return doFlip ? this.flipped() : this\n  }\n\n  abstract loopContainsPoint(contour: Edge[], point: V3): PointVsFace\n\n  /**\n   * Returns true iff the surface occupies the same space as the argument (not necessarily same normal1)\n   */\n  abstract isCoplanarTo(surface: Surface): boolean\n\n  /**\n   * coplanar and same normals\n   */\n  abstract like(object: any): boolean\n\n  abstract edgeLoopCCW(loop: Edge[]): boolean\n\n  clipCurves(curves: Curve[]): Curve[] {\n    return curves\n  }\n\n  equals(obj: any): boolean {\n    return (\n      this === obj ||\n      (this.constructor === obj.constructor &&\n        arrayEquals(\n          this.getConstructorParameters(),\n          obj.getConstructorParameters(),\n        ))\n    )\n  }\n\n  hashCode(): int {\n    return arrayHashCode(this.getConstructorParameters())\n  }\n\n  zDirVolume(allEdges: Edge[]): { centroid: V3; volume: number } {\n    return this.visit(ZDirVolumeVisitor, allEdges)\n  }\n\n  calculateArea(allEdges: Edge[]): number {\n    return this.visit(CalculateAreaVisitor as any, allEdges)\n  }\n}\n\nexport enum PointVsFace {\n  INSIDE,\n  OUTSIDE,\n  ON_EDGE,\n}\n","import {\n  AABB,\n  assert,\n  assertNumbers,\n  between,\n  emod,\n  isCCW,\n  lerp,\n  V,\n  V3,\n} from \"ts3dutils\"\nimport { Mesh } from \"tsgl\"\n\nimport {\n  breakDownPPCurves,\n  Curve,\n  Edge,\n  ImplicitSurface,\n  MathFunctionR2R,\n  PICurve,\n  Surface,\n} from \"..\"\n\nimport { ceil, min } from \"../math\"\n\nexport abstract class ParametricSurface extends Surface {\n  uStep!: number\n  vStep!: number\n\n  protected constructor(\n    readonly uMin: number,\n    readonly uMax: number,\n    readonly vMin: number,\n    readonly vMax: number,\n  ) {\n    super()\n    assertNumbers(uMin, uMax, vMin, vMax)\n    assert(uMin < uMax)\n    assert(vMin < vMax)\n    assert(\n      emod(this.getConstructorParameters(), -4) == this.uMin,\n      this.getConstructorParameters(),\n      this.uMin,\n    )\n  }\n\n  static isCurvesParametricImplicitSurface(\n    ps: ParametricSurface,\n    is: ImplicitSurface,\n    uStep: number,\n    vStep: number = uStep,\n    curveStepSize: number,\n  ): Curve[] {\n    const pf = ps.pUVFunc(),\n      icc = is.implicitFunction()\n    const dpdu = ps.dpdu()\n    const dpdv = ps.dpdv()\n    const didp = is.didp.bind(is)\n    const ist = (x: number, y: number) => icc(pf(x, y))\n    const didu = (u: number, v: number) => didp(pf(u, v)).dot(dpdu(u, v))\n    const didv = (u: number, v: number) => didp(pf(u, v)).dot(dpdv(u, v))\n    const mf = MathFunctionR2R.forFFxFy(ist, didu, didv)\n    const curves = Curve.breakDownIC(\n      mf,\n      ps,\n      uStep,\n      vStep,\n      curveStepSize,\n      (u, v) => is.containsPoint(pf(u, v)),\n    ).map(({ points, tangents }, _i) =>\n      PICurve.forParametricPointsTangents(\n        ps,\n        is,\n        points,\n        tangents,\n        curveStepSize,\n      ),\n    )\n    return curves\n  }\n\n  static isCurvesParametricParametricSurface(\n    ps1: ParametricSurface,\n    ps2: ParametricSurface,\n    s1Step: number,\n    t1Step: number = s1Step,\n    curveStepSize: number,\n  ): Curve[] {\n    return breakDownPPCurves(ps1, ps2, s1Step, t1Step, curveStepSize)\n  }\n\n  static is(obj: any): obj is ParametricSurface {\n    return obj.pUVFunc\n  }\n\n  pUV(u: number, v: number): V3 {\n    return this.pUVFunc()(u, v)\n  }\n\n  pUVFunc(): (u: number, v: number) => V3 {\n    return this.pUV.bind(this)\n  }\n\n  abstract dpdu(): (u: number, v: number) => V3\n\n  abstract dpdv(): (u: number, v: number) => V3\n\n  uvP(pWC: V3): V3 {\n    return this.uvPFunc()(pWC)\n  }\n\n  uvPFunc(): (pWC: V3) => V3 {\n    return this.uvP.bind(this)\n  }\n\n  bounds(u: number, v: number): boolean {\n    return this.uMin <= u && u <= this.uMax && this.vMin <= v && v <= this.vMax\n  }\n\n  /**\n   * Positive values are inside bounds.\n   */\n  boundsSigned(u: number, v: number): number {\n    return min(u - this.uMin, this.uMax - u, v - this.vMin, this.vMax - v)\n  }\n\n  normalP(p: V3): V3 {\n    const pmPoint = this.uvPFunc()(p)\n    return this.normalUV(pmPoint.x, pmPoint.y)\n  }\n\n  normalUVFunc(): (u: number, v: number) => V3 {\n    return this.normalUV.bind(this)\n  }\n\n  normalUV(u: number, v: number): V3 {\n    return this.normalUVFunc()(u, v)\n  }\n\n  parametersValid(u: number, v: number): boolean {\n    return between(u, this.uMin, this.uMax) && between(v, this.vMin, this.vMax)\n  }\n\n  /**\n   * @param pWC The point to search the foot for, in world coordinates.\n   * @param startU\n   * @param startV\n   * @return UV parametric coordinates of the \"foot\" of pWC.\n   */\n  abstract pointFoot(pWC: V3, startU?: number, startV?: number): V3\n\n  toMesh(uStep = this.uStep, vStep = this.vStep) {\n    assert(\n      isFinite(this.vMin) &&\n        isFinite(this.vMax) &&\n        isFinite(this.uMin) &&\n        isFinite(this.uMax),\n    )\n    assert(isFinite(uStep) && isFinite(vStep))\n    return Mesh.parametric(\n      this.pUVFunc(),\n      this.normalUVFunc(),\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n      ceil((this.uMax - this.uMin) / uStep),\n      ceil((this.vMax - this.vMin) / vStep),\n    )\n  }\n\n  isCurvesWithImplicitSurface(\n    is: ImplicitSurface,\n    uStep: number,\n    vStep: number,\n    stepSize: number,\n  ): Curve[] {\n    return ParametricSurface.isCurvesParametricImplicitSurface(\n      this,\n      is,\n      uStep,\n      vStep,\n      stepSize,\n    )\n  }\n\n  edgeLoopCCW(contour: Edge[]): boolean {\n    const ptpF = this.uvPFunc()\n    return isCCW(\n      contour.flatMap((e) => e.getVerticesNo0()).map((v) => ptpF(v)),\n      V3.Z,\n    )\n  }\n\n  like(object: any): boolean {\n    if (!this.isCoplanarTo(object)) return false\n    // normals need to point in the same direction (outwards or inwards) for both\n    const pSMinTMin = this.pUVFunc()(this.uMin, this.vMin)\n    const thisNormal = this.normalUVFunc()(this.uMin, this.vMin)\n    const otherNormal = object.normalP(pSMinTMin)\n    return 0 < thisNormal.dot(otherNormal)\n  }\n\n  getApproxAABB() {\n    const result = new AABB()\n    result.addPoints(this.getExtremePoints())\n    const ps = [V(0, 0), V(0, 1), V(1, 0), V(1, 1), V(0.5, 0.5)].map((p) =>\n      this.pUV(\n        lerp(this.uMin, this.uMax, p.x),\n        lerp(this.vMin, this.vMax, p.y),\n      ),\n    )\n    result.addPoints(ps)\n    return result\n  }\n}\n","import {\n  AABB,\n  assert,\n  assertInst,\n  assertVectors,\n  eq,\n  eq0,\n  getIntervals,\n  ilog,\n  M4,\n  newtonIterate,\n  pqFormula,\n  TAU,\n  V3,\n  Vector,\n} from \"ts3dutils\"\n\nimport {\n  Curve,\n  CylinderSurface,\n  Edge,\n  EllipseCurve,\n  HyperbolaCurve,\n  ImplicitSurface,\n  L3,\n  P3,\n  ParabolaCurve,\n  ParametricSurface,\n  PlaneSurface,\n  PointVsFace,\n  Surface,\n} from \"..\"\n\nimport { abs, cos, max, min, PI, sign, sin, sqrt, SQRT1_2 } from \"../math\"\n\nexport class ConicSurface extends ParametricSurface implements ImplicitSurface {\n  /**\n   * Unit cone. x² + y² = z², 0 <= z\n   */\n  static readonly UNIT = new ConicSurface(V3.O, V3.X, V3.Y, V3.Z)\n  readonly matrix: M4\n  readonly matrixInverse: M4\n  readonly pLCNormalWCMatrix: M4\n  readonly normalDir: number // -1 | 1\n\n  /**\n   * returns new cone C = {apex + f1 * v * cos(u) + f2 * v * sin(u) + f3 * v |\n   * -PI <= u <= PI, 0 <= v}\n   *\n   * If the coordinate system [f1 f2 dir] is right-handed, the normals will\n   * point outwards, otherwise inwards.\n   *\n   * @param f1\n   * @param f2\n   * @param dir Direction in which the cone opens. The ellipse spanned by f1,\n   *   f2 is contained at (apex + dir).\n   */\n  constructor(\n    readonly center: V3,\n    readonly f1: V3,\n    readonly f2: V3,\n    readonly dir: V3,\n    uMin: number = 0,\n    uMax: number = PI,\n    vMin: number = 0,\n    vMax: number = 16,\n  ) {\n    super(uMin, uMax, vMin, vMax)\n    assertVectors(center, f1, f2, dir)\n    assert(-PI <= uMin && uMax <= PI)\n    assert(0 <= vMin, vMin)\n    this.matrix = M4.forSys(f1, f2, dir, center)\n    this.matrixInverse = this.matrix.inversed()\n    this.normalDir = sign(this.f1.cross(this.f2).dot(this.dir))\n    this.pLCNormalWCMatrix = this.matrix\n      .as3x3()\n      .inversed()\n      .transposed()\n      .scale(this.normalDir)\n  }\n\n  getConstructorParameters(): any[] {\n    return [\n      this.center,\n      this.f1,\n      this.f2,\n      this.dir,\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    ]\n  }\n\n  pointFoot(pWC: V3, startU?: number, startV?: number): V3 {\n    if (undefined === startU || undefined === startV) {\n      // similar to uvP\n      const pLC = this.matrixInverse.transformPoint(pWC)\n      const angle = pLC.angleXY()\n      if (undefined === startU) {\n        startU = angle < -PI / 2 ? angle + TAU : angle\n      }\n      if (undefined === startV) {\n        startV = pLC.z + (pLC.lengthXY() - pLC.z) * SQRT1_2\n      }\n    }\n    const f = ([u, v]: number[]) => {\n      const pUVToPWC = this.pUV(u, v).to(pWC)\n      return [this.dpdu()(u, v).dot(pUVToPWC), this.dpdv()(u).dot(pUVToPWC)]\n    }\n    const { 0: x, 1: y } = newtonIterate(f, [startU, startV])\n    return new V3(x, y, 0)\n  }\n\n  get apex() {\n    return this.center\n  }\n\n  static atApexThroughEllipse(\n    apex: V3,\n    ellipse: EllipseCurve,\n    uMin?: number,\n    uMax?: number,\n    vMin?: number,\n    vMax?: number,\n  ): ConicSurface {\n    assertVectors(apex)\n    assertInst(EllipseCurve, ellipse)\n    return new ConicSurface(\n      apex,\n      ellipse.f1,\n      ellipse.f2,\n      apex.to(ellipse.center),\n      uMin,\n      uMax,\n      vMin,\n      vMax,\n    )\n  }\n\n  static unitISLineTs(anchor: V3, dir: V3): number[] {\n    const { x: ax, y: ay, z: az } = anchor\n    const { x: dx, y: dy, z: dz } = dir\n\n    // this cone: x² + y² = z²\n    // line: p = anchor + t * dir1\n    // split line equation into 3 component equations, insert into cone equation\n    // transform to form (a t² + b t + c = 0) and solve with pqFormula\n    const a = dx * dx + dy * dy - dz * dz\n    const b = 2 * (ax * dx + ay * dy - az * dz)\n    const c = ax * ax + ay * ay - az * az\n    // cone only defined for 0 <= z, so filter invalid values\n    return pqFormula(b / a, c / a).filter((t) => 0 < az + t * dz)\n  }\n\n  // calculate intersection of plane ax + cz = d and cone x² + y² = z²\n  static unitISPlane(a: number, c: number, d: number): Curve[] {\n    if (eq0(c)) {\n      // plane is \"vertical\", i.e. parallel to Y and Z axes\n      assert(!eq0(a)) // normal would be zero, which is invalid\n      // z² - y² = d²/a²\n      if (eq0(d)) {\n        // d = 0 => z² - y² = 0 => z² = y² => z = y\n        // plane goes through origin/V3.O\n        return [\n          new L3(V3.O, new V3(0, -SQRT1_2, -SQRT1_2), undefined, 0),\n          new L3(V3.O, new V3(0, -SQRT1_2, SQRT1_2), 0),\n        ]\n      } else {\n        // hyperbola\n        const center = new V3(d / a, 0, 0)\n        const f1 = new V3(0, 0, abs(d / a)) // abs, because we always want the\n        // hyperbola to be pointing up\n        const f2 = new V3(0, d / a, 0)\n        return [new HyperbolaCurve(center, f1, f2)]\n      }\n    } else {\n      // c != 0\n      const aa = a * a,\n        cc = c * c\n      if (eq0(d)) {\n        // ax + cz = d => x = d - cz / a => x² = d² - 2cdz/a + c²z²/a²\n        // x² + y² = z²\n        // => d² - 2cdz/a + c²z²/a² + y² = z²\n\n        if (eq(aa, cc)) {\n          return [new L3(V3.O, new V3(c, 0, -a).unit())]\n        } else if (aa < cc) {\n          throw new Error(\"intersection is single point V3.O\")\n        } else if (aa > cc) {\n          return [\n            new L3(V3.O, new V3(c, sqrt(aa - cc), -a).unit()),\n            new L3(V3.O, new V3(c, -sqrt(aa - cc), -a).unit()),\n          ]\n        }\n      } else {\n        if (eq(aa, cc)) {\n          // parabola\n          const parabolaVertex = new V3(d / 2 / a, 0, d / 2 / c)\n          const parabolaVertexTangentPoint = new V3(d / 2 / a, d / c, d / 2 / c)\n          const p2 = new V3(0, 0, d / c)\n          const f2 = p2.minus(parabolaVertex)\n          return [\n            new ParabolaCurve(\n              parabolaVertex,\n              parabolaVertexTangentPoint.minus(parabolaVertex),\n              f2.z < 0 ? f2.negated() : f2,\n            ),\n          ]\n        } else if (aa < cc) {\n          // ellipse\n          const center = new V3((-a * d) / (cc - aa), 0, (d * c) / (cc - aa))\n          if (center.z < 0) {\n            return []\n          }\n          const p1 = new V3(d / (a - c), 0, -d / (a - c))\n          const p2 = new V3(\n            (-a * d) / (cc - aa),\n            d / sqrt(cc - aa),\n            (d * c) / (cc - aa),\n          )\n          return [\n            new EllipseCurve(center, center.to(p1), center.to(p2), -PI, PI),\n          ]\n        } else if (aa > cc) {\n          // hyperbola\n          const center = new V3((-a * d) / (cc - aa), 0, (d * c) / (cc - aa))\n          // const p1 = new V3(d / (a - c), 0, -d / (a - c))\n          // const p2 = new V3(-a * d / (cc - aa), d / sqrt(aa - cc), d * c /\n          // (cc - aa)) const f1 = center.to(p1)\n          const f1 = new V3((d * c) / (aa - cc), 0, (-d * a) / (aa - cc))\n          const f2 = new V3(0, d / sqrt(aa - cc), 0)\n          return [new HyperbolaCurve(center, f1.z > 0 ? f1 : f1.negated(), f2)]\n        }\n      }\n    }\n    throw new Error(\"???\")\n  }\n\n  equals(obj: any): boolean {\n    return (\n      this == obj ||\n      (Object.getPrototypeOf(this) == Object.getPrototypeOf(obj) &&\n        this.center.equals(obj.center) &&\n        this.f1.equals(obj.f1) &&\n        this.f2.equals(obj.f2) &&\n        this.dir.equals(obj.dir))\n    )\n  }\n\n  like(object: any): boolean {\n    if (!this.isCoplanarTo(object)) return false\n    // normals need to point in the same direction (outwards or inwards) for\n    // both\n    return this.normalDir == object.normalDir\n  }\n\n  getVectors() {\n    return [\n      { anchor: this.center, dir1: this.dir },\n      { anchor: this.center.plus(this.dir), dir1: this.f1 },\n      { anchor: this.center.plus(this.dir), dir1: this.f2 },\n    ]\n  }\n\n  getSeamPlane(): P3 {\n    return P3.forAnchorAndPlaneVectors(this.center, this.f1, this.dir)\n  }\n\n  loopContainsPoint(contour: Edge[], p: V3): PointVsFace {\n    assertVectors(p)\n    const line = this.center.like(p)\n      ? new L3(p, this.matrix.transformVector(new V3(0, 1, 1)).unit())\n      : L3.throughPoints(p, this.apex)\n    const lineOut = line.dir1.cross(this.dir)\n\n    return Surface.loopContainsPointGeneral(contour, p, line, lineOut)\n  }\n\n  isTsForLine(line: L3): number[] {\n    // transforming line manually has advantage that dir1 will not be\n    // renormalized, meaning that calculated values t for lineLC are directly\n    // transferable to line\n    const anchorLC = this.matrixInverse.transformPoint(line.anchor)\n    const dirLC = this.matrixInverse.transformVector(line.dir1)\n    return ConicSurface.unitISLineTs(anchorLC, dirLC)\n  }\n\n  /**\n   * Interestingly, two cones don't need to have parallel dirs to be coplanar.\n   */\n  isCoplanarTo(surface: Surface): boolean {\n    if (this === surface) return true\n    if (!(surface instanceof ConicSurface) || !this.apex.like(surface.apex))\n      return false\n    // at this point apexes are equal\n    return this.containsEllipse(\n      new EllipseCurve(\n        surface.center.plus(surface.dir),\n        surface.f1,\n        surface.f2,\n      ),\n    )\n  }\n\n  containsEllipse(ellipse: EllipseCurve): boolean {\n    const ellipseLC = ellipse.transform(this.matrixInverse)\n    if (ellipseLC.center.z < 0) {\n      return false\n    }\n    const { f1, f2 } = ellipseLC.rightAngled()\n    const p1 = ellipseLC.center.plus(f1),\n      p2 = ellipseLC.center.plus(f2)\n    // check if both endpoints are on the cone's surface\n    // and that one main axis is perpendicular to the Z-axis\n    return (\n      eq(p1.x ** 2 + p1.y ** 2, p1.z ** 2) &&\n      eq(p2.x ** 2 + p2.y ** 2, p2.z ** 2) &&\n      (eq0(f1.z) || eq0(f2.z))\n    )\n  }\n\n  containsLine(line: L3): boolean {\n    const lineLC = line.transform(this.matrixInverse)\n    const d = lineLC.dir1\n    return lineLC.containsPoint(V3.O) && eq(d.x * d.x + d.y * d.y, d.z * d.z)\n  }\n\n  containsParabola(curve: ParabolaCurve): boolean {\n    assertInst(ParabolaCurve, curve)\n    const curveLC = curve.transform(this.matrixInverse)\n    if (curveLC.center.z < 0 || curveLC.f2.z < 0) {\n      return false\n    }\n    const { center, f1, f2 } = curveLC.rightAngled()\n    // check if center is on the surface,\n    // that tangent is perpendicular to the Z-axis\n    // and that \"y\" axis is parallel to surface\n    return (\n      eq(center.x * center.x + center.y * center.y, center.z * center.z) &&\n      eq0(f1.z) &&\n      eq(f2.x * f2.x + f2.y * f2.y, f2.z * f2.z)\n    )\n  }\n\n  containsHyperbola(curve: HyperbolaCurve): boolean {\n    // calculate intersection of plane ax + cz = 1 and cone x² + y² = z²\n    // const center = new V3(-a / (cc - aa), 0, 1 / (cc - aa))\n    // const p1 = new V3(1 / (a - c), 0, -1 / (a - c))\n    // const p2 = new V3(-a / (cc - aa), 1 / sqrt(aa - cc), 1 / (cc - aa))\n    // const f1 = new V3(1 * c / (aa - cc), 0, -a / (aa - cc) )\n    // const f2 = new V3(0, 1 / sqrt(aa - cc), 0)\n    assertInst(HyperbolaCurve, curve)\n    const curveLC = curve.transform(this.matrixInverse).rightAngled()\n    const centerXY = curveLC.center.xy()\n    if (centerXY.likeO()) {\n      return false\n    }\n    const rot = centerXY.angleXY()\n    const { center, f1, f2 } = curveLC.rotateZ(-rot)\n\n    // s = a / (aa - cc)\n    // t = -c / (aa - cc)\n    // s + t = 1 / (a + c)\n    // s - t = 1 / (a - c)\n    // (s + t)(s - t) = (ss - tt) = 1 / (aa - cc)\n    // u = 1 / sqrt(aa - cc) = sqrt(ss - tt)\n    // check if center is on the surface,\n    // that tangent is perpendicular to the Z-axis\n    return (\n      f1.z > 0 &&\n      eq(center.x, f1.z) &&\n      eq(center.z, f1.x) &&\n      eq0(center.y) &&\n      eq0(f1.y) &&\n      eq(sqrt(abs(center.x ** 2 - center.z ** 2)), abs(f2.y)) &&\n      eq0(f2.x) &&\n      eq0(f2.z)\n    )\n  }\n\n  containsCurve(curve: Curve): boolean {\n    if (curve instanceof EllipseCurve) {\n      return this.containsEllipse(curve)\n    } else if (curve instanceof L3) {\n      return this.containsLine(curve)\n    } else if (curve instanceof HyperbolaCurve) {\n      return this.containsHyperbola(curve)\n    } else if (curve instanceof ParabolaCurve) {\n      return this.containsParabola(curve)\n    } else {\n      return super.containsCurve(curve)\n    }\n  }\n\n  transform(m4: M4): this {\n    return new ConicSurface(\n      m4.transformPoint(this.center),\n      m4.transformVector(this.f1).times(m4.isMirroring() ? -1 : 1),\n      m4.transformVector(this.f2),\n      m4.transformVector(this.dir),\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    ) as this\n  }\n\n  transform4(m4: M4): ConicSurface | CylinderSurface {\n    const transformedApex = m4.timesVector(\n      Vector.fromV3AndWeight(this.center, 1),\n    )\n    const isometricV = (z: number) =>\n      new EllipseCurve(new V3(0, 0, z), new V3(z, 0, 0), new V3(0, z, 0))\n    if (!eq0(transformedApex.w)) {\n      // sMin doesn't change, but tMin does...\n      const c = m4.transformPoint(this.center),\n        f1 = m4\n          .transformVector2(this.f1, this.center)\n          .times(m4.isMirroring() ? -1 : 1),\n        f2 = m4.transformVector2(this.f2, this.center),\n        dir = m4.transformVector2(this.dir, this.center)\n      const matrixInv = M4.forSys(f1, f2, dir, c).inversed()\n      const x = isometricV(this.vMin).transform4(\n        matrixInv.times(m4).times(this.matrix),\n      )\n      const y = isometricV(this.vMax).transform4(\n        matrixInv.times(m4).times(this.matrix),\n      )\n      const aabb = AABB.forAABBs([x.getAABB(), y.getAABB()])\n      console.log(\"aabb\", aabb)\n      console.log(matrixInv.str)\n      console.log(x.str, y.str)\n      return new ConicSurface(\n        c,\n        f1,\n        f2,\n        dir,\n        this.uMin,\n        this.uMax,\n        aabb.min.z,\n        aabb.max.z,\n      ) as this\n    } else {\n      const dir = transformedApex.V3()\n      const baseCurve = isometricV(this.vMin).transform4(\n        m4.times(this.matrix),\n      ) as EllipseCurve\n      const matrixInv = M4.forSys(\n        baseCurve.f1,\n        baseCurve.f2,\n        dir.unit(),\n        baseCurve.center,\n      ).inversed()\n      const aabb = isometricV(this.vMax)\n        .transform4(matrixInv.times(m4.times(this.matrix)))\n        .getAABB()\n      return new CylinderSurface(\n        baseCurve,\n        dir.unit(),\n        this.uMin,\n        this.uMax,\n        min(0, aabb.min.z, aabb.max.z),\n        max(0, aabb.min.z, aabb.max.z),\n      )\n    }\n  }\n\n  flipped(): this {\n    return new ConicSurface(\n      this.center,\n      this.f1.negated(),\n      this.f2,\n      this.dir,\n    ) as this\n  }\n\n  normalUVFunc(): (u: number, v: number) => V3 {\n    const { f1, f2 } = this,\n      f3 = this.dir\n    return (d, _z) => {\n      return f2\n        .cross(f1)\n        .plus(f2.cross(f3.times(Math.cos(d))))\n        .plus(f3.cross(f1.times(Math.sin(d))))\n        .unit()\n    }\n  }\n\n  normalP(p: V3): V3 {\n    //TODO assert(!p.like(this.center))\n    const pLC = this.matrixInverse.transformPoint(p)\n    return this.normalUVFunc()(pLC.angleXY(), pLC.z)\n  }\n\n  pUVFunc(): (u: number, v: number) => V3 {\n    return (u, v) => {\n      // center + f1 v cos u + f2 v sin u + v dir\n      const resultLC = new V3(v * cos(u), v * sin(u), v)\n      return this.matrix.transformPoint(resultLC)\n    }\n  }\n\n  dpdu(): (u: number, v: number) => V3 {\n    return (u, v) => {\n      const resultLC = new V3(v * -sin(u), v * cos(u), 0)\n      return this.matrix.transformVector(resultLC)\n    }\n  }\n\n  dpdv(): (s: number) => V3 {\n    return (s) => {\n      const resultLC = new V3(cos(s), sin(s), 1)\n      return this.matrix.transformVector(resultLC)\n    }\n  }\n\n  implicitFunction(): (pWC: V3) => number {\n    return (pWC) => {\n      const pLC = this.matrixInverse.transformPoint(pWC)\n      const radiusLC = pLC.lengthXY()\n      return this.normalDir * (radiusLC - pLC.z)\n    }\n  }\n\n  didp(pWC: V3): V3 {\n    const pLC = this.matrixInverse.transformPoint(pWC)\n    return this.pLCNormalWCMatrix.transformVector(\n      pLC.xy().unit().withElement(\"z\", -1).times(this.normalDir),\n    )\n  }\n\n  containsPoint(p: V3) {\n    return eq0(this.implicitFunction()(p))\n  }\n\n  uvP(pWC: V3) {\n    const pLC = this.matrixInverse.transformPoint(pWC)\n    const angle = pLC.angleXY()\n    return new V3(angle < -PI / 2 ? angle + TAU : angle, pLC.z, 0)\n  }\n\n  isCurvesWithSurface(surface: Surface): Curve[] {\n    if (surface instanceof PlaneSurface) {\n      return this.isCurvesWithPlane(surface.plane)\n    } else if (ImplicitSurface.is(surface)) {\n      return ParametricSurface.isCurvesParametricImplicitSurface(\n        this,\n        surface,\n        0.1,\n        0.1 / this.dir.length(),\n        0.02,\n      )\n    }\n    return super.isCurvesWithSurface(surface)\n  }\n\n  getCenterLine() {\n    return new L3(this.center, this.dir)\n  }\n\n  isCurvesWithPlane(plane: P3): Curve[] {\n    assertInst(P3, plane)\n    const planeLC = plane.transform(this.matrixInverse)\n    const planeNormal = planeLC.normal1\n    const c = planeNormal.z\n    /** \"rotate\" plane normal1 when passing to {@link ConicSurface.unitISPlane} so that\n     *  y-component of normal1 is 0 */\n    const a = planeNormal.lengthXY()\n    const d = planeLC.w\n    // generated curves need to be rotated back before transforming to world\n    // coordinates\n    const rotationMatrix = M4.rotateZ(planeNormal.angleXY())\n    const wcMatrix = eq0(planeNormal.lengthXY())\n      ? this.matrix\n      : this.matrix.times(rotationMatrix)\n    return ConicSurface.unitISPlane(a, c, d).flatMap<Curve>((curve) => {\n      const curveWC = curve.transform(wcMatrix)\n      if (curve instanceof EllipseCurve) {\n        const curveLC = curve.transform(rotationMatrix)\n        const ts = curveLC.isTsWithPlane(P3.ZX)\n        const intervals = getIntervals(ts, -PI, PI).filter(\n          ([a, b]) => curveLC.at((a + b) / 2).y > 0,\n        )\n        return intervals.flatMap(([a, b]) =>\n          (curveWC as EllipseCurve).split(a, b),\n        )\n      }\n      const p = curveWC.at(0.2)\n      return this.normalP(p).cross(plane.normal1).dot(curveWC.tangentAt(0.2)) >\n        0\n        ? curveWC\n        : curveWC.reversed()\n    })\n  }\n\n  debugInfo() {\n    return {\n      ps: [this.center],\n      lines: [\n        this.center,\n        this.center.plus(this.f1),\n        this.center.plus(this.f2),\n        this.center.plus(this.dir),\n      ],\n    }\n  }\n}\n\nConicSurface.prototype.uStep = PI / 16\nConicSurface.prototype.vStep = 256\n","import {\n  arrayHashCode,\n  assert,\n  assertInst,\n  assertNumbers,\n  assertVectors,\n  hasConstructor,\n  int,\n  M4,\n  V3,\n} from \"ts3dutils\"\n\nimport {\n  ConicSurface,\n  Curve,\n  Edge,\n  EllipseCurve,\n  EllipsoidSurface,\n  ImplicitCurve,\n  ImplicitSurface,\n  L3,\n  P3,\n  ParametricSurface,\n  PlaneSurface,\n  PointProjectedSurface,\n  PointVsFace,\n  Surface,\n} from \"../index\"\n\nimport { sign } from \"../math\"\n\n/**\n * Surface normal1 is (t, z) => this.baseCurve.tangentAt(t) X this.dir\n * Choose dir appropriately to select surface orientation.\n */\nexport class ProjectedCurveSurface extends ParametricSurface {\n  readonly [\"constructor\"]: typeof ProjectedCurveSurface & {\n    new <T extends ProjectedCurveSurface>(\n      baseCurve: Curve,\n      dir: V3,\n      uMin?: number,\n      uMax?: number,\n      vMin?: number,\n      vMax?: number,\n    ): T\n  }\n\n  constructor(\n    readonly baseCurve: Curve,\n    readonly dir: V3,\n    uMin: number = baseCurve.tMin,\n    uMax: number = baseCurve.tMax,\n    vMin: number = -100,\n    vMax: number = 100,\n  ) {\n    super(uMin, uMax, vMin, vMax)\n    assertInst(Curve, baseCurve)\n    assertInst(V3, dir)\n    assert(uMin < uMax)\n    assert(vMin < vMax)\n  }\n\n  getConstructorParameters() {\n    return [\n      this.baseCurve,\n      this.dir,\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    ]\n  }\n\n  equals(obj: any): boolean {\n    return (\n      this == obj ||\n      (Object.getPrototypeOf(this) == Object.getPrototypeOf(obj) &&\n        this.dir.equals(obj.dir) &&\n        this.baseCurve.equals(obj.baseCurve))\n    )\n  }\n\n  hashCode(): int {\n    return arrayHashCode([this.dir, this.baseCurve])\n  }\n\n  containsLine(line: L3): boolean {\n    return this.dir.isParallelTo(line.dir1) && this.containsPoint(line.anchor)\n  }\n\n  dpdu(): (u: number, v: number) => V3 {\n    return (u, v) => this.baseCurve.tangentAt(u)\n  }\n\n  dpdv(): (u: number, v: number) => V3 {\n    return (u, v) => this.dir\n  }\n\n  normalUV(u: number, v: number): V3 {\n    return this.baseCurve.tangentAt(u).cross(this.dir).unit()\n  }\n\n  pUV(u: number, v: number): V3 {\n    return this.baseCurve.at(u).plus(this.dir.times(v))\n  }\n\n  pointFoot(pWC: V3, ss?: number): V3 {\n    const basePlane = new P3(this.dir.unit(), 0)\n    const projCurve = this.baseCurve.project(basePlane)\n    const projPoint = basePlane.projectedPoint(pWC)\n    const t = projCurve.closestTToPoint(projPoint, ss, this.uMin, this.uMax)\n    const z = L3.pointT(this.baseCurve.at(t), this.dir, pWC)\n    return new V3(t, z, 0)\n  }\n\n  uvPFunc(): (pWC: V3) => V3 {\n    const projPlane = new P3(this.dir.unit(), 0)\n    const projBaseCurve = this.baseCurve.project(projPlane)\n    return (pWC) => {\n      const projPoint = projPlane.projectedPoint(pWC)\n      assertNumbers(this.uMin)\n      const t = projBaseCurve.pointT(projPoint, this.uMin, this.uMax)\n      const z = L3.pointT(this.baseCurve.at(t), this.dir, pWC)\n      return new V3(t, z, 0)\n    }\n  }\n\n  isCurvesWithPlane(plane: P3): Curve[] {\n    assertInst(P3, plane)\n    if (this.dir.isPerpendicularTo(plane.normal1)) {\n      const ts = this.baseCurve.isTsWithPlane(plane)\n      return ts.map((t) => {\n        const l3dir =\n          0 < this.baseCurve.tangentAt(t).dot(plane.normal1)\n            ? this.dir\n            : this.dir.negated()\n        return new L3(this.baseCurve.at(t), l3dir.unit())\n      })\n    } else {\n      let projCurve = this.baseCurve.transform(M4.project(plane, this.dir))\n      if (this.dir.dot(plane.normal1) > 0) {\n        // we need to flip the ellipse so the tangent is correct\n        projCurve = projCurve.reversed()\n      }\n      return [projCurve]\n    }\n  }\n\n  isCurvesWithSurface(surface: Surface): Curve[] {\n    if (surface instanceof PlaneSurface) {\n      return this.isCurvesWithPlane(surface.plane)\n    }\n    if (surface instanceof ProjectedCurveSurface) {\n      const dir1 = surface.dir\n      if (this.dir.isParallelTo(dir1)) {\n        const ts = surface.baseCurve.isTsWithSurface(this)\n        return ts.map((t) => {\n          const p = surface.baseCurve.at(t)\n          const correctDir = this.normalP(p).cross(surface.normalP(p))\n          return new L3(p, dir1.times(sign(correctDir.dot(dir1))))\n        })\n      } else if (ImplicitSurface.is(surface)) {\n        let curves2 = ParametricSurface.isCurvesParametricImplicitSurface(\n          this,\n          surface,\n          0.1,\n          0.1 / surface.dir.length(),\n          0.05,\n        )\n        curves2 = surface.clipCurves(curves2)\n        return curves2\n      } else {\n        let curves2 = ParametricSurface.isCurvesParametricParametricSurface(\n          this,\n          surface,\n          0.05,\n          0.1 / surface.dir.length(),\n          0.05,\n        )\n        curves2 = this.clipCurves(curves2)\n        curves2 = surface.clipCurves(curves2)\n        return curves2\n      }\n    }\n    if (surface instanceof EllipsoidSurface) {\n      return surface.isCurvesWithSurface(this)\n    }\n    return super.isCurvesWithSurface(surface)\n  }\n\n  containsPoint(pWC: V3): boolean {\n    const uv = this.uvPFunc()(pWC)\n    return this.pUVFunc()(uv.x, uv.y).like(pWC)\n  }\n\n  containsCurve(curve: Curve): boolean {\n    if (curve instanceof L3) {\n      return (\n        this.dir.isParallelTo(curve.dir1) && this.containsPoint(curve.anchor)\n      )\n    }\n    if (curve instanceof ImplicitCurve) {\n      return super.containsCurve(curve)\n    }\n    // project baseCurve and test curve onto a common plane and check if the curves are alike\n    const projPlane = new P3(this.dir.unit(), 0)\n    const projBaseCurve = this.baseCurve.project(projPlane)\n    const projCurve = curve.project(projPlane)\n\n    return projBaseCurve.isColinearTo(projCurve)\n  }\n\n  isCoplanarTo(surface: Surface): boolean {\n    return (\n      this == surface ||\n      (hasConstructor(surface, ProjectedCurveSurface) &&\n        this.dir.isParallelTo(surface.dir) &&\n        this.containsCurve(surface.baseCurve))\n    )\n  }\n\n  like(object: any): boolean {\n    if (!this.isCoplanarTo(object)) return false\n    // normals need to point in the same direction (outwards or inwards) for both\n    const p00 = this.pUVFunc()(0, 0)\n    const thisNormal = this.normalUVFunc()(0, 0)\n    const otherNormal = object.normalP(p00)\n    return 0 < thisNormal.dot(otherNormal)\n  }\n\n  loopContainsPoint(loop: Edge[], p: V3): PointVsFace {\n    assertVectors(p)\n    assert(isFinite(p.x), p.y, p.z)\n    const line = new L3(p, this.dir.unit())\n    const ptpf = this.uvPFunc()\n    const pp = ptpf(p)\n    if (isNaN(pp.x)) {\n      console.log(this.sce, p.sce)\n      assert(false)\n    }\n    const lineOut = this.baseCurve.tangentAt(pp.x).rejectedFrom(this.dir)\n\n    return Surface.loopContainsPointGeneral(loop, p, line, lineOut)\n  }\n\n  transform(m4: M4): this {\n    const f = m4.isMirroring() ? -1 : 1\n    return new this.constructor<this>(\n      this.baseCurve.transform(m4),\n      m4.transformVector(this.dir).times(f),\n      this.uMin,\n      this.uMax,\n      1 == f ? this.vMin : -this.vMax,\n      1 == f ? this.vMax : -this.vMin,\n    )\n  }\n\n  transform4(\n    m4: M4,\n  ): PointProjectedSurface | ProjectedCurveSurface | ConicSurface {\n    const vp = m4.vanishingPoint(this.dir)\n    if (!vp) {\n      const f = m4.isMirroring() ? -1 : 1\n      return new this.constructor<this>(\n        this.baseCurve.transform4(m4),\n        m4.normalized().transformVector(this.dir).times(f),\n        undefined,\n        undefined,\n        1 == f ? this.vMin : -this.vMax,\n        1 == f ? this.vMax : -this.vMin,\n      )\n    }\n    const curveT = this.baseCurve.transform4(m4)\n    if (curveT instanceof EllipseCurve) {\n      console.log(vp.sce, curveT.sce)\n      return ConicSurface.atApexThroughEllipse(\n        vp,\n        m4.isMirroring() ? curveT : curveT.reversed(),\n        this.uMin,\n        this.uMax,\n        1,\n        2,\n      )\n    }\n    return new PointProjectedSurface(\n      curveT,\n      vp,\n      P3.throughPoints(\n        curveT.at(curveT.tMin),\n        curveT.at((curveT.tMin + curveT.tMax) / 2),\n        curveT.at(curveT.tMax),\n      ),\n      1,\n      this.uMin,\n      this.uMax,\n      1,\n      2,\n    )\n  }\n\n  isTsForLine(line: L3): number[] {\n    assertInst(L3, line)\n    const projPlane = new P3(this.dir.unit(), 0)\n    const projDir = projPlane.projectedVector(line.dir1)\n    if (projDir.likeO()) {\n      // line is parallel to this.dir\n      return []\n    }\n    const projAnchor = projPlane.projectedPoint(line.anchor)\n    const projBaseCurve = this.baseCurve.project(projPlane)\n    return projBaseCurve\n      .isInfosWithLine(\n        projAnchor,\n        projDir,\n        this.uMin,\n        this.uMax,\n        line.tMin,\n        line.tMax,\n      )\n      .map((info) => info.tOther)\n  }\n\n  flipped(): this {\n    return new this.constructor<this>(\n      this.baseCurve,\n      this.dir.negated(),\n      this.uMin,\n      this.uMax,\n      -this.vMax,\n      -this.vMin,\n    )\n  }\n}\nProjectedCurveSurface.prototype.uStep = 1 / 128\nProjectedCurveSurface.prototype.vStep = 256\n","import {\n  assert,\n  assertInst,\n  DEG,\n  eq0,\n  fuzzyBetween,\n  hasConstructor,\n  lerp,\n  lt,\n  M4,\n  V3,\n  VV,\n  withMax,\n} from \"ts3dutils\"\n\nimport {\n  Curve,\n  Edge,\n  EllipseCurve,\n  HyperbolaCurve,\n  intersectionUnitCircleLine2,\n  L3,\n  NURBS,\n  NURBSSurface,\n  P3,\n  ParametricSurface,\n  PlaneSurface,\n  PointVsFace,\n  Surface,\n} from \"..\"\n\nimport { abs, cos, PI, sin } from \"../math\"\n\n/**\n * Rotation surface with r = f(z)\n */\nexport class RotatedCurveSurface extends ParametricSurface {\n  readonly matrixInverse: M4\n\n  constructor(\n    readonly curve: Curve,\n    readonly matrix: M4 = M4.IDENTITY,\n    uMin: number = 0,\n    uMax: number = PI,\n    vMin: number = curve.tMin,\n    vMax: number = curve.tMax,\n  ) {\n    // d/dz (r(z))\n    super(uMin, uMax, vMin, vMax)\n    assertInst(M4, matrix)\n    assert(matrix.isNoProj())\n    assert(eq0(curve.at(vMin).y))\n    this.matrixInverse = matrix.inversed()\n    this.vStep = this.curve.tIncrement\n  }\n\n  getConstructorParameters(): any[] {\n    return [this.curve, this.matrix, this.uMin, this.uMax, this.vMin, this.vMax]\n  }\n\n  flipped(): this {\n    return new RotatedCurveSurface(\n      this.curve,\n      this.matrix.times(M4.mirror(P3.YZ)),\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    ) as this\n  }\n\n  transform(m4: M4): this {\n    return new RotatedCurveSurface(\n      this.curve,\n      m4.isMirroring()\n        ? m4.times(this.matrix).times(M4.mirror(P3.YZ))\n        : m4.times(this.matrix),\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    ) as this\n  }\n\n  containsPoint(pWC: V3): boolean {\n    const pLC = this.matrixInverse.transformPoint(pWC)\n    const radius = pLC.lengthXY()\n    return this.curve.containsPoint(new V3(radius, 0, pLC.z))\n  }\n\n  pUVFunc(): (u: number, v: number) => V3 {\n    return (u, v) => {\n      const { x: radius, z: z } = this.curve.at(v)\n      return this.matrix.transformPoint(V3.polar(radius, u, z))\n    }\n  }\n\n  dpdu(): (u: number, v: number) => V3 {\n    return (u, v) => {\n      const radius = this.curve.at(v).x\n      const resultLC = new V3(radius * -sin(u), radius * cos(u), 0)\n      return this.matrix.transformVector(resultLC)\n    }\n  }\n\n  dpdv(): (u: number, v: number) => V3 {\n    return (u, v) => {\n      const { x: drdt, z: dzdt } = this.curve.tangentAt(v)\n      return this.matrix.transformVector(V3.polar(drdt, u, dzdt))\n    }\n  }\n\n  normalUVFunc(): (u: number, v: number) => V3 {\n    const matrix = this.matrix.inversed().transposed().as3x3()\n    const normalLength = this.matrix.isMirroring() ? -1 : 1\n    return (u, v) => {\n      const { x: drdt, z: dzdt } = this.curve.tangentAt(v)\n      return matrix\n        .transformVector(V3.polar(dzdt, u, -drdt))\n        .toLength(normalLength)\n    }\n  }\n\n  uvPFunc(): (pWC: V3) => V3 {\n    return (pWC) => {\n      const pLC = this.matrixInverse.transformPoint(pWC)\n      const angle = EllipseCurve.XYLCPointT(pLC, this.uMin, this.uMax)\n      const radius = pLC.lengthXY()\n      return new V3(angle, this.curve.pointT(new V3(radius, 0, pLC.z)), 0)\n    }\n  }\n\n  pointFoot(pWC: V3, startS?: number, startT?: number): V3 {\n    const pLC = this.matrixInverse.transformPoint(pWC)\n    const angle = abs(pLC.angleXY())\n    const radius = pLC.lengthXY()\n    return new V3(\n      angle,\n      this.curve.closestTToPoint(new V3(radius, 0, pLC.z)),\n      0,\n    )\n  }\n\n  isTsForLine(line: L3): number[] {\n    const anchorLC = this.matrixInverse.transformPoint(line.anchor)\n    const dirLC = this.matrixInverse.transformVector(line.dir1)\n    if (dirLC.isParallelTo(V3.Z)) {\n      if (!fuzzyBetween(anchorLC.angleXY(), this.uMin, this.uMax)) return []\n      return this.curve\n        .isInfosWithLine(new V3(anchorLC.lengthXY(), 0, anchorLC.z), dirLC)\n        .map((info) => info.tOther)\n    } else if (L3.containsPoint(anchorLC.xy(), dirLC.xy(), V3.O)) {\n      // line goes through Z axis\n      const dotter = dirLC.xy().unit()\n      return [\n        ...this.curve.isInfosWithLine(\n          new V3(dotter.dot(anchorLC), 0, anchorLC.z),\n          new V3(dotter.dot(dirLC), 0, dirLC.z),\n        ),\n        ...this.curve.isInfosWithLine(\n          new V3(-dotter.dot(anchorLC), 0, anchorLC.z),\n          new V3(-dotter.dot(dirLC), 0, dirLC.z),\n        ),\n      ]\n        .map((info) => info.tOther)\n        .filter((t) =>\n          fuzzyBetween(\n            L3.at(anchorLC, dirLC, t).angleXY(),\n            this.uMin,\n            this.uMax,\n          ),\n        )\n    } else if (dirLC.isPerpendicularTo(V3.Z)) {\n      const secs = this.isCurvesWithPlaneLC(new P3(V3.Z, anchorLC.z))\n      if (!secs) return []\n      return secs.flatMap((sec) =>\n        sec.isInfosWithLine(anchorLC, dirLC).map((info) => info.tOther),\n      )\n    } else {\n      // transform into hyperbola\n      // f(t) = V(((ax + t dx)² + (ay + t dy)²) ** 1/2, 0, az + t dz)\n      // f(t) = V((ax² + 2 ax t dx + t² dx² + ay² + 2 ay t dy + t² dy²) ** 1/2, 0, az + t dz)\n      // f(t) = V((t² (dx² + dy²) + 2 t (ax dx + ay dy) + ax² + ay²) ** 1/2, 0, az + t * dz)\n\n      // (anchorLC.xy + t * dirLC.xy) * dir.xy = 0\n      // t * dirLC.xy² = -anchorLC.xy * dirLC.xy\n      const closestTToZ = -anchorLC.xy().dot(dirLC.xy()) / dirLC.xy().squared()\n      const closestPointToZ = L3.at(anchorLC, dirLC, closestTToZ)\n      const scaleX = closestPointToZ.lengthXY()\n      const lineGradientWC = dirLC.z / dirLC.lengthXY()\n      const scaleZ = scaleX * lineGradientWC\n      const hc = HyperbolaCurve.XY.transform(\n        M4.rotateX(90 * DEG)\n          .scale(scaleX, 0, scaleZ)\n          .translate(0, 0, closestPointToZ.z),\n      )\n\n      const infos = hc.isInfosWithCurve(this.curve)\n      return infos\n        .map((info) => (info.p.z - anchorLC.z) / dirLC.z)\n        .filter((t) =>\n          fuzzyBetween(\n            L3.at(anchorLC, dirLC, t).angleXY(),\n            this.uMin,\n            this.uMax,\n          ),\n        )\n    }\n  }\n\n  private isCurvesWithPlaneLC(planeLC: P3): Curve[] | undefined {\n    if (planeLC.normal1.isParallelTo(V3.Z)) {\n      return this.curve.isTsWithPlane(planeLC).map((t) => {\n        const { x: radius } = this.curve.at(t)\n        return new EllipseCurve(\n          new V3(0, 0, planeLC.w),\n          new V3(radius, 0, 0),\n          new V3(0, radius, 0),\n          this.uMin,\n          this.uMax,\n        ).transform(this.matrix)\n      })\n    } else if (\n      planeLC.normal1.isPerpendicularTo(V3.Z) &&\n      planeLC.containsPoint(V3.O)\n    ) {\n      return [\n        this.curve\n          .rotateZ(V3.Y.angleRelativeNormal(planeLC.normal1, V3.Z))\n          .transform(this.matrix),\n      ]\n    }\n    return undefined\n  }\n\n  isCurvesWithPlane(plane: P3): Curve[] {\n    const planeLC = plane.transform(this.matrixInverse)\n    const planeLCCurves = this.isCurvesWithPlaneLC(planeLC)\n    if (planeLCCurves) {\n      return planeLCCurves.map((curve) => curve.transform(this.matrix))\n    } else {\n      return ParametricSurface.isCurvesParametricImplicitSurface(\n        this,\n        new PlaneSurface(plane),\n        0.05,\n        0.05,\n        0.02,\n      )\n    }\n  }\n\n  loopContainsPoint(loop: Edge[], pWC: V3): PointVsFace {\n    const pLC = this.matrixInverse.transformPoint(pWC)\n    const angle = EllipseCurve.XYLCPointT(pLC, this.uMin, this.uMax)\n    const testCurveLC = EllipseCurve.semicircle(\n      pLC.lengthXY(),\n      new V3(0, 0, pLC.z),\n    )\n    const testCurveWC = testCurveLC.transform(this.matrix)\n    return Surface.loopContainsPointEllipse(loop, pWC, testCurveWC, angle)\n  }\n\n  isCoplanarTo(surface: Surface): boolean {\n    if (this === surface) return true\n    if (!hasConstructor(surface, RotatedCurveSurface)) return false\n    const surfaceLCToThisLC = this.matrixInverse.times(surface.matrix)\n    assert(!surfaceLCToThisLC.X.xy().likeO())\n    const zRotation = surfaceLCToThisLC.X.angleXY()\n    return surface.curve\n      .transform(M4.rotateZ(-zRotation).times(surfaceLCToThisLC))\n      .isColinearTo(this.curve)\n  }\n\n  isCurvesWithSurface(surface: Surface): Curve[] {\n    if (surface instanceof PlaneSurface) {\n      return this.isCurvesWithPlane(surface.plane)\n    }\n    return super.isCurvesWithSurface(surface)\n  }\n\n  containsCurve(curve: Curve): boolean {\n    if (curve.constructor == this.curve.constructor) {\n      const curveLC = curve.transform(this.matrixInverse)\n      // find a point on curveLC which isn't on the Z-axis\n      const t = withMax(\n        [0, 0.5, 1].map((x) => lerp(curveLC.tMin, curveLC.tMax, x)),\n        (t) => curveLC.at(t).lengthXY(),\n      )!\n      const angle = curveLC.at(t).angleXY()\n      const curveLCRotated = curveLC.rotateZ(-angle)\n      if (this.curve.isColinearTo(curveLCRotated)) {\n        return true\n      }\n    }\n    if (curve instanceof EllipseCurve) {\n      const curveLC = curve.transform(this.matrixInverse)\n      if (curveLC.normal.isParallelTo(V3.Z)) {\n        return (\n          curveLC.isCircular() &&\n          this.curve.containsPoint(\n            new V3(curveLC.f1.length(), 0, curveLC.center.z),\n          )\n        )\n      }\n      return false\n    }\n    return super.containsCurve(curve)\n  }\n\n  getExtremePoints(): V3[] {\n    return getExtremePointsHelper.call(this, this.curve)\n  }\n\n  asNURBSSurface(): NURBSSurface {\n    // y = 0 for baseNURBS\n    const baseNURBS = NURBS.fromEllipse(this.curve as EllipseCurve)\n    const rotationNURBS = NURBS.UnitCircle(2, this.vMin, this.vMax)\n    return new NURBSSurface(\n      rotationNURBS.points.flatMap((rv) =>\n        baseNURBS.points.map((b) =>\n          this.matrix.timesVector(\n            VV(rv.x * b.x, rv.y * b.x, b.z * rv.w, rv.w * b.w),\n          ),\n        ),\n      ),\n      baseNURBS.knots,\n      rotationNURBS.knots,\n      baseNURBS.degree,\n      rotationNURBS.degree,\n      baseNURBS.tMin,\n      baseNURBS.tMax,\n      rotationNURBS.tMin,\n      rotationNURBS.tMax,\n    )\n  }\n}\n\nRotatedCurveSurface.prototype.uStep = EllipseCurve.prototype.tIncrement\n\nexport function getExtremePointsHelper(\n  this: ParametricSurface & { matrix: M4 },\n  curve: Curve,\n) {\n  // this logic comes from EllipseCurve.roots\n  const f1 = this.matrix.X\n  const f2 = this.matrix.Y\n  return [0, 1, 2].flatMap((dim) => {\n    const a = f2.e(dim)\n    const b = -f1.e(dim)\n    const xiEtas =\n      eq0(a) && eq0(b) ? [[1, 0]] : intersectionUnitCircleLine2(a, b, 0)\n    return xiEtas.flatMap(([xi, eta]) => {\n      const u = Math.atan2(eta, xi)\n      if (!(lt(this.uMin, u) && lt(u, this.uMax))) return []\n      const testCurve = curve.transform(this.matrix.times(M4.rotateZ(u)))\n      return testCurve.roots()[dim].map((v) => this.pUV(u, v))\n    })\n  })\n}\n","import {\n  assert,\n  assertInst,\n  assertVectors,\n  eq0,\n  hasConstructor,\n  M4,\n  pqFormula,\n  TAU,\n  V3,\n} from \"ts3dutils\"\n\nimport {\n  BezierCurve,\n  Curve,\n  Edge,\n  EllipseCurve,\n  ImplicitSurface,\n  L3,\n  OUTSIDE,\n  P3,\n  PointVsFace,\n  ProjectedCurveSurface,\n  Surface,\n} from \"..\"\n\nimport { sign } from \"../math\"\n\nexport class CylinderSurface\n  extends ProjectedCurveSurface\n  implements ImplicitSurface {\n  static readonly UNIT = new CylinderSurface(\n    EllipseCurve.UNIT,\n    V3.Z,\n    undefined,\n    undefined,\n    0,\n    1,\n  )\n  readonly matrix: M4\n  readonly matrixInverse: M4\n  readonly pLCNormalWCMatrix: M4\n  readonly pWCNormalWCMatrix: M4\n  readonly normalDir: number\n  // @ts-ignore\n  // readonly baseCurve: EllipseCurve\n\n  constructor(\n    readonly baseCurve: EllipseCurve,\n    dir1: V3,\n    uMin: number = baseCurve.tMin,\n    uMax: number = baseCurve.tMax,\n    zMin = -Infinity,\n    zMax = Infinity,\n  ) {\n    super(baseCurve, dir1, uMin, uMax, zMin, zMax)\n    assertInst(EllipseCurve, baseCurve)\n    //assert(!baseCurve.normal1.isPerpendicularTo(dir1), !baseCurve.normal1.isPerpendicularTo(dir1))\n    this.matrix = M4.forSys(baseCurve.f1, baseCurve.f2, dir1, baseCurve.center)\n    this.matrixInverse = this.matrix.inversed()\n    this.normalDir = sign(this.baseCurve.normal.dot(this.dir))\n    this.pLCNormalWCMatrix = this.matrix\n      .as3x3()\n      .inversed()\n      .transposed()\n      .scale(this.normalDir)\n    this.pWCNormalWCMatrix = this.pLCNormalWCMatrix.times(this.matrixInverse)\n  }\n\n  static semicylinder(\n    radius: number,\n    sMin?: number,\n    sMax?: number,\n    tMin?: number,\n    tMax?: number,\n  ): CylinderSurface {\n    return new CylinderSurface(\n      new EllipseCurve(V3.O, new V3(radius, 0, 0), new V3(0, radius, 0)),\n      V3.Z,\n      sMin,\n      sMax,\n      tMin,\n      tMax,\n    )\n  }\n\n  /**\n   *\n   * @param anchorLC\n   * @param dirLC not necessarily unit\n   */\n  static unitISLineTs(anchorLC: V3, dirLC: V3): number[] {\n    const { x: ax, y: ay } = anchorLC\n    const { x: dx, y: dy } = dirLC\n\n    // this cylinder: x² + y² = 1\n    // line: p = anchorLC + t * dirLC\n    // split line equation into 3 component equations, insert into cylinder equation\n    // x = ax + t * dx\n    // y = ay + t * dy\n    // (ax² + 2 ax t dx + t²dx²) + (ay² + 2 ay t dy + t²dy²) = 1\n    // transform to form (a t² + b t + c = 0) and solve with pqFormula\n    const a = dx ** 2 + dy ** 2\n    const b = 2 * (ax * dx + ay * dy)\n    const c = ax ** 2 + ay ** 2 - 1\n    return pqFormula(b / a, c / a).filter((t) =>\n      EllipseCurve.XYLCValid(new V3(ax + dx * t, ay + dy * t, 0)),\n    )\n  }\n\n  normalP(p: V3): V3 {\n    return this.pLCNormalWCMatrix\n      .transformVector(this.matrixInverse.transformPoint(p).xy())\n      .unit()\n  }\n\n  loopContainsPoint(loop: Edge[], p: V3): PointVsFace {\n    assertVectors(p)\n    if (!this.containsPoint(p)) return OUTSIDE\n    const line = new L3(p, this.dir.unit())\n    const lineOut = this.dir.cross(this.normalP(p))\n    return Surface.loopContainsPointGeneral(loop, p, line, lineOut)\n  }\n\n  isTsForLine(line: L3) {\n    assertInst(L3, line)\n    // transforming line manually has advantage that dir1 will not be renormalized,\n    // meaning that calculated values t for localLine are directly transferable to line\n    const dirLC = this.matrixInverse.transformVector(line.dir1)\n    if (dirLC.isParallelTo(V3.Z)) {\n      // line is parallel to this.dir\n      return []\n    }\n    const anchorLC = this.matrixInverse.transformPoint(line.anchor)\n    assert(\n      !CylinderSurface.unitISLineTs(anchorLC, dirLC).length ||\n        !isNaN(CylinderSurface.unitISLineTs(anchorLC, dirLC)[0]),\n      \"sad \" + dirLC,\n    )\n    return CylinderSurface.unitISLineTs(anchorLC, dirLC)\n  }\n\n  isCoplanarTo(surface: Surface): surface is CylinderSurface {\n    return (\n      this == surface ||\n      (hasConstructor(surface, CylinderSurface) &&\n        this.dir.isParallelTo(surface.dir) &&\n        this.containsEllipse(surface.baseCurve, false))\n    )\n  }\n\n  like(surface: Surface): boolean {\n    if (!this.isCoplanarTo(surface)) return false\n    // normals need to point in the same direction (outwards or inwards) for both\n    const thisFacesOut = 0 < this.baseCurve.normal.dot(this.dir)\n    const objectFacesOut = 0 < surface.baseCurve.normal.dot(surface.dir)\n    return thisFacesOut == objectFacesOut\n  }\n\n  containsEllipse(ellipse: EllipseCurve, checkAABB: boolean = true) {\n    const projEllipse = ellipse.transform(\n      M4.project(this.baseCurve.getPlane(), this.dir),\n    )\n    return this.baseCurve == ellipse || this.baseCurve.isColinearTo(projEllipse)\n  }\n\n  containsCurve(curve: Curve) {\n    if (curve instanceof L3) {\n      return this.containsLine(curve)\n    } else if (curve instanceof EllipseCurve) {\n      return this.containsEllipse(curve)\n    } else if (curve instanceof BezierCurve) {\n      return false\n    } else {\n      return super.containsCurve(curve)\n    }\n  }\n\n  implicitFunction() {\n    return (pWC: V3) => {\n      const pLC = this.matrixInverse.transformPoint(pWC)\n      return (pLC.lengthXY() - 1) * this.normalDir\n    }\n  }\n\n  didp(pWC: V3) {\n    const pLC = this.matrixInverse.transformPoint(pWC)\n    const pLCLengthXY = pLC.lengthXY()\n    const didpLC = new V3(pLC.x / pLCLengthXY, pLC.y / pLCLengthXY, 0)\n    return this.pLCNormalWCMatrix.transformVector(didpLC)\n  }\n\n  containsPoint(pWC: V3): boolean {\n    const pLC = this.matrixInverse.transformPoint(pWC)\n    return this.baseCurve.isValidT(\n      EllipseCurve.XYLCPointT(pLC, this.uMin, this.uMax),\n    )\n  }\n\n  uvP(pWC: V3): V3 {\n    assert(arguments.length == 1)\n    const pLC = this.matrixInverse.transformPoint(pWC)\n    const u = EllipseCurve.XYLCPointT(pLC, this.vMin, this.vMax)\n    return new V3(u, pLC.z, 0)\n  }\n\n  isCurvesWithSurface(surface2: Surface): Curve[] {\n    if (surface2 instanceof ProjectedCurveSurface) {\n      if (surface2.dir.isParallelTo(this.dir)) {\n        const projectedCurve = surface2.baseCurve.transform(\n          M4.project(this.baseCurve.getPlane(), this.dir),\n        )\n        return this.baseCurve.isInfosWithCurve(projectedCurve).map((info) => {\n          const lineDir =\n            sign(\n              this.normalP(info.p)\n                .cross(surface2.normalP(info.p))\n                .dot(this.dir),\n            ) || 1\n          return new L3(info.p, this.dir.times(lineDir))\n        })\n      }\n    }\n    if (surface2 instanceof CylinderSurface) {\n      if (eq0(this.getCenterLine().distanceToLine(surface2.getCenterLine()))) {\n        throw new Error()\n      }\n    }\n    return super.isCurvesWithSurface(surface2)\n  }\n\n  getCenterLine(): L3 {\n    return new L3(this.baseCurve.center, this.dir)\n  }\n\n  facesOutwards(): boolean {\n    return this.baseCurve.normal.dot(this.dir) > 0\n  }\n\n  getSeamPlane(): P3 {\n    let normal = this.baseCurve.f1.cross(this.dir)\n    normal = normal.times(-sign(normal.dot(this.baseCurve.f2)))\n    return P3.normalOnAnchor(normal, this.baseCurve.center)\n  }\n\n  clipCurves(curves: Curve[]): Curve[] {\n    return curves.flatMap((curve) => curve.clipPlane(this.getSeamPlane()))\n  }\n}\n\nCylinderSurface.prototype.uStep = TAU / 32\nCylinderSurface.prototype.vStep = 256\n","import {\n  arrayFromFunction,\n  assert,\n  assertf,\n  assertInst,\n  assertNumbers,\n  assertVectors,\n  between,\n  checkDerivate,\n  clamp,\n  eq,\n  eq0,\n  fuzzyBetween,\n  gaussLegendreQuadrature24,\n  getIntervals,\n  getRoots,\n  glqInSteps,\n  hasConstructor,\n  le,\n  lt,\n  M4,\n  MINUS,\n  newtonIterate,\n  NLA_PRECISION,\n  pqFormula,\n  snap,\n  sum,\n  toSource,\n  V,\n  V3,\n} from \"ts3dutils\"\n\nimport {\n  Curve,\n  CylinderSurface,\n  Edge,\n  EllipseCurve,\n  getExtremePointsHelper,\n  ImplicitSurface,\n  L3,\n  P3,\n  ParametricSurface,\n  PICurve,\n  PlaneSurface,\n  PointVsFace,\n  ProjectedCurveSurface,\n  Surface,\n} from \"..\"\n\nimport { abs, cos, max, min, PI, sign, sin, sqrt } from \"../math\"\n\nclass ArrayExt {}\n\ndeclare global {\n  interface Array<T> extends ArrayExt {}\n}\n\nexport class EllipsoidSurface\n  extends ParametricSurface\n  implements ImplicitSurface {\n  static readonly UNIT = new EllipsoidSurface(V3.O, V3.X, V3.Y, V3.Z)\n  readonly matrix: M4\n  readonly matrixInverse: M4\n  readonly pLCNormalWCMatrix: M4\n  readonly pWCNormalWCMatrix: M4\n  readonly normalDir: number // -1 | 1\n\n  constructor(\n    readonly center: V3,\n    readonly f1: V3,\n    readonly f2: V3,\n    readonly f3: V3,\n    uMin: number = 0,\n    uMax: number = PI,\n    vMin: number = -PI / 2,\n    vMax: number = PI / 2,\n  ) {\n    super(uMin, uMax, vMin, vMax)\n    assert(0 <= uMin && uMin <= PI, uMin)\n    assert(0 <= uMax && uMax <= PI, uMax)\n    assert(-PI / 2 <= vMin && vMin <= PI / 2)\n    assert(-PI / 2 <= vMax && vMax <= PI / 2)\n    assertVectors(center, f1, f2, f3)\n    this.matrix = M4.forSys(f1, f2, f3, center)\n    this.matrixInverse = this.matrix.inversed()\n    this.normalDir = sign(this.f1.cross(this.f2).dot(this.f3))\n    this.pLCNormalWCMatrix = this.matrix\n      .as3x3()\n      .inversed()\n      .transposed()\n      .scale(this.normalDir)\n    this.pWCNormalWCMatrix = this.pLCNormalWCMatrix.times(this.matrixInverse)\n  }\n\n  static unitArea(contour: Edge[]) {\n    const totalArea = sum(\n      contour.map((edge) => {\n        if (edge.curve instanceof PICurve) {\n          const points = edge.curve.calcSegmentPoints(\n            edge.aT,\n            edge.bT,\n            edge.a,\n            edge.b,\n            edge.aT > edge.bT,\n            true,\n          )\n          let sum = 0\n          for (let i = 0; i < points.length - 1; i++) {\n            const p = points[i],\n              ppp = points[i + 1]\n            sum += ((abs(p.angleXY()) + abs(ppp.angleXY())) / 2) * (ppp.z - p.z)\n          }\n          return sum\n        } else if (edge.curve instanceof EllipseCurve) {\n          const f = (t: number) => {\n            const at = edge.curve.at(t),\n              tangent = edge.curve.tangentAt(t)\n            const angleXY = abs(at.angleXY())\n            //const arcLength = angleXY * Math.sqrt(1 - at.z ** 2) ( == at.lengthXY())\n            //const scaling = tangent.z / at.lengthXY()\n            return angleXY * tangent.z\n          }\n          const val = glqInSteps(f, edge.aT, edge.bT, 1)\n          return val\n        } else {\n          throw new Error()\n        }\n      }),\n    )\n    return totalArea\n  }\n\n  /**\n   * unit sphere: x² + y² + z² = 1\n   * line: p = anchor + t * dir |^2\n   * p² = (anchor + t * dir)^2\n   * 1 == (anchor + t * dir)^2\n   * 1 == anchor DOT anchor + 2 * anchor * t * dir + t² * dir DOT dir\n   */\n  static unitISTsWithLine(anchor: V3, dir: V3): number[] {\n    // for 0 = a t² + b t + c\n    const a = dir.dot(dir)\n    const b = 2 * anchor.dot(dir)\n    const c = anchor.dot(anchor) - 1\n    return pqFormula(b / a, c / a).filter((t) => le(0, anchor.y + t * dir.y))\n  }\n\n  /**\n   * unit sphere: x² + y² + z² = 1\n   * plane: normal1 DOT p = w\n   */\n  static unitISCurvesWithPlane(plane: P3): EllipseCurve[] {\n    const distPlaneCenter = Math.abs(plane.w)\n    if (lt(distPlaneCenter, 1)) {\n      // result is a circle\n      // radius of circle: imagine right angled triangle (origin -> center of intersection circle -> point on\n      // intersection circle) pythagoras: 1² == distPlaneCenter² + isCircleRadius² => isCircleRadius == sqrt(1 -\n      // distPlaneCenter²)\n      const isCircleRadius = Math.sqrt(1 - distPlaneCenter ** 2)\n      const anchorY = plane.normal1.y * plane.w\n      const d = abs(distPlaneCenter * isCircleRadius)\n      if (le(anchorY, -d) && !eq0(distPlaneCenter)) {\n        return []\n      } else if (le(anchorY, 0) && !plane.normal1.isParallelTo(V3.Y)) {\n        const f1 = plane.normal1.isParallelTo(V3.Y)\n          ? V3.Z\n          : plane.normal1.cross(V3.Y).toLength(isCircleRadius)\n        const f2 = f1.cross(plane.normal1)\n        const minEta = -anchorY / f2.y,\n          minT = max(0, Math.asin(minEta))\n        return [new EllipseCurve(plane.anchor, f1, f2, minT, PI - minT)]\n      } else {\n        const f2 = (plane.normal1.isParallelTo(V3.Y)\n          ? V3.X\n          : plane.normal1.cross(V3.Y)\n        ).toLength(isCircleRadius)\n        const f1 = f2.cross(plane.normal1)\n        const minXi = eq0(f1.y) ? -1 : -anchorY / f1.y,\n          maxT = Math.acos(max(-1, minXi - NLA_PRECISION))\n        return [\n          new EllipseCurve(plane.anchor, f1.negated(), f2, PI - maxT, PI),\n          new EllipseCurve(plane.anchor, f1, f2.negated(), 0, maxT),\n        ]\n      }\n    } else {\n      return []\n    }\n  }\n\n  static unitISCurvesWithEllipsoidSurface(surface: EllipsoidSurface): Curve[] {\n    if (surface.isSphere()) {\n      const surfaceRadius = surface.f1.length()\n      const surfaceCenterDist = surface.center.length()\n      if (\n        le(1, surfaceCenterDist - surfaceRadius) ||\n        le(surfaceCenterDist + surfaceRadius, 1) ||\n        le(surfaceCenterDist - surfaceRadius, -1)\n      ) {\n        return []\n      } else {\n        // origin, surface.center and points on the intersection curves form a triangle.\n        // the height on the segment origin - surface.center is the radius of the is curves\n        // the distance from the origin to the lot point is the distance to the intersection plane\n        function heron(a: number, b: number, c: number) {\n          const p = (a + b + c) / 2\n          return sqrt(p * (p - a) * (p - b) * (p - c))\n        }\n\n        const triangleArea = heron(1, surfaceRadius, surfaceCenterDist)\n        const radius = (triangleArea * 2) / surfaceCenterDist\n        const isCurvesCenterDist =\n          sign(1 + surfaceCenterDist ** 2 - surfaceRadius ** 2) *\n          sqrt(1 - radius ** 2)\n        const plane = new P3(surface.center.unit(), isCurvesCenterDist)\n        return EllipsoidSurface.unitISCurvesWithPlane(plane.flipped())\n      }\n    }\n    throw new Error()\n  }\n\n  static unitISCurvesWithCylinderSurface(\n    surface: CylinderSurface,\n  ): EllipseCurve[] {\n    if (new L3(surface.baseCurve.center, surface.dir).containsPoint(V3.O)) {\n      const projEllipse = surface.baseCurve.transform(\n        M4.project(new P3(surface.dir, 0)),\n      )\n      const f1Length = projEllipse.f1.length(),\n        f2Length = projEllipse.f2.length()\n      if (lt(1, min(f1Length, f2Length))) return []\n      if (projEllipse.isCircular()) {\n        const distISCurveCenter = Math.sqrt(1 - min(1, f1Length) ** 2)\n        const isCurveCenter = (surface.dir.y < 0\n          ? surface.dir.negated()\n          : surface.dir\n        ).times(distISCurveCenter)\n        // isCurve.at(t).y = isCurveCenter.y + projEllipse.f1.y * cos(t) + projEllipse.f2.y * sin(t) = 0\n        return [new EllipseCurve(isCurveCenter, projEllipse.f1, projEllipse.f2)]\n      }\n    }\n    throw new Error()\n  }\n\n  static sphere(radius: number, center: V3 = V3.O): EllipsoidSurface {\n    assertNumbers(radius)\n    return new EllipsoidSurface(\n      center,\n      new V3(radius, 0, 0),\n      new V3(0, radius, 0),\n      new V3(0, 0, radius),\n    )\n  }\n\n  /**\n   * x²/a² + y²/b² + z²/c² = 1\n   */\n  static forABC(\n    a: number,\n    b: number,\n    c: number,\n    center: V3 = V3.O,\n  ): EllipsoidSurface {\n    return new EllipsoidSurface(\n      center,\n      new V3(a, 0, 0),\n      new V3(0, b, 0),\n      new V3(0, 0, c),\n    )\n  }\n\n  static calculateAreaSpheroid(a: V3, b: V3, c: V3, edges: Edge[]): number {\n    assertf(() => a.isPerpendicularTo(b))\n    assertf(() => b.isPerpendicularTo(c))\n    assertf(() => c.isPerpendicularTo(a))\n\n    // handling discontinuities:\n    // option 1: check for intersections with baseline, if there are any integrate parts separetely\n    // \"rotate\" the edge so that there are no overlaps\n    const matrix = M4.forSys(a, b, c),\n      matrixInverse = matrix.inversed()\n    const circleRadius = a.length()\n    const c1 = c.unit()\n    const totalArea = sum(\n      edges.map((edge) => {\n        if (edge.curve instanceof EllipseCurve) {\n          const f = (t: number) => {\n            const at = edge.curve.at(t),\n              tangent = edge.tangentAt(t)\n            const localAt = matrixInverse.transformPoint(at)\n            const angleXY = localAt.angleXY()\n            const arcLength =\n              angleXY * circleRadius * Math.sqrt(1 + localAt.z ** 2)\n            const scaling = Math.sqrt(1 + c1.dot(tangent) ** 2)\n            return arcLength * scaling\n          }\n          const val = glqInSteps(f, edge.aT, edge.bT, 1)\n          return val\n        } else {\n          throw new Error()\n        }\n      }),\n    )\n\n    return totalArea\n  }\n\n  getConstructorParameters(): any[] {\n    return [\n      this.center,\n      this.f1,\n      this.f2,\n      this.f3,\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    ]\n  }\n\n  equals(obj: any): boolean {\n    return (\n      this == obj ||\n      (Object.getPrototypeOf(obj) == this.constructor.prototype &&\n        this.matrix.equals(obj.matrix))\n    )\n  }\n\n  edgeLoopCCW(loop: Edge[]): boolean {\n    return (\n      EllipsoidSurface.unitArea(\n        loop.map((edge) => edge.transform(this.matrixInverse)),\n      ) > 0\n    )\n    //let totalAngle = 0\n    //for (let i = 0; i < contour.length; i++) {\n    //    const ipp = (i + 1) % contour.length\n    //    const edge = contour[i], nextEdge = contour[ipp]\n    //    totalAngle += edge.bDir.angleRelativeNormal(nextEdge.aDir, this.normalP(edge.b))\n    //}\n    //return le(0, totalAngle)\n  }\n\n  like(object: any) {\n    if (!this.isCoplanarTo(object)) return false\n    // normals need to point in the same direction (outwards or inwards) for both\n    return this.matrix.determinant3() * object.matrix.determinant3() > 0\n  }\n\n  rootPoints() {}\n\n  toMesh() {\n    return ParametricSurface.prototype.toMesh.call(this)\n  }\n\n  clipCurves(curves: Curve[]): Curve[] {\n    return curves.flatMap((curve) => curve.clipPlane(this.getSeamPlane()))\n  }\n\n  dpdu(): (u: number, v: number) => V3 {\n    // dp(u, v) = new V3(cos(t) * cos(s), cos(t) * sin(s), sin(t)\n    return (u: number, v: number) =>\n      this.matrix.transformVector(new V3(cos(v) * -sin(u), cos(v) * cos(u), 0))\n  }\n\n  dpdv(): (u: number, v: number) => V3 {\n    return (u: number, v: number) =>\n      this.matrix.transformVector(\n        new V3(-sin(v) * cos(u), -sin(v) * sin(u), cos(v)),\n      )\n  }\n\n  isCurvesWithPCS(surface: ProjectedCurveSurface): Curve[] {\n    let curves2 = ParametricSurface.isCurvesParametricImplicitSurface(\n      surface,\n      this,\n      0.1,\n      0.1 / surface.dir.length(),\n      0.05,\n    )\n    curves2 = this.clipCurves(curves2)\n    return curves2\n  }\n\n  isCurvesWithPCSSmart(surface: ProjectedCurveSurface): Curve[] {\n    const surfaceLC = surface.transform(this.matrixInverse)\n    //const lcMinZ0RelO =\n    const baseCurveLC = surfaceLC.baseCurve.project(new P3(surfaceLC.dir, 0))\n    const ists = baseCurveLC.isTsWithSurface(EllipsoidSurface.UNIT)\n    const insideIntervals = getIntervals(\n      ists,\n      baseCurveLC.tMin,\n      baseCurveLC.tMax,\n    ).filter(([a, b]) => baseCurveLC.at((a + b) / 2).length() < 1)\n    const projectedCurves = [0, 1].map((id) => {\n      return (t: number) => {\n        const atSqr = snap(baseCurveLC.at(t).squared(), 1)\n        const lineISTs = /* +- */ sqrt(1 - atSqr)\n        //assert(!isNaN(lineISTs))\n        return eq0(lineISTs)\n          ? baseCurveLC.at(t)\n          : baseCurveLC\n              .at(t)\n              .plus(surfaceLC.dir.times(sign(id - 0.5) * lineISTs))\n      }\n    })\n    const dProjectedCurves = [0, 1].map((id) => {\n      return (t: number) => {\n        // d/dt sqrt(1 - baseCurveLC.at(t).squared())\n        // = -1/2 * 1/sqrt(1 - baseCurveLC.at(t).squared()) * -2*baseCurveLC.at(t) * baseCurveLC.tangentAt(t)\n        const atSqr = snap(baseCurveLC.at(t).squared(), 1)\n        const lineISTs = /* +- */ baseCurveLC\n          .at(t)\n          .times(-1 / sqrt(1 - atSqr))\n          .dot(baseCurveLC.tangentAt(t))\n        //assert(!isNaN(lineISTs))\n        return baseCurveLC\n          .tangentAt(t)\n          .plus(surfaceLC.dir.times(sign(id - 0.5) * lineISTs))\n      }\n    })\n    //const f2 = t => sqrt(1 - baseCurveLC.at(t).squared())\n    //const df2 = t => baseCurveLC.at(t).times(-1 / sqrt(1 -\n    // baseCurveLC.at(t).squared())).dot(baseCurveLC.tangentAt(t)) checkDerivate(f2, df2, 0.31, 0.60)\n    const curves = []\n    for (const [aT, bT] of insideIntervals) {\n      //const aLine = new L3(baseCurveLC.at(aT), surfaceLC.dir1)\n      //const a = EllipsoidSurface.UNIT.isTsForLine(aLine).map(t => aLine.at(t))\n      //const bLine = new L3(baseCurveLC.at(bT), surfaceLC.dir1)\n      //const b = EllipsoidSurface.UNIT.isTsForLine(bLine).map(t => bLine.at(t))\n      for (const i of [0, 1]) {\n        const f = (t: number) => projectedCurves[i](t).y\n        const df = (t: number) => dProjectedCurves[i](t).y\n        checkDerivate(f, df, aT + 0.1, bT - 0.1)\n        const tsAtY0 = getRoots(\n          f,\n          aT + NLA_PRECISION,\n          bT - NLA_PRECISION,\n          1 / (1 << 11),\n          df,\n        )\n        const ii2 = getIntervals(tsAtY0, aT, bT).filter(\n          ([a, b]) => f((a + b) / 2) > 0,\n        )\n        for (const [aT2, bT2] of ii2) {\n          let aP = projectedCurves[i](aT2),\n            bP = projectedCurves[i](bT2)\n          0 === i && ([aP, bP] = [bP, aP])\n          assert(EllipsoidSurface.UNIT.containsPoint(aP))\n          assert(EllipsoidSurface.UNIT.containsPoint(bP))\n          curves.push(\n            PICurve.forStartEnd(\n              surface,\n              this,\n              this.matrix.transformPoint(bP),\n              this.matrix.transformPoint(aP),\n              undefined,\n            ),\n          )\n        }\n      }\n    }\n\n    return surface.clipCurves(curves)\n  }\n\n  isCurvesWithSurface(surface: Surface): Curve[] {\n    if (surface instanceof PlaneSurface) {\n      return this.isCurvesWithPlane(surface.plane)\n    } else if (surface instanceof CylinderSurface) {\n      return this.isCurvesWithCylinderSurface(surface)\n    } else if (surface instanceof EllipsoidSurface) {\n      const surfaceLC = surface.transform(this.matrixInverse)\n      const curves = EllipsoidSurface.unitISCurvesWithEllipsoidSurface(\n        surfaceLC,\n      ).map((c) => c.transform(this.matrix))\n      return surface.clipCurves(curves)\n    } else if (surface instanceof ProjectedCurveSurface) {\n      return this.isCurvesWithPCS(surface)\n    } else if (surface instanceof ParametricSurface) {\n      let curves2 = ParametricSurface.isCurvesParametricImplicitSurface(\n        surface,\n        this,\n        0.1,\n        0.1,\n        0.05,\n      )\n      curves2 = this.clipCurves(curves2)\n      curves2 = surface.clipCurves(curves2)\n      return curves2\n    } else {\n      throw new Error()\n    }\n  }\n\n  isCurvesWithPlane(plane: P3) {\n    const planeLC = plane.transform(this.matrixInverse)\n    return EllipsoidSurface.unitISCurvesWithPlane(planeLC).map((c) =>\n      c.transform(this.matrix),\n    )\n  }\n\n  isCurvesWithCylinderSurface(surface: CylinderSurface): Curve[] {\n    if (L3.containsPoint(surface.baseCurve.center, surface.dir, this.center)) {\n      assert(this.isSphere())\n      const ellipseProjected = surface.baseCurve.transform(\n        M4.project(surface.baseCurve.getPlane(), surface.dir),\n      )\n      if (ellipseProjected.isCircular()) {\n        const thisRadius = this.f1.length()\n        const surfaceRadius = ellipseProjected.f1.length()\n        // sphereRadius² = distanceISFromCenter² + isRadius²\n        if (eq(thisRadius, surfaceRadius)) {\n          // return\n        } else if (surfaceRadius < thisRadius) {\n        }\n        assert(false)\n      }\n    }\n    return this.isCurvesWithPCS(surface)\n  }\n\n  isTsForLine(line: L3) {\n    assertInst(L3, line)\n    // transforming line manually has advantage that dir1 will not be renormalized,\n    // meaning that calculated values t for localLine are directly transferable to line\n    const anchorLC = this.matrixInverse.transformPoint(line.anchor)\n    const dirLC = this.matrixInverse.transformVector(line.dir1)\n    return EllipsoidSurface.unitISTsWithLine(anchorLC, dirLC)\n  }\n\n  isCoplanarTo(surface: Surface): boolean {\n    if (this === surface) return true\n    if (!hasConstructor(surface, EllipsoidSurface)) return false\n    if (!this.center.like(surface.center)) return false\n    if (this.isSphere())\n      return surface.isSphere() && eq(this.f1.length(), this.f2.length())\n\n    const otherMatrixLC = this.matrixInverse.times(surface.matrix)\n    // Ellipsoid with matrix otherMatrixLC is unit sphere iff otherMatrixLC is orthogonal\n    return otherMatrixLC.like3x3() && otherMatrixLC.isOrthogonal()\n  }\n\n  containsEllipse(ellipse: EllipseCurve): boolean {\n    const ellipseLC = ellipse.transform(this.matrixInverse)\n    const distEllipseLCCenter = ellipseLC.center.length()\n    const correctRadius = Math.sqrt(1 - distEllipseLCCenter ** 2)\n    return (\n      lt(distEllipseLCCenter, 1) &&\n      ellipseLC.isCircular() &&\n      ellipseLC.f1.hasLength(correctRadius)\n    )\n    //&& le(0, ellipseLC.getAABB().min.y)\n  }\n\n  containsCurve(curve: Curve): boolean {\n    if (curve instanceof EllipseCurve) {\n      return this.containsEllipse(curve)\n    } else {\n      return super.containsCurve(curve)\n    }\n  }\n\n  transform(m4: M4): this {\n    assert(m4.isNoProj(), () => m4.sce)\n    return new EllipsoidSurface(\n      m4.transformPoint(this.center),\n      m4.transformVector(this.f1),\n      m4.transformVector(this.f2),\n      m4.transformVector(this.f3).times(m4.isMirroring() ? -1 : 1),\n    ) as this\n  }\n\n  transform4(m4: M4): this {\n    console.log(\"transform4\")\n    const resultMatrix = m4.times(this.matrix)\n    console.log(resultMatrix.toString())\n    const scaleDir = V(\n      resultMatrix.m[12],\n      resultMatrix.m[13],\n      resultMatrix.m[14],\n    )\n    // need to find parameters where scaleDir is parallel to the normal\n    const pLC = this.pLCNormalWCMatrix.inversed().transformPoint(scaleDir)\n    const s = pLC.angleXY()\n    const t = Math.asin(clamp(pLC.z, -1, 1))\n    const fa = resultMatrix.transformPoint(scaleDir.unit())\n    const fb = resultMatrix.transformPoint(scaleDir.unit().negated())\n    const newCenter = V3.lerp(fa, fb, 0.5)\n    console.log(scaleDir.sce, s, t, fa, fb, \"newCenter\", newCenter.sce)\n    return new EllipsoidSurface(\n      newCenter,\n      m4.transformVector2(this.f1, this.center),\n      m4.transformVector2(this.f2, this.center),\n      m4\n        .transformVector2(this.f3, this.center)\n        .times(m4.isMirroring() ? -1 : 1),\n    ) as this\n  }\n\n  isInsideOut(): boolean {\n    return this.f1.cross(this.f2).dot(this.f3) < 0\n  }\n\n  flipped(): this {\n    return new EllipsoidSurface(\n      this.center,\n      this.f1,\n      this.f2,\n      this.f3.negated(),\n      this.uMin,\n      this.uMax,\n      -this.vMax,\n      -this.vMin,\n    ) as this\n  }\n\n  normalUVFunc(): (u: number, v: number) => V3 {\n    // ugh\n    // paramtric ellipsoid point q(a, b)\n    // normal1 == (dq(a, b) / da) X (dq(a, b) / db) (cross product of partial derivatives)\n    // normal1 == cos b * (f2 X f3 * cos b * cos a + f3 X f1 * cos b * sin a + f1 X f2 * sin b)\n    return (a, b) => {\n      const { f1, f2, f3 } = this\n      const normal = f2\n        .cross(f3)\n        .times(Math.cos(b) * Math.cos(a))\n        .plus(f3.cross(f1).times(Math.cos(b) * Math.sin(a)))\n        .plus(f1.cross(f2).times(Math.sin(b)))\n        //.times(Math.cos(b))\n        .unit()\n      return normal\n    }\n  }\n\n  normalP(p: V3): V3 {\n    return this.pLCNormalWCMatrix\n      .transformVector(this.matrixInverse.transformPoint(p))\n      .unit()\n  }\n\n  normalUV(u: number, v: number): V3 {\n    return this.pLCNormalWCMatrix.transformVector(V3.sphere(u, v)).unit()\n  }\n\n  uvPFunc() {\n    return (pWC: V3) => {\n      const pLC = this.matrixInverse.transformPoint(pWC)\n      const alpha = abs(pLC.angleXY())\n      const beta = Math.asin(clamp(pLC.z, -1, 1))\n      assert(isFinite(alpha))\n      assert(isFinite(beta))\n      return new V3(alpha, beta, 0)\n    }\n  }\n\n  pUVFunc() {\n    // this(a, b) = f1 cos a cos b + f2 sin a cos b + f2 sin b\n    return (alpha: number, beta: number) => {\n      return this.matrix.transformPoint(V3.sphere(alpha, beta))\n    }\n  }\n\n  isSphere(): boolean {\n    return (\n      eq(this.f1.length(), this.f2.length()) &&\n      eq(this.f2.length(), this.f3.length()) &&\n      eq(this.f3.length(), this.f1.length()) &&\n      this.f1.isPerpendicularTo(this.f2) &&\n      this.f2.isPerpendicularTo(this.f3) &&\n      this.f3.isPerpendicularTo(this.f1)\n    )\n  }\n\n  isVerticalSpheroid(): boolean {\n    return (\n      eq(this.f1.length(), this.f2.length()) &&\n      this.f1.isPerpendicularTo(this.f2) &&\n      this.f2.isPerpendicularTo(this.f3) &&\n      this.f3.isPerpendicularTo(this.f1)\n    )\n  }\n\n  mainAxes(): EllipsoidSurface {\n    // q(a, b) = f1 cos a cos b + f2 sin a cos b + f3 sin b\n    // q(s, t, u) = s * f1 + t * f2 + u * f3 with s² + t² + u² = 1\n    // (del q(a, b) / del a) = f1 (-sin a) cos b  + f2 cos a cos b\n    // (del q(a, b) / del b) = f1 cos a (-sin b) + f2 sin a (-sin b) + f2 cos b\n    // del q(s, t, u) / del a = -t f1 + s f2\n    // (del q(a, b) / del a) DOT q(a, b) == 0\n    // (f1 (-sin a) cos b  + f2 cos a cos b) DOT (f1 cos a cos b + f2 sin a cos b + f2 sin b) == 0\n    // (del q(a, b) / del b) DOT q(a, b) == 0\n    // (f1 cos a (-sin b) + f2 sin a (-sin b) + f2 cos b) DOT (f1 cos a cos b + f2 sin a cos b + f2 sin b) == 0\n\n    // Solve[\n    // (f1 (-sin a) cos b  + f2 cos a cos b) * (f1 cos a cos b + f2 sin a cos b + f2 sin b) = 0,\n    // (f1 cos a (-sin b) + f2 sin a (-sin b) + f2 cos b) * (f1 cos a cos b + f2 sin a cos b + f2 sin b) = 0}, a, b]\n    const { f1, f2, f3 } = this\n\n    if (eq0(f1.dot(f2)) && eq0(f2.dot(f3)) && eq0(f3.dot(f1))) {\n      return this\n    }\n\n    //const f = ([a, b], x?) => {\n    //    const sinA = Math.sin(a), cosA = Math.cos(a), sinB = Math.sin(b), cosB = Math.cos(b)\n    //    const centerToP = V3.add(f1.times(cosA * cosB), f2.times(sinA * cosB), f3.times(sinB))\n    //    const centerToPdelA = f1.times(-sinA * cosB).plus(f2.times(cosA * cosB))\n    //    const centerToPdelB = V3.add(f1.times(cosA * -sinB), f2.times(sinA * -sinB), f3.times(cosB))\n    //    x && console.log(centerToP.sce, centerToPdelA.sce, centerToPdelB.sce)\n    //    return [centerToP.dot(centerToPdelA), centerToP.dot(centerToPdelB)]\n    //}\n    //const mainF1Params = newtonIterate(f, [0, 0], 8), mainF1 = this.pUVFunc()(mainF1Params[0], mainF1Params[1])\n    //console.log(f(mainF1Params, 1).sce)\n    //const mainF2Params = newtonIterate(f, this.uvPFunc()(f2.rejectedFrom(mainF1)).toArray(2), 8),\n    //   mainF2 = this.pUVFunc()(mainF2Params[0], mainF2Params[1])\n    //console.log(this.normalUVFunc()(mainF2Params[0], mainF2Params[1]).sce)\n    //assert(mainF1.isPerpendicularTo(mainF2), mainF1, mainF2, mainF1.dot(mainF2), mainF1Params)\n    //const mainF3Params = this.uvPFunc()(mainF1.cross(mainF2)), mainF3 = this.pUVFunc()(mainF3Params[0],\n    // mainF3Params[1]) return new EllipsoidSurface(this.center, mainF1, mainF2, mainF3)\n\n    const { U, SIGMA } = this.matrix.svd3()\n    assert(SIGMA.isDiagonal())\n    assert(U.isOrthogonal())\n    const U_SIGMA = U.times(SIGMA)\n    // column vectors of U_SIGMA\n    const [mainF1, mainF2, mainF3] = arrayFromFunction(\n      3,\n      (i) => new V3(U_SIGMA.m[i], U_SIGMA.m[i + 4], U_SIGMA.m[i + 8]),\n    )\n    return new EllipsoidSurface(this.center, mainF1, mainF2, mainF3)\n  }\n\n  containsPoint(p: V3) {\n    return eq0(this.implicitFunction()(p))\n  }\n\n  boundsFunction() {\n    return (a: number, b: number) => between(a, 0, PI) && between(b, -PI, PI)\n  }\n\n  volume(): number {\n    return (4 / 3) * Math.PI * this.f1.dot(this.f2.cross(this.f3))\n  }\n\n  loopContainsPoint(loop: Edge[], pWC: V3): PointVsFace {\n    if (!this.containsPoint(pWC)) return PointVsFace.OUTSIDE\n    assertVectors(pWC)\n    assert(Edge.isLoop(loop))\n    const pLCXY = this.matrixInverse.transformPoint(pWC).xy()\n    const testLine = new EllipseCurve(\n      this.center,\n      this.f3,\n      pLCXY.likeO() ? this.f2 : this.matrix.transformVector(pLCXY.unit()),\n    )\n\n    if (P3.normalOnAnchor(this.f2.unit(), this.center).containsPoint(pWC)) {\n      return loop.some(\n        (edge) =>\n          edge.curve.containsPoint(pWC) &&\n          fuzzyBetween(edge.curve.pointT(pWC), edge.minT, edge.maxT),\n      )\n        ? PointVsFace.ON_EDGE\n        : PointVsFace.OUTSIDE\n    }\n\n    return Surface.loopContainsPointEllipse(loop, pWC, testLine)\n  }\n\n  surfaceAreaApprox(): number {\n    // See https://en.wikipedia.org/wiki/Ellipsoid#Surface_area\n    const mainAxes = this.mainAxes(),\n      a = mainAxes.f1.length(),\n      b = mainAxes.f2.length(),\n      c = mainAxes.f3.length()\n    const p = 1.6075\n    return (\n      4 *\n      PI *\n      Math.pow(\n        (Math.pow(a * b, p) + Math.pow(b * c, p) + Math.pow(c * a, p)) / 3,\n        1 / p,\n      )\n    )\n  }\n\n  surfaceArea(): number {\n    // See https://en.wikipedia.org/wiki/Ellipsoid#Surface_area\n    const mainAxes = this.mainAxes(),\n      f1l = mainAxes.f1.length(),\n      f2l = mainAxes.f2.length(),\n      f3l = mainAxes.f3.length(),\n      [c, b, a] = [f1l, f2l, f3l].sort(MINUS)\n\n    // https://en.wikipedia.org/w/index.php?title=Spheroid&oldid=761246800#Area\n    function spheroidArea(a: number, c: number) {\n      if (c < a) {\n        const eccentricity2 = 1 - c ** 2 / a ** 2\n        const eccentricity = Math.sqrt(eccentricity2)\n        return (\n          2 *\n          PI *\n          a ** 2 *\n          (1 +\n            ((1 - eccentricity2) / Math.sqrt(eccentricity)) *\n              Math.atanh(eccentricity))\n        )\n      } else {\n        const eccentricity = Math.sqrt(1 - a ** 2 / c ** 2)\n        return (\n          2 *\n          PI *\n          a ** 2 *\n          (1 + (c / a / eccentricity) * Math.asin(eccentricity))\n        )\n      }\n    }\n\n    if (eq(a, b)) {\n      return spheroidArea(a, c)\n    } else if (eq(b, c)) {\n      return spheroidArea(b, a)\n    } else if (eq(c, a)) {\n      return spheroidArea(c, b)\n    }\n\n    const phi = Math.acos(c / a)\n    const kk = (a ** 2 * (b ** 2 - c ** 2)) / (b ** 2 * (a ** 2 - c ** 2))\n    const incompleteEllipticInt1 = gaussLegendreQuadrature24(\n      (phi) => Math.pow(1 - kk * Math.sin(phi) ** 2, -0.5),\n      0,\n      phi,\n    )\n    const incompleteEllipticInt2 = gaussLegendreQuadrature24(\n      (phi) => Math.pow(1 - kk * Math.sin(phi) ** 2, 0.5),\n      0,\n      phi,\n    )\n    return (\n      (2 * PI * c ** 2 + (2 * PI * a * b) / Math.sin(phi)) *\n      (incompleteEllipticInt2 * Math.sin(phi) ** 2 +\n        incompleteEllipticInt1 * Math.cos(phi) ** 2)\n    )\n  }\n\n  getSeamPlane(): P3 {\n    const plane = P3.forAnchorAndPlaneVectors(this.center, this.f1, this.f3)\n    return plane.normal1.dot(this.f2) < 0 ? plane : plane.flipped()\n  }\n\n  getExtremePoints(): V3[] {\n    return getExtremePointsHelper.call(\n      this,\n      new EllipseCurve(V3.O, V3.X, V3.Z, -PI / 2, PI / 2),\n    )\n  }\n\n  pointFoot(pWC: V3, startS?: number, startT?: number): V3 {\n    console.log(pWC.sce)\n    if (undefined === startS || undefined === startT) {\n      let pLC1 = this.matrixInverse.transformPoint(pWC).unit()\n      if (pLC1.y < 0) pLC1 = pLC1.negated()\n      ;({ x: startS, y: startT } = EllipsoidSurface.UNIT.uvP(pLC1))\n    }\n    const dpdu = this.dpdu()\n    const dpdv = this.dpdv()\n    const [u, v] = newtonIterate(\n      ([u, v]) => {\n        const p = this.pUV(u, v)\n        console.log(\n          [p, p.plus(dpdu(u, v)), p, p.plus(dpdv(u, v))].map(toSource).join() +\n            \",\",\n        )\n        const pUVToPWC = this.pUV(u, v).to(pWC)\n        return [pUVToPWC.dot(dpdu(u, v)), pUVToPWC.dot(dpdv(u, v))]\n      },\n      [startS, startT],\n      8,\n      undefined,\n      0.1,\n    )\n    return new V3(u, v, 0)\n  }\n\n  implicitFunction() {\n    return (pWC: V3) => {\n      const pLC = this.matrixInverse.transformPoint(pWC)\n      return (pLC.length() - 1) * this.normalDir\n    }\n  }\n\n  // = this.inverseMatrix.transformPoint(this.inverseMatrix.transformPoint(pWC).unit())\n  didp(pWC: V3) {\n    // i(pWC) = this.inverseMatrix.transformPoint(pWC).length() - 1\n    // chain diff rule\n    const pLC = this.matrixInverse.transformPoint(pWC)\n    return this.pLCNormalWCMatrix.transformVector(pLC.unit()) //.times(this.normalDir)\n  }\n\n  /*+\n   * An ellipsoid remains an ellipsoid after a perspective transform (as long as it does not intersect the vanishing\n   * plane. This transforms a matrix with a perspective component into one which would return an identical ellipsoid,\n   * but with no perspective component.\n   */\n  static unitTransform4(m: M4): M4 {\n    m.m[15] !== 1 && (m = m.divScalar(m.m[15]))\n    // X * P = m => X = m * P^-1\n    // prettier-ignore\n    const Pinv = new M4(\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      -m.m[12], -m.m[13], -m.m[14], 1,\n    )\n    const pn = new V3(m.m[12], m.m[13], m.m[14]),\n      pw = m.m[15]\n    const pwSqrMinusPnSqr = pw ** 2 - pn.squared()\n    if (lt(pwSqrMinusPnSqr, 0)) {\n      throw new Error(\"vanishing plane intersects unit sphere\")\n    }\n    const c = pn.div(-pwSqrMinusPnSqr)\n    const scale = pn.times(\n      (pw * pn.length()) / (pn.squared() * -pwSqrMinusPnSqr),\n    )\n    const scale1 = pw / -pwSqrMinusPnSqr\n    const scale2 = 1 / sqrt(pwSqrMinusPnSqr)\n    const rotNX = M4.forSys(pn.unit(), pn.getPerpendicular().unit())\n    return M4.product(\n      m,\n      Pinv,\n      M4.translate(c),\n      rotNX,\n      M4.scale(scale1, scale2, scale2),\n      rotNX.transposed(),\n    )\n  }\n}\n\nEllipsoidSurface.prototype.uStep = PI / 32\nEllipsoidSurface.prototype.vStep = PI / 32\n","import {\n  assert,\n  assertInst,\n  callsce,\n  hasConstructor,\n  isCCW,\n  M4,\n  V3,\n} from \"ts3dutils\"\n\nimport {\n  Curve,\n  Edge,\n  ImplicitCurve,\n  ImplicitSurface,\n  L3,\n  P3,\n  ParametricSurface,\n  PointVsFace,\n  Surface,\n} from \"..\"\n\nexport class PlaneSurface extends ParametricSurface implements ImplicitSurface {\n  readonly matrix: M4\n\n  constructor(\n    readonly plane: P3,\n    readonly right: V3 = plane.normal1.getPerpendicular().unit(),\n    readonly up: V3 = plane.normal1.cross(right).unit(),\n    uMin: number = -100,\n    uMax: number = 100,\n    vMin: number = -100,\n    vMax: number = 100,\n  ) {\n    super(uMin, uMax, vMin, vMax)\n    assertInst(P3, plane)\n    assert(this.right.cross(this.up).like(this.plane.normal1))\n    this.matrix = M4.forSys(right, up, plane.normal1, plane.anchor)\n  }\n\n  toSource(rounder: (x: number) => number = (x) => x): string {\n    return callsce.call(\n      undefined,\n      \"new PlaneSurface\",\n      ...this.getConstructorParameters(),\n    )\n  }\n\n  static throughPoints(a: V3, b: V3, c: V3): PlaneSurface {\n    return new PlaneSurface(P3.throughPoints(a, b, c))\n  }\n\n  static forAnchorAndPlaneVectors(\n    anchor: V3,\n    v0: V3,\n    v1: V3,\n    uMin?: number,\n    uMax?: number,\n    vMin?: number,\n    vMax?: number,\n  ): PlaneSurface {\n    return new PlaneSurface(\n      P3.forAnchorAndPlaneVectors(anchor, v0, v1),\n      v0,\n      v1,\n      uMin,\n      uMax,\n      vMin,\n      vMax,\n    )\n  }\n  isCoplanarTo(surface: Surface): boolean {\n    return (\n      hasConstructor(surface, PlaneSurface) &&\n      this.plane.isCoplanarToPlane(surface.plane)\n    )\n  }\n\n  isTsForLine(line: L3): number[] {\n    return line.isTsWithPlane(this.plane)\n  }\n\n  like(surface: Surface): boolean {\n    return (\n      hasConstructor(surface, PlaneSurface) && this.plane.like(surface.plane)\n    )\n  }\n\n  pUV(u: number, v: number): V3 {\n    return this.matrix.transformPoint(new V3(u, v, 0))\n  }\n\n  implicitFunction(): (pWC: V3) => number {\n    return (p) => this.plane.distanceToPointSigned(p)\n  }\n\n  isCurvesWithSurface(surface2: Surface): Curve[] {\n    if (surface2 instanceof PlaneSurface) {\n      return this.isCurvesWithPlane(surface2.plane)\n    }\n    return super.isCurvesWithSurface(surface2)\n  }\n\n  isCurvesWithPlane(plane: P3): L3[] {\n    const result = this.plane.intersectionWithPlane(plane)\n    return result ? [result] : []\n  }\n\n  edgeLoopCCW(contour: Edge[]): boolean {\n    assert(Edge.isLoop(contour), \"isLoop\")\n    return isCCW(\n      contour.flatMap((edge) => edge.points()),\n      this.plane.normal1,\n    )\n  }\n\n  loopContainsPoint(loop: Edge[], p: V3): PointVsFace {\n    const dir = this.right.plus(this.up.times(0.123)).unit()\n    const line = new L3(p, dir)\n    const lineOut = dir.cross(this.plane.normal1)\n    return Surface.loopContainsPointGeneral(loop, p, line, lineOut)\n  }\n\n  uvPFunc() {\n    const matrixInverse = this.matrix.inversed()\n    return function (pWC: V3) {\n      return matrixInverse.transformPoint(pWC)\n    }\n  }\n\n  pointFoot(pWC: V3): V3 {\n    return this.uvP(pWC)\n  }\n\n  normalP(pWC: V3): V3 {\n    return this.plane.normal1\n  }\n\n  containsPoint(p: V3) {\n    return this.plane.containsPoint(p)\n  }\n\n  containsCurve(curve: Curve): boolean {\n    return curve instanceof ImplicitCurve\n      ? super.containsCurve(curve)\n      : this.plane.containsCurve(curve)\n  }\n\n  transform(m4: M4) {\n    return new PlaneSurface(this.plane.transform(m4)) as this\n  }\n\n  transform4(m4: M4) {\n    return new PlaneSurface(this.plane.transform(m4)) as this\n  }\n\n  flipped() {\n    return new PlaneSurface(\n      this.plane.flipped(),\n      this.right,\n      this.up.negated(),\n    ) as this\n  }\n\n  getConstructorParameters(): any[] {\n    return [\n      this.plane,\n      this.right,\n      this.up,\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    ]\n  }\n\n  dpdu(): (u: number, v: number) => V3 {\n    return () => this.right\n  }\n\n  dpdv(): (u: number, v: number) => V3 {\n    return () => this.up\n  }\n\n  didp(pWC: V3): V3 {\n    return this.plane.normal1\n  }\n\n  normalUV() {\n    return this.plane.normal1\n  }\n}\n\nPlaneSurface.prototype.uStep = 1e6\nPlaneSurface.prototype.vStep = 1e6\n","import {\n  assert,\n  assertInst,\n  assertVectors,\n  hasConstructor,\n  M4,\n  newtonIterate,\n  pqFormula,\n  V3,\n} from \"ts3dutils\"\n\nimport {\n  Curve,\n  Edge,\n  EllipseCurve,\n  ImplicitCurve,\n  ImplicitSurface,\n  L3,\n  P3,\n  ParametricSurface,\n  PlaneSurface,\n  PointVsFace,\n  Surface,\n} from \"..\"\n\nexport class PointProjectedSurface extends ParametricSurface {\n  pointFoot(pWC: V3, startU?: number, startV?: number): V3 {\n    if (undefined === startU || undefined === startV) {\n      // similar to stP\n      if (undefined === startU) {\n        startU = pWC.like(this.apex)\n          ? 0\n          : this.curve.closestTToPoint(\n              this.planeProjectionMatrix.transformPoint(pWC),\n            ) * this.normalDir\n      }\n      if (undefined === startV) {\n        startV = V3.inverseLerp(this.apex, this.curve.at(startU), pWC)\n      }\n    }\n    const f = ([u, v]: number[]) => {\n      const pUVToPWC = this.pUV(u, v).to(pWC)\n      return [this.dpdu()(u, v).dot(pUVToPWC), this.dpdv()(u).dot(pUVToPWC)]\n    }\n    const { 0: x, 1: y } = newtonIterate(f, [startU, startV])\n    return new V3(x, y, 0)\n  }\n\n  readonly planeProjectionMatrix: M4\n\n  constructor(\n    readonly curve: Curve,\n    readonly apex: V3,\n    readonly curvePlane: P3,\n    readonly normalDir = 1,\n    uMin: number = curve.tMin,\n    uMax: number = curve.tMax,\n    vMin: number = 0,\n    vMax: number = 16,\n  ) {\n    super(uMin, uMax, vMin, vMax)\n    assertInst(Curve, curve)\n    assert(!(curve instanceof L3), \"use PlaneSurface instead\")\n    assert(!(curve instanceof EllipseCurve), \"use ConicSurface instead\")\n    assert(\n      !(curve instanceof ImplicitCurve),\n      \"this just seems like a terrible idea\",\n    )\n    assert(new PlaneSurface(curvePlane).containsCurve(curve))\n    assertVectors(apex)\n    assert(0 <= vMin)\n    this.planeProjectionMatrix = M4.projectPlanePoint(apex, curvePlane)\n    this.uStep = curve.tIncrement\n  }\n\n  getConstructorParameters(): any[] {\n    return [\n      this.curve,\n      this.apex,\n      this.curvePlane,\n      this.normalDir,\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    ]\n  }\n\n  static unitISLineTs(anchor: V3, dir: V3): number[] {\n    const { x: ax, y: ay, z: az } = anchor\n    const { x: dx, y: dy, z: dz } = dir\n\n    // this cone: x² + y² = z²\n    // line: p = anchor + t * dir1\n    // split line equation into 3 component equations, insert into cone equation\n    // transform to form (a t² + b t + c = 0) and solve with pqFormula\n    const a = dx * dx + dy * dy - dz * dz\n    const b = 2 * (ax * dx + ay * dy - az * dz)\n    const c = ax * ax + ay * ay - az * az\n    // cone only defined for 0 <= z, so filter invalid values\n    return pqFormula(b / a, c / a).filter((t) => 0 < az + t * dz)\n  }\n\n  equals(obj: any): boolean {\n    return (\n      this == obj ||\n      (hasConstructor(obj, PointProjectedSurface) &&\n        this.curve.equals(obj.curve) &&\n        this.apex.equals(this.apex))\n    )\n  }\n\n  like(object: any): boolean {\n    if (!this.isCoplanarTo(object)) return false\n    // normals need to point in the same direction (outwards or inwards) for both\n    return this.normalDir == object.normalDir\n  }\n\n  loopContainsPoint(contour: Edge[], p: V3): PointVsFace {\n    assertVectors(p)\n    const line = this.apex.like(p)\n      ? new L3(p, this.apex.to(this.curve.at(this.curve.tMin)).unit())\n      : L3.throughPoints(p, this.apex)\n    const lineOut = line.dir1.cross(this.curvePlane.normal1)\n\n    return Surface.loopContainsPointGeneral(contour, p, line, lineOut)\n  }\n\n  isTsForLine(line: L3): number[] {\n    // transforming line manually has advantage that dir1 will not be renormalized,\n    // meaning that calculated values t for lineLC are directly transferable to line\n    const anchorPlane = this.planeProjectionMatrix.transformPoint(line.anchor)\n    const anchor2Plane = this.planeProjectionMatrix.transformPoint(\n      line.anchor.plus(line.dir1),\n    )\n    if (anchorPlane.like(anchor2Plane)) {\n      // line projects onto a point in plane.\n      // there are either no or infinite intersection points\n      return []\n    }\n    return this.curve\n      .isInfosWithLine(\n        anchorPlane,\n        anchorPlane.to(anchor2Plane),\n        undefined,\n        undefined,\n        line.tMin,\n        line.tMax,\n      )\n      .map((info) => info.tOther)\n  }\n\n  /**\n   * Interestingly, two cones don't need to have parallel dirs to be coplanar.\n   */\n  isCoplanarTo(surface: Surface): boolean {\n    if (this === surface) return true\n    if (\n      !(surface instanceof PointProjectedSurface) ||\n      !this.apex.like(surface.apex)\n    )\n      return false\n    // at this point apexes are equal\n    return this.containsCurve(surface.curve)\n  }\n\n  containsLine(line: L3): boolean {\n    if (this.curvePlane.isParallelToLine(line)) {\n      return false\n    }\n    if (!line.containsPoint(this.apex)) {\n      return false\n    }\n    const p = this.curvePlane.intersectionWithLine(line)\n    return this.curve.containsPoint(p)\n  }\n\n  containsCurve(curve: Curve): boolean {\n    if (curve instanceof L3) {\n      return this.containsLine(curve)\n    } else if (!(curve instanceof ImplicitCurve)) {\n      const otherCurveOnThisPlane = curve.transform(this.planeProjectionMatrix)\n      return this.curve.isColinearTo(otherCurveOnThisPlane)\n    } else {\n      return super.containsCurve(curve)\n    }\n  }\n\n  transform(m4: M4): this {\n    return new PointProjectedSurface(\n      this.curve.transform(m4),\n      m4.transformPoint(this.apex),\n      this.curvePlane.transform(m4),\n      (m4.isMirroring() ? -1 : 1) * this.normalDir,\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    ) as this\n  }\n\n  flipped(): this {\n    return new PointProjectedSurface(\n      this.curve,\n      this.apex,\n      this.curvePlane,\n      -this.normalDir,\n      -this.uMax,\n      -this.uMin,\n      this.vMin,\n      this.vMax,\n    ) as this\n  }\n\n  normalUVFunc(): (u: number, v: number) => V3 {\n    const dpdv = this.dpdv()\n    return (u) =>\n      this.curve\n        .tangentAt(u * this.normalDir)\n        .times(this.normalDir)\n        .cross(dpdv(u))\n        .unit()\n  }\n\n  pUVFunc(): (u: number, v: number) => V3 {\n    return (u, v) => {\n      return this.apex.lerp(this.curve.at(u * this.normalDir), v)\n    }\n  }\n\n  dpdu(): (u: number, v: number) => V3 {\n    return (u, v) => {\n      return this.curve.tangentAt(u * this.normalDir).times(v * this.normalDir)\n    }\n  }\n\n  dpdv(): (u: number) => V3 {\n    return (u) => {\n      return this.apex.to(this.curve.at(u * this.normalDir))\n    }\n  }\n\n  containsPoint(pWC: V3) {\n    return (\n      this.apex.like(pWC) ||\n      this.curve.containsPoint(this.planeProjectionMatrix.transformPoint(pWC))\n    )\n  }\n\n  uvP(pWC: V3) {\n    const u = pWC.like(this.apex)\n      ? 0\n      : this.curve.pointT(this.planeProjectionMatrix.transformPoint(pWC))\n    const v = V3.inverseLerp(this.apex, this.curve.at(u), pWC)\n    return new V3(u * this.normalDir, v, 0)\n  }\n\n  isCurvesWithSurface(surface: Surface): Curve[] {\n    if (surface instanceof PlaneSurface) {\n      return this.isCurvesWithPlane(surface.plane)\n    } else if (ImplicitSurface.is(surface)) {\n      return ParametricSurface.isCurvesParametricImplicitSurface(\n        this,\n        surface,\n        0.1,\n        0.1 / this.curvePlane.distanceToPoint(this.apex),\n        0.02,\n      )\n    }\n    return super.isCurvesWithSurface(surface)\n  }\n\n  isCurvesWithPlane(plane: P3): Curve[] {\n    if (plane.containsPoint(this.apex)) {\n      if (plane.isParallelToPlane(this.curvePlane)) {\n        return []\n      }\n      return this.curve\n        .isTsWithPlane(plane)\n        .map((t) => L3.throughPoints(this.apex, this.curve.at(t)))\n    }\n    return [this.curve.transform(M4.projectPlanePoint(this.apex, plane))]\n  }\n}\n\nPointProjectedSurface.prototype.vStep = 256\n","import {\n  arrayFromFunction,\n  assert,\n  clamp,\n  firstUnsorted,\n  ilog,\n  indexWithMax,\n  int,\n  lerp,\n  M4,\n  MINUS,\n  newtonIterate,\n  sliceStep,\n  V,\n  V3,\n  Vector,\n} from \"ts3dutils\"\nimport { Curve, L3, NURBS, ParametricSurface, Surface } from \"..\"\nimport { Edge } from \"../Edge\"\nimport { P3 } from \"../P3\"\nimport { PointVsFace } from \"./Surface\"\nimport { ceil, floor } from \"../math\"\n\nexport class NURBSSurface extends ParametricSurface {\n  constructor(\n    /**\n     * Control points in u-major order. I.e. the first pointCountU points are a NURBS.\n     */\n    readonly points: ReadonlyArray<Vector>,\n    readonly knotsU: ReadonlyArray<number>,\n    readonly knotsV: ReadonlyArray<number>,\n    readonly degreeU: int,\n    readonly degreeV: int,\n    uMin: number = knotsU[degreeU],\n    uMax: number = knotsU[knotsU.length - degreeU - 1],\n    vMin: number = knotsV[degreeV],\n    vMax: number = knotsV[knotsV.length - degreeV - 1],\n  ) {\n    super(uMin, uMax, vMin, vMax)\n    const pointCountU = knotsU.length - 1 - degreeU\n    const pointCountV = knotsV.length - 1 - degreeV\n    assert(pointCountU * pointCountV == points.length)\n    assert(degreeU <= degreeV, \"degreeU <= degreeV\")\n    assert(\n      -1 === firstUnsorted(knotsU, MINUS),\n      \"knot values must be in ascending order\",\n    )\n    assert(\n      -1 === firstUnsorted(knotsV, MINUS),\n      \"knot values must be in ascending order\",\n    )\n  }\n\n  getConstructorParameters() {\n    return [\n      this.points,\n      this.knotsU,\n      this.knotsV,\n      this.degreeU,\n      this.degreeV,\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    ]\n  }\n\n  transform(m4: M4) {\n    return this.transform4(m4) as this\n  }\n\n  transform4(m4: M4) {\n    return new NURBSSurface(\n      this.points.map((p) => m4.timesVector(p)),\n      this.knotsU,\n      this.knotsV,\n      this.degreeU,\n      this.degreeV,\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    )\n  }\n\n  pUV(u: number, v: number) {\n    return this.isoparametricU(u).at(v)\n  }\n\n  dpdu() {\n    return (u: number, v: number) => this.isoparametricV(v).tangentAt(u)\n  }\n\n  dpdv() {\n    return (u: number, v: number) => this.isoparametricU(u).tangentAt(v)\n  }\n\n  normalUV(u: number, v: number) {\n    const normal = this.dpdu()(u, v).cross(this.dpdv()(u, v))\n    return normal.likeO() ? V3.X : normal.unit()\n  }\n\n  isoparametricU(u: number) {\n    const pointCountU = this.knotsU.length - 1 - this.degreeU\n    const pointCountV = this.knotsV.length - 1 - this.degreeV\n    return new NURBS(\n      arrayFromFunction(pointCountV, (i) => {\n        return deBoor(\n          this.points.slice(i * pointCountU, (i + 1) * pointCountU),\n          this.degreeU,\n          this.knotsU,\n          u,\n        )\n      }),\n      this.degreeV,\n      this.knotsV,\n      this.vMin,\n      this.vMax,\n    )\n  }\n\n  isoparametricV(v: number): NURBS {\n    const pointCountU = this.knotsU.length - 1 - this.degreeU\n    return new NURBS(\n      arrayFromFunction(pointCountU, (i) => {\n        return deBoor(\n          sliceStep(this.points, i, this.points.length, pointCountU, 1),\n          this.degreeV,\n          this.knotsV,\n          v,\n        )\n      }),\n      this.degreeU,\n      this.knotsU,\n      this.uMin,\n      this.uMax,\n    )\n  }\n\n  debugInfo() {\n    const pointCountU = this.knotsU.length - 1 - this.degreeU\n    const pointCountV = this.knotsV.length - 1 - this.degreeV\n    const grid = []\n    for (let u = 0; u < pointCountU; u++) {\n      for (let v = 0; v < pointCountV; v++) {\n        const i = v * pointCountU + u\n        if (u < pointCountU - 1) {\n          const j = v * pointCountU + u + 1\n          grid.push(this.points[i].p3(), this.points[j].p3())\n        }\n        if (v < pointCountV - 1) {\n          const j = (v + 1) * pointCountU + u\n          grid.push(this.points[i].p3(), this.points[j].p3())\n        }\n      }\n    }\n    return { points: this.points.map((p) => p.p3()), lines: grid }\n  }\n\n  flipped() {\n    const pointCountU = this.knotsU.length - 1 - this.degreeU\n    return new NURBSSurface(\n      arrayFromFunction(this.points.length, (i) => {\n        const u = i % pointCountU\n        return this.points[i - u + (pointCountU - u - 1)]\n      }),\n      this.knotsU.map((x) => -x).reverse(),\n      this.knotsV,\n      this.degreeU,\n      this.degreeV,\n      -this.uMax,\n      -this.uMin,\n      this.vMin,\n      this.vMax,\n    ) as this\n  }\n\n  isCoplanarTo(surface: Surface): boolean {\n    throw new Error(\"not implemented\")\n  }\n\n  isTsForLine(line: L3): number[] {\n    // intersect line with\n    const startT = 4\n\n    // Once we have a starting t param, there are two options:\n    // 1. 1-D Newton iterate on (t) -> (distanceFromSurface)\n    // 2. 3-D Newton iterate on (u, v, t) -> this.pUV(u, v).to(line.at(t))\n\n    // Let's go with 2, because 1 will require doing a nested newton iteration.\n    const [startU, startV] = this.pointFoot(line.at(startT))\n\n    const [, , t] = newtonIterate(\n      ([u, v, t]) => {\n        console.log(\"uvt\", u, v, t)\n        const lineP = line.at(t)\n        return ilog(this.pUV(u, v).to(lineP).toArray())\n      },\n      [startU, startV, startT],\n      8,\n    )\n\n    return [t]\n  }\n\n  pointFoot(pWC: V3, startU?: number, startV?: number): V3 {\n    const closestPointIndex = indexWithMax(\n      this.points,\n      (p) => -p.p3().distanceTo(pWC),\n    )\n    const pointCountU = this.knotsU.length - this.degreeU - 1\n    const closestPointPos = V(\n      closestPointIndex % pointCountU,\n      (closestPointIndex / pointCountU) | 0,\n    )\n    const start = this.guessUVForMeshPos(closestPointPos.x, closestPointPos.y)\n    const dpdu = this.dpdu()\n    const dpdv = this.dpdv()\n\n    try {\n      const [u, v] = newtonIterate(\n        ([u, v]) => {\n          // console.log(\"u,v\", u, v)\n          const pUV = this.pUV(u, v)\n          const pUVToPWC = pUV.to(pWC)\n          return [pUVToPWC.dot(dpdu(u, v)), pUVToPWC.dot(dpdv(u, v))]\n        },\n        [start.x, start.y],\n        16,\n      )\n      return new V3(u, v, 0)\n    } catch (e) {\n      return undefined!\n    }\n  }\n\n  isCurvesWithPlane(plane: P3): Curve[] {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  containsPoint(pWC: V3): boolean {\n    const foot = this.pointFoot(pWC)\n    return foot && this.pUV(foot.x, foot.y).like(pWC)\n  }\n\n  loopContainsPoint(contour: Edge[], point: V3): PointVsFace {\n    throw new Error(\"Method not implemented.\")\n  }\n\n  guessUVForMeshPos(x: int, y: int): V3 {\n    function eLerp<T>(\n      arr: ArrayLike<T>,\n      t: number,\n      lerp: (a: T, b: T, t: number) => T,\n    ): T {\n      if (0 === t % 1) return arr[t]\n      return lerp(arr[floor(t)], arr[ceil(t)], t % 1)\n    }\n\n    return new V3(\n      clamp(\n        eLerp(this.knotsU, x + (this.degreeU + 1) / 2, lerp),\n        this.uMin,\n        this.uMax,\n      ),\n      clamp(\n        eLerp(this.knotsV, y + (this.degreeV + 1) / 2, lerp),\n        this.vMin,\n        this.vMax,\n      ),\n      0,\n    )\n  }\n}\n\nNURBSSurface.prototype.uStep = 1 / 8\nNURBSSurface.prototype.vStep = 1 / 8\n\nfunction getInterval(\n  degree: int,\n  knots: ReadonlyArray<number>,\n  t: number,\n): int {\n  for (let s = degree; s < knots.length - 1 - degree; s++) {\n    if (t >= knots[s] && t <= knots[s + 1]) {\n      return s\n    }\n  }\n  throw new Error(t + \" \" + knots)\n}\n\nfunction deBoor(\n  points: ReadonlyArray<Vector>,\n  degree: int,\n  knots: ReadonlyArray<number>,\n  t: number,\n): Vector {\n  // find s (the spline segment) for the [t] value provided\n  const s = getInterval(degree, knots, t)\n\n  const v = Vector.pack(points, new Float64Array(points.length * 4))\n\n  // l (level) goes from 1 to the curve degree + 1\n  for (let l = 1; l <= degree; l++) {\n    // build level l of the pyramid\n    for (let i = s; i > s - degree - 1 + l; i--) {\n      const alpha = (t - knots[i]) / (knots[i + degree + 1 - l] - knots[i])\n\n      // interpolate each component\n      for (let d = 0; d < 4; d++) {\n        v[i * 4 + d] = (1 - alpha) * v[(i - 1) * 4 + d] + alpha * v[i * 4 + d]\n      }\n    }\n  }\n\n  return new Vector(v.slice(s * 4, s * 4 + 4))\n}\n","import {\n  assert,\n  gaussLegendre24Weights,\n  gaussLegendre24Xs,\n  gaussLegendreQuadrature24,\n  glqInSteps,\n  M4,\n  sum,\n  V,\n  V3,\n} from \"ts3dutils\"\nimport {\n  ConicSurface,\n  Edge,\n  EllipseCurve,\n  EllipsoidSurface,\n  HyperbolaCurve,\n  ImplicitCurve,\n  L3,\n  ParabolaCurve,\n  ParametricSurface,\n  PlaneSurface,\n  ProjectedCurveSurface,\n  RotatedCurveSurface,\n} from \"../index\"\n\nimport { cos, sin } from \"../math\"\n\n/**\n * In general: the z-dir shadow volume of a face is the integral: SURFACE_INTEGRAL[p in face] (normal(p).z * p.z) dp\n * In general: the centroid of the z-dir shadow volume of a face is the integral:\n *     SURFACE_INTEGRAL[p in face] ((p schur (1, 1, 0.5)) * normal(p).z * p.z) dp\n *     dividing the z component by 2 is usually done at the very end\n */\n\nexport const ZDirVolumeVisitor: {\n  [className: string]: (edges: Edge[]) => { volume: number; centroid: V3 }\n} = {\n  [ConicSurface.name](\n    this: ConicSurface,\n    edges: Edge[],\n  ): { volume: number; centroid: V3 } {\n    console.log(this)\n    const dpdu = this.dpdu()\n    const dpdv = this.dpdv()\n    // INT[edge.at; edge.bT] (at(t) DOT dir) * (at(t) - at(t).projectedOn(dir) / 2).z dt\n    const totalVolume = sum(\n      edges.map((edgeWC) => {\n        const curveWC = edgeWC.curve\n        if (\n          curveWC instanceof EllipseCurve ||\n          curveWC instanceof HyperbolaCurve ||\n          curveWC instanceof ParabolaCurve\n        ) {\n          const f = (curveT: number) => {\n            const at = curveWC.at(curveT),\n              tangentWC = curveWC.tangentAt(curveT)\n            const uvOfPWC = this.uvP(at)\n            // INTEGRATE [0; atUV.y] (dpdu(atUV.x, t) X dpdv(atUV.x)).z * pUV(atUV.x, t).z dt\n            // dpdu(u, v) === t * dpdu(s, 1)\n            // => INTEGRATE [0; atUV.y] (t * dpdu(atUV.x, 1) X dpdv(atUV.x)).z * pUV(atUV.x, t).z dt\n            // => (dpdu(atUV.x, 1) X dpdv(atUV.x)).z * INTEGRATE [0; atUV.y] t * pUV(atUV.x, t).z dt\n            // pUV(u, v) === t * (pUV(s, 1) - center) + center\n            // => (dpdu(atUV.x, 1) X dpdv(atUV.x)).z\n            //      * INTEGRATE [0; atUV.y] t² * (pUV(atUV.x, t) - center).z + t * center.z dt\n            // => (dpdu(atUV.x, 1) X dpdv(atUV.x)).z\n            //      * INTEGRATE [0; atUV.y] t² * (pUV(atUV.x, t) - center).z + t * center.z dt\n            // => (dpdu(atUV.x, 1) X dpdv(atUV.x)).z\n            //      * (1/3 t³ pUV(atUV.x, 1).z + 1/2 t² center.z)[0; atUV.y]\n\n            const du = -M4.forSys(dpdu(uvOfPWC.x, uvOfPWC.y), dpdv(uvOfPWC.x))\n              .inversed()\n              .transformVector(tangentWC).x\n            const factor =\n              (uvOfPWC.y ** 3 / 3) *\n                (this.pUV(uvOfPWC.x, 1).z - this.center.z) +\n              (uvOfPWC.y ** 2 / 2) * this.center.z\n            const actual = dpdu(uvOfPWC.x, factor).cross(dpdv(uvOfPWC.x)).z\n            return actual * du\n          }\n          const val = glqInSteps(f, edgeWC.aT, edgeWC.bT, 1)\n          return val\n        } else if (curveWC instanceof L3) {\n          return 0\n        } else {\n          throw new Error()\n        }\n      }),\n    )\n    const centroidZX2Parts = edges.map((edgeWC) => {\n      const curveWC = edgeWC.curve\n      if (\n        curveWC instanceof EllipseCurve ||\n        curveWC instanceof HyperbolaCurve ||\n        curveWC instanceof ParabolaCurve\n      ) {\n        const f = (curveT: number) => {\n          const at = curveWC.at(curveT),\n            tangentWC = curveWC.tangentAt(curveT)\n          const uvOfPWC = this.uvP(at)\n          // INTEGRATE [0; atUV.y] dpdu(atUV.x, t) X dpdv(atUV.x, t) * pUV(atUV.x, t).z dt\n          // dpdv is constant with respect to t\n          // => (dpdu(atUV.x, t) X dpdv(atUV.x, t)).z\n          //      * (INTEGRATE [0; atUV.y] t * pUV(atUV.x, t) * pUV(atUV.x, t).z dt)\n          // dpdu(u, v) === t * dpdu(s, 1)\n          // pUV(u, v) === t * (pUV(s, 1) - center) + center\n          // INTEGRATE [0; atUV.y] t * pUV(atUV.x, t) * pUV(atUV.x, t).z dt\n          // = INTEGRATE [0; atUV.y] t *\n          //                         (t * (pUV(s, 1) - center) + center) *\n          //                         (t (pUV(s, 1) - center).z + center.z) dt\n          // = INTEGRATE [0; atUV.y] t³ (pUV(s, 1) - center) * (pUV(s, 1) - center).z\n          //                       + t² ((pUV(s, 1) - center) * center.z + (pUV(s, 1) - center).z * center)\n          //                       + t center center.z dt\n          // = (1/4 t^4 (pUV(s, 1) - center) * (pUV(s, 1) - center).z\n          //   (1/3 t³ ((pUV(s, 1) - center) * center.z + (pUV(s, 1) - center).z * center)\n          //   (1/2 t² center center.z dt)[0; atUV.y]\n          const pUVS1V = this.pUV(uvOfPWC.x, 1).minus(this.center)\n          const factor = V3.add(\n            pUVS1V.times(\n              (1 / 4) * uvOfPWC.y ** 4 * pUVS1V.z +\n                (1 / 3) * uvOfPWC.y ** 3 * this.center.z,\n            ),\n            this.center.times(\n              (1 / 3) * uvOfPWC.y ** 3 * pUVS1V.z +\n                (1 / 2) * uvOfPWC.y ** 2 * this.center.z,\n            ),\n          )\n          const partialCentroid = factor.times(\n            dpdu(uvOfPWC.x, 1).cross(dpdv(uvOfPWC.x)).z,\n          )\n\n          const ds = -M4.forSys(dpdu(uvOfPWC.x, uvOfPWC.y), dpdv(uvOfPWC.x))\n            .inversed()\n            .transformVector(tangentWC).x\n\n          return partialCentroid.times(ds)\n        }\n        return glqV3(f, edgeWC.aT, edgeWC.bT)\n      } else if (curveWC instanceof L3) {\n        return V3.O\n      } else {\n        throw new Error()\n      }\n    })\n\n    const centroid = V3.add(...centroidZX2Parts)\n      .schur(new V3(1, 1, 0.5))\n      .div(totalVolume)\n    return { volume: totalVolume, centroid: centroid }\n  },\n\n  [PlaneSurface.name](\n    this: PlaneSurface,\n    edges: Edge[],\n  ): { centroid: V3; volume: number } {\n    const r1 = this.right\n    const u1 = this.up\n    const c = this.plane.anchor\n    assert(r1.hasLength(1))\n    assert(u1.hasLength(1))\n    assert(r1.isPerpendicularTo(u1))\n    const volumeAndCentroidZX2Parts = edges.map((edgeWC): [number, V3] => {\n      const curveWC = edgeWC.curve\n      if (curveWC instanceof L3) {\n        // split shadow volume into two triangle shadow volumes and use the same logic as for mesh triangles:\n        function triangleShadowVolumeAndCentroid(\n          a: V3,\n          b: V3,\n          c: V3,\n        ): [number, V3] {\n          const ab = b.minus(a),\n            ac = c.minus(a)\n          const normal = ab.cross(ac)\n          const faceCentroid = V3.add(a, b, c).div(3)\n          return [\n            (faceCentroid.z * normal.z) / 2,\n            V3.add(\n              a.times(2 * a.z + b.z + c.z),\n              b.times(a.z + 2 * b.z + c.z),\n              c.times(a.z + b.z + 2 * c.z),\n            ).times(normal.z), // 1/24 factor is done at very end\n          ]\n        }\n        const a = edgeWC.a,\n          b = edgeWC.b\n        const as = a.dot(r1)\n        const bs = b.dot(r1)\n        const aBase = this.pUV(as, 0)\n        const bBase = this.pUV(bs, 0)\n        const [v1, c1] = triangleShadowVolumeAndCentroid(a, b, aBase)\n        const [v2, c2] = triangleShadowVolumeAndCentroid(bBase, aBase, b)\n        return [v1 + v2, c1.plus(c2).div(24)]\n      } else if (curveWC instanceof ImplicitCurve) {\n        throw new Error()\n      } else {\n        const sliceAreaAndCentroidZX2TimesDs = (curveT: number) => {\n          const p = curveWC.at(curveT)\n          const s = p.dot(r1)\n          const t = p.dot(u1)\n          const area = t * c.z + s * t * r1.z + (1 / 2) * t ** 2 * u1.z\n          const ds = -curveWC.tangentAt(curveT).dot(r1)\n          return [\n            area * ds,\n            ...V3.add(\n              c.times(area),\n              r1.times(\n                c.z * s * t + r1.z * s ** 2 * t + (1 / 2) * s * t ** 2 * u1.z,\n              ),\n              u1.times(\n                (1 / 2) * c.z * t ** 2 +\n                  (1 / 2) * r1.z * s * t ** 2 +\n                  (1 / 3) * t ** 3 * u1.z,\n              ),\n            ).times(ds),\n          ]\n        }\n        const [vol, cx, cy, cz] = glqArray(\n          sliceAreaAndCentroidZX2TimesDs,\n          edgeWC.aT,\n          edgeWC.bT,\n          4,\n        )\n        return [\n          vol * this.plane.normal1.z,\n          new V3(cx, cy, cz).times(this.plane.normal1.z),\n        ]\n      }\n    })\n    return mergeVolumeAndCentroidZX2Parts(volumeAndCentroidZX2Parts)\n  },\n\n  /**\n   * Generic implementation.\n   */\n  [ParametricSurface.name](\n    this: ParametricSurface,\n    edges: Edge[],\n  ): { centroid: V3; volume: number } {\n    const dpdu = this.dpdu()\n    const dpdv = this.dpdv()\n    const volume = edges.map((edgeWC): [number, V3] => {\n      const curveWC = edgeWC.curve\n      if (curveWC instanceof ImplicitCurve) {\n        throw new Error()\n      } else {\n        const sliceAreaAndCentroidZX2TimesDs = (curveT: number) => {\n          // use curve.tangent not edge.tangent, reverse edges are handled by the integration boundaries\n          const pWC = curveWC.at(curveT),\n            tangentWC = curveWC.tangentAt(curveT)\n          const uvOfPWC = this.uvP(pWC)\n          const slice = (t: number) => {\n            const p = this.pUV(uvOfPWC.x, t)\n            const normal = dpdu(uvOfPWC.x, t).cross(dpdv(uvOfPWC.x, t))\n            return p.z * normal.z\n          }\n          const sliceIntegral0ToPWCT = glqInSteps(slice, 0, uvOfPWC.y, 1)\n          // const dt = tangentWC.dot(scalingVector)\n          const dt = -M4.forSys(\n            dpdu(uvOfPWC.x, uvOfPWC.y),\n            dpdv(uvOfPWC.x, uvOfPWC.y),\n          )\n            .inversed()\n            .transformVector(tangentWC).x\n          const sliceAreaTimesDs = sliceIntegral0ToPWCT * dt\n          const slice2 = (t: number) => {\n            const p = this.pUV(uvOfPWC.x, t)\n            const normal = dpdu(uvOfPWC.x, t).cross(dpdv(uvOfPWC.x, t))\n            return p.times(p.z * normal.z)\n          }\n          const sliceIntegral0ToPWCT2 = glqV3(slice2, 0, uvOfPWC.y)\n          // const dt = tangentWC.dot(scalingVector)\n          const sliceCentroidZX2TimesDs = sliceIntegral0ToPWCT2.times(dt)\n          return [sliceAreaTimesDs, ...sliceCentroidZX2TimesDs.toArray()]\n        }\n        const [vol, cx, cy, cz] = glqArray(\n          sliceAreaAndCentroidZX2TimesDs,\n          edgeWC.aT,\n          edgeWC.bT,\n          4,\n        )\n        return [vol, new V3(cx, cy, cz)]\n      }\n    })\n    return mergeVolumeAndCentroidZX2Parts(volume)\n  },\n\n  /**\n   * at(t)\n   * |\\                                    ^\n   * | \\ at(t).projectedOn(dir1)            \\  dir1\n   * |  \\                                    \\\n   * |   \\ at(t).rejectedFrom(dir1) = b\n   * |   |\n   * |___|\n   *        z = 0\n   *\n   *\n   * A = ((at(t) + at(t).rejectedFrom(dir1)) / 2).z * at(t).projectedOn(dir1).lengthXY()\n   * scaling = tangentAt(t) DOT dir1.cross(V3.Z).unit()\n   */\n  [ProjectedCurveSurface.name](this: ProjectedCurveSurface, edges: Edge[]) {\n    if (V3.Z.cross(this.dir).likeO()) return { volume: 0, centroid: V3.O }\n    // normalize this.dir so it always points up\n    const upDir1 = this.dir.toLength(Math.sign(this.dir.z) || 1)\n    const scalingVector = V3.Z.cross(upDir1).unit()\n    // the length of the base of the trapezoid is calculated by dotting with the baseVector\n    const baseVector = upDir1.rejectedFrom(V3.Z).unit()\n    // INT[edge.at; edge.bT] (at(t) DOT dir1) * (at(t) - at(t).projectedOn(dir) / 2).z\n    const volume = edges.map((edgeWC): [number, V3] => {\n      if (edgeWC.curve instanceof L3) {\n        return [0, V3.O]\n      } else if (edgeWC.curve instanceof ImplicitCurve) {\n        return [0, V3.O]\n        // \tconst { points, tangents } = edgeWC.curve\n        // \tconst minT = edgeWC.minT,\n        // \t\tmaxT = edgeWC.maxT\n        // \tlet sum = 0\n        // \tconst start = Math.ceil(minT + NLA_PRECISION)\n        // \tconst end = Math.floor(maxT - NLA_PRECISION)\n        // \tfor (let i = start; i <= end; i++) {\n        // \t\tconst at = points[i],\n        // \t\t\ttangent = tangents[i]\n        // \t\tconst area = (at.z + at.rejectedFrom1(upDir1).z) / 2 * at.projectedOn(upDir1).dot(baseVector)\n        // \t\tconst scale = tangent.dot(scalingVector)\n        // \t\tsum += area * scale\n        // \t}\n        // \tconst f = (t: number) => {\n        // \t\tconst at = edgeWC.curve.at(t),\n        // \t\t\ttangent = edgeWC.curve.tangentAt(t)\n        // \t\tconst area = (at.z + at.rejectedFrom1(upDir1).z) / 2 * at.projectedOn(upDir1).dot(baseVector)\n        // \t\tconst scale = tangent.dot(scalingVector)\n        // \t\treturn area * scale\n        // \t}\n        // \tsum += f(minT) * (start - minT - 0.5)\n        // \tsum += f(maxT) * (maxT - end - 0.5)\n        // \treturn sum * Math.sign(edgeWC.deltaT())\n      } else {\n        const f = (curveT: number) => {\n          // use curve.tangent not edge.tangent, reverse edges are handled by the integration boundaries\n          const at = edgeWC.curve.at(curveT),\n            tangent = edgeWC.curve.tangentAt(curveT)\n          const b = at.rejectedFrom1(upDir1)\n          const area =\n            (at.z * b.to(at).dot(baseVector)) / 2 +\n            (b.z * b.to(at).dot(baseVector)) / 2\n          const areaCentroidA = V3.add(at.xy(), b, at).times(\n            (at.z * b.to(at).dot(baseVector)) / 2 / 3,\n          )\n          const areaCentroidB = V3.add(at.xy(), b, b.xy()).times(\n            (b.z * b.to(at).dot(baseVector)) / 2 / 3,\n          )\n          const scale = tangent.dot(scalingVector)\n          return [\n            area * scale,\n            ...areaCentroidA.plus(areaCentroidB).times(scale).schur(V(1, 1, 2)),\n          ]\n        }\n        const [vol, cx, cy, cz] = glqArray(f, edgeWC.aT, edgeWC.bT, 4)\n        return [vol, new V3(cx, cy, cz)]\n      }\n    })\n    return mergeVolumeAndCentroidZX2Parts(volume)\n  },\n\n  // volume does scale linearly, so this could be done in the local coordinate system\n  // however, shear matrices lead to point-to-plane distances having to be calculated along a vector other than\n  // the plane normal\n  [RotatedCurveSurface.name](\n    this: RotatedCurveSurface,\n    edges: Edge[],\n  ): { volume: number; centroid: V3 } {\n    const dpdu = this.dpdu()\n    const dpdv = this.dpdv()\n    const totalVolume = sum(\n      edges.map((edgeWC) => {\n        const curveWC = edgeWC.curve\n\n        const f = (curveT: number) => {\n          const pWC = curveWC.at(curveT),\n            tangentWC = curveWC.tangentAt(curveT)\n          const uvOfPWC = this.uvP(pWC)\n          const pLC = this.matrixInverse.transformPoint(pWC)\n          const dpdvAtS0 =\n            this instanceof RotatedCurveSurface\n              ? this.curve.tangentAt(uvOfPWC.y)\n              : V(-pLC.z, 0, pLC.lengthXY())\n          // const slice = (phi: number) => {\n          // \tconst p = this.pUV(phi, uvOfPWC.y)\n          // \tconst normal = dpdu(phi, uvOfPWC.y).cross(dpdv(phi, uvOfPWC.y))\n          // \treturn p.z * normal.z\n          // }\n          // const z = this.curve.at(uvOfPWC.y).z\n          // const r = this.curve.at(uvOfPWC.y).lengthXY()\n          // const pz =\n          // \tthis.f1.z * r * cos(s) +\n          // \tthis.f2.z * r * sin(s) +\n          // \tthis.f3.z * z +\n          // \tthis.center.z\n          // const dpdux = this.f1.x * r * -sin(s) + this.f2.x * r * cos(s)\n          // const dpduy = this.f1.y * r * -sin(s) + this.f2.y * r * cos(s)\n          // const dpdvx = this.f1.x * dr * cos(s) + this.f2.x * dr * sin(s) + this.f3.x * dz\n          // const dpdvy = this.f1.y * dr * cos(s) + this.f2.y * dr * sin(s) + this.f3.y * dz\n          // const normalz = dpdux * dpdvy - dpduy * dpdvx\n          // result = pz * normalz\n          const r = pLC.lengthXY(),\n            z = pLC.z\n          const dr = dpdvAtS0.x\n          const dz = dpdvAtS0.z\n          const a = this.matrix.X.z * r,\n            b = this.matrix.Y.z * r,\n            c = this.matrix.Z.z * z + this.matrix.O.z\n          const t0 =\n            (this.matrix.X.x * this.matrix.Y.y -\n              this.matrix.X.y * this.matrix.Y.x) *\n            r *\n            dr\n          const t1 =\n            (this.matrix.Y.x * this.matrix.X.y -\n              this.matrix.Y.y * this.matrix.X.x) *\n            r *\n            dr\n          const t2 =\n            (this.matrix.X.x * this.matrix.X.y -\n              this.matrix.X.y * this.matrix.X.x) *\n            r *\n            dr\n          const t3 =\n            (this.matrix.Y.x * this.matrix.Y.y -\n              this.matrix.Y.y * this.matrix.Y.x) *\n            r *\n            dr\n          const t4 =\n            (this.matrix.Y.x * this.matrix.Z.y -\n              this.matrix.Y.y * this.matrix.Z.x) *\n            r *\n            dz\n          const t5 =\n            (this.matrix.X.x * this.matrix.Z.y -\n              this.matrix.X.y * this.matrix.Z.x) *\n            r *\n            dz\n          const sliceIntegral = (p: number) => {\n            return (\n              (6 * (c * (-t0 + t1) + a * t4 - b * t5) * p +\n                3 *\n                  (3 * b * t0 - b * t1 + a * (t2 - t3) + 4 * c * t5) *\n                  cos(p) +\n                3 *\n                  (3 * a * t1 - a * t0 - b * (t2 - t3) + 4 * c * t4) *\n                  sin(p) +\n                3 * (a * t5 - b * t4 + c * (t2 - t3)) * cos(2 * p) +\n                3 * (a * t4 + b * t5 + c * (t0 + t1)) * sin(2 * p) +\n                (a * (t2 - t3) - b * (t0 + t1)) * cos(3 * p) +\n                (a * (t0 + t1) + b * (t2 - t3)) * sin(3 * p)) /\n              12\n            )\n          }\n          const dt = M4.forSys(\n            dpdu(uvOfPWC.x, uvOfPWC.y),\n            dpdv(uvOfPWC.x, uvOfPWC.y),\n          )\n            .inversed()\n            .transformVector(tangentWC).y\n          const sliceIntegral0ToPWCS = sliceIntegral(uvOfPWC.x) //- sliceIntegral(0) //(always 0)\n          const result = sliceIntegral0ToPWCS * dt\n          return result\n        }\n\n        return gaussLegendreQuadrature24(f, edgeWC.aT, edgeWC.bT)\n      }),\n    )\n\n    // calc centroid:\n    const centroidZX2Parts = edges.map((edgeWC) => {\n      const f = (curveT: number) => {\n        const curveWC = edgeWC.curve\n        const pWC = curveWC.at(curveT),\n          tangentWC = curveWC.tangentAt(curveT)\n        const uvOfPWC = this.uvP(pWC)\n        const slice = (phi: number) => {\n          const p = this.pUV(phi, uvOfPWC.y)\n          const normal = dpdu(phi, uvOfPWC.y).cross(dpdv(phi, uvOfPWC.y))\n          return p.times(p.z * normal.z)\n        }\n        const sliceIntegral0ToPWCS = glqV3(slice, 0, uvOfPWC.x)\n        const dt = M4.forSys(\n          dpdu(uvOfPWC.x, uvOfPWC.y),\n          dpdv(uvOfPWC.x, uvOfPWC.y),\n        )\n          .inversed()\n          .transformVector(tangentWC).y\n        const result = sliceIntegral0ToPWCS.times(dt)\n        return result\n      }\n\n      return glqV3(f, edgeWC.aT, edgeWC.bT)\n    })\n    const centroid = V3.add(...centroidZX2Parts)\n      .schur(new V3(1, 1, 0.5))\n      .div(totalVolume)\n    return { volume: totalVolume, centroid: centroid }\n  },\n}\nZDirVolumeVisitor[EllipsoidSurface.name] =\n  ZDirVolumeVisitor[RotatedCurveSurface.name]\n\nexport function glqV3(f: (x: number) => V3, startT: number, endT: number) {\n  return gaussLegendre24Xs\n    .reduce((val, currVal, index) => {\n      const x = startT + ((currVal + 1) / 2) * (endT - startT)\n      return val.plus(f(x).times(gaussLegendre24Weights[index]))\n    }, V3.O)\n    .times((endT - startT) / 2)\n}\nexport function glqArray(\n  f: (x: number) => number[],\n  startT: number,\n  endT: number,\n  numEls = 3,\n) {\n  const result = new Array(numEls).fill(0)\n  for (let i = 0; i < 24; i++) {\n    const x = startT + ((gaussLegendre24Xs[i] + 1) / 2) * (endT - startT)\n    const fx = f(x)\n    for (let j = 0; j < numEls; j++) {\n      result[j] += fx[j] * gaussLegendre24Weights[i]\n    }\n  }\n  for (let j = 0; j < numEls; j++) {\n    result[j] *= (endT - startT) / 2\n  }\n  return result\n}\n\nfunction mergeVolumeAndCentroidZX2Parts(\n  volumeAndCentroidZX2Parts: [number, V3][],\n) {\n  const volume = volumeAndCentroidZX2Parts.reduce(\n    (result, [volume]) => result + volume,\n    0,\n  )\n  const weightedCentroid = V3.add(\n    ...volumeAndCentroidZX2Parts.map(([, centroidZX2]) => centroidZX2),\n  ).schur(new V3(1, 1, 0.5))\n  return { volume, centroid: weightedCentroid.div(volume) }\n}\n","import {\n  assert,\n  assertf,\n  eq,\n  glqInSteps,\n  M4,\n  NLA_PRECISION,\n  sum,\n} from \"ts3dutils\"\n\nimport {\n  ConicSurface,\n  Edge,\n  EllipseCurve,\n  EllipsoidSurface,\n  HyperbolaCurve,\n  ImplicitCurve,\n  L3,\n  ParabolaCurve,\n  PlaneSurface,\n  ProjectedCurveSurface,\n  RotatedCurveSurface,\n} from \"../index\"\nimport { ceil, cos, floor, sign, sin } from \"../math\"\n\nexport const CalculateAreaVisitor = {\n  [ConicSurface.name](this: ConicSurface, edges: Edge[]): number {\n    const dpdu = this.dpdu()\n    const dpdv = this.dpdv()\n    // calculation cannot be done in local coordinate system, as the area doesnt scale proportionally\n    const totalArea = sum(\n      edges.map((edge) => {\n        if (\n          edge.curve instanceof EllipseCurve ||\n          edge.curve instanceof HyperbolaCurve ||\n          edge.curve instanceof ParabolaCurve\n        ) {\n          const f = (t: number) => {\n            const at = edge.curve.at(t),\n              tangentWC = edge.tangentAt(t)\n            const uvOfPWC = this.uvP(at)\n            // INTEGRATE [0; atUV.y]\n            //   dpdu(atUV.x, t) X dpdv(atUV.x, t)\n            // dt\n            // dpdv is constant with respect to t\n            // => dpdv(atUV.x, 0) X (INTEGRATE [0; atUV.y] dpdu(atUV.x, t) dt)\n            // dpdu(u, v) === v * dpdu(u, 1)\n            // => dpdv(atUV.x, 0) X (1/2 t² dpdu(atUV.x, 1))[0; atUV.y]\n            // => dpdv(atUV.x, 0) X dpdu(atUV.x, atUV.y² / 2)\n\n            const du = -M4.forSys(dpdu(uvOfPWC.x, uvOfPWC.y), dpdv(uvOfPWC.x))\n              .inversed()\n              .transformVector(tangentWC).x\n\n            return (\n              dpdu(uvOfPWC.x, uvOfPWC.y ** 2 / 2)\n                .cross(dpdv(uvOfPWC.x))\n                .length() * du\n            )\n          }\n          return glqInSteps(f, edge.aT, edge.bT, 1)\n        } else if (edge.curve instanceof L3) {\n          return 0\n        } else {\n          throw new Error()\n        }\n      }),\n    )\n    return totalArea * this.normalDir\n  },\n\n  [PlaneSurface.name](this: PlaneSurface, edges: Edge[]) {\n    let totalArea = 0\n    const r1 = this.right,\n      u1 = this.up\n    for (const edge of edges) {\n      let edgeArea: number\n      const curve = edge.curve\n      if (curve instanceof L3) {\n        edgeArea =\n          ((edge.a.dot(u1) + edge.b.dot(u1)) / 2) * edge.b.to(edge.a).dot(r1)\n      } else if (curve instanceof EllipseCurve) {\n        // INTEGRATE[aT; bT] (curve.at(t) * u1) * (tangent(t) * r1) dt\n        // INTEGRATE[aT; bT] (u1 f1 cos t + u1 f2 sin t + u1 c) * (r1 f1 (-sin t) + r1 f2 cos t) dt\n        const { f1, f2, center } = curve\n        const a = u1.dot(f1),\n          b = u1.dot(f2),\n          c = u1.dot(center),\n          d = r1.dot(f1),\n          e = r1.dot(f2)\n        function fArea(t: number) {\n          return (\n            0.25 *\n            (2 * (-b * d + a * e) * t +\n              4 * c * d * cos(t) +\n              4 * c * e * sin(t) +\n              (a * d - b * e) * cos(2 * t) +\n              (b * d + a * e) * sin(2 * t))\n          )\n        }\n        edgeArea = -(fArea(edge.bT) - fArea(edge.aT))\n      } else if (curve instanceof ImplicitCurve) {\n        throw new Error(\"implement for implicitCurve\")\n      } else {\n        const dir1 = u1\n        assertf(() => dir1.hasLength(1))\n        // INT[aT; bT] at(t) * dir1 * tangentAt(t).rejectedFrom(dir1) dt\n        const f = (curveT: number) => {\n          const at = curve.at(curveT)\n          const tangent = curve.tangentAt(curveT)\n          const ds = r1.dot(tangent)\n          const t = u1.dot(at)\n          return ds * t\n        }\n        edgeArea = glqInSteps(f, edge.aT, edge.bT, 3)\n      }\n\n      totalArea += edgeArea\n    }\n    assert(isFinite(totalArea))\n    return totalArea\n  },\n\n  [RotatedCurveSurface.name](\n    this: RotatedCurveSurface,\n    edges: Edge[],\n    canApproximate = true,\n  ): number {\n    const f1 = this.matrix.X,\n      f2 = this.matrix.Y,\n      f3 = this.matrix.Z\n    const likeVerticalSpheroid =\n      eq(f1.length(), f2.length()) &&\n      f1.isPerpendicularTo(f2) &&\n      f2.isPerpendicularTo(f3) &&\n      f3.isPerpendicularTo(f1)\n\n    const areaParts = edges.map((edgeWC, ei) => {\n      console.log(\"edge\", ei, edgeWC.sce)\n      const curveWC = edgeWC.curve\n      if (edgeWC.curve instanceof ImplicitCurve) {\n        throw new Error()\n      } else {\n        if (likeVerticalSpheroid) {\n          const f = (curveT: number) => {\n            const pWC = curveWC.at(curveT),\n              tangent = curveWC.tangentAt(curveT)\n            const pLC = this.matrixInverse.transformPoint(pWC)\n            const { x: angleXY, y: t } = this.uvP(pWC)\n            const arcRadius = this.matrix.transformVector(pLC.xy()).length()\n            const arcLength = angleXY * arcRadius\n            const dpdv = this.dpdv()(angleXY, t).unit()\n            const scaling = dpdv.dot(tangent)\n            return arcLength * scaling\n          }\n          return glqInSteps(f, edgeWC.aT, edgeWC.bT, 1)\n        } else {\n          const dpdu = this.dpdu(),\n            dpdv = this.dpdv()\n          const f2 = (curveT: number) => {\n            const pWC = curveWC.at(curveT),\n              tangentWC = curveWC.tangentAt(curveT)\n            const uvPWC = this.uvP(pWC)\n            const slice = (phi: number) => {\n              //return this.dpdu()(phi, st.y).length() * this.dpdv()(phi, st.y).length()\n              return dpdu(phi, uvPWC.y).cross(dpdv(phi, uvPWC.y)).length()\n            }\n            // we need to do a coordinate transform from curveT to dt, as that is what we are integrating\n            const dt = M4.forSys(dpdu(uvPWC.x, uvPWC.y), dpdv(uvPWC.x, uvPWC.y))\n              .inversed()\n              .transformVector(tangentWC).y\n            return glqInSteps(slice, 0, uvPWC.x, 1) * dt\n          }\n          return glqInSteps(f2, edgeWC.aT, edgeWC.bT, 1)\n        }\n      }\n    })\n    return sum(areaParts)\n  },\n\n  [ProjectedCurveSurface.name](\n    this: ProjectedCurveSurface,\n    edges: Edge[],\n  ): number {\n    // calculation cannot be done in local coordinate system, as the area doesn't scale proportionally\n    const thisDir1 = this.dir.unit()\n    const totalArea = sum(\n      edges.map((edge) => {\n        if (edge.curve instanceof L3) {\n          return 0\n        } else if (edge.curve instanceof ImplicitCurve) {\n          const { points, tangents } = edge.curve\n          const minT = edge.minT,\n            maxT = edge.maxT\n          let sum = 0\n          const start = ceil(minT + NLA_PRECISION)\n          const end = floor(maxT - NLA_PRECISION)\n          for (let i = start; i <= end; i++) {\n            const at = points[i],\n              tangent = tangents[i] //.toLength(edge.curve.stepSize)\n            const scaling = this.normalP(at).cross(thisDir1).unit().dot(tangent)\n            sum += at.dot(thisDir1) * scaling\n          }\n          const f = (t: number) => {\n            const at = edge.curve.at(t),\n              tangent = edge.curve.tangentAt(t)\n            const scaling = this.normalP(at).cross(thisDir1).unit().dot(tangent)\n            return at.dot(thisDir1) * scaling\n          }\n          sum += f(minT) * (start - minT - 0.5)\n          sum += f(maxT) * (maxT - end - 0.5)\n          return sum * sign(edge.deltaT())\n        } else {\n          const f = (t: number) => {\n            const at = edge.curve.at(t)\n            const tangent = edge.tangentAt(t)\n            const scaling = tangent.rejected1Length(thisDir1)\n            return at.dot(thisDir1) * scaling\n          }\n          const val = glqInSteps(f, edge.aT, edge.bT, 1)\n          const sign = Math.sign(\n            this.normalP(edge.a)\n              .cross(this.dir)\n              .dot(edge.curve.tangentAt(edge.aT)),\n          )\n          assert(0 !== sign)\n          return val * sign\n        }\n      }),\n    )\n    console.log(\"totalArea\", totalArea)\n    return totalArea\n  },\n\n  //[CylinderSurface.name](this: CylinderSurface, edges: Edge[]): number {\n  //\t// calculation cannot be done in local coordinate system, as the area doesnt scale proportionally\n  //\tconst totalArea = edges.map(edge => {\n  //\t\tif (edge.curve instanceof EllipseCurve) {\n  //\t\t\tconst f = (t: number) => {\n  //\t\t\t\tconst at = edge.curve.at(t), tangent = edge.tangentAt(t)\n  //\t\t\t\treturn at.dot(this.dir) * tangent.rejectedLength(this.dir)\n  //\t\t\t}\n  //\t\t\t// ellipse with normal parallel to dir1 need to be counted negatively so CCW faces result in a\n  // positive // area const sign = -Math.sign(edge.curve.normal.dot(this.dir)) const val = glqInSteps(f, edge.aT,\n  // edge.bT, 4) return val * sign } else if (edge.curve instanceof L3) { return 0 } else { assertNever() } }).sum()\n  // // if the cylinder faces inwards, CCW faces will have been CW, so we need to reverse that here //abs is\n  // not an option as \"holes\" may also be passed return totalArea *sign(this.baseCurve.normal.dot(this.dir)) },\n}\nCalculateAreaVisitor[EllipsoidSurface.name] =\n  CalculateAreaVisitor[RotatedCurveSurface.name]\n","/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index < 0 || index >= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tsize > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'codePointAt', {\n\t\t\t\t'value': codePointAt,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n","var TINF_OK = 0;\nvar TINF_DATA_ERROR = -3;\n\nfunction Tree() {\n  this.table = new Uint16Array(16);   /* table of code length counts */\n  this.trans = new Uint16Array(288);  /* code -> symbol translation table */\n}\n\nfunction Data(source, dest) {\n  this.source = source;\n  this.sourceIndex = 0;\n  this.tag = 0;\n  this.bitcount = 0;\n  \n  this.dest = dest;\n  this.destLen = 0;\n  \n  this.ltree = new Tree();  /* dynamic length/symbol tree */\n  this.dtree = new Tree();  /* dynamic distance tree */\n}\n\n/* --------------------------------------------------- *\n * -- uninitialized global data (static structures) -- *\n * --------------------------------------------------- */\n\nvar sltree = new Tree();\nvar sdtree = new Tree();\n\n/* extra bits and base tables for length codes */\nvar length_bits = new Uint8Array(30);\nvar length_base = new Uint16Array(30);\n\n/* extra bits and base tables for distance codes */\nvar dist_bits = new Uint8Array(30);\nvar dist_base = new Uint16Array(30);\n\n/* special ordering of code length codes */\nvar clcidx = new Uint8Array([\n  16, 17, 18, 0, 8, 7, 9, 6,\n  10, 5, 11, 4, 12, 3, 13, 2,\n  14, 1, 15\n]);\n\n/* used by tinf_decode_trees, avoids allocations every call */\nvar code_tree = new Tree();\nvar lengths = new Uint8Array(288 + 32);\n\n/* ----------------------- *\n * -- utility functions -- *\n * ----------------------- */\n\n/* build extra bits and base tables */\nfunction tinf_build_bits_base(bits, base, delta, first) {\n  var i, sum;\n\n  /* build bits table */\n  for (i = 0; i < delta; ++i) bits[i] = 0;\n  for (i = 0; i < 30 - delta; ++i) bits[i + delta] = i / delta | 0;\n\n  /* build base table */\n  for (sum = first, i = 0; i < 30; ++i) {\n    base[i] = sum;\n    sum += 1 << bits[i];\n  }\n}\n\n/* build the fixed huffman trees */\nfunction tinf_build_fixed_trees(lt, dt) {\n  var i;\n\n  /* build fixed length tree */\n  for (i = 0; i < 7; ++i) lt.table[i] = 0;\n\n  lt.table[7] = 24;\n  lt.table[8] = 152;\n  lt.table[9] = 112;\n\n  for (i = 0; i < 24; ++i) lt.trans[i] = 256 + i;\n  for (i = 0; i < 144; ++i) lt.trans[24 + i] = i;\n  for (i = 0; i < 8; ++i) lt.trans[24 + 144 + i] = 280 + i;\n  for (i = 0; i < 112; ++i) lt.trans[24 + 144 + 8 + i] = 144 + i;\n\n  /* build fixed distance tree */\n  for (i = 0; i < 5; ++i) dt.table[i] = 0;\n\n  dt.table[5] = 32;\n\n  for (i = 0; i < 32; ++i) dt.trans[i] = i;\n}\n\n/* given an array of code lengths, build a tree */\nvar offs = new Uint16Array(16);\n\nfunction tinf_build_tree(t, lengths, off, num) {\n  var i, sum;\n\n  /* clear code length count table */\n  for (i = 0; i < 16; ++i) t.table[i] = 0;\n\n  /* scan symbol lengths, and sum code length counts */\n  for (i = 0; i < num; ++i) t.table[lengths[off + i]]++;\n\n  t.table[0] = 0;\n\n  /* compute offset table for distribution sort */\n  for (sum = 0, i = 0; i < 16; ++i) {\n    offs[i] = sum;\n    sum += t.table[i];\n  }\n\n  /* create code->symbol translation table (symbols sorted by code) */\n  for (i = 0; i < num; ++i) {\n    if (lengths[off + i]) t.trans[offs[lengths[off + i]]++] = i;\n  }\n}\n\n/* ---------------------- *\n * -- decode functions -- *\n * ---------------------- */\n\n/* get one bit from source stream */\nfunction tinf_getbit(d) {\n  /* check if tag is empty */\n  if (!d.bitcount--) {\n    /* load next tag */\n    d.tag = d.source[d.sourceIndex++];\n    d.bitcount = 7;\n  }\n\n  /* shift bit out of tag */\n  var bit = d.tag & 1;\n  d.tag >>>= 1;\n\n  return bit;\n}\n\n/* read a num bit value from a stream and add base */\nfunction tinf_read_bits(d, num, base) {\n  if (!num)\n    return base;\n\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n\n  var val = d.tag & (0xffff >>> (16 - num));\n  d.tag >>>= num;\n  d.bitcount -= num;\n  return val + base;\n}\n\n/* given a data stream and a tree, decode a symbol */\nfunction tinf_decode_symbol(d, t) {\n  while (d.bitcount < 24) {\n    d.tag |= d.source[d.sourceIndex++] << d.bitcount;\n    d.bitcount += 8;\n  }\n  \n  var sum = 0, cur = 0, len = 0;\n  var tag = d.tag;\n\n  /* get more bits while code value is above sum */\n  do {\n    cur = 2 * cur + (tag & 1);\n    tag >>>= 1;\n    ++len;\n\n    sum += t.table[len];\n    cur -= t.table[len];\n  } while (cur >= 0);\n  \n  d.tag = tag;\n  d.bitcount -= len;\n\n  return t.trans[sum + cur];\n}\n\n/* given a data stream, decode dynamic trees from it */\nfunction tinf_decode_trees(d, lt, dt) {\n  var hlit, hdist, hclen;\n  var i, num, length;\n\n  /* get 5 bits HLIT (257-286) */\n  hlit = tinf_read_bits(d, 5, 257);\n\n  /* get 5 bits HDIST (1-32) */\n  hdist = tinf_read_bits(d, 5, 1);\n\n  /* get 4 bits HCLEN (4-19) */\n  hclen = tinf_read_bits(d, 4, 4);\n\n  for (i = 0; i < 19; ++i) lengths[i] = 0;\n\n  /* read code lengths for code length alphabet */\n  for (i = 0; i < hclen; ++i) {\n    /* get 3 bits code length (0-7) */\n    var clen = tinf_read_bits(d, 3, 0);\n    lengths[clcidx[i]] = clen;\n  }\n\n  /* build code length tree */\n  tinf_build_tree(code_tree, lengths, 0, 19);\n\n  /* decode code lengths for the dynamic trees */\n  for (num = 0; num < hlit + hdist;) {\n    var sym = tinf_decode_symbol(d, code_tree);\n\n    switch (sym) {\n      case 16:\n        /* copy previous code length 3-6 times (read 2 bits) */\n        var prev = lengths[num - 1];\n        for (length = tinf_read_bits(d, 2, 3); length; --length) {\n          lengths[num++] = prev;\n        }\n        break;\n      case 17:\n        /* repeat code length 0 for 3-10 times (read 3 bits) */\n        for (length = tinf_read_bits(d, 3, 3); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      case 18:\n        /* repeat code length 0 for 11-138 times (read 7 bits) */\n        for (length = tinf_read_bits(d, 7, 11); length; --length) {\n          lengths[num++] = 0;\n        }\n        break;\n      default:\n        /* values 0-15 represent the actual code lengths */\n        lengths[num++] = sym;\n        break;\n    }\n  }\n\n  /* build dynamic trees */\n  tinf_build_tree(lt, lengths, 0, hlit);\n  tinf_build_tree(dt, lengths, hlit, hdist);\n}\n\n/* ----------------------------- *\n * -- block inflate functions -- *\n * ----------------------------- */\n\n/* given a stream and two trees, inflate a block of data */\nfunction tinf_inflate_block_data(d, lt, dt) {\n  while (1) {\n    var sym = tinf_decode_symbol(d, lt);\n\n    /* check for end of block */\n    if (sym === 256) {\n      return TINF_OK;\n    }\n\n    if (sym < 256) {\n      d.dest[d.destLen++] = sym;\n    } else {\n      var length, dist, offs;\n      var i;\n\n      sym -= 257;\n\n      /* possibly get more bits from length code */\n      length = tinf_read_bits(d, length_bits[sym], length_base[sym]);\n\n      dist = tinf_decode_symbol(d, dt);\n\n      /* possibly get more bits from distance code */\n      offs = d.destLen - tinf_read_bits(d, dist_bits[dist], dist_base[dist]);\n\n      /* copy match */\n      for (i = offs; i < offs + length; ++i) {\n        d.dest[d.destLen++] = d.dest[i];\n      }\n    }\n  }\n}\n\n/* inflate an uncompressed block of data */\nfunction tinf_inflate_uncompressed_block(d) {\n  var length, invlength;\n  var i;\n  \n  /* unread from bitbuffer */\n  while (d.bitcount > 8) {\n    d.sourceIndex--;\n    d.bitcount -= 8;\n  }\n\n  /* get length */\n  length = d.source[d.sourceIndex + 1];\n  length = 256 * length + d.source[d.sourceIndex];\n\n  /* get one's complement of length */\n  invlength = d.source[d.sourceIndex + 3];\n  invlength = 256 * invlength + d.source[d.sourceIndex + 2];\n\n  /* check length */\n  if (length !== (~invlength & 0x0000ffff))\n    return TINF_DATA_ERROR;\n\n  d.sourceIndex += 4;\n\n  /* copy block */\n  for (i = length; i; --i)\n    d.dest[d.destLen++] = d.source[d.sourceIndex++];\n\n  /* make sure we start next block on a byte boundary */\n  d.bitcount = 0;\n\n  return TINF_OK;\n}\n\n/* inflate stream from source to dest */\nfunction tinf_uncompress(source, dest) {\n  var d = new Data(source, dest);\n  var bfinal, btype, res;\n\n  do {\n    /* read final block flag */\n    bfinal = tinf_getbit(d);\n\n    /* read block type (2 bits) */\n    btype = tinf_read_bits(d, 2, 0);\n\n    /* decompress block */\n    switch (btype) {\n      case 0:\n        /* decompress uncompressed block */\n        res = tinf_inflate_uncompressed_block(d);\n        break;\n      case 1:\n        /* decompress block with fixed huffman trees */\n        res = tinf_inflate_block_data(d, sltree, sdtree);\n        break;\n      case 2:\n        /* decompress block with dynamic huffman trees */\n        tinf_decode_trees(d, d.ltree, d.dtree);\n        res = tinf_inflate_block_data(d, d.ltree, d.dtree);\n        break;\n      default:\n        res = TINF_DATA_ERROR;\n    }\n\n    if (res !== TINF_OK)\n      throw new Error('Data error');\n\n  } while (!bfinal);\n\n  if (d.destLen < d.dest.length) {\n    if (typeof d.dest.slice === 'function')\n      return d.dest.slice(0, d.destLen);\n    else\n      return d.dest.subarray(0, d.destLen);\n  }\n  \n  return d.dest;\n}\n\n/* -------------------- *\n * -- initialization -- *\n * -------------------- */\n\n/* build fixed huffman trees */\ntinf_build_fixed_trees(sltree, sdtree);\n\n/* build extra bits and base tables */\ntinf_build_bits_base(length_bits, length_base, 4, 3);\ntinf_build_bits_base(dist_bits, dist_base, 2, 1);\n\n/* fix a special case */\nlength_bits[28] = 0;\nlength_base[28] = 258;\n\nmodule.exports = tinf_uncompress;\n","// The Bounding Box object\n\nfunction derive(v0, v1, v2, v3, t) {\n    return Math.pow(1 - t, 3) * v0 +\n        3 * Math.pow(1 - t, 2) * t * v1 +\n        3 * (1 - t) * Math.pow(t, 2) * v2 +\n        Math.pow(t, 3) * v3;\n}\n/**\n * A bounding box is an enclosing box that describes the smallest measure within which all the points lie.\n * It is used to calculate the bounding box of a glyph or text path.\n *\n * On initialization, x1/y1/x2/y2 will be NaN. Check if the bounding box is empty using `isEmpty()`.\n *\n * @exports opentype.BoundingBox\n * @class\n * @constructor\n */\nfunction BoundingBox() {\n    this.x1 = Number.NaN;\n    this.y1 = Number.NaN;\n    this.x2 = Number.NaN;\n    this.y2 = Number.NaN;\n}\n\n/**\n * Returns true if the bounding box is empty, that is, no points have been added to the box yet.\n */\nBoundingBox.prototype.isEmpty = function() {\n    return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);\n};\n\n/**\n * Add the point to the bounding box.\n * The x1/y1/x2/y2 coordinates of the bounding box will now encompass the given point.\n * @param {number} x - The X coordinate of the point.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addPoint = function(x, y) {\n    if (typeof x === 'number') {\n        if (isNaN(this.x1) || isNaN(this.x2)) {\n            this.x1 = x;\n            this.x2 = x;\n        }\n        if (x < this.x1) {\n            this.x1 = x;\n        }\n        if (x > this.x2) {\n            this.x2 = x;\n        }\n    }\n    if (typeof y === 'number') {\n        if (isNaN(this.y1) || isNaN(this.y2)) {\n            this.y1 = y;\n            this.y2 = y;\n        }\n        if (y < this.y1) {\n            this.y1 = y;\n        }\n        if (y > this.y2) {\n            this.y2 = y;\n        }\n    }\n};\n\n/**\n * Add a X coordinate to the bounding box.\n * This extends the bounding box to include the X coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} x - The X coordinate of the point.\n */\nBoundingBox.prototype.addX = function(x) {\n    this.addPoint(x, null);\n};\n\n/**\n * Add a Y coordinate to the bounding box.\n * This extends the bounding box to include the Y coordinate.\n * This function is used internally inside of addBezier.\n * @param {number} y - The Y coordinate of the point.\n */\nBoundingBox.prototype.addY = function(y) {\n    this.addPoint(null, y);\n};\n\n/**\n * Add a Bézier curve to the bounding box.\n * This extends the bounding box to include the entire Bézier.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the first control point.\n * @param {number} y1 - The Y coordinate of the first control point.\n * @param {number} x2 - The X coordinate of the second control point.\n * @param {number} y2 - The Y coordinate of the second control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addBezier = function(x0, y0, x1, y1, x2, y2, x, y) {\n    // This code is based on http://nishiohirokazu.blogspot.com/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // and https://github.com/icons8/svg-path-bounding-box\n\n    const p0 = [x0, y0];\n    const p1 = [x1, y1];\n    const p2 = [x2, y2];\n    const p3 = [x, y];\n\n    this.addPoint(x0, y0);\n    this.addPoint(x, y);\n\n    for (let i = 0; i <= 1; i++) {\n        const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n        const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n        const c = 3 * p1[i] - 3 * p0[i];\n\n        if (a === 0) {\n            if (b === 0) continue;\n            const t = -c / b;\n            if (0 < t && t < 1) {\n                if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t));\n                if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t));\n            }\n            continue;\n        }\n\n        const b2ac = Math.pow(b, 2) - 4 * c * a;\n        if (b2ac < 0) continue;\n        const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t1 && t1 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t1));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t1));\n        }\n        const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n        if (0 < t2 && t2 < 1) {\n            if (i === 0) this.addX(derive(p0[i], p1[i], p2[i], p3[i], t2));\n            if (i === 1) this.addY(derive(p0[i], p1[i], p2[i], p3[i], t2));\n        }\n    }\n};\n\n/**\n * Add a quadratic curve to the bounding box.\n * This extends the bounding box to include the entire quadratic curve.\n * @param {number} x0 - The starting X coordinate.\n * @param {number} y0 - The starting Y coordinate.\n * @param {number} x1 - The X coordinate of the control point.\n * @param {number} y1 - The Y coordinate of the control point.\n * @param {number} x - The ending X coordinate.\n * @param {number} y - The ending Y coordinate.\n */\nBoundingBox.prototype.addQuad = function(x0, y0, x1, y1, x, y) {\n    const cp1x = x0 + 2 / 3 * (x1 - x0);\n    const cp1y = y0 + 2 / 3 * (y1 - y0);\n    const cp2x = cp1x + 1 / 3 * (x - x0);\n    const cp2y = cp1y + 1 / 3 * (y - y0);\n    this.addBezier(x0, y0, cp1x, cp1y, cp2x, cp2y, x, y);\n};\n\nexport default BoundingBox;\n","// Geometric objects\n\nimport BoundingBox from './bbox';\n\n/**\n * A bézier path containing a set of path commands similar to a SVG path.\n * Paths can be drawn on a context using `draw`.\n * @exports opentype.Path\n * @class\n * @constructor\n */\nfunction Path() {\n    this.commands = [];\n    this.fill = 'black';\n    this.stroke = null;\n    this.strokeWidth = 1;\n}\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.moveTo = function(x, y) {\n    this.commands.push({\n        type: 'M',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * @param  {number} x\n * @param  {number} y\n */\nPath.prototype.lineTo = function(x, y) {\n    this.commands.push({\n        type: 'L',\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws cubic curve\n * @function\n * curveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws cubic curve\n * @function\n * bezierCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control 1\n * @param  {number} y1 - y of control 1\n * @param  {number} x2 - x of control 2\n * @param  {number} y2 - y of control 2\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n * @see curveTo\n */\nPath.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x2, y2, x, y) {\n    this.commands.push({\n        type: 'C',\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Draws quadratic curve\n * @function\n * quadraticCurveTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\n\n/**\n * Draws quadratic curve\n * @function\n * quadTo\n * @memberof opentype.Path.prototype\n * @param  {number} x1 - x of control\n * @param  {number} y1 - y of control\n * @param  {number} x - x of path point\n * @param  {number} y - y of path point\n */\nPath.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x, y) {\n    this.commands.push({\n        type: 'Q',\n        x1: x1,\n        y1: y1,\n        x: x,\n        y: y\n    });\n};\n\n/**\n * Closes the path\n * @function closePath\n * @memberof opentype.Path.prototype\n */\n\n/**\n * Close the path\n * @function close\n * @memberof opentype.Path.prototype\n */\nPath.prototype.close = Path.prototype.closePath = function() {\n    this.commands.push({\n        type: 'Z'\n    });\n};\n\n/**\n * Add the given path or list of commands to the commands of this path.\n * @param  {Array} pathOrCommands - another opentype.Path, an opentype.BoundingBox, or an array of commands.\n */\nPath.prototype.extend = function(pathOrCommands) {\n    if (pathOrCommands.commands) {\n        pathOrCommands = pathOrCommands.commands;\n    } else if (pathOrCommands instanceof BoundingBox) {\n        const box = pathOrCommands;\n        this.moveTo(box.x1, box.y1);\n        this.lineTo(box.x2, box.y1);\n        this.lineTo(box.x2, box.y2);\n        this.lineTo(box.x1, box.y2);\n        this.close();\n        return;\n    }\n\n    Array.prototype.push.apply(this.commands, pathOrCommands);\n};\n\n/**\n * Calculate the bounding box of the path.\n * @returns {opentype.BoundingBox}\n */\nPath.prototype.getBoundingBox = function() {\n    const box = new BoundingBox();\n\n    let startX = 0;\n    let startY = 0;\n    let prevX = 0;\n    let prevY = 0;\n    for (let i = 0; i < this.commands.length; i++) {\n        const cmd = this.commands[i];\n        switch (cmd.type) {\n            case 'M':\n                box.addPoint(cmd.x, cmd.y);\n                startX = prevX = cmd.x;\n                startY = prevY = cmd.y;\n                break;\n            case 'L':\n                box.addPoint(cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Q':\n                box.addQuad(prevX, prevY, cmd.x1, cmd.y1, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'C':\n                box.addBezier(prevX, prevY, cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n                prevX = cmd.x;\n                prevY = cmd.y;\n                break;\n            case 'Z':\n                prevX = startX;\n                prevY = startY;\n                break;\n            default:\n                throw new Error('Unexpected path command ' + cmd.type);\n        }\n    }\n    if (box.isEmpty()) {\n        box.addPoint(0, 0);\n    }\n    return box;\n};\n\n/**\n * Draw the path to a 2D context.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context.\n */\nPath.prototype.draw = function(ctx) {\n    ctx.beginPath();\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            ctx.moveTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            ctx.lineTo(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            ctx.bezierCurveTo(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            ctx.quadraticCurveTo(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            ctx.closePath();\n        }\n    }\n\n    if (this.fill) {\n        ctx.fillStyle = this.fill;\n        ctx.fill();\n    }\n\n    if (this.stroke) {\n        ctx.strokeStyle = this.stroke;\n        ctx.lineWidth = this.strokeWidth;\n        ctx.stroke();\n    }\n};\n\n/**\n * Convert the Path to a string of path data instructions\n * See http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toPathData = function(decimalPlaces) {\n    decimalPlaces = decimalPlaces !== undefined ? decimalPlaces : 2;\n\n    function floatToString(v) {\n        if (Math.round(v) === v) {\n            return '' + Math.round(v);\n        } else {\n            return v.toFixed(decimalPlaces);\n        }\n    }\n\n    function packValues() {\n        let s = '';\n        for (let i = 0; i < arguments.length; i += 1) {\n            const v = arguments[i];\n            if (v >= 0 && i > 0) {\n                s += ' ';\n            }\n\n            s += floatToString(v);\n        }\n\n        return s;\n    }\n\n    let d = '';\n    for (let i = 0; i < this.commands.length; i += 1) {\n        const cmd = this.commands[i];\n        if (cmd.type === 'M') {\n            d += 'M' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'L') {\n            d += 'L' + packValues(cmd.x, cmd.y);\n        } else if (cmd.type === 'C') {\n            d += 'C' + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);\n        } else if (cmd.type === 'Q') {\n            d += 'Q' + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);\n        } else if (cmd.type === 'Z') {\n            d += 'Z';\n        }\n    }\n\n    return d;\n};\n\n/**\n * Convert the path to an SVG <path> element, as a string.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {string}\n */\nPath.prototype.toSVG = function(decimalPlaces) {\n    let svg = '<path d=\"';\n    svg += this.toPathData(decimalPlaces);\n    svg += '\"';\n    if (this.fill && this.fill !== 'black') {\n        if (this.fill === null) {\n            svg += ' fill=\"none\"';\n        } else {\n            svg += ' fill=\"' + this.fill + '\"';\n        }\n    }\n\n    if (this.stroke) {\n        svg += ' stroke=\"' + this.stroke + '\" stroke-width=\"' + this.strokeWidth + '\"';\n    }\n\n    svg += '/>';\n    return svg;\n};\n\n/**\n * Convert the path to a DOM element.\n * @param  {number} [decimalPlaces=2] - The amount of decimal places for floating-point values\n * @return {SVGPathElement}\n */\nPath.prototype.toDOMElement = function(decimalPlaces) {\n    const temporaryPath = this.toPathData(decimalPlaces);\n    const newPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n\n    newPath.setAttribute('d', temporaryPath);\n\n    return newPath;\n};\n\nexport default Path;\n","// Run-time checking of preconditions.\n\nfunction fail(message) {\n    throw new Error(message);\n}\n\n// Precondition function that checks if the given predicate is true.\n// If not, it will throw an error.\nfunction argument(predicate, message) {\n    if (!predicate) {\n        fail(message);\n    }\n}\n\nexport { fail, argument, argument as assert };\nexport default { fail, argument, assert: argument };\n","// Data types used in the OpenType font file.\n// All OpenType fonts use Motorola-style byte ordering (Big Endian)\n\nimport check from './check';\n\nconst LIMIT16 = 32768; // The limit at which a 16-bit number switches signs == 2^15\nconst LIMIT32 = 2147483648; // The limit at which a 32-bit number switches signs == 2 ^ 31\n\n/**\n * @exports opentype.decode\n * @class\n */\nconst decode = {};\n/**\n * @exports opentype.encode\n * @class\n */\nconst encode = {};\n/**\n * @exports opentype.sizeOf\n * @class\n */\nconst sizeOf = {};\n\n// Return a function that always returns the same value.\nfunction constant(v) {\n    return function() {\n        return v;\n    };\n}\n\n// OpenType data types //////////////////////////////////////////////////////\n\n/**\n * Convert an 8-bit unsigned integer to a list of 1 byte.\n * @param {number}\n * @returns {Array}\n */\nencode.BYTE = function(v) {\n    check.argument(v >= 0 && v <= 255, 'Byte value should be between 0 and 255.');\n    return [v];\n};\n/**\n * @constant\n * @type {number}\n */\nsizeOf.BYTE = constant(1);\n\n/**\n * Convert a 8-bit signed integer to a list of 1 byte.\n * @param {string}\n * @returns {Array}\n */\nencode.CHAR = function(v) {\n    return [v.charCodeAt(0)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.CHAR = constant(1);\n\n/**\n * Convert an ASCII string to a list of bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.CHARARRAY = function(v) {\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        b[i] = v.charCodeAt(i);\n    }\n\n    return b;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARARRAY = function(v) {\n    return v.length;\n};\n\n/**\n * Convert a 16-bit unsigned integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.USHORT = function(v) {\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.USHORT = constant(2);\n\n/**\n * Convert a 16-bit signed integer to a list of 2 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.SHORT = function(v) {\n    // Two's complement\n    if (v >= LIMIT16) {\n        v = -(2 * LIMIT16 - v);\n    }\n\n    return [(v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.SHORT = constant(2);\n\n/**\n * Convert a 24-bit unsigned integer to a list of 3 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.UINT24 = function(v) {\n    return [(v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.UINT24 = constant(3);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.ULONG = function(v) {\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.ULONG = constant(4);\n\n/**\n * Convert a 32-bit unsigned integer to a list of 4 bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.LONG = function(v) {\n    // Two's complement\n    if (v >= LIMIT32) {\n        v = -(2 * LIMIT32 - v);\n    }\n\n    return [(v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONG = constant(4);\n\nencode.FIXED = encode.ULONG;\nsizeOf.FIXED = sizeOf.ULONG;\n\nencode.FWORD = encode.SHORT;\nsizeOf.FWORD = sizeOf.SHORT;\n\nencode.UFWORD = encode.USHORT;\nsizeOf.UFWORD = sizeOf.USHORT;\n\n/**\n * Convert a 32-bit Apple Mac timestamp integer to a list of 8 bytes, 64-bit timestamp.\n * @param {number}\n * @returns {Array}\n */\nencode.LONGDATETIME = function(v) {\n    return [0, 0, 0, 0, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.LONGDATETIME = constant(8);\n\n/**\n * Convert a 4-char tag to a list of 4 bytes.\n * @param {string}\n * @returns {Array}\n */\nencode.TAG = function(v) {\n    check.argument(v.length === 4, 'Tag should be exactly 4 ASCII characters.');\n    return [v.charCodeAt(0),\n            v.charCodeAt(1),\n            v.charCodeAt(2),\n            v.charCodeAt(3)];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.TAG = constant(4);\n\n// CFF data types ///////////////////////////////////////////////////////////\n\nencode.Card8 = encode.BYTE;\nsizeOf.Card8 = sizeOf.BYTE;\n\nencode.Card16 = encode.USHORT;\nsizeOf.Card16 = sizeOf.USHORT;\n\nencode.OffSize = encode.BYTE;\nsizeOf.OffSize = sizeOf.BYTE;\n\nencode.SID = encode.USHORT;\nsizeOf.SID = sizeOf.USHORT;\n\n// Convert a numeric operand or charstring number to a variable-size list of bytes.\n/**\n * Convert a numeric operand or charstring number to a variable-size list of bytes.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER = function(v) {\n    if (v >= -107 && v <= 107) {\n        return [v + 139];\n    } else if (v >= 108 && v <= 1131) {\n        v = v - 108;\n        return [(v >> 8) + 247, v & 0xFF];\n    } else if (v >= -1131 && v <= -108) {\n        v = -v - 108;\n        return [(v >> 8) + 251, v & 0xFF];\n    } else if (v >= -32768 && v <= 32767) {\n        return encode.NUMBER16(v);\n    } else {\n        return encode.NUMBER32(v);\n    }\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.NUMBER = function(v) {\n    return encode.NUMBER(v).length;\n};\n\n/**\n * Convert a signed number between -32768 and +32767 to a three-byte value.\n * This ensures we always use three bytes, but is not the most compact format.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER16 = function(v) {\n    return [28, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER16 = constant(3);\n\n/**\n * Convert a signed number between -(2^31) and +(2^31-1) to a five-byte value.\n * This is useful if you want to be sure you always use four bytes,\n * at the expense of wasting a few bytes for smaller numbers.\n * @param {number}\n * @returns {Array}\n */\nencode.NUMBER32 = function(v) {\n    return [29, (v >> 24) & 0xFF, (v >> 16) & 0xFF, (v >> 8) & 0xFF, v & 0xFF];\n};\n\n/**\n * @constant\n * @type {number}\n */\nsizeOf.NUMBER32 = constant(5);\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.REAL = function(v) {\n    let value = v.toString();\n\n    // Some numbers use an epsilon to encode the value. (e.g. JavaScript will store 0.0000001 as 1e-7)\n    // This code converts it back to a number without the epsilon.\n    const m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n    if (m) {\n        const epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(v * epsilon) / epsilon).toString();\n    }\n\n    let nibbles = '';\n    for (let i = 0, ii = value.length; i < ii; i += 1) {\n        const c = value[i];\n        if (c === 'e') {\n            nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (c === '.') {\n            nibbles += 'a';\n        } else if (c === '-') {\n            nibbles += 'e';\n        } else {\n            nibbles += c;\n        }\n    }\n\n    nibbles += (nibbles.length & 1) ? 'f' : 'ff';\n    const out = [30];\n    for (let i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n    }\n\n    return out;\n};\n\n/**\n * @param {number}\n * @returns {number}\n */\nsizeOf.REAL = function(v) {\n    return encode.REAL(v).length;\n};\n\nencode.NAME = encode.CHARARRAY;\nsizeOf.NAME = sizeOf.CHARARRAY;\n\nencode.STRING = encode.CHARARRAY;\nsizeOf.STRING = sizeOf.CHARARRAY;\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF8 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes;\n    for (let j = 0; j < numChars; j++, offset += 1) {\n        codePoints[j] = data.getUint8(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * @param {DataView} data\n * @param {number} offset\n * @param {number} numBytes\n * @returns {string}\n */\ndecode.UTF16 = function(data, offset, numBytes) {\n    const codePoints = [];\n    const numChars = numBytes / 2;\n    for (let j = 0; j < numChars; j++, offset += 2) {\n        codePoints[j] = data.getUint16(offset);\n    }\n\n    return String.fromCharCode.apply(null, codePoints);\n};\n\n/**\n * Convert a JavaScript string to UTF16-BE.\n * @param {string}\n * @returns {Array}\n */\nencode.UTF16 = function(v) {\n    const b = [];\n    for (let i = 0; i < v.length; i += 1) {\n        const codepoint = v.charCodeAt(i);\n        b[b.length] = (codepoint >> 8) & 0xFF;\n        b[b.length] = codepoint & 0xFF;\n    }\n\n    return b;\n};\n\n/**\n * @param {string}\n * @returns {number}\n */\nsizeOf.UTF16 = function(v) {\n    return v.length * 2;\n};\n\n// Data for converting old eight-bit Macintosh encodings to Unicode.\n// This representation is optimized for decoding; encoding is slower\n// and needs more memory. The assumption is that all opentype.js users\n// want to open fonts, but saving a font will be comparatively rare\n// so it can be more expensive. Keyed by IANA character set name.\n//\n// Python script for generating these strings:\n//\n//     s = u''.join([chr(c).decode('mac_greek') for c in range(128, 256)])\n//     print(s.encode('utf-8'))\n/**\n * @private\n */\nconst eightBitMacEncodings = {\n    'x-mac-croatian':  // Python: 'mac_croatian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø' +\n    '¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ',\n    'x-mac-cyrillic':  // Python: 'mac_cyrillic'\n    'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњ' +\n    'јЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю',\n    'x-mac-gaelic': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæø' +\n    'ṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ',\n    'x-mac-greek':  // Python: 'mac_greek'\n    'Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩ' +\n    'άΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ\\u00AD',\n    'x-mac-icelandic':  // Python: 'mac_iceland'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-inuit': // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT\n    'ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗ' +\n    'ᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł',\n    'x-mac-ce':  // Python: 'mac_latin2'\n    'ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅ' +\n    'ņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ',\n    macintosh:  // Python: 'mac_roman'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-romanian':  // Python: 'mac_romanian'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ',\n    'x-mac-turkish':  // Python: 'mac_turkish'\n    'ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø' +\n    '¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ'\n};\n\n/**\n * Decodes an old-style Macintosh string. Returns either a Unicode JavaScript\n * string, or 'undefined' if the encoding is unsupported. For example, we do\n * not support Chinese, Japanese or Korean because these would need large\n * mapping tables.\n * @param {DataView} dataView\n * @param {number} offset\n * @param {number} dataLength\n * @param {string} encoding\n * @returns {string}\n */\ndecode.MACSTRING = function(dataView, offset, dataLength, encoding) {\n    const table = eightBitMacEncodings[encoding];\n    if (table === undefined) {\n        return undefined;\n    }\n\n    let result = '';\n    for (let i = 0; i < dataLength; i++) {\n        const c = dataView.getUint8(offset + i);\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c <= 0x7F) {\n            result += String.fromCharCode(c);\n        } else {\n            result += table[c & 0x7F];\n        }\n    }\n\n    return result;\n};\n\n// Helper function for encode.MACSTRING. Returns a dictionary for mapping\n// Unicode character codes to their 8-bit MacOS equivalent. This table\n// is not exactly a super cheap data structure, but we do not care because\n// encoding Macintosh strings is only rarely needed in typical applications.\nconst macEncodingTableCache = typeof WeakMap === 'function' && new WeakMap();\nlet macEncodingCacheKeys;\nconst getMacEncodingTable = function (encoding) {\n    // Since we use encoding as a cache key for WeakMap, it has to be\n    // a String object and not a literal. And at least on NodeJS 2.10.1,\n    // WeakMap requires that the same String instance is passed for cache hits.\n    if (!macEncodingCacheKeys) {\n        macEncodingCacheKeys = {};\n        for (let e in eightBitMacEncodings) {\n            /*jshint -W053 */  // Suppress \"Do not use String as a constructor.\"\n            macEncodingCacheKeys[e] = new String(e);\n        }\n    }\n\n    const cacheKey = macEncodingCacheKeys[encoding];\n    if (cacheKey === undefined) {\n        return undefined;\n    }\n\n    // We can't do \"if (cache.has(key)) {return cache.get(key)}\" here:\n    // since garbage collection may run at any time, it could also kick in\n    // between the calls to cache.has() and cache.get(). In that case,\n    // we would return 'undefined' even though we do support the encoding.\n    if (macEncodingTableCache) {\n        const cachedTable = macEncodingTableCache.get(cacheKey);\n        if (cachedTable !== undefined) {\n            return cachedTable;\n        }\n    }\n\n    const decodingTable = eightBitMacEncodings[encoding];\n    if (decodingTable === undefined) {\n        return undefined;\n    }\n\n    const encodingTable = {};\n    for (let i = 0; i < decodingTable.length; i++) {\n        encodingTable[decodingTable.charCodeAt(i)] = i + 0x80;\n    }\n\n    if (macEncodingTableCache) {\n        macEncodingTableCache.set(cacheKey, encodingTable);\n    }\n\n    return encodingTable;\n};\n\n/**\n * Encodes an old-style Macintosh string. Returns a byte array upon success.\n * If the requested encoding is unsupported, or if the input string contains\n * a character that cannot be expressed in the encoding, the function returns\n * 'undefined'.\n * @param {string} str\n * @param {string} encoding\n * @returns {Array}\n */\nencode.MACSTRING = function(str, encoding) {\n    const table = getMacEncodingTable(encoding);\n    if (table === undefined) {\n        return undefined;\n    }\n\n    const result = [];\n    for (let i = 0; i < str.length; i++) {\n        let c = str.charCodeAt(i);\n\n        // In all eight-bit Mac encodings, the characters 0x00..0x7F are\n        // mapped to U+0000..U+007F; we only need to look up the others.\n        if (c >= 0x80) {\n            c = table[c];\n            if (c === undefined) {\n                // str contains a Unicode character that cannot be encoded\n                // in the requested encoding.\n                return undefined;\n            }\n        }\n        result[i] = c;\n        // result.push(c);\n    }\n\n    return result;\n};\n\n/**\n * @param {string} str\n * @param {string} encoding\n * @returns {number}\n */\nsizeOf.MACSTRING = function(str, encoding) {\n    const b = encode.MACSTRING(str, encoding);\n    if (b !== undefined) {\n        return b.length;\n    } else {\n        return 0;\n    }\n};\n\n// Helper for encode.VARDELTAS\nfunction isByteEncodable(value) {\n    return value >= -128 && value <= 127;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsZeroes(deltas, pos, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    while (pos < numDeltas && runLength < 64 && deltas[pos] === 0) {\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x80 | (runLength - 1));\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsBytes(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n        if (!isByteEncodable(value)) {\n            break;\n        }\n\n        // Within a byte-encoded run of deltas, a single zero is best\n        // stored literally as 0x00 value. However, if we have two or\n        // more zeroes in a sequence, it is better to start a new run.\n        // Fore example, the sequence of deltas [15, 15, 0, 15, 15]\n        // becomes 6 bytes (04 0F 0F 00 0F 0F) when storing the zero\n        // within the current run, but 7 bytes (01 0F 0F 80 01 0F 0F)\n        // when starting a new run.\n        if (value === 0 && pos + 1 < numDeltas && deltas[pos + 1] === 0) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(runLength - 1);\n    for (let i = offset; i < pos; ++i) {\n        result.push((deltas[i] + 256) & 0xff);\n    }\n    return pos;\n}\n\n// Helper for encode.VARDELTAS\nfunction encodeVarDeltaRunAsWords(deltas, offset, result) {\n    let runLength = 0;\n    const numDeltas = deltas.length;\n    let pos = offset;\n    while (pos < numDeltas && runLength < 64) {\n        const value = deltas[pos];\n\n        // Within a word-encoded run of deltas, it is easiest to start\n        // a new run (with a different encoding) whenever we encounter\n        // a zero value. For example, the sequence [0x6666, 0, 0x7777]\n        // needs 7 bytes when storing the zero inside the current run\n        // (42 66 66 00 00 77 77), and equally 7 bytes when starting a\n        // new run (40 66 66 80 40 77 77).\n        if (value === 0) {\n            break;\n        }\n\n        // Within a word-encoded run of deltas, a single value in the\n        // range (-128..127) should be encoded within the current run\n        // because it is more compact. For example, the sequence\n        // [0x6666, 2, 0x7777] becomes 7 bytes when storing the value\n        // literally (42 66 66 00 02 77 77), but 8 bytes when starting\n        // a new run (40 66 66 00 02 40 77 77).\n        if (isByteEncodable(value) && pos + 1 < numDeltas && isByteEncodable(deltas[pos + 1])) {\n            break;\n        }\n\n        ++pos;\n        ++runLength;\n    }\n    result.push(0x40 | (runLength - 1));\n    for (let i = offset; i < pos; ++i) {\n        const val = deltas[i];\n        result.push(((val + 0x10000) >> 8) & 0xff, (val + 0x100) & 0xff);\n    }\n    return pos;\n}\n\n/**\n * Encode a list of variation adjustment deltas.\n *\n * Variation adjustment deltas are used in ‘gvar’ and ‘cvar’ tables.\n * They indicate how points (in ‘gvar’) or values (in ‘cvar’) get adjusted\n * when generating instances of variation fonts.\n *\n * @see https://www.microsoft.com/typography/otspec/gvar.htm\n * @see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6gvar.html\n * @param {Array}\n * @return {Array}\n */\nencode.VARDELTAS = function(deltas) {\n    let pos = 0;\n    const result = [];\n    while (pos < deltas.length) {\n        const value = deltas[pos];\n        if (value === 0) {\n            pos = encodeVarDeltaRunAsZeroes(deltas, pos, result);\n        } else if (value >= -128 && value <= 127) {\n            pos = encodeVarDeltaRunAsBytes(deltas, pos, result);\n        } else {\n            pos = encodeVarDeltaRunAsWords(deltas, pos, result);\n        }\n    }\n    return result;\n};\n\n// Convert a list of values to a CFF INDEX structure.\n// The values should be objects containing name / type / value.\n/**\n * @param {Array} l\n * @returns {Array}\n */\nencode.INDEX = function(l) {\n    //var offset, offsets, offsetEncoder, encodedOffsets, encodedOffset, data,\n    //    i, v;\n    // Because we have to know which data type to use to encode the offsets,\n    // we have to go through the values twice: once to encode the data and\n    // calculate the offsets, then again to encode the offsets using the fitting data type.\n    let offset = 1; // First offset is always 1.\n    const offsets = [offset];\n    const data = [];\n    for (let i = 0; i < l.length; i += 1) {\n        const v = encode.OBJECT(l[i]);\n        Array.prototype.push.apply(data, v);\n        offset += v.length;\n        offsets.push(offset);\n    }\n\n    if (data.length === 0) {\n        return [0, 0];\n    }\n\n    const encodedOffsets = [];\n    const offSize = (1 + Math.floor(Math.log(offset) / Math.log(2)) / 8) | 0;\n    const offsetEncoder = [undefined, encode.BYTE, encode.USHORT, encode.UINT24, encode.ULONG][offSize];\n    for (let i = 0; i < offsets.length; i += 1) {\n        const encodedOffset = offsetEncoder(offsets[i]);\n        Array.prototype.push.apply(encodedOffsets, encodedOffset);\n    }\n\n    return Array.prototype.concat(encode.Card16(l.length),\n                           encode.OffSize(offSize),\n                           encodedOffsets,\n                           data);\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.INDEX = function(v) {\n    return encode.INDEX(v).length;\n};\n\n/**\n * Convert an object to a CFF DICT structure.\n * The keys should be numeric.\n * The values should be objects containing name / type / value.\n * @param {Object} m\n * @returns {Array}\n */\nencode.DICT = function(m) {\n    let d = [];\n    const keys = Object.keys(m);\n    const length = keys.length;\n\n    for (let i = 0; i < length; i += 1) {\n        // Object.keys() return string keys, but our keys are always numeric.\n        const k = parseInt(keys[i], 0);\n        const v = m[k];\n        // Value comes before the key.\n        d = d.concat(encode.OPERAND(v.value, v.type));\n        d = d.concat(encode.OPERATOR(k));\n    }\n\n    return d;\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.DICT = function(m) {\n    return encode.DICT(m).length;\n};\n\n/**\n * @param {number}\n * @returns {Array}\n */\nencode.OPERATOR = function(v) {\n    if (v < 1200) {\n        return [v];\n    } else {\n        return [12, v - 1200];\n    }\n};\n\n/**\n * @param {Array} v\n * @param {string}\n * @returns {Array}\n */\nencode.OPERAND = function(v, type) {\n    let d = [];\n    if (Array.isArray(type)) {\n        for (let i = 0; i < type.length; i += 1) {\n            check.argument(v.length === type.length, 'Not enough arguments given for type' + type);\n            d = d.concat(encode.OPERAND(v[i], type[i]));\n        }\n    } else {\n        if (type === 'SID') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'offset') {\n            // We make it easy for ourselves and always encode offsets as\n            // 4 bytes. This makes offset calculation for the top dict easier.\n            d = d.concat(encode.NUMBER32(v));\n        } else if (type === 'number') {\n            d = d.concat(encode.NUMBER(v));\n        } else if (type === 'real') {\n            d = d.concat(encode.REAL(v));\n        } else {\n            throw new Error('Unknown operand type ' + type);\n            // FIXME Add support for booleans\n        }\n    }\n\n    return d;\n};\n\nencode.OP = encode.BYTE;\nsizeOf.OP = sizeOf.BYTE;\n\n// memoize charstring encoding using WeakMap if available\nconst wmm = typeof WeakMap === 'function' && new WeakMap();\n\n/**\n * Convert a list of CharString operations to bytes.\n * @param {Array}\n * @returns {Array}\n */\nencode.CHARSTRING = function(ops) {\n    // See encode.MACSTRING for why we don't do \"if (wmm && wmm.has(ops))\".\n    if (wmm) {\n        const cachedValue = wmm.get(ops);\n        if (cachedValue !== undefined) {\n            return cachedValue;\n        }\n    }\n\n    let d = [];\n    const length = ops.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const op = ops[i];\n        d = d.concat(encode[op.type](op.value));\n    }\n\n    if (wmm) {\n        wmm.set(ops, d);\n    }\n\n    return d;\n};\n\n/**\n * @param {Array}\n * @returns {number}\n */\nsizeOf.CHARSTRING = function(ops) {\n    return encode.CHARSTRING(ops).length;\n};\n\n// Utility functions ////////////////////////////////////////////////////////\n\n/**\n * Convert an object containing name / type / value to bytes.\n * @param {Object}\n * @returns {Array}\n */\nencode.OBJECT = function(v) {\n    const encodingFunction = encode[v.type];\n    check.argument(encodingFunction !== undefined, 'No encoding function for type ' + v.type);\n    return encodingFunction(v.value);\n};\n\n/**\n * @param {Object}\n * @returns {number}\n */\nsizeOf.OBJECT = function(v) {\n    const sizeOfFunction = sizeOf[v.type];\n    check.argument(sizeOfFunction !== undefined, 'No sizeOf function for type ' + v.type);\n    return sizeOfFunction(v.value);\n};\n\n/**\n * Convert a table object to bytes.\n * A table contains a list of fields containing the metadata (name, type and default value).\n * The table itself has the field values set as attributes.\n * @param {opentype.Table}\n * @returns {Array}\n */\nencode.TABLE = function(table) {\n    let d = [];\n    const length = table.fields.length;\n    const subtables = [];\n    const subtableOffsets = [];\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const encodingFunction = encode[field.type];\n        check.argument(encodingFunction !== undefined, 'No encoding function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        const bytes = encodingFunction(value);\n\n        if (field.type === 'TABLE') {\n            subtableOffsets.push(d.length);\n            d = d.concat([0, 0]);\n            subtables.push(bytes);\n        } else {\n            d = d.concat(bytes);\n        }\n    }\n\n    for (let i = 0; i < subtables.length; i += 1) {\n        const o = subtableOffsets[i];\n        const offset = d.length;\n        check.argument(offset < 65536, 'Table ' + table.tableName + ' too big.');\n        d[o] = offset >> 8;\n        d[o + 1] = offset & 0xff;\n        d = d.concat(subtables[i]);\n    }\n\n    return d;\n};\n\n/**\n * @param {opentype.Table}\n * @returns {number}\n */\nsizeOf.TABLE = function(table) {\n    let numBytes = 0;\n    const length = table.fields.length;\n\n    for (let i = 0; i < length; i += 1) {\n        const field = table.fields[i];\n        const sizeOfFunction = sizeOf[field.type];\n        check.argument(sizeOfFunction !== undefined, 'No sizeOf function for field type ' + field.type + ' (' + field.name + ')');\n        let value = table[field.name];\n        if (value === undefined) {\n            value = field.value;\n        }\n\n        numBytes += sizeOfFunction(value);\n\n        // Subtables take 2 more bytes for offsets.\n        if (field.type === 'TABLE') {\n            numBytes += 2;\n        }\n    }\n\n    return numBytes;\n};\n\nencode.RECORD = encode.TABLE;\nsizeOf.RECORD = sizeOf.TABLE;\n\n// Merge in a list of bytes.\nencode.LITERAL = function(v) {\n    return v;\n};\n\nsizeOf.LITERAL = function(v) {\n    return v.length;\n};\n\nexport { decode, encode, sizeOf };\n","// Table metadata\n\nimport check from './check';\nimport { encode, sizeOf } from './types';\n\n/**\n * @exports opentype.Table\n * @class\n * @param {string} tableName\n * @param {Array} fields\n * @param {Object} options\n * @constructor\n */\nfunction Table(tableName, fields, options) {\n    for (let i = 0; i < fields.length; i += 1) {\n        const field = fields[i];\n        this[field.name] = field.value;\n    }\n\n    this.tableName = tableName;\n    this.fields = fields;\n    if (options) {\n        const optionKeys = Object.keys(options);\n        for (let i = 0; i < optionKeys.length; i += 1) {\n            const k = optionKeys[i];\n            const v = options[k];\n            if (this[k] !== undefined) {\n                this[k] = v;\n            }\n        }\n    }\n}\n\n/**\n * Encodes the table and returns an array of bytes\n * @return {Array}\n */\nTable.prototype.encode = function() {\n    return encode.TABLE(this);\n};\n\n/**\n * Get the size of the table.\n * @return {number}\n */\nTable.prototype.sizeOf = function() {\n    return sizeOf.TABLE(this);\n};\n\n/**\n * @private\n */\nfunction ushortList(itemName, list, count) {\n    if (count === undefined) {\n        count = list.length;\n    }\n    const fields = new Array(list.length + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < list.length; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'USHORT', value: list[i]};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction tableList(itemName, records, itemCallback) {\n    const count = records.length;\n    const fields = new Array(count + 1);\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields[i + 1] = {name: itemName + i, type: 'TABLE', value: itemCallback(records[i], i)};\n    }\n    return fields;\n}\n\n/**\n * @private\n */\nfunction recordList(itemName, records, itemCallback) {\n    const count = records.length;\n    let fields = [];\n    fields[0] = {name: itemName + 'Count', type: 'USHORT', value: count};\n    for (let i = 0; i < count; i++) {\n        fields = fields.concat(itemCallback(records[i], i));\n    }\n    return fields;\n}\n\n// Common Layout Tables\n\n/**\n * @exports opentype.Coverage\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction Coverage(coverageTable) {\n    if (coverageTable.format === 1) {\n        Table.call(this, 'coverageTable',\n            [{name: 'coverageFormat', type: 'USHORT', value: 1}]\n            .concat(ushortList('glyph', coverageTable.glyphs))\n        );\n    } else {\n        check.assert(false, 'Can\\'t create coverage table format 2 yet.');\n    }\n}\nCoverage.prototype = Object.create(Table.prototype);\nCoverage.prototype.constructor = Coverage;\n\nfunction ScriptList(scriptListTable) {\n    Table.call(this, 'scriptListTable',\n        recordList('scriptRecord', scriptListTable, function(scriptRecord, i) {\n            const script = scriptRecord.script;\n            let defaultLangSys = script.defaultLangSys;\n            check.assert(!!defaultLangSys, 'Unable to write GSUB: script ' + scriptRecord.tag + ' has no default language system.');\n            return [\n                {name: 'scriptTag' + i, type: 'TAG', value: scriptRecord.tag},\n                {name: 'script' + i, type: 'TABLE', value: new Table('scriptTable', [\n                    {name: 'defaultLangSys', type: 'TABLE', value: new Table('defaultLangSys', [\n                        {name: 'lookupOrder', type: 'USHORT', value: 0},\n                        {name: 'reqFeatureIndex', type: 'USHORT', value: defaultLangSys.reqFeatureIndex}]\n                        .concat(ushortList('featureIndex', defaultLangSys.featureIndexes)))}\n                    ].concat(recordList('langSys', script.langSysRecords, function(langSysRecord, i) {\n                        const langSys = langSysRecord.langSys;\n                        return [\n                            {name: 'langSysTag' + i, type: 'TAG', value: langSysRecord.tag},\n                            {name: 'langSys' + i, type: 'TABLE', value: new Table('langSys', [\n                                {name: 'lookupOrder', type: 'USHORT', value: 0},\n                                {name: 'reqFeatureIndex', type: 'USHORT', value: langSys.reqFeatureIndex}\n                                ].concat(ushortList('featureIndex', langSys.featureIndexes)))}\n                        ];\n                    })))}\n            ];\n        })\n    );\n}\nScriptList.prototype = Object.create(Table.prototype);\nScriptList.prototype.constructor = ScriptList;\n\n/**\n * @exports opentype.FeatureList\n * @class\n * @param {opentype.Table}\n * @constructor\n * @extends opentype.Table\n */\nfunction FeatureList(featureListTable) {\n    Table.call(this, 'featureListTable',\n        recordList('featureRecord', featureListTable, function(featureRecord, i) {\n            const feature = featureRecord.feature;\n            return [\n                {name: 'featureTag' + i, type: 'TAG', value: featureRecord.tag},\n                {name: 'feature' + i, type: 'TABLE', value: new Table('featureTable', [\n                    {name: 'featureParams', type: 'USHORT', value: feature.featureParams},\n                    ].concat(ushortList('lookupListIndex', feature.lookupListIndexes)))}\n            ];\n        })\n    );\n}\nFeatureList.prototype = Object.create(Table.prototype);\nFeatureList.prototype.constructor = FeatureList;\n\n/**\n * @exports opentype.LookupList\n * @class\n * @param {opentype.Table}\n * @param {Object}\n * @constructor\n * @extends opentype.Table\n */\nfunction LookupList(lookupListTable, subtableMakers) {\n    Table.call(this, 'lookupListTable', tableList('lookup', lookupListTable, function(lookupTable) {\n        let subtableCallback = subtableMakers[lookupTable.lookupType];\n        check.assert(!!subtableCallback, 'Unable to write GSUB lookup type ' + lookupTable.lookupType + ' tables.');\n        return new Table('lookupTable', [\n            {name: 'lookupType', type: 'USHORT', value: lookupTable.lookupType},\n            {name: 'lookupFlag', type: 'USHORT', value: lookupTable.lookupFlag}\n        ].concat(tableList('subtable', lookupTable.subtables, subtableCallback)));\n    }));\n}\nLookupList.prototype = Object.create(Table.prototype);\nLookupList.prototype.constructor = LookupList;\n\n// Record = same as Table, but inlined (a Table has an offset and its data is further in the stream)\n// Don't use offsets inside Records (probable bug), only in Tables.\nexport default {\n    Table,\n    Record: Table,\n    Coverage,\n    ScriptList,\n    FeatureList,\n    LookupList,\n    ushortList,\n    tableList,\n    recordList,\n};\n","// Parsing utility functions\n\nimport check from './check';\n\n// Retrieve an unsigned byte from the DataView.\nfunction getByte(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\n// Retrieve an unsigned 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getUShort(dataView, offset) {\n    return dataView.getUint16(offset, false);\n}\n\n// Retrieve a signed 16-bit short from the DataView.\n// The value is stored in big endian.\nfunction getShort(dataView, offset) {\n    return dataView.getInt16(offset, false);\n}\n\n// Retrieve an unsigned 32-bit long from the DataView.\n// The value is stored in big endian.\nfunction getULong(dataView, offset) {\n    return dataView.getUint32(offset, false);\n}\n\n// Retrieve a 32-bit signed fixed-point number (16.16) from the DataView.\n// The value is stored in big endian.\nfunction getFixed(dataView, offset) {\n    const decimal = dataView.getInt16(offset, false);\n    const fraction = dataView.getUint16(offset + 2, false);\n    return decimal + fraction / 65535;\n}\n\n// Retrieve a 4-character tag from the DataView.\n// Tags are used to identify tables.\nfunction getTag(dataView, offset) {\n    let tag = '';\n    for (let i = offset; i < offset + 4; i += 1) {\n        tag += String.fromCharCode(dataView.getInt8(i));\n    }\n\n    return tag;\n}\n\n// Retrieve an offset from the DataView.\n// Offsets are 1 to 4 bytes in length, depending on the offSize argument.\nfunction getOffset(dataView, offset, offSize) {\n    let v = 0;\n    for (let i = 0; i < offSize; i += 1) {\n        v <<= 8;\n        v += dataView.getUint8(offset + i);\n    }\n\n    return v;\n}\n\n// Retrieve a number of bytes from start offset to the end offset from the DataView.\nfunction getBytes(dataView, startOffset, endOffset) {\n    const bytes = [];\n    for (let i = startOffset; i < endOffset; i += 1) {\n        bytes.push(dataView.getUint8(i));\n    }\n\n    return bytes;\n}\n\n// Convert the list of bytes to a string.\nfunction bytesToString(bytes) {\n    let s = '';\n    for (let i = 0; i < bytes.length; i += 1) {\n        s += String.fromCharCode(bytes[i]);\n    }\n\n    return s;\n}\n\nconst typeOffsets = {\n    byte: 1,\n    uShort: 2,\n    short: 2,\n    uLong: 4,\n    fixed: 4,\n    longDateTime: 8,\n    tag: 4\n};\n\n// A stateful parser that changes the offset whenever a value is retrieved.\n// The data is a DataView.\nfunction Parser(data, offset) {\n    this.data = data;\n    this.offset = offset;\n    this.relativeOffset = 0;\n}\n\nParser.prototype.parseByte = function() {\n    const v = this.data.getUint8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseChar = function() {\n    const v = this.data.getInt8(this.offset + this.relativeOffset);\n    this.relativeOffset += 1;\n    return v;\n};\n\nParser.prototype.parseCard8 = Parser.prototype.parseByte;\n\nParser.prototype.parseUShort = function() {\n    const v = this.data.getUint16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseCard16 = Parser.prototype.parseUShort;\nParser.prototype.parseSID = Parser.prototype.parseUShort;\nParser.prototype.parseOffset16 = Parser.prototype.parseUShort;\n\nParser.prototype.parseShort = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset);\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseF2Dot14 = function() {\n    const v = this.data.getInt16(this.offset + this.relativeOffset) / 16384;\n    this.relativeOffset += 2;\n    return v;\n};\n\nParser.prototype.parseULong = function() {\n    const v = getULong(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseOffset32 = Parser.prototype.parseULong;\n\nParser.prototype.parseFixed = function() {\n    const v = getFixed(this.data, this.offset + this.relativeOffset);\n    this.relativeOffset += 4;\n    return v;\n};\n\nParser.prototype.parseString = function(length) {\n    const dataView = this.data;\n    const offset = this.offset + this.relativeOffset;\n    let string = '';\n    this.relativeOffset += length;\n    for (let i = 0; i < length; i++) {\n        string += String.fromCharCode(dataView.getUint8(offset + i));\n    }\n\n    return string;\n};\n\nParser.prototype.parseTag = function() {\n    return this.parseString(4);\n};\n\n// LONGDATETIME is a 64-bit integer.\n// JavaScript and unix timestamps traditionally use 32 bits, so we\n// only take the last 32 bits.\n// + Since until 2038 those bits will be filled by zeros we can ignore them.\nParser.prototype.parseLongDateTime = function() {\n    let v = getULong(this.data, this.offset + this.relativeOffset + 4);\n    // Subtract seconds between 01/01/1904 and 01/01/1970\n    // to convert Apple Mac timestamp to Standard Unix timestamp\n    v -= 2082844800;\n    this.relativeOffset += 8;\n    return v;\n};\n\nParser.prototype.parseVersion = function(minorBase) {\n    const major = getUShort(this.data, this.offset + this.relativeOffset);\n\n    // How to interpret the minor version is very vague in the spec. 0x5000 is 5, 0x1000 is 1\n    // Default returns the correct number if minor = 0xN000 where N is 0-9\n    // Set minorBase to 1 for tables that use minor = N where N is 0-9\n    const minor = getUShort(this.data, this.offset + this.relativeOffset + 2);\n    this.relativeOffset += 4;\n    if (minorBase === undefined) minorBase = 0x1000;\n    return major + minor / minorBase / 10;\n};\n\nParser.prototype.skip = function(type, amount) {\n    if (amount === undefined) {\n        amount = 1;\n    }\n\n    this.relativeOffset += typeOffsets[type] * amount;\n};\n\n///// Parsing lists and records ///////////////////////////////\n\n// Parse a list of 32 bit unsigned integers.\nParser.prototype.parseULongList = function(count) {\n    if (count === undefined) { count = this.parseULong(); }\n    const offsets = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint32(offset);\n        offset += 4;\n    }\n\n    this.relativeOffset += count * 4;\n    return offsets;\n};\n\n// Parse a list of 16 bit unsigned integers. The length of the list can be read on the stream\n// or provided as an argument.\nParser.prototype.parseOffset16List =\nParser.prototype.parseUShortList = function(count) {\n    if (count === undefined) { count = this.parseUShort(); }\n    const offsets = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        offsets[i] = dataView.getUint16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return offsets;\n};\n\n// Parses a list of 16 bit signed integers.\nParser.prototype.parseShortList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getInt16(offset);\n        offset += 2;\n    }\n\n    this.relativeOffset += count * 2;\n    return list;\n};\n\n// Parses a list of bytes.\nParser.prototype.parseByteList = function(count) {\n    const list = new Array(count);\n    const dataView = this.data;\n    let offset = this.offset + this.relativeOffset;\n    for (let i = 0; i < count; i++) {\n        list[i] = dataView.getUint8(offset++);\n    }\n\n    this.relativeOffset += count;\n    return list;\n};\n\n/**\n * Parse a list of items.\n * Record count is optional, if omitted it is read from the stream.\n * itemCallback is one of the Parser methods.\n */\nParser.prototype.parseList = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseUShort();\n    }\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\nParser.prototype.parseList32 = function(count, itemCallback) {\n    if (!itemCallback) {\n        itemCallback = count;\n        count = this.parseULong();\n    }\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        list[i] = itemCallback.call(this);\n    }\n    return list;\n};\n\n/**\n * Parse a list of records.\n * Record count is optional, if omitted it is read from the stream.\n * Example of recordDescription: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\n */\nParser.prototype.parseRecordList = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseUShort();\n    }\n    const records = new Array(count);\n    const fields = Object.keys(recordDescription);\n    for (let i = 0; i < count; i++) {\n        const rec = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\nParser.prototype.parseRecordList32 = function(count, recordDescription) {\n    // If the count argument is absent, read it in the stream.\n    if (!recordDescription) {\n        recordDescription = count;\n        count = this.parseULong();\n    }\n    const records = new Array(count);\n    const fields = Object.keys(recordDescription);\n    for (let i = 0; i < count; i++) {\n        const rec = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = recordDescription[fieldName];\n            rec[fieldName] = fieldType.call(this);\n        }\n        records[i] = rec;\n    }\n    return records;\n};\n\n// Parse a data structure into an object\n// Example of description: { sequenceIndex: Parser.uShort, lookupListIndex: Parser.uShort }\nParser.prototype.parseStruct = function(description) {\n    if (typeof description === 'function') {\n        return description.call(this);\n    } else {\n        const fields = Object.keys(description);\n        const struct = {};\n        for (let j = 0; j < fields.length; j++) {\n            const fieldName = fields[j];\n            const fieldType = description[fieldName];\n            struct[fieldName] = fieldType.call(this);\n        }\n        return struct;\n    }\n};\n\n/**\n * Parse a GPOS valueRecord\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat is optional, if omitted it is read from the stream.\n */\nParser.prototype.parseValueRecord = function(valueFormat) {\n    if (valueFormat === undefined) {\n        valueFormat = this.parseUShort();\n    }\n    if (valueFormat === 0) {\n        // valueFormat2 in kerning pairs is most often 0\n        // in this case return undefined instead of an empty object, to save space\n        return;\n    }\n    const valueRecord = {};\n\n    if (valueFormat & 0x0001) { valueRecord.xPlacement = this.parseShort(); }\n    if (valueFormat & 0x0002) { valueRecord.yPlacement = this.parseShort(); }\n    if (valueFormat & 0x0004) { valueRecord.xAdvance = this.parseShort(); }\n    if (valueFormat & 0x0008) { valueRecord.yAdvance = this.parseShort(); }\n\n    // Device table (non-variable font) / VariationIndex table (variable font) not supported\n    // https://docs.microsoft.com/fr-fr/typography/opentype/spec/chapter2#devVarIdxTbls\n    if (valueFormat & 0x0010) { valueRecord.xPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0020) { valueRecord.yPlaDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0040) { valueRecord.xAdvDevice = undefined; this.parseShort(); }\n    if (valueFormat & 0x0080) { valueRecord.yAdvDevice = undefined; this.parseShort(); }\n\n    return valueRecord;\n};\n\n/**\n * Parse a list of GPOS valueRecords\n * https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#value-record\n * valueFormat and valueCount are read from the stream.\n */\nParser.prototype.parseValueRecordList = function() {\n    const valueFormat = this.parseUShort();\n    const valueCount = this.parseUShort();\n    const values = new Array(valueCount);\n    for (let i = 0; i < valueCount; i++) {\n        values[i] = this.parseValueRecord(valueFormat);\n    }\n    return values;\n};\n\nParser.prototype.parsePointer = function(description) {\n    const structOffset = this.parseOffset16();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\nParser.prototype.parsePointer32 = function(description) {\n    const structOffset = this.parseOffset32();\n    if (structOffset > 0) {\n        // NULL offset => return undefined\n        return new Parser(this.data, this.offset + structOffset).parseStruct(description);\n    }\n    return undefined;\n};\n\n/**\n * Parse a list of offsets to lists of 16-bit integers,\n * or a list of offsets to lists of offsets to any kind of items.\n * If itemCallback is not provided, a list of list of UShort is assumed.\n * If provided, itemCallback is called on each item and must parse the item.\n * See examples in tables/gsub.js\n */\nParser.prototype.parseListOfLists = function(itemCallback) {\n    const offsets = this.parseOffset16List();\n    const count = offsets.length;\n    const relativeOffset = this.relativeOffset;\n    const list = new Array(count);\n    for (let i = 0; i < count; i++) {\n        const start = offsets[i];\n        if (start === 0) {\n            // NULL offset\n            // Add i as owned property to list. Convenient with assert.\n            list[i] = undefined;\n            continue;\n        }\n        this.relativeOffset = start;\n        if (itemCallback) {\n            const subOffsets = this.parseOffset16List();\n            const subList = new Array(subOffsets.length);\n            for (let j = 0; j < subOffsets.length; j++) {\n                this.relativeOffset = start + subOffsets[j];\n                subList[j] = itemCallback.call(this);\n            }\n            list[i] = subList;\n        } else {\n            list[i] = this.parseUShortList();\n        }\n    }\n    this.relativeOffset = relativeOffset;\n    return list;\n};\n\n///// Complex tables parsing //////////////////////////////////\n\n// Parse a coverage table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n// parser.offset must point to the start of the table containing the coverage.\nParser.prototype.parseCoverage = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    const count = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            glyphs: this.parseUShortList(count)\n        };\n    } else if (format === 2) {\n        const ranges = new Array(count);\n        for (let i = 0; i < count; i++) {\n            ranges[i] = {\n                start: this.parseUShort(),\n                end: this.parseUShort(),\n                index: this.parseUShort()\n            };\n        }\n        return {\n            format: 2,\n            ranges: ranges\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': Coverage format must be 1 or 2.');\n};\n\n// Parse a Class Definition Table in a GSUB, GPOS or GDEF table.\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\nParser.prototype.parseClassDef = function() {\n    const startOffset = this.offset + this.relativeOffset;\n    const format = this.parseUShort();\n    if (format === 1) {\n        return {\n            format: 1,\n            startGlyph: this.parseUShort(),\n            classes: this.parseUShortList()\n        };\n    } else if (format === 2) {\n        return {\n            format: 2,\n            ranges: this.parseRecordList({\n                start: Parser.uShort,\n                end: Parser.uShort,\n                classId: Parser.uShort\n            })\n        };\n    }\n    throw new Error('0x' + startOffset.toString(16) + ': ClassDef format must be 1 or 2.');\n};\n\n///// Static methods ///////////////////////////////////\n// These convenience methods can be used as callbacks and should be called with \"this\" context set to a Parser instance.\n\nParser.list = function(count, itemCallback) {\n    return function() {\n        return this.parseList(count, itemCallback);\n    };\n};\n\nParser.list32 = function(count, itemCallback) {\n    return function() {\n        return this.parseList32(count, itemCallback);\n    };\n};\n\nParser.recordList = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList(count, recordDescription);\n    };\n};\n\nParser.recordList32 = function(count, recordDescription) {\n    return function() {\n        return this.parseRecordList32(count, recordDescription);\n    };\n};\n\nParser.pointer = function(description) {\n    return function() {\n        return this.parsePointer(description);\n    };\n};\n\nParser.pointer32 = function(description) {\n    return function() {\n        return this.parsePointer32(description);\n    };\n};\n\nParser.tag = Parser.prototype.parseTag;\nParser.byte = Parser.prototype.parseByte;\nParser.uShort = Parser.offset16 = Parser.prototype.parseUShort;\nParser.uShortList = Parser.prototype.parseUShortList;\nParser.uLong = Parser.offset32 = Parser.prototype.parseULong;\nParser.uLongList = Parser.prototype.parseULongList;\nParser.struct = Parser.prototype.parseStruct;\nParser.coverage = Parser.prototype.parseCoverage;\nParser.classDef = Parser.prototype.parseClassDef;\n\n///// Script, Feature, Lookup lists ///////////////////////////////////////////////\n// https://www.microsoft.com/typography/OTSPEC/chapter2.htm\n\nconst langSysTable = {\n    reserved: Parser.uShort,\n    reqFeatureIndex: Parser.uShort,\n    featureIndexes: Parser.uShortList\n};\n\nParser.prototype.parseScriptList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        script: Parser.pointer({\n            defaultLangSys: Parser.pointer(langSysTable),\n            langSysRecords: Parser.recordList({\n                tag: Parser.tag,\n                langSys: Parser.pointer(langSysTable)\n            })\n        })\n    })) || [];\n};\n\nParser.prototype.parseFeatureList = function() {\n    return this.parsePointer(Parser.recordList({\n        tag: Parser.tag,\n        feature: Parser.pointer({\n            featureParams: Parser.offset16,\n            lookupListIndexes: Parser.uShortList\n        })\n    })) || [];\n};\n\nParser.prototype.parseLookupList = function(lookupTableParsers) {\n    return this.parsePointer(Parser.list(Parser.pointer(function() {\n        const lookupType = this.parseUShort();\n        check.argument(1 <= lookupType && lookupType <= 9, 'GPOS/GSUB lookup type ' + lookupType + ' unknown.');\n        const lookupFlag = this.parseUShort();\n        const useMarkFilteringSet = lookupFlag & 0x10;\n        return {\n            lookupType: lookupType,\n            lookupFlag: lookupFlag,\n            subtables: this.parseList(Parser.pointer(lookupTableParsers[lookupType])),\n            markFilteringSet: useMarkFilteringSet ? this.parseUShort() : undefined\n        };\n    }))) || [];\n};\n\nParser.prototype.parseFeatureVariationsList = function() {\n    return this.parsePointer32(function() {\n        const majorVersion = this.parseUShort();\n        const minorVersion = this.parseUShort();\n        check.argument(majorVersion === 1 && minorVersion < 1, 'GPOS/GSUB feature variations table unknown.');\n        const featureVariations = this.parseRecordList32({\n            conditionSetOffset: Parser.offset32,\n            featureTableSubstitutionOffset: Parser.offset32\n        });\n        return featureVariations;\n    }) || [];\n};\n\nexport default {\n    getByte,\n    getCard8: getByte,\n    getUShort,\n    getCard16: getUShort,\n    getShort,\n    getULong,\n    getFixed,\n    getTag,\n    getOffset,\n    getBytes,\n    bytesToString,\n    Parser,\n};\n\nexport { Parser };\n","// The `cmap` table stores the mappings from characters to glyphs.\n// https://www.microsoft.com/typography/OTSPEC/cmap.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction parseCmapTableFormat12(cmap, p) {\n    //Skip reserved.\n    p.parseUShort();\n\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseULong();\n    cmap.language = p.parseULong();\n\n    let groupCount;\n    cmap.groupCount = groupCount = p.parseULong();\n    cmap.glyphIndexMap = {};\n\n    for (let i = 0; i < groupCount; i += 1) {\n        const startCharCode = p.parseULong();\n        const endCharCode = p.parseULong();\n        let startGlyphId = p.parseULong();\n\n        for (let c = startCharCode; c <= endCharCode; c += 1) {\n            cmap.glyphIndexMap[c] = startGlyphId;\n            startGlyphId++;\n        }\n    }\n}\n\nfunction parseCmapTableFormat4(cmap, p, data, start, offset) {\n    // Length in bytes of the sub-tables.\n    cmap.length = p.parseUShort();\n    cmap.language = p.parseUShort();\n\n    // segCount is stored x 2.\n    let segCount;\n    cmap.segCount = segCount = p.parseUShort() >> 1;\n\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n\n    // The \"unrolled\" mapping from character codes to glyph indices.\n    cmap.glyphIndexMap = {};\n    const endCountParser = new parse.Parser(data, start + offset + 14);\n    const startCountParser = new parse.Parser(data, start + offset + 16 + segCount * 2);\n    const idDeltaParser = new parse.Parser(data, start + offset + 16 + segCount * 4);\n    const idRangeOffsetParser = new parse.Parser(data, start + offset + 16 + segCount * 6);\n    let glyphIndexOffset = start + offset + 16 + segCount * 8;\n    for (let i = 0; i < segCount - 1; i += 1) {\n        let glyphIndex;\n        const endCount = endCountParser.parseUShort();\n        const startCount = startCountParser.parseUShort();\n        const idDelta = idDeltaParser.parseShort();\n        const idRangeOffset = idRangeOffsetParser.parseUShort();\n        for (let c = startCount; c <= endCount; c += 1) {\n            if (idRangeOffset !== 0) {\n                // The idRangeOffset is relative to the current position in the idRangeOffset array.\n                // Take the current offset in the idRangeOffset array.\n                glyphIndexOffset = (idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2);\n\n                // Add the value of the idRangeOffset, which will move us into the glyphIndex array.\n                glyphIndexOffset += idRangeOffset;\n\n                // Then add the character index of the current segment, multiplied by 2 for USHORTs.\n                glyphIndexOffset += (c - startCount) * 2;\n                glyphIndex = parse.getUShort(data, glyphIndexOffset);\n                if (glyphIndex !== 0) {\n                    glyphIndex = (glyphIndex + idDelta) & 0xFFFF;\n                }\n            } else {\n                glyphIndex = (c + idDelta) & 0xFFFF;\n            }\n\n            cmap.glyphIndexMap[c] = glyphIndex;\n        }\n    }\n}\n\n// Parse the `cmap` table. This table stores the mappings from characters to glyphs.\n// There are many available formats, but we only support the Windows format 4 and 12.\n// This function returns a `CmapEncoding` object or null if no supported format could be found.\nfunction parseCmapTable(data, start) {\n    const cmap = {};\n    cmap.version = parse.getUShort(data, start);\n    check.argument(cmap.version === 0, 'cmap table version should be 0.');\n\n    // The cmap table can contain many sub-tables, each with their own format.\n    // We're only interested in a \"platform 0\" (Unicode format) and \"platform 3\" (Windows format) table.\n    cmap.numTables = parse.getUShort(data, start + 2);\n    let offset = -1;\n    for (let i = cmap.numTables - 1; i >= 0; i -= 1) {\n        const platformId = parse.getUShort(data, start + 4 + (i * 8));\n        const encodingId = parse.getUShort(data, start + 4 + (i * 8) + 2);\n        if ((platformId === 3 && (encodingId === 0 || encodingId === 1 || encodingId === 10)) ||\n            (platformId === 0 && (encodingId === 0 || encodingId === 1 || encodingId === 2 || encodingId === 3 || encodingId === 4))) {\n            offset = parse.getULong(data, start + 4 + (i * 8) + 4);\n            break;\n        }\n    }\n\n    if (offset === -1) {\n        // There is no cmap table in the font that we support.\n        throw new Error('No valid cmap sub-tables found.');\n    }\n\n    const p = new parse.Parser(data, start + offset);\n    cmap.format = p.parseUShort();\n\n    if (cmap.format === 12) {\n        parseCmapTableFormat12(cmap, p);\n    } else if (cmap.format === 4) {\n        parseCmapTableFormat4(cmap, p, data, start, offset);\n    } else {\n        throw new Error('Only format 4 and 12 cmap tables are supported (found format ' + cmap.format + ').');\n    }\n\n    return cmap;\n}\n\nfunction addSegment(t, code, glyphIndex) {\n    t.segments.push({\n        end: code,\n        start: code,\n        delta: -(code - glyphIndex),\n        offset: 0,\n        glyphIndex: glyphIndex\n    });\n}\n\nfunction addTerminatorSegment(t) {\n    t.segments.push({\n        end: 0xFFFF,\n        start: 0xFFFF,\n        delta: 1,\n        offset: 0\n    });\n}\n\n// Make cmap table, format 4 by default, 12 if needed only\nfunction makeCmapTable(glyphs) {\n    // Plan 0 is the base Unicode Plan but emojis, for example are on another plan, and needs cmap 12 format (with 32bit)\n    let isPlan0Only = true;\n    let i;\n\n    // Check if we need to add cmap format 12 or if format 4 only is fine\n    for (i = glyphs.length - 1; i > 0; i -= 1) {\n        const g = glyphs.get(i);\n        if (g.unicode > 65535) {\n            console.log('Adding CMAP format 12 (needed!)');\n            isPlan0Only = false;\n            break;\n        }\n    }\n\n    let cmapTable = [\n        {name: 'version', type: 'USHORT', value: 0},\n        {name: 'numTables', type: 'USHORT', value: isPlan0Only ? 1 : 2},\n\n        // CMAP 4 header\n        {name: 'platformID', type: 'USHORT', value: 3},\n        {name: 'encodingID', type: 'USHORT', value: 1},\n        {name: 'offset', type: 'ULONG', value: isPlan0Only ? 12 : (12 + 8)}\n    ];\n\n    if (!isPlan0Only)\n        cmapTable = cmapTable.concat([\n            // CMAP 12 header\n            {name: 'cmap12PlatformID', type: 'USHORT', value: 3}, // We encode only for PlatformID = 3 (Windows) because it is supported everywhere\n            {name: 'cmap12EncodingID', type: 'USHORT', value: 10},\n            {name: 'cmap12Offset', type: 'ULONG', value: 0}\n        ]);\n\n    cmapTable = cmapTable.concat([\n        // CMAP 4 Subtable\n        {name: 'format', type: 'USHORT', value: 4},\n        {name: 'cmap4Length', type: 'USHORT', value: 0},\n        {name: 'language', type: 'USHORT', value: 0},\n        {name: 'segCountX2', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n\n    const t = new table.Table('cmap', cmapTable);\n\n    t.segments = [];\n    for (i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        for (let j = 0; j < glyph.unicodes.length; j += 1) {\n            addSegment(t, glyph.unicodes[j], i);\n        }\n\n        t.segments = t.segments.sort(function (a, b) {\n            return a.start - b.start;\n        });\n    }\n\n    addTerminatorSegment(t);\n\n    const segCount = t.segments.length;\n    let segCountToRemove = 0;\n\n    // CMAP 4\n    // Set up parallel segment arrays.\n    let endCounts = [];\n    let startCounts = [];\n    let idDeltas = [];\n    let idRangeOffsets = [];\n    let glyphIds = [];\n\n    // CMAP 12\n    let cmap12Groups = [];\n\n    // Reminder this loop is not following the specification at 100%\n    // The specification -> find suites of characters and make a group\n    // Here we're doing one group for each letter\n    // Doing as the spec can save 8 times (or more) space\n    for (i = 0; i < segCount; i += 1) {\n        const segment = t.segments[i];\n\n        // CMAP 4\n        if (segment.end <= 65535 && segment.start <= 65535) {\n            endCounts = endCounts.concat({name: 'end_' + i, type: 'USHORT', value: segment.end});\n            startCounts = startCounts.concat({name: 'start_' + i, type: 'USHORT', value: segment.start});\n            idDeltas = idDeltas.concat({name: 'idDelta_' + i, type: 'SHORT', value: segment.delta});\n            idRangeOffsets = idRangeOffsets.concat({name: 'idRangeOffset_' + i, type: 'USHORT', value: segment.offset});\n            if (segment.glyphId !== undefined) {\n                glyphIds = glyphIds.concat({name: 'glyph_' + i, type: 'USHORT', value: segment.glyphId});\n            }\n        } else {\n            // Skip Unicode > 65535 (16bit unsigned max) for CMAP 4, will be added in CMAP 12\n            segCountToRemove += 1;\n        }\n\n        // CMAP 12\n        // Skip Terminator Segment\n        if (!isPlan0Only && segment.glyphIndex !== undefined) {\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12Start_' + i, type: 'ULONG', value: segment.start});\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12End_' + i, type: 'ULONG', value: segment.end});\n            cmap12Groups = cmap12Groups.concat({name: 'cmap12Glyph_' + i, type: 'ULONG', value: segment.glyphIndex});\n        }\n    }\n\n    // CMAP 4 Subtable\n    t.segCountX2 = (segCount - segCountToRemove) * 2;\n    t.searchRange = Math.pow(2, Math.floor(Math.log((segCount - segCountToRemove)) / Math.log(2))) * 2;\n    t.entrySelector = Math.log(t.searchRange / 2) / Math.log(2);\n    t.rangeShift = t.segCountX2 - t.searchRange;\n\n    t.fields = t.fields.concat(endCounts);\n    t.fields.push({name: 'reservedPad', type: 'USHORT', value: 0});\n    t.fields = t.fields.concat(startCounts);\n    t.fields = t.fields.concat(idDeltas);\n    t.fields = t.fields.concat(idRangeOffsets);\n    t.fields = t.fields.concat(glyphIds);\n\n    t.cmap4Length = 14 + // Subtable header\n        endCounts.length * 2 +\n        2 + // reservedPad\n        startCounts.length * 2 +\n        idDeltas.length * 2 +\n        idRangeOffsets.length * 2 +\n        glyphIds.length * 2;\n\n    if (!isPlan0Only) {\n        // CMAP 12 Subtable\n        const cmap12Length = 16 + // Subtable header\n            cmap12Groups.length * 4;\n\n        t.cmap12Offset = 12 + (2 * 2) + 4 + t.cmap4Length;\n        t.fields = t.fields.concat([\n            {name: 'cmap12Format', type: 'USHORT', value: 12},\n            {name: 'cmap12Reserved', type: 'USHORT', value: 0},\n            {name: 'cmap12Length', type: 'ULONG', value: cmap12Length},\n            {name: 'cmap12Language', type: 'ULONG', value: 0},\n            {name: 'cmap12nGroups', type: 'ULONG', value: cmap12Groups.length / 3}\n        ]);\n\n        t.fields = t.fields.concat(cmap12Groups);\n    }\n\n    return t;\n}\n\nexport default { parse: parseCmapTable, make: makeCmapTable };\n","// Glyph encoding\n\nconst cffStandardStrings = [\n    '.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling',\n    'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft',\n    'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph',\n    'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand',\n    'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring',\n    'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE',\n    'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu',\n    'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn',\n    'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright',\n    'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex',\n    'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex',\n    'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute',\n    'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute',\n    'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute',\n    'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave',\n    'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', '266 ff', 'onedotenleader',\n    'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle',\n    'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior',\n    'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior',\n    'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl',\n    'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall',\n    'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall',\n    'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds',\n    'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior',\n    'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior',\n    'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior',\n    'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall',\n    'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall',\n    'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall',\n    'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall',\n    'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000',\n    '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\nconst cffStandardEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright',\n    'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two',\n    'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater',\n    'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S',\n    'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore',\n    'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't',\n    'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle',\n    'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger',\n    'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright',\n    'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde',\n    'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron',\n    'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '',\n    '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '',\n    'lslash', 'oslash', 'oe', 'germandbls'];\n\nconst cffExpertEncoding = [\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior',\n    'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader',\n    'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle',\n    'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon',\n    'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior',\n    'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior',\n    'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl',\n    'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall',\n    'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall',\n    'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall',\n    'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '',\n    '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '',\n    'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall',\n    'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior',\n    '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters',\n    'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '',\n    '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior',\n    'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior',\n    'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior',\n    'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall',\n    'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall',\n    'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall',\n    'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall',\n    'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall',\n    'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\nconst standardNames = [\n    '.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent',\n    'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash',\n    'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less',\n    'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',\n    'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright',\n    'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\n    'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde',\n    'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave',\n    'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis',\n    'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis',\n    'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section',\n    'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal',\n    'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation',\n    'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown',\n    'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright',\n    'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft',\n    'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction',\n    'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase',\n    'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute',\n    'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex',\n    'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut',\n    'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth',\n    'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior',\n    'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla',\n    'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\n/**\n * This is the encoding used for fonts created from scratch.\n * It loops through all glyphs and finds the appropriate unicode value.\n * Since it's linear time, other encodings will be faster.\n * @exports opentype.DefaultEncoding\n * @class\n * @constructor\n * @param {opentype.Font}\n */\nfunction DefaultEncoding(font) {\n    this.font = font;\n}\n\nDefaultEncoding.prototype.charToGlyphIndex = function(c) {\n    const code = c.codePointAt(0);\n    const glyphs = this.font.glyphs;\n    if (glyphs) {\n        for (let i = 0; i < glyphs.length; i += 1) {\n            const glyph = glyphs.get(i);\n            for (let j = 0; j < glyph.unicodes.length; j += 1) {\n                if (glyph.unicodes[j] === code) {\n                    return i;\n                }\n            }\n        }\n    }\n    return null;\n};\n\n/**\n * @exports opentype.CmapEncoding\n * @class\n * @constructor\n * @param {Object} cmap - a object with the cmap encoded data\n */\nfunction CmapEncoding(cmap) {\n    this.cmap = cmap;\n}\n\n/**\n * @param  {string} c - the character\n * @return {number} The glyph index.\n */\nCmapEncoding.prototype.charToGlyphIndex = function(c) {\n    return this.cmap.glyphIndexMap[c.codePointAt(0)] || 0;\n};\n\n/**\n * @exports opentype.CffEncoding\n * @class\n * @constructor\n * @param {string} encoding - The encoding\n * @param {Array} charset - The character set.\n */\nfunction CffEncoding(encoding, charset) {\n    this.encoding = encoding;\n    this.charset = charset;\n}\n\n/**\n * @param  {string} s - The character\n * @return {number} The index.\n */\nCffEncoding.prototype.charToGlyphIndex = function(s) {\n    const code = s.codePointAt(0);\n    const charName = this.encoding[code];\n    return this.charset.indexOf(charName);\n};\n\n/**\n * @exports opentype.GlyphNames\n * @class\n * @constructor\n * @param {Object} post\n */\nfunction GlyphNames(post) {\n    switch (post.version) {\n        case 1:\n            this.names = standardNames.slice();\n            break;\n        case 2:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] < standardNames.length) {\n                    this.names[i] = standardNames[post.glyphNameIndex[i]];\n                } else {\n                    this.names[i] = post.names[post.glyphNameIndex[i] - standardNames.length];\n                }\n            }\n\n            break;\n        case 2.5:\n            this.names = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                this.names[i] = standardNames[i + post.glyphNameIndex[i]];\n            }\n\n            break;\n        case 3:\n            this.names = [];\n            break;\n        default:\n            this.names = [];\n            break;\n    }\n}\n\n/**\n * Gets the index of a glyph by name.\n * @param  {string} name - The glyph name\n * @return {number} The index\n */\nGlyphNames.prototype.nameToGlyphIndex = function(name) {\n    return this.names.indexOf(name);\n};\n\n/**\n * @param  {number} gid\n * @return {string}\n */\nGlyphNames.prototype.glyphIndexToName = function(gid) {\n    return this.names[gid];\n};\n\nfunction addGlyphNamesAll(font) {\n    let glyph;\n    const glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    const charCodes = Object.keys(glyphIndexMap);\n\n    for (let i = 0; i < charCodes.length; i += 1) {\n        const c = charCodes[i];\n        const glyphIndex = glyphIndexMap[c];\n        glyph = font.glyphs.get(glyphIndex);\n        glyph.addUnicode(parseInt(c));\n    }\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        glyph = font.glyphs.get(i);\n        if (font.cffEncoding) {\n            if (font.isCIDFont) {\n                glyph.name = 'gid' + i;\n            } else {\n                glyph.name = font.cffEncoding.charset[i];\n            }\n        } else if (font.glyphNames.names) {\n            glyph.name = font.glyphNames.glyphIndexToName(i);\n        }\n    }\n}\n\nfunction addGlyphNamesToUnicodeMap(font) {\n    font._IndexToUnicodeMap = {};\n\n    const glyphIndexMap = font.tables.cmap.glyphIndexMap;\n    const charCodes = Object.keys(glyphIndexMap);\n\n    for (let i = 0; i < charCodes.length; i += 1) {\n        const c = charCodes[i];\n        let glyphIndex = glyphIndexMap[c];\n        if (font._IndexToUnicodeMap[glyphIndex] === undefined) {\n            font._IndexToUnicodeMap[glyphIndex] = {\n                unicodes: [parseInt(c)]\n            };\n        } else {\n            font._IndexToUnicodeMap[glyphIndex].unicodes.push(parseInt(c));\n        }\n    }\n}\n\n/**\n * @alias opentype.addGlyphNames\n * @param {opentype.Font}\n * @param {Object}\n */\nfunction addGlyphNames(font, opt) {\n    if (opt.lowMemory) {\n        addGlyphNamesToUnicodeMap(font);\n    } else {\n        addGlyphNamesAll(font);\n    }\n}\n\nexport {\n    cffStandardStrings,\n    cffStandardEncoding,\n    cffExpertEncoding,\n    standardNames,\n    DefaultEncoding,\n    CmapEncoding,\n    CffEncoding,\n    GlyphNames,\n    addGlyphNames\n};\n","// Drawing utility functions.\n\n// Draw a line on the given context from point `x1,y1` to point `x2,y2`.\nfunction line(ctx, x1, y1, x2, y2) {\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n}\n\nexport default { line };\n","// The Glyph object\n\nimport check from './check';\nimport draw from './draw';\nimport Path from './path';\n// import glyf from './tables/glyf' Can't be imported here, because it's a circular dependency\n\nfunction getPathDefinition(glyph, path) {\n    let _path = path || new Path();\n    return {\n        configurable: true,\n\n        get: function() {\n            if (typeof _path === 'function') {\n                _path = _path();\n            }\n\n            return _path;\n        },\n\n        set: function(p) {\n            _path = p;\n        }\n    };\n}\n/**\n * @typedef GlyphOptions\n * @type Object\n * @property {string} [name] - The glyph name\n * @property {number} [unicode]\n * @property {Array} [unicodes]\n * @property {number} [xMin]\n * @property {number} [yMin]\n * @property {number} [xMax]\n * @property {number} [yMax]\n * @property {number} [advanceWidth]\n */\n\n// A Glyph is an individual mark that often corresponds to a character.\n// Some glyphs, such as ligatures, are a combination of many characters.\n// Glyphs are the basic building blocks of a font.\n//\n// The `Glyph` class contains utility methods for drawing the path and its points.\n/**\n * @exports opentype.Glyph\n * @class\n * @param {GlyphOptions}\n * @constructor\n */\nfunction Glyph(options) {\n    // By putting all the code on a prototype function (which is only declared once)\n    // we reduce the memory requirements for larger fonts by some 2%\n    this.bindConstructorValues(options);\n}\n\n/**\n * @param  {GlyphOptions}\n */\nGlyph.prototype.bindConstructorValues = function(options) {\n    this.index = options.index || 0;\n\n    // These three values cannot be deferred for memory optimization:\n    this.name = options.name || null;\n    this.unicode = options.unicode || undefined;\n    this.unicodes = options.unicodes || options.unicode !== undefined ? [options.unicode] : [];\n\n    // But by binding these values only when necessary, we reduce can\n    // the memory requirements by almost 3% for larger fonts.\n    if ('xMin' in options) {\n        this.xMin = options.xMin;\n    }\n\n    if ('yMin' in options) {\n        this.yMin = options.yMin;\n    }\n\n    if ('xMax' in options) {\n        this.xMax = options.xMax;\n    }\n\n    if ('yMax' in options) {\n        this.yMax = options.yMax;\n    }\n\n    if ('advanceWidth' in options) {\n        this.advanceWidth = options.advanceWidth;\n    }\n\n    // The path for a glyph is the most memory intensive, and is bound as a value\n    // with a getter/setter to ensure we actually do path parsing only once the\n    // path is actually needed by anything.\n    Object.defineProperty(this, 'path', getPathDefinition(this, options.path));\n};\n\n/**\n * @param {number}\n */\nGlyph.prototype.addUnicode = function(unicode) {\n    if (this.unicodes.length === 0) {\n        this.unicode = unicode;\n    }\n\n    this.unicodes.push(unicode);\n};\n\n/**\n * Calculate the minimum bounding box for this glyph.\n * @return {opentype.BoundingBox}\n */\nGlyph.prototype.getBoundingBox = function() {\n    return this.path.getBoundingBox();\n};\n\n/**\n * Convert the glyph to a Path we can draw on a drawing context.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n * @param  {opentype.Font} if hinting is to be used, the font\n * @return {opentype.Path}\n */\nGlyph.prototype.getPath = function(x, y, fontSize, options, font) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    let commands;\n    let hPoints;\n    if (!options) options = { };\n    let xScale = options.xScale;\n    let yScale = options.yScale;\n\n    if (options.hinting && font && font.hinting) {\n        // in case of hinting, the hinting engine takes care\n        // of scaling the points (not the path) before hinting.\n        hPoints = this.path && font.hinting.exec(this, fontSize);\n        // in case the hinting engine failed hPoints is undefined\n        // and thus reverts to plain rending\n    }\n\n    if (hPoints) {\n        // Call font.hinting.getCommands instead of `glyf.getPath(hPoints).commands` to avoid a circular dependency\n        commands = font.hinting.getCommands(hPoints);\n        x = Math.round(x);\n        y = Math.round(y);\n        // TODO in case of hinting xyScaling is not yet supported\n        xScale = yScale = 1;\n    } else {\n        commands = this.path.commands;\n        const scale = 1 / (this.path.unitsPerEm || 1000) * fontSize;\n        if (xScale === undefined) xScale = scale;\n        if (yScale === undefined) yScale = scale;\n    }\n\n    const p = new Path();\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type === 'M') {\n            p.moveTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'L') {\n            p.lineTo(x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Q') {\n            p.quadraticCurveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                               x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'C') {\n            p.curveTo(x + (cmd.x1 * xScale), y + (-cmd.y1 * yScale),\n                      x + (cmd.x2 * xScale), y + (-cmd.y2 * yScale),\n                      x + (cmd.x * xScale), y + (-cmd.y * yScale));\n        } else if (cmd.type === 'Z') {\n            p.closePath();\n        }\n    }\n\n    return p;\n};\n\n/**\n * Split the glyph into contours.\n * This function is here for backwards compatibility, and to\n * provide raw access to the TrueType glyph outlines.\n * @return {Array}\n */\nGlyph.prototype.getContours = function() {\n    if (this.points === undefined) {\n        return [];\n    }\n\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < this.points.length; i += 1) {\n        const pt = this.points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n};\n\n/**\n * Calculate the xMin/yMin/xMax/yMax/lsb/rsb for a Glyph.\n * @return {Object}\n */\nGlyph.prototype.getMetrics = function() {\n    const commands = this.path.commands;\n    const xCoords = [];\n    const yCoords = [];\n    for (let i = 0; i < commands.length; i += 1) {\n        const cmd = commands[i];\n        if (cmd.type !== 'Z') {\n            xCoords.push(cmd.x);\n            yCoords.push(cmd.y);\n        }\n\n        if (cmd.type === 'Q' || cmd.type === 'C') {\n            xCoords.push(cmd.x1);\n            yCoords.push(cmd.y1);\n        }\n\n        if (cmd.type === 'C') {\n            xCoords.push(cmd.x2);\n            yCoords.push(cmd.y2);\n        }\n    }\n\n    const metrics = {\n        xMin: Math.min.apply(null, xCoords),\n        yMin: Math.min.apply(null, yCoords),\n        xMax: Math.max.apply(null, xCoords),\n        yMax: Math.max.apply(null, yCoords),\n        leftSideBearing: this.leftSideBearing\n    };\n\n    if (!isFinite(metrics.xMin)) {\n        metrics.xMin = 0;\n    }\n\n    if (!isFinite(metrics.xMax)) {\n        metrics.xMax = this.advanceWidth;\n    }\n\n    if (!isFinite(metrics.yMin)) {\n        metrics.yMin = 0;\n    }\n\n    if (!isFinite(metrics.yMax)) {\n        metrics.yMax = 0;\n    }\n\n    metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);\n    return metrics;\n};\n\n/**\n * Draw the glyph on the given context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {Object=} options - xScale, yScale to stretch the glyph.\n */\nGlyph.prototype.draw = function(ctx, x, y, fontSize, options) {\n    this.getPath(x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of the glyph.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawPoints = function(ctx, x, y, fontSize) {\n    function drawCircles(l, x, y, scale) {\n        ctx.beginPath();\n        for (let j = 0; j < l.length; j += 1) {\n            ctx.moveTo(x + (l[j].x * scale), y + (l[j].y * scale));\n            ctx.arc(x + (l[j].x * scale), y + (l[j].y * scale), 2, 0, Math.PI * 2, false);\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    const scale = 1 / this.path.unitsPerEm * fontSize;\n\n    const blueCircles = [];\n    const redCircles = [];\n    const path = this.path;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        const cmd = path.commands[i];\n        if (cmd.x !== undefined) {\n            blueCircles.push({x: cmd.x, y: -cmd.y});\n        }\n\n        if (cmd.x1 !== undefined) {\n            redCircles.push({x: cmd.x1, y: -cmd.y1});\n        }\n\n        if (cmd.x2 !== undefined) {\n            redCircles.push({x: cmd.x2, y: -cmd.y2});\n        }\n    }\n\n    ctx.fillStyle = 'blue';\n    drawCircles(blueCircles, x, y, scale);\n    ctx.fillStyle = 'red';\n    drawCircles(redCircles, x, y, scale);\n};\n\n/**\n * Draw lines indicating important font measurements.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n */\nGlyph.prototype.drawMetrics = function(ctx, x, y, fontSize) {\n    let scale;\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 24;\n    scale = 1 / this.path.unitsPerEm * fontSize;\n    ctx.lineWidth = 1;\n\n    // Draw the origin\n    ctx.strokeStyle = 'black';\n    draw.line(ctx, x, -10000, x, 10000);\n    draw.line(ctx, -10000, y, 10000, y);\n\n    // This code is here due to memory optimization: by not using\n    // defaults in the constructor, we save a notable amount of memory.\n    const xMin = this.xMin || 0;\n    let yMin = this.yMin || 0;\n    const xMax = this.xMax || 0;\n    let yMax = this.yMax || 0;\n    const advanceWidth = this.advanceWidth || 0;\n\n    // Draw the glyph box\n    ctx.strokeStyle = 'blue';\n    draw.line(ctx, x + (xMin * scale), -10000, x + (xMin * scale), 10000);\n    draw.line(ctx, x + (xMax * scale), -10000, x + (xMax * scale), 10000);\n    draw.line(ctx, -10000, y + (-yMin * scale), 10000, y + (-yMin * scale));\n    draw.line(ctx, -10000, y + (-yMax * scale), 10000, y + (-yMax * scale));\n\n    // Draw the advance width\n    ctx.strokeStyle = 'green';\n    draw.line(ctx, x + (advanceWidth * scale), -10000, x + (advanceWidth * scale), 10000);\n};\n\nexport default Glyph;\n","// The GlyphSet object\n\nimport Glyph from './glyph';\n\n// Define a property on the glyph that depends on the path being loaded.\nfunction defineDependentProperty(glyph, externalName, internalName) {\n    Object.defineProperty(glyph, externalName, {\n        get: function() {\n            // Request the path property to make sure the path is loaded.\n            glyph.path; // jshint ignore:line\n            return glyph[internalName];\n        },\n        set: function(newValue) {\n            glyph[internalName] = newValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n}\n\n/**\n * A GlyphSet represents all glyphs available in the font, but modelled using\n * a deferred glyph loader, for retrieving glyphs only once they are absolutely\n * necessary, to keep the memory footprint down.\n * @exports opentype.GlyphSet\n * @class\n * @param {opentype.Font}\n * @param {Array}\n */\nfunction GlyphSet(font, glyphs) {\n    this.font = font;\n    this.glyphs = {};\n    if (Array.isArray(glyphs)) {\n        for (let i = 0; i < glyphs.length; i++) {\n            const glyph = glyphs[i];\n            glyph.path.unitsPerEm = font.unitsPerEm;\n            this.glyphs[i] = glyph;\n        }\n    }\n\n    this.length = (glyphs && glyphs.length) || 0;\n}\n\n/**\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nGlyphSet.prototype.get = function(index) {\n    // this.glyphs[index] is 'undefined' when low memory mode is on. glyph is pushed on request only.\n    if (this.glyphs[index] === undefined) {\n        this.font._push(index);\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n\n        let glyph = this.glyphs[index];\n        let unicodeObj = this.font._IndexToUnicodeMap[index];\n\n        if (unicodeObj) {\n            for (let j = 0; j < unicodeObj.unicodes.length; j++)\n                glyph.addUnicode(unicodeObj.unicodes[j]);\n        }\n\n        if (this.font.cffEncoding) {\n            if (this.font.isCIDFont) {\n                glyph.name = 'gid' + index;\n            } else {\n                glyph.name = this.font.cffEncoding.charset[index];\n            }\n        } else if (this.font.glyphNames.names) {\n            glyph.name = this.font.glyphNames.glyphIndexToName(index);\n        }\n\n        this.glyphs[index].advanceWidth = this.font._hmtxTableData[index].advanceWidth;\n        this.glyphs[index].leftSideBearing = this.font._hmtxTableData[index].leftSideBearing;\n    } else {\n        if (typeof this.glyphs[index] === 'function') {\n            this.glyphs[index] = this.glyphs[index]();\n        }\n    }\n\n    return this.glyphs[index];\n};\n\n/**\n * @param  {number} index\n * @param  {Object}\n */\nGlyphSet.prototype.push = function(index, loader) {\n    this.glyphs[index] = loader;\n    this.length++;\n};\n\n/**\n * @alias opentype.glyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @return {opentype.Glyph}\n */\nfunction glyphLoader(font, index) {\n    return new Glyph({index: index, font: font});\n}\n\n/**\n * Generate a stub glyph that can be filled with all metadata *except*\n * the \"points\" and \"path\" properties, which must be loaded only once\n * the glyph's path is actually requested for text shaping.\n * @alias opentype.ttfGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseGlyph\n * @param  {Object} data\n * @param  {number} position\n * @param  {Function} buildPath\n * @return {opentype.Glyph}\n */\nfunction ttfGlyphLoader(font, index, parseGlyph, data, position, buildPath) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            parseGlyph(glyph, data, position);\n            const path = buildPath(font.glyphs, glyph);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        defineDependentProperty(glyph, 'xMin', '_xMin');\n        defineDependentProperty(glyph, 'xMax', '_xMax');\n        defineDependentProperty(glyph, 'yMin', '_yMin');\n        defineDependentProperty(glyph, 'yMax', '_yMax');\n\n        return glyph;\n    };\n}\n/**\n * @alias opentype.cffGlyphLoader\n * @param  {opentype.Font} font\n * @param  {number} index\n * @param  {Function} parseCFFCharstring\n * @param  {string} charstring\n * @return {opentype.Glyph}\n */\nfunction cffGlyphLoader(font, index, parseCFFCharstring, charstring) {\n    return function() {\n        const glyph = new Glyph({index: index, font: font});\n\n        glyph.path = function() {\n            const path = parseCFFCharstring(font, glyph, charstring);\n            path.unitsPerEm = font.unitsPerEm;\n            return path;\n        };\n\n        return glyph;\n    };\n}\n\nexport default { GlyphSet, glyphLoader, ttfGlyphLoader, cffGlyphLoader };\n","// The `CFF` table contains the glyph outlines in PostScript format.\n// https://www.microsoft.com/typography/OTSPEC/cff.htm\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/cff.pdf\n// http://download.microsoft.com/download/8/0/1/801a191c-029d-4af3-9642-555f6fe514ee/type2.pdf\n\nimport { CffEncoding, cffStandardEncoding, cffExpertEncoding, cffStandardStrings } from '../encoding';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\nimport table from '../table';\n\n// Custom equals function that can also check lists.\nfunction equals(a, b) {\n    if (a === b) {\n        return true;\n    } else if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return false;\n        }\n\n        for (let i = 0; i < a.length; i += 1) {\n            if (!equals(a[i], b[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    } else {\n        return false;\n    }\n}\n\n// Subroutines are encoded using the negative half of the number space.\n// See type 2 chapter 4.7 \"Subroutine operators\".\nfunction calcCFFSubroutineBias(subrs) {\n    let bias;\n    if (subrs.length < 1240) {\n        bias = 107;\n    } else if (subrs.length < 33900) {\n        bias = 1131;\n    } else {\n        bias = 32768;\n    }\n\n    return bias;\n}\n\n// Parse a `CFF` INDEX array.\n// An index array consists of a list of offsets, then a list of objects at those offsets.\nfunction parseCFFIndex(data, start, conversionFn) {\n    const offsets = [];\n    const objects = [];\n    const count = parse.getCard16(data, start);\n    let objectOffset;\n    let endOffset;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        let pos = start + 3;\n        for (let i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    for (let i = 0; i < offsets.length - 1; i += 1) {\n        let value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n        if (conversionFn) {\n            value = conversionFn(value);\n        }\n\n        objects.push(value);\n    }\n\n    return {objects: objects, startOffset: start, endOffset: endOffset};\n}\n\nfunction parseCFFIndexLowMemory(data, start) {\n    const offsets = [];\n    const count = parse.getCard16(data, start);\n    let objectOffset;\n    let endOffset;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n        let pos = start + 3;\n        for (let i = 0; i < count + 1; i += 1) {\n            offsets.push(parse.getOffset(data, pos, offsetSize));\n            pos += offsetSize;\n        }\n\n        // The total size of the index array is 4 header bytes + the value of the last offset.\n        endOffset = objectOffset + offsets[count];\n    } else {\n        endOffset = start + 2;\n    }\n\n    return {offsets: offsets, startOffset: start, endOffset: endOffset};\n}\nfunction getCffIndexObject(i, offsets, data, start, conversionFn) {\n    const count = parse.getCard16(data, start);\n    let objectOffset = 0;\n    if (count !== 0) {\n        const offsetSize = parse.getByte(data, start + 2);\n        objectOffset = start + ((count + 1) * offsetSize) + 2;\n    }\n\n    let value = parse.getBytes(data, objectOffset + offsets[i], objectOffset + offsets[i + 1]);\n    if (conversionFn) {\n        value = conversionFn(value);\n    }\n    return value;\n}\n\n// Parse a `CFF` DICT real value.\nfunction parseFloatOperand(parser) {\n    let s = '';\n    const eof = 15;\n    const lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n    while (true) {\n        const b = parser.parseByte();\n        const n1 = b >> 4;\n        const n2 = b & 15;\n\n        if (n1 === eof) {\n            break;\n        }\n\n        s += lookup[n1];\n\n        if (n2 === eof) {\n            break;\n        }\n\n        s += lookup[n2];\n    }\n\n    return parseFloat(s);\n}\n\n// Parse a `CFF` DICT operand.\nfunction parseOperand(parser, b0) {\n    let b1;\n    let b2;\n    let b3;\n    let b4;\n    if (b0 === 28) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        return b1 << 8 | b2;\n    }\n\n    if (b0 === 29) {\n        b1 = parser.parseByte();\n        b2 = parser.parseByte();\n        b3 = parser.parseByte();\n        b4 = parser.parseByte();\n        return b1 << 24 | b2 << 16 | b3 << 8 | b4;\n    }\n\n    if (b0 === 30) {\n        return parseFloatOperand(parser);\n    }\n\n    if (b0 >= 32 && b0 <= 246) {\n        return b0 - 139;\n    }\n\n    if (b0 >= 247 && b0 <= 250) {\n        b1 = parser.parseByte();\n        return (b0 - 247) * 256 + b1 + 108;\n    }\n\n    if (b0 >= 251 && b0 <= 254) {\n        b1 = parser.parseByte();\n        return -(b0 - 251) * 256 - b1 - 108;\n    }\n\n    throw new Error('Invalid b0 ' + b0);\n}\n\n// Convert the entries returned by `parseDict` to a proper dictionary.\n// If a value is a list of one, it is unpacked.\nfunction entriesToObject(entries) {\n    const o = {};\n    for (let i = 0; i < entries.length; i += 1) {\n        const key = entries[i][0];\n        const values = entries[i][1];\n        let value;\n        if (values.length === 1) {\n            value = values[0];\n        } else {\n            value = values;\n        }\n\n        if (o.hasOwnProperty(key) && !isNaN(o[key])) {\n            throw new Error('Object ' + o + ' already has key ' + key);\n        }\n\n        o[key] = value;\n    }\n\n    return o;\n}\n\n// Parse a `CFF` DICT object.\n// A dictionary contains key-value pairs in a compact tokenized format.\nfunction parseCFFDict(data, start, size) {\n    start = start !== undefined ? start : 0;\n    const parser = new parse.Parser(data, start);\n    const entries = [];\n    let operands = [];\n    size = size !== undefined ? size : data.length;\n\n    while (parser.relativeOffset < size) {\n        let op = parser.parseByte();\n\n        // The first byte for each dict item distinguishes between operator (key) and operand (value).\n        // Values <= 21 are operators.\n        if (op <= 21) {\n            // Two-byte operators have an initial escape byte of 12.\n            if (op === 12) {\n                op = 1200 + parser.parseByte();\n            }\n\n            entries.push([op, operands]);\n            operands = [];\n        } else {\n            // Since the operands (values) come before the operators (keys), we store all operands in a list\n            // until we encounter an operator.\n            operands.push(parseOperand(parser, op));\n        }\n    }\n\n    return entriesToObject(entries);\n}\n\n// Given a String Index (SID), return the value of the string.\n// Strings below index 392 are standard CFF strings and are not encoded in the font.\nfunction getCFFString(strings, index) {\n    if (index <= 390) {\n        index = cffStandardStrings[index];\n    } else {\n        index = strings[index - 391];\n    }\n\n    return index;\n}\n\n// Interpret a dictionary and return a new dictionary with readable keys and values for missing entries.\n// This function takes `meta` which is a list of objects containing `operand`, `name` and `default`.\nfunction interpretDict(dict, meta, strings) {\n    const newDict = {};\n    let value;\n\n    // Because we also want to include missing values, we start out from the meta list\n    // and lookup values in the dict.\n    for (let i = 0; i < meta.length; i += 1) {\n        const m = meta[i];\n\n        if (Array.isArray(m.type)) {\n            const values = [];\n            values.length = m.type.length;\n            for (let j = 0; j < m.type.length; j++) {\n                value = dict[m.op] !== undefined ? dict[m.op][j] : undefined;\n                if (value === undefined) {\n                    value = m.value !== undefined && m.value[j] !== undefined ? m.value[j] : null;\n                }\n                if (m.type[j] === 'SID') {\n                    value = getCFFString(strings, value);\n                }\n                values[j] = value;\n            }\n            newDict[m.name] = values;\n        } else {\n            value = dict[m.op];\n            if (value === undefined) {\n                value = m.value !== undefined ? m.value : null;\n            }\n\n            if (m.type === 'SID') {\n                value = getCFFString(strings, value);\n            }\n            newDict[m.name] = value;\n        }\n    }\n\n    return newDict;\n}\n\n// Parse the CFF header.\nfunction parseCFFHeader(data, start) {\n    const header = {};\n    header.formatMajor = parse.getCard8(data, start);\n    header.formatMinor = parse.getCard8(data, start + 1);\n    header.size = parse.getCard8(data, start + 2);\n    header.offsetSize = parse.getCard8(data, start + 3);\n    header.startOffset = start;\n    header.endOffset = start + 4;\n    return header;\n}\n\nconst TOP_DICT_META = [\n    {name: 'version', op: 0, type: 'SID'},\n    {name: 'notice', op: 1, type: 'SID'},\n    {name: 'copyright', op: 1200, type: 'SID'},\n    {name: 'fullName', op: 2, type: 'SID'},\n    {name: 'familyName', op: 3, type: 'SID'},\n    {name: 'weight', op: 4, type: 'SID'},\n    {name: 'isFixedPitch', op: 1201, type: 'number', value: 0},\n    {name: 'italicAngle', op: 1202, type: 'number', value: 0},\n    {name: 'underlinePosition', op: 1203, type: 'number', value: -100},\n    {name: 'underlineThickness', op: 1204, type: 'number', value: 50},\n    {name: 'paintType', op: 1205, type: 'number', value: 0},\n    {name: 'charstringType', op: 1206, type: 'number', value: 2},\n    {\n        name: 'fontMatrix',\n        op: 1207,\n        type: ['real', 'real', 'real', 'real', 'real', 'real'],\n        value: [0.001, 0, 0, 0.001, 0, 0]\n    },\n    {name: 'uniqueId', op: 13, type: 'number'},\n    {name: 'fontBBox', op: 5, type: ['number', 'number', 'number', 'number'], value: [0, 0, 0, 0]},\n    {name: 'strokeWidth', op: 1208, type: 'number', value: 0},\n    {name: 'xuid', op: 14, type: [], value: null},\n    {name: 'charset', op: 15, type: 'offset', value: 0},\n    {name: 'encoding', op: 16, type: 'offset', value: 0},\n    {name: 'charStrings', op: 17, type: 'offset', value: 0},\n    {name: 'private', op: 18, type: ['number', 'offset'], value: [0, 0]},\n    {name: 'ros', op: 1230, type: ['SID', 'SID', 'number']},\n    {name: 'cidFontVersion', op: 1231, type: 'number', value: 0},\n    {name: 'cidFontRevision', op: 1232, type: 'number', value: 0},\n    {name: 'cidFontType', op: 1233, type: 'number', value: 0},\n    {name: 'cidCount', op: 1234, type: 'number', value: 8720},\n    {name: 'uidBase', op: 1235, type: 'number'},\n    {name: 'fdArray', op: 1236, type: 'offset'},\n    {name: 'fdSelect', op: 1237, type: 'offset'},\n    {name: 'fontName', op: 1238, type: 'SID'}\n];\n\nconst PRIVATE_DICT_META = [\n    {name: 'subrs', op: 19, type: 'offset', value: 0},\n    {name: 'defaultWidthX', op: 20, type: 'number', value: 0},\n    {name: 'nominalWidthX', op: 21, type: 'number', value: 0}\n];\n\n// Parse the CFF top dictionary. A CFF table can contain multiple fonts, each with their own top dictionary.\n// The top dictionary contains the essential metadata for the font, together with the private dictionary.\nfunction parseCFFTopDict(data, strings) {\n    const dict = parseCFFDict(data, 0, data.byteLength);\n    return interpretDict(dict, TOP_DICT_META, strings);\n}\n\n// Parse the CFF private dictionary. We don't fully parse out all the values, only the ones we need.\nfunction parseCFFPrivateDict(data, start, size, strings) {\n    const dict = parseCFFDict(data, start, size);\n    return interpretDict(dict, PRIVATE_DICT_META, strings);\n}\n\n// Returns a list of \"Top DICT\"s found using an INDEX list.\n// Used to read both the usual high-level Top DICTs and also the FDArray\n// discovered inside CID-keyed fonts.  When a Top DICT has a reference to\n// a Private DICT that is read and saved into the Top DICT.\n//\n// In addition to the expected/optional values as outlined in TOP_DICT_META\n// the following values might be saved into the Top DICT.\n//\n//    _subrs []        array of local CFF subroutines from Private DICT\n//    _subrsBias       bias value computed from number of subroutines\n//                      (see calcCFFSubroutineBias() and parseCFFCharstring())\n//    _defaultWidthX   default widths for CFF characters\n//    _nominalWidthX   bias added to width embedded within glyph description\n//\n//    _privateDict     saved copy of parsed Private DICT from Top DICT\nfunction gatherCFFTopDicts(data, start, cffIndex, strings) {\n    const topDictArray = [];\n    for (let iTopDict = 0; iTopDict < cffIndex.length; iTopDict += 1) {\n        const topDictData = new DataView(new Uint8Array(cffIndex[iTopDict]).buffer);\n        const topDict = parseCFFTopDict(topDictData, strings);\n        topDict._subrs = [];\n        topDict._subrsBias = 0;\n        const privateSize = topDict.private[0];\n        const privateOffset = topDict.private[1];\n        if (privateSize !== 0 && privateOffset !== 0) {\n            const privateDict = parseCFFPrivateDict(data, privateOffset + start, privateSize, strings);\n            topDict._defaultWidthX = privateDict.defaultWidthX;\n            topDict._nominalWidthX = privateDict.nominalWidthX;\n            if (privateDict.subrs !== 0) {\n                const subrOffset = privateOffset + privateDict.subrs;\n                const subrIndex = parseCFFIndex(data, subrOffset + start);\n                topDict._subrs = subrIndex.objects;\n                topDict._subrsBias = calcCFFSubroutineBias(topDict._subrs);\n            }\n            topDict._privateDict = privateDict;\n        }\n        topDictArray.push(topDict);\n    }\n    return topDictArray;\n}\n\n// Parse the CFF charset table, which contains internal names for all the glyphs.\n// This function will return a list of glyph names.\n// See Adobe TN #5176 chapter 13, \"Charsets\".\nfunction parseCFFCharset(data, start, nGlyphs, strings) {\n    let sid;\n    let count;\n    const parser = new parse.Parser(data, start);\n\n    // The .notdef glyph is not included, so subtract 1.\n    nGlyphs -= 1;\n    const charset = ['.notdef'];\n\n    const format = parser.parseCard8();\n    if (format === 0) {\n        for (let i = 0; i < nGlyphs; i += 1) {\n            sid = parser.parseSID();\n            charset.push(getCFFString(strings, sid));\n        }\n    } else if (format === 1) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard8();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else if (format === 2) {\n        while (charset.length <= nGlyphs) {\n            sid = parser.parseSID();\n            count = parser.parseCard16();\n            for (let i = 0; i <= count; i += 1) {\n                charset.push(getCFFString(strings, sid));\n                sid += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown charset format ' + format);\n    }\n\n    return charset;\n}\n\n// Parse the CFF encoding data. Only one encoding can be specified per font.\n// See Adobe TN #5176 chapter 12, \"Encodings\".\nfunction parseCFFEncoding(data, start, charset) {\n    let code;\n    const enc = {};\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        const nCodes = parser.parseCard8();\n        for (let i = 0; i < nCodes; i += 1) {\n            code = parser.parseCard8();\n            enc[code] = i;\n        }\n    } else if (format === 1) {\n        const nRanges = parser.parseCard8();\n        code = 1;\n        for (let i = 0; i < nRanges; i += 1) {\n            const first = parser.parseCard8();\n            const nLeft = parser.parseCard8();\n            for (let j = first; j <= first + nLeft; j += 1) {\n                enc[j] = code;\n                code += 1;\n            }\n        }\n    } else {\n        throw new Error('Unknown encoding format ' + format);\n    }\n\n    return new CffEncoding(enc, charset);\n}\n\n// Take in charstring code and return a Glyph object.\n// The encoding is described in the Type 2 Charstring Format\n// https://www.microsoft.com/typography/OTSPEC/charstr2.htm\nfunction parseCFFCharstring(font, glyph, code) {\n    let c1x;\n    let c1y;\n    let c2x;\n    let c2y;\n    const p = new Path();\n    const stack = [];\n    let nStems = 0;\n    let haveWidth = false;\n    let open = false;\n    let x = 0;\n    let y = 0;\n    let subrs;\n    let subrsBias;\n    let defaultWidthX;\n    let nominalWidthX;\n    if (font.isCIDFont) {\n        const fdIndex = font.tables.cff.topDict._fdSelect[glyph.index];\n        const fdDict = font.tables.cff.topDict._fdArray[fdIndex];\n        subrs = fdDict._subrs;\n        subrsBias = fdDict._subrsBias;\n        defaultWidthX = fdDict._defaultWidthX;\n        nominalWidthX = fdDict._nominalWidthX;\n    } else {\n        subrs = font.tables.cff.topDict._subrs;\n        subrsBias = font.tables.cff.topDict._subrsBias;\n        defaultWidthX = font.tables.cff.topDict._defaultWidthX;\n        nominalWidthX = font.tables.cff.topDict._nominalWidthX;\n    }\n    let width = defaultWidthX;\n\n    function newContour(x, y) {\n        if (open) {\n            p.closePath();\n        }\n\n        p.moveTo(x, y);\n        open = true;\n    }\n\n    function parseStems() {\n        let hasWidthArg;\n\n        // The number of stem operators on the stack is always even.\n        // If the value is uneven, that means a width is specified.\n        hasWidthArg = stack.length % 2 !== 0;\n        if (hasWidthArg && !haveWidth) {\n            width = stack.shift() + nominalWidthX;\n        }\n\n        nStems += stack.length >> 1;\n        stack.length = 0;\n        haveWidth = true;\n    }\n\n    function parse(code) {\n        let b1;\n        let b2;\n        let b3;\n        let b4;\n        let codeIndex;\n        let subrCode;\n        let jpx;\n        let jpy;\n        let c3x;\n        let c3y;\n        let c4x;\n        let c4y;\n\n        let i = 0;\n        while (i < code.length) {\n            let v = code[i];\n            i += 1;\n            switch (v) {\n                case 1: // hstem\n                    parseStems();\n                    break;\n                case 3: // vstem\n                    parseStems();\n                    break;\n                case 4: // vmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 5: // rlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 6: // hlineto\n                    while (stack.length > 0) {\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 7: // vlineto\n                    while (stack.length > 0) {\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        x += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    break;\n                case 8: // rrcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 10: // callsubr\n                    codeIndex = stack.pop() + subrsBias;\n                    subrCode = subrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 11: // return\n                    return;\n                case 12: // flex operators\n                    v = code[i];\n                    i += 1;\n                    switch (v) {\n                        case 35: // flex\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 dx6 dy6 fd flex (12 35) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x   + stack.shift();    // dx6\n                            y = c4y   + stack.shift();    // dy6\n                            stack.shift();                // flex depth\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 34: // hflex\n                            // |- dx1 dx2 dy2 dx3 dx4 dx5 dx6 hflex (12 34) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y;                      // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = y;                      // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 36: // hflex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dx4 dx5 dy5 dx6 hflex1 (12 36) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y;                    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = c2y;                    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            x = c4x + stack.shift();      // dx6\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        case 37: // flex1\n                            // |- dx1 dy1 dx2 dy2 dx3 dy3 dx4 dy4 dx5 dy5 d6 flex1 (12 37) |-\n                            c1x = x   + stack.shift();    // dx1\n                            c1y = y   + stack.shift();    // dy1\n                            c2x = c1x + stack.shift();    // dx2\n                            c2y = c1y + stack.shift();    // dy2\n                            jpx = c2x + stack.shift();    // dx3\n                            jpy = c2y + stack.shift();    // dy3\n                            c3x = jpx + stack.shift();    // dx4\n                            c3y = jpy + stack.shift();    // dy4\n                            c4x = c3x + stack.shift();    // dx5\n                            c4y = c3y + stack.shift();    // dy5\n                            if (Math.abs(c4x - x) > Math.abs(c4y - y)) {\n                                x = c4x + stack.shift();\n                            } else {\n                                y = c4y + stack.shift();\n                            }\n\n                            p.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);\n                            p.curveTo(c3x, c3y, c4x, c4y, x, y);\n                            break;\n                        default:\n                            console.log('Glyph ' + glyph.index + ': unknown operator ' + 1200 + v);\n                            stack.length = 0;\n                    }\n                    break;\n                case 14: // endchar\n                    if (stack.length > 0 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    if (open) {\n                        p.closePath();\n                        open = false;\n                    }\n\n                    break;\n                case 18: // hstemhm\n                    parseStems();\n                    break;\n                case 19: // hintmask\n                case 20: // cntrmask\n                    parseStems();\n                    i += (nStems + 7) >> 3;\n                    break;\n                case 21: // rmoveto\n                    if (stack.length > 2 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    y += stack.pop();\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 22: // hmoveto\n                    if (stack.length > 1 && !haveWidth) {\n                        width = stack.shift() + nominalWidthX;\n                        haveWidth = true;\n                    }\n\n                    x += stack.pop();\n                    newContour(x, y);\n                    break;\n                case 23: // vstemhm\n                    parseStems();\n                    break;\n                case 24: // rcurveline\n                    while (stack.length > 2) {\n                        c1x = x + stack.shift();\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    x += stack.shift();\n                    y += stack.shift();\n                    p.lineTo(x, y);\n                    break;\n                case 25: // rlinecurve\n                    while (stack.length > 6) {\n                        x += stack.shift();\n                        y += stack.shift();\n                        p.lineTo(x, y);\n                    }\n\n                    c1x = x + stack.shift();\n                    c1y = y + stack.shift();\n                    c2x = c1x + stack.shift();\n                    c2y = c1y + stack.shift();\n                    x = c2x + stack.shift();\n                    y = c2y + stack.shift();\n                    p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    break;\n                case 26: // vvcurveto\n                    if (stack.length % 2) {\n                        x += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x;\n                        y = c2y + stack.shift();\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 27: // hhcurveto\n                    if (stack.length % 2) {\n                        y += stack.shift();\n                    }\n\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y;\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 28: // shortint\n                    b1 = code[i];\n                    b2 = code[i + 1];\n                    stack.push(((b1 << 24) | (b2 << 16)) >> 16);\n                    i += 2;\n                    break;\n                case 29: // callgsubr\n                    codeIndex = stack.pop() + font.gsubrsBias;\n                    subrCode = font.gsubrs[codeIndex];\n                    if (subrCode) {\n                        parse(subrCode);\n                    }\n\n                    break;\n                case 30: // vhcurveto\n                    while (stack.length > 0) {\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                case 31: // hvcurveto\n                    while (stack.length > 0) {\n                        c1x = x + stack.shift();\n                        c1y = y;\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        y = c2y + stack.shift();\n                        x = c2x + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                        if (stack.length === 0) {\n                            break;\n                        }\n\n                        c1x = x;\n                        c1y = y + stack.shift();\n                        c2x = c1x + stack.shift();\n                        c2y = c1y + stack.shift();\n                        x = c2x + stack.shift();\n                        y = c2y + (stack.length === 1 ? stack.shift() : 0);\n                        p.curveTo(c1x, c1y, c2x, c2y, x, y);\n                    }\n\n                    break;\n                default:\n                    if (v < 32) {\n                        console.log('Glyph ' + glyph.index + ': unknown operator ' + v);\n                    } else if (v < 247) {\n                        stack.push(v - 139);\n                    } else if (v < 251) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push((v - 247) * 256 + b1 + 108);\n                    } else if (v < 255) {\n                        b1 = code[i];\n                        i += 1;\n                        stack.push(-(v - 251) * 256 - b1 - 108);\n                    } else {\n                        b1 = code[i];\n                        b2 = code[i + 1];\n                        b3 = code[i + 2];\n                        b4 = code[i + 3];\n                        i += 4;\n                        stack.push(((b1 << 24) | (b2 << 16) | (b3 << 8) | b4) / 65536);\n                    }\n            }\n        }\n    }\n\n    parse(code);\n\n    glyph.advanceWidth = width;\n    return p;\n}\n\nfunction parseCFFFDSelect(data, start, nGlyphs, fdArrayCount) {\n    const fdSelect = [];\n    let fdIndex;\n    const parser = new parse.Parser(data, start);\n    const format = parser.parseCard8();\n    if (format === 0) {\n        // Simple list of nGlyphs elements\n        for (let iGid = 0; iGid < nGlyphs; iGid++) {\n            fdIndex = parser.parseCard8();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            fdSelect.push(fdIndex);\n        }\n    } else if (format === 3) {\n        // Ranges\n        const nRanges = parser.parseCard16();\n        let first = parser.parseCard16();\n        if (first !== 0) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad initial GID ' + first);\n        }\n        let next;\n        for (let iRange = 0; iRange < nRanges; iRange++) {\n            fdIndex = parser.parseCard8();\n            next = parser.parseCard16();\n            if (fdIndex >= fdArrayCount) {\n                throw new Error('CFF table CID Font FDSelect has bad FD index value ' + fdIndex + ' (FD count ' + fdArrayCount + ')');\n            }\n            if (next > nGlyphs) {\n                throw new Error('CFF Table CID Font FDSelect format 3 range has bad GID ' + next);\n            }\n            for (; first < next; first++) {\n                fdSelect.push(fdIndex);\n            }\n            first = next;\n        }\n        if (next !== nGlyphs) {\n            throw new Error('CFF Table CID Font FDSelect format 3 range has bad final GID ' + next);\n        }\n    } else {\n        throw new Error('CFF Table CID Font FDSelect table has unsupported format ' + format);\n    }\n    return fdSelect;\n}\n\n// Parse the `CFF` table, which contains the glyph outlines in PostScript format.\nfunction parseCFFTable(data, start, font, opt) {\n    font.tables.cff = {};\n    const header = parseCFFHeader(data, start);\n    const nameIndex = parseCFFIndex(data, header.endOffset, parse.bytesToString);\n    const topDictIndex = parseCFFIndex(data, nameIndex.endOffset);\n    const stringIndex = parseCFFIndex(data, topDictIndex.endOffset, parse.bytesToString);\n    const globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);\n    font.gsubrs = globalSubrIndex.objects;\n    font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);\n\n    const topDictArray = gatherCFFTopDicts(data, start, topDictIndex.objects, stringIndex.objects);\n    if (topDictArray.length !== 1) {\n        throw new Error('CFF table has too many fonts in \\'FontSet\\' - count of fonts NameIndex.length = ' + topDictArray.length);\n    }\n\n    const topDict = topDictArray[0];\n    font.tables.cff.topDict = topDict;\n\n    if (topDict._privateDict) {\n        font.defaultWidthX = topDict._privateDict.defaultWidthX;\n        font.nominalWidthX = topDict._privateDict.nominalWidthX;\n    }\n\n    if (topDict.ros[0] !== undefined && topDict.ros[1] !== undefined) {\n        font.isCIDFont = true;\n    }\n\n    if (font.isCIDFont) {\n        let fdArrayOffset = topDict.fdArray;\n        let fdSelectOffset = topDict.fdSelect;\n        if (fdArrayOffset === 0 || fdSelectOffset === 0) {\n            throw new Error('Font is marked as a CID font, but FDArray and/or FDSelect information is missing');\n        }\n        fdArrayOffset += start;\n        const fdArrayIndex = parseCFFIndex(data, fdArrayOffset);\n        const fdArray = gatherCFFTopDicts(data, start, fdArrayIndex.objects, stringIndex.objects);\n        topDict._fdArray = fdArray;\n        fdSelectOffset += start;\n        topDict._fdSelect = parseCFFFDSelect(data, fdSelectOffset, font.numGlyphs, fdArray.length);\n    }\n\n    const privateDictOffset = start + topDict.private[1];\n    const privateDict = parseCFFPrivateDict(data, privateDictOffset, topDict.private[0], stringIndex.objects);\n    font.defaultWidthX = privateDict.defaultWidthX;\n    font.nominalWidthX = privateDict.nominalWidthX;\n\n    if (privateDict.subrs !== 0) {\n        const subrOffset = privateDictOffset + privateDict.subrs;\n        const subrIndex = parseCFFIndex(data, subrOffset);\n        font.subrs = subrIndex.objects;\n        font.subrsBias = calcCFFSubroutineBias(font.subrs);\n    } else {\n        font.subrs = [];\n        font.subrsBias = 0;\n    }\n\n    // Offsets in the top dict are relative to the beginning of the CFF data, so add the CFF start offset.\n    let charStringsIndex;\n    if (opt.lowMemory) {\n        charStringsIndex = parseCFFIndexLowMemory(data, start + topDict.charStrings);\n        font.nGlyphs = charStringsIndex.offsets.length;\n    } else {\n        charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);\n        font.nGlyphs = charStringsIndex.objects.length;\n    }\n\n    const charset = parseCFFCharset(data, start + topDict.charset, font.nGlyphs, stringIndex.objects);\n    if (topDict.encoding === 0) {\n        // Standard encoding\n        font.cffEncoding = new CffEncoding(cffStandardEncoding, charset);\n    } else if (topDict.encoding === 1) {\n        // Expert encoding\n        font.cffEncoding = new CffEncoding(cffExpertEncoding, charset);\n    } else {\n        font.cffEncoding = parseCFFEncoding(data, start + topDict.encoding, charset);\n    }\n\n    // Prefer the CMAP encoding to the CFF encoding.\n    font.encoding = font.encoding || font.cffEncoding;\n\n    font.glyphs = new glyphset.GlyphSet(font);\n    if (opt.lowMemory) {\n        font._push = function(i) {\n            const charString = getCffIndexObject(i, charStringsIndex.offsets, data, start + topDict.charStrings);\n            font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n        };\n    } else {\n        for (let i = 0; i < font.nGlyphs; i += 1) {\n            const charString = charStringsIndex.objects[i];\n            font.glyphs.push(i, glyphset.cffGlyphLoader(font, i, parseCFFCharstring, charString));\n        }\n    }\n}\n\n// Convert a string to a String ID (SID).\n// The list of strings is modified in place.\nfunction encodeString(s, strings) {\n    let sid;\n\n    // Is the string in the CFF standard strings?\n    let i = cffStandardStrings.indexOf(s);\n    if (i >= 0) {\n        sid = i;\n    }\n\n    // Is the string already in the string index?\n    i = strings.indexOf(s);\n    if (i >= 0) {\n        sid = i + cffStandardStrings.length;\n    } else {\n        sid = cffStandardStrings.length + strings.length;\n        strings.push(s);\n    }\n\n    return sid;\n}\n\nfunction makeHeader() {\n    return new table.Record('Header', [\n        {name: 'major', type: 'Card8', value: 1},\n        {name: 'minor', type: 'Card8', value: 0},\n        {name: 'hdrSize', type: 'Card8', value: 4},\n        {name: 'major', type: 'Card8', value: 1}\n    ]);\n}\n\nfunction makeNameIndex(fontNames) {\n    const t = new table.Record('Name INDEX', [\n        {name: 'names', type: 'INDEX', value: []}\n    ]);\n    t.names = [];\n    for (let i = 0; i < fontNames.length; i += 1) {\n        t.names.push({name: 'name_' + i, type: 'NAME', value: fontNames[i]});\n    }\n\n    return t;\n}\n\n// Given a dictionary's metadata, create a DICT structure.\nfunction makeDict(meta, attrs, strings) {\n    const m = {};\n    for (let i = 0; i < meta.length; i += 1) {\n        const entry = meta[i];\n        let value = attrs[entry.name];\n        if (value !== undefined && !equals(value, entry.value)) {\n            if (entry.type === 'SID') {\n                value = encodeString(value, strings);\n            }\n\n            m[entry.op] = {name: entry.name, type: entry.type, value: value};\n        }\n    }\n\n    return m;\n}\n\n// The Top DICT houses the global font attributes.\nfunction makeTopDict(attrs, strings) {\n    const t = new table.Record('Top DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(TOP_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeTopDictIndex(topDict) {\n    const t = new table.Record('Top DICT INDEX', [\n        {name: 'topDicts', type: 'INDEX', value: []}\n    ]);\n    t.topDicts = [{name: 'topDict_0', type: 'TABLE', value: topDict}];\n    return t;\n}\n\nfunction makeStringIndex(strings) {\n    const t = new table.Record('String INDEX', [\n        {name: 'strings', type: 'INDEX', value: []}\n    ]);\n    t.strings = [];\n    for (let i = 0; i < strings.length; i += 1) {\n        t.strings.push({name: 'string_' + i, type: 'STRING', value: strings[i]});\n    }\n\n    return t;\n}\n\nfunction makeGlobalSubrIndex() {\n    // Currently we don't use subroutines.\n    return new table.Record('Global Subr INDEX', [\n        {name: 'subrs', type: 'INDEX', value: []}\n    ]);\n}\n\nfunction makeCharsets(glyphNames, strings) {\n    const t = new table.Record('Charsets', [\n        {name: 'format', type: 'Card8', value: 0}\n    ]);\n    for (let i = 0; i < glyphNames.length; i += 1) {\n        const glyphName = glyphNames[i];\n        const glyphSID = encodeString(glyphName, strings);\n        t.fields.push({name: 'glyph_' + i, type: 'SID', value: glyphSID});\n    }\n\n    return t;\n}\n\nfunction glyphToOps(glyph) {\n    const ops = [];\n    const path = glyph.path;\n    ops.push({name: 'width', type: 'NUMBER', value: glyph.advanceWidth});\n    let x = 0;\n    let y = 0;\n    for (let i = 0; i < path.commands.length; i += 1) {\n        let dx;\n        let dy;\n        let cmd = path.commands[i];\n        if (cmd.type === 'Q') {\n            // CFF only supports bézier curves, so convert the quad to a bézier.\n            const _13 = 1 / 3;\n            const _23 = 2 / 3;\n\n            // We're going to create a new command so we don't change the original path.\n            cmd = {\n                type: 'C',\n                x: cmd.x,\n                y: cmd.y,\n                x1: _13 * x + _23 * cmd.x1,\n                y1: _13 * y + _23 * cmd.y1,\n                x2: _13 * cmd.x + _23 * cmd.x1,\n                y2: _13 * cmd.y + _23 * cmd.y1\n            };\n        }\n\n        if (cmd.type === 'M') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rmoveto', type: 'OP', value: 21});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'L') {\n            dx = Math.round(cmd.x - x);\n            dy = Math.round(cmd.y - y);\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rlineto', type: 'OP', value: 5});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        } else if (cmd.type === 'C') {\n            const dx1 = Math.round(cmd.x1 - x);\n            const dy1 = Math.round(cmd.y1 - y);\n            const dx2 = Math.round(cmd.x2 - cmd.x1);\n            const dy2 = Math.round(cmd.y2 - cmd.y1);\n            dx = Math.round(cmd.x - cmd.x2);\n            dy = Math.round(cmd.y - cmd.y2);\n            ops.push({name: 'dx1', type: 'NUMBER', value: dx1});\n            ops.push({name: 'dy1', type: 'NUMBER', value: dy1});\n            ops.push({name: 'dx2', type: 'NUMBER', value: dx2});\n            ops.push({name: 'dy2', type: 'NUMBER', value: dy2});\n            ops.push({name: 'dx', type: 'NUMBER', value: dx});\n            ops.push({name: 'dy', type: 'NUMBER', value: dy});\n            ops.push({name: 'rrcurveto', type: 'OP', value: 8});\n            x = Math.round(cmd.x);\n            y = Math.round(cmd.y);\n        }\n\n        // Contours are closed automatically.\n    }\n\n    ops.push({name: 'endchar', type: 'OP', value: 14});\n    return ops;\n}\n\nfunction makeCharStringsIndex(glyphs) {\n    const t = new table.Record('CharStrings INDEX', [\n        {name: 'charStrings', type: 'INDEX', value: []}\n    ]);\n\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const ops = glyphToOps(glyph);\n        t.charStrings.push({name: glyph.name, type: 'CHARSTRING', value: ops});\n    }\n\n    return t;\n}\n\nfunction makePrivateDict(attrs, strings) {\n    const t = new table.Record('Private DICT', [\n        {name: 'dict', type: 'DICT', value: {}}\n    ]);\n    t.dict = makeDict(PRIVATE_DICT_META, attrs, strings);\n    return t;\n}\n\nfunction makeCFFTable(glyphs, options) {\n    const t = new table.Table('CFF ', [\n        {name: 'header', type: 'RECORD'},\n        {name: 'nameIndex', type: 'RECORD'},\n        {name: 'topDictIndex', type: 'RECORD'},\n        {name: 'stringIndex', type: 'RECORD'},\n        {name: 'globalSubrIndex', type: 'RECORD'},\n        {name: 'charsets', type: 'RECORD'},\n        {name: 'charStringsIndex', type: 'RECORD'},\n        {name: 'privateDict', type: 'RECORD'}\n    ]);\n\n    const fontScale = 1 / options.unitsPerEm;\n    // We use non-zero values for the offsets so that the DICT encodes them.\n    // This is important because the size of the Top DICT plays a role in offset calculation,\n    // and the size shouldn't change after we've written correct offsets.\n    const attrs = {\n        version: options.version,\n        fullName: options.fullName,\n        familyName: options.familyName,\n        weight: options.weightName,\n        fontBBox: options.fontBBox || [0, 0, 0, 0],\n        fontMatrix: [fontScale, 0, 0, fontScale, 0, 0],\n        charset: 999,\n        encoding: 0,\n        charStrings: 999,\n        private: [0, 999]\n    };\n\n    const privateAttrs = {};\n\n    const glyphNames = [];\n    let glyph;\n\n    // Skip first glyph (.notdef)\n    for (let i = 1; i < glyphs.length; i += 1) {\n        glyph = glyphs.get(i);\n        glyphNames.push(glyph.name);\n    }\n\n    const strings = [];\n\n    t.header = makeHeader();\n    t.nameIndex = makeNameIndex([options.postScriptName]);\n    let topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n    t.globalSubrIndex = makeGlobalSubrIndex();\n    t.charsets = makeCharsets(glyphNames, strings);\n    t.charStringsIndex = makeCharStringsIndex(glyphs);\n    t.privateDict = makePrivateDict(privateAttrs, strings);\n\n    // Needs to come at the end, to encode all custom strings used in the font.\n    t.stringIndex = makeStringIndex(strings);\n\n    const startOffset = t.header.sizeOf() +\n        t.nameIndex.sizeOf() +\n        t.topDictIndex.sizeOf() +\n        t.stringIndex.sizeOf() +\n        t.globalSubrIndex.sizeOf();\n    attrs.charset = startOffset;\n\n    // We use the CFF standard encoding; proper encoding will be handled in cmap.\n    attrs.encoding = 0;\n    attrs.charStrings = attrs.charset + t.charsets.sizeOf();\n    attrs.private[1] = attrs.charStrings + t.charStringsIndex.sizeOf();\n\n    // Recreate the Top DICT INDEX with the correct offsets.\n    topDict = makeTopDict(attrs, strings);\n    t.topDictIndex = makeTopDictIndex(topDict);\n\n    return t;\n}\n\nexport default { parse: parseCFFTable, make: makeCFFTable };\n","// The `head` table contains global information about the font.\n// https://www.microsoft.com/typography/OTSPEC/head.htm\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the header `head` table\nfunction parseHeadTable(data, start) {\n    const head = {};\n    const p = new parse.Parser(data, start);\n    head.version = p.parseVersion();\n    head.fontRevision = Math.round(p.parseFixed() * 1000) / 1000;\n    head.checkSumAdjustment = p.parseULong();\n    head.magicNumber = p.parseULong();\n    check.argument(head.magicNumber === 0x5F0F3CF5, 'Font header has wrong magic number.');\n    head.flags = p.parseUShort();\n    head.unitsPerEm = p.parseUShort();\n    head.created = p.parseLongDateTime();\n    head.modified = p.parseLongDateTime();\n    head.xMin = p.parseShort();\n    head.yMin = p.parseShort();\n    head.xMax = p.parseShort();\n    head.yMax = p.parseShort();\n    head.macStyle = p.parseUShort();\n    head.lowestRecPPEM = p.parseUShort();\n    head.fontDirectionHint = p.parseShort();\n    head.indexToLocFormat = p.parseShort();\n    head.glyphDataFormat = p.parseShort();\n    return head;\n}\n\nfunction makeHeadTable(options) {\n    // Apple Mac timestamp epoch is 01/01/1904 not 01/01/1970\n    const timestamp = Math.round(new Date().getTime() / 1000) + 2082844800;\n    let createdTimestamp = timestamp;\n\n    if (options.createdTimestamp) {\n        createdTimestamp = options.createdTimestamp + 2082844800;\n    }\n\n    return new table.Table('head', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'fontRevision', type: 'FIXED', value: 0x00010000},\n        {name: 'checkSumAdjustment', type: 'ULONG', value: 0},\n        {name: 'magicNumber', type: 'ULONG', value: 0x5F0F3CF5},\n        {name: 'flags', type: 'USHORT', value: 0},\n        {name: 'unitsPerEm', type: 'USHORT', value: 1000},\n        {name: 'created', type: 'LONGDATETIME', value: createdTimestamp},\n        {name: 'modified', type: 'LONGDATETIME', value: timestamp},\n        {name: 'xMin', type: 'SHORT', value: 0},\n        {name: 'yMin', type: 'SHORT', value: 0},\n        {name: 'xMax', type: 'SHORT', value: 0},\n        {name: 'yMax', type: 'SHORT', value: 0},\n        {name: 'macStyle', type: 'USHORT', value: 0},\n        {name: 'lowestRecPPEM', type: 'USHORT', value: 0},\n        {name: 'fontDirectionHint', type: 'SHORT', value: 2},\n        {name: 'indexToLocFormat', type: 'SHORT', value: 0},\n        {name: 'glyphDataFormat', type: 'SHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHeadTable, make: makeHeadTable };\n","// The `hhea` table contains information for horizontal layout.\n// https://www.microsoft.com/typography/OTSPEC/hhea.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the horizontal header `hhea` table\nfunction parseHheaTable(data, start) {\n    const hhea = {};\n    const p = new parse.Parser(data, start);\n    hhea.version = p.parseVersion();\n    hhea.ascender = p.parseShort();\n    hhea.descender = p.parseShort();\n    hhea.lineGap = p.parseShort();\n    hhea.advanceWidthMax = p.parseUShort();\n    hhea.minLeftSideBearing = p.parseShort();\n    hhea.minRightSideBearing = p.parseShort();\n    hhea.xMaxExtent = p.parseShort();\n    hhea.caretSlopeRise = p.parseShort();\n    hhea.caretSlopeRun = p.parseShort();\n    hhea.caretOffset = p.parseShort();\n    p.relativeOffset += 8;\n    hhea.metricDataFormat = p.parseShort();\n    hhea.numberOfHMetrics = p.parseUShort();\n    return hhea;\n}\n\nfunction makeHheaTable(options) {\n    return new table.Table('hhea', [\n        {name: 'version', type: 'FIXED', value: 0x00010000},\n        {name: 'ascender', type: 'FWORD', value: 0},\n        {name: 'descender', type: 'FWORD', value: 0},\n        {name: 'lineGap', type: 'FWORD', value: 0},\n        {name: 'advanceWidthMax', type: 'UFWORD', value: 0},\n        {name: 'minLeftSideBearing', type: 'FWORD', value: 0},\n        {name: 'minRightSideBearing', type: 'FWORD', value: 0},\n        {name: 'xMaxExtent', type: 'FWORD', value: 0},\n        {name: 'caretSlopeRise', type: 'SHORT', value: 1},\n        {name: 'caretSlopeRun', type: 'SHORT', value: 0},\n        {name: 'caretOffset', type: 'SHORT', value: 0},\n        {name: 'reserved1', type: 'SHORT', value: 0},\n        {name: 'reserved2', type: 'SHORT', value: 0},\n        {name: 'reserved3', type: 'SHORT', value: 0},\n        {name: 'reserved4', type: 'SHORT', value: 0},\n        {name: 'metricDataFormat', type: 'SHORT', value: 0},\n        {name: 'numberOfHMetrics', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseHheaTable, make: makeHheaTable };\n","// The `hmtx` table contains the horizontal metrics for all glyphs.\n// https://www.microsoft.com/typography/OTSPEC/hmtx.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\nfunction parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs) {\n    let advanceWidth;\n    let leftSideBearing;\n    const p = new parse.Parser(data, start);\n    for (let i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        const glyph = glyphs.get(i);\n        glyph.advanceWidth = advanceWidth;\n        glyph.leftSideBearing = leftSideBearing;\n    }\n}\n\nfunction parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs) {\n    font._hmtxTableData = {};\n\n    let advanceWidth;\n    let leftSideBearing;\n    const p = new parse.Parser(data, start);\n    for (let i = 0; i < numGlyphs; i += 1) {\n        // If the font is monospaced, only one entry is needed. This last entry applies to all subsequent glyphs.\n        if (i < numMetrics) {\n            advanceWidth = p.parseUShort();\n            leftSideBearing = p.parseShort();\n        }\n\n        font._hmtxTableData[i] = {\n            advanceWidth: advanceWidth,\n            leftSideBearing: leftSideBearing\n        };\n    }\n}\n\n// Parse the `hmtx` table, which contains the horizontal metrics for all glyphs.\n// This function augments the glyph array, adding the advanceWidth and leftSideBearing to each glyph.\nfunction parseHmtxTable(font, data, start, numMetrics, numGlyphs, glyphs, opt) {\n    if (opt.lowMemory)\n        parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs);\n    else\n        parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs);\n}\n\nfunction makeHmtxTable(glyphs) {\n    const t = new table.Table('hmtx', []);\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs.get(i);\n        const advanceWidth = glyph.advanceWidth || 0;\n        const leftSideBearing = glyph.leftSideBearing || 0;\n        t.fields.push({name: 'advanceWidth_' + i, type: 'USHORT', value: advanceWidth});\n        t.fields.push({name: 'leftSideBearing_' + i, type: 'SHORT', value: leftSideBearing});\n    }\n\n    return t;\n}\n\nexport default { parse: parseHmtxTable, make: makeHmtxTable };\n","// The `ltag` table stores IETF BCP-47 language tags. It allows supporting\n// languages for which TrueType does not assign a numeric code.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6ltag.html\n// http://www.w3.org/International/articles/language-tags/\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction makeLtagTable(tags) {\n    const result = new table.Table('ltag', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'numTags', type: 'ULONG', value: tags.length}\n    ]);\n\n    let stringPool = '';\n    const stringPoolOffset = 12 + tags.length * 4;\n    for (let i = 0; i < tags.length; ++i) {\n        let pos = stringPool.indexOf(tags[i]);\n        if (pos < 0) {\n            pos = stringPool.length;\n            stringPool += tags[i];\n        }\n\n        result.fields.push({name: 'offset ' + i, type: 'USHORT', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + i, type: 'USHORT', value: tags[i].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n    return result;\n}\n\nfunction parseLtagTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported ltag table version.');\n    // The 'ltag' specification does not define any flags; skip the field.\n    p.skip('uLong', 1);\n    const numTags = p.parseULong();\n\n    const tags = [];\n    for (let i = 0; i < numTags; i++) {\n        let tag = '';\n        const offset = start + p.parseUShort();\n        const length = p.parseUShort();\n        for (let j = offset; j < offset + length; ++j) {\n            tag += String.fromCharCode(data.getInt8(j));\n        }\n\n        tags.push(tag);\n    }\n\n    return tags;\n}\n\nexport default { make: makeLtagTable, parse: parseLtagTable };\n","// The `maxp` table establishes the memory requirements for the font.\n// We need it just to get the number of glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/maxp.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the maximum profile `maxp` table.\nfunction parseMaxpTable(data, start) {\n    const maxp = {};\n    const p = new parse.Parser(data, start);\n    maxp.version = p.parseVersion();\n    maxp.numGlyphs = p.parseUShort();\n    if (maxp.version === 1.0) {\n        maxp.maxPoints = p.parseUShort();\n        maxp.maxContours = p.parseUShort();\n        maxp.maxCompositePoints = p.parseUShort();\n        maxp.maxCompositeContours = p.parseUShort();\n        maxp.maxZones = p.parseUShort();\n        maxp.maxTwilightPoints = p.parseUShort();\n        maxp.maxStorage = p.parseUShort();\n        maxp.maxFunctionDefs = p.parseUShort();\n        maxp.maxInstructionDefs = p.parseUShort();\n        maxp.maxStackElements = p.parseUShort();\n        maxp.maxSizeOfInstructions = p.parseUShort();\n        maxp.maxComponentElements = p.parseUShort();\n        maxp.maxComponentDepth = p.parseUShort();\n    }\n\n    return maxp;\n}\n\nfunction makeMaxpTable(numGlyphs) {\n    return new table.Table('maxp', [\n        {name: 'version', type: 'FIXED', value: 0x00005000},\n        {name: 'numGlyphs', type: 'USHORT', value: numGlyphs}\n    ]);\n}\n\nexport default { parse: parseMaxpTable, make: makeMaxpTable };\n","// The `name` naming table.\n// https://www.microsoft.com/typography/OTSPEC/name.htm\n\nimport { decode, encode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// NameIDs for the name table.\nconst nameTableNames = [\n    'copyright',              // 0\n    'fontFamily',             // 1\n    'fontSubfamily',          // 2\n    'uniqueID',               // 3\n    'fullName',               // 4\n    'version',                // 5\n    'postScriptName',         // 6\n    'trademark',              // 7\n    'manufacturer',           // 8\n    'designer',               // 9\n    'description',            // 10\n    'manufacturerURL',        // 11\n    'designerURL',            // 12\n    'license',                // 13\n    'licenseURL',             // 14\n    'reserved',               // 15\n    'preferredFamily',        // 16\n    'preferredSubfamily',     // 17\n    'compatibleFullName',     // 18\n    'sampleText',             // 19\n    'postScriptFindFontName', // 20\n    'wwsFamily',              // 21\n    'wwsSubfamily'            // 22\n];\n\nconst macLanguages = {\n    0: 'en',\n    1: 'fr',\n    2: 'de',\n    3: 'it',\n    4: 'nl',\n    5: 'sv',\n    6: 'es',\n    7: 'da',\n    8: 'pt',\n    9: 'no',\n    10: 'he',\n    11: 'ja',\n    12: 'ar',\n    13: 'fi',\n    14: 'el',\n    15: 'is',\n    16: 'mt',\n    17: 'tr',\n    18: 'hr',\n    19: 'zh-Hant',\n    20: 'ur',\n    21: 'hi',\n    22: 'th',\n    23: 'ko',\n    24: 'lt',\n    25: 'pl',\n    26: 'hu',\n    27: 'es',\n    28: 'lv',\n    29: 'se',\n    30: 'fo',\n    31: 'fa',\n    32: 'ru',\n    33: 'zh',\n    34: 'nl-BE',\n    35: 'ga',\n    36: 'sq',\n    37: 'ro',\n    38: 'cz',\n    39: 'sk',\n    40: 'si',\n    41: 'yi',\n    42: 'sr',\n    43: 'mk',\n    44: 'bg',\n    45: 'uk',\n    46: 'be',\n    47: 'uz',\n    48: 'kk',\n    49: 'az-Cyrl',\n    50: 'az-Arab',\n    51: 'hy',\n    52: 'ka',\n    53: 'mo',\n    54: 'ky',\n    55: 'tg',\n    56: 'tk',\n    57: 'mn-CN',\n    58: 'mn',\n    59: 'ps',\n    60: 'ks',\n    61: 'ku',\n    62: 'sd',\n    63: 'bo',\n    64: 'ne',\n    65: 'sa',\n    66: 'mr',\n    67: 'bn',\n    68: 'as',\n    69: 'gu',\n    70: 'pa',\n    71: 'or',\n    72: 'ml',\n    73: 'kn',\n    74: 'ta',\n    75: 'te',\n    76: 'si',\n    77: 'my',\n    78: 'km',\n    79: 'lo',\n    80: 'vi',\n    81: 'id',\n    82: 'tl',\n    83: 'ms',\n    84: 'ms-Arab',\n    85: 'am',\n    86: 'ti',\n    87: 'om',\n    88: 'so',\n    89: 'sw',\n    90: 'rw',\n    91: 'rn',\n    92: 'ny',\n    93: 'mg',\n    94: 'eo',\n    128: 'cy',\n    129: 'eu',\n    130: 'ca',\n    131: 'la',\n    132: 'qu',\n    133: 'gn',\n    134: 'ay',\n    135: 'tt',\n    136: 'ug',\n    137: 'dz',\n    138: 'jv',\n    139: 'su',\n    140: 'gl',\n    141: 'af',\n    142: 'br',\n    143: 'iu',\n    144: 'gd',\n    145: 'gv',\n    146: 'ga',\n    147: 'to',\n    148: 'el-polyton',\n    149: 'kl',\n    150: 'az',\n    151: 'nn'\n};\n\n// MacOS language ID → MacOS script ID\n//\n// Note that the script ID is not sufficient to determine what encoding\n// to use in TrueType files. For some languages, MacOS used a modification\n// of a mainstream script. For example, an Icelandic name would be stored\n// with smRoman in the TrueType naming table, but the actual encoding\n// is a special Icelandic version of the normal Macintosh Roman encoding.\n// As another example, Inuktitut uses an 8-bit encoding for Canadian Aboriginal\n// Syllables but MacOS had run out of available script codes, so this was\n// done as a (pretty radical) \"modification\" of Ethiopic.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageToScript = {\n    0: 0,  // langEnglish → smRoman\n    1: 0,  // langFrench → smRoman\n    2: 0,  // langGerman → smRoman\n    3: 0,  // langItalian → smRoman\n    4: 0,  // langDutch → smRoman\n    5: 0,  // langSwedish → smRoman\n    6: 0,  // langSpanish → smRoman\n    7: 0,  // langDanish → smRoman\n    8: 0,  // langPortuguese → smRoman\n    9: 0,  // langNorwegian → smRoman\n    10: 5,  // langHebrew → smHebrew\n    11: 1,  // langJapanese → smJapanese\n    12: 4,  // langArabic → smArabic\n    13: 0,  // langFinnish → smRoman\n    14: 6,  // langGreek → smGreek\n    15: 0,  // langIcelandic → smRoman (modified)\n    16: 0,  // langMaltese → smRoman\n    17: 0,  // langTurkish → smRoman (modified)\n    18: 0,  // langCroatian → smRoman (modified)\n    19: 2,  // langTradChinese → smTradChinese\n    20: 4,  // langUrdu → smArabic\n    21: 9,  // langHindi → smDevanagari\n    22: 21,  // langThai → smThai\n    23: 3,  // langKorean → smKorean\n    24: 29,  // langLithuanian → smCentralEuroRoman\n    25: 29,  // langPolish → smCentralEuroRoman\n    26: 29,  // langHungarian → smCentralEuroRoman\n    27: 29,  // langEstonian → smCentralEuroRoman\n    28: 29,  // langLatvian → smCentralEuroRoman\n    29: 0,  // langSami → smRoman\n    30: 0,  // langFaroese → smRoman (modified)\n    31: 4,  // langFarsi → smArabic (modified)\n    32: 7,  // langRussian → smCyrillic\n    33: 25,  // langSimpChinese → smSimpChinese\n    34: 0,  // langFlemish → smRoman\n    35: 0,  // langIrishGaelic → smRoman (modified)\n    36: 0,  // langAlbanian → smRoman\n    37: 0,  // langRomanian → smRoman (modified)\n    38: 29,  // langCzech → smCentralEuroRoman\n    39: 29,  // langSlovak → smCentralEuroRoman\n    40: 0,  // langSlovenian → smRoman (modified)\n    41: 5,  // langYiddish → smHebrew\n    42: 7,  // langSerbian → smCyrillic\n    43: 7,  // langMacedonian → smCyrillic\n    44: 7,  // langBulgarian → smCyrillic\n    45: 7,  // langUkrainian → smCyrillic (modified)\n    46: 7,  // langByelorussian → smCyrillic\n    47: 7,  // langUzbek → smCyrillic\n    48: 7,  // langKazakh → smCyrillic\n    49: 7,  // langAzerbaijani → smCyrillic\n    50: 4,  // langAzerbaijanAr → smArabic\n    51: 24,  // langArmenian → smArmenian\n    52: 23,  // langGeorgian → smGeorgian\n    53: 7,  // langMoldavian → smCyrillic\n    54: 7,  // langKirghiz → smCyrillic\n    55: 7,  // langTajiki → smCyrillic\n    56: 7,  // langTurkmen → smCyrillic\n    57: 27,  // langMongolian → smMongolian\n    58: 7,  // langMongolianCyr → smCyrillic\n    59: 4,  // langPashto → smArabic\n    60: 4,  // langKurdish → smArabic\n    61: 4,  // langKashmiri → smArabic\n    62: 4,  // langSindhi → smArabic\n    63: 26,  // langTibetan → smTibetan\n    64: 9,  // langNepali → smDevanagari\n    65: 9,  // langSanskrit → smDevanagari\n    66: 9,  // langMarathi → smDevanagari\n    67: 13,  // langBengali → smBengali\n    68: 13,  // langAssamese → smBengali\n    69: 11,  // langGujarati → smGujarati\n    70: 10,  // langPunjabi → smGurmukhi\n    71: 12,  // langOriya → smOriya\n    72: 17,  // langMalayalam → smMalayalam\n    73: 16,  // langKannada → smKannada\n    74: 14,  // langTamil → smTamil\n    75: 15,  // langTelugu → smTelugu\n    76: 18,  // langSinhalese → smSinhalese\n    77: 19,  // langBurmese → smBurmese\n    78: 20,  // langKhmer → smKhmer\n    79: 22,  // langLao → smLao\n    80: 30,  // langVietnamese → smVietnamese\n    81: 0,  // langIndonesian → smRoman\n    82: 0,  // langTagalog → smRoman\n    83: 0,  // langMalayRoman → smRoman\n    84: 4,  // langMalayArabic → smArabic\n    85: 28,  // langAmharic → smEthiopic\n    86: 28,  // langTigrinya → smEthiopic\n    87: 28,  // langOromo → smEthiopic\n    88: 0,  // langSomali → smRoman\n    89: 0,  // langSwahili → smRoman\n    90: 0,  // langKinyarwanda → smRoman\n    91: 0,  // langRundi → smRoman\n    92: 0,  // langNyanja → smRoman\n    93: 0,  // langMalagasy → smRoman\n    94: 0,  // langEsperanto → smRoman\n    128: 0,  // langWelsh → smRoman (modified)\n    129: 0,  // langBasque → smRoman\n    130: 0,  // langCatalan → smRoman\n    131: 0,  // langLatin → smRoman\n    132: 0,  // langQuechua → smRoman\n    133: 0,  // langGuarani → smRoman\n    134: 0,  // langAymara → smRoman\n    135: 7,  // langTatar → smCyrillic\n    136: 4,  // langUighur → smArabic\n    137: 26,  // langDzongkha → smTibetan\n    138: 0,  // langJavaneseRom → smRoman\n    139: 0,  // langSundaneseRom → smRoman\n    140: 0,  // langGalician → smRoman\n    141: 0,  // langAfrikaans → smRoman\n    142: 0,  // langBreton → smRoman (modified)\n    143: 28,  // langInuktitut → smEthiopic (modified)\n    144: 0,  // langScottishGaelic → smRoman (modified)\n    145: 0,  // langManxGaelic → smRoman (modified)\n    146: 0,  // langIrishGaelicScript → smRoman (modified)\n    147: 0,  // langTongan → smRoman\n    148: 6,  // langGreekAncient → smRoman\n    149: 0,  // langGreenlandic → smRoman\n    150: 0,  // langAzerbaijanRoman → smRoman\n    151: 0   // langNynorsk → smRoman\n};\n\n// While Microsoft indicates a region/country for all its language\n// IDs, we omit the region code if it's equal to the \"most likely\n// region subtag\" according to Unicode CLDR. For scripts, we omit\n// the subtag if it is equal to the Suppress-Script entry in the\n// IANA language subtag registry for IETF BCP 47.\n//\n// For example, Microsoft states that its language code 0x041A is\n// Croatian in Croatia. We transform this to the BCP 47 language code 'hr'\n// and not 'hr-HR' because Croatia is the default country for Croatian,\n// according to Unicode CLDR. As another example, Microsoft states\n// that 0x101A is Croatian (Latin) in Bosnia-Herzegovina. We transform\n// this to 'hr-BA' and not 'hr-Latn-BA' because Latin is the default script\n// for the Croatian language, according to IANA.\n//\n// http://www.unicode.org/cldr/charts/latest/supplemental/likely_subtags.html\n// http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry\nconst windowsLanguages = {\n    0x0436: 'af',\n    0x041C: 'sq',\n    0x0484: 'gsw',\n    0x045E: 'am',\n    0x1401: 'ar-DZ',\n    0x3C01: 'ar-BH',\n    0x0C01: 'ar',\n    0x0801: 'ar-IQ',\n    0x2C01: 'ar-JO',\n    0x3401: 'ar-KW',\n    0x3001: 'ar-LB',\n    0x1001: 'ar-LY',\n    0x1801: 'ary',\n    0x2001: 'ar-OM',\n    0x4001: 'ar-QA',\n    0x0401: 'ar-SA',\n    0x2801: 'ar-SY',\n    0x1C01: 'aeb',\n    0x3801: 'ar-AE',\n    0x2401: 'ar-YE',\n    0x042B: 'hy',\n    0x044D: 'as',\n    0x082C: 'az-Cyrl',\n    0x042C: 'az',\n    0x046D: 'ba',\n    0x042D: 'eu',\n    0x0423: 'be',\n    0x0845: 'bn',\n    0x0445: 'bn-IN',\n    0x201A: 'bs-Cyrl',\n    0x141A: 'bs',\n    0x047E: 'br',\n    0x0402: 'bg',\n    0x0403: 'ca',\n    0x0C04: 'zh-HK',\n    0x1404: 'zh-MO',\n    0x0804: 'zh',\n    0x1004: 'zh-SG',\n    0x0404: 'zh-TW',\n    0x0483: 'co',\n    0x041A: 'hr',\n    0x101A: 'hr-BA',\n    0x0405: 'cs',\n    0x0406: 'da',\n    0x048C: 'prs',\n    0x0465: 'dv',\n    0x0813: 'nl-BE',\n    0x0413: 'nl',\n    0x0C09: 'en-AU',\n    0x2809: 'en-BZ',\n    0x1009: 'en-CA',\n    0x2409: 'en-029',\n    0x4009: 'en-IN',\n    0x1809: 'en-IE',\n    0x2009: 'en-JM',\n    0x4409: 'en-MY',\n    0x1409: 'en-NZ',\n    0x3409: 'en-PH',\n    0x4809: 'en-SG',\n    0x1C09: 'en-ZA',\n    0x2C09: 'en-TT',\n    0x0809: 'en-GB',\n    0x0409: 'en',\n    0x3009: 'en-ZW',\n    0x0425: 'et',\n    0x0438: 'fo',\n    0x0464: 'fil',\n    0x040B: 'fi',\n    0x080C: 'fr-BE',\n    0x0C0C: 'fr-CA',\n    0x040C: 'fr',\n    0x140C: 'fr-LU',\n    0x180C: 'fr-MC',\n    0x100C: 'fr-CH',\n    0x0462: 'fy',\n    0x0456: 'gl',\n    0x0437: 'ka',\n    0x0C07: 'de-AT',\n    0x0407: 'de',\n    0x1407: 'de-LI',\n    0x1007: 'de-LU',\n    0x0807: 'de-CH',\n    0x0408: 'el',\n    0x046F: 'kl',\n    0x0447: 'gu',\n    0x0468: 'ha',\n    0x040D: 'he',\n    0x0439: 'hi',\n    0x040E: 'hu',\n    0x040F: 'is',\n    0x0470: 'ig',\n    0x0421: 'id',\n    0x045D: 'iu',\n    0x085D: 'iu-Latn',\n    0x083C: 'ga',\n    0x0434: 'xh',\n    0x0435: 'zu',\n    0x0410: 'it',\n    0x0810: 'it-CH',\n    0x0411: 'ja',\n    0x044B: 'kn',\n    0x043F: 'kk',\n    0x0453: 'km',\n    0x0486: 'quc',\n    0x0487: 'rw',\n    0x0441: 'sw',\n    0x0457: 'kok',\n    0x0412: 'ko',\n    0x0440: 'ky',\n    0x0454: 'lo',\n    0x0426: 'lv',\n    0x0427: 'lt',\n    0x082E: 'dsb',\n    0x046E: 'lb',\n    0x042F: 'mk',\n    0x083E: 'ms-BN',\n    0x043E: 'ms',\n    0x044C: 'ml',\n    0x043A: 'mt',\n    0x0481: 'mi',\n    0x047A: 'arn',\n    0x044E: 'mr',\n    0x047C: 'moh',\n    0x0450: 'mn',\n    0x0850: 'mn-CN',\n    0x0461: 'ne',\n    0x0414: 'nb',\n    0x0814: 'nn',\n    0x0482: 'oc',\n    0x0448: 'or',\n    0x0463: 'ps',\n    0x0415: 'pl',\n    0x0416: 'pt',\n    0x0816: 'pt-PT',\n    0x0446: 'pa',\n    0x046B: 'qu-BO',\n    0x086B: 'qu-EC',\n    0x0C6B: 'qu',\n    0x0418: 'ro',\n    0x0417: 'rm',\n    0x0419: 'ru',\n    0x243B: 'smn',\n    0x103B: 'smj-NO',\n    0x143B: 'smj',\n    0x0C3B: 'se-FI',\n    0x043B: 'se',\n    0x083B: 'se-SE',\n    0x203B: 'sms',\n    0x183B: 'sma-NO',\n    0x1C3B: 'sms',\n    0x044F: 'sa',\n    0x1C1A: 'sr-Cyrl-BA',\n    0x0C1A: 'sr',\n    0x181A: 'sr-Latn-BA',\n    0x081A: 'sr-Latn',\n    0x046C: 'nso',\n    0x0432: 'tn',\n    0x045B: 'si',\n    0x041B: 'sk',\n    0x0424: 'sl',\n    0x2C0A: 'es-AR',\n    0x400A: 'es-BO',\n    0x340A: 'es-CL',\n    0x240A: 'es-CO',\n    0x140A: 'es-CR',\n    0x1C0A: 'es-DO',\n    0x300A: 'es-EC',\n    0x440A: 'es-SV',\n    0x100A: 'es-GT',\n    0x480A: 'es-HN',\n    0x080A: 'es-MX',\n    0x4C0A: 'es-NI',\n    0x180A: 'es-PA',\n    0x3C0A: 'es-PY',\n    0x280A: 'es-PE',\n    0x500A: 'es-PR',\n\n    // Microsoft has defined two different language codes for\n    // “Spanish with modern sorting” and “Spanish with traditional\n    // sorting”. This makes sense for collation APIs, and it would be\n    // possible to express this in BCP 47 language tags via Unicode\n    // extensions (eg., es-u-co-trad is Spanish with traditional\n    // sorting). However, for storing names in fonts, the distinction\n    // does not make sense, so we give “es” in both cases.\n    0x0C0A: 'es',\n    0x040A: 'es',\n\n    0x540A: 'es-US',\n    0x380A: 'es-UY',\n    0x200A: 'es-VE',\n    0x081D: 'sv-FI',\n    0x041D: 'sv',\n    0x045A: 'syr',\n    0x0428: 'tg',\n    0x085F: 'tzm',\n    0x0449: 'ta',\n    0x0444: 'tt',\n    0x044A: 'te',\n    0x041E: 'th',\n    0x0451: 'bo',\n    0x041F: 'tr',\n    0x0442: 'tk',\n    0x0480: 'ug',\n    0x0422: 'uk',\n    0x042E: 'hsb',\n    0x0420: 'ur',\n    0x0843: 'uz-Cyrl',\n    0x0443: 'uz',\n    0x042A: 'vi',\n    0x0452: 'cy',\n    0x0488: 'wo',\n    0x0485: 'sah',\n    0x0478: 'ii',\n    0x046A: 'yo'\n};\n\n// Returns a IETF BCP 47 language code, for example 'zh-Hant'\n// for 'Chinese in the traditional script'.\nfunction getLanguageCode(platformID, languageID, ltag) {\n    switch (platformID) {\n        case 0:  // Unicode\n            if (languageID === 0xFFFF) {\n                return 'und';\n            } else if (ltag) {\n                return ltag[languageID];\n            }\n\n            break;\n\n        case 1:  // Macintosh\n            return macLanguages[languageID];\n\n        case 3:  // Windows\n            return windowsLanguages[languageID];\n    }\n\n    return undefined;\n}\n\nconst utf16 = 'utf-16';\n\n// MacOS script ID → encoding. This table stores the default case,\n// which can be overridden by macLanguageEncodings.\nconst macScriptEncodings = {\n    0: 'macintosh',           // smRoman\n    1: 'x-mac-japanese',      // smJapanese\n    2: 'x-mac-chinesetrad',   // smTradChinese\n    3: 'x-mac-korean',        // smKorean\n    6: 'x-mac-greek',         // smGreek\n    7: 'x-mac-cyrillic',      // smCyrillic\n    9: 'x-mac-devanagai',     // smDevanagari\n    10: 'x-mac-gurmukhi',     // smGurmukhi\n    11: 'x-mac-gujarati',     // smGujarati\n    12: 'x-mac-oriya',        // smOriya\n    13: 'x-mac-bengali',      // smBengali\n    14: 'x-mac-tamil',        // smTamil\n    15: 'x-mac-telugu',       // smTelugu\n    16: 'x-mac-kannada',      // smKannada\n    17: 'x-mac-malayalam',    // smMalayalam\n    18: 'x-mac-sinhalese',    // smSinhalese\n    19: 'x-mac-burmese',      // smBurmese\n    20: 'x-mac-khmer',        // smKhmer\n    21: 'x-mac-thai',         // smThai\n    22: 'x-mac-lao',          // smLao\n    23: 'x-mac-georgian',     // smGeorgian\n    24: 'x-mac-armenian',     // smArmenian\n    25: 'x-mac-chinesesimp',  // smSimpChinese\n    26: 'x-mac-tibetan',      // smTibetan\n    27: 'x-mac-mongolian',    // smMongolian\n    28: 'x-mac-ethiopic',     // smEthiopic\n    29: 'x-mac-ce',           // smCentralEuroRoman\n    30: 'x-mac-vietnamese',   // smVietnamese\n    31: 'x-mac-extarabic'     // smExtArabic\n};\n\n// MacOS language ID → encoding. This table stores the exceptional\n// cases, which override macScriptEncodings. For writing MacOS naming\n// tables, we need to emit a MacOS script ID. Therefore, we cannot\n// merge macScriptEncodings into macLanguageEncodings.\n//\n// http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/Readme.txt\nconst macLanguageEncodings = {\n    15: 'x-mac-icelandic',    // langIcelandic\n    17: 'x-mac-turkish',      // langTurkish\n    18: 'x-mac-croatian',     // langCroatian\n    24: 'x-mac-ce',           // langLithuanian\n    25: 'x-mac-ce',           // langPolish\n    26: 'x-mac-ce',           // langHungarian\n    27: 'x-mac-ce',           // langEstonian\n    28: 'x-mac-ce',           // langLatvian\n    30: 'x-mac-icelandic',    // langFaroese\n    37: 'x-mac-romanian',     // langRomanian\n    38: 'x-mac-ce',           // langCzech\n    39: 'x-mac-ce',           // langSlovak\n    40: 'x-mac-ce',           // langSlovenian\n    143: 'x-mac-inuit',       // langInuktitut\n    146: 'x-mac-gaelic'       // langIrishGaelicScript\n};\n\nfunction getEncoding(platformID, encodingID, languageID) {\n    switch (platformID) {\n        case 0:  // Unicode\n            return utf16;\n\n        case 1:  // Apple Macintosh\n            return macLanguageEncodings[languageID] || macScriptEncodings[encodingID];\n\n        case 3:  // Microsoft Windows\n            if (encodingID === 1 || encodingID === 10) {\n                return utf16;\n            }\n\n            break;\n    }\n\n    return undefined;\n}\n\n// Parse the naming `name` table.\n// FIXME: Format 1 additional fields are not supported yet.\n// ltag is the content of the `ltag' table, such as ['en', 'zh-Hans', 'de-CH-1904'].\nfunction parseNameTable(data, start, ltag) {\n    const name = {};\n    const p = new parse.Parser(data, start);\n    const format = p.parseUShort();\n    const count = p.parseUShort();\n    const stringOffset = p.offset + p.parseUShort();\n    for (let i = 0; i < count; i++) {\n        const platformID = p.parseUShort();\n        const encodingID = p.parseUShort();\n        const languageID = p.parseUShort();\n        const nameID = p.parseUShort();\n        const property = nameTableNames[nameID] || nameID;\n        const byteLength = p.parseUShort();\n        const offset = p.parseUShort();\n        const language = getLanguageCode(platformID, languageID, ltag);\n        const encoding = getEncoding(platformID, encodingID, languageID);\n        if (encoding !== undefined && language !== undefined) {\n            let text;\n            if (encoding === utf16) {\n                text = decode.UTF16(data, stringOffset + offset, byteLength);\n            } else {\n                text = decode.MACSTRING(data, stringOffset + offset, byteLength, encoding);\n            }\n\n            if (text) {\n                let translations = name[property];\n                if (translations === undefined) {\n                    translations = name[property] = {};\n                }\n\n                translations[language] = text;\n            }\n        }\n    }\n\n    let langTagCount = 0;\n    if (format === 1) {\n        // FIXME: Also handle Microsoft's 'name' table 1.\n        langTagCount = p.parseUShort();\n    }\n\n    return name;\n}\n\n// {23: 'foo'} → {'foo': 23}\n// ['bar', 'baz'] → {'bar': 0, 'baz': 1}\nfunction reverseDict(dict) {\n    const result = {};\n    for (let key in dict) {\n        result[dict[key]] = parseInt(key);\n    }\n\n    return result;\n}\n\nfunction makeNameRecord(platformID, encodingID, languageID, nameID, length, offset) {\n    return new table.Record('NameRecord', [\n        {name: 'platformID', type: 'USHORT', value: platformID},\n        {name: 'encodingID', type: 'USHORT', value: encodingID},\n        {name: 'languageID', type: 'USHORT', value: languageID},\n        {name: 'nameID', type: 'USHORT', value: nameID},\n        {name: 'length', type: 'USHORT', value: length},\n        {name: 'offset', type: 'USHORT', value: offset}\n    ]);\n}\n\n// Finds the position of needle in haystack, or -1 if not there.\n// Like String.indexOf(), but for arrays.\nfunction findSubArray(needle, haystack) {\n    const needleLength = needle.length;\n    const limit = haystack.length - needleLength + 1;\n\n    loop:\n    for (let pos = 0; pos < limit; pos++) {\n        for (; pos < limit; pos++) {\n            for (let k = 0; k < needleLength; k++) {\n                if (haystack[pos + k] !== needle[k]) {\n                    continue loop;\n                }\n            }\n\n            return pos;\n        }\n    }\n\n    return -1;\n}\n\nfunction addStringToPool(s, pool) {\n    let offset = findSubArray(s, pool);\n    if (offset < 0) {\n        offset = pool.length;\n        let i = 0;\n        const len = s.length;\n        for (; i < len; ++i) {\n            pool.push(s[i]);\n        }\n\n    }\n\n    return offset;\n}\n\nfunction makeNameTable(names, ltag) {\n    let nameID;\n    const nameIDs = [];\n\n    const namesWithNumericKeys = {};\n    const nameTableIds = reverseDict(nameTableNames);\n    for (let key in names) {\n        let id = nameTableIds[key];\n        if (id === undefined) {\n            id = key;\n        }\n\n        nameID = parseInt(id);\n\n        if (isNaN(nameID)) {\n            throw new Error('Name table entry \"' + key + '\" does not exist, see nameTableNames for complete list.');\n        }\n\n        namesWithNumericKeys[nameID] = names[key];\n        nameIDs.push(nameID);\n    }\n\n    const macLanguageIds = reverseDict(macLanguages);\n    const windowsLanguageIds = reverseDict(windowsLanguages);\n\n    const nameRecords = [];\n    const stringPool = [];\n\n    for (let i = 0; i < nameIDs.length; i++) {\n        nameID = nameIDs[i];\n        const translations = namesWithNumericKeys[nameID];\n        for (let lang in translations) {\n            const text = translations[lang];\n\n            // For MacOS, we try to emit the name in the form that was introduced\n            // in the initial version of the TrueType spec (in the late 1980s).\n            // However, this can fail for various reasons: the requested BCP 47\n            // language code might not have an old-style Mac equivalent;\n            // we might not have a codec for the needed character encoding;\n            // or the name might contain characters that cannot be expressed\n            // in the old-style Macintosh encoding. In case of failure, we emit\n            // the name in a more modern fashion (Unicode encoding with BCP 47\n            // language tags) that is recognized by MacOS 10.5, released in 2009.\n            // If fonts were only read by operating systems, we could simply\n            // emit all names in the modern form; this would be much easier.\n            // However, there are many applications and libraries that read\n            // 'name' tables directly, and these will usually only recognize\n            // the ancient form (silently skipping the unrecognized names).\n            let macPlatform = 1;  // Macintosh\n            let macLanguage = macLanguageIds[lang];\n            let macScript = macLanguageToScript[macLanguage];\n            const macEncoding = getEncoding(macPlatform, macScript, macLanguage);\n            let macName = encode.MACSTRING(text, macEncoding);\n            if (macName === undefined) {\n                macPlatform = 0;  // Unicode\n                macLanguage = ltag.indexOf(lang);\n                if (macLanguage < 0) {\n                    macLanguage = ltag.length;\n                    ltag.push(lang);\n                }\n\n                macScript = 4;  // Unicode 2.0 and later\n                macName = encode.UTF16(text);\n            }\n\n            const macNameOffset = addStringToPool(macName, stringPool);\n            nameRecords.push(makeNameRecord(macPlatform, macScript, macLanguage,\n                                            nameID, macName.length, macNameOffset));\n\n            const winLanguage = windowsLanguageIds[lang];\n            if (winLanguage !== undefined) {\n                const winName = encode.UTF16(text);\n                const winNameOffset = addStringToPool(winName, stringPool);\n                nameRecords.push(makeNameRecord(3, 1, winLanguage,\n                                                nameID, winName.length, winNameOffset));\n            }\n        }\n    }\n\n    nameRecords.sort(function(a, b) {\n        return ((a.platformID - b.platformID) ||\n                (a.encodingID - b.encodingID) ||\n                (a.languageID - b.languageID) ||\n                (a.nameID - b.nameID));\n    });\n\n    const t = new table.Table('name', [\n        {name: 'format', type: 'USHORT', value: 0},\n        {name: 'count', type: 'USHORT', value: nameRecords.length},\n        {name: 'stringOffset', type: 'USHORT', value: 6 + nameRecords.length * 12}\n    ]);\n\n    for (let r = 0; r < nameRecords.length; r++) {\n        t.fields.push({name: 'record_' + r, type: 'RECORD', value: nameRecords[r]});\n    }\n\n    t.fields.push({name: 'strings', type: 'LITERAL', value: stringPool});\n    return t;\n}\n\nexport default { parse: parseNameTable, make: makeNameTable };\n","// The `OS/2` table contains metrics required in OpenType fonts.\n// https://www.microsoft.com/typography/OTSPEC/os2.htm\n\nimport parse from '../parse';\nimport table from '../table';\n\nconst unicodeRanges = [\n    {begin: 0x0000, end: 0x007F}, // Basic Latin\n    {begin: 0x0080, end: 0x00FF}, // Latin-1 Supplement\n    {begin: 0x0100, end: 0x017F}, // Latin Extended-A\n    {begin: 0x0180, end: 0x024F}, // Latin Extended-B\n    {begin: 0x0250, end: 0x02AF}, // IPA Extensions\n    {begin: 0x02B0, end: 0x02FF}, // Spacing Modifier Letters\n    {begin: 0x0300, end: 0x036F}, // Combining Diacritical Marks\n    {begin: 0x0370, end: 0x03FF}, // Greek and Coptic\n    {begin: 0x2C80, end: 0x2CFF}, // Coptic\n    {begin: 0x0400, end: 0x04FF}, // Cyrillic\n    {begin: 0x0530, end: 0x058F}, // Armenian\n    {begin: 0x0590, end: 0x05FF}, // Hebrew\n    {begin: 0xA500, end: 0xA63F}, // Vai\n    {begin: 0x0600, end: 0x06FF}, // Arabic\n    {begin: 0x07C0, end: 0x07FF}, // NKo\n    {begin: 0x0900, end: 0x097F}, // Devanagari\n    {begin: 0x0980, end: 0x09FF}, // Bengali\n    {begin: 0x0A00, end: 0x0A7F}, // Gurmukhi\n    {begin: 0x0A80, end: 0x0AFF}, // Gujarati\n    {begin: 0x0B00, end: 0x0B7F}, // Oriya\n    {begin: 0x0B80, end: 0x0BFF}, // Tamil\n    {begin: 0x0C00, end: 0x0C7F}, // Telugu\n    {begin: 0x0C80, end: 0x0CFF}, // Kannada\n    {begin: 0x0D00, end: 0x0D7F}, // Malayalam\n    {begin: 0x0E00, end: 0x0E7F}, // Thai\n    {begin: 0x0E80, end: 0x0EFF}, // Lao\n    {begin: 0x10A0, end: 0x10FF}, // Georgian\n    {begin: 0x1B00, end: 0x1B7F}, // Balinese\n    {begin: 0x1100, end: 0x11FF}, // Hangul Jamo\n    {begin: 0x1E00, end: 0x1EFF}, // Latin Extended Additional\n    {begin: 0x1F00, end: 0x1FFF}, // Greek Extended\n    {begin: 0x2000, end: 0x206F}, // General Punctuation\n    {begin: 0x2070, end: 0x209F}, // Superscripts And Subscripts\n    {begin: 0x20A0, end: 0x20CF}, // Currency Symbol\n    {begin: 0x20D0, end: 0x20FF}, // Combining Diacritical Marks For Symbols\n    {begin: 0x2100, end: 0x214F}, // Letterlike Symbols\n    {begin: 0x2150, end: 0x218F}, // Number Forms\n    {begin: 0x2190, end: 0x21FF}, // Arrows\n    {begin: 0x2200, end: 0x22FF}, // Mathematical Operators\n    {begin: 0x2300, end: 0x23FF}, // Miscellaneous Technical\n    {begin: 0x2400, end: 0x243F}, // Control Pictures\n    {begin: 0x2440, end: 0x245F}, // Optical Character Recognition\n    {begin: 0x2460, end: 0x24FF}, // Enclosed Alphanumerics\n    {begin: 0x2500, end: 0x257F}, // Box Drawing\n    {begin: 0x2580, end: 0x259F}, // Block Elements\n    {begin: 0x25A0, end: 0x25FF}, // Geometric Shapes\n    {begin: 0x2600, end: 0x26FF}, // Miscellaneous Symbols\n    {begin: 0x2700, end: 0x27BF}, // Dingbats\n    {begin: 0x3000, end: 0x303F}, // CJK Symbols And Punctuation\n    {begin: 0x3040, end: 0x309F}, // Hiragana\n    {begin: 0x30A0, end: 0x30FF}, // Katakana\n    {begin: 0x3100, end: 0x312F}, // Bopomofo\n    {begin: 0x3130, end: 0x318F}, // Hangul Compatibility Jamo\n    {begin: 0xA840, end: 0xA87F}, // Phags-pa\n    {begin: 0x3200, end: 0x32FF}, // Enclosed CJK Letters And Months\n    {begin: 0x3300, end: 0x33FF}, // CJK Compatibility\n    {begin: 0xAC00, end: 0xD7AF}, // Hangul Syllables\n    {begin: 0xD800, end: 0xDFFF}, // Non-Plane 0 *\n    {begin: 0x10900, end: 0x1091F}, // Phoenicia\n    {begin: 0x4E00, end: 0x9FFF}, // CJK Unified Ideographs\n    {begin: 0xE000, end: 0xF8FF}, // Private Use Area (plane 0)\n    {begin: 0x31C0, end: 0x31EF}, // CJK Strokes\n    {begin: 0xFB00, end: 0xFB4F}, // Alphabetic Presentation Forms\n    {begin: 0xFB50, end: 0xFDFF}, // Arabic Presentation Forms-A\n    {begin: 0xFE20, end: 0xFE2F}, // Combining Half Marks\n    {begin: 0xFE10, end: 0xFE1F}, // Vertical Forms\n    {begin: 0xFE50, end: 0xFE6F}, // Small Form Variants\n    {begin: 0xFE70, end: 0xFEFF}, // Arabic Presentation Forms-B\n    {begin: 0xFF00, end: 0xFFEF}, // Halfwidth And Fullwidth Forms\n    {begin: 0xFFF0, end: 0xFFFF}, // Specials\n    {begin: 0x0F00, end: 0x0FFF}, // Tibetan\n    {begin: 0x0700, end: 0x074F}, // Syriac\n    {begin: 0x0780, end: 0x07BF}, // Thaana\n    {begin: 0x0D80, end: 0x0DFF}, // Sinhala\n    {begin: 0x1000, end: 0x109F}, // Myanmar\n    {begin: 0x1200, end: 0x137F}, // Ethiopic\n    {begin: 0x13A0, end: 0x13FF}, // Cherokee\n    {begin: 0x1400, end: 0x167F}, // Unified Canadian Aboriginal Syllabics\n    {begin: 0x1680, end: 0x169F}, // Ogham\n    {begin: 0x16A0, end: 0x16FF}, // Runic\n    {begin: 0x1780, end: 0x17FF}, // Khmer\n    {begin: 0x1800, end: 0x18AF}, // Mongolian\n    {begin: 0x2800, end: 0x28FF}, // Braille Patterns\n    {begin: 0xA000, end: 0xA48F}, // Yi Syllables\n    {begin: 0x1700, end: 0x171F}, // Tagalog\n    {begin: 0x10300, end: 0x1032F}, // Old Italic\n    {begin: 0x10330, end: 0x1034F}, // Gothic\n    {begin: 0x10400, end: 0x1044F}, // Deseret\n    {begin: 0x1D000, end: 0x1D0FF}, // Byzantine Musical Symbols\n    {begin: 0x1D400, end: 0x1D7FF}, // Mathematical Alphanumeric Symbols\n    {begin: 0xFF000, end: 0xFFFFD}, // Private Use (plane 15)\n    {begin: 0xFE00, end: 0xFE0F}, // Variation Selectors\n    {begin: 0xE0000, end: 0xE007F}, // Tags\n    {begin: 0x1900, end: 0x194F}, // Limbu\n    {begin: 0x1950, end: 0x197F}, // Tai Le\n    {begin: 0x1980, end: 0x19DF}, // New Tai Lue\n    {begin: 0x1A00, end: 0x1A1F}, // Buginese\n    {begin: 0x2C00, end: 0x2C5F}, // Glagolitic\n    {begin: 0x2D30, end: 0x2D7F}, // Tifinagh\n    {begin: 0x4DC0, end: 0x4DFF}, // Yijing Hexagram Symbols\n    {begin: 0xA800, end: 0xA82F}, // Syloti Nagri\n    {begin: 0x10000, end: 0x1007F}, // Linear B Syllabary\n    {begin: 0x10140, end: 0x1018F}, // Ancient Greek Numbers\n    {begin: 0x10380, end: 0x1039F}, // Ugaritic\n    {begin: 0x103A0, end: 0x103DF}, // Old Persian\n    {begin: 0x10450, end: 0x1047F}, // Shavian\n    {begin: 0x10480, end: 0x104AF}, // Osmanya\n    {begin: 0x10800, end: 0x1083F}, // Cypriot Syllabary\n    {begin: 0x10A00, end: 0x10A5F}, // Kharoshthi\n    {begin: 0x1D300, end: 0x1D35F}, // Tai Xuan Jing Symbols\n    {begin: 0x12000, end: 0x123FF}, // Cuneiform\n    {begin: 0x1D360, end: 0x1D37F}, // Counting Rod Numerals\n    {begin: 0x1B80, end: 0x1BBF}, // Sundanese\n    {begin: 0x1C00, end: 0x1C4F}, // Lepcha\n    {begin: 0x1C50, end: 0x1C7F}, // Ol Chiki\n    {begin: 0xA880, end: 0xA8DF}, // Saurashtra\n    {begin: 0xA900, end: 0xA92F}, // Kayah Li\n    {begin: 0xA930, end: 0xA95F}, // Rejang\n    {begin: 0xAA00, end: 0xAA5F}, // Cham\n    {begin: 0x10190, end: 0x101CF}, // Ancient Symbols\n    {begin: 0x101D0, end: 0x101FF}, // Phaistos Disc\n    {begin: 0x102A0, end: 0x102DF}, // Carian\n    {begin: 0x1F030, end: 0x1F09F}  // Domino Tiles\n];\n\nfunction getUnicodeRange(unicode) {\n    for (let i = 0; i < unicodeRanges.length; i += 1) {\n        const range = unicodeRanges[i];\n        if (unicode >= range.begin && unicode < range.end) {\n            return i;\n        }\n    }\n\n    return -1;\n}\n\n// Parse the OS/2 and Windows metrics `OS/2` table\nfunction parseOS2Table(data, start) {\n    const os2 = {};\n    const p = new parse.Parser(data, start);\n    os2.version = p.parseUShort();\n    os2.xAvgCharWidth = p.parseShort();\n    os2.usWeightClass = p.parseUShort();\n    os2.usWidthClass = p.parseUShort();\n    os2.fsType = p.parseUShort();\n    os2.ySubscriptXSize = p.parseShort();\n    os2.ySubscriptYSize = p.parseShort();\n    os2.ySubscriptXOffset = p.parseShort();\n    os2.ySubscriptYOffset = p.parseShort();\n    os2.ySuperscriptXSize = p.parseShort();\n    os2.ySuperscriptYSize = p.parseShort();\n    os2.ySuperscriptXOffset = p.parseShort();\n    os2.ySuperscriptYOffset = p.parseShort();\n    os2.yStrikeoutSize = p.parseShort();\n    os2.yStrikeoutPosition = p.parseShort();\n    os2.sFamilyClass = p.parseShort();\n    os2.panose = [];\n    for (let i = 0; i < 10; i++) {\n        os2.panose[i] = p.parseByte();\n    }\n\n    os2.ulUnicodeRange1 = p.parseULong();\n    os2.ulUnicodeRange2 = p.parseULong();\n    os2.ulUnicodeRange3 = p.parseULong();\n    os2.ulUnicodeRange4 = p.parseULong();\n    os2.achVendID = String.fromCharCode(p.parseByte(), p.parseByte(), p.parseByte(), p.parseByte());\n    os2.fsSelection = p.parseUShort();\n    os2.usFirstCharIndex = p.parseUShort();\n    os2.usLastCharIndex = p.parseUShort();\n    os2.sTypoAscender = p.parseShort();\n    os2.sTypoDescender = p.parseShort();\n    os2.sTypoLineGap = p.parseShort();\n    os2.usWinAscent = p.parseUShort();\n    os2.usWinDescent = p.parseUShort();\n    if (os2.version >= 1) {\n        os2.ulCodePageRange1 = p.parseULong();\n        os2.ulCodePageRange2 = p.parseULong();\n    }\n\n    if (os2.version >= 2) {\n        os2.sxHeight = p.parseShort();\n        os2.sCapHeight = p.parseShort();\n        os2.usDefaultChar = p.parseUShort();\n        os2.usBreakChar = p.parseUShort();\n        os2.usMaxContent = p.parseUShort();\n    }\n\n    return os2;\n}\n\nfunction makeOS2Table(options) {\n    return new table.Table('OS/2', [\n        {name: 'version', type: 'USHORT', value: 0x0003},\n        {name: 'xAvgCharWidth', type: 'SHORT', value: 0},\n        {name: 'usWeightClass', type: 'USHORT', value: 0},\n        {name: 'usWidthClass', type: 'USHORT', value: 0},\n        {name: 'fsType', type: 'USHORT', value: 0},\n        {name: 'ySubscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySubscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySubscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySubscriptYOffset', type: 'SHORT', value: 140},\n        {name: 'ySuperscriptXSize', type: 'SHORT', value: 650},\n        {name: 'ySuperscriptYSize', type: 'SHORT', value: 699},\n        {name: 'ySuperscriptXOffset', type: 'SHORT', value: 0},\n        {name: 'ySuperscriptYOffset', type: 'SHORT', value: 479},\n        {name: 'yStrikeoutSize', type: 'SHORT', value: 49},\n        {name: 'yStrikeoutPosition', type: 'SHORT', value: 258},\n        {name: 'sFamilyClass', type: 'SHORT', value: 0},\n        {name: 'bFamilyType', type: 'BYTE', value: 0},\n        {name: 'bSerifStyle', type: 'BYTE', value: 0},\n        {name: 'bWeight', type: 'BYTE', value: 0},\n        {name: 'bProportion', type: 'BYTE', value: 0},\n        {name: 'bContrast', type: 'BYTE', value: 0},\n        {name: 'bStrokeVariation', type: 'BYTE', value: 0},\n        {name: 'bArmStyle', type: 'BYTE', value: 0},\n        {name: 'bLetterform', type: 'BYTE', value: 0},\n        {name: 'bMidline', type: 'BYTE', value: 0},\n        {name: 'bXHeight', type: 'BYTE', value: 0},\n        {name: 'ulUnicodeRange1', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange2', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange3', type: 'ULONG', value: 0},\n        {name: 'ulUnicodeRange4', type: 'ULONG', value: 0},\n        {name: 'achVendID', type: 'CHARARRAY', value: 'XXXX'},\n        {name: 'fsSelection', type: 'USHORT', value: 0},\n        {name: 'usFirstCharIndex', type: 'USHORT', value: 0},\n        {name: 'usLastCharIndex', type: 'USHORT', value: 0},\n        {name: 'sTypoAscender', type: 'SHORT', value: 0},\n        {name: 'sTypoDescender', type: 'SHORT', value: 0},\n        {name: 'sTypoLineGap', type: 'SHORT', value: 0},\n        {name: 'usWinAscent', type: 'USHORT', value: 0},\n        {name: 'usWinDescent', type: 'USHORT', value: 0},\n        {name: 'ulCodePageRange1', type: 'ULONG', value: 0},\n        {name: 'ulCodePageRange2', type: 'ULONG', value: 0},\n        {name: 'sxHeight', type: 'SHORT', value: 0},\n        {name: 'sCapHeight', type: 'SHORT', value: 0},\n        {name: 'usDefaultChar', type: 'USHORT', value: 0},\n        {name: 'usBreakChar', type: 'USHORT', value: 0},\n        {name: 'usMaxContext', type: 'USHORT', value: 0}\n    ], options);\n}\n\nexport default { parse: parseOS2Table, make: makeOS2Table, unicodeRanges, getUnicodeRange };\n","// The `post` table stores additional PostScript information, such as glyph names.\n// https://www.microsoft.com/typography/OTSPEC/post.htm\n\nimport { standardNames } from '../encoding';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the PostScript `post` table\nfunction parsePostTable(data, start) {\n    const post = {};\n    const p = new parse.Parser(data, start);\n    post.version = p.parseVersion();\n    post.italicAngle = p.parseFixed();\n    post.underlinePosition = p.parseShort();\n    post.underlineThickness = p.parseShort();\n    post.isFixedPitch = p.parseULong();\n    post.minMemType42 = p.parseULong();\n    post.maxMemType42 = p.parseULong();\n    post.minMemType1 = p.parseULong();\n    post.maxMemType1 = p.parseULong();\n    switch (post.version) {\n        case 1:\n            post.names = standardNames.slice();\n            break;\n        case 2:\n            post.numberOfGlyphs = p.parseUShort();\n            post.glyphNameIndex = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.glyphNameIndex[i] = p.parseUShort();\n            }\n\n            post.names = [];\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                if (post.glyphNameIndex[i] >= standardNames.length) {\n                    const nameLength = p.parseChar();\n                    post.names.push(p.parseString(nameLength));\n                }\n            }\n\n            break;\n        case 2.5:\n            post.numberOfGlyphs = p.parseUShort();\n            post.offset = new Array(post.numberOfGlyphs);\n            for (let i = 0; i < post.numberOfGlyphs; i++) {\n                post.offset[i] = p.parseChar();\n            }\n\n            break;\n    }\n    return post;\n}\n\nfunction makePostTable() {\n    return new table.Table('post', [\n        {name: 'version', type: 'FIXED', value: 0x00030000},\n        {name: 'italicAngle', type: 'FIXED', value: 0},\n        {name: 'underlinePosition', type: 'FWORD', value: 0},\n        {name: 'underlineThickness', type: 'FWORD', value: 0},\n        {name: 'isFixedPitch', type: 'ULONG', value: 0},\n        {name: 'minMemType42', type: 'ULONG', value: 0},\n        {name: 'maxMemType42', type: 'ULONG', value: 0},\n        {name: 'minMemType1', type: 'ULONG', value: 0},\n        {name: 'maxMemType1', type: 'ULONG', value: 0}\n    ]);\n}\n\nexport default { parse: parsePostTable, make: makePostTable };\n","// The `GSUB` table contains ligatures, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\n\nimport check from '../check';\nimport { Parser } from '../parse';\nimport table from '../table';\n\nconst subtableParsers = new Array(9);         // subtableParsers[0] is unused\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#SS\nsubtableParsers[1] = function parseLookup1() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            deltaGlyphId: this.parseUShort()\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            substitute: this.parseOffset16List()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 1 format must be 1 or 2.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#MS\nsubtableParsers[2] = function parseLookup2() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Multiple Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        sequences: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#AS\nsubtableParsers[3] = function parseLookup3() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Alternate Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        alternateSets: this.parseListOfLists()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#LS\nsubtableParsers[4] = function parseLookup4() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB ligature table identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        ligatureSets: this.parseListOfLists(function() {\n            return {\n                ligGlyph: this.parseUShort(),\n                components: this.parseUShortList(this.parseUShort() - 1)\n            };\n        })\n    };\n};\n\nconst lookupRecordDesc = {\n    sequenceIndex: Parser.uShort,\n    lookupListIndex: Parser.uShort\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CSF\nsubtableParsers[5] = function parseLookup5() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n\n    if (substFormat === 1) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            ruleSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    input: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: substFormat,\n            coverage: this.parsePointer(Parser.coverage),\n            classDef: this.parsePointer(Parser.classDef),\n            classSets: this.parseListOfLists(function() {\n                const glyphCount = this.parseUShort();\n                const substCount = this.parseUShort();\n                return {\n                    classes: this.parseUShortList(glyphCount - 1),\n                    lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        const glyphCount = this.parseUShort();\n        const substCount = this.parseUShort();\n        return {\n            substFormat: substFormat,\n            coverages: this.parseList(glyphCount, Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 5 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#CC\nsubtableParsers[6] = function parseLookup6() {\n    const start = this.offset + this.relativeOffset;\n    const substFormat = this.parseUShort();\n    if (substFormat === 1) {\n        return {\n            substFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            chainRuleSets: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 2) {\n        return {\n            substFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            backtrackClassDef: this.parsePointer(Parser.classDef),\n            inputClassDef: this.parsePointer(Parser.classDef),\n            lookaheadClassDef: this.parsePointer(Parser.classDef),\n            chainClassSet: this.parseListOfLists(function() {\n                return {\n                    backtrack: this.parseUShortList(),\n                    input: this.parseUShortList(this.parseShort() - 1),\n                    lookahead: this.parseUShortList(),\n                    lookupRecords: this.parseRecordList(lookupRecordDesc)\n                };\n            })\n        };\n    } else if (substFormat === 3) {\n        return {\n            substFormat: 3,\n            backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n            lookupRecords: this.parseRecordList(lookupRecordDesc)\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': lookup type 6 format must be 1, 2 or 3.');\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#ES\nsubtableParsers[7] = function parseLookup7() {\n    // Extension Substitution subtable\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Extension Substitution subtable identifier-format must be 1');\n    const extensionLookupType = this.parseUShort();\n    const extensionParser = new Parser(this.data, this.offset + this.parseULong());\n    return {\n        substFormat: 1,\n        lookupType: extensionLookupType,\n        extension: subtableParsers[extensionLookupType].call(extensionParser)\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/GSUB.htm#RCCS\nsubtableParsers[8] = function parseLookup8() {\n    const substFormat = this.parseUShort();\n    check.argument(substFormat === 1, 'GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1');\n    return {\n        substFormat: substFormat,\n        coverage: this.parsePointer(Parser.coverage),\n        backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),\n        substitutes: this.parseUShortList()\n    };\n};\n\n// https://www.microsoft.com/typography/OTSPEC/gsub.htm\nfunction parseGsubTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.1, 'Unsupported GSUB table version.');\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers)\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList()\n        };\n    }\n\n}\n\n// GSUB Writing //////////////////////////////////////////////\nconst subtableMakers = new Array(9);\n\nsubtableMakers[1] = function makeLookup1(subtable) {\n    if (subtable.substFormat === 1) {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 1},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)},\n            {name: 'deltaGlyphID', type: 'USHORT', value: subtable.deltaGlyphId}\n        ]);\n    } else {\n        return new table.Table('substitutionTable', [\n            {name: 'substFormat', type: 'USHORT', value: 2},\n            {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n        ].concat(table.ushortList('substitute', subtable.substitute)));\n    }\n    check.fail('Lookup type 1 substFormat must be 1 or 2.');\n};\n\nsubtableMakers[3] = function makeLookup3(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 3 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('altSet', subtable.alternateSets, function(alternateSet) {\n        return new table.Table('alternateSetTable', table.ushortList('alternate', alternateSet));\n    })));\n};\n\nsubtableMakers[4] = function makeLookup4(subtable) {\n    check.assert(subtable.substFormat === 1, 'Lookup type 4 substFormat must be 1.');\n    return new table.Table('substitutionTable', [\n        {name: 'substFormat', type: 'USHORT', value: 1},\n        {name: 'coverage', type: 'TABLE', value: new table.Coverage(subtable.coverage)}\n    ].concat(table.tableList('ligSet', subtable.ligatureSets, function(ligatureSet) {\n        return new table.Table('ligatureSetTable', table.tableList('ligature', ligatureSet, function(ligature) {\n            return new table.Table('ligatureTable',\n                [{name: 'ligGlyph', type: 'USHORT', value: ligature.ligGlyph}]\n                .concat(table.ushortList('component', ligature.components, ligature.components.length + 1))\n            );\n        }));\n    })));\n};\n\nfunction makeGsubTable(gsub) {\n    return new table.Table('GSUB', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gsub.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gsub.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gsub.lookups, subtableMakers)}\n    ]);\n}\n\nexport default { parse: parseGsubTable, make: makeGsubTable };\n","// The `GPOS` table contains kerning pairs, among other things.\n// https://www.microsoft.com/typography/OTSPEC/gpos.htm\n\nimport check from '../check';\nimport { decode } from '../types';\nimport parse from '../parse';\nimport table from '../table';\n\n// Parse the metadata `meta` table.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6meta.html\nfunction parseMetaTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 1, 'Unsupported META table version.');\n    p.parseULong(); // flags - currently unused and set to 0\n    p.parseULong(); // tableOffset\n    const numDataMaps = p.parseULong();\n\n    const tags = {};\n    for (let i = 0; i < numDataMaps; i++) {\n        const tag = p.parseTag();\n        const dataOffset = p.parseULong();\n        const dataLength = p.parseULong();\n        const text = decode.UTF8(data, start + dataOffset, dataLength);\n\n        tags[tag] = text;\n    }\n    return tags;\n}\n\nfunction makeMetaTable(tags) {\n    const numTags = Object.keys(tags).length;\n    let stringPool = '';\n    const stringPoolOffset = 16 + numTags * 12;\n\n    const result = new table.Table('meta', [\n        {name: 'version', type: 'ULONG', value: 1},\n        {name: 'flags', type: 'ULONG', value: 0},\n        {name: 'offset', type: 'ULONG', value: stringPoolOffset},\n        {name: 'numTags', type: 'ULONG', value: numTags}\n    ]);\n\n    for (let tag in tags) {\n        const pos = stringPool.length;\n        stringPool += tags[tag];\n\n        result.fields.push({name: 'tag ' + tag, type: 'TAG', value: tag});\n        result.fields.push({name: 'offset ' + tag, type: 'ULONG', value: stringPoolOffset + pos});\n        result.fields.push({name: 'length ' + tag, type: 'ULONG', value: tags[tag].length});\n    }\n\n    result.fields.push({name: 'stringPool', type: 'CHARARRAY', value: stringPool});\n\n    return result;\n}\n\nexport default { parse: parseMetaTable, make: makeMetaTable };\n","// The `sfnt` wrapper provides organization for the tables in the font.\n// It is the top-level data structure in a font.\n// https://www.microsoft.com/typography/OTSPEC/otff.htm\n// Recommendations for creating OpenType Fonts:\n// http://www.microsoft.com/typography/otspec140/recom.htm\n\nimport check from '../check';\nimport table from '../table';\n\nimport cmap from './cmap';\nimport cff from './cff';\nimport head from './head';\nimport hhea from './hhea';\nimport hmtx from './hmtx';\nimport ltag from './ltag';\nimport maxp from './maxp';\nimport _name from './name';\nimport os2 from './os2';\nimport post from './post';\nimport gsub from './gsub';\nimport meta from './meta';\n\nfunction log2(v) {\n    return Math.log(v) / Math.log(2) | 0;\n}\n\nfunction computeCheckSum(bytes) {\n    while (bytes.length % 4 !== 0) {\n        bytes.push(0);\n    }\n\n    let sum = 0;\n    for (let i = 0; i < bytes.length; i += 4) {\n        sum += (bytes[i] << 24) +\n            (bytes[i + 1] << 16) +\n            (bytes[i + 2] << 8) +\n            (bytes[i + 3]);\n    }\n\n    sum %= Math.pow(2, 32);\n    return sum;\n}\n\nfunction makeTableRecord(tag, checkSum, offset, length) {\n    return new table.Record('Table Record', [\n        {name: 'tag', type: 'TAG', value: tag !== undefined ? tag : ''},\n        {name: 'checkSum', type: 'ULONG', value: checkSum !== undefined ? checkSum : 0},\n        {name: 'offset', type: 'ULONG', value: offset !== undefined ? offset : 0},\n        {name: 'length', type: 'ULONG', value: length !== undefined ? length : 0}\n    ]);\n}\n\nfunction makeSfntTable(tables) {\n    const sfnt = new table.Table('sfnt', [\n        {name: 'version', type: 'TAG', value: 'OTTO'},\n        {name: 'numTables', type: 'USHORT', value: 0},\n        {name: 'searchRange', type: 'USHORT', value: 0},\n        {name: 'entrySelector', type: 'USHORT', value: 0},\n        {name: 'rangeShift', type: 'USHORT', value: 0}\n    ]);\n    sfnt.tables = tables;\n    sfnt.numTables = tables.length;\n    const highestPowerOf2 = Math.pow(2, log2(sfnt.numTables));\n    sfnt.searchRange = 16 * highestPowerOf2;\n    sfnt.entrySelector = log2(highestPowerOf2);\n    sfnt.rangeShift = sfnt.numTables * 16 - sfnt.searchRange;\n\n    const recordFields = [];\n    const tableFields = [];\n\n    let offset = sfnt.sizeOf() + (makeTableRecord().sizeOf() * sfnt.numTables);\n    while (offset % 4 !== 0) {\n        offset += 1;\n        tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n    }\n\n    for (let i = 0; i < tables.length; i += 1) {\n        const t = tables[i];\n        check.argument(t.tableName.length === 4, 'Table name' + t.tableName + ' is invalid.');\n        const tableLength = t.sizeOf();\n        const tableRecord = makeTableRecord(t.tableName, computeCheckSum(t.encode()), offset, tableLength);\n        recordFields.push({name: tableRecord.tag + ' Table Record', type: 'RECORD', value: tableRecord});\n        tableFields.push({name: t.tableName + ' table', type: 'RECORD', value: t});\n        offset += tableLength;\n        check.argument(!isNaN(offset), 'Something went wrong calculating the offset.');\n        while (offset % 4 !== 0) {\n            offset += 1;\n            tableFields.push({name: 'padding', type: 'BYTE', value: 0});\n        }\n    }\n\n    // Table records need to be sorted alphabetically.\n    recordFields.sort(function(r1, r2) {\n        if (r1.value.tag > r2.value.tag) {\n            return 1;\n        } else {\n            return -1;\n        }\n    });\n\n    sfnt.fields = sfnt.fields.concat(recordFields);\n    sfnt.fields = sfnt.fields.concat(tableFields);\n    return sfnt;\n}\n\n// Get the metrics for a character. If the string has more than one character\n// this function returns metrics for the first available character.\n// You can provide optional fallback metrics if no characters are available.\nfunction metricsForChar(font, chars, notFoundMetrics) {\n    for (let i = 0; i < chars.length; i += 1) {\n        const glyphIndex = font.charToGlyphIndex(chars[i]);\n        if (glyphIndex > 0) {\n            const glyph = font.glyphs.get(glyphIndex);\n            return glyph.getMetrics();\n        }\n    }\n\n    return notFoundMetrics;\n}\n\nfunction average(vs) {\n    let sum = 0;\n    for (let i = 0; i < vs.length; i += 1) {\n        sum += vs[i];\n    }\n\n    return sum / vs.length;\n}\n\n// Convert the font object to a SFNT data structure.\n// This structure contains all the necessary tables and metadata to create a binary OTF file.\nfunction fontToSfntTable(font) {\n    const xMins = [];\n    const yMins = [];\n    const xMaxs = [];\n    const yMaxs = [];\n    const advanceWidths = [];\n    const leftSideBearings = [];\n    const rightSideBearings = [];\n    let firstCharIndex;\n    let lastCharIndex = 0;\n    let ulUnicodeRange1 = 0;\n    let ulUnicodeRange2 = 0;\n    let ulUnicodeRange3 = 0;\n    let ulUnicodeRange4 = 0;\n\n    for (let i = 0; i < font.glyphs.length; i += 1) {\n        const glyph = font.glyphs.get(i);\n        const unicode = glyph.unicode | 0;\n\n        if (isNaN(glyph.advanceWidth)) {\n            throw new Error('Glyph ' + glyph.name + ' (' + i + '): advanceWidth is not a number.');\n        }\n\n        if (firstCharIndex > unicode || firstCharIndex === undefined) {\n            // ignore .notdef char\n            if (unicode > 0) {\n                firstCharIndex = unicode;\n            }\n        }\n\n        if (lastCharIndex < unicode) {\n            lastCharIndex = unicode;\n        }\n\n        const position = os2.getUnicodeRange(unicode);\n        if (position < 32) {\n            ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n            ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n            ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n            ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n            throw new Error('Unicode ranges bits > 123 are reserved for internal usage');\n        }\n        // Skip non-important characters.\n        if (glyph.name === '.notdef') continue;\n        const metrics = glyph.getMetrics();\n        xMins.push(metrics.xMin);\n        yMins.push(metrics.yMin);\n        xMaxs.push(metrics.xMax);\n        yMaxs.push(metrics.yMax);\n        leftSideBearings.push(metrics.leftSideBearing);\n        rightSideBearings.push(metrics.rightSideBearing);\n        advanceWidths.push(glyph.advanceWidth);\n    }\n\n    const globals = {\n        xMin: Math.min.apply(null, xMins),\n        yMin: Math.min.apply(null, yMins),\n        xMax: Math.max.apply(null, xMaxs),\n        yMax: Math.max.apply(null, yMaxs),\n        advanceWidthMax: Math.max.apply(null, advanceWidths),\n        advanceWidthAvg: average(advanceWidths),\n        minLeftSideBearing: Math.min.apply(null, leftSideBearings),\n        maxLeftSideBearing: Math.max.apply(null, leftSideBearings),\n        minRightSideBearing: Math.min.apply(null, rightSideBearings)\n    };\n    globals.ascender = font.ascender;\n    globals.descender = font.descender;\n\n    const headTable = head.make({\n        flags: 3, // 00000011 (baseline for font at y=0; left sidebearing point at x=0)\n        unitsPerEm: font.unitsPerEm,\n        xMin: globals.xMin,\n        yMin: globals.yMin,\n        xMax: globals.xMax,\n        yMax: globals.yMax,\n        lowestRecPPEM: 3,\n        createdTimestamp: font.createdTimestamp\n    });\n\n    const hheaTable = hhea.make({\n        ascender: globals.ascender,\n        descender: globals.descender,\n        advanceWidthMax: globals.advanceWidthMax,\n        minLeftSideBearing: globals.minLeftSideBearing,\n        minRightSideBearing: globals.minRightSideBearing,\n        xMaxExtent: globals.maxLeftSideBearing + (globals.xMax - globals.xMin),\n        numberOfHMetrics: font.glyphs.length\n    });\n\n    const maxpTable = maxp.make(font.glyphs.length);\n\n    const os2Table = os2.make(Object.assign({\n        xAvgCharWidth: Math.round(globals.advanceWidthAvg),\n        usFirstCharIndex: firstCharIndex,\n        usLastCharIndex: lastCharIndex,\n        ulUnicodeRange1: ulUnicodeRange1,\n        ulUnicodeRange2: ulUnicodeRange2,\n        ulUnicodeRange3: ulUnicodeRange3,\n        ulUnicodeRange4: ulUnicodeRange4,\n        // See http://typophile.com/node/13081 for more info on vertical metrics.\n        // We get metrics for typical characters (such as \"x\" for xHeight).\n        // We provide some fallback characters if characters are unavailable: their\n        // ordering was chosen experimentally.\n        sTypoAscender: globals.ascender,\n        sTypoDescender: globals.descender,\n        sTypoLineGap: 0,\n        usWinAscent: globals.yMax,\n        usWinDescent: Math.abs(globals.yMin),\n        ulCodePageRange1: 1, // FIXME: hard-code Latin 1 support for now\n        sxHeight: metricsForChar(font, 'xyvw', {yMax: Math.round(globals.ascender / 2)}).yMax,\n        sCapHeight: metricsForChar(font, 'HIKLEFJMNTZBDPRAGOQSUVWXY', globals).yMax,\n        usDefaultChar: font.hasChar(' ') ? 32 : 0, // Use space as the default character, if available.\n        usBreakChar: font.hasChar(' ') ? 32 : 0, // Use space as the break character, if available.\n    }, font.tables.os2));\n\n    const hmtxTable = hmtx.make(font.glyphs);\n    const cmapTable = cmap.make(font.glyphs);\n\n    const englishFamilyName = font.getEnglishName('fontFamily');\n    const englishStyleName = font.getEnglishName('fontSubfamily');\n    const englishFullName = englishFamilyName + ' ' + englishStyleName;\n    let postScriptName = font.getEnglishName('postScriptName');\n    if (!postScriptName) {\n        postScriptName = englishFamilyName.replace(/\\s/g, '') + '-' + englishStyleName;\n    }\n\n    const names = {};\n    for (let n in font.names) {\n        names[n] = font.names[n];\n    }\n\n    if (!names.uniqueID) {\n        names.uniqueID = {en: font.getEnglishName('manufacturer') + ':' + englishFullName};\n    }\n\n    if (!names.postScriptName) {\n        names.postScriptName = {en: postScriptName};\n    }\n\n    if (!names.preferredFamily) {\n        names.preferredFamily = font.names.fontFamily;\n    }\n\n    if (!names.preferredSubfamily) {\n        names.preferredSubfamily = font.names.fontSubfamily;\n    }\n\n    const languageTags = [];\n    const nameTable = _name.make(names, languageTags);\n    const ltagTable = (languageTags.length > 0 ? ltag.make(languageTags) : undefined);\n\n    const postTable = post.make();\n    const cffTable = cff.make(font.glyphs, {\n        version: font.getEnglishName('version'),\n        fullName: englishFullName,\n        familyName: englishFamilyName,\n        weightName: englishStyleName,\n        postScriptName: postScriptName,\n        unitsPerEm: font.unitsPerEm,\n        fontBBox: [0, globals.yMin, globals.ascender, globals.advanceWidthMax]\n    });\n\n    const metaTable = (font.metas && Object.keys(font.metas).length > 0) ? meta.make(font.metas) : undefined;\n\n    // The order does not matter because makeSfntTable() will sort them.\n    const tables = [headTable, hheaTable, maxpTable, os2Table, nameTable, cmapTable, postTable, cffTable, hmtxTable];\n    if (ltagTable) {\n        tables.push(ltagTable);\n    }\n    // Optional tables\n    if (font.tables.gsub) {\n        tables.push(gsub.make(font.tables.gsub));\n    }\n    if (metaTable) {\n        tables.push(metaTable);\n    }\n\n    const sfntTable = makeSfntTable(tables);\n\n    // Compute the font's checkSum and store it in head.checkSumAdjustment.\n    const bytes = sfntTable.encode();\n    const checkSum = computeCheckSum(bytes);\n    const tableFields = sfntTable.fields;\n    let checkSumAdjusted = false;\n    for (let i = 0; i < tableFields.length; i += 1) {\n        if (tableFields[i].name === 'head table') {\n            tableFields[i].value.checkSumAdjustment = 0xB1B0AFBA - checkSum;\n            checkSumAdjusted = true;\n            break;\n        }\n    }\n\n    if (!checkSumAdjusted) {\n        throw new Error('Could not find head table with checkSum to adjust.');\n    }\n\n    return sfntTable;\n}\n\nexport default { make: makeSfntTable, fontToTable: fontToSfntTable, computeCheckSum };\n","// The Layout object is the prototype of Substitution objects, and provides\n// utility methods to manipulate common layout tables (GPOS, GSUB, GDEF...)\n\nimport check from './check';\n\nfunction searchTag(arr, tag) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid].tag;\n        if (val === tag) {\n            return imid;\n        } else if (val < tag) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\nfunction binSearch(arr, value) {\n    /* jshint bitwise: false */\n    let imin = 0;\n    let imax = arr.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        const val = arr[imid];\n        if (val === value) {\n            return imid;\n        } else if (val < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    // Not found: return -1-insertion point\n    return -imin - 1;\n}\n\n// binary search in a list of ranges (coverage, class definition)\nfunction searchRange(ranges, value) {\n    // jshint bitwise: false\n    let range;\n    let imin = 0;\n    let imax = ranges.length - 1;\n    while (imin <= imax) {\n        const imid = (imin + imax) >>> 1;\n        range = ranges[imid];\n        const start = range.start;\n        if (start === value) {\n            return range;\n        } else if (start < value) {\n            imin = imid + 1;\n        } else { imax = imid - 1; }\n    }\n    if (imin > 0) {\n        range = ranges[imin - 1];\n        if (value > range.end) return 0;\n        return range;\n    }\n}\n\n/**\n * @exports opentype.Layout\n * @class\n */\nfunction Layout(font, tableName) {\n    this.font = font;\n    this.tableName = tableName;\n}\n\nLayout.prototype = {\n\n    /**\n     * Binary search an object by \"tag\" property\n     * @instance\n     * @function searchTag\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {string} tag\n     * @return {number}\n     */\n    searchTag: searchTag,\n\n    /**\n     * Binary search in a list of numbers\n     * @instance\n     * @function binSearch\n     * @memberof opentype.Layout\n     * @param  {Array} arr\n     * @param  {number} value\n     * @return {number}\n     */\n    binSearch: binSearch,\n\n    /**\n     * Get or create the Layout table (GSUB, GPOS etc).\n     * @param  {boolean} create - Whether to create a new one.\n     * @return {Object} The GSUB or GPOS table.\n     */\n    getTable: function(create) {\n        let layout = this.font.tables[this.tableName];\n        if (!layout && create) {\n            layout = this.font.tables[this.tableName] = this.createDefaultTable();\n        }\n        return layout;\n    },\n\n    /**\n     * Returns all scripts in the substitution table.\n     * @instance\n     * @return {Array}\n     */\n    getScriptNames: function() {\n        let layout = this.getTable();\n        if (!layout) { return []; }\n        return layout.scripts.map(function(script) {\n            return script.tag;\n        });\n    },\n\n    /**\n     * Returns the best bet for a script name.\n     * Returns 'DFLT' if it exists.\n     * If not, returns 'latn' if it exists.\n     * If neither exist, returns undefined.\n     */\n    getDefaultScriptName: function() {\n        let layout = this.getTable();\n        if (!layout) { return; }\n        let hasLatn = false;\n        for (let i = 0; i < layout.scripts.length; i++) {\n            const name = layout.scripts[i].tag;\n            if (name === 'DFLT') return name;\n            if (name === 'latn') hasLatn = true;\n        }\n        if (hasLatn) return 'latn';\n    },\n\n    /**\n     * Returns all LangSysRecords in the given script.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {boolean} create - forces the creation of this script table if it doesn't exist.\n     * @return {Object} An object with tag and script properties.\n     */\n    getScriptTable: function(script, create) {\n        const layout = this.getTable(create);\n        if (layout) {\n            script = script || 'DFLT';\n            const scripts = layout.scripts;\n            const pos = searchTag(layout.scripts, script);\n            if (pos >= 0) {\n                return scripts[pos].script;\n            } else if (create) {\n                const scr = {\n                    tag: script,\n                    script: {\n                        defaultLangSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []},\n                        langSysRecords: []\n                    }\n                };\n                scripts.splice(-1 - pos, 0, scr);\n                return scr.script;\n            }\n        }\n    },\n\n    /**\n     * Returns a language system table\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.\n     * @return {Object}\n     */\n    getLangSysTable: function(script, language, create) {\n        const scriptTable = this.getScriptTable(script, create);\n        if (scriptTable) {\n            if (!language || language === 'dflt' || language === 'DFLT') {\n                return scriptTable.defaultLangSys;\n            }\n            const pos = searchTag(scriptTable.langSysRecords, language);\n            if (pos >= 0) {\n                return scriptTable.langSysRecords[pos].langSys;\n            } else if (create) {\n                const langSysRecord = {\n                    tag: language,\n                    langSys: {reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: []}\n                };\n                scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);\n                return langSysRecord.langSys;\n            }\n        }\n    },\n\n    /**\n     * Get a specific feature table.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm\n     * @param {boolean} create - forces the creation of the feature table if it doesn't exist.\n     * @return {Object}\n     */\n    getFeatureTable: function(script, language, feature, create) {\n        const langSysTable = this.getLangSysTable(script, language, create);\n        if (langSysTable) {\n            let featureRecord;\n            const featIndexes = langSysTable.featureIndexes;\n            const allFeatures = this.font.tables[this.tableName].features;\n            // The FeatureIndex array of indices is in arbitrary order,\n            // even if allFeatures is sorted alphabetically by feature tag.\n            for (let i = 0; i < featIndexes.length; i++) {\n                featureRecord = allFeatures[featIndexes[i]];\n                if (featureRecord.tag === feature) {\n                    return featureRecord.feature;\n                }\n            }\n            if (create) {\n                const index = allFeatures.length;\n                // Automatic ordering of features would require to shift feature indexes in the script list.\n                check.assert(index === 0 || feature >= allFeatures[index - 1].tag, 'Features must be added in alphabetical order.');\n                featureRecord = {\n                    tag: feature,\n                    feature: { params: 0, lookupListIndexes: [] }\n                };\n                allFeatures.push(featureRecord);\n                featIndexes.push(index);\n                return featureRecord.feature;\n            }\n        }\n    },\n\n    /**\n     * Get the lookup tables of a given type for a script/language/feature.\n     * @instance\n     * @param {string} [script='DFLT']\n     * @param {string} [language='dlft']\n     * @param {string} feature - 4-letter feature code\n     * @param {number} lookupType - 1 to 9\n     * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.\n     * @return {Object[]}\n     */\n    getLookupTables: function(script, language, feature, lookupType, create) {\n        const featureTable = this.getFeatureTable(script, language, feature, create);\n        const tables = [];\n        if (featureTable) {\n            let lookupTable;\n            const lookupListIndexes = featureTable.lookupListIndexes;\n            const allLookups = this.font.tables[this.tableName].lookups;\n            // lookupListIndexes are in no particular order, so use naive search.\n            for (let i = 0; i < lookupListIndexes.length; i++) {\n                lookupTable = allLookups[lookupListIndexes[i]];\n                if (lookupTable.lookupType === lookupType) {\n                    tables.push(lookupTable);\n                }\n            }\n            if (tables.length === 0 && create) {\n                lookupTable = {\n                    lookupType: lookupType,\n                    lookupFlag: 0,\n                    subtables: [],\n                    markFilteringSet: undefined\n                };\n                const index = allLookups.length;\n                allLookups.push(lookupTable);\n                lookupListIndexes.push(index);\n                return [lookupTable];\n            }\n        }\n        return tables;\n    },\n\n    /**\n     * Find a glyph in a class definition table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#class-definition-table\n     * @param {object} classDefTable - an OpenType Layout class definition table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getGlyphClass: function(classDefTable, glyphIndex) {\n        switch (classDefTable.format) {\n            case 1:\n                if (classDefTable.startGlyph <= glyphIndex && glyphIndex < classDefTable.startGlyph + classDefTable.classes.length) {\n                    return classDefTable.classes[glyphIndex - classDefTable.startGlyph];\n                }\n                return 0;\n            case 2:\n                const range = searchRange(classDefTable.ranges, glyphIndex);\n                return range ? range.classId : 0;\n        }\n    },\n\n    /**\n     * Find a glyph in a coverage table\n     * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#coverage-table\n     * @param {object} coverageTable - an OpenType Layout coverage table\n     * @param {number} glyphIndex - the index of the glyph to find\n     * @returns {number} -1 if not found\n     */\n    getCoverageIndex: function(coverageTable, glyphIndex) {\n        switch (coverageTable.format) {\n            case 1:\n                const index = binSearch(coverageTable.glyphs, glyphIndex);\n                return index >= 0 ? index : -1;\n            case 2:\n                const range = searchRange(coverageTable.ranges, glyphIndex);\n                return range ? range.index + glyphIndex - range.start : -1;\n        }\n    },\n\n    /**\n     * Returns the list of glyph indexes of a coverage table.\n     * Format 1: the list is stored raw\n     * Format 2: compact list as range records.\n     * @instance\n     * @param  {Object} coverageTable\n     * @return {Array}\n     */\n    expandCoverage: function(coverageTable) {\n        if (coverageTable.format === 1) {\n            return coverageTable.glyphs;\n        } else {\n            const glyphs = [];\n            const ranges = coverageTable.ranges;\n            for (let i = 0; i < ranges.length; i++) {\n                const range = ranges[i];\n                const start = range.start;\n                const end = range.end;\n                for (let j = start; j <= end; j++) {\n                    glyphs.push(j);\n                }\n            }\n            return glyphs;\n        }\n    }\n\n};\n\nexport default Layout;\n","// The Position object provides utility methods to manipulate\n// the GPOS position table.\n\nimport Layout from './layout';\n\n/**\n * @exports opentype.Position\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Position(font) {\n    Layout.call(this, font, 'gpos');\n}\n\nPosition.prototype = Layout.prototype;\n\n/**\n * Init some data for faster and easier access later.\n */\nPosition.prototype.init = function() {\n    const script = this.getDefaultScriptName();\n    this.defaultKerningTables = this.getKerningTables(script);\n};\n\n/**\n * Find a glyph pair in a list of lookup tables of type 2 and retrieve the xAdvance kerning value.\n *\n * @param {integer} leftIndex - left glyph index\n * @param {integer} rightIndex - right glyph index\n * @returns {integer}\n */\nPosition.prototype.getKerningValue = function(kerningLookups, leftIndex, rightIndex) {\n    for (let i = 0; i < kerningLookups.length; i++) {\n        const subtables = kerningLookups[i].subtables;\n        for (let j = 0; j < subtables.length; j++) {\n            const subtable = subtables[j];\n            const covIndex = this.getCoverageIndex(subtable.coverage, leftIndex);\n            if (covIndex < 0) continue;\n            switch (subtable.posFormat) {\n                case 1:\n                    // Search Pair Adjustment Positioning Format 1\n                    let pairSet = subtable.pairSets[covIndex];\n                    for (let k = 0; k < pairSet.length; k++) {\n                        let pair = pairSet[k];\n                        if (pair.secondGlyph === rightIndex) {\n                            return pair.value1 && pair.value1.xAdvance || 0;\n                        }\n                    }\n                    break;      // left glyph found, not right glyph - try next subtable\n                case 2:\n                    // Search Pair Adjustment Positioning Format 2\n                    const class1 = this.getGlyphClass(subtable.classDef1, leftIndex);\n                    const class2 = this.getGlyphClass(subtable.classDef2, rightIndex);\n                    const pair = subtable.classRecords[class1][class2];\n                    return pair.value1 && pair.value1.xAdvance || 0;\n            }\n        }\n    }\n    return 0;\n};\n\n/**\n * List all kerning lookup tables.\n *\n * @param {string} [script='DFLT'] - use font.position.getDefaultScriptName() for a better default value\n * @param {string} [language='dflt']\n * @return {object[]} The list of kerning lookup tables (may be empty), or undefined if there is no GPOS table (and we should use the kern table)\n */\nPosition.prototype.getKerningTables = function(script, language) {\n    if (this.font.tables.gpos) {\n        return this.getLookupTables(script, language, 'kern', 2);\n    }\n};\n\nexport default Position;\n","// The Substitution object provides utility methods to manipulate\n// the GSUB substitution table.\n\nimport check from './check';\nimport Layout from './layout';\n\n/**\n * @exports opentype.Substitution\n * @class\n * @extends opentype.Layout\n * @param {opentype.Font}\n * @constructor\n */\nfunction Substitution(font) {\n    Layout.call(this, font, 'gsub');\n}\n\n// Check if 2 arrays of primitives are equal.\nfunction arraysEqual(ar1, ar2) {\n    const n = ar1.length;\n    if (n !== ar2.length) { return false; }\n    for (let i = 0; i < n; i++) {\n        if (ar1[i] !== ar2[i]) { return false; }\n    }\n    return true;\n}\n\n// Find the first subtable of a lookup table in a particular format.\nfunction getSubstFormat(lookupTable, format, defaultSubtable) {\n    const subtables = lookupTable.subtables;\n    for (let i = 0; i < subtables.length; i++) {\n        const subtable = subtables[i];\n        if (subtable.substFormat === format) {\n            return subtable;\n        }\n    }\n    if (defaultSubtable) {\n        subtables.push(defaultSubtable);\n        return defaultSubtable;\n    }\n    return undefined;\n}\n\nSubstitution.prototype = Layout.prototype;\n\n/**\n * Create a default GSUB table.\n * @return {Object} gsub - The GSUB table.\n */\nSubstitution.prototype.createDefaultTable = function() {\n    // Generate a default empty GSUB table with just a DFLT script and dflt lang sys.\n    return {\n        version: 1,\n        scripts: [{\n            tag: 'DFLT',\n            script: {\n                defaultLangSys: { reserved: 0, reqFeatureIndex: 0xffff, featureIndexes: [] },\n                langSysRecords: []\n            }\n        }],\n        features: [],\n        lookups: []\n    };\n};\n\n/**\n * List all single substitutions (lookup type 1) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt', 'ss01'...)\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getSingle = function(feature, script, language) {\n    const substitutions = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 1);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            let j;\n            if (subtable.substFormat === 1) {\n                const delta = subtable.deltaGlyphId;\n                for (j = 0; j < glyphs.length; j++) {\n                    const glyph = glyphs[j];\n                    substitutions.push({ sub: glyph, by: glyph + delta });\n                }\n            } else {\n                const substitute = subtable.substitute;\n                for (j = 0; j < glyphs.length; j++) {\n                    substitutions.push({ sub: glyphs[j], by: substitute[j] });\n                }\n            }\n        }\n    }\n    return substitutions;\n};\n\n/**\n * List all alternates (lookup type 3) for a given script, language, and feature.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @param {string} feature - 4-character feature name ('aalt', 'salt'...)\n * @return {Array} alternates - The list of alternates\n */\nSubstitution.prototype.getAlternates = function(feature, script, language) {\n    const alternates = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 3);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const alternateSets = subtable.alternateSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                alternates.push({ sub: glyphs[j], by: alternateSets[j] });\n            }\n        }\n    }\n    return alternates;\n};\n\n/**\n * List all ligatures (lookup type 4) for a given script, language, and feature.\n * The result is an array of ligature objects like { sub: [ids], by: id }\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} ligatures - The list of ligatures.\n */\nSubstitution.prototype.getLigatures = function(feature, script, language) {\n    const ligatures = [];\n    const lookupTables = this.getLookupTables(script, language, feature, 4);\n    for (let idx = 0; idx < lookupTables.length; idx++) {\n        const subtables = lookupTables[idx].subtables;\n        for (let i = 0; i < subtables.length; i++) {\n            const subtable = subtables[i];\n            const glyphs = this.expandCoverage(subtable.coverage);\n            const ligatureSets = subtable.ligatureSets;\n            for (let j = 0; j < glyphs.length; j++) {\n                const startGlyph = glyphs[j];\n                const ligSet = ligatureSets[j];\n                for (let k = 0; k < ligSet.length; k++) {\n                    const lig = ligSet[k];\n                    ligatures.push({\n                        sub: [startGlyph].concat(lig.components),\n                        by: lig.ligGlyph\n                    });\n                }\n            }\n        }\n    }\n    return ligatures;\n};\n\n/**\n * Add or modify a single substitution (lookup type 1)\n * Format 2, more flexible, is always used.\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, delta: number } for format 1 or { sub: id, by: id } for format 2.\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addSingle = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 1, true)[0];\n    const subtable = getSubstFormat(lookupTable, 2, {                // lookup type 1 subtable, format 2, coverage format 1\n        substFormat: 2,\n        coverage: {format: 1, glyphs: []},\n        substitute: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.substitute.splice(pos, 0, 0);\n    }\n    subtable.substitute[pos] = substitution.by;\n};\n\n/**\n * Add or modify an alternate substitution (lookup type 1)\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} substitution - { sub: id, by: [ids] }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addAlternate = function(feature, substitution, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 3, true)[0];\n    const subtable = getSubstFormat(lookupTable, 1, {                // lookup type 3 subtable, format 1, coverage format 1\n        substFormat: 1,\n        coverage: {format: 1, glyphs: []},\n        alternateSets: []\n    });\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = substitution.sub;\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos < 0) {\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.alternateSets.splice(pos, 0, 0);\n    }\n    subtable.alternateSets[pos] = substitution.by;\n};\n\n/**\n * Add a ligature (lookup type 4)\n * Ligatures with more components must be stored ahead of those with fewer components in order to be found\n * @param {string} feature - 4-letter feature name ('liga', 'rlig', 'dlig'...)\n * @param {Object} ligature - { sub: [ids], by: id }\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.addLigature = function(feature, ligature, script, language) {\n    const lookupTable = this.getLookupTables(script, language, feature, 4, true)[0];\n    let subtable = lookupTable.subtables[0];\n    if (!subtable) {\n        subtable = {                // lookup type 4 subtable, format 1, coverage format 1\n            substFormat: 1,\n            coverage: { format: 1, glyphs: [] },\n            ligatureSets: []\n        };\n        lookupTable.subtables[0] = subtable;\n    }\n    check.assert(subtable.coverage.format === 1, 'Ligature: unable to modify coverage table format ' + subtable.coverage.format);\n    const coverageGlyph = ligature.sub[0];\n    const ligComponents = ligature.sub.slice(1);\n    const ligatureTable = {\n        ligGlyph: ligature.by,\n        components: ligComponents\n    };\n    let pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);\n    if (pos >= 0) {\n        // ligatureSet already exists\n        const ligatureSet = subtable.ligatureSets[pos];\n        for (let i = 0; i < ligatureSet.length; i++) {\n            // If ligature already exists, return.\n            if (arraysEqual(ligatureSet[i].components, ligComponents)) {\n                return;\n            }\n        }\n        // ligature does not exist: add it.\n        ligatureSet.push(ligatureTable);\n    } else {\n        // Create a new ligatureSet and add coverage for the first glyph.\n        pos = -1 - pos;\n        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);\n        subtable.ligatureSets.splice(pos, 0, [ligatureTable]);\n    }\n};\n\n/**\n * List all feature data for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n * @return {Array} substitutions - The list of substitutions.\n */\nSubstitution.prototype.getFeature = function(feature, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.getSingle(feature, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            return this.getSingle(feature, script, language)\n                    .concat(this.getAlternates(feature, script, language));\n        case 'dlig':\n        case 'liga':\n        case 'rlig': return this.getLigatures(feature, script, language);\n    }\n    return undefined;\n};\n\n/**\n * Add a substitution to a feature for a given script and language.\n * @param {string} feature - 4-letter feature name\n * @param {Object} sub - the substitution to add (an object like { sub: id or [ids], by: id or [ids] })\n * @param {string} [script='DFLT']\n * @param {string} [language='dflt']\n */\nSubstitution.prototype.add = function(feature, sub, script, language) {\n    if (/ss\\d\\d/.test(feature)) {\n        // ss01 - ss20\n        return this.addSingle(feature, sub, script, language);\n    }\n    switch (feature) {\n        case 'aalt':\n        case 'salt':\n            if (typeof sub.by === 'number') {\n                return this.addSingle(feature, sub, script, language);\n            }\n            return this.addAlternate(feature, sub, script, language);\n        case 'dlig':\n        case 'liga':\n        case 'rlig':\n            return this.addLigature(feature, sub, script, language);\n    }\n    return undefined;\n};\n\nexport default Substitution;\n","function isBrowser() {\n    return typeof window !== 'undefined';\n}\n\nfunction isNode() {\n    return typeof window === 'undefined';\n}\n\nfunction nodeBufferToArrayBuffer(buffer) {\n    const ab = new ArrayBuffer(buffer.length);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        view[i] = buffer[i];\n    }\n\n    return ab;\n}\n\nfunction arrayBufferToNodeBuffer(ab) {\n    const buffer = new Buffer(ab.byteLength);\n    const view = new Uint8Array(ab);\n    for (let i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n\n    return buffer;\n}\n\nfunction checkArgument(expression, message) {\n    if (!expression) {\n        throw message;\n    }\n}\n\nexport { isBrowser, isNode, nodeBufferToArrayBuffer, arrayBufferToNodeBuffer, checkArgument };\n","// The `glyf` table describes the glyphs in TrueType outline format.\n// http://www.microsoft.com/typography/otspec/glyf.htm\n\nimport check from '../check';\nimport glyphset from '../glyphset';\nimport parse from '../parse';\nimport Path from '../path';\n\n// Parse the coordinate data for a glyph.\nfunction parseGlyphCoordinate(p, flag, previousValue, shortVectorBitMask, sameBitMask) {\n    let v;\n    if ((flag & shortVectorBitMask) > 0) {\n        // The coordinate is 1 byte long.\n        v = p.parseByte();\n        // The `same` bit is re-used for short values to signify the sign of the value.\n        if ((flag & sameBitMask) === 0) {\n            v = -v;\n        }\n\n        v = previousValue + v;\n    } else {\n        //  The coordinate is 2 bytes long.\n        // If the `same` bit is set, the coordinate is the same as the previous coordinate.\n        if ((flag & sameBitMask) > 0) {\n            v = previousValue;\n        } else {\n            // Parse the coordinate as a signed 16-bit delta value.\n            v = previousValue + p.parseShort();\n        }\n    }\n\n    return v;\n}\n\n// Parse a TrueType glyph.\nfunction parseGlyph(glyph, data, start) {\n    const p = new parse.Parser(data, start);\n    glyph.numberOfContours = p.parseShort();\n    glyph._xMin = p.parseShort();\n    glyph._yMin = p.parseShort();\n    glyph._xMax = p.parseShort();\n    glyph._yMax = p.parseShort();\n    let flags;\n    let flag;\n\n    if (glyph.numberOfContours > 0) {\n        // This glyph is not a composite.\n        const endPointIndices = glyph.endPointIndices = [];\n        for (let i = 0; i < glyph.numberOfContours; i += 1) {\n            endPointIndices.push(p.parseUShort());\n        }\n\n        glyph.instructionLength = p.parseUShort();\n        glyph.instructions = [];\n        for (let i = 0; i < glyph.instructionLength; i += 1) {\n            glyph.instructions.push(p.parseByte());\n        }\n\n        const numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;\n        flags = [];\n        for (let i = 0; i < numberOfCoordinates; i += 1) {\n            flag = p.parseByte();\n            flags.push(flag);\n            // If bit 3 is set, we repeat this flag n times, where n is the next byte.\n            if ((flag & 8) > 0) {\n                const repeatCount = p.parseByte();\n                for (let j = 0; j < repeatCount; j += 1) {\n                    flags.push(flag);\n                    i += 1;\n                }\n            }\n        }\n\n        check.argument(flags.length === numberOfCoordinates, 'Bad flags.');\n\n        if (endPointIndices.length > 0) {\n            const points = [];\n            let point;\n            // X/Y coordinates are relative to the previous point, except for the first point which is relative to 0,0.\n            if (numberOfCoordinates > 0) {\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = {};\n                    point.onCurve = !!(flag & 1);\n                    point.lastPointOfContour = endPointIndices.indexOf(i) >= 0;\n                    points.push(point);\n                }\n\n                let px = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.x = parseGlyphCoordinate(p, flag, px, 2, 16);\n                    px = point.x;\n                }\n\n                let py = 0;\n                for (let i = 0; i < numberOfCoordinates; i += 1) {\n                    flag = flags[i];\n                    point = points[i];\n                    point.y = parseGlyphCoordinate(p, flag, py, 4, 32);\n                    py = point.y;\n                }\n            }\n\n            glyph.points = points;\n        } else {\n            glyph.points = [];\n        }\n    } else if (glyph.numberOfContours === 0) {\n        glyph.points = [];\n    } else {\n        glyph.isComposite = true;\n        glyph.points = [];\n        glyph.components = [];\n        let moreComponents = true;\n        while (moreComponents) {\n            flags = p.parseUShort();\n            const component = {\n                glyphIndex: p.parseUShort(),\n                xScale: 1,\n                scale01: 0,\n                scale10: 0,\n                yScale: 1,\n                dx: 0,\n                dy: 0\n            };\n            if ((flags & 1) > 0) {\n                // The arguments are words\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseShort();\n                    component.dy = p.parseShort();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseUShort(), p.parseUShort()];\n                }\n\n            } else {\n                // The arguments are bytes\n                if ((flags & 2) > 0) {\n                    // values are offset\n                    component.dx = p.parseChar();\n                    component.dy = p.parseChar();\n                } else {\n                    // values are matched points\n                    component.matchedPoints = [p.parseByte(), p.parseByte()];\n                }\n            }\n\n            if ((flags & 8) > 0) {\n                // We have a scale\n                component.xScale = component.yScale = p.parseF2Dot14();\n            } else if ((flags & 64) > 0) {\n                // We have an X / Y scale\n                component.xScale = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            } else if ((flags & 128) > 0) {\n                // We have a 2x2 transformation\n                component.xScale = p.parseF2Dot14();\n                component.scale01 = p.parseF2Dot14();\n                component.scale10 = p.parseF2Dot14();\n                component.yScale = p.parseF2Dot14();\n            }\n\n            glyph.components.push(component);\n            moreComponents = !!(flags & 32);\n        }\n        if (flags & 0x100) {\n            // We have instructions\n            glyph.instructionLength = p.parseUShort();\n            glyph.instructions = [];\n            for (let i = 0; i < glyph.instructionLength; i += 1) {\n                glyph.instructions.push(p.parseByte());\n            }\n        }\n    }\n}\n\n// Transform an array of points and return a new array.\nfunction transformPoints(points, transform) {\n    const newPoints = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        const newPt = {\n            x: transform.xScale * pt.x + transform.scale01 * pt.y + transform.dx,\n            y: transform.scale10 * pt.x + transform.yScale * pt.y + transform.dy,\n            onCurve: pt.onCurve,\n            lastPointOfContour: pt.lastPointOfContour\n        };\n        newPoints.push(newPt);\n    }\n\n    return newPoints;\n}\n\nfunction getContours(points) {\n    const contours = [];\n    let currentContour = [];\n    for (let i = 0; i < points.length; i += 1) {\n        const pt = points[i];\n        currentContour.push(pt);\n        if (pt.lastPointOfContour) {\n            contours.push(currentContour);\n            currentContour = [];\n        }\n    }\n\n    check.argument(currentContour.length === 0, 'There are still points left in the current contour.');\n    return contours;\n}\n\n// Convert the TrueType glyph outline to a Path.\nfunction getPath(points) {\n    const p = new Path();\n    if (!points) {\n        return p;\n    }\n\n    const contours = getContours(points);\n\n    for (let contourIndex = 0; contourIndex < contours.length; ++contourIndex) {\n        const contour = contours[contourIndex];\n\n        let prev = null;\n        let curr = contour[contour.length - 1];\n        let next = contour[0];\n\n        if (curr.onCurve) {\n            p.moveTo(curr.x, curr.y);\n        } else {\n            if (next.onCurve) {\n                p.moveTo(next.x, next.y);\n            } else {\n                // If both first and last points are off-curve, start at their middle.\n                const start = {x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5};\n                p.moveTo(start.x, start.y);\n            }\n        }\n\n        for (let i = 0; i < contour.length; ++i) {\n            prev = curr;\n            curr = next;\n            next = contour[(i + 1) % contour.length];\n\n            if (curr.onCurve) {\n                // This is a straight line.\n                p.lineTo(curr.x, curr.y);\n            } else {\n                let prev2 = prev;\n                let next2 = next;\n\n                if (!prev.onCurve) {\n                    prev2 = { x: (curr.x + prev.x) * 0.5, y: (curr.y + prev.y) * 0.5 };\n                }\n\n                if (!next.onCurve) {\n                    next2 = { x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5 };\n                }\n\n                p.quadraticCurveTo(curr.x, curr.y, next2.x, next2.y);\n            }\n        }\n\n        p.closePath();\n    }\n    return p;\n}\n\nfunction buildPath(glyphs, glyph) {\n    if (glyph.isComposite) {\n        for (let j = 0; j < glyph.components.length; j += 1) {\n            const component = glyph.components[j];\n            const componentGlyph = glyphs.get(component.glyphIndex);\n            // Force the ttfGlyphLoader to parse the glyph.\n            componentGlyph.getPath();\n            if (componentGlyph.points) {\n                let transformedPoints;\n                if (component.matchedPoints === undefined) {\n                    // component positioned by offset\n                    transformedPoints = transformPoints(componentGlyph.points, component);\n                } else {\n                    // component positioned by matched points\n                    if ((component.matchedPoints[0] > glyph.points.length - 1) ||\n                        (component.matchedPoints[1] > componentGlyph.points.length - 1)) {\n                        throw Error('Matched points out of range in ' + glyph.name);\n                    }\n                    const firstPt = glyph.points[component.matchedPoints[0]];\n                    let secondPt = componentGlyph.points[component.matchedPoints[1]];\n                    const transform = {\n                        xScale: component.xScale, scale01: component.scale01,\n                        scale10: component.scale10, yScale: component.yScale,\n                        dx: 0, dy: 0\n                    };\n                    secondPt = transformPoints([secondPt], transform)[0];\n                    transform.dx = firstPt.x - secondPt.x;\n                    transform.dy = firstPt.y - secondPt.y;\n                    transformedPoints = transformPoints(componentGlyph.points, transform);\n                }\n                glyph.points = glyph.points.concat(transformedPoints);\n            }\n        }\n    }\n\n    return getPath(glyph.points);\n}\n\nfunction parseGlyfTableAll(data, start, loca, font) {\n    const glyphs = new glyphset.GlyphSet(font);\n\n    // The last element of the loca table is invalid.\n    for (let i = 0; i < loca.length - 1; i += 1) {\n        const offset = loca[i];\n        const nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    }\n\n    return glyphs;\n}\n\nfunction parseGlyfTableOnLowMemory(data, start, loca, font) {\n    const glyphs = new glyphset.GlyphSet(font);\n\n    font._push = function(i) {\n        const offset = loca[i];\n        const nextOffset = loca[i + 1];\n        if (offset !== nextOffset) {\n            glyphs.push(i, glyphset.ttfGlyphLoader(font, i, parseGlyph, data, start + offset, buildPath));\n        } else {\n            glyphs.push(i, glyphset.glyphLoader(font, i));\n        }\n    };\n\n    return glyphs;\n}\n\n// Parse all the glyphs according to the offsets from the `loca` table.\nfunction parseGlyfTable(data, start, loca, font, opt) {\n    if (opt.lowMemory)\n        return parseGlyfTableOnLowMemory(data, start, loca, font);\n    else\n        return parseGlyfTableAll(data, start, loca, font);\n}\n\nexport default { getPath, parse: parseGlyfTable};\n","/* A TrueType font hinting interpreter.\n*\n* (c) 2017 Axel Kittenberger\n*\n* This interpreter has been implemented according to this documentation:\n* https://developer.apple.com/fonts/TrueType-Reference-Manual/RM05/Chap5.html\n*\n* According to the documentation F24DOT6 values are used for pixels.\n* That means calculation is 1/64 pixel accurate and uses integer operations.\n* However, Javascript has floating point operations by default and only\n* those are available. One could make a case to simulate the 1/64 accuracy\n* exactly by truncating after every division operation\n* (for example with << 0) to get pixel exactly results as other TrueType\n* implementations. It may make sense since some fonts are pixel optimized\n* by hand using DELTAP instructions. The current implementation doesn't\n* and rather uses full floating point precision.\n*\n* xScale, yScale and rotation is currently ignored.\n*\n* A few non-trivial instructions are missing as I didn't encounter yet\n* a font that used them to test a possible implementation.\n*\n* Some fonts seem to use undocumented features regarding the twilight zone.\n* Only some of them are implemented as they were encountered.\n*\n* The exports.DEBUG statements are removed on the minified distribution file.\n*/\n'use strict';\n\nimport glyf from './tables/glyf';\n\nlet instructionTable;\nlet exec;\nlet execGlyph;\nlet execComponent;\n\n/*\n* Creates a hinting object.\n*\n* There ought to be exactly one\n* for each truetype font that is used for hinting.\n*/\nfunction Hinting(font) {\n    // the font this hinting object is for\n    this.font = font;\n\n    this.getCommands = function (hPoints) {\n        return glyf.getPath(hPoints).commands;\n    };\n\n    // cached states\n    this._fpgmState  =\n    this._prepState  =\n        undefined;\n\n    // errorState\n    // 0 ... all okay\n    // 1 ... had an error in a glyf,\n    //       continue working but stop spamming\n    //       the console\n    // 2 ... error at prep, stop hinting at this ppem\n    // 3 ... error at fpeg, stop hinting for this font at all\n    this._errorState = 0;\n}\n\n/*\n* Not rounding.\n*/\nfunction roundOff(v) {\n    return v;\n}\n\n/*\n* Rounding to grid.\n*/\nfunction roundToGrid(v) {\n    //Rounding in TT is supposed to \"symmetrical around zero\"\n    return Math.sign(v) * Math.round(Math.abs(v));\n}\n\n/*\n* Rounding to double grid.\n*/\nfunction roundToDoubleGrid(v) {\n    return Math.sign(v) * Math.round(Math.abs(v * 2)) / 2;\n}\n\n/*\n* Rounding to half grid.\n*/\nfunction roundToHalfGrid(v) {\n    return Math.sign(v) * (Math.round(Math.abs(v) + 0.5) - 0.5);\n}\n\n/*\n* Rounding to up to grid.\n*/\nfunction roundUpToGrid(v) {\n    return Math.sign(v) * Math.ceil(Math.abs(v));\n}\n\n/*\n* Rounding to down to grid.\n*/\nfunction roundDownToGrid(v) {\n    return Math.sign(v) * Math.floor(Math.abs(v));\n}\n\n/*\n* Super rounding.\n*/\nconst roundSuper = function (v) {\n    const period = this.srPeriod;\n    let phase = this.srPhase;\n    const threshold = this.srThreshold;\n    let sign = 1;\n\n    if (v < 0) {\n        v = -v;\n        sign = -1;\n    }\n\n    v += threshold - phase;\n\n    v = Math.trunc(v / period) * period;\n\n    v += phase;\n\n    // according to http://xgridfit.sourceforge.net/round.html\n    if (v < 0) return phase * sign;\n\n    return v * sign;\n};\n\n/*\n* Unit vector of x-axis.\n*/\nconst xUnitVector = {\n    x: 1,\n\n    y: 0,\n\n    axis: 'x',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.xo : p1.x) - (o2 ? p2.xo : p2.x);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.xo - rp1.xo;\n            do2 = p.xo - rp2.xo;\n            dm1 = rp1.x - rp1.xo;\n            dm2 = rp2.x - rp2.xo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.x = p.xo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.x = p.xo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            xUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        xUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this\n    normalSlope: Number.NEGATIVE_INFINITY,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'.\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.x = (org ? rp.xo : rp.x) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.x = rpdx + (p.y - rpdy) / pv.normalSlope;\n    },\n\n    // Slope of vector line.\n    slope: 0,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.xTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.xTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.xTouched = false;\n    }\n};\n\n/*\n* Unit vector of y-axis.\n*/\nconst yUnitVector = {\n    x: 0,\n\n    y: 1,\n\n    axis: 'y',\n\n    // Gets the projected distance between two points.\n    // o1/o2 ... if true, respective original position is used.\n    distance: function (p1, p2, o1, o2) {\n        return (o1 ? p1.yo : p1.y) - (o2 ? p2.yo : p2.y);\n    },\n\n    // Moves point p so the moved position has the same relative\n    // position to the moved positions of rp1 and rp2 than the\n    // original positions had.\n    //\n    // See APPENDIX on INTERPOLATE at the bottom of this file.\n    interpolate: function (p, rp1, rp2, pv) {\n        let do1;\n        let do2;\n        let doa1;\n        let doa2;\n        let dm1;\n        let dm2;\n        let dt;\n\n        if (!pv || pv === this) {\n            do1 = p.yo - rp1.yo;\n            do2 = p.yo - rp2.yo;\n            dm1 = rp1.y - rp1.yo;\n            dm2 = rp2.y - rp2.yo;\n            doa1 = Math.abs(do1);\n            doa2 = Math.abs(do2);\n            dt = doa1 + doa2;\n\n            if (dt === 0) {\n                p.y = p.yo + (dm1 + dm2) / 2;\n                return;\n            }\n\n            p.y = p.yo + (dm1 * doa2 + dm2 * doa1) / dt;\n            return;\n        }\n\n        do1 = pv.distance(p, rp1, true, true);\n        do2 = pv.distance(p, rp2, true, true);\n        dm1 = pv.distance(rp1, rp1, false, true);\n        dm2 = pv.distance(rp2, rp2, false, true);\n        doa1 = Math.abs(do1);\n        doa2 = Math.abs(do2);\n        dt = doa1 + doa2;\n\n        if (dt === 0) {\n            yUnitVector.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n            return;\n        }\n\n        yUnitVector.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n    },\n\n    // Slope of line normal to this.\n    normalSlope: 0,\n\n    // Sets the point 'p' relative to point 'rp'\n    // by the distance 'd'\n    //\n    // See APPENDIX on SETRELATIVE at the bottom of this file.\n    //\n    // p   ... point to set\n    // rp  ... reference point\n    // d   ... distance on projection vector\n    // pv  ... projection vector (undefined = this)\n    // org ... if true, uses the original position of rp as reference.\n    setRelative: function (p, rp, d, pv, org) {\n        if (!pv || pv === this) {\n            p.y = (org ? rp.yo : rp.y) + d;\n            return;\n        }\n\n        const rpx = org ? rp.xo : rp.x;\n        const rpy = org ? rp.yo : rp.y;\n        const rpdx = rpx + d * pv.x;\n        const rpdy = rpy + d * pv.y;\n\n        p.y = rpdy + pv.normalSlope * (p.x - rpdx);\n    },\n\n    // Slope of vector line.\n    slope: Number.POSITIVE_INFINITY,\n\n    // Touches the point p.\n    touch: function (p) {\n        p.yTouched = true;\n    },\n\n    // Tests if a point p is touched.\n    touched: function (p) {\n        return p.yTouched;\n    },\n\n    // Untouches the point p.\n    untouch: function (p) {\n        p.yTouched = false;\n    }\n};\n\nObject.freeze(xUnitVector);\nObject.freeze(yUnitVector);\n\n/*\n* Creates a unit vector that is not x- or y-axis.\n*/\nfunction UnitVector(x, y) {\n    this.x = x;\n    this.y = y;\n    this.axis = undefined;\n    this.slope = y / x;\n    this.normalSlope = -x / y;\n    Object.freeze(this);\n}\n\n/*\n* Gets the projected distance between two points.\n* o1/o2 ... if true, respective original position is used.\n*/\nUnitVector.prototype.distance = function(p1, p2, o1, o2) {\n    return (\n        this.x * xUnitVector.distance(p1, p2, o1, o2) +\n        this.y * yUnitVector.distance(p1, p2, o1, o2)\n    );\n};\n\n/*\n* Moves point p so the moved position has the same relative\n* position to the moved positions of rp1 and rp2 than the\n* original positions had.\n*\n* See APPENDIX on INTERPOLATE at the bottom of this file.\n*/\nUnitVector.prototype.interpolate = function(p, rp1, rp2, pv) {\n    let dm1;\n    let dm2;\n    let do1;\n    let do2;\n    let doa1;\n    let doa2;\n    let dt;\n\n    do1 = pv.distance(p, rp1, true, true);\n    do2 = pv.distance(p, rp2, true, true);\n    dm1 = pv.distance(rp1, rp1, false, true);\n    dm2 = pv.distance(rp2, rp2, false, true);\n    doa1 = Math.abs(do1);\n    doa2 = Math.abs(do2);\n    dt = doa1 + doa2;\n\n    if (dt === 0) {\n        this.setRelative(p, p, (dm1 + dm2) / 2, pv, true);\n        return;\n    }\n\n    this.setRelative(p, p, (dm1 * doa2 + dm2 * doa1) / dt, pv, true);\n};\n\n/*\n* Sets the point 'p' relative to point 'rp'\n* by the distance 'd'\n*\n* See APPENDIX on SETRELATIVE at the bottom of this file.\n*\n* p   ...  point to set\n* rp  ... reference point\n* d   ... distance on projection vector\n* pv  ... projection vector (undefined = this)\n* org ... if true, uses the original position of rp as reference.\n*/\nUnitVector.prototype.setRelative = function(p, rp, d, pv, org) {\n    pv = pv || this;\n\n    const rpx = org ? rp.xo : rp.x;\n    const rpy = org ? rp.yo : rp.y;\n    const rpdx = rpx + d * pv.x;\n    const rpdy = rpy + d * pv.y;\n\n    const pvns = pv.normalSlope;\n    const fvs = this.slope;\n\n    const px = p.x;\n    const py = p.y;\n\n    p.x = (fvs * px - pvns * rpdx + rpdy - py) / (fvs - pvns);\n    p.y = fvs * (p.x - px) + py;\n};\n\n/*\n* Touches the point p.\n*/\nUnitVector.prototype.touch = function(p) {\n    p.xTouched = true;\n    p.yTouched = true;\n};\n\n/*\n* Returns a unit vector with x/y coordinates.\n*/\nfunction getUnitVector(x, y) {\n    const d = Math.sqrt(x * x + y * y);\n\n    x /= d;\n    y /= d;\n\n    if (x === 1 && y === 0) return xUnitVector;\n    else if (x === 0 && y === 1) return yUnitVector;\n    else return new UnitVector(x, y);\n}\n\n/*\n* Creates a point in the hinting engine.\n*/\nfunction HPoint(\n    x,\n    y,\n    lastPointOfContour,\n    onCurve\n) {\n    this.x = this.xo = Math.round(x * 64) / 64; // hinted x value and original x-value\n    this.y = this.yo = Math.round(y * 64) / 64; // hinted y value and original y-value\n\n    this.lastPointOfContour = lastPointOfContour;\n    this.onCurve = onCurve;\n    this.prevPointOnContour = undefined;\n    this.nextPointOnContour = undefined;\n    this.xTouched = false;\n    this.yTouched = false;\n\n    Object.preventExtensions(this);\n}\n\n/*\n* Returns the next touched point on the contour.\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.nextTouched = function(v) {\n    let p = this.nextPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.nextPointOnContour;\n\n    return p;\n};\n\n/*\n* Returns the previous touched point on the contour\n*\n* v  ... unit vector to test touch axis.\n*/\nHPoint.prototype.prevTouched = function(v) {\n    let p = this.prevPointOnContour;\n\n    while (!v.touched(p) && p !== this) p = p.prevPointOnContour;\n\n    return p;\n};\n\n/*\n* The zero point.\n*/\nconst HPZero = Object.freeze(new HPoint(0, 0));\n\n/*\n* The default state of the interpreter.\n*\n* Note: Freezing the defaultState and then deriving from it\n* makes the V8 Javascript engine going awkward,\n* so this is avoided, albeit the defaultState shouldn't\n* ever change.\n*/\nconst defaultState = {\n    cvCutIn: 17 / 16,    // control value cut in\n    deltaBase: 9,\n    deltaShift: 0.125,\n    loop: 1,             // loops some instructions\n    minDis: 1,           // minimum distance\n    autoFlip: true\n};\n\n/*\n* The current state of the interpreter.\n*\n* env  ... 'fpgm' or 'prep' or 'glyf'\n* prog ... the program\n*/\nfunction State(env, prog) {\n    this.env = env;\n    this.stack = [];\n    this.prog = prog;\n\n    switch (env) {\n        case 'glyf' :\n            this.zp0 = this.zp1 = this.zp2 = 1;\n            this.rp0 = this.rp1 = this.rp2 = 0;\n            /* fall through */\n        case 'prep' :\n            this.fv = this.pv = this.dpv = xUnitVector;\n            this.round = roundToGrid;\n    }\n}\n\n/*\n* Executes a glyph program.\n*\n* This does the hinting for each glyph.\n*\n* Returns an array of moved points.\n*\n* glyph: the glyph to hint\n* ppem: the size the glyph is rendered for\n*/\nHinting.prototype.exec = function(glyph, ppem) {\n    if (typeof ppem !== 'number') {\n        throw new Error('Point size is not a number!');\n    }\n\n    // Received a fatal error, don't do any hinting anymore.\n    if (this._errorState > 2) return;\n\n    const font = this.font;\n    let prepState = this._prepState;\n\n    if (!prepState || prepState.ppem !== ppem) {\n        let fpgmState = this._fpgmState;\n\n        if (!fpgmState) {\n            // Executes the fpgm state.\n            // This is used by fonts to define functions.\n            State.prototype = defaultState;\n\n            fpgmState =\n            this._fpgmState =\n                new State('fpgm', font.tables.fpgm);\n\n            fpgmState.funcs = [ ];\n            fpgmState.font = font;\n\n            if (exports.DEBUG) {\n                console.log('---EXEC FPGM---');\n                fpgmState.step = -1;\n            }\n\n            try {\n                exec(fpgmState);\n            } catch (e) {\n                console.log('Hinting error in FPGM:' + e);\n                this._errorState = 3;\n                return;\n            }\n        }\n\n        // Executes the prep program for this ppem setting.\n        // This is used by fonts to set cvt values\n        // depending on to be rendered font size.\n\n        State.prototype = fpgmState;\n        prepState =\n        this._prepState =\n            new State('prep', font.tables.prep);\n\n        prepState.ppem = ppem;\n\n        // Creates a copy of the cvt table\n        // and scales it to the current ppem setting.\n        const oCvt = font.tables.cvt;\n        if (oCvt) {\n            const cvt = prepState.cvt = new Array(oCvt.length);\n            const scale = ppem / font.unitsPerEm;\n            for (let c = 0; c < oCvt.length; c++) {\n                cvt[c] = oCvt[c] * scale;\n            }\n        } else {\n            prepState.cvt = [];\n        }\n\n        if (exports.DEBUG) {\n            console.log('---EXEC PREP---');\n            prepState.step = -1;\n        }\n\n        try {\n            exec(prepState);\n        } catch (e) {\n            if (this._errorState < 2) {\n                console.log('Hinting error in PREP:' + e);\n            }\n            this._errorState = 2;\n        }\n    }\n\n    if (this._errorState > 1) return;\n\n    try {\n        return execGlyph(glyph, prepState);\n    } catch (e) {\n        if (this._errorState < 1) {\n            console.log('Hinting error:' + e);\n            console.log('Note: further hinting errors are silenced');\n        }\n        this._errorState = 1;\n        return undefined;\n    }\n};\n\n/*\n* Executes the hinting program for a glyph.\n*/\nexecGlyph = function(glyph, prepState) {\n    // original point positions\n    const xScale = prepState.ppem / prepState.font.unitsPerEm;\n    const yScale = xScale;\n    let components = glyph.components;\n    let contours;\n    let gZone;\n    let state;\n\n    State.prototype = prepState;\n    if (!components) {\n        state = new State('glyf', glyph.instructions);\n        if (exports.DEBUG) {\n            console.log('---EXEC GLYPH---');\n            state.step = -1;\n        }\n        execComponent(glyph, state, xScale, yScale);\n        gZone = state.gZone;\n    } else {\n        const font = prepState.font;\n        gZone = [];\n        contours = [];\n        for (let i = 0; i < components.length; i++) {\n            const c = components[i];\n            const cg = font.glyphs.get(c.glyphIndex);\n\n            state = new State('glyf', cg.instructions);\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMP ' + i + '---');\n                state.step = -1;\n            }\n\n            execComponent(cg, state, xScale, yScale);\n            // appends the computed points to the result array\n            // post processes the component points\n            const dx = Math.round(c.dx * xScale);\n            const dy = Math.round(c.dy * yScale);\n            const gz = state.gZone;\n            const cc = state.contours;\n            for (let pi = 0; pi < gz.length; pi++) {\n                const p = gz[pi];\n                p.xTouched = p.yTouched = false;\n                p.xo = p.x = p.x + dx;\n                p.yo = p.y = p.y + dy;\n            }\n\n            const gLen = gZone.length;\n            gZone.push.apply(gZone, gz);\n            for (let j = 0; j < cc.length; j++) {\n                contours.push(cc[j] + gLen);\n            }\n        }\n\n        if (glyph.instructions && !state.inhibitGridFit) {\n            // the composite has instructions on its own\n            state = new State('glyf', glyph.instructions);\n\n            state.gZone = state.z0 = state.z1 = state.z2 = gZone;\n\n            state.contours = contours;\n\n            // note: HPZero cannot be used here, since\n            //       the point might be modified\n            gZone.push(\n                new HPoint(0, 0),\n                new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n            );\n\n            if (exports.DEBUG) {\n                console.log('---EXEC COMPOSITE---');\n                state.step = -1;\n            }\n\n            exec(state);\n\n            gZone.length -= 2;\n        }\n    }\n\n    return gZone;\n};\n\n/*\n* Executes the hinting program for a component of a multi-component glyph\n* or of the glyph itself for a non-component glyph.\n*/\nexecComponent = function(glyph, state, xScale, yScale)\n{\n    const points = glyph.points || [];\n    const pLen = points.length;\n    const gZone = state.gZone = state.z0 = state.z1 = state.z2 = [];\n    const contours = state.contours = [];\n\n    // Scales the original points and\n    // makes copies for the hinted points.\n    let cp; // current point\n    for (let i = 0; i < pLen; i++) {\n        cp = points[i];\n\n        gZone[i] = new HPoint(\n            cp.x * xScale,\n            cp.y * yScale,\n            cp.lastPointOfContour,\n            cp.onCurve\n        );\n    }\n\n    // Chain links the contours.\n    let sp; // start point\n    let np; // next point\n\n    for (let i = 0; i < pLen; i++) {\n        cp = gZone[i];\n\n        if (!sp) {\n            sp = cp;\n            contours.push(i);\n        }\n\n        if (cp.lastPointOfContour) {\n            cp.nextPointOnContour = sp;\n            sp.prevPointOnContour = cp;\n            sp = undefined;\n        } else {\n            np = gZone[i + 1];\n            cp.nextPointOnContour = np;\n            np.prevPointOnContour = cp;\n        }\n    }\n\n    if (state.inhibitGridFit) return;\n\n    if (exports.DEBUG) {\n        console.log('PROCESSING GLYPH', state.stack);\n        for (let i = 0; i < pLen; i++) {\n            console.log(i, gZone[i].x, gZone[i].y);\n        }\n    }\n\n    gZone.push(\n        new HPoint(0, 0),\n        new HPoint(Math.round(glyph.advanceWidth * xScale), 0)\n    );\n\n    exec(state);\n\n    // Removes the extra points.\n    gZone.length -= 2;\n\n    if (exports.DEBUG) {\n        console.log('FINISHED GLYPH', state.stack);\n        for (let i = 0; i < pLen; i++) {\n            console.log(i, gZone[i].x, gZone[i].y);\n        }\n    }\n};\n\n/*\n* Executes the program loaded in state.\n*/\nexec = function(state) {\n    let prog = state.prog;\n\n    if (!prog) return;\n\n    const pLen = prog.length;\n    let ins;\n\n    for (state.ip = 0; state.ip < pLen; state.ip++) {\n        if (exports.DEBUG) state.step++;\n        ins = instructionTable[prog[state.ip]];\n\n        if (!ins) {\n            throw new Error(\n                'unknown instruction: 0x' +\n                Number(prog[state.ip]).toString(16)\n            );\n        }\n\n        ins(state);\n\n        // very extensive debugging for each step\n        /*\n        if (exports.DEBUG) {\n            var da;\n            if (state.gZone) {\n                da = [];\n                for (let i = 0; i < state.gZone.length; i++)\n                {\n                    da.push(i + ' ' +\n                        state.gZone[i].x * 64 + ' ' +\n                        state.gZone[i].y * 64 + ' ' +\n                        (state.gZone[i].xTouched ? 'x' : '') +\n                        (state.gZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('GZ', da);\n            }\n\n            if (state.tZone) {\n                da = [];\n                for (let i = 0; i < state.tZone.length; i++) {\n                    da.push(i + ' ' +\n                        state.tZone[i].x * 64 + ' ' +\n                        state.tZone[i].y * 64 + ' ' +\n                        (state.tZone[i].xTouched ? 'x' : '') +\n                        (state.tZone[i].yTouched ? 'y' : '')\n                    );\n                }\n                console.log('TZ', da);\n            }\n\n            if (state.stack.length > 10) {\n                console.log(\n                    state.stack.length,\n                    '...', state.stack.slice(state.stack.length - 10)\n                );\n            } else {\n                console.log(state.stack.length, state.stack);\n            }\n        }\n        */\n    }\n};\n\n/*\n* Initializes the twilight zone.\n*\n* This is only done if a SZPx instruction\n* refers to the twilight zone.\n*/\nfunction initTZone(state)\n{\n    const tZone = state.tZone = new Array(state.gZone.length);\n\n    // no idea if this is actually correct...\n    for (let i = 0; i < tZone.length; i++)\n    {\n        tZone[i] = new HPoint(0, 0);\n    }\n}\n\n/*\n* Skips the instruction pointer ahead over an IF/ELSE block.\n* handleElse .. if true breaks on matching ELSE\n*/\nfunction skip(state, handleElse)\n{\n    const prog = state.prog;\n    let ip = state.ip;\n    let nesting = 1;\n    let ins;\n\n    do {\n        ins = prog[++ip];\n        if (ins === 0x58) // IF\n            nesting++;\n        else if (ins === 0x59) // EIF\n            nesting--;\n        else if (ins === 0x40) // NPUSHB\n            ip += prog[ip + 1] + 1;\n        else if (ins === 0x41) // NPUSHW\n            ip += 2 * prog[ip + 1] + 1;\n        else if (ins >= 0xB0 && ins <= 0xB7) // PUSHB\n            ip += ins - 0xB0 + 1;\n        else if (ins >= 0xB8 && ins <= 0xBF) // PUSHW\n            ip += (ins - 0xB8 + 1) * 2;\n        else if (handleElse && nesting === 1 && ins === 0x1B) // ELSE\n            break;\n    } while (nesting > 0);\n\n    state.ip = ip;\n}\n\n/*----------------------------------------------------------*\n*          And then a lot of instructions...                *\n*----------------------------------------------------------*/\n\n// SVTCA[a] Set freedom and projection Vectors To Coordinate Axis\n// 0x00-0x01\nfunction SVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SVTCA[' + v.axis + ']');\n\n    state.fv = state.pv = state.dpv = v;\n}\n\n// SPVTCA[a] Set Projection Vector to Coordinate Axis\n// 0x02-0x03\nfunction SPVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SPVTCA[' + v.axis + ']');\n\n    state.pv = state.dpv = v;\n}\n\n// SFVTCA[a] Set Freedom Vector to Coordinate Axis\n// 0x04-0x05\nfunction SFVTCA(v, state) {\n    if (exports.DEBUG) console.log(state.step, 'SFVTCA[' + v.axis + ']');\n\n    state.fv = v;\n}\n\n// SPVTL[a] Set Projection Vector To Line\n// 0x06-0x07\nfunction SPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.pv = state.dpv = getUnitVector(dx, dy);\n}\n\n// SFVTL[a] Set Freedom Vector To Line\n// 0x08-0x09\nfunction SFVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log('SFVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.fv = getUnitVector(dx, dy);\n}\n\n// SPVFS[] Set Projection Vector From Stack\n// 0x0A\nfunction SPVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.pv = state.dpv = getUnitVector(x, y);\n}\n\n// SFVFS[] Set Freedom Vector From Stack\n// 0x0B\nfunction SFVFS(state) {\n    const stack = state.stack;\n    const y = stack.pop();\n    const x = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SPVFS[]', y, x);\n\n    state.fv = getUnitVector(x, y);\n}\n\n// GPV[] Get Projection Vector\n// 0x0C\nfunction GPV(state) {\n    const stack = state.stack;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'GPV[]');\n\n    stack.push(pv.x * 0x4000);\n    stack.push(pv.y * 0x4000);\n}\n\n// GFV[] Get Freedom Vector\n// 0x0C\nfunction GFV(state) {\n    const stack = state.stack;\n    const fv = state.fv;\n\n    if (exports.DEBUG) console.log(state.step, 'GFV[]');\n\n    stack.push(fv.x * 0x4000);\n    stack.push(fv.y * 0x4000);\n}\n\n// SFVTPV[] Set Freedom Vector To Projection Vector\n// 0x0E\nfunction SFVTPV(state) {\n    state.fv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'SFVTPV[]');\n}\n\n// ISECT[] moves point p to the InterSECTion of two lines\n// 0x0F\nfunction ISECT(state)\n{\n    const stack = state.stack;\n    const pa0i = stack.pop();\n    const pa1i = stack.pop();\n    const pb0i = stack.pop();\n    const pb1i = stack.pop();\n    const pi = stack.pop();\n    const z0 = state.z0;\n    const z1 = state.z1;\n    const pa0 = z0[pa0i];\n    const pa1 = z0[pa1i];\n    const pb0 = z1[pb0i];\n    const pb1 = z1[pb1i];\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log('ISECT[], ', pa0i, pa1i, pb0i, pb1i, pi);\n\n    // math from\n    // en.wikipedia.org/wiki/Line%E2%80%93line_intersection#Given_two_points_on_each_line\n\n    const x1 = pa0.x;\n    const y1 = pa0.y;\n    const x2 = pa1.x;\n    const y2 = pa1.y;\n    const x3 = pb0.x;\n    const y3 = pb0.y;\n    const x4 = pb1.x;\n    const y4 = pb1.y;\n\n    const div = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n    const f1 = x1 * y2 - y1 * x2;\n    const f2 = x3 * y4 - y3 * x4;\n\n    p.x = (f1 * (x3 - x4) - f2 * (x1 - x2)) / div;\n    p.y = (f1 * (y3 - y4) - f2 * (y1 - y2)) / div;\n}\n\n// SRP0[] Set Reference Point 0\n// 0x10\nfunction SRP0(state) {\n    state.rp0 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP0[]', state.rp0);\n}\n\n// SRP1[] Set Reference Point 1\n// 0x11\nfunction SRP1(state) {\n    state.rp1 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP1[]', state.rp1);\n}\n\n// SRP1[] Set Reference Point 2\n// 0x12\nfunction SRP2(state) {\n    state.rp2 = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SRP2[]', state.rp2);\n}\n\n// SZP0[] Set Zone Pointer 0\n// 0x13\nfunction SZP0(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP0[]', n);\n\n    state.zp0 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP1[] Set Zone Pointer 1\n// 0x14\nfunction SZP1(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP1[]', n);\n\n    state.zp1 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z1 = state.tZone;\n            break;\n        case 1 :\n            state.z1 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZP2[] Set Zone Pointer 2\n// 0x15\nfunction SZP2(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZP2[]', n);\n\n    state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SZPS[] Set Zone PointerS\n// 0x16\nfunction SZPS(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SZPS[]', n);\n\n    state.zp0 = state.zp1 = state.zp2 = n;\n\n    switch (n) {\n        case 0:\n            if (!state.tZone) initTZone(state);\n            state.z0 = state.z1 = state.z2 = state.tZone;\n            break;\n        case 1 :\n            state.z0 = state.z1 = state.z2 = state.gZone;\n            break;\n        default :\n            throw new Error('Invalid zone pointer');\n    }\n}\n\n// SLOOP[] Set LOOP variable\n// 0x17\nfunction SLOOP(state) {\n    state.loop = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SLOOP[]', state.loop);\n}\n\n// RTG[] Round To Grid\n// 0x18\nfunction RTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTG[]');\n\n    state.round = roundToGrid;\n}\n\n// RTHG[] Round To Half Grid\n// 0x19\nfunction RTHG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTHG[]');\n\n    state.round = roundToHalfGrid;\n}\n\n// SMD[] Set Minimum Distance\n// 0x1A\nfunction SMD(state) {\n    const d = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SMD[]', d);\n\n    state.minDis = d / 0x40;\n}\n\n// ELSE[] ELSE clause\n// 0x1B\nfunction ELSE(state) {\n    // This instruction has been reached by executing a then branch\n    // so it just skips ahead until matching EIF.\n    //\n    // In case the IF was negative the IF[] instruction already\n    // skipped forward over the ELSE[]\n\n    if (exports.DEBUG) console.log(state.step, 'ELSE[]');\n\n    skip(state, false);\n}\n\n// JMPR[] JuMP Relative\n// 0x1C\nfunction JMPR(state) {\n    const o = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'JMPR[]', o);\n\n    // A jump by 1 would do nothing.\n    state.ip += o - 1;\n}\n\n// SCVTCI[] Set Control Value Table Cut-In\n// 0x1D\nfunction SCVTCI(state) {\n    const n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SCVTCI[]', n);\n\n    state.cvCutIn = n / 0x40;\n}\n\n// DUP[] DUPlicate top stack element\n// 0x20\nfunction DUP(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DUP[]');\n\n    stack.push(stack[stack.length - 1]);\n}\n\n// POP[] POP top stack element\n// 0x21\nfunction POP(state) {\n    if (exports.DEBUG) console.log(state.step, 'POP[]');\n\n    state.stack.pop();\n}\n\n// CLEAR[] CLEAR the stack\n// 0x22\nfunction CLEAR(state) {\n    if (exports.DEBUG) console.log(state.step, 'CLEAR[]');\n\n    state.stack.length = 0;\n}\n\n// SWAP[] SWAP the top two elements on the stack\n// 0x23\nfunction SWAP(state) {\n    const stack = state.stack;\n\n    const a = stack.pop();\n    const b = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SWAP[]');\n\n    stack.push(a);\n    stack.push(b);\n}\n\n// DEPTH[] DEPTH of the stack\n// 0x24\nfunction DEPTH(state) {\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.step, 'DEPTH[]');\n\n    stack.push(stack.length);\n}\n\n// LOOPCALL[] LOOPCALL function\n// 0x2A\nfunction LOOPCALL(state) {\n    const stack = state.stack;\n    const fn = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LOOPCALL[]', fn, c);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    for (let i = 0; i < c; i++) {\n        exec(state);\n\n        if (exports.DEBUG) console.log(\n            ++state.step,\n            i + 1 < c ? 'next loopcall' : 'done loopcall',\n            i\n        );\n    }\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n}\n\n// CALL[] CALL function\n// 0x2B\nfunction CALL(state) {\n    const fn = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CALL[]', fn);\n\n    // saves callers program\n    const cip = state.ip;\n    const cprog = state.prog;\n\n    state.prog = state.funcs[fn];\n\n    // executes the function\n    exec(state);\n\n    // restores the callers program\n    state.ip = cip;\n    state.prog = cprog;\n\n    if (exports.DEBUG) console.log(++state.step, 'returning from', fn);\n}\n\n// CINDEX[] Copy the INDEXed element to the top of the stack\n// 0x25\nfunction CINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CINDEX[]', k);\n\n    // In case of k == 1, it copies the last element after popping\n    // thus stack.length - k.\n    stack.push(stack[stack.length - k]);\n}\n\n// MINDEX[] Move the INDEXed element to the top of the stack\n// 0x26\nfunction MINDEX(state) {\n    const stack = state.stack;\n    const k = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MINDEX[]', k);\n\n    stack.push(stack.splice(stack.length - k, 1)[0]);\n}\n\n// FDEF[] Function DEFinition\n// 0x2C\nfunction FDEF(state) {\n    if (state.env !== 'fpgm') throw new Error('FDEF not allowed here');\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    const fn = stack.pop();\n    const ipBegin = ip;\n\n    if (exports.DEBUG) console.log(state.step, 'FDEF[]', fn);\n\n    while (prog[++ip] !== 0x2D);\n\n    state.ip = ip;\n    state.funcs[fn] = prog.slice(ipBegin + 1, ip);\n}\n\n// MDAP[a] Move Direct Absolute Point\n// 0x2E-0x2F\nfunction MDAP(round, state) {\n    const pi = state.stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    if (exports.DEBUG) console.log(state.step, 'MDAP[' + round + ']', pi);\n\n    let d = pv.distance(p, HPZero);\n\n    if (round) d = state.round(d);\n\n    fv.setRelative(p, HPZero, d, pv);\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// IUP[a] Interpolate Untouched Points through the outline\n// 0x30\nfunction IUP(v, state) {\n    const z2 = state.z2;\n    const pLen = z2.length - 2;\n    let cp;\n    let pp;\n    let np;\n\n    if (exports.DEBUG) console.log(state.step, 'IUP[' + v.axis + ']');\n\n    for (let i = 0; i < pLen; i++) {\n        cp = z2[i]; // current point\n\n        // if this point has been touched go on\n        if (v.touched(cp)) continue;\n\n        pp = cp.prevTouched(v);\n\n        // no point on the contour has been touched?\n        if (pp === cp) continue;\n\n        np = cp.nextTouched(v);\n\n        if (pp === np) {\n            // only one point on the contour has been touched\n            // so simply moves the point like that\n\n            v.setRelative(cp, cp, v.distance(pp, pp, false, true), v, true);\n        }\n\n        v.interpolate(cp, pp, np, v);\n    }\n}\n\n// SHP[] SHift Point using reference point\n// 0x32-0x33\nfunction SHP(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let loop = state.loop;\n    const z2 = state.z2;\n\n    while (loop--)\n    {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        const d = pv.distance(rp, rp, false, true);\n        fv.setRelative(p, p, d, pv);\n        fv.touch(p);\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ?\n                   'loop ' + (state.loop - loop) + ': ' :\n                   ''\n                ) +\n                'SHP[' + (a ? 'rp1' : 'rp2') + ']', pi\n            );\n        }\n    }\n\n    state.loop = 1;\n}\n\n// SHC[] SHift Contour using reference point\n// 0x36-0x37\nfunction SHC(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n    const ci = stack.pop();\n    const sp = state.z2[state.contours[ci]];\n    let p = sp;\n\n    if (exports.DEBUG) console.log(state.step, 'SHC[' + a + ']', ci);\n\n    const d = pv.distance(rp, rp, false, true);\n\n    do {\n        if (p !== rp) fv.setRelative(p, p, d, pv);\n        p = p.nextPointOnContour;\n    } while (p !== sp);\n}\n\n// SHZ[] SHift Zone using reference point\n// 0x36-0x37\nfunction SHZ(a, state) {\n    const stack = state.stack;\n    const rpi = a ? state.rp1 : state.rp2;\n    const rp = (a ? state.z0 : state.z1)[rpi];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SHZ[' + a + ']', e);\n\n    let z;\n    switch (e) {\n        case 0 : z = state.tZone; break;\n        case 1 : z = state.gZone; break;\n        default : throw new Error('Invalid zone');\n    }\n\n    let p;\n    const d = pv.distance(rp, rp, false, true);\n    const pLen = z.length - 2;\n    for (let i = 0; i < pLen; i++)\n    {\n        p = z[i];\n        fv.setRelative(p, p, d, pv);\n        //if (p !== rp) fv.setRelative(p, p, d, pv);\n    }\n}\n\n// SHPIX[] SHift point by a PIXel amount\n// 0x38\nfunction SHPIX(state) {\n    const stack = state.stack;\n    let loop = state.loop;\n    const fv = state.fv;\n    const d = stack.pop() / 0x40;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'SHPIX[]', pi, d\n            );\n        }\n\n        fv.setRelative(p, p, d);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// IP[] Interpolate Point\n// 0x39\nfunction IP(state) {\n    const stack = state.stack;\n    const rp1i = state.rp1;\n    const rp2i = state.rp2;\n    let loop = state.loop;\n    const rp1 = state.z0[rp1i];\n    const rp2 = state.z1[rp2i];\n    const fv = state.fv;\n    const pv = state.dpv;\n    const z2 = state.z2;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z2[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'IP[]', pi, rp1i, '<->', rp2i\n            );\n        }\n\n        fv.interpolate(p, rp1, rp2, pv);\n\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// MSIRP[a] Move Stack Indirect Relative Point\n// 0x3A-0x3B\nfunction MSIRP(a, state) {\n    const stack = state.stack;\n    const d = stack.pop() / 64;\n    const pi = stack.pop();\n    const p = state.z1[pi];\n    const rp0 = state.z0[state.rp0];\n    const fv = state.fv;\n    const pv = state.pv;\n\n    fv.setRelative(p, rp0, d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) console.log(state.step, 'MSIRP[' + a + ']', d, pi);\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (a) state.rp0 = pi;\n}\n\n// ALIGNRP[] Align to reference point.\n// 0x3C\nfunction ALIGNRP(state) {\n    const stack = state.stack;\n    const rp0i = state.rp0;\n    const rp0 = state.z0[rp0i];\n    let loop = state.loop;\n    const fv = state.fv;\n    const pv = state.pv;\n    const z1 = state.z1;\n\n    while (loop--) {\n        const pi = stack.pop();\n        const p = z1[pi];\n\n        if (exports.DEBUG) {\n            console.log(\n                state.step,\n                (state.loop > 1 ? 'loop ' + (state.loop - loop) + ': ' : '') +\n                'ALIGNRP[]', pi\n            );\n        }\n\n        fv.setRelative(p, rp0, 0, pv);\n        fv.touch(p);\n    }\n\n    state.loop = 1;\n}\n\n// RTG[] Round To Double Grid\n// 0x3D\nfunction RTDG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RTDG[]');\n\n    state.round = roundToDoubleGrid;\n}\n\n// MIAP[a] Move Indirect Absolute Point\n// 0x3E-0x3F\nfunction MIAP(round, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const pi = stack.pop();\n    const p = state.z0[pi];\n    const fv = state.fv;\n    const pv = state.pv;\n    let cv = state.cvt[n];\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            'MIAP[' + round + ']',\n            n, '(', cv, ')', pi\n        );\n    }\n\n    let d = pv.distance(p, HPZero);\n\n    if (round) {\n        if (Math.abs(d - cv) < state.cvCutIn) d = cv;\n\n        d = state.round(d);\n    }\n\n    fv.setRelative(p, HPZero, d, pv);\n\n    if (state.zp0 === 0) {\n        p.xo = p.x;\n        p.yo = p.y;\n    }\n\n    fv.touch(p);\n\n    state.rp0 = state.rp1 = pi;\n}\n\n// NPUSB[] PUSH N Bytes\n// 0x40\nfunction NPUSHB(state) {\n    const prog = state.prog;\n    let ip = state.ip;\n    const stack = state.stack;\n\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHB[]', n);\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// NPUSHW[] PUSH N Words\n// 0x41\nfunction NPUSHW(state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n    const n = prog[++ip];\n\n    if (exports.DEBUG) console.log(state.step, 'NPUSHW[]', n);\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// WS[] Write Store\n// 0x42\nfunction WS(state) {\n    const stack = state.stack;\n    let store = state.store;\n\n    if (!store) store = state.store = [];\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WS', v, l);\n\n    store[l] = v;\n}\n\n// RS[] Read Store\n// 0x43\nfunction RS(state) {\n    const stack = state.stack;\n    const store = state.store;\n\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RS', l);\n\n    const v = (store && store[l]) || 0;\n\n    stack.push(v);\n}\n\n// WCVTP[] Write Control Value Table in Pixel units\n// 0x44\nfunction WCVTP(state) {\n    const stack = state.stack;\n\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTP', v, l);\n\n    state.cvt[l] = v / 0x40;\n}\n\n// RCVT[] Read Control Value Table entry\n// 0x45\nfunction RCVT(state) {\n    const stack = state.stack;\n    const cvte = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'RCVT', cvte);\n\n    stack.push(state.cvt[cvte] * 0x40);\n}\n\n// GC[] Get Coordinate projected onto the projection vector\n// 0x46-0x47\nfunction GC(a, state) {\n    const stack = state.stack;\n    const pi = stack.pop();\n    const p = state.z2[pi];\n\n    if (exports.DEBUG) console.log(state.step, 'GC[' + a + ']', pi);\n\n    stack.push(state.dpv.distance(p, HPZero, a, false) * 0x40);\n}\n\n// MD[a] Measure Distance\n// 0x49-0x4A\nfunction MD(a, state) {\n    const stack = state.stack;\n    const pi2 = stack.pop();\n    const pi1 = stack.pop();\n    const p2 = state.z1[pi2];\n    const p1 = state.z0[pi1];\n    const d = state.dpv.distance(p1, p2, a, a);\n\n    if (exports.DEBUG) console.log(state.step, 'MD[' + a + ']', pi2, pi1, '->', d);\n\n    state.stack.push(Math.round(d * 64));\n}\n\n// MPPEM[] Measure Pixels Per EM\n// 0x4B\nfunction MPPEM(state) {\n    if (exports.DEBUG) console.log(state.step, 'MPPEM[]');\n    state.stack.push(state.ppem);\n}\n\n// FLIPON[] set the auto FLIP Boolean to ON\n// 0x4D\nfunction FLIPON(state) {\n    if (exports.DEBUG) console.log(state.step, 'FLIPON[]');\n    state.autoFlip = true;\n}\n\n// LT[] Less Than\n// 0x50\nfunction LT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LT[]', e2, e1);\n\n    stack.push(e1 < e2 ? 1 : 0);\n}\n\n// LTEQ[] Less Than or EQual\n// 0x53\nfunction LTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'LTEQ[]', e2, e1);\n\n    stack.push(e1 <= e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than\n// 0x52\nfunction GT(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GT[]', e2, e1);\n\n    stack.push(e1 > e2 ? 1 : 0);\n}\n\n// GTEQ[] Greater Than or EQual\n// 0x53\nfunction GTEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'GTEQ[]', e2, e1);\n\n    stack.push(e1 >= e2 ? 1 : 0);\n}\n\n// EQ[] EQual\n// 0x54\nfunction EQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EQ[]', e2, e1);\n\n    stack.push(e2 === e1 ? 1 : 0);\n}\n\n// NEQ[] Not EQual\n// 0x55\nfunction NEQ(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEQ[]', e2, e1);\n\n    stack.push(e2 !== e1 ? 1 : 0);\n}\n\n// ODD[] ODD\n// 0x56\nfunction ODD(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ODD[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 1 : 0);\n}\n\n// EVEN[] EVEN\n// 0x57\nfunction EVEN(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'EVEN[]', n);\n\n    stack.push(Math.trunc(n) % 2 ? 0 : 1);\n}\n\n// IF[] IF test\n// 0x58\nfunction IF(state) {\n    let test = state.stack.pop();\n    let ins;\n\n    if (exports.DEBUG) console.log(state.step, 'IF[]', test);\n\n    // if test is true it just continues\n    // if not the ip is skipped until matching ELSE or EIF\n    if (!test) {\n        skip(state, true);\n\n        if (exports.DEBUG) console.log(state.step, ins === 0x1B ? 'ELSE[]' : 'EIF[]');\n    }\n}\n\n// EIF[] End IF\n// 0x59\nfunction EIF(state) {\n    // this can be reached normally when\n    // executing an else branch.\n    // -> just ignore it\n\n    if (exports.DEBUG) console.log(state.step, 'EIF[]');\n}\n\n// AND[] logical AND\n// 0x5A\nfunction AND(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'AND[]', e2, e1);\n\n    stack.push(e2 && e1 ? 1 : 0);\n}\n\n// OR[] logical OR\n// 0x5B\nfunction OR(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'OR[]', e2, e1);\n\n    stack.push(e2 || e1 ? 1 : 0);\n}\n\n// NOT[] logical NOT\n// 0x5C\nfunction NOT(state) {\n    const stack = state.stack;\n    const e = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NOT[]', e);\n\n    stack.push(e ? 0 : 1);\n}\n\n// DELTAP1[] DELTA exception P1\n// DELTAP2[] DELTA exception P2\n// DELTAP3[] DELTA exception P3\n// 0x5D, 0x71, 0x72\nfunction DELTAP123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const fv = state.fv;\n    const pv = state.pv;\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n    const z0 = state.z0;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAP[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++) {\n        const pi = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n        if (exports.DEBUG) console.log(state.step, 'DELTAPFIX', pi, 'by', mag * ds);\n\n        const p = z0[pi];\n        fv.setRelative(p, p, mag * ds, pv);\n    }\n}\n\n// SDB[] Set Delta Base in the graphics state\n// 0x5E\nfunction SDB(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDB[]', n);\n\n    state.deltaBase = n;\n}\n\n// SDS[] Set Delta Shift in the graphics state\n// 0x5F\nfunction SDS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SDS[]', n);\n\n    state.deltaShift = Math.pow(0.5, n);\n}\n\n// ADD[] ADD\n// 0x60\nfunction ADD(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ADD[]', n2, n1);\n\n    stack.push(n1 + n2);\n}\n\n// SUB[] SUB\n// 0x61\nfunction SUB(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SUB[]', n2, n1);\n\n    stack.push(n1 - n2);\n}\n\n// DIV[] DIV\n// 0x62\nfunction DIV(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'DIV[]', n2, n1);\n\n    stack.push(n1 * 64 / n2);\n}\n\n// MUL[] MUL\n// 0x63\nfunction MUL(state) {\n    const stack = state.stack;\n    const n2 = stack.pop();\n    const n1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MUL[]', n2, n1);\n\n    stack.push(n1 * n2 / 64);\n}\n\n// ABS[] ABSolute value\n// 0x64\nfunction ABS(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ABS[]', n);\n\n    stack.push(Math.abs(n));\n}\n\n// NEG[] NEGate\n// 0x65\nfunction NEG(state) {\n    const stack = state.stack;\n    let n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'NEG[]', n);\n\n    stack.push(-n);\n}\n\n// FLOOR[] FLOOR\n// 0x66\nfunction FLOOR(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'FLOOR[]', n);\n\n    stack.push(Math.floor(n / 0x40) * 0x40);\n}\n\n// CEILING[] CEILING\n// 0x67\nfunction CEILING(state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'CEILING[]', n);\n\n    stack.push(Math.ceil(n / 0x40) * 0x40);\n}\n\n// ROUND[ab] ROUND value\n// 0x68-0x6B\nfunction ROUND(dt, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROUND[]');\n\n    stack.push(state.round(n / 0x40) * 0x40);\n}\n\n// WCVTF[] Write Control Value Table in Funits\n// 0x70\nfunction WCVTF(state) {\n    const stack = state.stack;\n    const v = stack.pop();\n    const l = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'WCVTF[]', v, l);\n\n    state.cvt[l] = v * state.ppem / state.font.unitsPerEm;\n}\n\n// DELTAC1[] DELTA exception C1\n// DELTAC2[] DELTA exception C2\n// DELTAC3[] DELTA exception C3\n// 0x73, 0x74, 0x75\nfunction DELTAC123(b, state) {\n    const stack = state.stack;\n    const n = stack.pop();\n    const ppem = state.ppem;\n    const base = state.deltaBase + (b - 1) * 16;\n    const ds = state.deltaShift;\n\n    if (exports.DEBUG) console.log(state.step, 'DELTAC[' + b + ']', n, stack);\n\n    for (let i = 0; i < n; i++) {\n        const c = stack.pop();\n        const arg = stack.pop();\n        const appem = base + ((arg & 0xF0) >> 4);\n        if (appem !== ppem) continue;\n\n        let mag = (arg & 0x0F) - 8;\n        if (mag >= 0) mag++;\n\n        const delta = mag * ds;\n\n        if (exports.DEBUG) console.log(state.step, 'DELTACFIX', c, 'by', delta);\n\n        state.cvt[c] += delta;\n    }\n}\n\n// SROUND[] Super ROUND\n// 0x76\nfunction SROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'SROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = 0.5;\n            break;\n        case 0x40:\n            period = 1;\n            break;\n        case 0x80:\n            period = 2;\n            break;\n        default:\n            throw new Error('invalid SROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default: throw new Error('invalid SROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// S45ROUND[] Super ROUND 45 degrees\n// 0x77\nfunction S45ROUND(state) {\n    let n = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'S45ROUND[]', n);\n\n    state.round = roundSuper;\n\n    let period;\n\n    switch (n & 0xC0) {\n        case 0x00:\n            period = Math.sqrt(2) / 2;\n            break;\n        case 0x40:\n            period = Math.sqrt(2);\n            break;\n        case 0x80:\n            period = 2 * Math.sqrt(2);\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    state.srPeriod = period;\n\n    switch (n & 0x30) {\n        case 0x00:\n            state.srPhase = 0;\n            break;\n        case 0x10:\n            state.srPhase = 0.25 * period;\n            break;\n        case 0x20:\n            state.srPhase = 0.5  * period;\n            break;\n        case 0x30:\n            state.srPhase = 0.75 * period;\n            break;\n        default:\n            throw new Error('invalid S45ROUND value');\n    }\n\n    n &= 0x0F;\n\n    if (n === 0) state.srThreshold = 0;\n    else state.srThreshold = (n / 8 - 0.5) * period;\n}\n\n// ROFF[] Round Off\n// 0x7A\nfunction ROFF(state) {\n    if (exports.DEBUG) console.log(state.step, 'ROFF[]');\n\n    state.round = roundOff;\n}\n\n// RUTG[] Round Up To Grid\n// 0x7C\nfunction RUTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RUTG[]');\n\n    state.round = roundUpToGrid;\n}\n\n// RDTG[] Round Down To Grid\n// 0x7D\nfunction RDTG(state) {\n    if (exports.DEBUG) console.log(state.step, 'RDTG[]');\n\n    state.round = roundDownToGrid;\n}\n\n// SCANCTRL[] SCAN conversion ConTRoL\n// 0x85\nfunction SCANCTRL(state) {\n    const n = state.stack.pop();\n\n    // ignored by opentype.js\n\n    if (exports.DEBUG) console.log(state.step, 'SCANCTRL[]', n);\n}\n\n// SDPVTL[a] Set Dual Projection Vector To Line\n// 0x86-0x87\nfunction SDPVTL(a, state) {\n    const stack = state.stack;\n    const p2i = stack.pop();\n    const p1i = stack.pop();\n    const p2 = state.z2[p2i];\n    const p1 = state.z1[p1i];\n\n    if (exports.DEBUG) console.log(state.step, 'SDPVTL[' + a + ']', p2i, p1i);\n\n    let dx;\n    let dy;\n\n    if (!a) {\n        dx = p1.x - p2.x;\n        dy = p1.y - p2.y;\n    } else {\n        dx = p2.y - p1.y;\n        dy = p1.x - p2.x;\n    }\n\n    state.dpv = getUnitVector(dx, dy);\n}\n\n// GETINFO[] GET INFOrmation\n// 0x88\nfunction GETINFO(state) {\n    const stack = state.stack;\n    const sel = stack.pop();\n    let r = 0;\n\n    if (exports.DEBUG) console.log(state.step, 'GETINFO[]', sel);\n\n    // v35 as in no subpixel hinting\n    if (sel & 0x01) r = 35;\n\n    // TODO rotation and stretch currently not supported\n    // and thus those GETINFO are always 0.\n\n    // opentype.js is always gray scaling\n    if (sel & 0x20) r |= 0x1000;\n\n    stack.push(r);\n}\n\n// ROLL[] ROLL the top three stack elements\n// 0x8A\nfunction ROLL(state) {\n    const stack = state.stack;\n    const a = stack.pop();\n    const b = stack.pop();\n    const c = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'ROLL[]');\n\n    stack.push(b);\n    stack.push(a);\n    stack.push(c);\n}\n\n// MAX[] MAXimum of top two stack elements\n// 0x8B\nfunction MAX(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MAX[]', e2, e1);\n\n    stack.push(Math.max(e1, e2));\n}\n\n// MIN[] MINimum of top two stack elements\n// 0x8C\nfunction MIN(state) {\n    const stack = state.stack;\n    const e2 = stack.pop();\n    const e1 = stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'MIN[]', e2, e1);\n\n    stack.push(Math.min(e1, e2));\n}\n\n// SCANTYPE[] SCANTYPE\n// 0x8D\nfunction SCANTYPE(state) {\n    const n = state.stack.pop();\n    // ignored by opentype.js\n    if (exports.DEBUG) console.log(state.step, 'SCANTYPE[]', n);\n}\n\n// INSTCTRL[] INSTCTRL\n// 0x8D\nfunction INSTCTRL(state) {\n    const s = state.stack.pop();\n    let v = state.stack.pop();\n\n    if (exports.DEBUG) console.log(state.step, 'INSTCTRL[]', s, v);\n\n    switch (s) {\n        case 1 : state.inhibitGridFit = !!v; return;\n        case 2 : state.ignoreCvt = !!v; return;\n        default: throw new Error('invalid INSTCTRL[] selector');\n    }\n}\n\n// PUSHB[abc] PUSH Bytes\n// 0xB0-0xB7\nfunction PUSHB(n, state) {\n    const stack = state.stack;\n    const prog = state.prog;\n    let ip = state.ip;\n\n    if (exports.DEBUG) console.log(state.step, 'PUSHB[' + n + ']');\n\n    for (let i = 0; i < n; i++) stack.push(prog[++ip]);\n\n    state.ip = ip;\n}\n\n// PUSHW[abc] PUSH Words\n// 0xB8-0xBF\nfunction PUSHW(n, state) {\n    let ip = state.ip;\n    const prog = state.prog;\n    const stack = state.stack;\n\n    if (exports.DEBUG) console.log(state.ip, 'PUSHW[' + n + ']');\n\n    for (let i = 0; i < n; i++) {\n        let w = (prog[++ip] << 8) | prog[++ip];\n        if (w & 0x8000) w = -((w ^ 0xffff) + 1);\n        stack.push(w);\n    }\n\n    state.ip = ip;\n}\n\n// MDRP[abcde] Move Direct Relative Point\n// 0xD0-0xEF\n// (if indirect is 0)\n//\n// and\n//\n// MIRP[abcde] Move Indirect Relative Point\n// 0xE0-0xFF\n// (if indirect is 1)\n\nfunction MDRP_MIRP(indirect, setRp0, keepD, ro, dt, state) {\n    const stack = state.stack;\n    const cvte = indirect && stack.pop();\n    const pi = stack.pop();\n    const rp0i = state.rp0;\n    const rp = state.z0[rp0i];\n    const p = state.z1[pi];\n\n    const md = state.minDis;\n    const fv = state.fv;\n    const pv = state.dpv;\n    let od; // original distance\n    let d; // moving distance\n    let sign; // sign of distance\n    let cv;\n\n    d = od = pv.distance(p, rp, true, true);\n    sign = d >= 0 ? 1 : -1; // Math.sign would be 0 in case of 0\n\n    // TODO consider autoFlip\n    d = Math.abs(d);\n\n    if (indirect) {\n        cv = state.cvt[cvte];\n\n        if (ro && Math.abs(d - cv) < state.cvCutIn) d = cv;\n    }\n\n    if (keepD && d < md) d = md;\n\n    if (ro) d = state.round(d);\n\n    fv.setRelative(p, rp, sign * d, pv);\n    fv.touch(p);\n\n    if (exports.DEBUG) {\n        console.log(\n            state.step,\n            (indirect ? 'MIRP[' : 'MDRP[') +\n            (setRp0 ? 'M' : 'm') +\n            (keepD ? '>' : '_') +\n            (ro ? 'R' : '_') +\n            (dt === 0 ? 'Gr' : (dt === 1 ? 'Bl' : (dt === 2 ? 'Wh' : ''))) +\n            ']',\n            indirect ?\n                cvte + '(' + state.cvt[cvte] + ',' +  cv + ')' :\n                '',\n            pi,\n            '(d =', od, '->', sign * d, ')'\n        );\n    }\n\n    state.rp1 = state.rp0;\n    state.rp2 = pi;\n    if (setRp0) state.rp0 = pi;\n}\n\n/*\n* The instruction table.\n*/\ninstructionTable = [\n    /* 0x00 */ SVTCA.bind(undefined, yUnitVector),\n    /* 0x01 */ SVTCA.bind(undefined, xUnitVector),\n    /* 0x02 */ SPVTCA.bind(undefined, yUnitVector),\n    /* 0x03 */ SPVTCA.bind(undefined, xUnitVector),\n    /* 0x04 */ SFVTCA.bind(undefined, yUnitVector),\n    /* 0x05 */ SFVTCA.bind(undefined, xUnitVector),\n    /* 0x06 */ SPVTL.bind(undefined, 0),\n    /* 0x07 */ SPVTL.bind(undefined, 1),\n    /* 0x08 */ SFVTL.bind(undefined, 0),\n    /* 0x09 */ SFVTL.bind(undefined, 1),\n    /* 0x0A */ SPVFS,\n    /* 0x0B */ SFVFS,\n    /* 0x0C */ GPV,\n    /* 0x0D */ GFV,\n    /* 0x0E */ SFVTPV,\n    /* 0x0F */ ISECT,\n    /* 0x10 */ SRP0,\n    /* 0x11 */ SRP1,\n    /* 0x12 */ SRP2,\n    /* 0x13 */ SZP0,\n    /* 0x14 */ SZP1,\n    /* 0x15 */ SZP2,\n    /* 0x16 */ SZPS,\n    /* 0x17 */ SLOOP,\n    /* 0x18 */ RTG,\n    /* 0x19 */ RTHG,\n    /* 0x1A */ SMD,\n    /* 0x1B */ ELSE,\n    /* 0x1C */ JMPR,\n    /* 0x1D */ SCVTCI,\n    /* 0x1E */ undefined,   // TODO SSWCI\n    /* 0x1F */ undefined,   // TODO SSW\n    /* 0x20 */ DUP,\n    /* 0x21 */ POP,\n    /* 0x22 */ CLEAR,\n    /* 0x23 */ SWAP,\n    /* 0x24 */ DEPTH,\n    /* 0x25 */ CINDEX,\n    /* 0x26 */ MINDEX,\n    /* 0x27 */ undefined,   // TODO ALIGNPTS\n    /* 0x28 */ undefined,\n    /* 0x29 */ undefined,   // TODO UTP\n    /* 0x2A */ LOOPCALL,\n    /* 0x2B */ CALL,\n    /* 0x2C */ FDEF,\n    /* 0x2D */ undefined,   // ENDF (eaten by FDEF)\n    /* 0x2E */ MDAP.bind(undefined, 0),\n    /* 0x2F */ MDAP.bind(undefined, 1),\n    /* 0x30 */ IUP.bind(undefined, yUnitVector),\n    /* 0x31 */ IUP.bind(undefined, xUnitVector),\n    /* 0x32 */ SHP.bind(undefined, 0),\n    /* 0x33 */ SHP.bind(undefined, 1),\n    /* 0x34 */ SHC.bind(undefined, 0),\n    /* 0x35 */ SHC.bind(undefined, 1),\n    /* 0x36 */ SHZ.bind(undefined, 0),\n    /* 0x37 */ SHZ.bind(undefined, 1),\n    /* 0x38 */ SHPIX,\n    /* 0x39 */ IP,\n    /* 0x3A */ MSIRP.bind(undefined, 0),\n    /* 0x3B */ MSIRP.bind(undefined, 1),\n    /* 0x3C */ ALIGNRP,\n    /* 0x3D */ RTDG,\n    /* 0x3E */ MIAP.bind(undefined, 0),\n    /* 0x3F */ MIAP.bind(undefined, 1),\n    /* 0x40 */ NPUSHB,\n    /* 0x41 */ NPUSHW,\n    /* 0x42 */ WS,\n    /* 0x43 */ RS,\n    /* 0x44 */ WCVTP,\n    /* 0x45 */ RCVT,\n    /* 0x46 */ GC.bind(undefined, 0),\n    /* 0x47 */ GC.bind(undefined, 1),\n    /* 0x48 */ undefined,   // TODO SCFS\n    /* 0x49 */ MD.bind(undefined, 0),\n    /* 0x4A */ MD.bind(undefined, 1),\n    /* 0x4B */ MPPEM,\n    /* 0x4C */ undefined,   // TODO MPS\n    /* 0x4D */ FLIPON,\n    /* 0x4E */ undefined,   // TODO FLIPOFF\n    /* 0x4F */ undefined,   // TODO DEBUG\n    /* 0x50 */ LT,\n    /* 0x51 */ LTEQ,\n    /* 0x52 */ GT,\n    /* 0x53 */ GTEQ,\n    /* 0x54 */ EQ,\n    /* 0x55 */ NEQ,\n    /* 0x56 */ ODD,\n    /* 0x57 */ EVEN,\n    /* 0x58 */ IF,\n    /* 0x59 */ EIF,\n    /* 0x5A */ AND,\n    /* 0x5B */ OR,\n    /* 0x5C */ NOT,\n    /* 0x5D */ DELTAP123.bind(undefined, 1),\n    /* 0x5E */ SDB,\n    /* 0x5F */ SDS,\n    /* 0x60 */ ADD,\n    /* 0x61 */ SUB,\n    /* 0x62 */ DIV,\n    /* 0x63 */ MUL,\n    /* 0x64 */ ABS,\n    /* 0x65 */ NEG,\n    /* 0x66 */ FLOOR,\n    /* 0x67 */ CEILING,\n    /* 0x68 */ ROUND.bind(undefined, 0),\n    /* 0x69 */ ROUND.bind(undefined, 1),\n    /* 0x6A */ ROUND.bind(undefined, 2),\n    /* 0x6B */ ROUND.bind(undefined, 3),\n    /* 0x6C */ undefined,   // TODO NROUND[ab]\n    /* 0x6D */ undefined,   // TODO NROUND[ab]\n    /* 0x6E */ undefined,   // TODO NROUND[ab]\n    /* 0x6F */ undefined,   // TODO NROUND[ab]\n    /* 0x70 */ WCVTF,\n    /* 0x71 */ DELTAP123.bind(undefined, 2),\n    /* 0x72 */ DELTAP123.bind(undefined, 3),\n    /* 0x73 */ DELTAC123.bind(undefined, 1),\n    /* 0x74 */ DELTAC123.bind(undefined, 2),\n    /* 0x75 */ DELTAC123.bind(undefined, 3),\n    /* 0x76 */ SROUND,\n    /* 0x77 */ S45ROUND,\n    /* 0x78 */ undefined,   // TODO JROT[]\n    /* 0x79 */ undefined,   // TODO JROF[]\n    /* 0x7A */ ROFF,\n    /* 0x7B */ undefined,\n    /* 0x7C */ RUTG,\n    /* 0x7D */ RDTG,\n    /* 0x7E */ POP, // actually SANGW, supposed to do only a pop though\n    /* 0x7F */ POP, // actually AA, supposed to do only a pop though\n    /* 0x80 */ undefined,   // TODO FLIPPT\n    /* 0x81 */ undefined,   // TODO FLIPRGON\n    /* 0x82 */ undefined,   // TODO FLIPRGOFF\n    /* 0x83 */ undefined,\n    /* 0x84 */ undefined,\n    /* 0x85 */ SCANCTRL,\n    /* 0x86 */ SDPVTL.bind(undefined, 0),\n    /* 0x87 */ SDPVTL.bind(undefined, 1),\n    /* 0x88 */ GETINFO,\n    /* 0x89 */ undefined,   // TODO IDEF\n    /* 0x8A */ ROLL,\n    /* 0x8B */ MAX,\n    /* 0x8C */ MIN,\n    /* 0x8D */ SCANTYPE,\n    /* 0x8E */ INSTCTRL,\n    /* 0x8F */ undefined,\n    /* 0x90 */ undefined,\n    /* 0x91 */ undefined,\n    /* 0x92 */ undefined,\n    /* 0x93 */ undefined,\n    /* 0x94 */ undefined,\n    /* 0x95 */ undefined,\n    /* 0x96 */ undefined,\n    /* 0x97 */ undefined,\n    /* 0x98 */ undefined,\n    /* 0x99 */ undefined,\n    /* 0x9A */ undefined,\n    /* 0x9B */ undefined,\n    /* 0x9C */ undefined,\n    /* 0x9D */ undefined,\n    /* 0x9E */ undefined,\n    /* 0x9F */ undefined,\n    /* 0xA0 */ undefined,\n    /* 0xA1 */ undefined,\n    /* 0xA2 */ undefined,\n    /* 0xA3 */ undefined,\n    /* 0xA4 */ undefined,\n    /* 0xA5 */ undefined,\n    /* 0xA6 */ undefined,\n    /* 0xA7 */ undefined,\n    /* 0xA8 */ undefined,\n    /* 0xA9 */ undefined,\n    /* 0xAA */ undefined,\n    /* 0xAB */ undefined,\n    /* 0xAC */ undefined,\n    /* 0xAD */ undefined,\n    /* 0xAE */ undefined,\n    /* 0xAF */ undefined,\n    /* 0xB0 */ PUSHB.bind(undefined, 1),\n    /* 0xB1 */ PUSHB.bind(undefined, 2),\n    /* 0xB2 */ PUSHB.bind(undefined, 3),\n    /* 0xB3 */ PUSHB.bind(undefined, 4),\n    /* 0xB4 */ PUSHB.bind(undefined, 5),\n    /* 0xB5 */ PUSHB.bind(undefined, 6),\n    /* 0xB6 */ PUSHB.bind(undefined, 7),\n    /* 0xB7 */ PUSHB.bind(undefined, 8),\n    /* 0xB8 */ PUSHW.bind(undefined, 1),\n    /* 0xB9 */ PUSHW.bind(undefined, 2),\n    /* 0xBA */ PUSHW.bind(undefined, 3),\n    /* 0xBB */ PUSHW.bind(undefined, 4),\n    /* 0xBC */ PUSHW.bind(undefined, 5),\n    /* 0xBD */ PUSHW.bind(undefined, 6),\n    /* 0xBE */ PUSHW.bind(undefined, 7),\n    /* 0xBF */ PUSHW.bind(undefined, 8),\n    /* 0xC0 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 0),\n    /* 0xC1 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 1),\n    /* 0xC2 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 2),\n    /* 0xC3 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 0, 3),\n    /* 0xC4 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 0),\n    /* 0xC5 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 1),\n    /* 0xC6 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 2),\n    /* 0xC7 */ MDRP_MIRP.bind(undefined, 0, 0, 0, 1, 3),\n    /* 0xC8 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 0),\n    /* 0xC9 */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 1),\n    /* 0xCA */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 2),\n    /* 0xCB */ MDRP_MIRP.bind(undefined, 0, 0, 1, 0, 3),\n    /* 0xCC */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 0),\n    /* 0xCD */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 1),\n    /* 0xCE */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 2),\n    /* 0xCF */ MDRP_MIRP.bind(undefined, 0, 0, 1, 1, 3),\n    /* 0xD0 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 0),\n    /* 0xD1 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 1),\n    /* 0xD2 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 2),\n    /* 0xD3 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 0, 3),\n    /* 0xD4 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 0),\n    /* 0xD5 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 1),\n    /* 0xD6 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 2),\n    /* 0xD7 */ MDRP_MIRP.bind(undefined, 0, 1, 0, 1, 3),\n    /* 0xD8 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 0),\n    /* 0xD9 */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 1),\n    /* 0xDA */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 2),\n    /* 0xDB */ MDRP_MIRP.bind(undefined, 0, 1, 1, 0, 3),\n    /* 0xDC */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 0),\n    /* 0xDD */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 1),\n    /* 0xDE */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 2),\n    /* 0xDF */ MDRP_MIRP.bind(undefined, 0, 1, 1, 1, 3),\n    /* 0xE0 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 0),\n    /* 0xE1 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 1),\n    /* 0xE2 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 2),\n    /* 0xE3 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 0, 3),\n    /* 0xE4 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 0),\n    /* 0xE5 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 1),\n    /* 0xE6 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 2),\n    /* 0xE7 */ MDRP_MIRP.bind(undefined, 1, 0, 0, 1, 3),\n    /* 0xE8 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 0),\n    /* 0xE9 */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 1),\n    /* 0xEA */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 2),\n    /* 0xEB */ MDRP_MIRP.bind(undefined, 1, 0, 1, 0, 3),\n    /* 0xEC */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 0),\n    /* 0xED */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 1),\n    /* 0xEE */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 2),\n    /* 0xEF */ MDRP_MIRP.bind(undefined, 1, 0, 1, 1, 3),\n    /* 0xF0 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 0),\n    /* 0xF1 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 1),\n    /* 0xF2 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 2),\n    /* 0xF3 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 0, 3),\n    /* 0xF4 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 0),\n    /* 0xF5 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 1),\n    /* 0xF6 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 2),\n    /* 0xF7 */ MDRP_MIRP.bind(undefined, 1, 1, 0, 1, 3),\n    /* 0xF8 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 0),\n    /* 0xF9 */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 1),\n    /* 0xFA */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 2),\n    /* 0xFB */ MDRP_MIRP.bind(undefined, 1, 1, 1, 0, 3),\n    /* 0xFC */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 0),\n    /* 0xFD */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 1),\n    /* 0xFE */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 2),\n    /* 0xFF */ MDRP_MIRP.bind(undefined, 1, 1, 1, 1, 3)\n];\n\nexport default Hinting;\n\n/*****************************\n  Mathematical Considerations\n******************************\n\nfv ... refers to freedom vector\npv ... refers to projection vector\nrp ... refers to reference point\np  ... refers to to point being operated on\nd  ... refers to distance\n\nSETRELATIVE:\n============\n\ncase freedom vector == x-axis:\n------------------------------\n\n                        (pv)\n                     .-'\n              rpd .-'\n               .-*\n          d .-'90°'\n         .-'       '\n      .-'           '\n   *-'               ' b\n  rp                  '\n                       '\n                        '\n            p *----------*-------------- (fv)\n                          pm\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b\n\n   y - rpdy = pvns * (x- rpdx)\n\n   y = p.y\n\n   x = rpdx + ( p.y - rpdy ) / pvns\n\n\ncase freedom vector == y-axis:\n------------------------------\n\n    * pm\n    |\\\n    | \\\n    |  \\\n    |   \\\n    |    \\\n    |     \\\n    |      \\\n    |       \\\n    |        \\\n    |         \\ b\n    |          \\\n    |           \\\n    |            \\    .-' (pv)\n    |         90° \\.-'\n    |           .-'* rpd\n    |        .-'\n    *     *-'  d\n    p     rp\n\n  rpdx = rpx + d * pv.x\n  rpdy = rpy + d * pv.y\n\n  equation of line b:\n           pvns ... normal slope to pv\n\n   y - rpdy = pvns * (x - rpdx)\n\n   x = p.x\n\n   y = rpdy +  pvns * (p.x - rpdx)\n\n\n\ngeneric case:\n-------------\n\n\n                              .'(fv)\n                            .'\n                          .* pm\n                        .' !\n                      .'    .\n                    .'      !\n                  .'         . b\n                .'           !\n               *              .\n              p               !\n                         90°   .    ... (pv)\n                           ...-*-'''\n                  ...---'''    rpd\n         ...---'''   d\n   *--'''\n  rp\n\n    rpdx = rpx + d * pv.x\n    rpdy = rpy + d * pv.y\n\n equation of line b:\n    pvns... normal slope to pv\n\n    y - rpdy = pvns * (x - rpdx)\n\n equation of freedom vector line:\n    fvs ... slope of freedom vector (=fy/fx)\n\n    y - py = fvs * (x - px)\n\n\n  on pm both equations are true for same x/y\n\n    y - rpdy = pvns * (x - rpdx)\n\n    y - py = fvs * (x - px)\n\n  form to y and set equal:\n\n    pvns * (x - rpdx) + rpdy = fvs * (x - px) + py\n\n  expand:\n\n    pvns * x - pvns * rpdx + rpdy = fvs * x - fvs * px + py\n\n  switch:\n\n    fvs * x - fvs * px + py = pvns * x - pvns * rpdx + rpdy\n\n  solve for x:\n\n    fvs * x - pvns * x = fvs * px - pvns * rpdx - py + rpdy\n\n\n\n          fvs * px - pvns * rpdx + rpdy - py\n    x =  -----------------------------------\n                 fvs - pvns\n\n  and:\n\n    y = fvs * (x - px) + py\n\n\n\nINTERPOLATE:\n============\n\nExamples of point interpolation.\n\nThe weight of the movement of the reference point gets bigger\nthe further the other reference point is away, thus the safest\noption (that is avoiding 0/0 divisions) is to weight the\noriginal distance of the other point by the sum of both distances.\n\nIf the sum of both distances is 0, then move the point by the\narithmetic average of the movement of both reference points.\n\n\n\n\n           (+6)\n    rp1o *---->*rp1\n         .     .                          (+12)\n         .     .                  rp2o *---------->* rp2\n         .     .                       .           .\n         .     .                       .           .\n         .    10          20           .           .\n         |.........|...................|           .\n               .   .                               .\n               .   . (+8)                          .\n                po *------>*p                      .\n               .           .                       .\n               .    12     .          24           .\n               |...........|.......................|\n                                  36\n\n\n-------\n\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .                      (-10)\n         .         .              rp2 *<---------* rpo2\n         .         .                   .         .\n         .         .                   .         .\n         .    10   .          30       .         .\n         |.........|.............................|\n                   .                   .\n                   . (+5)              .\n                po *--->* p            .\n                   .    .              .\n                   .    .   20         .\n                   |....|..............|\n                     5        15\n\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .\n    rp2o *-------->*rp2\n\n\n                               (+10)\n                          po *-------->* p\n\n-------\n\n\n           (+10)\n    rp1o *-------->*rp1\n         .         .\n         .         .(+30)\n    rp2o *---------------------------->*rp2\n\n\n                                        (+25)\n                          po *----------------------->* p\n\n\n\nvim: set ts=4 sw=4 expandtab:\n*****/\n","/**\n * Converts a string into a list of tokens.\n */\n\n/**\n * Create a new token\n * @param {string} char a single char\n */\nfunction Token(char) {\n    this.char = char;\n    this.state = {};\n    this.activeState = null;\n}\n\n/**\n * Create a new context range\n * @param {number} startIndex range start index\n * @param {number} endOffset range end index offset\n * @param {string} contextName owner context name\n */\nfunction ContextRange(startIndex, endOffset, contextName) {\n    this.contextName = contextName;\n    this.startIndex = startIndex;\n    this.endOffset = endOffset;\n}\n\n/**\n * Check context start and end\n * @param {string} contextName a unique context name\n * @param {function} checkStart a predicate function the indicates a context's start\n * @param {function} checkEnd a predicate function the indicates a context's end\n */\nfunction ContextChecker(contextName, checkStart, checkEnd) {\n    this.contextName = contextName;\n    this.openRange = null;\n    this.ranges = [];\n    this.checkStart = checkStart;\n    this.checkEnd = checkEnd;\n}\n\n/**\n * @typedef ContextParams\n * @type Object\n * @property {array} context context items\n * @property {number} currentIndex current item index\n */\n\n/**\n * Create a context params\n * @param {array} context a list of items\n * @param {number} currentIndex current item index\n */\nfunction ContextParams(context, currentIndex) {\n    this.context = context;\n    this.index = currentIndex;\n    this.length = context.length;\n    this.current = context[currentIndex];\n    this.backtrack = context.slice(0, currentIndex);\n    this.lookahead = context.slice(currentIndex + 1);\n}\n\n/**\n * Create an event instance\n * @param {string} eventId event unique id\n */\nfunction Event(eventId) {\n    this.eventId = eventId;\n    this.subscribers = [];\n}\n\n/**\n * Initialize a core events and auto subscribe required event handlers\n * @param {any} events an object that enlists core events handlers\n */\nfunction initializeCoreEvents(events) {\n    const coreEvents = [\n        'start', 'end', 'next', 'newToken', 'contextStart',\n        'contextEnd', 'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD', 'updateContextsRanges'\n    ];\n\n    coreEvents.forEach(eventId => {\n        Object.defineProperty(this.events, eventId, {\n            value: new Event(eventId)\n        });\n    });\n\n    if (!!events) {\n        coreEvents.forEach(eventId => {\n            const event = events[eventId];\n            if (typeof event === 'function') {\n                this.events[eventId].subscribe(event);\n            }\n        });\n    }\n    const requiresContextUpdate = [\n        'insertToken', 'removeToken', 'removeRange',\n        'replaceToken', 'replaceRange', 'composeRUD'\n    ];\n    requiresContextUpdate.forEach(eventId => {\n        this.events[eventId].subscribe(\n            this.updateContextsRanges\n        );\n    });\n}\n\n/**\n * Converts a string into a list of tokens\n * @param {any} events tokenizer core events\n */\nfunction Tokenizer(events) {\n    this.tokens = [];\n    this.registeredContexts = {};\n    this.contextCheckers = [];\n    this.events = {};\n    this.registeredModifiers = [];\n\n    initializeCoreEvents.call(this, events);\n}\n\n/**\n * Sets the state of a token, usually called by a state modifier.\n * @param {string} key state item key\n * @param {any} value state item value\n */\nToken.prototype.setState = function(key, value) {\n    this.state[key] = value;\n    this.activeState = { key, value: this.state[key] };\n    return this.activeState;\n};\n\nToken.prototype.getState = function (stateId) {\n    return this.state[stateId] || null;\n};\n\n/**\n * Checks if an index exists in the tokens list.\n * @param {number} index token index\n */\nTokenizer.prototype.inboundIndex = function(index) {\n    return index >= 0 && index < this.tokens.length;\n};\n\n/**\n * Compose and apply a list of operations (replace, update, delete)\n * @param {array} RUDs replace, update and delete operations\n * TODO: Perf. Optimization (lengthBefore === lengthAfter ? dispatch once)\n */\nTokenizer.prototype.composeRUD = function (RUDs) {\n    const silent = true;\n    const state = RUDs.map(RUD => (\n        this[RUD[0]].apply(this, RUD.slice(1).concat(silent))\n    ));\n    const hasFAILObject = obj => (\n        typeof obj === 'object' &&\n        obj.hasOwnProperty('FAIL')\n    );\n    if (state.every(hasFAILObject)) {\n        return {\n            FAIL: `composeRUD: one or more operations hasn't completed successfully`,\n            report: state.filter(hasFAILObject)\n        };\n    }\n    this.dispatch('composeRUD', [state.filter(op => !hasFAILObject(op))]);\n};\n\n/**\n * Replace a range of tokens with a list of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {token} tokens a list of tokens to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceRange = function (startIndex, offset, tokens, silent) {\n    offset = offset !== null ? offset : this.tokens.length;\n    const isTokenType = tokens.every(token => token instanceof Token);\n    if (!isNaN(startIndex) && this.inboundIndex(startIndex) && isTokenType) {\n        const replaced = this.tokens.splice.apply(\n            this.tokens, [startIndex, offset].concat(tokens)\n        );\n        if (!silent) this.dispatch('replaceToken', [startIndex, offset, tokens]);\n        return [replaced, tokens];\n    } else {\n        return { FAIL: 'replaceRange: invalid tokens or startIndex.' };\n    }\n};\n\n/**\n * Replace a token with another token\n * @param {number} index token index\n * @param {token} token a token to replace\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.replaceToken = function (index, token, silent) {\n    if (!isNaN(index) && this.inboundIndex(index) && token instanceof Token) {\n        const replaced = this.tokens.splice(index, 1, token);\n        if (!silent) this.dispatch('replaceToken', [index, token]);\n        return [replaced[0], token];\n    } else {\n        return { FAIL: 'replaceToken: invalid token or index.' };\n    }\n};\n\n/**\n * Removes a range of tokens\n * @param {number} startIndex range start index\n * @param {number} offset range offset\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeRange = function(startIndex, offset, silent) {\n    offset = !isNaN(offset) ? offset : this.tokens.length;\n    const tokens = this.tokens.splice(startIndex, offset);\n    if (!silent) this.dispatch('removeRange', [tokens, startIndex, offset]);\n    return tokens;\n};\n\n/**\n * Remove a token at a certain index\n * @param {number} index token index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.removeToken = function(index, silent) {\n    if (!isNaN(index) && this.inboundIndex(index)) {\n        const token = this.tokens.splice(index, 1);\n        if (!silent) this.dispatch('removeToken', [token, index]);\n        return token;\n    } else {\n        return { FAIL: 'removeToken: invalid token index.' };\n    }\n};\n\n/**\n * Insert a list of tokens at a certain index\n * @param {array} tokens a list of tokens to insert\n * @param {number} index insert the list of tokens at index\n * @param {boolean} silent dispatch events and update context ranges\n */\nTokenizer.prototype.insertToken = function (tokens, index, silent) {\n    const tokenType = tokens.every(\n        token => token instanceof Token\n    );\n    if (tokenType) {\n        this.tokens.splice.apply(\n            this.tokens, [index, 0].concat(tokens)\n        );\n        if (!silent) this.dispatch('insertToken', [tokens, index]);\n        return tokens;\n    } else {\n        return { FAIL: 'insertToken: invalid token(s).' };\n    }\n};\n\n/**\n * A state modifier that is called on 'newToken' event\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a function to update token state\n */\nTokenizer.prototype.registerModifier = function(modifierId, condition, modifier) {\n    this.events.newToken.subscribe(function(token, contextParams) {\n        const conditionParams = [token, contextParams];\n        const canApplyModifier = (\n            condition === null ||\n            condition.apply(this, conditionParams) === true\n        );\n        const modifierParams = [token, contextParams];\n        if (canApplyModifier) {\n            let newStateValue = modifier.apply(this, modifierParams);\n            token.setState(modifierId, newStateValue);\n        }\n    });\n    this.registeredModifiers.push(modifierId);\n};\n\n/**\n * Subscribe a handler to an event\n * @param {function} eventHandler an event handler function\n */\nEvent.prototype.subscribe = function (eventHandler) {\n    if (typeof eventHandler === 'function') {\n        return ((this.subscribers.push(eventHandler)) - 1);\n    } else {\n        return { FAIL: `invalid '${this.eventId}' event handler`};\n    }\n};\n\n/**\n * Unsubscribe an event handler\n * @param {string} subsId subscription id\n */\nEvent.prototype.unsubscribe = function (subsId) {\n    this.subscribers.splice(subsId, 1);\n};\n\n/**\n * Sets context params current value index\n * @param {number} index context params current value index\n */\nContextParams.prototype.setCurrentIndex = function(index) {\n    this.index = index;\n    this.current = this.context[index];\n    this.backtrack = this.context.slice(0, index);\n    this.lookahead = this.context.slice(index + 1);\n};\n\n/**\n * Get an item at an offset from the current value\n * example (current value is 3):\n *  1    2   [3]   4    5   |   items values\n * -2   -1    0    1    2   |   offset values\n * @param {number} offset an offset from current value index\n */\nContextParams.prototype.get = function (offset) {\n    switch (true) {\n        case (offset === 0):\n            return this.current;\n        case (offset < 0 && Math.abs(offset) <= this.backtrack.length):\n            return this.backtrack.slice(offset)[0];\n        case (offset > 0 && offset <= this.lookahead.length):\n            return this.lookahead[offset - 1];\n        default:\n            return null;\n    }\n};\n\n/**\n * Converts a context range into a string value\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.rangeToText = function (range) {\n    if (range instanceof ContextRange) {\n        return (\n            this.getRangeTokens(range)\n                .map(token => token.char).join('')\n        );\n    }\n};\n\n/**\n * Converts all tokens into a string\n */\nTokenizer.prototype.getText = function () {\n    return this.tokens.map(token => token.char).join('');\n};\n\n/**\n * Get a context by name\n * @param {string} contextName context name to get\n */\nTokenizer.prototype.getContext = function (contextName) {\n    let context = this.registeredContexts[contextName];\n    return !!context ? context : null;\n};\n\n/**\n * Subscribes a new event handler to an event\n * @param {string} eventName event name to subscribe to\n * @param {function} eventHandler a function to be invoked on event\n */\nTokenizer.prototype.on = function(eventName, eventHandler) {\n    const event = this.events[eventName];\n    if (!!event) {\n        return event.subscribe(eventHandler);\n    } else {\n        return null;\n    }\n};\n\n/**\n * Dispatches an event\n * @param {string} eventName event name\n * @param {any} args event handler arguments\n */\nTokenizer.prototype.dispatch = function(eventName, args) {\n    const event = this.events[eventName];\n    if (event instanceof Event) {\n        event.subscribers.forEach(subscriber => {\n            subscriber.apply(this, args || []);\n        });\n    }\n};\n\n/**\n * Register a new context checker\n * @param {string} contextName a unique context name\n * @param {function} contextStartCheck a predicate function that returns true on context start\n * @param {function} contextEndCheck  a predicate function that returns true on context end\n * TODO: call tokenize on registration to update context ranges with the new context.\n */\nTokenizer.prototype.registerContextChecker = function(contextName, contextStartCheck, contextEndCheck) {\n    if (!!this.getContext(contextName)) return {\n        FAIL:\n        `context name '${contextName}' is already registered.`\n    };\n    if (typeof contextStartCheck !== 'function') return {\n        FAIL:\n        `missing context start check.`\n    };\n    if (typeof contextEndCheck !== 'function') return {\n        FAIL:\n        `missing context end check.`\n    };\n    const contextCheckers = new ContextChecker(\n        contextName, contextStartCheck, contextEndCheck\n    );\n    this.registeredContexts[contextName] = contextCheckers;\n    this.contextCheckers.push(contextCheckers);\n    return contextCheckers;\n};\n\n/**\n * Gets a context range tokens\n * @param {contextRange} range a context range\n */\nTokenizer.prototype.getRangeTokens = function(range) {\n    const endIndex = range.startIndex + range.endOffset;\n    return [].concat(\n        this.tokens\n            .slice(range.startIndex, endIndex)\n    );\n};\n\n/**\n * Gets the ranges of a context\n * @param {string} contextName context name\n */\nTokenizer.prototype.getContextRanges = function(contextName) {\n    const context = this.getContext(contextName);\n    if (!!context) {\n        return context.ranges;\n    } else {\n        return { FAIL: `context checker '${contextName}' is not registered.` };\n    }\n};\n\n/**\n * Resets context ranges to run context update\n */\nTokenizer.prototype.resetContextsRanges = function () {\n    const registeredContexts = this.registeredContexts;\n    for (const contextName in registeredContexts) {\n        if (registeredContexts.hasOwnProperty(contextName)) {\n            const context = registeredContexts[contextName];\n            context.ranges = [];\n        }\n    }\n};\n\n/**\n * Updates context ranges\n */\nTokenizer.prototype.updateContextsRanges = function () {\n    this.resetContextsRanges();\n    const chars = this.tokens.map(token => token.char);\n    for (let i = 0; i < chars.length; i++) {\n        const contextParams = new ContextParams(chars, i);\n        this.runContextCheck(contextParams);\n    }\n    this.dispatch('updateContextsRanges', [this.registeredContexts]);\n};\n\n/**\n * Sets the end offset of an open range\n * @param {number} offset range end offset\n * @param {string} contextName context name\n */\nTokenizer.prototype.setEndOffset = function (offset, contextName) {\n    const startIndex = this.getContext(contextName).openRange.startIndex;\n    let range = new ContextRange(startIndex, offset, contextName);\n    const ranges = this.getContext(contextName).ranges;\n    range.rangeId = `${contextName}.${ranges.length}`;\n    ranges.push(range);\n    this.getContext(contextName).openRange = null;\n    return range;\n};\n\n/**\n * Runs a context check on the current context\n * @param {contextParams} contextParams current context params\n */\nTokenizer.prototype.runContextCheck = function(contextParams) {\n    const index = contextParams.index;\n    this.contextCheckers.forEach(contextChecker => {\n        let contextName = contextChecker.contextName;\n        let openRange = this.getContext(contextName).openRange;\n        if (!openRange && contextChecker.checkStart(contextParams)) {\n            openRange = new ContextRange(index, null, contextName);\n            this.getContext(contextName).openRange = openRange;\n            this.dispatch('contextStart', [contextName, index]);\n        }\n        if (!!openRange && contextChecker.checkEnd(contextParams)) {\n            const offset = (index - openRange.startIndex) + 1;\n            const range = this.setEndOffset(offset, contextName);\n            this.dispatch('contextEnd', [contextName, range]);\n        }\n    });\n};\n\n/**\n * Converts a text into a list of tokens\n * @param {string} text a text to tokenize\n */\nTokenizer.prototype.tokenize = function (text) {\n    this.tokens = [];\n    this.resetContextsRanges();\n    let chars = Array.from(text);\n    this.dispatch('start');\n    for (let i = 0; i < chars.length; i++) {\n        const char = chars[i];\n        const contextParams = new ContextParams(chars, i);\n        this.dispatch('next', [contextParams]);\n        this.runContextCheck(contextParams);\n        let token = new Token(char);\n        this.tokens.push(token);\n        this.dispatch('newToken', [token, contextParams]);\n    }\n    this.dispatch('end', [this.tokens]);\n    return this.tokens;\n};\n\nexport default Tokenizer;\nexport { Token, Event, ContextRange, ContextParams };\n","// ╭─┄┄┄────────────────────────┄─────────────────────────────────────────────╮\n// ┊ Character Class Assertions ┊ Checks if a char belongs to a certain class ┊\n// ╰─╾──────────────────────────┄─────────────────────────────────────────────╯\n// jscs:disable maximumLineLength\n/**\n * Check if a char is Arabic\n * @param {string} c a single char\n */\nexport function isArabicChar(c) {\n    return /[\\u0600-\\u065F\\u066A-\\u06D2\\u06FA-\\u06FF]/.test(c);\n}\n\n/**\n * Check if a char is an isolated arabic char\n * @param {string} c a single char\n */\nexport function isIsolatedArabicChar(char) {\n    return /[\\u0630\\u0690\\u0621\\u0631\\u0661\\u0671\\u0622\\u0632\\u0672\\u0692\\u06C2\\u0623\\u0673\\u0693\\u06C3\\u0624\\u0694\\u06C4\\u0625\\u0675\\u0695\\u06C5\\u06E5\\u0676\\u0696\\u06C6\\u0627\\u0677\\u0697\\u06C7\\u0648\\u0688\\u0698\\u06C8\\u0689\\u0699\\u06C9\\u068A\\u06CA\\u066B\\u068B\\u06CB\\u068C\\u068D\\u06CD\\u06FD\\u068E\\u06EE\\u06FE\\u062F\\u068F\\u06CF\\u06EF]/.test(char);\n}\n\n/**\n * Check if a char is an Arabic Tashkeel char\n * @param {string} c a single char\n */\nexport function isTashkeelArabicChar(char) {\n    return /[\\u0600-\\u0605\\u060C-\\u060E\\u0610-\\u061B\\u061E\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED]/.test(char);\n}\n\n/**\n * Check if a char is Latin\n * @param {string} c a single char\n */\nexport function isLatinChar(c) {\n    return /[A-z]/.test(c);\n}\n\n/**\n * Check if a char is whitespace char\n * @param {string} c a single char\n */\nexport function isWhiteSpace(c) {\n    return /\\s/.test(c);\n}\n","/**\n * Query a feature by some of it's properties to lookup a glyph substitution.\n */\n\nimport { ContextParams } from '../tokenizer';\nimport { isTashkeelArabicChar } from '../char';\n\n/**\n * Create feature query instance\n * @param {Font} font opentype font instance\n */\nfunction FeatureQuery(font) {\n    this.font = font;\n    this.features = {};\n}\n\n/**\n * @typedef SubstitutionAction\n * @type Object\n * @property {number} id substitution type\n * @property {string} tag feature tag\n * @property {any} substitution substitution value(s)\n */\n\n/**\n * Create a substitution action instance\n * @param {SubstitutionAction} action\n */\nfunction SubstitutionAction(action) {\n    this.id = action.id;\n    this.tag = action.tag;\n    this.substitution = action.substitution;\n}\n\n/**\n * Lookup a coverage table\n * @param {number} glyphIndex glyph index\n * @param {CoverageTable} coverage coverage table\n */\nfunction lookupCoverage(glyphIndex, coverage) {\n    if (!glyphIndex) return -1;\n    switch (coverage.format) {\n        case 1:\n            return coverage.glyphs.indexOf(glyphIndex);\n\n        case 2:\n            let ranges = coverage.ranges;\n            for (let i = 0; i < ranges.length; i++) {\n                const range = ranges[i];\n                if (glyphIndex >= range.start && glyphIndex <= range.end) {\n                    let offset = glyphIndex - range.start;\n                    return range.index + offset;\n                }\n            }\n            break;\n        default:\n            return -1; // not found\n    }\n    return -1;\n}\n\n/**\n * Handle a single substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat1(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return glyphIndex + subtable.deltaGlyphId;\n}\n\n/**\n * Handle a single substitution - format 2\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction singleSubstitutionFormat2(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return subtable.substitute[substituteIndex];\n}\n\n/**\n * Lookup a list of coverage tables\n * @param {any} coverageList a list of coverage tables\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction lookupCoverageList(coverageList, contextParams) {\n    let lookupList = [];\n    for (let i = 0; i < coverageList.length; i++) {\n        const coverage = coverageList[i];\n        let glyphIndex = contextParams.current;\n        glyphIndex = Array.isArray(glyphIndex) ? glyphIndex[0] : glyphIndex;\n        const lookupIndex = lookupCoverage(glyphIndex, coverage);\n        if (lookupIndex !== -1) {\n            lookupList.push(lookupIndex);\n        }\n    }\n    if (lookupList.length !== coverageList.length) return -1;\n    return lookupList;\n}\n\n/**\n * Handle chaining context substitution - format 3\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction chainingSubstitutionFormat3(contextParams, subtable) {\n    const lookupsCount = (\n        subtable.inputCoverage.length +\n        subtable.lookaheadCoverage.length +\n        subtable.backtrackCoverage.length\n    );\n    if (contextParams.context.length < lookupsCount) return [];\n    // INPUT LOOKUP //\n    let inputLookups = lookupCoverageList(\n        subtable.inputCoverage, contextParams\n    );\n    if (inputLookups === -1) return [];\n    // LOOKAHEAD LOOKUP //\n    const lookaheadOffset = subtable.inputCoverage.length - 1;\n    if (contextParams.lookahead.length < subtable.lookaheadCoverage.length) return [];\n    let lookaheadContext = contextParams.lookahead.slice(lookaheadOffset);\n    while (lookaheadContext.length && isTashkeelArabicChar(lookaheadContext[0].char)) {\n        lookaheadContext.shift();\n    }\n    const lookaheadParams = new ContextParams(lookaheadContext, 0);\n    let lookaheadLookups = lookupCoverageList(\n        subtable.lookaheadCoverage, lookaheadParams\n    );\n    // BACKTRACK LOOKUP //\n    let backtrackContext = [].concat(contextParams.backtrack);\n    backtrackContext.reverse();\n    while (backtrackContext.length && isTashkeelArabicChar(backtrackContext[0].char)) {\n        backtrackContext.shift();\n    }\n    if (backtrackContext.length < subtable.backtrackCoverage.length) return [];\n    const backtrackParams = new ContextParams(backtrackContext, 0);\n    let backtrackLookups = lookupCoverageList(\n        subtable.backtrackCoverage, backtrackParams\n    );\n    const contextRulesMatch = (\n        inputLookups.length === subtable.inputCoverage.length &&\n        lookaheadLookups.length === subtable.lookaheadCoverage.length &&\n        backtrackLookups.length === subtable.backtrackCoverage.length\n    );\n    let substitutions = [];\n    if (contextRulesMatch) {\n        for (let i = 0; i < subtable.lookupRecords.length; i++) {\n            const lookupRecord = subtable.lookupRecords[i];\n            const lookupListIndex = lookupRecord.lookupListIndex;\n            const lookupTable = this.getLookupByIndex(lookupListIndex);\n            for (let s = 0; s < lookupTable.subtables.length; s++) {\n                const subtable = lookupTable.subtables[s];\n                const lookup = this.getLookupMethod(lookupTable, subtable);\n                const substitutionType = this.getSubstitutionType(lookupTable, subtable);\n                if (substitutionType === '12') {\n                    for (let n = 0; n < inputLookups.length; n++) {\n                        const glyphIndex = contextParams.get(n);\n                        const substitution = lookup(glyphIndex);\n                        if (substitution) substitutions.push(substitution);\n                    }\n                }\n            }\n        }\n    }\n    return substitutions;\n}\n\n/**\n * Handle ligature substitution - format 1\n * @param {ContextParams} contextParams context params to lookup\n */\nfunction ligatureSubstitutionFormat1(contextParams, subtable) {\n    // COVERAGE LOOKUP //\n    let glyphIndex = contextParams.current;\n    let ligSetIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (ligSetIndex === -1) return null;\n    // COMPONENTS LOOKUP\n    // (!) note, components are ordered in the written direction.\n    let ligature;\n    let ligatureSet = subtable.ligatureSets[ligSetIndex];\n    for (let s = 0; s < ligatureSet.length; s++) {\n        ligature = ligatureSet[s];\n        for (let l = 0; l < ligature.components.length; l++) {\n            const lookaheadItem = contextParams.lookahead[l];\n            const component = ligature.components[l];\n            if (lookaheadItem !== component) break;\n            if (l === ligature.components.length - 1) return ligature;\n        }\n    }\n    return null;\n}\n\n/**\n * Handle decomposition substitution - format 1\n * @param {number} glyphIndex glyph index\n * @param {any} subtable subtable\n */\nfunction decompositionSubstitutionFormat1(glyphIndex, subtable) {\n    let substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);\n    if (substituteIndex === -1) return null;\n    return subtable.sequences[substituteIndex];\n}\n\n/**\n * Get default script features indexes\n */\nFeatureQuery.prototype.getDefaultScriptFeaturesIndexes = function () {\n    const scripts = this.font.tables.gsub.scripts;\n    for (let s = 0; s < scripts.length; s++) {\n        const script = scripts[s];\n        if (script.tag === 'DFLT') return (\n            script.script.defaultLangSys.featureIndexes\n        );\n    }\n    return [];\n};\n\n/**\n * Get feature indexes of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeaturesIndexes = function(scriptTag) {\n    const tables = this.font.tables;\n    if (!tables.gsub) return [];\n    if (!scriptTag) return this.getDefaultScriptFeaturesIndexes();\n    const scripts = this.font.tables.gsub.scripts;\n    for (let i = 0; i < scripts.length; i++) {\n        const script = scripts[i];\n        if (script.tag === scriptTag && script.script.defaultLangSys) {\n            return script.script.defaultLangSys.featureIndexes;\n        } else {\n            let langSysRecords = script.langSysRecords;\n            if (!!langSysRecords) {\n                for (let j = 0; j < langSysRecords.length; j++) {\n                    const langSysRecord = langSysRecords[j];\n                    if (langSysRecord.tag === scriptTag) {\n                        let langSys = langSysRecord.langSys;\n                        return langSys.featureIndexes;\n                    }\n                }\n            }\n        }\n    }\n    return this.getDefaultScriptFeaturesIndexes();\n};\n\n/**\n * Map a feature tag to a gsub feature\n * @param {any} features gsub features\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.mapTagsToFeatures = function (features, scriptTag) {\n    let tags = {};\n    for (let i = 0; i < features.length; i++) {\n        const tag = features[i].tag;\n        const feature = features[i].feature;\n        tags[tag] = feature;\n    }\n    this.features[scriptTag].tags = tags;\n};\n\n/**\n * Get features of a specific script\n * @param {string} scriptTag script tag\n */\nFeatureQuery.prototype.getScriptFeatures = function (scriptTag) {\n    let features = this.features[scriptTag];\n    if (this.features.hasOwnProperty(scriptTag)) return features;\n    const featuresIndexes = this.getScriptFeaturesIndexes(scriptTag);\n    if (!featuresIndexes) return null;\n    const gsub = this.font.tables.gsub;\n    features = featuresIndexes.map(index => gsub.features[index]);\n    this.features[scriptTag] = features;\n    this.mapTagsToFeatures(features, scriptTag);\n    return features;\n};\n\n/**\n * Get substitution type\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getSubstitutionType = function(lookupTable, subtable) {\n    const lookupType = lookupTable.lookupType.toString();\n    const substFormat = subtable.substFormat.toString();\n    return lookupType + substFormat;\n};\n\n/**\n * Get lookup method\n * @param {any} lookupTable lookup table\n * @param {any} subtable subtable\n */\nFeatureQuery.prototype.getLookupMethod = function(lookupTable, subtable) {\n    let substitutionType = this.getSubstitutionType(lookupTable, subtable);\n    switch (substitutionType) {\n        case '11':\n            return glyphIndex => singleSubstitutionFormat1.apply(\n                this, [glyphIndex, subtable]\n            );\n        case '12':\n            return glyphIndex => singleSubstitutionFormat2.apply(\n                this, [glyphIndex, subtable]\n            );\n        case '63':\n            return contextParams => chainingSubstitutionFormat3.apply(\n                this, [contextParams, subtable]\n            );\n        case '41':\n            return contextParams => ligatureSubstitutionFormat1.apply(\n                this, [contextParams, subtable]\n            );\n        case '21':\n            return glyphIndex => decompositionSubstitutionFormat1.apply(\n                this, [glyphIndex, subtable]\n            );\n        default:\n            throw new Error(\n                `lookupType: ${lookupTable.lookupType} - ` +\n                `substFormat: ${subtable.substFormat} ` +\n                `is not yet supported`\n            );\n    }\n};\n\n/**\n * [ LOOKUP TYPES ]\n * -------------------------------\n * Single                        1;\n * Multiple                      2;\n * Alternate                     3;\n * Ligature                      4;\n * Context                       5;\n * ChainingContext               6;\n * ExtensionSubstitution         7;\n * ReverseChainingContext        8;\n * -------------------------------\n *\n */\n\n/**\n * @typedef FQuery\n * @type Object\n * @param {string} tag feature tag\n * @param {string} script feature script\n * @param {ContextParams} contextParams context params\n */\n\n/**\n * Lookup a feature using a query parameters\n * @param {FQuery} query feature query\n */\nFeatureQuery.prototype.lookupFeature = function (query) {\n    let contextParams = query.contextParams;\n    let currentIndex = contextParams.index;\n    const feature = this.getFeature({\n        tag: query.tag, script: query.script\n    });\n    if (!feature) return new Error(\n        `font '${this.font.names.fullName.en}' ` +\n        `doesn't support feature '${query.tag}' ` +\n        `for script '${query.script}'.`\n    );\n    const lookups = this.getFeatureLookups(feature);\n    const substitutions = [].concat(contextParams.context);\n    for (let l = 0; l < lookups.length; l++) {\n        const lookupTable = lookups[l];\n        const subtables = this.getLookupSubtables(lookupTable);\n        for (let s = 0; s < subtables.length; s++) {\n            const subtable = subtables[s];\n            const substType = this.getSubstitutionType(lookupTable, subtable);\n            const lookup = this.getLookupMethod(lookupTable, subtable);\n            let substitution;\n            switch (substType) {\n                case '11':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 11, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '12':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 12, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '63':\n                    substitution = lookup(contextParams);\n                    if (Array.isArray(substitution) && substitution.length) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 63, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '41':\n                    substitution = lookup(contextParams);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 41, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n                case '21':\n                    substitution = lookup(contextParams.current);\n                    if (substitution) {\n                        substitutions.splice(currentIndex, 1, new SubstitutionAction({\n                            id: 21, tag: query.tag, substitution\n                        }));\n                    }\n                    break;\n            }\n            contextParams = new ContextParams(substitutions, currentIndex);\n            if (Array.isArray(substitution) && !substitution.length) continue;\n            substitution = null;\n        }\n    }\n    return substitutions.length ? substitutions : null;\n};\n\n/**\n * Checks if a font supports a specific features\n * @param {FQuery} query feature query object\n */\nFeatureQuery.prototype.supports = function (query) {\n    if (!query.script) return false;\n    this.getScriptFeatures(query.script);\n    const supportedScript = this.features.hasOwnProperty(query.script);\n    if (!query.tag) return supportedScript;\n    const supportedFeature = (\n        this.features[query.script].some(feature => feature.tag === query.tag)\n    );\n    return supportedScript && supportedFeature;\n};\n\n/**\n * Get lookup table subtables\n * @param {any} lookupTable lookup table\n */\nFeatureQuery.prototype.getLookupSubtables = function (lookupTable) {\n    return lookupTable.subtables || null;\n};\n\n/**\n * Get lookup table by index\n * @param {number} index lookup table index\n */\nFeatureQuery.prototype.getLookupByIndex = function (index) {\n    const lookups = this.font.tables.gsub.lookups;\n    return lookups[index] || null;\n};\n\n/**\n * Get lookup tables for a feature\n * @param {string} feature\n */\nFeatureQuery.prototype.getFeatureLookups = function (feature) {\n    // TODO: memoize\n    return feature.lookupListIndexes.map(this.getLookupByIndex.bind(this));\n};\n\n/**\n * Query a feature by it's properties\n * @param {any} query an object that describes the properties of a query\n */\nFeatureQuery.prototype.getFeature = function getFeature(query) {\n    if (!this.font) return { FAIL: `No font was found`};\n    if (!this.features.hasOwnProperty(query.script)) {\n        this.getScriptFeatures(query.script);\n    }\n    const scriptFeatures = this.features[query.script];\n    if (!scriptFeatures) return (\n        { FAIL: `No feature for script ${query.script}`}\n    );\n    if (!scriptFeatures.tags[query.tag]) return null;\n    return this.features[query.script].tags[query.tag];\n};\n\nexport default FeatureQuery;\nexport { FeatureQuery, SubstitutionAction };\n","/**\n * Arabic word context checkers\n */\n\nimport { isArabicChar } from '../../../char';\n\nfunction arabicWordStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? arabic first char\n        (prevChar === null && isArabicChar(char)) ||\n        // ? arabic char preceded with a non arabic char\n        (!isArabicChar(prevChar) && isArabicChar(char))\n    );\n}\n\nfunction arabicWordEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    return (\n        // ? last arabic char\n        (nextChar === null) ||\n        // ? next char is not arabic\n        (!isArabicChar(nextChar))\n    );\n}\n\nexport default {\n    startCheck: arabicWordStartCheck,\n    endCheck: arabicWordEndCheck\n};\n","/**\n * Arabic sentence context checkers\n */\n\nimport { isArabicChar, isWhiteSpace, isTashkeelArabicChar } from '../../../char';\n\nfunction arabicSentenceStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? an arabic char preceded with a non arabic char\n        (isArabicChar(char) || isTashkeelArabicChar(char)) &&\n        !isArabicChar(prevChar)\n    );\n}\n\nfunction arabicSentenceEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    switch (true) {\n        case nextChar === null:\n            return true;\n        case (!isArabicChar(nextChar) && !isTashkeelArabicChar(nextChar)):\n            const nextIsWhitespace = isWhiteSpace(nextChar);\n            if (!nextIsWhitespace) return true;\n            if (nextIsWhitespace) {\n                let arabicCharAhead = false;\n                arabicCharAhead = (\n                    contextParams.lookahead.some(\n                        c => isArabicChar(c) || isTashkeelArabicChar(c)\n                    )\n                );\n                if (!arabicCharAhead) return true;\n            }\n            break;\n        default:\n            return false;\n    }\n}\n\nexport default {\n    startCheck: arabicSentenceStartCheck,\n    endCheck: arabicSentenceEndCheck\n};\n","import { SubstitutionAction } from './featureQuery';\n\n/**\n * Apply single substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat1(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply single substitution format 2\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction singleSubstitutionFormat2(action, tokens, index) {\n    tokens[index].setState(action.tag, action.substitution);\n}\n\n/**\n * Apply chaining context substitution format 3\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction chainingSubstitutionFormat3(action, tokens, index) {\n    action.substitution.forEach((subst, offset) => {\n        const token = tokens[index + offset];\n        token.setState(action.tag, subst);\n    });\n}\n\n/**\n * Apply ligature substitution format 1\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction ligatureSubstitutionFormat1(action, tokens, index) {\n    let token = tokens[index];\n    token.setState(action.tag, action.substitution.ligGlyph);\n    const compsCount = action.substitution.components.length;\n    for (let i = 0; i < compsCount; i++) {\n        token = tokens[index + i + 1];\n        token.setState('deleted', true);\n    }\n}\n\n/**\n * Supported substitutions\n */\nconst SUBSTITUTIONS = {\n    11: singleSubstitutionFormat1,\n    12: singleSubstitutionFormat2,\n    63: chainingSubstitutionFormat3,\n    41: ligatureSubstitutionFormat1\n};\n\n/**\n * Apply substitutions to a list of tokens\n * @param {Array} substitutions substitutions\n * @param {any} tokens a list of tokens\n * @param {number} index token index\n */\nfunction applySubstitution(action, tokens, index) {\n    if (action instanceof SubstitutionAction && SUBSTITUTIONS[action.id]) {\n        SUBSTITUTIONS[action.id](action, tokens, index);\n    }\n}\n\nexport default applySubstitution;\n","/**\n * Apply Arabic presentation forms to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport { isIsolatedArabicChar, isTashkeelArabicChar } from '../../char';\nimport { SubstitutionAction } from '../featureQuery';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Check if a char can be connected to it's preceding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectPrev(charContextParams) {\n    let backtrack = [].concat(charContextParams.backtrack);\n    for (let i = backtrack.length - 1; i >= 0; i--) {\n        const prevChar = backtrack[i];\n        const isolated = isIsolatedArabicChar(prevChar);\n        const tashkeel = isTashkeelArabicChar(prevChar);\n        if (!isolated && !tashkeel) return true;\n        if (isolated) return false;\n    }\n    return false;\n}\n\n/**\n * Check if a char can be connected to it's proceeding char\n * @param {ContextParams} charContextParams context params of a char\n */\nfunction willConnectNext(charContextParams) {\n    if (isIsolatedArabicChar(charContextParams.current)) return false;\n    for (let i = 0; i < charContextParams.lookahead.length; i++) {\n        const nextChar = charContextParams.lookahead[i];\n        const tashkeel = isTashkeelArabicChar(nextChar);\n        if (!tashkeel) return true;\n    }\n    return false;\n}\n\n/**\n * Apply arabic presentation forms to a list of tokens\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicPresentationForms(range) {\n    const script = 'arab';\n    const tags = this.featuresTags[script];\n    const tokens = this.tokenizer.getRangeTokens(range);\n    if (tokens.length === 1) return;\n    let contextParams = new ContextParams(\n        tokens.map(token => token.getState('glyphIndex')\n    ), 0);\n    const charContextParams = new ContextParams(\n        tokens.map(token => token.char\n    ), 0);\n    tokens.forEach((token, index) => {\n        if (isTashkeelArabicChar(token.char)) return;\n        contextParams.setCurrentIndex(index);\n        charContextParams.setCurrentIndex(index);\n        let CONNECT = 0; // 2 bits 00 (10: can connect next) (01: can connect prev)\n        if (willConnectPrev(charContextParams)) CONNECT |= 1;\n        if (willConnectNext(charContextParams)) CONNECT |= 2;\n        let tag;\n        switch (CONNECT) {\n            case 1: (tag = 'fina'); break;\n            case 2: (tag = 'init'); break;\n            case 3: (tag = 'medi'); break;\n        }\n        if (tags.indexOf(tag) === -1) return;\n        let substitutions = this.query.lookupFeature({\n            tag, script, contextParams\n        });\n        if (substitutions instanceof Error) return console.info(substitutions.message);\n        substitutions.forEach((action, index) => {\n            if (action instanceof SubstitutionAction) {\n                applySubstitution(action, tokens, index);\n                contextParams.context[index] = action.substitution;\n            }\n        });\n    });\n}\n\nexport default arabicPresentationForms;\nexport { arabicPresentationForms };\n","/**\n * Apply Arabic required ligatures feature to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams(tokens, index) {\n    const context = tokens.map(token => token.activeState.value);\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction arabicRequiredLigatures(range) {\n    const script = 'arab';\n    let tokens = this.tokenizer.getRangeTokens(range);\n    let contextParams = getContextParams(tokens);\n    contextParams.context.forEach((glyphIndex, index) => {\n        contextParams.setCurrentIndex(index);\n        let substitutions = this.query.lookupFeature({\n            tag: 'rlig', script, contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                action => applySubstitution(action, tokens, index)\n            );\n            contextParams = getContextParams(tokens);\n        }\n    });\n}\n\nexport default arabicRequiredLigatures;\nexport { arabicRequiredLigatures };\n","/**\n * Latin word context checkers\n */\n\nimport { isLatinChar } from '../../../char';\n\nfunction latinWordStartCheck(contextParams) {\n    const char = contextParams.current;\n    const prevChar = contextParams.get(-1);\n    return (\n        // ? latin first char\n        (prevChar === null && isLatinChar(char)) ||\n        // ? latin char preceded with a non latin char\n        (!isLatinChar(prevChar) && isLatinChar(char))\n    );\n}\n\nfunction latinWordEndCheck(contextParams) {\n    const nextChar = contextParams.get(1);\n    return (\n        // ? last latin char\n        (nextChar === null) ||\n        // ? next char is not latin\n        (!isLatinChar(nextChar))\n    );\n}\n\nexport default {\n    startCheck: latinWordStartCheck,\n    endCheck: latinWordEndCheck\n};\n","/**\n * Apply Latin ligature feature to a range of tokens\n */\n\nimport { ContextParams } from '../../tokenizer';\nimport applySubstitution from '../applySubstitution';\n\n/**\n * Update context params\n * @param {any} tokens a list of tokens\n * @param {number} index current item index\n */\nfunction getContextParams(tokens, index) {\n    const context = tokens.map(token => token.activeState.value);\n    return new ContextParams(context, index || 0);\n}\n\n/**\n * Apply Arabic required ligatures to a context range\n * @param {ContextRange} range a range of tokens\n */\nfunction latinLigature(range) {\n    const script = 'latn';\n    let tokens = this.tokenizer.getRangeTokens(range);\n    let contextParams = getContextParams(tokens);\n    contextParams.context.forEach((glyphIndex, index) => {\n        contextParams.setCurrentIndex(index);\n        let substitutions = this.query.lookupFeature({\n            tag: 'liga', script, contextParams\n        });\n        if (substitutions.length) {\n            substitutions.forEach(\n                action => applySubstitution(action, tokens, index)\n            );\n            contextParams = getContextParams(tokens);\n        }\n    });\n}\n\nexport default latinLigature;\n","/**\n * Infer bidirectional properties for a given text and apply\n * the corresponding layout rules.\n */\n\nimport Tokenizer from './tokenizer';\nimport FeatureQuery from './features/featureQuery';\nimport arabicWordCheck from './features/arab/contextCheck/arabicWord';\nimport arabicSentenceCheck from './features/arab/contextCheck/arabicSentence';\nimport arabicPresentationForms from './features/arab/arabicPresentationForms';\nimport arabicRequiredLigatures from './features/arab/arabicRequiredLigatures';\nimport latinWordCheck from './features/latn/contextCheck/latinWord';\nimport latinLigature from './features/latn/latinLigatures';\n\n/**\n * Create Bidi. features\n * @param {string} baseDir text base direction. value either 'ltr' or 'rtl'\n */\nfunction Bidi(baseDir) {\n    this.baseDir = baseDir || 'ltr';\n    this.tokenizer = new Tokenizer();\n    this.featuresTags = {};\n}\n\n/**\n * Sets Bidi text\n * @param {string} text a text input\n */\nBidi.prototype.setText = function (text) {\n    this.text = text;\n};\n\n/**\n * Store essential context checks:\n * arabic word check for applying gsub features\n * arabic sentence check for adjusting arabic layout\n */\nBidi.prototype.contextChecks = ({\n    latinWordCheck,\n    arabicWordCheck,\n    arabicSentenceCheck\n});\n\n/**\n * Register arabic word check\n */\nfunction registerContextChecker(checkId) {\n    const check = this.contextChecks[`${checkId}Check`];\n    return this.tokenizer.registerContextChecker(\n        checkId, check.startCheck, check.endCheck\n    );\n}\n\n/**\n * Perform pre tokenization procedure then\n * tokenize text input\n */\nfunction tokenizeText() {\n    registerContextChecker.call(this, 'latinWord');\n    registerContextChecker.call(this, 'arabicWord');\n    registerContextChecker.call(this, 'arabicSentence');\n    return this.tokenizer.tokenize(this.text);\n}\n\n/**\n * Reverse arabic sentence layout\n * TODO: check base dir before applying adjustments - priority low\n */\nfunction reverseArabicSentences() {\n    const ranges = this.tokenizer.getContextRanges('arabicSentence');\n    ranges.forEach(range => {\n        let rangeTokens = this.tokenizer.getRangeTokens(range);\n        this.tokenizer.replaceRange(\n            range.startIndex,\n            range.endOffset,\n            rangeTokens.reverse()\n        );\n    });\n}\n\n/**\n * Register supported features tags\n * @param {script} script script tag\n * @param {Array} tags features tags list\n */\nBidi.prototype.registerFeatures = function (script, tags) {\n    const supportedTags = tags.filter(\n        tag => this.query.supports({script, tag})\n    );\n    if (!this.featuresTags.hasOwnProperty(script)) {\n        this.featuresTags[script] = supportedTags;\n    } else {\n        this.featuresTags[script] =\n        this.featuresTags[script].concat(supportedTags);\n    }\n};\n\n/**\n * Apply GSUB features\n * @param {Array} tagsList a list of features tags\n * @param {string} script a script tag\n * @param {Font} font opentype font instance\n */\nBidi.prototype.applyFeatures = function (font, features) {\n    if (!font) throw new Error(\n        'No valid font was provided to apply features'\n    );\n    if (!this.query) this.query = new FeatureQuery(font);\n    for (let f = 0; f < features.length; f++) {\n        const feature = features[f];\n        if (!this.query.supports({script: feature.script})) continue;\n        this.registerFeatures(feature.script, feature.tags);\n    }\n};\n\n/**\n * Register a state modifier\n * @param {string} modifierId state modifier id\n * @param {function} condition a predicate function that returns true or false\n * @param {function} modifier a modifier function to set token state\n */\nBidi.prototype.registerModifier = function (modifierId, condition, modifier) {\n    this.tokenizer.registerModifier(modifierId, condition, modifier);\n};\n\n/**\n * Check if 'glyphIndex' is registered\n */\nfunction checkGlyphIndexStatus() {\n    if (this.tokenizer.registeredModifiers.indexOf('glyphIndex') === -1) {\n        throw new Error(\n            'glyphIndex modifier is required to apply ' +\n            'arabic presentation features.'\n        );\n    }\n}\n\n/**\n * Apply arabic presentation forms features\n */\nfunction applyArabicPresentationForms() {\n    const script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(range => {\n        arabicPresentationForms.call(this, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyArabicRequireLigatures() {\n    const script = 'arab';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    const tags = this.featuresTags[script];\n    if (tags.indexOf('rlig') === -1) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('arabicWord');\n    ranges.forEach(range => {\n        arabicRequiredLigatures.call(this, range);\n    });\n}\n\n/**\n * Apply required arabic ligatures\n */\nfunction applyLatinLigatures() {\n    const script = 'latn';\n    if (!this.featuresTags.hasOwnProperty(script)) return;\n    const tags = this.featuresTags[script];\n    if (tags.indexOf('liga') === -1) return;\n    checkGlyphIndexStatus.call(this);\n    const ranges = this.tokenizer.getContextRanges('latinWord');\n    ranges.forEach(range => {\n        latinLigature.call(this, range);\n    });\n}\n\n/**\n * Check if a context is registered\n * @param {string} contextId context id\n */\nBidi.prototype.checkContextReady = function (contextId) {\n    return !!this.tokenizer.getContext(contextId);\n};\n\n/**\n * Apply features to registered contexts\n */\nBidi.prototype.applyFeaturesToContexts = function () {\n    if (this.checkContextReady('arabicWord')) {\n        applyArabicPresentationForms.call(this);\n        applyArabicRequireLigatures.call(this);\n    }\n    if (this.checkContextReady('latinWord')) {\n        applyLatinLigatures.call(this);\n    }\n    if (this.checkContextReady('arabicSentence')) {\n        reverseArabicSentences.call(this);\n    }\n};\n\n/**\n * process text input\n * @param {string} text an input text\n */\nBidi.prototype.processText = function(text) {\n    if (!this.text || this.text !== text) {\n        this.setText(text);\n        tokenizeText.call(this);\n        this.applyFeaturesToContexts();\n    }\n};\n\n/**\n * Process a string of text to identify and adjust\n * bidirectional text entities.\n * @param {string} text input text\n */\nBidi.prototype.getBidiText = function (text) {\n    this.processText(text);\n    return this.tokenizer.getText();\n};\n\n/**\n * Get the current state index of each token\n * @param {text} text an input text\n */\nBidi.prototype.getTextGlyphs = function (text) {\n    this.processText(text);\n    let indexes = [];\n    for (let i = 0; i < this.tokenizer.tokens.length; i++) {\n        const token = this.tokenizer.tokens[i];\n        if (token.state.deleted) continue;\n        const index = token.activeState.value;\n        indexes.push(Array.isArray(index) ? index[0] : index);\n    }\n    return indexes;\n};\n\nexport default Bidi;\n","// The Font object\n\nimport Path from './path';\nimport sfnt from './tables/sfnt';\nimport { DefaultEncoding } from './encoding';\nimport glyphset from './glyphset';\nimport Position from './position';\nimport Substitution from './substitution';\nimport { isBrowser, checkArgument, arrayBufferToNodeBuffer } from './util';\nimport HintingTrueType from './hintingtt';\nimport Bidi from './bidi';\n\n/**\n * @typedef FontOptions\n * @type Object\n * @property {Boolean} empty - whether to create a new empty font\n * @property {string} familyName\n * @property {string} styleName\n * @property {string=} fullName\n * @property {string=} postScriptName\n * @property {string=} designer\n * @property {string=} designerURL\n * @property {string=} manufacturer\n * @property {string=} manufacturerURL\n * @property {string=} license\n * @property {string=} licenseURL\n * @property {string=} version\n * @property {string=} description\n * @property {string=} copyright\n * @property {string=} trademark\n * @property {Number} unitsPerEm\n * @property {Number} ascender\n * @property {Number} descender\n * @property {Number} createdTimestamp\n * @property {string=} weightClass\n * @property {string=} widthClass\n * @property {string=} fsSelection\n */\n\n/**\n * A Font represents a loaded OpenType font file.\n * It contains a set of glyphs and methods to draw text on a drawing context,\n * or to get a path representing the text.\n * @exports opentype.Font\n * @class\n * @param {FontOptions}\n * @constructor\n */\nfunction Font(options) {\n    options = options || {};\n    options.tables = options.tables || {};\n\n    if (!options.empty) {\n        // Check that we've provided the minimum set of names.\n        checkArgument(options.familyName, 'When creating a new Font object, familyName is required.');\n        checkArgument(options.styleName, 'When creating a new Font object, styleName is required.');\n        checkArgument(options.unitsPerEm, 'When creating a new Font object, unitsPerEm is required.');\n        checkArgument(options.ascender, 'When creating a new Font object, ascender is required.');\n        checkArgument(options.descender <= 0, 'When creating a new Font object, negative descender value is required.');\n\n        // OS X will complain if the names are empty, so we put a single space everywhere by default.\n        this.names = {\n            fontFamily: {en: options.familyName || ' '},\n            fontSubfamily: {en: options.styleName || ' '},\n            fullName: {en: options.fullName || options.familyName + ' ' + options.styleName},\n            // postScriptName may not contain any whitespace\n            postScriptName: {en: options.postScriptName || (options.familyName + options.styleName).replace(/\\s/g, '')},\n            designer: {en: options.designer || ' '},\n            designerURL: {en: options.designerURL || ' '},\n            manufacturer: {en: options.manufacturer || ' '},\n            manufacturerURL: {en: options.manufacturerURL || ' '},\n            license: {en: options.license || ' '},\n            licenseURL: {en: options.licenseURL || ' '},\n            version: {en: options.version || 'Version 0.1'},\n            description: {en: options.description || ' '},\n            copyright: {en: options.copyright || ' '},\n            trademark: {en: options.trademark || ' '}\n        };\n        this.unitsPerEm = options.unitsPerEm || 1000;\n        this.ascender = options.ascender;\n        this.descender = options.descender;\n        this.createdTimestamp = options.createdTimestamp;\n        this.tables = Object.assign(options.tables, {\n            os2: Object.assign({\n                usWeightClass: options.weightClass || this.usWeightClasses.MEDIUM,\n                usWidthClass: options.widthClass || this.usWidthClasses.MEDIUM,\n                fsSelection: options.fsSelection || this.fsSelectionValues.REGULAR,\n            }, options.tables.os2)\n        });\n    }\n\n    this.supported = true; // Deprecated: parseBuffer will throw an error if font is not supported.\n    this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);\n    this.encoding = new DefaultEncoding(this);\n    this.position = new Position(this);\n    this.substitution = new Substitution(this);\n    this.tables = this.tables || {};\n\n    // needed for low memory mode only.\n    this._push = null;\n    this._hmtxTableData = {};\n\n    Object.defineProperty(this, 'hinting', {\n        get: function() {\n            if (this._hinting) return this._hinting;\n            if (this.outlinesFormat === 'truetype') {\n                return (this._hinting = new HintingTrueType(this));\n            }\n        }\n    });\n}\n\n/**\n * Check if the font has a glyph for the given character.\n * @param  {string}\n * @return {Boolean}\n */\nFont.prototype.hasChar = function(c) {\n    return this.encoding.charToGlyphIndex(c) !== null;\n};\n\n/**\n * Convert the given character to a single glyph index.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.charToGlyphIndex = function(s) {\n    return this.encoding.charToGlyphIndex(s);\n};\n\n/**\n * Convert the given character to a single Glyph object.\n * Note that this function assumes that there is a one-to-one mapping between\n * the given character and a glyph; for complex scripts this might not be the case.\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.charToGlyph = function(c) {\n    const glyphIndex = this.charToGlyphIndex(c);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * Update features\n * @param {any} options features options\n */\nFont.prototype.updateFeatures = function (options) {\n    // TODO: update all features options not only 'latn'.\n    return this.defaultRenderOptions.features.map(feature => {\n        if (feature.script === 'latn') {\n            return {\n                script: 'latn',\n                tags: feature.tags.filter(tag => options[tag])\n            };\n        } else {\n            return feature;\n        }\n    });\n};\n\n/**\n * Convert the given text to a list of Glyph objects.\n * Note that there is no strict one-to-one mapping between characters and\n * glyphs, so the list of returned glyphs can be larger or smaller than the\n * length of the given string.\n * @param  {string}\n * @param  {GlyphRenderOptions} [options]\n * @return {opentype.Glyph[]}\n */\nFont.prototype.stringToGlyphs = function(s, options) {\n\n    const bidi = new Bidi();\n\n    // Create and register 'glyphIndex' state modifier\n    const charToGlyphIndexMod = token => this.charToGlyphIndex(token.char);\n    bidi.registerModifier('glyphIndex', null, charToGlyphIndexMod);\n\n    // roll-back to default features\n    let features = options ?\n    this.updateFeatures(options.features) :\n    this.defaultRenderOptions.features;\n\n    bidi.applyFeatures(this, features);\n\n    const indexes = bidi.getTextGlyphs(s);\n\n    let length = indexes.length;\n\n    // convert glyph indexes to glyph objects\n    const glyphs = new Array(length);\n    const notdef = this.glyphs.get(0);\n    for (let i = 0; i < length; i += 1) {\n        glyphs[i] = this.glyphs.get(indexes[i]) || notdef;\n    }\n    return glyphs;\n};\n\n/**\n * @param  {string}\n * @return {Number}\n */\nFont.prototype.nameToGlyphIndex = function(name) {\n    return this.glyphNames.nameToGlyphIndex(name);\n};\n\n/**\n * @param  {string}\n * @return {opentype.Glyph}\n */\nFont.prototype.nameToGlyph = function(name) {\n    const glyphIndex = this.nameToGlyphIndex(name);\n    let glyph = this.glyphs.get(glyphIndex);\n    if (!glyph) {\n        // .notdef\n        glyph = this.glyphs.get(0);\n    }\n\n    return glyph;\n};\n\n/**\n * @param  {Number}\n * @return {String}\n */\nFont.prototype.glyphIndexToName = function(gid) {\n    if (!this.glyphNames.glyphIndexToName) {\n        return '';\n    }\n\n    return this.glyphNames.glyphIndexToName(gid);\n};\n\n/**\n * Retrieve the value of the kerning pair between the left glyph (or its index)\n * and the right glyph (or its index). If no kerning pair is found, return 0.\n * The kerning value gets added to the advance width when calculating the spacing\n * between glyphs.\n * For GPOS kerning, this method uses the default script and language, which covers\n * most use cases. To have greater control, use font.position.getKerningValue .\n * @param  {opentype.Glyph} leftGlyph\n * @param  {opentype.Glyph} rightGlyph\n * @return {Number}\n */\nFont.prototype.getKerningValue = function(leftGlyph, rightGlyph) {\n    leftGlyph = leftGlyph.index || leftGlyph;\n    rightGlyph = rightGlyph.index || rightGlyph;\n    const gposKerning = this.position.defaultKerningTables;\n    if (gposKerning) {\n        return this.position.getKerningValue(gposKerning, leftGlyph, rightGlyph);\n    }\n    // \"kern\" table\n    return this.kerningPairs[leftGlyph + ',' + rightGlyph] || 0;\n};\n\n/**\n * @typedef GlyphRenderOptions\n * @type Object\n * @property {string} [script] - script used to determine which features to apply. By default, 'DFLT' or 'latn' is used.\n *                               See https://www.microsoft.com/typography/otspec/scripttags.htm\n * @property {string} [language='dflt'] - language system used to determine which features to apply.\n *                                        See https://www.microsoft.com/typography/developers/opentype/languagetags.aspx\n * @property {boolean} [kerning=true] - whether to include kerning values\n * @property {object} [features] - OpenType Layout feature tags. Used to enable or disable the features of the given script/language system.\n *                                 See https://www.microsoft.com/typography/otspec/featuretags.htm\n */\nFont.prototype.defaultRenderOptions = {\n    kerning: true,\n    features: [\n        /**\n         * these 4 features are required to render Arabic text properly\n         * and shouldn't be turned off when rendering arabic text.\n         */\n        { script: 'arab', tags: ['init', 'medi', 'fina', 'rlig'] },\n        { script: 'latn', tags: ['liga', 'rlig'] }\n    ]\n};\n\n/**\n * Helper function that invokes the given callback for each glyph in the given text.\n * The callback gets `(glyph, x, y, fontSize, options)`.* @param  {string} text\n * @param {string} text - The text to apply.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @param  {Function} callback\n */\nFont.prototype.forEachGlyph = function(text, x, y, fontSize, options, callback) {\n    x = x !== undefined ? x : 0;\n    y = y !== undefined ? y : 0;\n    fontSize = fontSize !== undefined ? fontSize : 72;\n    options = Object.assign({}, this.defaultRenderOptions, options);\n    const fontScale = 1 / this.unitsPerEm * fontSize;\n    const glyphs = this.stringToGlyphs(text, options);\n    let kerningLookups;\n    if (options.kerning) {\n        const script = options.script || this.position.getDefaultScriptName();\n        kerningLookups = this.position.getKerningTables(script, options.language);\n    }\n    for (let i = 0; i < glyphs.length; i += 1) {\n        const glyph = glyphs[i];\n        callback.call(this, glyph, x, y, fontSize, options);\n        if (glyph.advanceWidth) {\n            x += glyph.advanceWidth * fontScale;\n        }\n\n        if (options.kerning && i < glyphs.length - 1) {\n            // We should apply position adjustment lookups in a more generic way.\n            // Here we only use the xAdvance value.\n            const kerningValue = kerningLookups ?\n                  this.position.getKerningValue(kerningLookups, glyph.index, glyphs[i + 1].index) :\n                  this.getKerningValue(glyph, glyphs[i + 1]);\n            x += kerningValue * fontScale;\n        }\n\n        if (options.letterSpacing) {\n            x += options.letterSpacing * fontSize;\n        } else if (options.tracking) {\n            x += (options.tracking / 1000) * fontSize;\n        }\n    }\n    return x;\n};\n\n/**\n * Create a Path object that represents the given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path}\n */\nFont.prototype.getPath = function(text, x, y, fontSize, options) {\n    const fullPath = new Path();\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        fullPath.extend(glyphPath);\n    });\n    return fullPath;\n};\n\n/**\n * Create an array of Path objects that represent the glyphs of a given text.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return {opentype.Path[]}\n */\nFont.prototype.getPaths = function(text, x, y, fontSize, options) {\n    const glyphPaths = [];\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        const glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);\n        glyphPaths.push(glyphPath);\n    });\n\n    return glyphPaths;\n};\n\n/**\n * Returns the advance width of a text.\n *\n * This is something different than Path.getBoundingBox() as for example a\n * suffixed whitespace increases the advanceWidth but not the bounding box\n * or an overhanging letter like a calligraphic 'f' might have a quite larger\n * bounding box than its advance width.\n *\n * This corresponds to canvas2dContext.measureText(text).width\n *\n * @param  {string} text - The text to create.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n * @return advance width\n */\nFont.prototype.getAdvanceWidth = function(text, fontSize, options) {\n    return this.forEachGlyph(text, 0, 0, fontSize, options, function() {});\n};\n\n/**\n * Draw the text on the given drawing context.\n * @param  {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param  {string} text - The text to create.\n * @param  {number} [x=0] - Horizontal position of the beginning of the text.\n * @param  {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param  {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param  {GlyphRenderOptions=} options\n */\nFont.prototype.draw = function(ctx, text, x, y, fontSize, options) {\n    this.getPath(text, x, y, fontSize, options).draw(ctx);\n};\n\n/**\n * Draw the points of all glyphs in the text.\n * On-curve points will be drawn in blue, off-curve points will be drawn in red.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawPoints = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawPoints(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * Draw lines indicating important font measurements for all glyphs in the text.\n * Black lines indicate the origin of the coordinate system (point 0,0).\n * Blue lines indicate the glyph bounding box.\n * Green line indicates the advance width of the glyph.\n * @param {CanvasRenderingContext2D} ctx - A 2D drawing context, like Canvas.\n * @param {string} text - The text to create.\n * @param {number} [x=0] - Horizontal position of the beginning of the text.\n * @param {number} [y=0] - Vertical position of the *baseline* of the text.\n * @param {number} [fontSize=72] - Font size in pixels. We scale the glyph units by `1 / unitsPerEm * fontSize`.\n * @param {GlyphRenderOptions=} options\n */\nFont.prototype.drawMetrics = function(ctx, text, x, y, fontSize, options) {\n    this.forEachGlyph(text, x, y, fontSize, options, function(glyph, gX, gY, gFontSize) {\n        glyph.drawMetrics(ctx, gX, gY, gFontSize);\n    });\n};\n\n/**\n * @param  {string}\n * @return {string}\n */\nFont.prototype.getEnglishName = function(name) {\n    const translations = this.names[name];\n    if (translations) {\n        return translations.en;\n    }\n};\n\n/**\n * Validate\n */\nFont.prototype.validate = function() {\n    const warnings = [];\n    const _this = this;\n\n    function assert(predicate, message) {\n        if (!predicate) {\n            warnings.push(message);\n        }\n    }\n\n    function assertNamePresent(name) {\n        const englishName = _this.getEnglishName(name);\n        assert(englishName && englishName.trim().length > 0,\n               'No English ' + name + ' specified.');\n    }\n\n    // Identification information\n    assertNamePresent('fontFamily');\n    assertNamePresent('weightName');\n    assertNamePresent('manufacturer');\n    assertNamePresent('copyright');\n    assertNamePresent('version');\n\n    // Dimension information\n    assert(this.unitsPerEm > 0, 'No unitsPerEm specified.');\n};\n\n/**\n * Convert the font object to a SFNT data structure.\n * This structure contains all the necessary tables and metadata to create a binary OTF file.\n * @return {opentype.Table}\n */\nFont.prototype.toTables = function() {\n    return sfnt.fontToTable(this);\n};\n/**\n * @deprecated Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.\n */\nFont.prototype.toBuffer = function() {\n    console.warn('Font.toBuffer is deprecated. Use Font.toArrayBuffer instead.');\n    return this.toArrayBuffer();\n};\n/**\n * Converts a `opentype.Font` into an `ArrayBuffer`\n * @return {ArrayBuffer}\n */\nFont.prototype.toArrayBuffer = function() {\n    const sfntTable = this.toTables();\n    const bytes = sfntTable.encode();\n    const buffer = new ArrayBuffer(bytes.length);\n    const intArray = new Uint8Array(buffer);\n    for (let i = 0; i < bytes.length; i++) {\n        intArray[i] = bytes[i];\n    }\n\n    return buffer;\n};\n\n/**\n * Initiate a download of the OpenType font.\n */\nFont.prototype.download = function(fileName) {\n    const familyName = this.getEnglishName('fontFamily');\n    const styleName = this.getEnglishName('fontSubfamily');\n    fileName = fileName || familyName.replace(/\\s/g, '') + '-' + styleName + '.otf';\n    const arrayBuffer = this.toArrayBuffer();\n\n    if (isBrowser()) {\n        window.URL = window.URL || window.webkitURL;\n\n        if (window.URL) {\n            const dataView = new DataView(arrayBuffer);\n            const blob = new Blob([dataView], {type: 'font/opentype'});\n\n            let link = document.createElement('a');\n            link.href = window.URL.createObjectURL(blob);\n            link.download = fileName;\n\n            let event = document.createEvent('MouseEvents');\n            event.initEvent('click', true, false);\n            link.dispatchEvent(event);\n        } else {\n            console.warn('Font file could not be downloaded. Try using a different browser.');\n        }\n    } else {\n        const fs = require('fs');\n        const buffer = arrayBufferToNodeBuffer(arrayBuffer);\n        fs.writeFileSync(fileName, buffer);\n    }\n};\n/**\n * @private\n */\nFont.prototype.fsSelectionValues = {\n    ITALIC:              0x001, //1\n    UNDERSCORE:          0x002, //2\n    NEGATIVE:            0x004, //4\n    OUTLINED:            0x008, //8\n    STRIKEOUT:           0x010, //16\n    BOLD:                0x020, //32\n    REGULAR:             0x040, //64\n    USER_TYPO_METRICS:   0x080, //128\n    WWS:                 0x100, //256\n    OBLIQUE:             0x200  //512\n};\n\n/**\n * @private\n */\nFont.prototype.usWidthClasses = {\n    ULTRA_CONDENSED: 1,\n    EXTRA_CONDENSED: 2,\n    CONDENSED: 3,\n    SEMI_CONDENSED: 4,\n    MEDIUM: 5,\n    SEMI_EXPANDED: 6,\n    EXPANDED: 7,\n    EXTRA_EXPANDED: 8,\n    ULTRA_EXPANDED: 9\n};\n\n/**\n * @private\n */\nFont.prototype.usWeightClasses = {\n    THIN: 100,\n    EXTRA_LIGHT: 200,\n    LIGHT: 300,\n    NORMAL: 400,\n    MEDIUM: 500,\n    SEMI_BOLD: 600,\n    BOLD: 700,\n    EXTRA_BOLD: 800,\n    BLACK:    900\n};\n\nexport default Font;\n","// The `fvar` table stores font variation axes and instances.\n// https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6fvar.html\n\nimport check from '../check';\nimport parse from '../parse';\nimport table from '../table';\n\nfunction addName(name, names) {\n    const nameString = JSON.stringify(name);\n    let nameID = 256;\n    for (let nameKey in names) {\n        let n = parseInt(nameKey);\n        if (!n || n < 256) {\n            continue;\n        }\n\n        if (JSON.stringify(names[nameKey]) === nameString) {\n            return n;\n        }\n\n        if (nameID <= n) {\n            nameID = n + 1;\n        }\n    }\n\n    names[nameID] = name;\n    return nameID;\n}\n\nfunction makeFvarAxis(n, axis, names) {\n    const nameID = addName(axis.name, names);\n    return [\n        {name: 'tag_' + n, type: 'TAG', value: axis.tag},\n        {name: 'minValue_' + n, type: 'FIXED', value: axis.minValue << 16},\n        {name: 'defaultValue_' + n, type: 'FIXED', value: axis.defaultValue << 16},\n        {name: 'maxValue_' + n, type: 'FIXED', value: axis.maxValue << 16},\n        {name: 'flags_' + n, type: 'USHORT', value: 0},\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID}\n    ];\n}\n\nfunction parseFvarAxis(data, start, names) {\n    const axis = {};\n    const p = new parse.Parser(data, start);\n    axis.tag = p.parseTag();\n    axis.minValue = p.parseFixed();\n    axis.defaultValue = p.parseFixed();\n    axis.maxValue = p.parseFixed();\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n    axis.name = names[p.parseUShort()] || {};\n    return axis;\n}\n\nfunction makeFvarInstance(n, inst, axes, names) {\n    const nameID = addName(inst.name, names);\n    const fields = [\n        {name: 'nameID_' + n, type: 'USHORT', value: nameID},\n        {name: 'flags_' + n, type: 'USHORT', value: 0}\n    ];\n\n    for (let i = 0; i < axes.length; ++i) {\n        const axisTag = axes[i].tag;\n        fields.push({\n            name: 'axis_' + n + ' ' + axisTag,\n            type: 'FIXED',\n            value: inst.coordinates[axisTag] << 16\n        });\n    }\n\n    return fields;\n}\n\nfunction parseFvarInstance(data, start, axes, names) {\n    const inst = {};\n    const p = new parse.Parser(data, start);\n    inst.name = names[p.parseUShort()] || {};\n    p.skip('uShort', 1);  // reserved for flags; no values defined\n\n    inst.coordinates = {};\n    for (let i = 0; i < axes.length; ++i) {\n        inst.coordinates[axes[i].tag] = p.parseFixed();\n    }\n\n    return inst;\n}\n\nfunction makeFvarTable(fvar, names) {\n    const result = new table.Table('fvar', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'offsetToData', type: 'USHORT', value: 0},\n        {name: 'countSizePairs', type: 'USHORT', value: 2},\n        {name: 'axisCount', type: 'USHORT', value: fvar.axes.length},\n        {name: 'axisSize', type: 'USHORT', value: 20},\n        {name: 'instanceCount', type: 'USHORT', value: fvar.instances.length},\n        {name: 'instanceSize', type: 'USHORT', value: 4 + fvar.axes.length * 4}\n    ]);\n    result.offsetToData = result.sizeOf();\n\n    for (let i = 0; i < fvar.axes.length; i++) {\n        result.fields = result.fields.concat(makeFvarAxis(i, fvar.axes[i], names));\n    }\n\n    for (let j = 0; j < fvar.instances.length; j++) {\n        result.fields = result.fields.concat(makeFvarInstance(j, fvar.instances[j], fvar.axes, names));\n    }\n\n    return result;\n}\n\nfunction parseFvarTable(data, start, names) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseULong();\n    check.argument(tableVersion === 0x00010000, 'Unsupported fvar table version.');\n    const offsetToData = p.parseOffset16();\n    // Skip countSizePairs.\n    p.skip('uShort', 1);\n    const axisCount = p.parseUShort();\n    const axisSize = p.parseUShort();\n    const instanceCount = p.parseUShort();\n    const instanceSize = p.parseUShort();\n\n    const axes = [];\n    for (let i = 0; i < axisCount; i++) {\n        axes.push(parseFvarAxis(data, start + offsetToData + i * axisSize, names));\n    }\n\n    const instances = [];\n    const instanceStart = start + offsetToData + axisCount * axisSize;\n    for (let j = 0; j < instanceCount; j++) {\n        instances.push(parseFvarInstance(data, instanceStart + j * instanceSize, axes, names));\n    }\n\n    return {axes: axes, instances: instances};\n}\n\nexport default { make: makeFvarTable, parse: parseFvarTable };\n","// The `GPOS` table contains kerning pairs, among other things.\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\n\nimport check from '../check';\nimport { Parser } from '../parse';\nimport table from '../table';\n\nconst subtableParsers = new Array(10);         // subtableParsers[0] is unused\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-1-single-adjustment-positioning-subtable\n// this = Parser instance\nsubtableParsers[1] = function parseLookup1() {\n    const start = this.offset + this.relativeOffset;\n    const posformat = this.parseUShort();\n    if (posformat === 1) {\n        return {\n            posFormat: 1,\n            coverage: this.parsePointer(Parser.coverage),\n            value: this.parseValueRecord()\n        };\n    } else if (posformat === 2) {\n        return {\n            posFormat: 2,\n            coverage: this.parsePointer(Parser.coverage),\n            values: this.parseValueRecordList()\n        };\n    }\n    check.assert(false, '0x' + start.toString(16) + ': GPOS lookup type 1 format must be 1 or 2.');\n};\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos#lookup-type-2-pair-adjustment-positioning-subtable\nsubtableParsers[2] = function parseLookup2() {\n    const start = this.offset + this.relativeOffset;\n    const posFormat = this.parseUShort();\n    check.assert(posFormat === 1 || posFormat === 2, '0x' + start.toString(16) + ': GPOS lookup type 2 format must be 1 or 2.');\n    const coverage = this.parsePointer(Parser.coverage);\n    const valueFormat1 = this.parseUShort();\n    const valueFormat2 = this.parseUShort();\n    if (posFormat === 1) {\n        // Adjustments for Glyph Pairs\n        return {\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            pairSets: this.parseList(Parser.pointer(Parser.list(function() {\n                return {        // pairValueRecord\n                    secondGlyph: this.parseUShort(),\n                    value1: this.parseValueRecord(valueFormat1),\n                    value2: this.parseValueRecord(valueFormat2)\n                };\n            })))\n        };\n    } else if (posFormat === 2) {\n        const classDef1 = this.parsePointer(Parser.classDef);\n        const classDef2 = this.parsePointer(Parser.classDef);\n        const class1Count = this.parseUShort();\n        const class2Count = this.parseUShort();\n        return {\n            // Class Pair Adjustment\n            posFormat: posFormat,\n            coverage: coverage,\n            valueFormat1: valueFormat1,\n            valueFormat2: valueFormat2,\n            classDef1: classDef1,\n            classDef2: classDef2,\n            class1Count: class1Count,\n            class2Count: class2Count,\n            classRecords: this.parseList(class1Count, Parser.list(class2Count, function() {\n                return {\n                    value1: this.parseValueRecord(valueFormat1),\n                    value2: this.parseValueRecord(valueFormat2)\n                };\n            }))\n        };\n    }\n};\n\nsubtableParsers[3] = function parseLookup3() { return { error: 'GPOS Lookup 3 not supported' }; };\nsubtableParsers[4] = function parseLookup4() { return { error: 'GPOS Lookup 4 not supported' }; };\nsubtableParsers[5] = function parseLookup5() { return { error: 'GPOS Lookup 5 not supported' }; };\nsubtableParsers[6] = function parseLookup6() { return { error: 'GPOS Lookup 6 not supported' }; };\nsubtableParsers[7] = function parseLookup7() { return { error: 'GPOS Lookup 7 not supported' }; };\nsubtableParsers[8] = function parseLookup8() { return { error: 'GPOS Lookup 8 not supported' }; };\nsubtableParsers[9] = function parseLookup9() { return { error: 'GPOS Lookup 9 not supported' }; };\n\n// https://docs.microsoft.com/en-us/typography/opentype/spec/gpos\nfunction parseGposTable(data, start) {\n    start = start || 0;\n    const p = new Parser(data, start);\n    const tableVersion = p.parseVersion(1);\n    check.argument(tableVersion === 1 || tableVersion === 1.1, 'Unsupported GPOS table version ' + tableVersion);\n\n    if (tableVersion === 1) {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers)\n        };\n    } else {\n        return {\n            version: tableVersion,\n            scripts: p.parseScriptList(),\n            features: p.parseFeatureList(),\n            lookups: p.parseLookupList(subtableParsers),\n            variations: p.parseFeatureVariationsList()\n        };\n    }\n\n}\n\n// GPOS Writing //////////////////////////////////////////////\n// NOT SUPPORTED\nconst subtableMakers = new Array(10);\n\nfunction makeGposTable(gpos) {\n    return new table.Table('GPOS', [\n        {name: 'version', type: 'ULONG', value: 0x10000},\n        {name: 'scripts', type: 'TABLE', value: new table.ScriptList(gpos.scripts)},\n        {name: 'features', type: 'TABLE', value: new table.FeatureList(gpos.features)},\n        {name: 'lookups', type: 'TABLE', value: new table.LookupList(gpos.lookups, subtableMakers)}\n    ]);\n}\n\nexport default { parse: parseGposTable, make: makeGposTable };\n","// The `kern` table contains kerning pairs.\n// Note that some fonts use the GPOS OpenType layout table to specify kerning.\n// https://www.microsoft.com/typography/OTSPEC/kern.htm\n\nimport check from '../check';\nimport parse from '../parse';\n\nfunction parseWindowsKernTable(p) {\n    const pairs = {};\n    // Skip nTables.\n    p.skip('uShort');\n    const subtableVersion = p.parseUShort();\n    check.argument(subtableVersion === 0, 'Unsupported kern sub-table version.');\n    // Skip subtableLength, subtableCoverage\n    p.skip('uShort', 2);\n    const nPairs = p.parseUShort();\n    // Skip searchRange, entrySelector, rangeShift.\n    p.skip('uShort', 3);\n    for (let i = 0; i < nPairs; i += 1) {\n        const leftIndex = p.parseUShort();\n        const rightIndex = p.parseUShort();\n        const value = p.parseShort();\n        pairs[leftIndex + ',' + rightIndex] = value;\n    }\n    return pairs;\n}\n\nfunction parseMacKernTable(p) {\n    const pairs = {};\n    // The Mac kern table stores the version as a fixed (32 bits) but we only loaded the first 16 bits.\n    // Skip the rest.\n    p.skip('uShort');\n    const nTables = p.parseULong();\n    //check.argument(nTables === 1, 'Only 1 subtable is supported (got ' + nTables + ').');\n    if (nTables > 1) {\n        console.warn('Only the first kern subtable is supported.');\n    }\n    p.skip('uLong');\n    const coverage = p.parseUShort();\n    const subtableVersion = coverage & 0xFF;\n    p.skip('uShort');\n    if (subtableVersion === 0) {\n        const nPairs = p.parseUShort();\n        // Skip searchRange, entrySelector, rangeShift.\n        p.skip('uShort', 3);\n        for (let i = 0; i < nPairs; i += 1) {\n            const leftIndex = p.parseUShort();\n            const rightIndex = p.parseUShort();\n            const value = p.parseShort();\n            pairs[leftIndex + ',' + rightIndex] = value;\n        }\n    }\n    return pairs;\n}\n\n// Parse the `kern` table which contains kerning pairs.\nfunction parseKernTable(data, start) {\n    const p = new parse.Parser(data, start);\n    const tableVersion = p.parseUShort();\n    if (tableVersion === 0) {\n        return parseWindowsKernTable(p);\n    } else if (tableVersion === 1) {\n        return parseMacKernTable(p);\n    } else {\n        throw new Error('Unsupported kern table version (' + tableVersion + ').');\n    }\n}\n\nexport default { parse: parseKernTable };\n","// The `loca` table stores the offsets to the locations of the glyphs in the font.\n// https://www.microsoft.com/typography/OTSPEC/loca.htm\n\nimport parse from '../parse';\n\n// Parse the `loca` table. This table stores the offsets to the locations of the glyphs in the font,\n// relative to the beginning of the glyphData table.\n// The number of glyphs stored in the `loca` table is specified in the `maxp` table (under numGlyphs)\n// The loca table has two versions: a short version where offsets are stored as uShorts, and a long\n// version where offsets are stored as uLongs. The `head` table specifies which version to use\n// (under indexToLocFormat).\nfunction parseLocaTable(data, start, numGlyphs, shortVersion) {\n    const p = new parse.Parser(data, start);\n    const parseFn = shortVersion ? p.parseUShort : p.parseULong;\n    // There is an extra entry after the last index element to compute the length of the last glyph.\n    // That's why we use numGlyphs + 1.\n    const glyphOffsets = [];\n    for (let i = 0; i < numGlyphs + 1; i += 1) {\n        let glyphOffset = parseFn.call(p);\n        if (shortVersion) {\n            // The short table version stores the actual offset divided by 2.\n            glyphOffset *= 2;\n        }\n\n        glyphOffsets.push(glyphOffset);\n    }\n\n    return glyphOffsets;\n}\n\nexport default { parse: parseLocaTable };\n","// opentype.js\n// https://github.com/opentypejs/opentype.js\n// (c) 2015 Frederik De Bleser\n// opentype.js may be freely distributed under the MIT license.\n\n/* global DataView, Uint8Array, XMLHttpRequest  */\n\nimport 'string.prototype.codepointat';\nimport inflate from 'tiny-inflate';\nimport Font from './font';\nimport Glyph from './glyph';\nimport { CmapEncoding, GlyphNames, addGlyphNames } from './encoding';\nimport parse from './parse';\nimport BoundingBox from './bbox';\nimport Path from './path';\nimport { nodeBufferToArrayBuffer } from './util';\nimport cmap from './tables/cmap';\nimport cff from './tables/cff';\nimport fvar from './tables/fvar';\nimport glyf from './tables/glyf';\nimport gpos from './tables/gpos';\nimport gsub from './tables/gsub';\nimport head from './tables/head';\nimport hhea from './tables/hhea';\nimport hmtx from './tables/hmtx';\nimport kern from './tables/kern';\nimport ltag from './tables/ltag';\nimport loca from './tables/loca';\nimport maxp from './tables/maxp';\nimport _name from './tables/name';\nimport os2 from './tables/os2';\nimport post from './tables/post';\nimport meta from './tables/meta';\n\n/**\n * The opentype library.\n * @namespace opentype\n */\n\n// File loaders /////////////////////////////////////////////////////////\n/**\n * Loads a font from a file. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} path - The path of the file\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromFile(path, callback) {\n    const fs = require('fs');\n    fs.readFile(path, function(err, buffer) {\n        if (err) {\n            return callback(err.message);\n        }\n\n        callback(null, nodeBufferToArrayBuffer(buffer));\n    });\n}\n/**\n * Loads a font from a URL. The callback throws an error message as the first parameter if it fails\n * and the font as an ArrayBuffer in the second parameter if it succeeds.\n * @param  {string} url - The URL of the font file.\n * @param  {Function} callback - The function to call when the font load completes\n */\nfunction loadFromUrl(url, callback) {\n    const request = new XMLHttpRequest();\n    request.open('get', url, true);\n    request.responseType = 'arraybuffer';\n    request.onload = function() {\n        if (request.response) {\n            return callback(null, request.response);\n        } else {\n            return callback('Font could not be loaded: ' + request.statusText);\n        }\n    };\n\n    request.onerror = function () {\n        callback('Font could not be loaded');\n    };\n\n    request.send();\n}\n\n// Table Directory Entries //////////////////////////////////////////////\n/**\n * Parses OpenType table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseOpenTypeTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 12;\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const checksum = parse.getULong(data, p + 4);\n        const offset = parse.getULong(data, p + 8);\n        const length = parse.getULong(data, p + 12);\n        tableEntries.push({tag: tag, checksum: checksum, offset: offset, length: length, compression: false});\n        p += 16;\n    }\n\n    return tableEntries;\n}\n\n/**\n * Parses WOFF table entries.\n * @param  {DataView}\n * @param  {Number}\n * @return {Object[]}\n */\nfunction parseWOFFTableEntries(data, numTables) {\n    const tableEntries = [];\n    let p = 44; // offset to the first table directory entry.\n    for (let i = 0; i < numTables; i += 1) {\n        const tag = parse.getTag(data, p);\n        const offset = parse.getULong(data, p + 4);\n        const compLength = parse.getULong(data, p + 8);\n        const origLength = parse.getULong(data, p + 12);\n        let compression;\n        if (compLength < origLength) {\n            compression = 'WOFF';\n        } else {\n            compression = false;\n        }\n\n        tableEntries.push({tag: tag, offset: offset, compression: compression,\n            compressedLength: compLength, length: origLength});\n        p += 20;\n    }\n\n    return tableEntries;\n}\n\n/**\n * @typedef TableData\n * @type Object\n * @property {DataView} data - The DataView\n * @property {number} offset - The data offset.\n */\n\n/**\n * @param  {DataView}\n * @param  {Object}\n * @return {TableData}\n */\nfunction uncompressTable(data, tableEntry) {\n    if (tableEntry.compression === 'WOFF') {\n        const inBuffer = new Uint8Array(data.buffer, tableEntry.offset + 2, tableEntry.compressedLength - 2);\n        const outBuffer = new Uint8Array(tableEntry.length);\n        inflate(inBuffer, outBuffer);\n        if (outBuffer.byteLength !== tableEntry.length) {\n            throw new Error('Decompression error: ' + tableEntry.tag + ' decompressed length doesn\\'t match recorded length');\n        }\n\n        const view = new DataView(outBuffer.buffer, 0);\n        return {data: view, offset: 0};\n    } else {\n        return {data: data, offset: tableEntry.offset};\n    }\n}\n\n// Public API ///////////////////////////////////////////////////////////\n\n/**\n * Parse the OpenType file data (as an ArrayBuffer) and return a Font object.\n * Throws an error if the font could not be parsed.\n * @param  {ArrayBuffer}\n * @param  {Object} opt - options for parsing\n * @return {opentype.Font}\n */\nfunction parseBuffer(buffer, opt) {\n    opt = (opt === undefined || opt === null) ?  {} : opt;\n\n    let indexToLocFormat;\n    let ltagTable;\n\n    // Since the constructor can also be called to create new fonts from scratch, we indicate this\n    // should be an empty font that we'll fill with our own data.\n    const font = new Font({empty: true});\n\n    // OpenType fonts use big endian byte ordering.\n    // We can't rely on typed array view types, because they operate with the endianness of the host computer.\n    // Instead we use DataViews where we can specify endianness.\n    const data = new DataView(buffer, 0);\n    let numTables;\n    let tableEntries = [];\n    const signature = parse.getTag(data, 0);\n    if (signature === String.fromCharCode(0, 1, 0, 0) || signature === 'true' || signature === 'typ1') {\n        font.outlinesFormat = 'truetype';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'OTTO') {\n        font.outlinesFormat = 'cff';\n        numTables = parse.getUShort(data, 4);\n        tableEntries = parseOpenTypeTableEntries(data, numTables);\n    } else if (signature === 'wOFF') {\n        const flavor = parse.getTag(data, 4);\n        if (flavor === String.fromCharCode(0, 1, 0, 0)) {\n            font.outlinesFormat = 'truetype';\n        } else if (flavor === 'OTTO') {\n            font.outlinesFormat = 'cff';\n        } else {\n            throw new Error('Unsupported OpenType flavor ' + signature);\n        }\n\n        numTables = parse.getUShort(data, 12);\n        tableEntries = parseWOFFTableEntries(data, numTables);\n    } else {\n        throw new Error('Unsupported OpenType signature ' + signature);\n    }\n\n    let cffTableEntry;\n    let fvarTableEntry;\n    let glyfTableEntry;\n    let gposTableEntry;\n    let gsubTableEntry;\n    let hmtxTableEntry;\n    let kernTableEntry;\n    let locaTableEntry;\n    let nameTableEntry;\n    let metaTableEntry;\n    let p;\n\n    for (let i = 0; i < numTables; i += 1) {\n        const tableEntry = tableEntries[i];\n        let table;\n        switch (tableEntry.tag) {\n            case 'cmap':\n                table = uncompressTable(data, tableEntry);\n                font.tables.cmap = cmap.parse(table.data, table.offset);\n                font.encoding = new CmapEncoding(font.tables.cmap);\n                break;\n            case 'cvt ' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.cvt = p.parseShortList(tableEntry.length / 2);\n                break;\n            case 'fvar':\n                fvarTableEntry = tableEntry;\n                break;\n            case 'fpgm' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.fpgm = p.parseByteList(tableEntry.length);\n                break;\n            case 'head':\n                table = uncompressTable(data, tableEntry);\n                font.tables.head = head.parse(table.data, table.offset);\n                font.unitsPerEm = font.tables.head.unitsPerEm;\n                indexToLocFormat = font.tables.head.indexToLocFormat;\n                break;\n            case 'hhea':\n                table = uncompressTable(data, tableEntry);\n                font.tables.hhea = hhea.parse(table.data, table.offset);\n                font.ascender = font.tables.hhea.ascender;\n                font.descender = font.tables.hhea.descender;\n                font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;\n                break;\n            case 'hmtx':\n                hmtxTableEntry = tableEntry;\n                break;\n            case 'ltag':\n                table = uncompressTable(data, tableEntry);\n                ltagTable = ltag.parse(table.data, table.offset);\n                break;\n            case 'maxp':\n                table = uncompressTable(data, tableEntry);\n                font.tables.maxp = maxp.parse(table.data, table.offset);\n                font.numGlyphs = font.tables.maxp.numGlyphs;\n                break;\n            case 'name':\n                nameTableEntry = tableEntry;\n                break;\n            case 'OS/2':\n                table = uncompressTable(data, tableEntry);\n                font.tables.os2 = os2.parse(table.data, table.offset);\n                break;\n            case 'post':\n                table = uncompressTable(data, tableEntry);\n                font.tables.post = post.parse(table.data, table.offset);\n                font.glyphNames = new GlyphNames(font.tables.post);\n                break;\n            case 'prep' :\n                table = uncompressTable(data, tableEntry);\n                p = new parse.Parser(table.data, table.offset);\n                font.tables.prep = p.parseByteList(tableEntry.length);\n                break;\n            case 'glyf':\n                glyfTableEntry = tableEntry;\n                break;\n            case 'loca':\n                locaTableEntry = tableEntry;\n                break;\n            case 'CFF ':\n                cffTableEntry = tableEntry;\n                break;\n            case 'kern':\n                kernTableEntry = tableEntry;\n                break;\n            case 'GPOS':\n                gposTableEntry = tableEntry;\n                break;\n            case 'GSUB':\n                gsubTableEntry = tableEntry;\n                break;\n            case 'meta':\n                metaTableEntry = tableEntry;\n                break;\n        }\n    }\n\n    const nameTable = uncompressTable(data, nameTableEntry);\n    font.tables.name = _name.parse(nameTable.data, nameTable.offset, ltagTable);\n    font.names = font.tables.name;\n\n    if (glyfTableEntry && locaTableEntry) {\n        const shortVersion = indexToLocFormat === 0;\n        const locaTable = uncompressTable(data, locaTableEntry);\n        const locaOffsets = loca.parse(locaTable.data, locaTable.offset, font.numGlyphs, shortVersion);\n        const glyfTable = uncompressTable(data, glyfTableEntry);\n        font.glyphs = glyf.parse(glyfTable.data, glyfTable.offset, locaOffsets, font, opt);\n    } else if (cffTableEntry) {\n        const cffTable = uncompressTable(data, cffTableEntry);\n        cff.parse(cffTable.data, cffTable.offset, font, opt);\n    } else {\n        throw new Error('Font doesn\\'t contain TrueType or CFF outlines.');\n    }\n\n    const hmtxTable = uncompressTable(data, hmtxTableEntry);\n    hmtx.parse(font, hmtxTable.data, hmtxTable.offset, font.numberOfHMetrics, font.numGlyphs, font.glyphs, opt);\n    addGlyphNames(font, opt);\n\n    if (kernTableEntry) {\n        const kernTable = uncompressTable(data, kernTableEntry);\n        font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);\n    } else {\n        font.kerningPairs = {};\n    }\n\n    if (gposTableEntry) {\n        const gposTable = uncompressTable(data, gposTableEntry);\n        font.tables.gpos = gpos.parse(gposTable.data, gposTable.offset);\n        font.position.init();\n    }\n\n    if (gsubTableEntry) {\n        const gsubTable = uncompressTable(data, gsubTableEntry);\n        font.tables.gsub = gsub.parse(gsubTable.data, gsubTable.offset);\n    }\n\n    if (fvarTableEntry) {\n        const fvarTable = uncompressTable(data, fvarTableEntry);\n        font.tables.fvar = fvar.parse(fvarTable.data, fvarTable.offset, font.names);\n    }\n\n    if (metaTableEntry) {\n        const metaTable = uncompressTable(data, metaTableEntry);\n        font.tables.meta = meta.parse(metaTable.data, metaTable.offset);\n        font.metas = font.tables.meta;\n    }\n\n    return font;\n}\n\n/**\n * Asynchronously load the font from a URL or a filesystem. When done, call the callback\n * with two arguments `(err, font)`. The `err` will be null on success,\n * the `font` is a Font object.\n * We use the node.js callback convention so that\n * opentype.js can integrate with frameworks like async.js.\n * @alias opentype.load\n * @param  {string} url - The URL of the font to load.\n * @param  {Function} callback - The callback.\n */\nfunction load(url, callback, opt) {\n    const isNode = typeof window === 'undefined';\n    const loadFn = isNode ? loadFromFile : loadFromUrl;\n\n    return new Promise((resolve, reject) => {\n        loadFn(url, function(err, arrayBuffer) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                } else {\n                    reject(err);\n                }\n            }\n            let font;\n            try {\n                font = parseBuffer(arrayBuffer, opt);\n            } catch (e) {\n                if (callback) {\n                    return callback(e, null);\n                } else {\n                    reject(e);\n                }\n            }\n            if (callback) {\n                return callback(null, font);\n            } else {\n                resolve(font);\n            }\n        });\n    });\n}\n\n/**\n * Synchronously load the font from a URL or file.\n * When done, returns the font object or throws an error.\n * @alias opentype.loadSync\n * @param  {string} url - The URL of the font to load.\n * @param  {Object} opt - opt.lowMemory\n * @return {opentype.Font}\n */\nfunction loadSync(url, opt) {\n    const fs = require('fs');\n    const buffer = fs.readFileSync(url);\n    return parseBuffer(nodeBufferToArrayBuffer(buffer), opt);\n}\n\nexport {\n    Font,\n    Glyph,\n    Path,\n    BoundingBox,\n    parse as _parse,\n    parseBuffer as parse,\n    load,\n    loadSync\n};\n","import * as opentype from \"opentype.js\"\nimport {\n  arrayFromFunction,\n  assert,\n  assertf,\n  assertInst,\n  assertNumbers,\n  assertVectors,\n  callsce,\n  eq,\n  eq0,\n  getLast,\n  GOLDEN_RATIO,\n  int,\n  le,\n  lerp,\n  lt,\n  M4,\n  MINUS,\n  raddd,\n  snap,\n  TAU,\n  V,\n  V3,\n  VV,\n} from \"ts3dutils\"\n\nimport {\n  BezierCurve,\n  BRep,\n  ConicSurface,\n  Curve,\n  CylinderSurface,\n  Edge,\n  EllipseCurve,\n  EllipsoidSurface,\n  Face,\n  FaceInfoFactory,\n  getGlobalId,\n  L3,\n  NURBS,\n  P3,\n  PCurveEdge,\n  PlaneFace,\n  PlaneSurface,\n  ProjectedCurveSurface,\n  RotatedCurveSurface,\n  StraightEdge,\n  Surface,\n  XiEtaCurve,\n  createEdge,\n  edgeForCurveAndTs,\n  edgePathFromSVG,\n} from \".\"\n\nimport { max, min, PI, SQRT1_2 } from \"./math\"\nimport { NURBSSurface } from \"./surface/NURBSSurface\"\n\n/**\n * Create a surface by projecting a curve in a direction.\n *\n * @param curve The curve to project.\n * @param offset The direction and distance to project curve.\n * @param flipped Whether the surface's default orientation (normal = curve tangent cross offset) should be flipped.\n */\nexport function projectCurve(\n  curve: Curve,\n  offset: V3,\n  flipped: boolean,\n): Surface {\n  if (curve instanceof L3) {\n    const surfaceNormal = offset.cross(curve.dir1).toLength(flipped ? -1 : 1)\n    return new PlaneSurface(P3.normalOnAnchor(surfaceNormal, curve.anchor))\n  }\n  if (curve instanceof EllipseCurve) {\n    const curveDir = flipped ? offset : offset.negated()\n    return new CylinderSurface(curve, curveDir.unit(), undefined, undefined)\n  }\n  if (curve instanceof BezierCurve || curve instanceof XiEtaCurve) {\n    const curveDir = offset.times(flipped ? 1 : -1)\n    return new ProjectedCurveSurface(\n      curve,\n      curveDir,\n      undefined,\n      undefined,\n      flipped ? 0 : -1,\n      flipped ? 1 : 0,\n    )\n  }\n  throw new Error()\n}\n\n/**\n * Create a surface by projecting a curve onto a point.\n */\nexport function projectPointCurve(\n  curve: Curve,\n  tMin = curve.tMin,\n  tMax = curve.tMax,\n  p: V3,\n  flipped: boolean,\n): Surface {\n  if (curve instanceof L3) {\n    const up = curve.anchor.to(p).rejectedFrom(curve.dir1)\n    return PlaneSurface.forAnchorAndPlaneVectors(\n      curve.anchor,\n      curve.dir1,\n      up.unit(),\n      tMin,\n      tMax,\n      0,\n      up.length(),\n    )\n  } else if (curve instanceof EllipseCurve) {\n    // flip f2 by default\n    const factor = -1 * (flipped ? -1 : 1)\n    return new ConicSurface(\n      p,\n      curve.f1.times(factor),\n      curve.f2,\n      p.to(curve.center),\n      tMin,\n      tMax,\n      0,\n      1,\n    )\n  } else {\n    throw new Error(\n      \"projectPointCurve not implemented for \" + curve.constructor.name,\n    )\n  }\n}\n\n/**\n * Create a surface by rotating a curve in the XZ-plane, with X > 0, around the Z-axis according to the right-hand rule.\n * @param curve The curve to rotate.\n * @param tMin The minimum value for t for which the surface should be defined.\n * @param tMax The maximum value for t for which the surface should be defined.\n * @param angle How much the curve should be rotated. sMin/sMax will be be 0/angle.\n * @param flipped Whether the surface's default orientation (normal = curve tangent cross rotation tangent) should be\n * flipped.\n */\nexport function rotateCurve(\n  curve: Curve,\n  tMin = curve.tMin,\n  tMax = curve.tMax,\n  angle: raddd,\n  flipped: boolean,\n): Surface | undefined {\n  assertf(() => new PlaneSurface(P3.ZX).containsCurve(curve))\n  if (curve instanceof L3) {\n    if (curve.dir1.isParallelTo(V3.Z)) {\n      if (eq0(curve.anchor.x)) {\n        return undefined\n        //throw new Error('Cannot rotate curve colinear to Z axis.')\n      }\n      const baseEllipse = new EllipseCurve(\n        V3.O,\n        curve.anchor.xy(),\n        curve.anchor.xy().getPerpendicular(),\n        0,\n        angle,\n      )\n      // if curve.dir1 is going up (+Z), it the cylinder surface should face inwards\n      const factor = (curve.dir1.z > 0 ? -1 : 1) * (flipped ? -1 : 1)\n      const [zMin, zMax] = [\n        curve.at(tMin).z * factor,\n        curve.at(tMax).z * factor,\n      ].sort(MINUS)\n      return new CylinderSurface(\n        baseEllipse,\n        V3.Z.times(factor),\n        0,\n        angle,\n        zMin,\n        zMax,\n      )\n    }\n    if (\n      curve.at(tMin).xy().dot(curve.dir1) *\n        curve.at(tMax).xy().dot(curve.dir1) <\n      0\n    ) {\n      throw new Error(\n        \"line cannot cross the Z axis in the [tMin, tMax] interval, as conic surfaces cannot have an hourglass shape.\",\n      )\n    }\n    if (curve.dir1.isPerpendicularTo(V3.Z)) {\n      // if line.dir1 is pointing aways from V3.Z, then the surface should face up\n      const factor =\n        (curve.at(lerp(tMin, tMax, 0.5)).dot(curve.dir1) > 0 ? 1 : -1) *\n        (flipped ? -1 : 1)\n      return new PlaneSurface(\n        new P3(V3.Z.times(factor), curve.anchor.z * factor),\n      )\n    } else {\n      // apex is intersection of segment with Z-axis\n      const a = curve.at(tMin),\n        b = curve.at(tMax)\n      const apexZ = a.z - (a.x * (b.z - a.z)) / (b.x - a.x)\n      const apex = new V3(0, 0, apexZ)\n      const factor = -(a.x > b.x ? -1 : 1) * (flipped ? -1 : 1)\n      const s = new ConicSurface(\n        apex,\n        new V3(curve.dir1.lengthXY(), 0, 0),\n        new V3(0, curve.dir1.lengthXY(), 0),\n        new V3(0, 0, (a.x > b.x ? -1 : 1) * curve.dir1.z),\n        0,\n        angle,\n        0,\n        1,\n      )\n      return factor > 0 ? s : s.flipped()\n    }\n  }\n  if (curve instanceof EllipseCurve) {\n    const a = curve.at(tMin),\n      b = curve.at(tMax)\n    const ell = curve.rightAngled()\n    const f1Perp = ell.f1.isPerpendicularTo(V3.Z),\n      f2Perp = ell.f2.isPerpendicularTo(V3.Z)\n    if (L3.Z.containsPoint(ell.center) && (f1Perp || f2Perp)) {\n      flipped = flipped == a.z > b.z\n      let width = ell.f1.length(),\n        height = ell.f2.length()\n      if (ell.f1.isParallelTo(V3.Z)) {\n        ;[width, height] = [height, width]\n      }\n      return EllipsoidSurface.forABC(\n        width,\n        (!flipped ? 1 : -1) * width,\n        height,\n        ell.center,\n      )\n    } else {\n      const s = new RotatedCurveSurface(curve, M4.IDENTITY, tMin, tMax)\n      return s\n    }\n  }\n  throw new Error()\n}\n\nexport namespace B2T {\n  /**\n   * Create a [BRep] of an axis-aligned box width starting at the origin and extending into +XYZ space.\n   * @param width x-direction size.\n   * @param height y-direction size.\n   * @param depth z-direction size.\n   * @param name\n   */\n  export function box(\n    width: number = 1,\n    height: number = 1,\n    depth: number = 1,\n    name: string = \"box\" + getGlobalId(),\n  ): BRep {\n    assertNumbers(width, height, depth)\n    assert(\"string\" === typeof name)\n    const baseVertices = [\n      new V3(0, 0, 0),\n      new V3(0, height, 0),\n      new V3(width, height, 0),\n      new V3(width, 0, 0),\n    ]\n    const generator = callsce(\"B2T.box\", width, height, depth, name)\n    return B2T.extrudeVertices(\n      baseVertices,\n      P3.XY.flipped(),\n      new V3(0, 0, depth),\n      name,\n      generator,\n    )\n  }\n\n  export function puckman(\n    radius: number,\n    rads: raddd,\n    height: number,\n    name: string = \"puckman\" + getGlobalId(),\n  ): BRep {\n    assertf(() => lt(0, radius))\n    assertf(() => lt(0, rads) && le(rads, TAU))\n    assertf(() => lt(0, height))\n    const edges = StraightEdge.chain(\n      [\n        V3.O,\n        new V3(radius, 0, 0),\n        new V3(radius, 0, height),\n        new V3(0, 0, height),\n      ],\n      true,\n    )\n    return B2T.rotateEdges(edges, rads, name)\n  }\n\n  export function registerVertexName(\n    map: Map<V3, string>,\n    name: string,\n    p: V3,\n  ) {\n    // TODO\n    if (!Array.from(map.keys()).some((p2) => p2.like(p))) {\n      map.set(p, name)\n    }\n  }\n\n  /**\n   * Create a [BRep] by projecting a number of edges in a direction.\n   * @param baseFaceEdges\n   * @param baseFacePlane\n   * @param offset\n   * @param name\n   * @param gen\n   * @param infoFactory\n   */\n  export function extrudeEdges(\n    baseFaceEdges: Edge[],\n    baseFacePlane: P3 = P3.XY,\n    offset: V3 = V3.Z,\n    name: string = \"extrude\" + getGlobalId(),\n    gen?: string,\n    infoFactory?: FaceInfoFactory<any>,\n  ): BRep {\n    baseFaceEdges = fixEdges(baseFaceEdges)\n    //Array.from(combinations(baseFaceEdges.length)).forEach(({i, j}) => {\n    //\tassertf(() => !Edge.edgesIntersect(baseFaceEdges[i], baseFaceEdges[j]), baseFaceEdges[i].sce +\n    // baseFaceEdges[j].sce) })\n    assertf(() => Edge.isLoop(baseFaceEdges))\n    // TODO checks..\n    //if (offset.dot(baseFacePlane.normal1) > 0) {\n    //\tbaseFacePlane = baseFacePlane.flipped()\n    //}\n    const vertexNames = new Map()\n    const basePlaneSurface = new PlaneSurface(baseFacePlane)\n    //assert(basePlaneSurface.edgeLoopCCW(baseFaceEdges), 'edges not CCW on baseFacePlane')\n    const translationMatrix = M4.translate(offset)\n    const topEdges = baseFaceEdges.map((edge) =>\n      edge.transform(translationMatrix, \"top\"),\n    ) as Edge[]\n    const edgeCount = baseFaceEdges.length\n\n    const bottomInfo =\n      infoFactory && infoFactory.extrudeBottom(basePlaneSurface, baseFaceEdges)\n    const bottomFace = new PlaneFace(\n      basePlaneSurface,\n      baseFaceEdges,\n      [],\n      name + \"Bottom\",\n      bottomInfo,\n    )\n\n    const topFaceEdges = topEdges.map((edge) => edge.flipped()).reverse()\n    const topSurface = new PlaneSurface(\n      baseFacePlane.flipped().translated(offset),\n    )\n    const topInfo =\n      infoFactory && infoFactory.extrudeBottom(topSurface, topFaceEdges)\n    const topFace = new PlaneFace(\n      topSurface,\n      topFaceEdges,\n      [],\n      name + \"Top\",\n      topInfo,\n    )\n\n    baseFaceEdges.forEach((edge) =>\n      B2T.registerVertexName(vertexNames, edge.name + \"A\", edge.a),\n    )\n    topFaceEdges.forEach((edge) =>\n      B2T.registerVertexName(vertexNames, edge.name + \"A\", edge.a),\n    )\n\n    const ribs = arrayFromFunction(edgeCount, (i) =>\n      StraightEdge.throughPoints(\n        baseFaceEdges[i].a,\n        topEdges[i].a,\n        name + \"Rib\" + i,\n      ),\n    )\n\n    const faces = baseFaceEdges.map((edge, i) => {\n      const faceName = name + \"Wall\" + i\n      const j = (i + 1) % edgeCount\n      const faceEdges = [\n        baseFaceEdges[i].flipped(),\n        ribs[i],\n        topEdges[i],\n        ribs[j].flipped(),\n      ]\n      const surface = projectCurve(edge.curve, offset, edge.reversed)\n      const info = infoFactory && infoFactory.extrudeWall(i, surface, faceEdges)\n      return Face.create(surface, faceEdges, undefined, faceName, info)\n    }) as Face[]\n    faces.push(bottomFace, topFace)\n    gen =\n      gen ||\n      callsce(\"B2T.extrudeEdges\", baseFaceEdges, baseFacePlane, offset, name)\n    return new BRep(\n      faces,\n      baseFacePlane.normal1.dot(offset) > 0,\n      gen,\n      vertexNames,\n    )\n  }\n\n  export function cylinder(\n    radius: number = 1,\n    height: number = 1,\n    rads: raddd = TAU,\n    name: string = \"cylinder\" + getGlobalId(),\n  ): BRep {\n    const vertices = [\n      new V3(0, 0, 0),\n      new V3(radius, 0, 0),\n      new V3(radius, 0, height),\n      new V3(0, 0, height),\n    ]\n    return rotateEdges(StraightEdge.chain(vertices, true), rads, name)\n  }\n\n  export function cone(\n    radius: number = 1,\n    height: number = 1,\n    rads: raddd = TAU,\n    name: string = \"cone\" + getGlobalId(),\n  ): BRep {\n    const vertices = [\n      new V3(0, 0, 0),\n      new V3(radius, 0, height),\n      new V3(0, 0, height),\n    ]\n    return rotateEdges(StraightEdge.chain(vertices, true), rads, name)\n  }\n\n  export function sphere(\n    radius: number = 1,\n    name: string = \"sphere\" + getGlobalId(),\n    rot: raddd = TAU,\n  ): BRep {\n    const ee = new PCurveEdge(\n      new EllipseCurve(V3.O, new V3(0, 0, -radius), new V3(radius, 0, 0)),\n      new V3(0, 0, -radius),\n      new V3(0, 0, radius),\n      0,\n      PI,\n      undefined,\n      new V3(radius, 0, 0),\n      new V3(-radius, 0, 0),\n    )\n    const generator = callsce(\"B2T.sphere\", radius, name, rot)\n    return rotateEdges(\n      [StraightEdge.throughPoints(ee.b, ee.a), ee],\n      rot,\n      name,\n      generator,\n    )\n  }\n\n  /**\n   * Create a [[BRep]] of a menger sponge.\n   * @param res 0: just a cube, 1: every cube face has one hole, 2: 9 holes, etc\n   * @param name\n   */\n  export function menger(\n    res: int = 2,\n    name: string = \"menger\" + getGlobalId(),\n  ): BRep {\n    let result = B2T.box(1, 1, 1)\n    if (0 == res) return result\n    const punch = B2T.box(1 / 3, 1 / 3, 2)\n      .translate(1 / 3, 1 / 3, -1 / 2)\n      .flipped()\n\n    function recurse(steps: int, m4: M4) {\n      result = result.and(punch.transform(m4))\n      if (steps > 1) {\n        const scaled = m4.times(M4.scale(1 / 3, 1 / 3, 1))\n        for (let i = 0; i < 9; i++) {\n          if (4 == i) continue\n          recurse(steps - 1, scaled.times(M4.translate(i % 3, (i / 3) | 0, 0)))\n        }\n      }\n    }\n\n    recurse(res, M4.IDENTITY)\n    recurse(res, M4.YZX)\n    recurse(res, M4.ZXY)\n    return result\n  }\n\n  export function menger2(\n    res: int = 2,\n    name: string = \"menger\" + getGlobalId(),\n  ): BRep {\n    if (0 == res) return B2T.box(1, 1, 1)\n\n    const punch = B2T.box(1 / 3, 1 / 3, 2)\n      .translate(1 / 3, 1 / 3, -1 / 2)\n      .flipped()\n    const stencilFaces: Face[] = []\n\n    function recurse(steps: int, m4: M4) {\n      stencilFaces.push(...punch.transform(m4).faces)\n      if (steps > 1) {\n        const scaled = m4.times(M4.scale(1 / 3, 1 / 3, 1))\n        for (let i = 0; i < 9; i++) {\n          if (4 == i) continue\n          recurse(steps - 1, scaled.times(M4.translate(i % 3, (i / 3) | 0, 0)))\n        }\n      }\n    }\n\n    recurse(res, M4.IDENTITY)\n    const stencil = new BRep(stencilFaces, true)\n\n    return B2T.box(1, 1, 1, name)\n      .and(stencil)\n      .and(stencil.transform(M4.YZX))\n      .and(stencil.transform(M4.ZXY))\n  }\n\n  /**\n   * Create a [BRep] of a torus.\n   * @param rSmall The radius to the surface of the torus.\n   * @param rLarge The radius from the origin to the inside of the torus.\n   * @param rads\n   * @param name\n   */\n  export function torus(\n    rSmall: number,\n    rLarge: number,\n    rads: raddd = TAU,\n    name: string = \"torus\" + getGlobalId(),\n  ): BRep {\n    assertNumbers(rSmall, rLarge, rads)\n    assertf(() => rLarge > rSmall)\n    const curves = [\n      EllipseCurve.semicircle(rSmall, new V3(rLarge, 0, 0)),\n      EllipseCurve.semicircle(-rSmall, new V3(rLarge, 0, 0)),\n    ]\n    const baseEdges = curves.map((c) =>\n      PCurveEdge.forCurveAndTs(c, 0, Math.PI).rotateX(PI / 2),\n    )\n    return B2T.rotateEdges(baseEdges, rads, name)\n  }\n\n  /**\n   * Create a [BRep] by smoothly rotating edges around Z.\n   * baseLoop should be CCW on XZ plane for a bounded BRep\n   */\n  export function rotateEdges(\n    baseLoop: Edge[],\n    totalRads: raddd,\n    name: string = \"rotateEdges\" + getGlobalId(),\n    generator?: string,\n    infoFactory?: FaceInfoFactory<any>,\n  ): BRep {\n    assert(\n      baseLoop.every((e) => new PlaneSurface(P3.ZX).containsCurve(e.curve)),\n    )\n    assert(!eq(PI, totalRads) || PI == totalRads) // URHGJ\n    assertf(() => lt(0, totalRads) && le(totalRads, TAU))\n    totalRads = snap(totalRads, TAU)\n    assertf(() => Edge.isLoop(baseLoop))\n    const basePlane = new PlaneSurface(P3.ZX.flipped()).edgeLoopCCW(baseLoop)\n      ? new PlaneSurface(P3.ZX.flipped())\n      : new PlaneSurface(P3.ZX)\n    // const rotationSteps = ceil((totalRads - NLA_PRECISION) / PI)\n    // const angles = rotationSteps == 1 ? [-PI, -PI + totalRads] : [-PI, 0, totalRads - PI]\n    const open = !eq(totalRads, 2 * PI)\n    const baseRibCurves = baseLoop.map((edge) => {\n      const a = edge.a,\n        radius = a.lengthXY()\n      if (!eq0(radius)) {\n        return new EllipseCurve(V(0, 0, a.z), V(radius, 0, 0), V(0, radius, 0))\n      }\n      return undefined\n    })\n    const baseSurfaces = baseLoop.map((edge) => {\n      const s = rotateCurve(\n        edge.curve,\n        edge.minT,\n        edge.maxT,\n        PI,\n        edge.deltaT() > 0,\n      )\n      const t = lerp(edge.aT, edge.bT, 0.5)\n      s &&\n        assert(\n          edge\n            .tangentAt(t)\n            .cross(V3.Y)\n            .dot(s.normalP(edge.curve.at(t))) < 0,\n        )\n      return s\n    })\n    let stepStartEdges = baseLoop,\n      stepEndEdges: Edge[]\n    const faces = []\n    for (let rot = 0; rot < totalRads; rot += PI) {\n      const aT = 0,\n        bT = min(totalRads - rot, PI)\n      const rotation = M4.rotateZ(rot + bT)\n      stepEndEdges =\n        rot + bT == TAU\n          ? baseLoop\n          : baseLoop.map((edge) => edge.transform(rotation))\n      const ribs = arrayFromFunction(baseLoop.length, (i) => {\n        const a = stepStartEdges[i].a,\n          radius = a.lengthXY()\n        const b = stepEndEdges[i].a\n        if (!eq0(radius)) {\n          const curve =\n            0 === rot ? baseRibCurves[i]! : baseRibCurves[i]!.rotateZ(rot)\n          return new PCurveEdge(\n            curve,\n            a,\n            b,\n            aT,\n            bT,\n            undefined,\n            curve.tangentAt(aT),\n            curve.tangentAt(bT),\n            name + \"rib\" + i,\n          )\n        }\n        return undefined\n      })\n      for (let edgeIndex = 0; edgeIndex < baseLoop.length; edgeIndex++) {\n        if (baseSurfaces[edgeIndex]) {\n          const edge = stepStartEdges[edgeIndex]\n          const ipp = (edgeIndex + 1) % baseLoop.length\n          const faceEdges = [\n            stepStartEdges[edgeIndex].flipped(),\n            !eq0(edge.a.x) && ribs[edgeIndex],\n            stepEndEdges[edgeIndex],\n            !eq0(edge.b.x) && ribs[ipp]!.flipped(),\n          ].filter((x: any): x is Edge => x)\n          const surface =\n            0 === rot\n              ? baseSurfaces[edgeIndex]!\n              : baseSurfaces[edgeIndex]!.rotateZ(rot)\n          const info =\n            infoFactory &&\n            infoFactory.extrudeWall(edgeIndex, surface, faceEdges, undefined)\n          faces.push(\n            Face.create(\n              surface,\n              faceEdges,\n              undefined,\n              name + \"Wall\" + edgeIndex,\n              info,\n            ),\n          )\n        }\n      }\n      stepStartEdges = stepEndEdges\n    }\n    if (open) {\n      const endFaceEdges = Edge.reversePath(stepEndEdges!)\n      const infoStart =\n        infoFactory && infoFactory.rotationStart(basePlane, baseLoop, undefined)\n      const infoEnd =\n        infoFactory &&\n        infoFactory.rotationEnd(\n          basePlane.flipped().rotateZ(totalRads),\n          endFaceEdges,\n          undefined,\n        )\n      faces.push(\n        new PlaneFace(\n          basePlane,\n          baseLoop,\n          undefined,\n          name + \"start\",\n          infoStart,\n        ),\n        new PlaneFace(\n          basePlane.flipped().rotateZ(totalRads),\n          endFaceEdges,\n          undefined,\n          name + \"end\",\n          infoEnd,\n        ),\n      )\n    }\n    const infiniteVolume = new PlaneSurface(P3.ZX).edgeLoopCCW(baseLoop)\n    return new BRep(faces, infiniteVolume, generator)\n  }\n\n  /**\n   * loop should be CCW on XZ plane for a bounded BRep\n   */\n  //export function rotateEdgesUnsplit(loop: Edge[], rads: raddd, name: string): BRep {\n  //\tassert(Edge.isLoop(loop))\n  //\tconst rotationMatrix = M4.rotateZ(rads)\n  //\tconst open = !eq(rads, 2 * PI)\n  //\tconst endEdges = open ? loop.map(edge => edge.transform(rotationMatrix)) : loop\n  //\tconst edgeCount = loop.length\n  //\tconst ribs = arrayFromFunction(edgeCount, i => {\n  //\t\tconst a = loop[i].a, radius = a.lengthXY()\n  //\t\tconst b = endEdges[i].a\n  //\t\tif (!eq0(radius)) {\n  //\t\t\tconst curve = new EllipseCurve(V(0, 0, a.z), V(-radius, 0, 0), V(0, -radius, 0))\n  //\t\t\tconst aT = -PI, bT = -PI + rads\n  //\t\t\treturn new PCurveEdge(curve, a, b, aT, bT, undefined, curve.tangentAt(aT), curve.tangentAt(bT), name\n  // + 'rib' + i) } }) const faces = loop.map((edge, i) => { const ipp = (i + 1) % edgeCount console.log('ljl', i,\n  // ipp, ribs) const faceEdges = [ edge.flipped(), !eq0(edge.a.x) && ribs[i], endEdges[i], !eq0(edge.b.x) &&\n  // ribs[ipp].flipped()].filter(x => x) if (edge instanceof StraightEdge) { const line = edge.curve let surface if\n  // (line.dir1.isParallelTo(V3.Z)) { if (eq0(edge.a.x)) { return } let flipped = edge.a.z > edge.b.z surface = new\n  // CylinderSurface(ribs[i].curve, !flipped ? V3.Z : V3.Z.negated()) } else if\n  // (line.dir1.isPerpendicularTo(V3.Z)) { let flipped = edge.a.x > edge.b.x let surface = new PlaneSurface(new\n  // P3(V3.Z, edge.a.z)) if (!flipped) surface = surface.flipped() if (!open) { const hole = flipped ? !eq0(edge.b.x)\n  // && ribs[ipp].flipped() : !eq0(edge.a.x) && ribs[i] return new PlaneFace(surface, [flipped ? ribs[i] :\n  // ribs[ipp].flipped()], hole && [[hole]]) } return new PlaneFace(surface, faceEdges) } else { // apex is\n  // intersection of segment with Z-axis let a = edge.a, b = edge.b let apexZ = a.z - a.x * (b.z - a.z) / (b.x - a.x)\n  // let apex = new V3(0, 0, apexZ) let flipped = edge.a.z > edge.b.z surface =\n  // ConicSurface.atApexThroughEllipse(apex, ribs[a.x > b.x ? i : ipp].curve as EllipseCurve, !flipped ? 1 : -1)\n  // } return Face.create(surface, faceEdges) } if (edge.curve instanceof EllipseCurve) { let flipped = undefined\n  // let ell = edge.curve.rightAngled() let f1Perp = ell.f1.isPerpendicularTo(V3.Z), f2Perp =\n  // ell.f2.isPerpendicularTo(V3.Z) if (L3.Z.containsPoint(ell.center) && (f1Perp || f2Perp)) { let f3length = f1Perp\n  // ? ell.f1.length() : ell.f2.length() if (flipped) { f3length *= -1 } let surface = new\n  // EllipsoidSurface(ell.center, ell.f1, ell.f2, ell.f1.cross(ell.f2).toLength(f3length)) return new\n  // RotationFace(surface, faceEdges) } } else { assert(false, edge) } }).filter(x => x) if (open) { const\n  // endFaceEdges = endEdges.map(edge => edge.flipped()).reverse() faces.push( new PlaneFace(new\n  // PlaneSurface(P3.ZX.flipped()), loop), new PlaneFace(new PlaneSurface(P3.ZX.rotateZ(rads)), endFaceEdges)) }\n  // return new BRep(faces, undefined) }\n\n  export function quaffle() {\n    const baseK = B2T.sphere(1).translate(0, 1.7).flipped()\n    //const baseK = B2T.box().scale(0.2).translate(0, 0.95).flipped()\n    // const vs = B2T.DODECAHEDRON_VERTICES.concat(\n    // B2T.DODECAHEDRON_FACE_VERTICES.map(fis => fis\n    // .map(vi => B2T.DODECAHEDRON_VERTICES[vi])\n    // .reduce((a,b) => a.plus(b), V3.O)\n    // .unit()))\n    const ss = new BRep(\n      TETRAHEDRON_VERTICES.flatMap((v) => baseK.rotateAB(V3.Y, v).faces),\n      false,\n    )\n    //return ss\n    return B2T.sphere().and(ss)\n  }\n\n  export function extrudeFace(face: PlaneFace, dir: V3) {\n    return new BRep(\n      extrudeEdges(face.contour, face.surface.plane, dir)\n        .faces.slice(0, -2)\n        .concat(\n          face,\n          face.translate(dir.x, dir.y, dir.z).flipped(),\n          face.holes.flatMap((hole) =>\n            extrudeEdges(hole, face.surface.plane.flipped(), dir).faces.slice(\n              0,\n              -2,\n            ),\n          ),\n        ),\n      false,\n    )\n  }\n\n  export let defaultFont: opentype.Font\n\n  export function loadFonts(): Promise<opentype.Font> {\n    return loadFont(\"fonts/FiraSansMedium.woff\").then(\n      (font) => (defaultFont = font),\n    )\n  }\n\n  const loadedFonts = new Map<string, opentype.Font>()\n\n  export function loadFont(fontPath: string): Promise<opentype.Font> {\n    return new Promise<opentype.Font>(function (resolve, reject) {\n      const font = loadedFonts.get(fontPath)\n      if (font) {\n        resolve(font)\n      } else {\n        opentype.load(fontPath, function (err, f) {\n          if (err) {\n            reject(err)\n          } else {\n            loadedFonts.set(fontPath, f!)\n            resolve(f)\n          }\n        })\n      }\n    })\n  }\n\n  export function loadFontsAsync(callback: () => void) {\n    if (defaultFont) {\n      callback()\n    } else {\n      opentype.load(\"fonts/FiraSansMedium.woff\", function (err, font) {\n        if (err) {\n          throw new Error(\"Could not load font: \" + err)\n        } else {\n          defaultFont = font!\n          callback()\n        }\n      })\n    }\n  }\n\n  /**\n   * Create the [BRep] of a string rendered in a font.\n   * @param text\n   * @param size\n   * @param depth\n   * @param font An opentype.js font.\n   */\n  export function text(\n    text: string,\n    size: number,\n    depth: number = 1,\n    font: opentype.Font = defaultFont,\n  ) {\n    const path = font.getPath(text, 0, 0, size)\n    const subpaths: opentype.PathCommand[][] = []\n    path.commands.forEach((c) => {\n      if (c.type == \"M\") {\n        subpaths.push([])\n      }\n      getLast(subpaths).push(c)\n    })\n    const loops = subpaths.map((sp) => {\n      const path = new opentype.Path()\n      path.commands = sp\n      const loop = Edge.reversePath(\n        edgePathFromSVG(path.toPathData(13)),\n      ).map((e) => e.mirrorY())\n      assert(Edge.isLoop(loop))\n      return loop\n    })\n    const faces = Face.assembleFacesFromLoops(\n      loops,\n      new PlaneSurface(P3.XY),\n      PlaneFace as any,\n    )\n    const generator = callsce(\"B2T.text\", text, size, depth)\n    return BRep.join(\n      faces.map((face) => B2T.extrudeFace(face as PlaneFace, V(0, 0, -depth))),\n      generator,\n    )\n  }\n\n  export function minorityReport() {\n    const a = B2T.sphere()\n    const b = B2T.text(\"LEO CROW\", 64, 128)\n      .scale(0.1 / 32)\n      .translate(-0.5, -0.05, 1.2)\n      .flipped()\n    const c = B2T.sphere(0.98)\n    return a.and(b).plus(c)\n  }\n\n  export function whatever() {\n    const iso = icosahedron()\n    const numbersBRep = BRep.join(\n      iso.faces.map((face, i) => {\n        const numberBRep = text(\"\" + (i + 1), 0.4, -2)\n        const centroid = face.contour\n          .map((edge) => edge.a)\n          .reduce((a, b) => a.plus(b), V3.O)\n          .div(3)\n\n        const sys = M4.forSys(\n          face.contour[0].aDir,\n          centroid.cross(face.contour[0].aDir),\n          centroid.unit(),\n          centroid,\n        )\n        return numberBRep.transform(\n          sys.times(\n            M4.translate(-numberBRep.getAABB().size().x / 2, -0.1, -0.04),\n          ),\n        )\n      }),\n    )\n    const s = sphere(0.9)\n    //return iso.and(numbersBRep)\n    return iso.and(s).and(numbersBRep)\n    //return numbersBRep\n  }\n\n  export function whatever3() {\n    const t = B2T.torus(1, 2)\n    return B2T.box(5, 5, 2).translate(-2.5, -2.5).minus(t)\n  }\n\n  export function d20() {\n    const iso = icosahedron()\n    const numbersBRep = BRep.join(\n      iso.faces.map((face, i) => {\n        const numberBRep = text(\"\" + (i + 1), 0.4, -2)\n        const centroid = face.contour\n          .map((edge) => edge.a)\n          .reduce((a, b) => a.plus(b), V3.O)\n          .div(3)\n\n        const sys = M4.forSys(\n          face.contour[0].aDir,\n          centroid.cross(face.contour[0].aDir),\n          centroid.unit(),\n          centroid,\n        )\n        return numberBRep.transform(\n          sys.times(\n            M4.translate(-numberBRep.getAABB().size().x / 2, -0.1, -0.04),\n          ),\n        )\n      }),\n    )\n    const s = sphere(0.9)\n    //return iso.and(numbersBRep)\n    return iso.and(s).and(numbersBRep)\n    //return numbersBRep\n  }\n\n  /**\n   * Create a [BRep] by rotating a number of edges in steps in the ZX plane, with X > 0\n   * around the Z axis according to the right-hand rule. The edges from each rotation step\n   * (\"ribs\") are connected by projecting a rib onto the next. For example, line edges\n   * will always be connected by [PlaneSurface]s\n   *\n   * @example Roundabout way of creating a cube:\n   * ```ts\n   * B2T.rotStep(StraightEdge.rect(Math.SQRT1_2, 1), 360 * DEG, 4)\n   * ```\n   * @param edges the edges to rotate.\n   * @param totalRads The angle between the original and last rib. [0; TAU]\n   * @param count The number of steps to take. If totalRads == TAU, it must be >= 3, otherwise >= 2.\n   */\n  export function rotStep(edges: Edge[], totalRads: raddd, count: int): BRep\n  export function rotStep(edges: Edge[], angles: raddd[]): BRep\n  export function rotStep(\n    edges: Edge[],\n    totalRadsOrAngles: raddd | raddd[],\n    countO?: int,\n  ): BRep {\n    const angles: number[] =\n      \"number\" === typeof totalRadsOrAngles\n        ? arrayFromFunction(\n            countO!,\n            (i) => ((i + 1) / countO!) * totalRadsOrAngles,\n          )\n        : totalRadsOrAngles\n    const count = angles.length\n    const open = !eq(TAU, getLast(angles))\n    const ribs = [\n      edges,\n      ...angles.map((phi) => {\n        if (eq(TAU, phi)) {\n          return edges\n        }\n        const matrix = M4.rotateZ(phi)\n        return edges.map((edge) => edge.transform(matrix))\n      }),\n    ]\n    const horizontalEdges = arrayFromFunction(count, (i) => {\n      const ipp = (i + 1) % (count + 1)\n      return arrayFromFunction(edges.length, (j) => {\n        if (!eq0(edges[j].a.lengthXY())) {\n          return StraightEdge.throughPoints(ribs[i][j].a, ribs[ipp][j].a)\n        }\n        return undefined!\n      })\n    })\n\n    const faces: Face[] = []\n    let face: Face\n    edges.forEach((edge, i) => {\n      const ipp = (i + 1) % edges.length\n      // for straight edges perpendicular to the Z-axis, we only create one face.\n      if (\n        edge instanceof StraightEdge &&\n        edge.curve.dir1.isPerpendicularTo(V3.Z)\n      ) {\n        const flipped = edge.a.x > edge.b.x\n        const surface = new PlaneSurface(\n          flipped ? new P3(V3.Z, edge.a.z) : new P3(V3.Z.negated(), -edge.a.z),\n        )\n        if (open) {\n          const faceEdges: Edge[] = []\n          if (!eq0(edge.a.x)) {\n            faceEdges.push(\n              ...arrayFromFunction(count, (j) => horizontalEdges[j][i]!),\n            )\n          }\n          faceEdges.push(ribs[count][i])\n          if (!eq0(edge.b.x)) {\n            faceEdges.push(\n              ...arrayFromFunction(count, (j) =>\n                horizontalEdges[count - j - 1][ipp]!.flipped(),\n              ),\n            )\n          }\n          faceEdges.push(edge.flipped())\n          face = new PlaneFace(surface, faceEdges)\n        } else {\n          const contour = flipped\n            ? arrayFromFunction(count, (j) => horizontalEdges[j][i])\n            : arrayFromFunction(count, (j) =>\n                horizontalEdges[count - j - 1][ipp]!.flipped(),\n              )\n          let hole\n          if (flipped && !eq0(edge.b.x)) {\n            hole = arrayFromFunction(count, (j) =>\n              horizontalEdges[count - j - 1][ipp]!.flipped(),\n            )\n          } else if (!flipped && !eq0(edge.a.x)) {\n            hole = arrayFromFunction(count, (j) => horizontalEdges[j][i])\n          }\n          face = new PlaneFace(surface, contour, hole ? [hole] : [])\n        }\n        faces.push(face)\n        return\n      } else if (edge instanceof StraightEdge) {\n        if (eq0(edge.a.lengthXY()) && eq0(edge.b.lengthXY())) {\n          return\n        }\n      }\n      for (let r = 0; r < count; r++) {\n        const rpp = (r + 1) % (count + 1)\n        const faceEdges = [\n          ribs[r][i].flipped(),\n          horizontalEdges[r][i],\n          ribs[rpp][i],\n          horizontalEdges[r][ipp] && horizontalEdges[r][ipp]!.flipped(),\n        ].filter((x) => x)\n        let surface\n        if (edge instanceof StraightEdge) {\n          surface = new PlaneSurface(\n            P3.throughPoints(faceEdges[0].a, faceEdges[1].a, faceEdges[2].a),\n          )\n        } else {\n          const maxX = edges[i].getAABB().max.x\n          const phi = angles[r],\n            prevPhi = 0 == r ? 0 : angles[r - 1]\n          const offset = V3.polar(maxX, prevPhi).to(V3.polar(maxX, phi))\n          surface = projectCurve(ribs[r][i].curve, offset, false)\n        }\n        faces.push(Face.create(surface, faceEdges))\n      }\n    })\n    if (open) {\n      const endFaceEdges = ribs[count].map((edge) => edge.flipped()).reverse()\n      const endFace = new PlaneFace(\n        new PlaneSurface(P3.ZX.rotateZ(getLast(angles))),\n        endFaceEdges,\n      )\n      faces.push(\n        new PlaneFace(new PlaneSurface(P3.ZX.flipped()), edges),\n        endFace,\n      )\n    }\n    return new BRep(faces, new PlaneSurface(P3.ZX).edgeLoopCCW(edges))\n  }\n\n  export function fixEdges(edges: Edge[]): Edge[] {\n    return edges.flatMap((edge) => {\n      const c = edge.curve\n      if (c instanceof EllipseCurve && c.tMin === -PI && c.tMax === PI) {\n        const splitEdges =\n          edge.minT < 0 && edge.maxT > 0 ? edge.split(0) : [edge]\n        return splitEdges.map((edge) => {\n          if (edge.minT >= 0) {\n            return createEdge(\n              new EllipseCurve(c.center, c.f1, c.f2, max(0, c.tMin), c.tMax),\n              edge.a,\n              edge.b,\n              edge.aT,\n              edge.bT,\n              undefined,\n              edge.aDir,\n              edge.bDir,\n              edge.name,\n            )\n          } else {\n            // \"rotate\" the curve\n            return createEdge(\n              new EllipseCurve(\n                c.center,\n                c.f1.negated(),\n                c.f2.negated(),\n                c.tMin + PI,\n                min(PI, c.tMax + PI),\n              ),\n              edge.a,\n              edge.b,\n              edge.aT + PI,\n              edge.bT + PI,\n              undefined,\n              edge.aDir,\n              edge.bDir,\n              edge.name,\n            )\n          }\n        })\n      }\n      if (c instanceof BezierCurve) {\n        if (edge.a.like(edge.b)) {\n          return edge.split(lerp(edge.aT, edge.bT, 0.5))\n        }\n      }\n      return edge\n    })\n  }\n\n  /**\n   * Create a [BRep] by projecting edges created by joining vertices with straight edges.\n   * @param baseVertices\n   * @param baseFacePlane\n   * @param offset\n   * @param name\n   * @param generator\n   */\n  export function extrudeVertices(\n    baseVertices: ReadonlyArray<V3>,\n    baseFacePlane: P3,\n    offset: V3,\n    name?: string,\n    generator?: string,\n  ) {\n    assert(\n      baseVertices.every((v) => v instanceof V3),\n      \"baseVertices.every(v => v instanceof V3)\",\n    )\n    assertInst(P3, baseFacePlane)\n    assertVectors(offset)\n    if (baseFacePlane.normal1.dot(offset) > 0)\n      baseFacePlane = baseFacePlane.flipped()\n    const edges = StraightEdge.chain(baseVertices, true)\n    generator =\n      generator ||\n      callsce(\"B2T.extrudeVertices\", baseVertices, baseFacePlane, offset, name)\n    return B2T.extrudeEdges(edges, baseFacePlane, offset, name, generator)\n  }\n\n  /**\n   * Create a tetrahedron (3 sided pyramid) [BRep].\n   * `a`, `b`, `c` and `d` can be in any order. The only constraint is that they cannot be on a common plane.\n   * The resulting tetrahedron will always have outwards facing faces.\n   * @param a\n   * @param b\n   * @param c\n   * @param d\n   * @param name\n   */\n  export function tetrahedron(\n    a: V3,\n    b: V3,\n    c: V3,\n    d: V3,\n    name: string = \"tetra\" + getGlobalId(),\n  ): BRep {\n    assertVectors(a, b, c, d)\n    const dDistance = P3.throughPoints(a, b, c).distanceToPointSigned(d)\n    if (eq0(dDistance)) {\n      throw new Error(\"four points are coplanar\")\n    }\n    if (dDistance > 0) {\n      ;[c, d] = [d, c]\n    }\n    const ab = StraightEdge.throughPoints(a, b)\n    const ac = StraightEdge.throughPoints(a, c)\n    const ad = StraightEdge.throughPoints(a, d)\n    const bc = StraightEdge.throughPoints(b, c)\n    const bd = StraightEdge.throughPoints(b, d)\n    const cd = StraightEdge.throughPoints(c, d)\n    const faces = [\n      new PlaneFace(\n        PlaneSurface.throughPoints(a, b, c),\n        [ab, bc, ac.flipped()],\n        [],\n        name + \"abc\",\n      ),\n      new PlaneFace(\n        PlaneSurface.throughPoints(a, d, b),\n        [ad, bd.flipped(), ab.flipped()],\n        [],\n        name + \"adb\",\n      ),\n      new PlaneFace(\n        PlaneSurface.throughPoints(b, d, c),\n        [bd, cd.flipped(), bc.flipped()],\n        [],\n        name + \"bdc\",\n      ),\n      new PlaneFace(\n        PlaneSurface.throughPoints(c, d, a),\n        [cd, ad.flipped(), ac],\n        [],\n        name + \"cda\",\n      ),\n    ]\n    const gen = callsce(\"B2T.tetrahedron\", a, b, c, d)\n    return new BRep(faces, false, gen)\n  }\n\n  const b = 1 / GOLDEN_RATIO,\n    c = 2 - GOLDEN_RATIO\n  export const TETRAHEDRON_VERTICES: ReadonlyArray<V3> = [\n    new V3(1, 0, -SQRT1_2),\n    new V3(-1, 0, -SQRT1_2),\n    new V3(0, -1, SQRT1_2),\n    new V3(0, 1, SQRT1_2),\n  ].map((v) => v.unit())\n  export const DODECAHEDRON_VERTICES: ReadonlyArray<V3> = [\n    new V3(c, 0, 1),\n    new V3(-c, 0, 1),\n    new V3(-b, b, b),\n    new V3(0, 1, c),\n    new V3(b, b, b),\n    new V3(b, -b, b),\n    new V3(0, -1, c),\n    new V3(-b, -b, b),\n    new V3(c, 0, -1),\n    new V3(-c, 0, -1),\n    new V3(-b, -b, -b),\n    new V3(0, -1, -c),\n    new V3(b, -b, -b),\n    new V3(b, b, -b),\n    new V3(0, 1, -c),\n    new V3(-b, b, -b),\n    new V3(1, c, 0),\n    new V3(-1, c, 0),\n    new V3(-1, -c, 0),\n    new V3(1, -c, 0),\n  ].map((v) => v.unit())\n  export const DODECAHEDRON_FACE_VERTICES: ReadonlyArray<ReadonlyArray<\n    number\n  >> = [\n    [4, 3, 2, 1, 0],\n    [7, 6, 5, 0, 1],\n    [12, 11, 10, 9, 8],\n    [15, 14, 13, 8, 9],\n    [14, 3, 4, 16, 13],\n    [3, 14, 15, 17, 2],\n    [11, 6, 7, 18, 10],\n    [6, 11, 12, 19, 5],\n    [4, 0, 5, 19, 16],\n    [12, 8, 13, 16, 19],\n    [15, 9, 10, 18, 17],\n    [7, 1, 2, 17, 18],\n  ]\n\n  export const OCTAHEDRON_VERTICES: ReadonlyArray<V3> = [\n    new V3(1, 0, 0),\n    new V3(-1, 0, 0),\n    new V3(0, 1, 0),\n    new V3(0, -1, 0),\n    new V3(0, 0, 1),\n    new V3(0, 0, -1),\n  ]\n  export const OCTAHEDRON_FACE_VERTICES: ReadonlyArray<ReadonlyArray<\n    number\n  >> = [\n    [0, 2, 4],\n    [2, 1, 4],\n    [1, 3, 4],\n    [3, 0, 4],\n\n    [2, 0, 5],\n    [1, 2, 5],\n    [3, 1, 5],\n    [0, 3, 5],\n  ]\n\n  const { x: s, y: t } = new V3(1, GOLDEN_RATIO, 0).unit()\n  export const ICOSAHEDRON_VERTICES: ReadonlyArray<V3> = [\n    new V3(-s, t, 0),\n    new V3(s, t, 0),\n    new V3(-s, -t, 0),\n    new V3(s, -t, 0),\n\n    new V3(0, -s, t),\n    new V3(0, s, t),\n    new V3(0, -s, -t),\n    new V3(0, s, -t),\n\n    new V3(t, 0, -s),\n    new V3(t, 0, s),\n    new V3(-t, 0, -s),\n    new V3(-t, 0, s),\n  ]\n  export const ICOSAHEDRON_FACE_VERTICES: ReadonlyArray<ReadonlyArray<\n    number\n  >> = [\n    // 5 faces around point 0\n    [0, 11, 5],\n    [0, 5, 1],\n    [0, 1, 7],\n    [0, 7, 10],\n    [0, 10, 11],\n\n    // 5 adjacent faces\n    [1, 5, 9],\n    [5, 11, 4],\n    [11, 10, 2],\n    [10, 7, 6],\n    [7, 1, 8],\n\n    // 5 faces around point 3\n    [3, 9, 4],\n    [3, 4, 2],\n    [3, 2, 6],\n    [3, 6, 8],\n    [3, 8, 9],\n\n    // 5 adjacent faces\n    [4, 9, 5],\n    [2, 4, 11],\n    [6, 2, 10],\n    [8, 6, 7],\n    [9, 8, 1],\n  ]\n\n  /**\n   * Create a dodecahedron [BRep]. The vertices are on the unit sphere.\n   */\n  export function dodecahedron() {\n    return makePlatonic(\n      DODECAHEDRON_VERTICES,\n      DODECAHEDRON_FACE_VERTICES,\n      \"B2T.dodecahedron()\",\n    )\n  }\n\n  /**\n   * Create an octahedron [BRep]. The vertices are on the unit sphere.\n   */\n  export function octahedron() {\n    return makePlatonic(\n      OCTAHEDRON_VERTICES,\n      OCTAHEDRON_FACE_VERTICES,\n      \"B2T.octahedron()\",\n    )\n  }\n\n  /**\n   * Create an icosahedron [BRep]. The vertices are on the unit sphere.\n   */\n  export function icosahedron() {\n    return makePlatonic(\n      ICOSAHEDRON_VERTICES,\n      ICOSAHEDRON_FACE_VERTICES,\n      \"B2T.icosahedron()\",\n    )\n  }\n\n  function makePlatonic(\n    VS: ReadonlyArray<V3>,\n    FVIS: ReadonlyArray<ReadonlyArray<number>>,\n    generator: string,\n  ) {\n    const edgeMap = new Map()\n    const faces = FVIS.map((faceIndexes) => {\n      const surface = PlaneSurface.throughPoints(\n        VS[faceIndexes[0]],\n        VS[faceIndexes[1]],\n        VS[faceIndexes[2]],\n      )\n      const contour = arrayFromFunction(faceIndexes.length, (i) => {\n        const ipp = (i + 1) % faceIndexes.length\n        const iA = faceIndexes[i],\n          iB = faceIndexes[ipp]\n        const iMin = min(iA, iB),\n          iMax = max(iA, iB),\n          edgeID = iMin * VS.length + iMax\n        let edge = edgeMap.get(edgeID)\n        !edge &&\n          edgeMap.set(\n            edgeID,\n            (edge = StraightEdge.throughPoints(VS[iMin], VS[iMax])),\n          )\n        return iA < iB ? edge : edge.flipped()\n      })\n      return new PlaneFace(surface, contour)\n    })\n    return new BRep(faces, false, generator)\n  }\n\n  /**\n   * Create a [BRep] by projecting a number of edges onto a point.\n   * @param baseEdges The edges forming the base of the pyramid.\n   * @param apex The tip of the pyramid.\n   * @param name\n   */\n  export function pyramidEdges(\n    baseEdges: Edge[],\n    apex: V3,\n    name: string = \"pyramid\" + getGlobalId(),\n  ): BRep {\n    assertInst(Edge, ...baseEdges)\n    assertVectors(apex)\n\n    const ribs = baseEdges.map((baseEdge) =>\n      StraightEdge.throughPoints(apex, baseEdge.a),\n    )\n    const faces = baseEdges.map((baseEdge, i) => {\n      const faceName = name + \"Wall\" + i\n      const ipp = (i + 1) % baseEdges.length\n      const faceEdges = [ribs[i], baseEdge, ribs[ipp].flipped()]\n      const surface = projectPointCurve(\n        baseEdge.curve,\n        baseEdge.minT,\n        baseEdge.maxT,\n        apex,\n        baseEdge.deltaT() < 0,\n      )\n      return Face.create(surface, faceEdges, undefined, faceName)\n    })\n    const baseSurface = new PlaneSurface(P3.XY).flipped()\n    const bottomFace = Face.create(baseSurface, Edge.reversePath(baseEdges))\n    faces.push(bottomFace)\n    const generator = callsce(\"B2T.pyramidEdges\", baseEdges, apex, name)\n    return new BRep(faces, false, generator)\n  }\n\n  export function fromBPT(bpt: string) {\n    const lineRegex = /.+/g\n    const readLine = () => lineRegex.exec(bpt)![0]\n    const readLineNumbers = () =>\n      readLine()\n        .trim()\n        .split(/\\s+/)\n        .map((s) => parseFloat(s))\n    const numOfPatches = parseInt(readLine())\n    const faces: Face[] = arrayFromFunction(numOfPatches, () => {\n      const [pointsUCount, pointsVCount] = readLineNumbers()\n      const points = Array.from(\n        { length: (pointsUCount + 1) * (pointsVCount + 1) },\n        () => VV(...readLineNumbers(), 1),\n      )\n      const surface = new NURBSSurface(\n        points,\n        NURBS.bezierKnots(pointsUCount),\n        NURBS.bezierKnots(pointsVCount),\n        pointsUCount,\n        pointsVCount,\n        0,\n        1,\n        0,\n        1,\n      )\n      const edges = [\n        edgeForCurveAndTs(surface.isoparametricV(0)),\n        edgeForCurveAndTs(surface.isoparametricU(1)),\n        edgeForCurveAndTs(surface.isoparametricV(1)).flipped(),\n        edgeForCurveAndTs(surface.isoparametricU(0)).flipped(),\n      ]\n      return Face.create(surface, edges)\n    })\n    return new BRep(faces, false)\n  }\n}\n","import { callsce, min, V3 } from \"ts3dutils\"\n\nimport * as chroma from \"chroma.ts\"\nimport { GL_COLOR, GL_COLOR_BLACK } from \"tsgl\"\nimport { getGlobalId, L3, P3, PlaneSurface } from \".\"\n\nexport class CustomPlane extends P3 {\n  readonly up: V3\n  readonly right: V3\n  readonly vMin: number\n  readonly vMax: number\n  readonly uMin: number\n  readonly uMax: number\n  readonly color: GL_COLOR\n  readonly name: string\n\n  constructor(\n    anchor: V3,\n    right: V3,\n    up: V3,\n    name: string = \"CustomPlane\" + getGlobalId(),\n    color: GL_COLOR = chroma.random().gl(),\n    uMin: number = -500,\n    uMax: number = 500,\n    vMin: number = -500,\n    vMax: number = 500,\n  ) {\n    const { normal1, w } = P3.forAnchorAndPlaneVectors(anchor, right, up)\n    super(normal1, w)\n    this.up = up\n    this.right = right\n    this.uMin = uMin\n    this.uMax = uMax\n    this.vMin = vMin\n    this.vMax = vMax\n    this.name = name\n    this.color = color\n  }\n\n  get plane() {\n    return this\n  }\n\n  toPlaneSurface() {\n    return new PlaneSurface(this, this.right, this.up)\n  }\n\n  toSource() {\n    return callsce(\n      \"new CustomPlane\",\n      this.anchor,\n      this.right,\n      this.up,\n      this.name,\n      this.color,\n      this.uMin,\n      this.uMax,\n      this.vMin,\n      this.vMax,\n    )\n  }\n\n  static forPlane(plane: P3, color: GL_COLOR = GL_COLOR_BLACK, name?: string) {\n    //assert(!name)\n    const up = plane.normal1.getPerpendicular().unit(),\n      right = up.cross(plane.normal1)\n    return new CustomPlane(plane.anchor, right, up, name, color)\n  }\n\n  static fromPlaneSurface(surface: PlaneSurface) {\n    return new CustomPlane(\n      surface.plane.anchor,\n      surface.right,\n      surface.up,\n      \"genCustomPlane\" + getGlobalId(),\n    )\n  }\n\n  distanceTo(line: L3, mindist: number) {\n    return min(\n      [\n        new L3(this.anchor.plus(this.right.times(this.uMin)), this.up),\n        new L3(this.anchor.plus(this.right.times(this.uMax)), this.up),\n        new L3(this.anchor.plus(this.up.times(this.vMin)), this.right),\n        new L3(this.anchor.plus(this.up.times(this.vMax)), this.right),\n      ].map((line2, line2Index): number => {\n        const info = line2.infoClosestToLine(line)\n        if (\n          (isNaN(info.t) || // parallel LINES\n            (line2Index < 2 && this.vMin <= info.t && info.t <= this.vMax) ||\n            (line2Index >= 2 && this.uMin <= info.t && info.t <= this.uMax)) &&\n          info.distance <= mindist\n        ) {\n          return info.s\n        } else {\n          return Infinity\n        }\n      }),\n    )\n  }\n\n  distanceTo2(line: L3, mindist: number) {\n    return min(\n      [\n        new L3(this.anchor.plus(this.right.times(this.uMin)), this.up),\n        new L3(this.anchor.plus(this.right.times(this.uMax)), this.up),\n        new L3(this.anchor.plus(this.up.times(this.vMin)), this.right),\n        new L3(this.anchor.plus(this.up.times(this.vMax)), this.right),\n      ].map((line2, line2Index) => {\n        const info = line2.infoClosestToLine(line)\n        if (\n          (isNaN(info.t) || // parallel LINES\n            (line2Index < 2 && this.vMin <= info.t && info.t <= this.vMax) ||\n            (line2Index >= 2 && this.uMin <= info.t && info.t <= this.uMax)) &&\n          info.distance <= mindist\n        ) {\n          return info.distance\n        } else {\n          return Infinity\n        }\n      }),\n    )\n  }\n}\n","import {\n  AABB,\n  arrayFromFunction,\n  arrayRange,\n  assert,\n  assertf,\n  assertInst,\n  assertNumbers,\n  assertVectors,\n  callsce,\n  clamp,\n  eq,\n  fuzzyBetween,\n  int,\n  le,\n  lt,\n  Transformable,\n  Tuple3,\n  V,\n  V3,\n} from \"ts3dutils\"\n\nimport { Curve, L3, P3, Surface } from \".\"\nimport { sign } from \"./math\"\n\nexport abstract class Edge extends Transformable {\n  readonly reversed: boolean\n\n  abstract get aDir(): V3\n\n  abstract get bDir(): V3\n\n  constructor(\n    readonly curve: Curve,\n    readonly a: V3,\n    readonly b: V3,\n    readonly aT: number,\n    readonly bT: number,\n    public flippedOf?: Edge | undefined,\n    readonly name?: string,\n  ) {\n    super()\n    assertNumbers(aT, bT)\n    assert(!eq(aT, bT))\n    assertVectors(a, b)\n    assertf(() => curve instanceof Curve, curve)\n    assertf(\n      () => !curve.isValidT || (curve.isValidT(aT) && curve.isValidT(bT)),\n      aT,\n      bT,\n      curve,\n    )\n    //if (curve instanceof PICurve) {\n    //    assertf(() => curve.at(aT).to(a).length() < 0.1, ''+curve.at(aT)+a)\n    //    assertf(() => curve.at(bT).to(b).length() < 0.1, '' + curve.at(bT) + b)\n    //} else {\n    assertf(\n      () => curve.at(aT).like(a),\n      () => \"\" + curve.at(aT) + a + \" aT should have been \" + curve.pointT(a),\n    )\n    assertf(\n      () => curve.at(bT).like(b),\n      () => \"\" + curve.at(bT) + b + \" bT should have been \" + curve.pointT(b),\n    )\n    //}\n    assertf(\n      () => fuzzyBetween(aT, curve.tMin, curve.tMax),\n      aT,\n      curve.tMin,\n      curve.tMax,\n    )\n    assertf(\n      () => fuzzyBetween(bT, curve.tMin, curve.tMax),\n      bT,\n      curve.tMin,\n      curve.tMax,\n    )\n    assert(!a.like(b), \"!a.like(b)\" + a + b)\n    this.aT = clamp(aT, curve.tMin, curve.tMax)\n    this.bT = clamp(bT, curve.tMin, curve.tMax)\n    this.reversed = this.aT > this.bT\n  }\n\n  get minT() {\n    return Math.min(this.aT, this.bT)\n  }\n\n  get maxT() {\n    return Math.max(this.aT, this.bT)\n  }\n\n  static isLoop(loop: Edge[]): boolean {\n    return loop.every((edge, i) => edge.b.like(loop[(i + 1) % loop.length].a))\n  }\n\n  static edgesIntersect(e1: Edge, e2: Edge) {\n    // TODO: still getting some NaNs here..\n    assertNumbers(e1.curve.hlol, e2.curve.hlol)\n    assertInst(Edge, e1, e2)\n    if (e1.curve.hlol < e2.curve.hlol) {\n      ;[e2, e1] = [e1, e2]\n    }\n    const sts = e1.curve.isInfosWithCurve(e2.curve)\n    if (sts.some((info) => isNaN(info.tThis) || isNaN(info.tOther))) {\n      console.log(e1.sce)\n      console.log(e2.sce)\n      assert(false)\n    }\n    return sts.some(\n      /// (  e1.aT < tThis < e1.bT  )  &&  (  e2.aT < tOther < e2.bT  )\n      ({ tThis, tOther }) => {\n        return e1.tValueInside(tThis) && e2.tValueInside(tOther)\n      },\n    )\n  }\n\n  static assertLoop(edges: Edge[]): void {\n    edges.forEach((edge, i) => {\n      const j = (i + 1) % edges.length\n      assert(\n        edge.b.like(edges[j].a),\n        `edges[${i}].b != edges[${j}].a (${edges[i].b.sce} != ${edges[j].a.sce})`,\n      )\n    })\n  }\n\n  static reversePath(path: Edge[], doReverse: boolean = true): Edge[] {\n    return doReverse\n      ? arrayFromFunction(path.length, (i) =>\n          path[path.length - 1 - i].flipped(),\n        )\n      : path\n  }\n\n  abstract tangentAt(t: number): V3\n\n  toString(): string {\n    return callsce(\n      \"new \" + this.constructor.name,\n      this.curve,\n      this.a,\n      this.b,\n      this.aT,\n      this.bT,\n      undefined,\n      this.aDir,\n      this.bDir,\n    )\n  }\n\n  abstract edgeISTsWithSurface(surface: Surface): number[]\n\n  /**\n   * Returns the intersections of the edge with the plane.\n   * Values are snapped to aT and bT, ie aT === t || !eq(aT, t)\n   */\n  abstract edgeISTsWithPlane(plane: P3): number[]\n\n  colinearToLine(line: L3): boolean {\n    return this.curve instanceof L3 && this.curve.isColinearTo(line)\n  }\n\n  tValueInside(t: number) {\n    return this.aT < this.bT\n      ? lt(this.aT, t) && lt(t, this.bT)\n      : lt(this.bT, t) && lt(t, this.aT)\n  }\n\n  isValidT(t: number): boolean {\n    return this.aT < this.bT\n      ? le(this.aT, t) && le(t, this.bT)\n      : le(this.bT, t) && le(t, this.aT)\n  }\n\n  clampedT(t: number): number {\n    return this.aT < this.bT\n      ? clamp(t, this.aT, this.bT)\n      : clamp(t, this.bT, this.aT)\n  }\n\n  abstract flipped(): Edge\n\n  /**\n   * this is equals-equals. \"isColinearTo\" might make more sense but can't be used, because you can't get a\n   * consistent hashCode for colinear curves\n   * @param obj\n   * @returns\n   */\n  equals(obj: any): boolean {\n    return (\n      this === obj ||\n      (this.constructor == obj.constructor &&\n        this.a.equals(obj.a) &&\n        this.b.equals(obj.b) &&\n        this.curve.equals(obj.curve))\n    )\n  }\n\n  hashCode(): int {\n    let hashCode = 0\n    hashCode = hashCode * 31 + this.a.hashCode()\n    hashCode = hashCode * 31 + this.b.hashCode()\n    hashCode = hashCode * 31 + this.curve.hashCode()\n    return hashCode | 0\n  }\n\n  like(edge: Edge) {\n    // TODO this breaks on colinear edges,\n    // TODO: what, where?\n    return (\n      this === edge ||\n      (this.curve.isColinearTo(edge.curve) &&\n        this.a.like(edge.a) &&\n        this.b.like(edge.b) &&\n        this.aDir.isParallelTo(edge.aDir) &&\n        this.aDir.dot(edge.aDir) > 0)\n    )\n  }\n\n  /**\n   * Get edge points, excluding the first one.\n   */\n  abstract getVerticesNo0(): V3[]\n\n  abstract pointsCount(): int\n\n  isCanon() {\n    return !this.reversed\n  }\n\n  getCanon() {\n    return this.reversed ? this.flipped() : this\n  }\n\n  overlaps(edge: Edge, noback?: boolean): boolean {\n    assert(this.curve.isColinearTo(edge.curve))\n    const edgeAT = this.curve.containsPoint(edge.a) && this.curve.pointT(edge.a)\n    const edgeBT = this.curve.containsPoint(edge.b) && this.curve.pointT(edge.b)\n    if (false === edgeAT && false === edgeBT) {\n      return noback ? false : edge.overlaps(this, true)\n    }\n    return !(le(edge.maxT, this.minT) || le(this.maxT, edge.minT))\n  }\n\n  getAABB(): AABB {\n    const min: Tuple3<number> = [Infinity, Infinity, Infinity],\n      max: Tuple3<number> = [-Infinity, -Infinity, -Infinity]\n    this.curve.roots().forEach((ts, dim) => {\n      ts.forEach((t) => {\n        if (lt(this.minT, t) && lt(t, this.maxT)) {\n          min[dim] = Math.min(min[dim], this.curve.at(t).e(dim))\n          max[dim] = Math.max(max[dim], this.curve.at(t).e(dim))\n        }\n      })\n    })\n    const aabb = new AABB(V(min), V(max))\n    aabb.addPoint(this.a)\n    aabb.addPoint(this.b)\n    return aabb\n  }\n\n  length(steps: int = 1): number {\n    return this.curve.arcLength(this.minT, this.maxT, steps)\n  }\n\n  abstract isCoEdge(other: Edge): boolean\n\n  abstract points(): V3[]\n\n  abstract split(t: number): [Edge, Edge]\n\n  deltaT() {\n    return this.bT - this.aT\n  }\n\n  deltaTSign() {\n    return sign(this.bT - this.aT) as -1 | 1\n  }\n\n  atAvgT() {\n    return this.curve.at((this.minT + this.maxT) / 2)\n  }\n\n  /**\n   * Whether two edge loops are equal. Takes into account that two loops need not start with the same edge.\n   * @param loop1\n   * @param loop2\n   */\n  static loopsEqual(loop1: Edge[], loop2: Edge[]): boolean {\n    return (\n      loop1.length == loop2.length &&\n      arrayRange(0, loop1.length, 1).some((offset) =>\n        loop1.every((edge, i) =>\n          edge.equals(loop2[(offset + i) % loop1.length]),\n        ),\n      )\n    )\n  }\n}\n","import {\n  arrayFromFunction,\n  assertf,\n  assertInst,\n  assertVectors,\n  callsce,\n  eq0,\n  M4,\n  snap2,\n  V3,\n} from \"ts3dutils\"\n\nimport { Edge, L3, P3, PlaneSurface, Surface } from \".\"\n\nexport class StraightEdge extends Edge {\n  readonly tangent: V3\n  readonly curve!: L3\n\n  constructor(\n    line: L3,\n    a: V3,\n    b: V3,\n    aT: number,\n    bT: number,\n    public flippedOf?: StraightEdge,\n    name?: string,\n  ) {\n    super(line, a, b, aT, bT, flippedOf, name)\n    assertInst(L3, line)\n    !flippedOf || assertInst(StraightEdge, flippedOf)\n    !name || assertf(() => \"string\" === typeof name, name)\n    this.tangent =\n      this.aT < this.bT ? this.curve.dir1 : this.curve.dir1.negated()\n  }\n\n  get aDir() {\n    return this.tangent\n  }\n\n  get bDir() {\n    return this.tangent\n  }\n\n  static throughPoints(a: V3, b: V3, name?: string) {\n    return new StraightEdge(\n      L3.throughPoints(a, b, 0, a.to(b).length()),\n      a,\n      b,\n      0,\n      a.to(b).length(),\n      undefined,\n      name,\n    )\n  }\n\n  /**\n   * Create a list of StraightEdges from a list of vertices.\n   * @param vertices\n   * @param closed Whether to connect the first and last vertices. Defaults to true.\n   * @returns\n   */\n  static chain(\n    vertices: ReadonlyArray<V3>,\n    closed: boolean = true,\n  ): StraightEdge[] {\n    const vc = vertices.length\n    return arrayFromFunction(closed ? vc : vc - 1, (i) =>\n      StraightEdge.throughPoints(vertices[i], vertices[(i + 1) % vc]),\n    )\n  }\n\n  toSource(): string {\n    return callsce(\n      \"new StraightEdge\",\n      this.curve,\n      this.a,\n      this.b,\n      this.aT,\n      this.bT,\n    )\n  }\n\n  getVerticesNo0() {\n    return [this.b]\n  }\n\n  pointsCount() {\n    return 2\n  }\n\n  points() {\n    return [this.a, this.b]\n  }\n\n  edgeISTsWithPlane(plane: P3): number[] {\n    const edgeT = snap2(this.curve.isTWithPlane(plane), this.aT, this.bT)\n    return this.minT <= edgeT && edgeT <= this.maxT ? [edgeT] : []\n  }\n\n  edgeISTsWithSurface(surface: Surface): number[] {\n    if (surface instanceof PlaneSurface) {\n      return this.edgeISTsWithPlane(surface.plane)\n    } else {\n      return surface\n        .isTsForLine(this.curve)\n        .map((edgeT) => snap2(edgeT, this.aT, this.bT))\n        .filter((edgeT) => this.minT <= edgeT && edgeT <= this.maxT)\n    }\n  }\n\n  tangentAt() {\n    return this.tangent\n  }\n\n  flipped(): StraightEdge {\n    return (\n      this.flippedOf ||\n      (this.flippedOf = new StraightEdge(\n        this.curve,\n        this.b,\n        this.a,\n        this.bT,\n        this.aT,\n        this,\n        this.name,\n      ))\n    )\n  }\n\n  transform(m4: M4, desc?: string): this {\n    const lineDir1TransLength = m4\n      .transformVector2(this.curve.dir1, this.curve.anchor)\n      .length()\n    const curve = this.curve.transform(m4)\n    const a = m4.transformPoint(this.a)\n    const b = m4.transformPoint(this.b)\n    return new StraightEdge(\n      curve,\n      a,\n      b,\n      m4.isNoProj() ? this.aT * lineDir1TransLength : curve.pointT(a),\n      m4.isNoProj() ? this.bT * lineDir1TransLength : curve.pointT(b),\n      undefined,\n      \"\" + this.name + desc,\n    ) as this\n  }\n\n  transform4(m4: M4, desc?: string): this {\n    const lineDir1TransLength = m4\n      .transformVector2(this.curve.dir1, this.curve.anchor)\n      .length()\n    const curve = this.curve.transform4(m4)\n    const a = m4.transformPoint(this.a)\n    const b = m4.transformPoint(this.b)\n    return new StraightEdge(\n      curve,\n      a,\n      b,\n      m4.isNoProj() ? this.aT * lineDir1TransLength : curve.pointT(a),\n      m4.isNoProj() ? this.bT * lineDir1TransLength : curve.pointT(b),\n      undefined,\n      \"\" + this.name + desc,\n    ) as this\n  }\n\n  isCoEdge(edge: Edge): boolean {\n    return (\n      this === edge ||\n      this === edge.flippedOf ||\n      (edge.constructor instanceof StraightEdge &&\n        ((this.a.like(edge.a) && this.b.like(edge.b)) ||\n          (this.a.like(edge.b) && this.b.like(edge.a))))\n    )\n  }\n\n  getEdgeT(p: V3): number | undefined {\n    assertVectors(p)\n    let edgeT = p.minus(this.curve.anchor).dot(this.curve.dir1)\n    if (!eq0(this.curve.at(edgeT).distanceTo(p))) {\n      return\n    }\n    edgeT = snap2(edgeT, this.aT, this.bT)\n    return this.minT <= edgeT && edgeT <= this.maxT ? edgeT : undefined\n  }\n\n  split(t: number): [StraightEdge, StraightEdge] {\n    const p = this.curve.at(t)\n    return [\n      new StraightEdge(\n        this.curve,\n        this.a,\n        p,\n        this.aT,\n        t,\n        undefined,\n        this.name + \"left\",\n      ),\n      new StraightEdge(\n        this.curve,\n        p,\n        this.b,\n        t,\n        this.bT,\n        undefined,\n        this.name + \"right\",\n      ),\n    ]\n  }\n}\n","import {\n  assert,\n  assertf,\n  assertVectors,\n  callsce,\n  int,\n  M4,\n  snap2,\n  V3,\n  snap,\n} from \"ts3dutils\"\n\nimport { Curve, Edge, P3, PICurve, Surface } from \".\"\n\nexport class PCurveEdge extends Edge {\n  constructor(\n    curve: Curve,\n    a: V3,\n    b: V3,\n    aT: number,\n    bT: number,\n    public flippedOf: PCurveEdge | undefined,\n    readonly aDir: V3,\n    readonly bDir: V3,\n    name?: string,\n  ) {\n    super(curve, a, b, aT, bT, flippedOf, name)\n    assertVectors(aDir, bDir)\n    assertf(() => !aDir.likeO(), curve)\n    assertf(() => !bDir.likeO(), curve)\n    if (!(curve instanceof PICurve)) {\n      // TODO\n      assertf(\n        () => curve.tangentAt(aT).likeOrReversed(aDir),\n        \"\" + aT + curve.tangentAt(aT).sce + \" \" + aDir.sce,\n      )\n      assertf(\n        () => curve.tangentAt(bT).likeOrReversed(bDir),\n        \"\" + bT + curve.tangentAt(bT).sce + \" \" + bDir.sce,\n      )\n    }\n    assert(\n      this.reversed === this.aDir.dot(curve.tangentAt(aT)) < 0,\n      aT +\n        \" \" +\n        bT +\n        \" \" +\n        curve.constructor.name +\n        \" \" +\n        this.aDir.sce +\n        \" \" +\n        this.bDir.sce +\n        \" \" +\n        curve.tangentAt(aT),\n    )\n    assert(\n      this.reversed === this.bDir.dot(curve.tangentAt(bT)) < 0,\n      aT +\n        \" \" +\n        bT +\n        \" \" +\n        curve.constructor.name +\n        \" \" +\n        this.aDir.sce +\n        \" \" +\n        this.bDir.sce +\n        \" \" +\n        curve.tangentAt(aT),\n    )\n  }\n\n  static forCurveAndTs(curve: Curve, aT: number, bT: number, name?: string) {\n    return new PCurveEdge(\n      curve,\n      curve.at(aT),\n      curve.at(bT),\n      aT,\n      bT,\n      undefined,\n      aT < bT ? curve.tangentAt(aT) : curve.tangentAt(aT).negated(),\n      aT < bT ? curve.tangentAt(bT) : curve.tangentAt(bT).negated(),\n      name,\n    )\n  }\n\n  toSource(): string {\n    return callsce(\n      \"new PCurveEdge\",\n      this.curve,\n      this.a,\n      this.b,\n      this.aT,\n      this.bT,\n      undefined,\n      this.aDir,\n      this.bDir,\n      this.name,\n    )\n  }\n\n  getVerticesNo0(): V3[] {\n    return this.curve.calcSegmentPoints(\n      this.aT,\n      this.bT,\n      this.a,\n      this.b,\n      this.reversed,\n      false,\n    )\n  }\n\n  pointsCount(): int {\n    return this.points().length\n  }\n\n  points(): V3[] {\n    return this.curve.calcSegmentPoints(\n      this.aT,\n      this.bT,\n      this.a,\n      this.b,\n      this.reversed,\n      true,\n    )\n  }\n\n  edgeISTsWithSurface(surface: Surface): number[] {\n    return this.curve\n      .isTsWithSurface(surface)\n      .map((edgeT) => snap2(edgeT, this.aT, this.bT))\n      .filter((edgeT) => this.minT <= edgeT && edgeT <= this.maxT)\n  }\n\n  edgeISTsWithPlane(surface: P3): number[] {\n    return this.curve\n      .isTsWithPlane(surface)\n      .map((edgeT) => snap2(edgeT, this.aT, this.bT))\n      .filter((edgeT) => this.minT <= edgeT && edgeT <= this.maxT)\n  }\n\n  tangentAt(t: number): V3 {\n    return !this.reversed\n      ? this.curve.tangentAt(t)\n      : this.curve.tangentAt(t).negated()\n  }\n\n  flipped(): PCurveEdge {\n    return (\n      this.flippedOf ||\n      (this.flippedOf = new PCurveEdge(\n        this.curve,\n        this.b,\n        this.a,\n        this.bT,\n        this.aT,\n        this,\n        this.bDir.negated(),\n        this.aDir.negated(),\n        this.name,\n      ))\n    )\n  }\n\n  transform(m4: M4, desc?: string): this {\n    return new PCurveEdge(\n      this.curve.transform(m4),\n      m4.transformPoint(this.a),\n      m4.transformPoint(this.b),\n      this.aT,\n      this.bT,\n      undefined,\n      m4.transformVector(this.aDir),\n      m4.transformVector(this.bDir),\n      \"\" + this.name + desc,\n    ) as this\n  }\n\n  transform4(m4: M4, desc?: string): this {\n    const a_ = m4.transformPoint(this.a)\n    const b_ = m4.transformPoint(this.b)\n    const curve_ = this.curve.transform4(m4)\n    return new PCurveEdge(\n      curve_,\n      a_,\n      b_,\n      snap(curve_.pointT(a_), this.aT),\n      snap(curve_.pointT(b_), this.bT),\n      undefined,\n      m4.transformVector(this.aDir),\n      m4.transformVector(this.bDir),\n      \"\" + this.name + desc,\n    ) as this\n  }\n\n  isCoEdge(edge: Edge): boolean {\n    return (\n      this === edge ||\n      this === edge.flippedOf ||\n      (this.curve.isColinearTo(edge.curve) &&\n        ((this.a.like(edge.a) && this.b.like(edge.b)) ||\n          (this.a.like(edge.b) && this.b.like(edge.a))))\n    )\n  }\n  split(t: number): [Edge, Edge] {\n    const p = this.curve.at(t)\n    const dir = this.tangentAt(t)\n    return [\n      new PCurveEdge(\n        this.curve,\n        this.a,\n        p,\n        this.aT,\n        t,\n        undefined,\n        this.aDir,\n        dir,\n        this.name + \"left\",\n      ),\n      new PCurveEdge(\n        this.curve,\n        p,\n        this.b,\n        t,\n        this.bT,\n        undefined,\n        this.aDir,\n        dir,\n        this.name + \"right\",\n      ),\n    ]\n  }\n}\n","import { SVGPathData } from \"./SVGPathData\";\nimport { SVGCommand } from \"./types\";\n\n// Encode SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\n\n// Private consts : Char groups\nconst WSP = \" \";\n\nexport function encodeSVGPath(commands: SVGCommand | SVGCommand[]) {\n  let str = \"\";\n\n  if (!Array.isArray(commands)) {\n    commands = [commands];\n  }\n  for (let i = 0; i < commands.length; i++) {\n    const command = commands[i];\n    if (command.type === SVGPathData.CLOSE_PATH) {\n      str += \"z\";\n    } else if (command.type === SVGPathData.HORIZ_LINE_TO) {\n      str += (command.relative ? \"h\" : \"H\") +\n        command.x;\n    } else if (command.type === SVGPathData.VERT_LINE_TO) {\n      str += (command.relative ? \"v\" : \"V\") +\n        command.y;\n    } else if (command.type === SVGPathData.MOVE_TO) {\n      str += (command.relative ? \"m\" : \"M\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.LINE_TO) {\n      str += (command.relative ? \"l\" : \"L\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.CURVE_TO) {\n      str += (command.relative ? \"c\" : \"C\") +\n        command.x1 + WSP + command.y1 +\n        WSP + command.x2 + WSP + command.y2 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.SMOOTH_CURVE_TO) {\n      str += (command.relative ? \"s\" : \"S\") +\n        command.x2 + WSP + command.y2 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.QUAD_TO) {\n      str += (command.relative ? \"q\" : \"Q\") +\n        command.x1 + WSP + command.y1 +\n        WSP + command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.SMOOTH_QUAD_TO) {\n      str += (command.relative ? \"t\" : \"T\") +\n        command.x + WSP + command.y;\n    } else if (command.type === SVGPathData.ARC) {\n      str += (command.relative ? \"a\" : \"A\") +\n        command.rX + WSP + command.rY +\n        WSP + command.xRot +\n        WSP + (+command.lArcFlag) + WSP + (+command.sweepFlag) +\n        WSP + command.x + WSP + command.y;\n    } else {\n      // Unknown command\n      throw new Error(\n        `Unexpected command type \"${ (command as any).type}\" at index ${i}.`);\n    }\n  }\n\n  return str;\n}\n","import { SVGPathData } from \"./SVGPathData\";\nimport { CommandA, CommandC } from \"./types\";\n\nexport function rotate([x, y]: [number, number], rad: number) {\n  return [\n    x * Math.cos(rad) - y * Math.sin(rad),\n    x * Math.sin(rad) + y * Math.cos(rad),\n  ];\n}\n\nconst DEBUG_CHECK_NUMBERS = true;\nexport function assertNumbers(...numbers: number[]) {\n  if (DEBUG_CHECK_NUMBERS) {\n    for (let i = 0; i < numbers.length; i++) {\n      if (\"number\" !== typeof numbers[i]) {\n        throw new Error(\n          `assertNumbers arguments[${i}] is not a number. ${typeof numbers[i]} == typeof ${numbers[i]}`);\n      }\n    }\n  }\n  return true;\n}\n\nconst PI = Math.PI;\n\n/**\n * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n * Fixes rX and rY.\n * Ensures lArcFlag and sweepFlag are 0 or 1\n * Adds center coordinates: command.cX, command.cY (relative or absolute, depending on command.relative)\n * Adds start and end arc parameters (in degrees): command.phi1, command.phi2; phi1 < phi2 iff. c.sweepFlag == true\n */\nexport function annotateArcCommand(c: CommandA, x1: number, y1: number) {\n  c.lArcFlag = (0 === c.lArcFlag) ? 0 : 1;\n  c.sweepFlag = (0 === c.sweepFlag) ? 0 : 1;\n  // tslint:disable-next-line\n  let {rX, rY, x, y} = c;\n\n  rX = Math.abs(c.rX);\n  rY = Math.abs(c.rY);\n  const [x1_, y1_] = rotate([(x1 - x) / 2, (y1 - y) / 2], -c.xRot / 180 * PI);\n  const testValue = Math.pow(x1_, 2) / Math.pow(rX, 2) + Math.pow(y1_, 2) / Math.pow(rY, 2);\n\n  if (1 < testValue) {\n    rX *= Math.sqrt(testValue);\n    rY *= Math.sqrt(testValue);\n  }\n  c.rX = rX;\n  c.rY = rY;\n  const c_ScaleTemp = (Math.pow(rX, 2) * Math.pow(y1_, 2) + Math.pow(rY, 2) * Math.pow(x1_, 2));\n  const c_Scale = (c.lArcFlag !== c.sweepFlag ? 1 : -1) *\n    Math.sqrt(Math.max(0, (Math.pow(rX, 2) * Math.pow(rY, 2) - c_ScaleTemp) / c_ScaleTemp));\n  const cx_ = rX * y1_ / rY * c_Scale;\n  const cy_ = -rY * x1_ / rX * c_Scale;\n  const cRot = rotate([cx_, cy_], c.xRot / 180 * PI);\n\n  c.cX = cRot[0] + (x1 + x) / 2;\n  c.cY = cRot[1] + (y1 + y) / 2;\n  c.phi1 = Math.atan2((y1_ - cy_) / rY, (x1_ - cx_) / rX);\n  c.phi2 = Math.atan2((-y1_ - cy_) / rY, (-x1_ - cx_) / rX);\n  if (0 === c.sweepFlag && c.phi2 > c.phi1) {\n    c.phi2 -= 2 * PI;\n  }\n  if (1 === c.sweepFlag && c.phi2 < c.phi1) {\n    c.phi2 += 2 * PI;\n  }\n  c.phi1 *= 180 / PI;\n  c.phi2 *= 180 / PI;\n}\n\n/**\n * Solves a quadratic system of equations of the form\n *      a * x + b * y = c\n *      x² + y² = 1\n * This can be understood as the intersection of the unit circle with a line.\n *      => y = (c - a x) / b\n *      => x² + (c - a x)² / b² = 1\n *      => x² b² + c² - 2 c a x + a² x² = b²\n *      => (a² + b²) x² - 2 a c x + (c² - b²) = 0\n */\nexport function intersectionUnitCircleLine(a: number, b: number, c: number): [number, number][] {\n  assertNumbers(a, b, c);\n  // cf. pqFormula\n  const termSqr = a * a + b * b - c * c;\n\n  if (0 > termSqr) {\n    return [];\n  } else if (0 === termSqr) {\n    return [\n      [\n        (a * c) / (a * a + b * b),\n        (b * c) / (a * a + b * b)]];\n  }\n  const term = Math.sqrt(termSqr);\n\n  return [\n    [\n      (a * c + b * term) / (a * a + b * b),\n      (b * c - a * term) / (a * a + b * b)],\n    [\n      (a * c - b * term) / (a * a + b * b),\n      (b * c + a * term) / (a * a + b * b)]];\n\n}\n\nexport const DEG = Math.PI / 180;\n\nexport function lerp(a: number, b: number, t: number) {\n  return (1 - t) * a + t * b;\n}\n\nexport function arcAt(c: number, x1: number, x2: number, phiDeg: number) {\n  return c + Math.cos(phiDeg / 180 * PI) * x1 + Math.sin(phiDeg / 180 * PI) * x2;\n}\n\nexport function bezierRoot(x0: number, x1: number, x2: number, x3: number) {\n  const EPS = 1e-6;\n  const x01 = x1 - x0;\n  const x12 = x2 - x1;\n  const x23 = x3 - x2;\n  const a = 3 * x01 + 3 * x23 - 6 * x12;\n  const b = (x12 - x01) * 6;\n  const c = 3 * x01;\n  // solve a * t² + b * t + c = 0\n\n  if (Math.abs(a) < EPS) {\n    // equivalent to b * t + c =>\n    return [-c / b];\n  }\n  return pqFormula(b / a, c / a, EPS);\n\n}\n\nexport function bezierAt(x0: number, x1: number, x2: number, x3: number, t: number) {\n  // console.log(x0, y0, x1, y1, x2, y2, x3, y3, t)\n  const s = 1 - t;\n  const c0 = s * s * s;\n  const c1 = 3 * s * s * t;\n  const c2 = 3 * s * t * t;\n  const c3 = t * t * t;\n\n  return x0 * c0 + x1 * c1 + x2 * c2 + x3 * c3;\n}\n\nfunction pqFormula(p: number, q: number, PRECISION = 1e-6) {\n  // 4 times the discriminant:in\n  const discriminantX4 = p * p / 4 - q;\n\n  if (discriminantX4 < -PRECISION) {\n    return [];\n  } else if (discriminantX4 <= PRECISION) {\n    return [-p / 2];\n  }\n  const root = Math.sqrt(discriminantX4);\n\n  return [-(p / 2) - root, -(p / 2) + root];\n\n}\n\nexport function a2c(arc: CommandA, x0: number, y0: number): CommandC[] {\n  if (!arc.cX) {\n    annotateArcCommand(arc, x0, y0);\n  }\n\n  const phiMin = Math.min(arc.phi1!, arc.phi2!), phiMax = Math.max(arc.phi1!, arc.phi2!), deltaPhi = phiMax - phiMin;\n  const partCount = Math.ceil(deltaPhi / 90 );\n\n  const result: CommandC[] = new Array(partCount);\n  let prevX = x0, prevY = y0;\n  for (let i = 0; i < partCount; i++) {\n    const phiStart = lerp(arc.phi1!, arc.phi2!, i / partCount);\n    const phiEnd = lerp(arc.phi1!, arc.phi2!, (i + 1) / partCount);\n    const deltaPhi = phiEnd - phiStart;\n    const f = 4 / 3 * Math.tan(deltaPhi * DEG / 4);\n    // x1/y1, x2/y2 and x/y coordinates on the unit circle for phiStart/phiEnd\n    const [x1, y1] = [\n      Math.cos(phiStart * DEG) - f * Math.sin(phiStart * DEG),\n      Math.sin(phiStart * DEG) + f * Math.cos(phiStart * DEG)];\n    const [x, y] = [Math.cos(phiEnd * DEG), Math.sin(phiEnd * DEG)];\n    const [x2, y2] = [x + f * Math.sin(phiEnd * DEG), y - f * Math.cos(phiEnd * DEG)];\n    result[i] = {relative: arc.relative, type: SVGPathData.CURVE_TO } as any;\n    const transform = (x: number, y: number) => {\n      const [xTemp, yTemp] = rotate([x * arc.rX, y * arc.rY], arc.xRot);\n      return [arc.cX! + xTemp, arc.cY! + yTemp];\n    };\n    [result[i].x1, result[i].y1] = transform(x1, y1);\n    [result[i].x2, result[i].y2] = transform(x2, y2);\n    [result[i].x, result[i].y] = transform(x, y);\n    if (arc.relative) {\n      result[i].x1 -= prevX;\n      result[i].y1 -= prevY;\n      result[i].x2 -= prevX;\n      result[i].y2 -= prevY;\n      result[i].x -= prevX;\n      result[i].y -= prevY;\n    }\n    [prevX, prevY] = [result[i].x, result[i].y];\n  }\n  return result;\n}\n","// Transform SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\n\nimport { a2c, annotateArcCommand, arcAt, assertNumbers, bezierAt, bezierRoot,\n  intersectionUnitCircleLine } from \"./mathUtils\";\nimport { SVGPathData } from \"./SVGPathData\";\nimport { SVGCommand, TransformFunction } from \"./types\";\n\nexport namespace SVGPathDataTransformer {\n  // Predefined transforming functions\n  // Rounds commands values\n  export function ROUND(roundVal = 1e13) {\n    assertNumbers(roundVal);\n    function rf(val: number) { return Math.round(val * roundVal) / roundVal; }\n    return function round(command: any) {\n      if (\"undefined\" !== typeof command.x1) {\n        command.x1 = rf(command.x1);\n      }\n      if (\"undefined\" !== typeof command.y1) {\n        command.y1 = rf(command.y1);\n      }\n\n      if (\"undefined\" !== typeof command.x2) {\n        command.x2 = rf(command.x2);\n      }\n      if (\"undefined\" !== typeof command.y2) {\n        command.y2 = rf(command.y2);\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        command.x = rf(command.x);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        command.y = rf(command.y);\n      }\n\n      if (\"undefined\" !== typeof command.rX) {\n        command.rX = rf(command.rX);\n      }\n      if (\"undefined\" !== typeof command.rY) {\n        command.rY = rf(command.rY);\n      }\n\n      return command;\n    };\n  }\n  // Relative to absolute commands\n  export function TO_ABS() {\n    return INFO((command, prevX, prevY) => {\n      if (command.relative) {\n        // x1/y1 values\n        if (\"undefined\" !== typeof command.x1) {\n          command.x1 += prevX;\n        }\n        if (\"undefined\" !== typeof command.y1) {\n          command.y1 += prevY;\n        }\n        // x2/y2 values\n        if (\"undefined\" !== typeof command.x2) {\n          command.x2 += prevX;\n        }\n        if (\"undefined\" !== typeof command.y2) {\n          command.y2 += prevY;\n        }\n        // Finally x/y values\n        if (\"undefined\" !== typeof command.x) {\n          command.x += prevX;\n        }\n        if (\"undefined\" !== typeof command.y) {\n          command.y += prevY;\n        }\n        command.relative = false;\n      }\n      return command;\n    });\n  }\n  // Absolute to relative commands\n  export function TO_REL() {\n    return INFO((command, prevX, prevY) => {\n      if (!command.relative) {\n        // x1/y1 values\n        if (\"undefined\" !== typeof command.x1) {\n          command.x1 -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y1) {\n          command.y1 -= prevY;\n        }\n        // x2/y2 values\n        if (\"undefined\" !== typeof command.x2) {\n          command.x2 -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y2) {\n          command.y2 -= prevY;\n        }\n        // Finally x/y values\n        if (\"undefined\" !== typeof command.x) {\n          command.x -= prevX;\n        }\n        if (\"undefined\" !== typeof command.y) {\n          command.y -= prevY;\n        }\n        command.relative = true;\n      }\n      return command;\n    });\n  }\n  // Convert H, V, Z and A with rX = 0 to L\n  export function NORMALIZE_HVZ(normalizeZ = true, normalizeH = true, normalizeV = true) {\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n      if (isNaN(pathStartX) && !(command.type & SVGPathData.MOVE_TO)) {\n        throw new Error(\"path must start with moveto\");\n      }\n      if (normalizeH && command.type & SVGPathData.HORIZ_LINE_TO) {\n        command.type = SVGPathData.LINE_TO;\n        command.y = command.relative ? 0 : prevY;\n      }\n      if (normalizeV && command.type & SVGPathData.VERT_LINE_TO) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? 0 : prevX;\n      }\n      if (normalizeZ && command.type & SVGPathData.CLOSE_PATH) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? pathStartX - prevX : pathStartX;\n        command.y = command.relative ? pathStartY - prevY : pathStartY;\n      }\n      if (command.type & SVGPathData.ARC && (0 === command.rX || 0 === command.rY)) {\n        command.type = SVGPathData.LINE_TO;\n        delete command.rX;\n        delete command.rY;\n        delete command.xRot;\n        delete command.lArcFlag;\n        delete command.sweepFlag;\n      }\n      return command;\n    });\n  }\n  /*\n   * Transforms smooth curves and quads to normal curves and quads (SsTt to CcQq)\n   */\n  export function NORMALIZE_ST() {\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n\n    return INFO((command, prevX, prevY) => {\n      if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n        command.type = SVGPathData.CURVE_TO;\n        prevCurveC2X = isNaN(prevCurveC2X) ? prevX : prevCurveC2X;\n        prevCurveC2Y = isNaN(prevCurveC2Y) ? prevY : prevCurveC2Y;\n        command.x1 = command.relative ? prevX - prevCurveC2X : 2 * prevX - prevCurveC2X;\n        command.y1 = command.relative ? prevY - prevCurveC2Y : 2 * prevY - prevCurveC2Y;\n      }\n      if (command.type & SVGPathData.CURVE_TO) {\n        prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n        prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n      } else {\n        prevCurveC2X = NaN;\n        prevCurveC2Y = NaN;\n      }\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        command.type = SVGPathData.QUAD_TO;\n        prevQuadCX = isNaN(prevQuadCX) ? prevX : prevQuadCX;\n        prevQuadCY = isNaN(prevQuadCY) ? prevY : prevQuadCY;\n        command.x1 = command.relative ? prevX - prevQuadCX : 2 * prevX - prevQuadCX;\n        command.y1 = command.relative ? prevY - prevQuadCY : 2 * prevY - prevQuadCY;\n      }\n      if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadCY = command.relative ? prevY + command.y1 : command.y1;\n      } else {\n        prevQuadCX = NaN;\n        prevQuadCY = NaN;\n      }\n\n      return command;\n    });\n  }\n  /*\n   * A quadratic bézier curve can be represented by a cubic bézier curve which has\n   * the same end points as the quadratic and both control points in place of the\n   * quadratic\"s one.\n   *\n   * This transformer replaces QqTt commands with Cc commands respectively.\n   * This is useful for reading path data into a system which only has a\n   * representation for cubic curves.\n   */\n  export function QT_TO_C() {\n    let prevQuadX1 = NaN;\n    let prevQuadY1 = NaN;\n\n    return INFO((command, prevX, prevY) => {\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        command.type = SVGPathData.QUAD_TO;\n        prevQuadX1 = isNaN(prevQuadX1) ? prevX : prevQuadX1;\n        prevQuadY1 = isNaN(prevQuadY1) ? prevY : prevQuadY1;\n        command.x1 = command.relative ? prevX - prevQuadX1 : 2 * prevX - prevQuadX1;\n        command.y1 = command.relative ? prevY - prevQuadY1 : 2 * prevY - prevQuadY1;\n      }\n      if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadX1 = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadY1 = command.relative ? prevY + command.y1 : command.y1;\n        const x1 = command.x1;\n        const y1 = command.y1;\n\n        command.type = SVGPathData.CURVE_TO;\n        command.x1 = ((command.relative ? 0 : prevX) + x1 * 2) / 3;\n        command.y1 = ((command.relative ? 0 : prevY) + y1 * 2) / 3;\n        command.x2 = (command.x + x1 * 2) / 3;\n        command.y2 = (command.y + y1 * 2) / 3;\n      } else {\n        prevQuadX1 = NaN;\n        prevQuadY1 = NaN;\n      }\n\n      return command;\n    });\n  }\n  export function INFO(\n    f: (command: any, prevXAbs: number, prevYAbs: number,\n        pathStartXAbs: number, pathStartYAbs: number) => any | any[]) {\n    let prevXAbs = 0;\n    let prevYAbs = 0;\n    let pathStartXAbs = NaN;\n    let pathStartYAbs = NaN;\n\n    return function transform(command: any) {\n      if (isNaN(pathStartXAbs) && !(command.type & SVGPathData.MOVE_TO)) {\n        throw new Error(\"path must start with moveto\");\n      }\n\n      const result = f(command, prevXAbs, prevYAbs, pathStartXAbs, pathStartYAbs);\n\n      if (command.type & SVGPathData.CLOSE_PATH) {\n        prevXAbs = pathStartXAbs;\n        prevYAbs = pathStartYAbs;\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        prevXAbs = (command.relative ? prevXAbs + command.x : command.x);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        prevYAbs = (command.relative ? prevYAbs + command.y : command.y);\n      }\n\n      if (command.type & SVGPathData.MOVE_TO) {\n        pathStartXAbs = prevXAbs;\n        pathStartYAbs = prevYAbs;\n      }\n\n      return result;\n    };\n  }\n  /*\n   * remove 0-length segments\n   */\n  export function SANITIZE(EPS = 0) {\n    assertNumbers(EPS);\n    let prevCurveC2X = NaN;\n    let prevCurveC2Y = NaN;\n    let prevQuadCX = NaN;\n    let prevQuadCY = NaN;\n\n    return INFO((command, prevX, prevY, pathStartX, pathStartY) => {\n      const abs = Math.abs;\n      let skip = false;\n      let x1Rel = 0;\n      let y1Rel = 0;\n\n      if (command.type & SVGPathData.SMOOTH_CURVE_TO) {\n        x1Rel = isNaN(prevCurveC2X) ? 0 : prevX - prevCurveC2X;\n        y1Rel = isNaN(prevCurveC2Y) ? 0 : prevY - prevCurveC2Y;\n      }\n      if (command.type & (SVGPathData.CURVE_TO | SVGPathData.SMOOTH_CURVE_TO)) {\n        prevCurveC2X = command.relative ? prevX + command.x2 : command.x2;\n        prevCurveC2Y = command.relative ? prevY + command.y2 : command.y2;\n      } else {\n        prevCurveC2X = NaN;\n        prevCurveC2Y = NaN;\n      }\n      if (command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        prevQuadCX = isNaN(prevQuadCX) ? prevX : 2 * prevX - prevQuadCX;\n        prevQuadCY = isNaN(prevQuadCY) ? prevY : 2 * prevY - prevQuadCY;\n      } else if (command.type & SVGPathData.QUAD_TO) {\n        prevQuadCX = command.relative ? prevX + command.x1 : command.x1;\n        prevQuadCY = command.relative ? prevY + command.y1 : command.y2;\n      } else {\n        prevQuadCX = NaN;\n        prevQuadCY = NaN;\n      }\n\n      if (command.type & SVGPathData.LINE_COMMANDS ||\n        command.type & SVGPathData.ARC && (0 === command.rX || 0 === command.rY || !command.lArcFlag) ||\n        command.type & SVGPathData.CURVE_TO || command.type & SVGPathData.SMOOTH_CURVE_TO ||\n        command.type & SVGPathData.QUAD_TO || command.type & SVGPathData.SMOOTH_QUAD_TO) {\n        const xRel = \"undefined\" === typeof command.x ? 0 :\n          (command.relative ? command.x : command.x - prevX);\n        const yRel = \"undefined\" === typeof command.y ? 0 :\n          (command.relative ? command.y : command.y - prevY);\n\n        x1Rel = !isNaN(prevQuadCX) ? prevQuadCX - prevX :\n          \"undefined\" === typeof command.x1 ? x1Rel :\n            command.relative ? command.x :\n              command.x1 - prevX;\n        y1Rel = !isNaN(prevQuadCY) ? prevQuadCY - prevY :\n          \"undefined\" === typeof command.y1 ? y1Rel :\n            command.relative ? command.y :\n              command.y1 - prevY;\n\n        const x2Rel = \"undefined\" === typeof command.x2 ? 0 :\n          (command.relative ? command.x : command.x2 - prevX);\n        const y2Rel = \"undefined\" === typeof command.y2 ? 0 :\n          (command.relative ? command.y : command.y2 - prevY);\n\n        if (abs(xRel) <= EPS && abs(yRel) <= EPS &&\n          abs(x1Rel) <= EPS && abs(y1Rel) <= EPS &&\n          abs(x2Rel) <= EPS && abs(y2Rel) <= EPS) {\n          skip = true;\n        }\n      }\n\n      if (command.type & SVGPathData.CLOSE_PATH) {\n        if (abs(prevX - pathStartX) <= EPS && abs(prevY - pathStartY) <= EPS) {\n          skip = true;\n        }\n      }\n\n      return skip ? [] : command;\n    });\n  }\n  // SVG Transforms : http://www.w3.org/TR/SVGTiny12/coords.html#TransformList\n  // Matrix : http://apike.ca/prog_svg_transform.html\n  // a c e\n  // b d f\n  export function MATRIX(a: number, b: number, c: number, d: number, e: number, f: number) {\n    assertNumbers(a, b, c, d, e, f);\n\n    return INFO((command, prevX, prevY, pathStartX) => {\n      const origX1 = command.x1;\n      const origX2 = command.x2;\n      // if isNaN(pathStartX), then this is the first command, which is ALWAYS an\n      // absolute MOVE_TO, regardless what the relative flag says\n      const comRel = command.relative && !isNaN(pathStartX);\n      const x = \"undefined\" !== typeof command.x ? command.x : (comRel ? 0 : prevX);\n      const y = \"undefined\" !== typeof command.y ? command.y : (comRel ? 0 : prevY);\n\n      if (command.type & SVGPathData.HORIZ_LINE_TO && 0 !== b) {\n        command.type = SVGPathData.LINE_TO;\n        command.y = command.relative ? 0 : prevY;\n      }\n      if (command.type & SVGPathData.VERT_LINE_TO && 0 !== c) {\n        command.type = SVGPathData.LINE_TO;\n        command.x = command.relative ? 0 : prevX;\n      }\n\n      if (\"undefined\" !== typeof command.x) {\n        command.x = (command.x * a) + (y * c) + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y) {\n        command.y = (x * b) + command.y * d + (comRel ? 0 : f);\n      }\n      if (\"undefined\" !== typeof command.x1) {\n        command.x1 = command.x1 * a + command.y1 * c + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y1) {\n        command.y1 = origX1 * b + command.y1 * d + (comRel ? 0 : f);\n      }\n      if (\"undefined\" !== typeof command.x2) {\n        command.x2 = command.x2 * a + command.y2 * c + (comRel ? 0 : e);\n      }\n      if (\"undefined\" !== typeof command.y2) {\n        command.y2 = origX2 * b + command.y2 * d + (comRel ? 0 : f);\n      }\n      function sqr(x: number) { return x * x; }\n      const det = a * d - b * c;\n\n      if (\"undefined\" !== typeof command.xRot) {\n        // Skip if this is a pure translation\n        if (1 !== a || 0 !== b || 0 !== c || 1 !== d) {\n          // Special case for singular matrix\n          if (0 === det) {\n            // In the singular case, the arc is compressed to a line. The actual geometric image of the original\n            // curve under this transform possibly extends beyond the starting and/or ending points of the segment, but\n            // for simplicity we ignore this detail and just replace this command with a single line segment.\n            delete command.rX;\n            delete command.rY;\n            delete command.xRot;\n            delete command.lArcFlag;\n            delete command.sweepFlag;\n            command.type = SVGPathData.LINE_TO;\n          } else {\n            // Convert to radians\n            const xRot = command.xRot * Math.PI / 180;\n\n            // Convert rotated ellipse to general conic form\n            // x0^2/rX^2 + y0^2/rY^2 - 1 = 0\n            // x0 = x*cos(xRot) + y*sin(xRot)\n            // y0 = -x*sin(xRot) + y*cos(xRot)\n            // --> A*x^2 + B*x*y + C*y^2 - 1 = 0, where\n            const sinRot = Math.sin(xRot);\n            const cosRot = Math.cos(xRot);\n            const xCurve = 1 / sqr(command.rX);\n            const yCurve = 1 / sqr(command.rY);\n            const A = sqr(cosRot) * xCurve + sqr(sinRot) * yCurve;\n            const B = 2 * sinRot * cosRot * (xCurve - yCurve);\n            const C = sqr(sinRot) * xCurve + sqr(cosRot) * yCurve;\n\n            // Apply matrix to A*x^2 + B*x*y + C*y^2 - 1 = 0\n            // x1 = a*x + c*y\n            // y1 = b*x + d*y\n            //      (we can ignore e and f, since pure translations don\"t affect the shape of the ellipse)\n            // --> A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 = 0, where\n            const A1 = A * d * d - B * b * d + C * b * b;\n            const B1 = B * (a * d + b * c) - 2 * (A * c * d + C * a * b);\n            const C1 = A * c * c - B * a * c + C * a * a;\n\n            // Unapply newXRot to get back to axis-aligned ellipse equation\n            // x1 = x2*cos(newXRot) - y2*sin(newXRot)\n            // y1 = x2*sin(newXRot) + y2*cos(newXRot)\n            // A1*x1^2 + B1*x1*y1 + C1*y1^2 - det^2 =\n            //   x2^2*(A1*cos(newXRot)^2 + B1*sin(newXRot)*cos(newXRot) + C1*sin(newXRot)^2)\n            //   + x2*y2*(2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2))\n            //   + y2^2*(A1*sin(newXRot)^2 - B1*sin(newXRot)*cos(newXRot) + C1*cos(newXRot)^2)\n            //   (which must have the same zeroes as)\n            // x2^2/newRX^2 + y2^2/newRY^2 - 1\n            //   (so we have)\n            // 2*(C1 - A1)*sin(newXRot)*cos(newXRot) + B1*(cos(newXRot)^2 - sin(newXRot)^2) = 0\n            // (A1 - C1)*sin(2*newXRot) = B1*cos(2*newXRot)\n            // 2*newXRot = atan2(B1, A1 - C1)\n            const newXRot = ((Math.atan2(B1, A1 - C1) + Math.PI) % Math.PI) / 2;\n            // For any integer n, (atan2(B1, A1 - C1) + n*pi)/2 is a solution to the above; incrementing n just swaps\n            // the x and y radii computed below (since that\"s what rotating an ellipse by pi/2 does).  Choosing the\n            // rotation between 0 and pi/2 eliminates the ambiguity and leads to more predictable output.\n\n            // Finally, we get newRX and newRY from the same-zeroes relationship that gave us newXRot\n            const newSinRot = Math.sin(newXRot);\n            const newCosRot = Math.cos(newXRot);\n\n            command.rX = Math.abs(det) /\n              Math.sqrt(A1 * sqr(newCosRot) + B1 * newSinRot * newCosRot + C1 * sqr(newSinRot));\n            command.rY = Math.abs(det) /\n              Math.sqrt(A1 * sqr(newSinRot) - B1 * newSinRot * newCosRot + C1 * sqr(newCosRot));\n            command.xRot = newXRot * 180 / Math.PI;\n          }\n        }\n      }\n      // sweepFlag needs to be inverted when mirroring shapes\n      // see http://www.itk.ilstu.edu/faculty/javila/SVG/SVG_drawing1/elliptical_curve.htm\n      // m 65,10 a 50,25 0 1 0 50,25\n      // M 65,60 A 50,25 0 1 1 115,35\n      if (\"undefined\" !== typeof command.sweepFlag && 0 > det) {\n        command.sweepFlag = +!command.sweepFlag;\n      }\n      return command;\n    });\n  }\n  export function ROTATE(a: number, x = 0, y = 0) {\n    assertNumbers(a, x, y);\n    const sin = Math.sin(a);\n    const cos = Math.cos(a);\n\n    return MATRIX(cos, sin, -sin, cos, x - x * cos + y * sin, y - x * sin - y * cos);\n  }\n  export function TRANSLATE(dX: number, dY = 0) {\n    assertNumbers(dX, dY);\n    return MATRIX(1, 0, 0, 1, dX, dY);\n  }\n  export function SCALE(dX: number, dY = dX) {\n    assertNumbers(dX, dY);\n    return MATRIX(dX, 0, 0, dY, 0, 0);\n  }\n  export function SKEW_X(a: number) {\n    assertNumbers(a);\n    return MATRIX(1, 0, Math.atan(a), 1, 0, 0);\n  }\n  export function SKEW_Y(a: number) {\n    assertNumbers(a);\n    return MATRIX(1, Math.atan(a), 0, 1, 0, 0);\n  }\n  export function X_AXIS_SYMMETRY(xOffset = 0) {\n    assertNumbers(xOffset);\n    return MATRIX(-1, 0, 0, 1, xOffset, 0);\n  }\n  export function Y_AXIS_SYMMETRY(yOffset = 0) {\n    assertNumbers(yOffset);\n    return MATRIX(1, 0, 0, -1, 0, yOffset);\n  }\n  // Convert arc commands to curve commands\n  export function A_TO_C() {\n    return INFO((command, prevX, prevY) => {\n      if (SVGPathData.ARC === command.type) {\n        return a2c(command, command.relative ? 0 : prevX, command.relative ? 0 : prevY);\n      }\n      return command;\n    });\n  }\n  // @see annotateArcCommand\n  export function ANNOTATE_ARCS() {\n    return INFO((c, x1, y1) => {\n      if (c.relative) {\n        x1 = 0;\n        y1 = 0;\n      }\n      if (SVGPathData.ARC === c.type) {\n        annotateArcCommand(c, x1, y1);\n      }\n      return c;\n    });\n  }\n  export function CLONE() {\n    return (c: SVGCommand) => {\n      const result = {} as SVGCommand;\n      // tslint:disable-next-line\n      for (const key in c) {\n        result[key as keyof SVGCommand] = c[key as keyof SVGCommand];\n      }\n      return result;\n    };\n  }\n  // @see annotateArcCommand\n  export function CALCULATE_BOUNDS() {\n    const clone = CLONE();\n    const toAbs = TO_ABS();\n    const qtToC = QT_TO_C();\n    const normST = NORMALIZE_ST();\n    const f: TransformFunction & {minX: number, maxX: number, minY: number, maxY: number} =\n        INFO((command, prevXAbs, prevYAbs) => {\n      const c = normST(qtToC(toAbs(clone(command))));\n      function fixX(absX: number) {\n        if (absX > f.maxX) { f.maxX = absX; }\n        if (absX < f.minX) { f.minX = absX; }\n      }\n      function fixY(absY: number) {\n        if (absY > f.maxY) { f.maxY = absY; }\n        if (absY < f.minY) { f.minY = absY; }\n      }\n      if (c.type & SVGPathData.DRAWING_COMMANDS) {\n        fixX(prevXAbs);\n        fixY(prevYAbs);\n      }\n      if (c.type & SVGPathData.HORIZ_LINE_TO) {\n        fixX(c.x);\n      }\n      if (c.type & SVGPathData.VERT_LINE_TO) {\n        fixY(c.y);\n      }\n      if (c.type & SVGPathData.LINE_TO) {\n        fixX(c.x);\n        fixY(c.y);\n      }\n      if (c.type & SVGPathData.CURVE_TO) {\n        // add start and end points\n        fixX(c.x);\n        fixY(c.y);\n        const xDerivRoots = bezierRoot(prevXAbs, c.x1, c.x2, c.x);\n\n        for (const derivRoot of xDerivRoots) {\n          if (0 < derivRoot && 1 > derivRoot) {\n            fixX(bezierAt(prevXAbs, c.x1, c.x2, c.x, derivRoot));\n          }\n        }\n        const yDerivRoots = bezierRoot(prevYAbs, c.y1, c.y2, c.y);\n\n        for (const derivRoot of yDerivRoots) {\n          if (0 < derivRoot && 1 > derivRoot) {\n            fixY(bezierAt(prevYAbs, c.y1, c.y2, c.y, derivRoot));\n          }\n        }\n      }\n      if (c.type & SVGPathData.ARC) {\n        // add start and end points\n        fixX(c.x);\n        fixY(c.y);\n        annotateArcCommand(c, prevXAbs, prevYAbs);\n        // p = cos(phi) * xv + sin(phi) * yv\n        // dp = -sin(phi) * xv + cos(phi) * yv = 0\n        const xRotRad = c.xRot / 180 * Math.PI;\n        // points on ellipse for phi = 0° and phi = 90°\n        const x0 = Math.cos(xRotRad) * c.rX;\n        const y0 = Math.sin(xRotRad) * c.rX;\n        const x90 = -Math.sin(xRotRad) * c.rY;\n        const y90 = Math.cos(xRotRad) * c.rY;\n\n        // annotateArcCommand returns phi1 and phi2 such that -180° < phi1 < 180° and phi2 is smaller or greater\n        // depending on the sweep flag. Calculate phiMin, phiMax such that -180° < phiMin < 180° and phiMin < phiMax\n        const [phiMin, phiMax] = c.phi1 < c.phi2 ?\n          [c.phi1, c.phi2] :\n          (-180 > c.phi2 ? [c.phi2 + 360, c.phi1 + 360] : [c.phi2, c.phi1]);\n        const normalizeXiEta = ([xi, eta]: [number, number]) => {\n          const phiRad = Math.atan2(eta, xi);\n          const phi = phiRad * 180 / Math.PI;\n\n          return phi < phiMin ? phi + 360 : phi;\n        };\n        // xi = cos(phi), eta = sin(phi)\n\n        const xDerivRoots = intersectionUnitCircleLine(x90, -x0, 0).map(normalizeXiEta);\n        for (const derivRoot of xDerivRoots) {\n          if (derivRoot > phiMin && derivRoot < phiMax) {\n            fixX(arcAt(c.cX, x0, x90, derivRoot));\n          }\n        }\n\n        const yDerivRoots = intersectionUnitCircleLine(y90, -y0, 0).map(normalizeXiEta);\n        for (const derivRoot of yDerivRoots) {\n          if (derivRoot > phiMin && derivRoot < phiMax) {\n            fixY(arcAt(c.cY, y0, y90, derivRoot));\n          }\n        }\n      }\n      return command;\n    }) as any;\n\n    f.minX = Infinity;\n    f.maxX = -Infinity;\n    f.minY = Infinity;\n    f.maxY = -Infinity;\n    return f;\n  }\n}\n","import { SVGPathDataTransformer } from \"./SVGPathDataTransformer\";\nimport { TransformFunction } from \"./types\";\n\nexport abstract class TransformableSVG {\n  round(x?: number) {\n    return this.transform(SVGPathDataTransformer.ROUND(x));\n  }\n\n  toAbs() {\n    return this.transform(SVGPathDataTransformer.TO_ABS());\n  }\n\n  toRel() {\n    return this.transform(SVGPathDataTransformer.TO_REL());\n  }\n\n  normalizeHVZ(a?: boolean, b?: boolean, c?: boolean) {\n    return this.transform(SVGPathDataTransformer.NORMALIZE_HVZ(a, b, c));\n  }\n\n  normalizeST() {\n    return this.transform(SVGPathDataTransformer.NORMALIZE_ST());\n  }\n\n  qtToC() {\n    return this.transform(SVGPathDataTransformer.QT_TO_C());\n  }\n\n  aToC() {\n    return this.transform(SVGPathDataTransformer.A_TO_C());\n  }\n\n  sanitize(eps?: number) {\n    return this.transform(SVGPathDataTransformer.SANITIZE(eps));\n  }\n\n  translate(x: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.TRANSLATE(x, y));\n  }\n\n  scale(x: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.SCALE(x, y));\n  }\n\n  rotate(a: number, x?: number, y?: number) {\n    return this.transform(SVGPathDataTransformer.ROTATE(a, x, y));\n  }\n\n  matrix(a: number, b: number, c: number, d: number, e: number, f: number) {\n    return this.transform(SVGPathDataTransformer.MATRIX(a, b, c, d, e, f));\n  }\n\n  skewX(a: number) {\n    return this.transform(SVGPathDataTransformer.SKEW_X(a));\n  }\n\n  skewY(a: number) {\n    return this.transform(SVGPathDataTransformer.SKEW_Y(a));\n  }\n\n  xSymmetry(xOffset?: number) {\n    return this.transform(SVGPathDataTransformer.X_AXIS_SYMMETRY(xOffset));\n  }\n\n  ySymmetry(yOffset?: number) {\n    return this.transform(SVGPathDataTransformer.Y_AXIS_SYMMETRY(yOffset));\n  }\n\n  annotateArcs() {\n    return this.transform(SVGPathDataTransformer.ANNOTATE_ARCS());\n  }\n\n  abstract transform(transformFunction: TransformFunction): this;\n}\n","// Parse SVG PathData\n// http://www.w3.org/TR/SVG/paths.html#PathDataBNF\nimport { COMMAND_ARG_COUNTS, SVGPathData } from \"./SVGPathData\";\nimport { TransformableSVG } from \"./TransformableSVG\";\nimport { SVGCommand, TransformFunction } from \"./types\";\n// Private consts : Char groups\nconst isWhiteSpace = (c: string) =>\n  \" \" === c || \"\\t\" === c || \"\\r\" === c || \"\\n\" === c;\nconst isDigit = (c: string) =>\n  \"0\".charCodeAt(0) <= c.charCodeAt(0) && c.charCodeAt(0) <= \"9\".charCodeAt(0);\nconst COMMANDS = \"mMzZlLhHvVcCsSqQtTaA\";\n\nexport class SVGPathDataParser extends TransformableSVG {\n  private curNumber: string = \"\";\n  private curCommandType: SVGCommand[\"type\"] | -1 = -1;\n  private curCommandRelative = false;\n  private canParseCommandOrComma = true;\n  private curNumberHasExp = false;\n  private curNumberHasExpDigits = false;\n  private curNumberHasDecimal = false;\n  private curArgs: number[] = [];\n\n  constructor() {\n    super();\n  }\n\n  finish(commands: SVGCommand[] = []) {\n    this.parse(\" \", commands);\n    // Adding residual command\n    if (0 !== this.curArgs.length || !this.canParseCommandOrComma) {\n      throw new SyntaxError(\"Unterminated command at the path end.\");\n    }\n    return commands;\n  }\n\n  parse(str: string, commands: SVGCommand[] = []) {\n    const finishCommand = (command: SVGCommand) => {\n      commands.push(command);\n      this.curArgs.length = 0;\n      this.canParseCommandOrComma = true;\n    };\n\n    for (let i = 0; i < str.length; i++) {\n      const c = str[i];\n      // White spaces parsing\n      const isAArcFlag = this.curCommandType === SVGPathData.ARC &&\n        (this.curArgs.length === 3 || this.curArgs.length === 4) &&\n        this.curNumber.length === 1 &&\n        (this.curNumber === \"0\" || this.curNumber === \"1\");\n      const isEndingDigit = isDigit(c) && (\n        (this.curNumber === \"0\" && c === \"0\") ||\n        isAArcFlag\n      );\n\n      if (\n        isDigit(c) &&\n        !isEndingDigit\n      ) {\n        this.curNumber += c;\n        this.curNumberHasExpDigits = this.curNumberHasExp;\n        continue;\n      }\n      if (\"e\" === c || \"E\" === c) {\n        this.curNumber += c;\n        this.curNumberHasExp = true;\n        continue;\n      }\n      if (\n        (\"-\" === c || \"+\" === c) &&\n        this.curNumberHasExp &&\n        !this.curNumberHasExpDigits\n      ) {\n        this.curNumber += c;\n        continue;\n      }\n      // if we already have a \".\", it means we are starting a new number\n      if (\".\" === c && !this.curNumberHasExp && !this.curNumberHasDecimal && !isAArcFlag) {\n        this.curNumber += c;\n        this.curNumberHasDecimal = true;\n        continue;\n      }\n\n      // New number\n      if (this.curNumber && -1 !== this.curCommandType) {\n        const val = Number(this.curNumber);\n        if (isNaN(val)) {\n          throw new SyntaxError(`Invalid number ending at ${i}`);\n        }\n        if (this.curCommandType === SVGPathData.ARC) {\n          if (0 === this.curArgs.length || 1 === this.curArgs.length) {\n            if (0 > val) {\n              throw new SyntaxError(\n                `Expected positive number, got \"${val}\" at index \"${i}\"`,\n              );\n            }\n          } else if (3 === this.curArgs.length || 4 === this.curArgs.length) {\n            if (\"0\" !== this.curNumber && \"1\" !== this.curNumber) {\n              throw new SyntaxError(\n                `Expected a flag, got \"${this.curNumber}\" at index \"${i}\"`,\n              );\n            }\n          }\n        }\n        this.curArgs.push(val);\n        if (this.curArgs.length === COMMAND_ARG_COUNTS[this.curCommandType]) {\n          if (SVGPathData.HORIZ_LINE_TO === this.curCommandType) {\n            finishCommand({\n              type: SVGPathData.HORIZ_LINE_TO,\n              relative: this.curCommandRelative,\n              x: val,\n            });\n          } else if (SVGPathData.VERT_LINE_TO === this.curCommandType) {\n            finishCommand({\n              type: SVGPathData.VERT_LINE_TO,\n              relative: this.curCommandRelative,\n              y: val,\n            });\n            // Move to / line to / smooth quadratic curve to commands (x, y)\n          } else if (\n            this.curCommandType === SVGPathData.MOVE_TO ||\n            this.curCommandType === SVGPathData.LINE_TO ||\n            this.curCommandType === SVGPathData.SMOOTH_QUAD_TO\n          ) {\n            finishCommand({\n              type: this.curCommandType,\n              relative: this.curCommandRelative,\n              x: this.curArgs[0],\n              y: this.curArgs[1],\n            } as SVGCommand);\n            // Switch to line to state\n            if (SVGPathData.MOVE_TO === this.curCommandType) {\n              this.curCommandType = SVGPathData.LINE_TO;\n            }\n          } else if (this.curCommandType === SVGPathData.CURVE_TO) {\n            finishCommand({\n              type: SVGPathData.CURVE_TO,\n              relative: this.curCommandRelative,\n              x1: this.curArgs[0],\n              y1: this.curArgs[1],\n              x2: this.curArgs[2],\n              y2: this.curArgs[3],\n              x: this.curArgs[4],\n              y: this.curArgs[5],\n            });\n          } else if (this.curCommandType === SVGPathData.SMOOTH_CURVE_TO) {\n            finishCommand({\n              type: SVGPathData.SMOOTH_CURVE_TO,\n              relative: this.curCommandRelative,\n              x2: this.curArgs[0],\n              y2: this.curArgs[1],\n              x: this.curArgs[2],\n              y: this.curArgs[3],\n            });\n          } else if (this.curCommandType === SVGPathData.QUAD_TO) {\n            finishCommand({\n              type: SVGPathData.QUAD_TO,\n              relative: this.curCommandRelative,\n              x1: this.curArgs[0],\n              y1: this.curArgs[1],\n              x: this.curArgs[2],\n              y: this.curArgs[3],\n            });\n          } else if (this.curCommandType === SVGPathData.ARC) {\n            finishCommand({\n              type: SVGPathData.ARC,\n              relative: this.curCommandRelative,\n              rX: this.curArgs[0],\n              rY: this.curArgs[1],\n              xRot: this.curArgs[2],\n              lArcFlag: this.curArgs[3] as 0 | 1,\n              sweepFlag: this.curArgs[4] as 0 | 1,\n              x: this.curArgs[5],\n              y: this.curArgs[6],\n            });\n          }\n        }\n        this.curNumber = \"\";\n        this.curNumberHasExpDigits = false;\n        this.curNumberHasExp = false;\n        this.curNumberHasDecimal = false;\n        this.canParseCommandOrComma = true;\n      }\n      // Continue if a white space or a comma was detected\n      if (isWhiteSpace(c)) {\n        continue;\n      }\n      if (\",\" === c && this.canParseCommandOrComma) {\n        // L 0,0, H is not valid:\n        this.canParseCommandOrComma = false;\n        continue;\n      }\n      // if a sign is detected, then parse the new number\n      if (\"+\" === c || \"-\" === c || \".\" === c) {\n        this.curNumber = c;\n        this.curNumberHasDecimal = \".\" === c;\n        continue;\n      }\n      // if a 0 is detected, then parse the new number\n      if (isEndingDigit) {\n        this.curNumber = c;\n        this.curNumberHasDecimal = false;\n        continue;\n      }\n\n      // Adding residual command\n      if (0 !== this.curArgs.length) {\n        throw new SyntaxError(`Unterminated command at index ${i}.`);\n      }\n      if (!this.canParseCommandOrComma) {\n        throw new SyntaxError(\n          `Unexpected character \"${c}\" at index ${i}. Command cannot follow comma`,\n        );\n      }\n      this.canParseCommandOrComma = false;\n      // Detecting the next command\n      if (\"z\" === c || \"Z\" === c) {\n        commands.push({\n          type: SVGPathData.CLOSE_PATH,\n        });\n        this.canParseCommandOrComma = true;\n        this.curCommandType = -1;\n        continue;\n        // Horizontal move to command\n      } else if (\"h\" === c || \"H\" === c) {\n        this.curCommandType = SVGPathData.HORIZ_LINE_TO;\n        this.curCommandRelative = \"h\" === c;\n        // Vertical move to command\n      } else if (\"v\" === c || \"V\" === c) {\n        this.curCommandType = SVGPathData.VERT_LINE_TO;\n        this.curCommandRelative = \"v\" === c;\n        // Move to command\n      } else if (\"m\" === c || \"M\" === c) {\n        this.curCommandType = SVGPathData.MOVE_TO;\n        this.curCommandRelative = \"m\" === c;\n        // Line to command\n      } else if (\"l\" === c || \"L\" === c) {\n        this.curCommandType = SVGPathData.LINE_TO;\n        this.curCommandRelative = \"l\" === c;\n        // Curve to command\n      } else if (\"c\" === c || \"C\" === c) {\n        this.curCommandType = SVGPathData.CURVE_TO;\n        this.curCommandRelative = \"c\" === c;\n        // Smooth curve to command\n      } else if (\"s\" === c || \"S\" === c) {\n        this.curCommandType = SVGPathData.SMOOTH_CURVE_TO;\n        this.curCommandRelative = \"s\" === c;\n        // Quadratic bezier curve to command\n      } else if (\"q\" === c || \"Q\" === c) {\n        this.curCommandType = SVGPathData.QUAD_TO;\n        this.curCommandRelative = \"q\" === c;\n        // Smooth quadratic bezier curve to command\n      } else if (\"t\" === c || \"T\" === c) {\n        this.curCommandType = SVGPathData.SMOOTH_QUAD_TO;\n        this.curCommandRelative = \"t\" === c;\n        // Elliptic arc command\n      } else if (\"a\" === c || \"A\" === c) {\n        this.curCommandType = SVGPathData.ARC;\n        this.curCommandRelative = \"a\" === c;\n      } else {\n        throw new SyntaxError(`Unexpected character \"${c}\" at index ${i}.`);\n      }\n    }\n    return commands;\n  }\n  /**\n   * Return a wrapper around this parser which applies the transformation on parsed commands.\n   */\n  transform(transform: TransformFunction) {\n    const result = Object.create(this, {\n      parse: {\n        value(chunk: string, commands: SVGCommand[] = []) {\n          const parsedCommands = Object.getPrototypeOf(this).parse.call(\n            this,\n            chunk,\n          );\n          for (const c of parsedCommands) {\n            const cT = transform(c);\n            if (Array.isArray(cT)) {\n              commands.push(...cT);\n            } else {\n              commands.push(cT);\n            }\n          }\n          return commands;\n        },\n      },\n    });\n    return result as this;\n  }\n}\n","import { encodeSVGPath } from \"./SVGPathDataEncoder\";\nimport { SVGPathDataParser } from \"./SVGPathDataParser\";\nimport { SVGPathDataTransformer } from \"./SVGPathDataTransformer\";\nimport { TransformableSVG } from \"./TransformableSVG\";\nimport { SVGCommand } from \"./types\";\n\nexport class SVGPathData extends TransformableSVG {\n  commands: SVGCommand[];\n  constructor(content: string | SVGCommand[]) {\n    super();\n    if (\"string\" === typeof content) {\n      this.commands = SVGPathData.parse(content);\n    } else {\n      this.commands = content;\n    }\n  }\n\n  encode() {\n    return SVGPathData.encode(this.commands);\n  }\n\n  getBounds() {\n    const boundsTransform = SVGPathDataTransformer.CALCULATE_BOUNDS();\n\n    this.transform(boundsTransform);\n    return boundsTransform;\n  }\n\n  transform(\n    transformFunction: (input: SVGCommand) => SVGCommand | SVGCommand[],\n  ) {\n    const newCommands = [];\n\n    for (const command of this.commands) {\n      const transformedCommand = transformFunction(command);\n\n      if (Array.isArray(transformedCommand)) {\n        newCommands.push(...transformedCommand);\n      } else {\n        newCommands.push(transformedCommand);\n      }\n    }\n    this.commands = newCommands;\n    return this;\n  }\n\n  static encode(commands: SVGCommand[]) {\n    return encodeSVGPath(commands);\n      }\n\n  static parse(path: string) {\n    const parser = new SVGPathDataParser();\n    const commands: SVGCommand[] = [];\n    parser.parse(path, commands);\n    parser.finish(commands);\n    return commands;\n  }\n\n  static readonly CLOSE_PATH: 1 = 1;\n  static readonly MOVE_TO: 2 = 2;\n  static readonly HORIZ_LINE_TO: 4 = 4;\n  static readonly VERT_LINE_TO: 8 = 8;\n  static readonly LINE_TO: 16 = 16;\n  static readonly CURVE_TO: 32 = 32;\n  static readonly SMOOTH_CURVE_TO: 64 = 64;\n  static readonly QUAD_TO: 128 = 128;\n  static readonly SMOOTH_QUAD_TO: 256 = 256;\n  static readonly ARC: 512 = 512;\n  static readonly LINE_COMMANDS = SVGPathData.LINE_TO | SVGPathData.HORIZ_LINE_TO | SVGPathData.VERT_LINE_TO;\n  static readonly DRAWING_COMMANDS = SVGPathData.HORIZ_LINE_TO | SVGPathData.VERT_LINE_TO | SVGPathData.LINE_TO |\n  SVGPathData.CURVE_TO | SVGPathData.SMOOTH_CURVE_TO | SVGPathData.QUAD_TO |\n  SVGPathData.SMOOTH_QUAD_TO | SVGPathData.ARC;\n}\n\nexport const COMMAND_ARG_COUNTS = {\n    [SVGPathData.MOVE_TO]: 2,\n    [SVGPathData.LINE_TO]: 2,\n    [SVGPathData.HORIZ_LINE_TO]: 1,\n    [SVGPathData.VERT_LINE_TO]: 1,\n    [SVGPathData.CLOSE_PATH]: 0,\n    [SVGPathData.QUAD_TO]: 4,\n    [SVGPathData.SMOOTH_QUAD_TO]: 2,\n    [SVGPathData.CURVE_TO]: 6,\n    [SVGPathData.SMOOTH_CURVE_TO]: 4,\n    [SVGPathData.ARC]: 7,\n};\n\nexport {encodeSVGPath} from \"./SVGPathDataEncoder\";\nexport {SVGPathDataParser} from \"./SVGPathDataParser\";\nexport {SVGPathDataTransformer} from \"./SVGPathDataTransformer\";\n","import { SVGPathData } from \"svg-pathdata\"\nimport {\n  arrayFromFunction,\n  arrayRange,\n  assert,\n  DEG,\n  eq0,\n  getIntervals,\n  int,\n  M4,\n  MINUS,\n  mod,\n  newtonIterate,\n  NLA_PRECISION,\n  PI,\n  TAU,\n  V,\n  V3,\n} from \"ts3dutils\"\n\nimport {\n  BezierCurve,\n  Curve,\n  Edge,\n  EllipseCurve,\n  L3,\n  ParabolaCurve,\n  PCurveEdge,\n  StraightEdge,\n} from \".\"\nimport { floor, ceil, abs, sign } from \"./math\"\n\nexport function edgePathFromSVG(pathString: string): Edge[] {\n  let currentPos: V3 = undefined!\n  const parsed: any[] = new SVGPathData(pathString)\n    .toAbs()\n    .normalizeHVZ()\n    .sanitize(NLA_PRECISION)\n    .annotateArcs().commands\n  const path: Edge[] = []\n  for (const c of parsed) {\n    assert(\"x\" in c && \"y\" in c)\n    const endPos = new V3(c.x, c.y, 0)\n    switch (c.type) {\n      case SVGPathData.LINE_TO:\n        path.push(StraightEdge.throughPoints(currentPos, endPos))\n        break\n      case SVGPathData.CURVE_TO: {\n        const c1 = new V3(c.x1, c.y1, 0)\n        const c2 = new V3(c.x2, c.y2, 0)\n        const curve = new BezierCurve(currentPos, c1, c2, endPos, 0, 1)\n        const edge = new PCurveEdge(\n          curve,\n          currentPos,\n          endPos,\n          0,\n          1,\n          undefined,\n          curve.tangentAt(0),\n          curve.tangentAt(1),\n        )\n        path.push(edge)\n        break\n      }\n      case SVGPathData.QUAD_TO: {\n        const c1 = new V3(c.x1, c.y1, 0)\n        const curve = ParabolaCurve.quadratic(\n          currentPos,\n          c1,\n          endPos,\n        ).rightAngled()\n        const edge = new PCurveEdge(\n          curve,\n          currentPos,\n          endPos,\n          curve.tMin,\n          curve.tMax,\n          undefined,\n          curve.tangentAt(curve.tMin),\n          curve.tangentAt(curve.tMax),\n        )\n        path.push(edge)\n        break\n      }\n      case SVGPathData.ARC: {\n        const phi1 = c.phi1 * DEG,\n          phi2 = c.phi2 * DEG,\n          [phiMin, phiMax] = [phi1, phi2].sort(MINUS)\n        const stops = arrayRange(-3, 4, 1)\n          .map((n) => n * PI)\n          .filter((stop) => phiMin <= stop && stop <= phiMax)\n        const center = V(c.cX, c.cY)\n        const f1 = V3.polar(c.rX, c.xRot * DEG)\n        const f2 = V3.polar(c.rY, c.xRot * DEG + Math.PI / 2)\n        const edges = getIntervals(stops, phiMin, phiMax).map(([t1, t2]) => {\n          const deltaT = t2 - t1\n          const t1_ = mod(t1, TAU)\n          const t2_ = t1_ + deltaT\n          assert(t1_ >= 0 == t2_ >= 0)\n          const gtPI = t1_ > PI || t2_ > PI\n          const aT = gtPI ? t1_ - PI : t1_\n          const bT = gtPI ? t2_ - PI : t2_\n          const curve = new EllipseCurve(\n            center,\n            gtPI ? f1.negated() : f1,\n            gtPI ? f2.negated() : f2,\n          )\n          const a = phi1 == t1 ? currentPos : phi2 == t1 ? endPos : curve.at(aT)\n          const b = phi1 == t2 ? currentPos : phi2 == t2 ? endPos : curve.at(bT)\n          return new PCurveEdge(\n            curve,\n            a,\n            b,\n            aT,\n            bT,\n            undefined,\n            curve.tangentAt(aT),\n            curve.tangentAt(bT),\n          )\n        })\n        path.push(...(c.phiDelta > 0 ? edges : Edge.reversePath(edges)))\n        break\n      }\n    }\n    currentPos = endPos\n  }\n  return path\n}\n\n/**\n * Create an axis-aligned rectangle of edges on the XY-plane with the bottom-left corner on the origin.\n * @param width\n * @param height\n */\nexport function edgeRect(width: number = 1, height: number = width): Edge[] {\n  const vertices = [\n    new V3(0, 0, 0),\n    new V3(width, 0, 0),\n    new V3(width, height, 0),\n    new V3(0, height, 0),\n  ]\n  return StraightEdge.chain(vertices)\n}\n\nexport function edgeNgon(n: int = 3, radius: number = 1): Edge[] {\n  return StraightEdge.chain(\n    arrayFromFunction(n, (i) => V3.polar(radius, (TAU * i) / n)),\n  )\n}\n\nexport function edgeStar(\n  pointCount: int = 5,\n  r0: number = 1,\n  r1: number = 0.5,\n): Edge[] {\n  const vertices = arrayFromFunction(pointCount * 2, (i) =>\n    V3.polar(0 == i % 2 ? r0 : r1, (TAU * i) / pointCount / 2),\n  )\n  return StraightEdge.chain(vertices)\n}\n\nexport function createEdge(\n  curve: Curve,\n  a: V3,\n  b: V3,\n  aT: number,\n  bT: number,\n  flippedOf: Edge | undefined,\n  aDir: V3,\n  bDir: V3,\n  name?: string,\n): Edge {\n  if (curve instanceof L3) {\n    return new StraightEdge(\n      curve,\n      a,\n      b,\n      aT,\n      bT,\n      flippedOf as StraightEdge,\n      name,\n    )\n  } else {\n    return new PCurveEdge(\n      curve,\n      a,\n      b,\n      aT,\n      bT,\n      flippedOf as PCurveEdge,\n      aDir,\n      bDir,\n      name,\n    )\n  }\n}\n\nexport function edgeForCurveAndTs(\n  curve: Curve,\n  aT: number = curve.tMin,\n  bT: number = curve.tMax,\n): Edge {\n  return createEdge(\n    curve,\n    curve.at(aT),\n    curve.at(bT),\n    aT,\n    bT,\n    undefined,\n    aT < bT ? curve.tangentAt(aT) : curve.tangentAt(aT).negated(),\n    aT < bT ? curve.tangentAt(bT) : curve.tangentAt(bT).negated(),\n  )\n}\n\nexport function reuleaux(n: int = 3, radius: number = 1): Edge[] {\n  assert(3 <= n)\n  assert(1 == n % 2)\n  const corners = arrayFromFunction(n, (i) => V3.polar(radius, (TAU * i) / n))\n  return arrayFromFunction(n, (i) => {\n    const aI = (i + floor(n / 2)) % n,\n      bI = (i + ceil(n / 2)) % n\n    const a = corners[aI],\n      b = corners[bI]\n    const center = corners[i]\n    const f1 = center.to(a),\n      curve = new EllipseCurve(center, f1, V3.Z.cross(f1))\n    return createEdge(\n      curve,\n      a,\n      b,\n      0,\n      curve.pointT(b),\n      undefined,\n      V3.Z.cross(f1),\n      V3.Z.cross(center.to(b)),\n    )\n  })\n}\n\nexport function round(edges: Edge[], radius: number) {\n  if (eq0(radius)) {\n    return edges\n  }\n  const corners = edges.map((edge, i) => {\n    const j = (i + 1) % edges.length,\n      nextEdge = edges[j]\n    if (!edge.b.like(nextEdge.a)) return undefined\n    const angleToNext = edge.bDir.angleTo(nextEdge.aDir)\n    const c1 = edge.curve,\n      c2 = nextEdge.curve\n    if (c1 instanceof L3 && c2 instanceof L3) {\n      const normal = c1.dir1.cross(c2.dir1)\n      if (eq0(angleToNext)) return undefined\n\n      const l1inside = normal.cross(c1.dir1),\n        l2inside = normal.cross(c2.dir1)\n      const l1offset = c1.transform(M4.translate(l1inside.toLength(radius)))\n      const l2offset = c2.transform(M4.translate(l2inside.toLength(radius)))\n      const center = l1offset.isInfoWithLine(l2offset)\n      if (!center) throw new Error(\"tangential curves\")\n      const cornerA = center.plus(l1inside.toLength(-radius))\n      const cornerB = center.plus(l2inside.toLength(-radius))\n      const f1 = l1inside.toLength(-radius)\n      const curve = new EllipseCurve(\n        center,\n        f1,\n        normal.cross(f1).toLength(radius),\n      )\n      const cornerEdge = createEdge(\n        curve,\n        cornerA,\n        cornerB,\n        0,\n        curve.pointT(cornerB),\n        undefined,\n        c1.dir1,\n        c2.dir1,\n      )\n      return cornerEdge\n    } else {\n      return arbitraryCorner(edge, nextEdge, radius)\n    }\n  })\n  const result = edges.flatMap((edge, i) => {\n    const h = (i + edges.length - 1) % edges.length\n    const prevCorner = corners[h],\n      nextCorner = corners[i]\n    if (!prevCorner && !nextCorner) {\n      return edge\n    }\n    const [aT, a, aDir] = !prevCorner\n      ? [edge.aT, edge.a, edge.aDir]\n      : [edge.curve.pointT(prevCorner.b), prevCorner.b, prevCorner.bDir]\n    const [bT, b, bDir] = !nextCorner\n      ? [edge.bT, edge.b, edge.bDir]\n      : [edge.curve.pointT(nextCorner.a), nextCorner.a, nextCorner.aDir]\n    const newEdge = createEdge(edge.curve, a, b, aT, bT, undefined, aDir, bDir)\n    return !nextCorner ? newEdge : [newEdge, nextCorner]\n  })\n  return result\n}\n\nexport function arbitraryCorner(e1: Edge, e2: Edge, radius: number) {\n  const c1 = e1.curve,\n    c2 = e2.curve\n\n  function f([t1, t2]: number[]) {\n    const p1 = c1.at(t1),\n      p2 = c2.at(t2)\n    const dp1 = c1.tangentAt(t1),\n      dp2 = c2.tangentAt(t2)\n    const virtualPlaneNormal = dp1.cross(dp2)\n    const normal1 = virtualPlaneNormal.cross(dp1).unit(),\n      normal2 = virtualPlaneNormal.cross(dp2).unit()\n    const dirCross = normal1.cross(normal2)\n    if (virtualPlaneNormal.likeO()) {\n      assert(false)\n    } // lines parallel\n    const p1p2 = p1.to(p2)\n    // check if distance is zero (see also L3.distanceToLine)\n    if (!eq0(p1p2.dot(virtualPlaneNormal))) {\n      assert(false)\n    }\n    const dist1 = p1p2.cross(normal2).dot(dirCross) / dirCross.squared()\n    const dist2 = p1p2.cross(normal1).dot(dirCross) / dirCross.squared()\n    const g1 = p1.plus(normal1.times(dist1))\n    const g2 = p2.plus(normal2.times(dist2))\n    assert(g1.like(g2))\n    return [abs(dist1) - radius, abs(dist2) - radius]\n  }\n\n  const startT1 = e1.bT - (radius * sign(e1.deltaT())) / e1.bDir.length()\n  const startT2 = e2.aT + (radius * sign(e2.deltaT())) / e2.aDir.length()\n  const [t1, t2] = newtonIterate(f, [startT1, startT2])\n  const cornerA = e1.curve.at(t1)\n  const cornerB = e2.curve.at(t2)\n  const dp1 = c1.tangentAt(t1),\n    dp2 = c2.tangentAt(t2)\n  const virtualPlaneNormal = dp1.cross(dp2)\n  const normal1 = virtualPlaneNormal.cross(dp1).unit()\n  const f1 = normal1.toLength(-radius)\n  const center = cornerA.minus(f1)\n  const curve = new EllipseCurve(\n    center,\n    f1,\n    virtualPlaneNormal.cross(f1).toLength(radius),\n  )\n  const cornerEdge = createEdge(\n    curve,\n    cornerA,\n    cornerB,\n    0,\n    curve.pointT(cornerB),\n    undefined,\n    c1.tangentAt(t1),\n    c2.tangentAt(t2),\n  )\n  return cornerEdge\n}\n","import { int, M4 } from \"ts3dutils\"\n\nimport { Edge, Face, Surface } from \".\"\n\n/**\n * Created by aval on 19.04.2017.\n */\nexport abstract class FaceInfoFactory<T> {\n  static makeStatic<T>(staticInfo: T): FaceInfoFactory<T> {\n    return new (class extends FaceInfoFactory<T> {\n      constructor() {\n        super()\n      }\n\n      info(surface: Surface, contour: Edge[], holes: Edge[][]): T {\n        return staticInfo\n      }\n    })()\n  }\n\n  info(surface: Surface, contour: Edge[], holes: Edge[][]): T {\n    throw new Error(\"no default implementation\")\n  }\n\n  extrudeBottom(surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\n    return this.info(surface, contour, holes)\n  }\n\n  extrudeTop(surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\n    return this.info(surface, contour, holes)\n  }\n\n  extrudeWall(\n    index: int,\n    surface: Surface,\n    contour: Edge[],\n    holes: Edge[][] = [],\n  ): T {\n    return this.info(surface, contour, holes)\n  }\n\n  rotationWall(\n    index: int,\n    surface: Surface,\n    contour: Edge[],\n    holes: Edge[][] = [],\n  ): T {\n    return this.info(surface, contour, holes)\n  }\n\n  rotationStart(surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\n    return this.info(surface, contour, holes)\n  }\n\n  rotationEnd(surface: Surface, contour: Edge[], holes: Edge[][] = []): T {\n    return this.info(surface, contour, holes)\n  }\n\n  newSubFace(\n    original: Face,\n    surface: Surface,\n    contour: Edge[],\n    holes: Edge[][] = [],\n  ): T {\n    return original.info\n  }\n\n  transform(\n    original: Face,\n    m4: M4,\n    desc: string,\n    surface: Surface,\n    contour: Edge[],\n    holes: Edge[][] = [],\n  ): T {\n    return original.info\n  }\n}\n",null,null,"import { Equalable, Pair } from \"javasetmap.ts\"\nimport {\n  AABB,\n  arrayFromFunction,\n  arrayRange,\n  assert,\n  assertf,\n  assertInst,\n  assertVectors,\n  bagRemoveIndex,\n  binaryIndexOf,\n  binaryInsert,\n  concatenated,\n  disableConsole,\n  doubleSignedArea,\n  enableConsole,\n  eq,\n  eq0,\n  ge,\n  getLast,\n  GOLDEN_RATIO,\n  gt,\n  indexWithMax,\n  int,\n  isCCW,\n  le,\n  lerp,\n  lt,\n  M4,\n  mapPush,\n  MINUS,\n  mod,\n  NLA_PRECISION,\n  snap,\n  TAU,\n  Transformable,\n  V3,\n  min as arrayMin,\n} from \"ts3dutils\"\nimport { Mesh, MeshWith, pushQuad } from \"tsgl\"\n\nimport {\n  BRep,\n  ConicSurface,\n  COPLANAR_SAME,\n  createEdge,\n  Curve,\n  dotCurve2,\n  Edge,\n  EllipsoidSurface,\n  EPS,\n  fff,\n  getGlobalId,\n  INSIDE,\n  IntersectionPointInfo,\n  L3,\n  P3,\n  ParametricSurface,\n  PlaneSurface,\n  PointVsFace,\n  splitsVolumeEnclosingCone2,\n  splitsVolumeEnclosingFaces,\n  splitsVolumeEnclosingFacesP,\n  splitsVolumeEnclosingFacesP2,\n  StraightEdge,\n  Surface,\n  triangulateVertices,\n} from \".\"\n\nimport { abs, ceil, floor, max, min, sign } from \"./math\"\n\nexport type FaceMesh = Mesh & { LINES: int[]; TRIANGLES: int[]; normals: V3[] }\n\nexport abstract class Face extends Transformable {\n  readonly [\"constructor\"]: new (\n    surface: Surface,\n    contour: Edge[],\n    holes?: Edge[][],\n    name?: string,\n    info?: any,\n  ) => this\n  allEdges: Edge[]\n  protected aabb: AABB | undefined = undefined\n\n  constructor(\n    readonly surface: Surface,\n    readonly contour: Edge[],\n    readonly holes: Edge[][] = [],\n    readonly name?: string,\n    readonly info?: any,\n  ) {\n    super()\n    //assert(name)\n    Edge.assertLoop(contour)\n    assert(\n      contour.every((f) => f instanceof Edge),\n      () => \"contour.every(f => f instanceof Edge)\" + contour,\n    )\n    // contour.forEach(e => !surface.containsCurve(e.curve) &&\n    // console.log('FAIL:'+surface.distanceToPoint(e.curve.anchor)))\n    //contour.forEach(e => {\n    //\tassert(surface.containsCurve(e.curve), 'edge not in surface ' + e + surface)\n    //})\n    //assert(surface.edgeLoopCCW(contour), surface.toString() + contour.join('\\n'))\n    holes && holes.forEach((hole) => Edge.assertLoop(hole))\n    holes && holes.forEach((hole) => assert(!surface.edgeLoopCCW(hole)))\n    assert(!holes || holes.constructor == Array, holes && holes.toString())\n    this.allEdges = Array.prototype.concat.apply(this.contour, this.holes)\n  }\n\n  static assembleFacesFromLoops(\n    loops: Edge[][],\n    surface: Surface,\n    faceConstructor: typeof Face.prototype.constructor,\n  ): Face[] {\n    type LoopInfo = { loop: Edge[]; ccw: boolean; subloops: LoopInfo[] }\n\n    function placeRecursively(newLoopInfo: LoopInfo, loopInfos: LoopInfo[]) {\n      if (loopInfos.length == 0) {\n        loopInfos.push(newLoopInfo)\n      } else {\n        const subLoopInfo = loopInfos.find((loopInfo) =>\n          BRep.loop1ContainsLoop2(\n            loopInfo.loop,\n            loopInfo.ccw,\n            newLoopInfo.loop,\n            newLoopInfo.ccw,\n            surface,\n          ),\n        )\n        if (subLoopInfo) {\n          placeRecursively(newLoopInfo, subLoopInfo.subloops)\n        } else {\n          // newLoopInfo isnt contained by any other subLoopInfo\n          for (let i = loopInfos.length; --i >= 0; ) {\n            const subLoopInfo = loopInfos[i]\n            //console.log('cheving subLoopInfo', surface.loopContainsPoint(newLoopInfo.edges,\n            // subLoopInfo.edges[0].a))\n            if (\n              BRep.loop1ContainsLoop2(\n                newLoopInfo.loop,\n                newLoopInfo.ccw,\n                subLoopInfo.loop,\n                subLoopInfo.ccw,\n                surface,\n              )\n            ) {\n              newLoopInfo.subloops.push(subLoopInfo)\n              loopInfos.splice(i, 1) // remove it\n            }\n          }\n          loopInfos.push(newLoopInfo)\n        }\n      }\n    }\n\n    function newFacesRecursive(loopInfo: LoopInfo): void {\n      newFaces.push(\n        new faceConstructor(\n          surface,\n          loopInfo.ccw ? loopInfo.loop : Edge.reversePath(loopInfo.loop),\n          loopInfo.subloops.map((sl) =>\n            sl.ccw ? Edge.reversePath(sl.loop) : sl.loop,\n          ),\n        ),\n      )\n      loopInfo.subloops.forEach((sl) =>\n        sl.subloops.forEach((sl2) => newFacesRecursive(sl2)),\n      )\n    }\n\n    const newFaces: Face[] = []\n    const topLevelLoops: LoopInfo[] = []\n    loops.forEach((loop) =>\n      placeRecursively(\n        {\n          loop: loop,\n          ccw: surface.edgeLoopCCW(loop),\n          subloops: [],\n        },\n        topLevelLoops,\n      ),\n    )\n    topLevelLoops.forEach((tll) => newFacesRecursive(tll))\n    return newFaces\n  }\n\n  //fromLoops(loops: Edge[][], surface: Surface) {\n  //\ttype LoopInfo = {loop: Edge[], ccw: boolean, subloops: LoopInfo[]}\n  //\tfunction placeRecursively(newLoopInfo: LoopInfo, loopInfos: LoopInfo[]) {\n  //\t\tif (loopInfos.length == 0) {\n  //\t\t\tloopInfos.push(newLoopInfo)\n  //\t\t} else {\n  //\t\t\tconst subLoopInfo = loopInfos.find(loopInfo => BRep.loop1ContainsLoop2(loopInfo.loop, loopInfo.ccw,\n  // newLoopInfo.loop, newLoopInfo.ccw, surface)) if (subLoopInfo) { placeRecursively(newLoopInfo,\n  // subLoopInfo.subloops) } else { // newLoopInfo isnt contained by any other subLoopInfo for (let i =\n  // loopInfos.length; --i >= 0;) { const subLoopInfo = loopInfos[i] //console.log('cheving subLoopInfo',\n  // surface.loopContainsPoint(newLoopInfo.edges, subLoopInfo.edges[0].a)) if\n  // (BRep.loop1ContainsLoop2(newLoopInfo.loop, subLoopInfo.loop, surface)) { newLoopInfo.subloops.push(subLoopInfo)\n  // loopInfos.splice(i, 1) // remove it } } loopInfos.push(newLoopInfo) } } }  function newFacesRecursive(loopInfo:\n  // LoopInfo): void { // CW loops can be top level, if they are holes in the original face not contained in the new\n  // face if (loopInfo.ccw) { if (loopInfo.subloops.every(sl => !sl.ccw)) { const newFace = new\n  // faceConstructor(surface, loopInfo.loop, loopInfo.subloops.map(sl => sl.loop)) newFaces.push(newFace)\n  // loopInfo.subloops.forEach(sl => sl.subloops.forEach(slsl => slsl.ccw && newFacesRecursive(slsl))) } else {\n  // loopInfo.subloops.forEach(sl => sl.ccw && newFacesRecursive(sl)) } } }  const newFaces: Face[] = [] const\n  // topLevelLoops:LoopInfo[] = [] loops.forEach(loop => placeRecursively({loop: loop, ccw:\n  // surface.edgeLoopCCW(loop), subloops: []}, topLevelLoops)) topLevelLoops.forEach(tll => newFacesRecursive(tll))\n  // return newFaces }\n\n  static create(\n    surface: Surface,\n    faceEdges: Edge[],\n    holes?: Edge[][],\n    faceName?: string,\n    info?: any,\n  ) {\n    return surface instanceof PlaneSurface\n      ? new PlaneFace(surface, faceEdges, holes, faceName, info)\n      : new RotationFace(surface, faceEdges, holes, faceName, info)\n  }\n\n  intersectFace(\n    face2: Face,\n    thisBrep: BRep,\n    face2Brep: BRep,\n    faceMap: Map<Face, Edge[]>,\n    thisEdgePoints: Map<Edge, IntersectionPointInfo[]>,\n    otherEdgePoints: Map<Edge, IntersectionPointInfo[]>,\n    checkedPairs: Set<Pair<any, any>>,\n  ) {\n    //thisEdgePoints = {\n    //   get(key) {\n    //       return _thisEdgePoints.get(key)\n    //    },\n    //    set(key, value) {\n    //       assert(thisBrep.edgeFaces.get(key))\n    //        _thisEdgePoints.set(key, value)\n    //    }\n    //}\n    function hasPair(a: Equalable, b: Equalable) {\n      return checkedPairs.has(new Pair(a, b))\n    }\n\n    function addPair(a: Equalable, b: Equalable) {\n      return checkedPairs.add(new Pair(a, b))\n    }\n\n    /**\n     * @param newEdge generated segment\n     * @param col1 if newEdge is colinear to an edge of this, the edge in question\n     * @param col2 same for face2\n     * @return whether new edge was added.\n     */\n    function handleNewEdge(\n      newEdge: Edge,\n      col1: Edge | undefined,\n      col2: Edge | undefined,\n    ): boolean {\n      if (!col1 && !col2) {\n        let correctDir = face.surface\n          .normalP(newEdge.a)\n          .cross(face2.surface.normalP(newEdge.a))\n        if (correctDir.likeO()) {\n          const t = lerp(newEdge.aT, newEdge.bT, 1 / GOLDEN_RATIO),\n            p = newEdge.curve.at(t)\n          correctDir = face.surface.normalP(p).cross(face2.surface.normalP(p))\n        }\n        if (!correctDir.likeO()) {\n          if (correctDir.dot(newEdge.aDir) < 0) {\n            newEdge = newEdge.flipped()\n          }\n          mapPush(faceMap, face, newEdge)\n          mapPush(faceMap, face2, newEdge.flipped())\n        } else {\n          const p = newEdge.a\n          const plane = P3.normalOnAnchor(newEdge.aDir, p)\n          const up = face.surface.normalP(p)\n          const sameDir = up.dot(face2.surface.normalP(p)) > 0\n          const canonDir = plane.normal1.cross(up)\n          const curve = face.surface.isCurvesWithPlane(plane)[0],\n            curveT = curve.pointT(p),\n            curveDir = sign(canonDir.dot(curve.tangentAt(curveT)))\n          const curve2 = face2.surface.isCurvesWithPlane(plane)[0],\n            curve2T = curve2.pointT(p),\n            curve2Dir = sign(canonDir.dot(curve.tangentAt(curve2T)))\n          const foo = curve.diff(curveT, EPS * curveDir).dot(up)\n          const foo2 = curve2.diff(curve2T, EPS * curve2Dir).dot(up)\n          if (foo2 < foo) {\n            mapPush(faceMap, face2, sameDir ? newEdge.flipped() : newEdge)\n          }\n          if (up.dot(face2.surface.normalP(p)) < 0 == foo2 < foo) {\n            mapPush(faceMap, face, newEdge.flipped())\n          }\n          const bar = curve.diff(curveT, EPS * curveDir).dot(up)\n          const bar2 = curve2.diff(curve2T, EPS * curve2Dir).dot(up)\n          if (bar2 < bar) {\n            mapPush(faceMap, face2, sameDir ? newEdge : newEdge.flipped())\n          }\n          if (sameDir != bar2 < bar) {\n            mapPush(faceMap, face, newEdge)\n          }\n        }\n        return true\n      }\n\n      function handleEdgeInFace(\n        col1: Edge | undefined,\n        col2: Edge | undefined,\n        face: Face,\n        face2: Face,\n        thisBrep: BRep,\n        face2Brep: BRep,\n        coplanarSameIsInside: boolean,\n        has: typeof hasPair,\n        add: typeof addPair,\n      ): boolean {\n        if (col1 && !col2) {\n          if (hasPair(col1.getCanon(), face2)) return false\n\n          //add(col1.getCanon(), face2)\n          const surface2 = face2.surface\n\n          // NB: a new edge is inserted even though it may be the same as an old one\n          // however it indicates that it intersects the other volume here, i.e. the old edge cannot\n          // be counted as 'inside' for purposes of reconstitution\n          thisBrep.edgeFaces!.get(col1.getCanon())!.forEach((faceInfo) => {\n            //const dot = snap0(surface2.normal1.dot(faceInfo.inside))\n            //if (dot == 0 ? !coplanarSameIsInside : dot < 0) {\n            const pointsInsideFace = fff(faceInfo, face2.surface)\n            const edgeInside =\n              pointsInsideFace == INSIDE ||\n              (!coplanarSameIsInside && pointsInsideFace == COPLANAR_SAME)\n            const pushEdge = faceInfo.edge\n              .tangentAt(faceInfo.edge.curve.pointT(newEdge.a))\n              .like(newEdge.aDir)\n              ? newEdge\n              : newEdge.flipped()\n            assert(\n              faceInfo.edge\n                .tangentAt(faceInfo.edge.curve.pointT(pushEdge.a))\n                .like(pushEdge.aDir),\n            )\n            edgeInside && mapPush(faceMap, faceInfo.face, pushEdge)\n          })\n\n          const surface2NormalAtNewEdgeA = surface2.normalP(newEdge.a)\n          const newEdgeInside = surface2NormalAtNewEdgeA.cross(newEdge.aDir)\n          const sVEF1 = splitsVolumeEnclosingFacesP(\n            thisBrep,\n            col1.getCanon(),\n            newEdge.a,\n            newEdgeInside,\n            surface2NormalAtNewEdgeA,\n          )\n          let addNewEdge, addNewEdgeFlipped\n          if (\n            (addNewEdge =\n              sVEF1 == INSIDE ||\n              (coplanarSameIsInside && sVEF1 == COPLANAR_SAME))\n          ) {\n            mapPush(faceMap, face2, newEdge)\n          }\n          const sVEF2 = splitsVolumeEnclosingFacesP(\n            thisBrep,\n            col1.getCanon(),\n            newEdge.a,\n            newEdgeInside.negated(),\n            surface2NormalAtNewEdgeA,\n          )\n          if (\n            (addNewEdgeFlipped =\n              sVEF2 == INSIDE ||\n              (coplanarSameIsInside && sVEF2 == COPLANAR_SAME))\n          ) {\n            mapPush(faceMap, face2, newEdge.flipped())\n          }\n          if (\n            addNewEdge ||\n            addNewEdgeFlipped ||\n            (sVEF1 == COPLANAR_SAME && sVEF2 == INSIDE) ||\n            (sVEF2 == COPLANAR_SAME && sVEF1 == INSIDE)\n          ) {\n            return true\n          }\n        }\n        return false\n      }\n\n      const c1 = handleEdgeInFace(\n        col1,\n        col2,\n        face,\n        face2,\n        thisBrep,\n        face2Brep,\n        false,\n        hasPair,\n        addPair,\n      )\n      const c2 = handleEdgeInFace(\n        col2,\n        col1,\n        face2,\n        face,\n        face2Brep,\n        thisBrep,\n        true,\n        (a, b) => hasPair(b, a),\n        (a, b) => addPair(b, a),\n      )\n      if (c1 || c2) return true\n\n      if (col1 && col2) {\n        if (hasPair(col1.getCanon(), col2.getCanon())) return false\n\n        addPair(col1.getCanon(), col2.getCanon())\n\n        function handleColinearEdgeFaces(\n          col1: Edge,\n          col2: Edge,\n          thisBrep: BRep,\n          face2Brep: BRep,\n          coplanarSameIsInside: boolean,\n          thisEdgePoints: Map<Edge, IntersectionPointInfo[]>,\n          has: typeof hasPair,\n          add: typeof addPair,\n        ) {\n          // not entirely sure for what i had the dirInsides in?\n          //const aDirNegatedInside = (newEdge.a.like(col2.a) || newEdge.a.like(col2.b)) &&\n          // splitsVolumeEnclosingCone(face2Brep, newEdge.a, newEdge.aDir.negated()) == INSIDE const\n          // bDirInside = (newEdge.b.like(col2.a) || newEdge.b.like(col2.b)) &&\n          // splitsVolumeEnclosingCone(face2Brep, newEdge.b, newEdge.bDir) == INSIDE\n          for (const faceInfo of thisBrep.edgeFaces!.get(col1.getCanon())!) {\n            const sVEF = splitsVolumeEnclosingFaces(\n              face2Brep,\n              col2.getCanon(),\n              faceInfo.inside,\n              faceInfo.normalAtCanonA,\n            )\n            const edgeInside =\n              sVEF == INSIDE || (coplanarSameIsInside && sVEF == COPLANAR_SAME)\n            const pushEdge = faceInfo.edge.aDir.like(newEdge.aDir)\n              ? newEdge\n              : newEdge.flipped()\n            if (edgeInside) {\n              mapPush(faceMap, faceInfo.face, pushEdge)\n              const aT = col1.getCanon().curve.pointT(newEdge.a)\n              if (!eq(aT, col1.aT) && !eq(aT, col1.bT)) {\n                // newEdge.a is in center of col1\n                if (\n                  splitsVolumeEnclosingCone2(\n                    face2Brep,\n                    newEdge.a,\n                    newEdge.curve,\n                    newEdge.aT,\n                    -Math.sign(newEdge.deltaT()) as -1 | 1,\n                  ) == INSIDE\n                ) {\n                  mapPush(thisEdgePoints, col1.getCanon(), {\n                    p: newEdge.a,\n                    edgeT: aT,\n                  })\n                }\n              }\n              const bT = col1.getCanon().curve.pointT(newEdge.b)\n              if (!eq(bT, col1.aT) && !eq(bT, col1.bT)) {\n                if (\n                  splitsVolumeEnclosingCone2(\n                    face2Brep,\n                    newEdge.b,\n                    newEdge.curve,\n                    newEdge.bT,\n                    Math.sign(newEdge.deltaT()) as -1 | 1,\n                  ) == INSIDE\n                ) {\n                  mapPush(thisEdgePoints, col1.getCanon(), {\n                    p: newEdge.b,\n                    edgeT: bT,\n                  })\n                }\n              }\n            }\n          }\n        }\n\n        handleColinearEdgeFaces(\n          col1,\n          col2,\n          thisBrep,\n          face2Brep,\n          true,\n          thisEdgePoints,\n          hasPair,\n          addPair,\n        )\n        handleColinearEdgeFaces(\n          col2,\n          col1,\n          face2Brep,\n          thisBrep,\n          false,\n          otherEdgePoints,\n          (a, b) => hasPair(b, a),\n          (a, b) => addPair(b, a),\n        )\n        return false\n      }\n      return false\n    }\n\n    // what needs to be generated: new edges on face\n    // points on edges where they are cut by faces so that sub edges will be generated for loops\n    // points on ends of edges where the edge will be an edge in the new volume where it goes from A to B\n    //         you don't want those to be marked as 'inside', otherwise invalid faces will be added\n    // if a face cuts a corner, nothing needs to be done, as that alone does not limit what adjacent faces will be\n    function handleEndPoint(\n      a: IntersectionPointInfo | undefined,\n      b: IntersectionPointInfo | undefined,\n      newEdge: Edge,\n    ) {\n      // ends in the middle of b's face\n      if (a && !b) {\n        if (!a.colinear && a.edgeT != a.edge.aT && a.edgeT != a.edge.bT) {\n          mapPush(thisEdgePoints, a.edge.getCanon(), a)\n          assert(a.edge.isValidT(a.edgeT))\n        }\n        // else colinear segment ends in middle of other face, do nothing\n      }\n      // ends in the middle of a's face\n      if (b && !a) {\n        if (!b.colinear && b.edgeT != b.edge.aT && b.edgeT != b.edge.bT) {\n          mapPush(otherEdgePoints, b.edge.getCanon(), b)\n          assert(b.edge.isValidT(b.edgeT))\n        }\n        // else colinear segment ends in middle of other face, do nothing\n      }\n      if (a && b) {\n        assert(a.colinear || b.colinear || eq(a.t, b.t))\n        // if a or b is colinear the correct points will already have been added to the edge by handleNewEdge\n        // segment starts/ends on edge/edge intersection\n        function handleAB(\n          a: IntersectionPointInfo,\n          b: IntersectionPointInfo,\n          face: Face,\n          face2: Face,\n          thisPlane: Surface,\n          face2Plane: Surface,\n          thisBrep: BRep,\n          face2Brep: BRep,\n          first: boolean,\n          thisEdgePoints: Map<Edge, IntersectionPointInfo[]>,\n        ) {\n          if (!a.colinear && a.edgeT != a.edge.aT && a.edgeT != a.edge.bT) {\n            //if (!hasPair(a.edge.getCanon(), b.edge.getCanon())) {\n            addPair(a.edge.getCanon(), b.edge.getCanon())\n            // ends on a, on colinear segment b bT != a.edge.bT &&\n            // b can be colinear, so edgeT == aT is possible\n            if (a.p.like(b.edge.a) || a.p.like(b.edge.b)) {\n              const corner = a.p.like(b.edge.a) ? b.edge.a : b.edge.b\n              // face2brep corner on edge\n              const sVEC1 = splitsVolumeEnclosingCone2(\n                face2Brep,\n                corner,\n                a.edge.curve,\n                a.edgeT,\n                1,\n              )\n              const sVEC2 = splitsVolumeEnclosingCone2(\n                face2Brep,\n                corner,\n                a.edge.curve,\n                a.edgeT,\n                -1,\n              )\n              // if either of these return ALONG_EDGE_OR_PLANE, then the breps share a colinear edge\n\n              if (INSIDE == sVEC1 || INSIDE == sVEC2) {\n                mapPush(thisEdgePoints, a.edge.getCanon(), a)\n                assert(a.edge.isValidT(a.edgeT))\n              }\n            } else {\n              // edge / edge center intersection\n              // todo: is this even necessary considering we add edges anyway? i think so...\n              // const testVector =\n              // a.edge.tangentAt(a.edgeT).rejectedFrom(b.edge.tangentAt(b.edge.curve.pointT(a.p)))\n              // assert(!testVector.likeO())\n              const sVEF1 = splitsVolumeEnclosingFacesP2(\n                face2Brep,\n                b.edge.getCanon(),\n                a.p,\n                a.edge.curve,\n                a.edgeT,\n                1,\n                thisPlane.normalP(a.p),\n              )\n              const sVEF2 = splitsVolumeEnclosingFacesP2(\n                face2Brep,\n                b.edge.getCanon(),\n                a.p,\n                a.edge.curve,\n                a.edgeT,\n                -1,\n                thisPlane.normalP(a.p),\n              )\n              if (\n                INSIDE == sVEF1 ||\n                (first && COPLANAR_SAME == sVEF1) ||\n                INSIDE == sVEF2 ||\n                (first && COPLANAR_SAME == sVEF2)\n              ) {\n                mapPush(thisEdgePoints, a.edge.getCanon(), a)\n                assert(a.edge.isValidT(a.edgeT))\n              }\n            }\n            //}\n          }\n        }\n\n        handleAB(\n          a,\n          b,\n          face,\n          face2,\n          surface,\n          surface2,\n          thisBrep,\n          face2Brep,\n          true,\n          thisEdgePoints,\n        )\n        handleAB(\n          b,\n          a,\n          face2,\n          face,\n          surface2,\n          surface,\n          face2Brep,\n          thisBrep,\n          false,\n          otherEdgePoints,\n        )\n      }\n    }\n\n    assertInst(Face, face2)\n\n    const face = this\n    const surface = face.surface,\n      surface2 = face2.surface\n    if (!this.getAABB().touchesAABBfuzzy(face2.getAABB())) {\n      return\n    }\n    if (surface.isCoplanarTo(surface2)) {\n      return\n    }\n    const isCurves = surface.isCurvesWithSurface(surface2)\n    if (0 == isCurves.length) {\n      return\n    }\n    for (const isCurve of isCurves) {\n      assert(surface.containsCurve(isCurve))\n      assert(surface2.containsCurve(isCurve))\n    }\n\n    for (let isCurveIndex = 0; isCurveIndex < isCurves.length; isCurveIndex++) {\n      // get intersections of newCurve with other edges of face and face2\n      const isCurve = isCurves[isCurveIndex]\n      const ps1 = face.edgeISPsWithSurface(isCurve, face2.surface)\n      const ps2 = face2.edgeISPsWithSurface(isCurve, face.surface)\n      // for non-endless curves, e.g. ellipses, the intersections of the faces can be non-zero, even if one of\n      // the faces doesn't register any points on the curve. For example, if a cylinder is cut entirely by a\n      // plane face (all its edges around the cylinder), then the face will contain the entire curve and\n      // 'ps' for the plane face will be empty\n      // TODO: behavior when curves touch face?\n      // !! start in does depend on insideDir... TODO\n      assertf(\n        () =>\n          0 == ps1.length ||\n          !eq0(ps1[0].insideDir.dot(isCurve.tangentAt(ps1[0].t))),\n        () => ps1[0].insideDir.dot(isCurve.tangentAt(ps1[0].t)),\n      )\n      assertf(\n        () =>\n          0 == ps2.length ||\n          !eq0(ps2[0].insideDir.dot(isCurve.tangentAt(ps2[0].t))),\n        () => ps2[0].insideDir.dot(isCurve.tangentAt(ps2[0].t)),\n      )\n\n      function startsInside(ps: IntersectionPointInfo[], face: Face) {\n        if (0 == ps.length) {\n          return (\n            isFinite(isCurve.tMin) &&\n            face.containsPoint2(isCurve.at(isCurve.tMin)) == PointVsFace.INSIDE\n          )\n        } else {\n          return ps[0].insideDir.dot(isCurve.tangentAt(ps[0].t)) < 0\n        }\n      }\n\n      // they can't both be empty currently\n      // they can't both start 'inside'\n      let in1 = startsInside(ps1, face)\n      let in2 = startsInside(ps2, face2)\n      if ((0 == ps1.length && !in1) || (0 == ps2.length && !in2)) {\n        continue\n      }\n      //assert(!in1 || !in2)\n      let col1: IntersectionPointInfo | undefined,\n        col2: IntersectionPointInfo | undefined\n      let i = 0,\n        j = 0,\n        last\n      let startP = in1 && in2 ? isCurve.at(isCurve.tMin) : undefined,\n        startDir,\n        startT = isCurve.tMin,\n        startA: IntersectionPointInfo | undefined,\n        startB: IntersectionPointInfo | undefined\n      while (i < ps1.length || j < ps2.length) {\n        assert(i <= ps1.length)\n        assert(j <= ps2.length)\n        const a = ps1[i],\n          b = ps2[j]\n        assert(a || b)\n        if (j == ps2.length || (i < ps1.length && lt(a.t, b.t))) {\n          last = a\n          in1 = !in1\n          a.used = true\n          col1 = a.colinear ? a : undefined\n          i++\n        } else if (i == ps1.length || gt(a.t, b.t)) {\n          last = b\n          b.used = true\n          in2 = !in2\n          col2 = b.colinear ? b : undefined\n          j++\n        } else {\n          last = a\n          a.used = true\n          b.used = true\n          in1 = !in1\n          in2 = !in2\n          //if (in1 == in2) {\n          col1 = a.colinear ? a : undefined\n          col2 = b.colinear ? b : undefined\n          //}\n          i++\n          j++\n        }\n        if (startP && !(in1 && in2)) {\n          // segment end\n          startDir = isCurve.tangentAt(startT)\n          if (eq(startT, last.t)) {\n            startP = undefined\n            continue\n          }\n          assert(lt(startT, last.t))\n          startT > last.t && (startDir = startDir.negated())\n          let endDir = isCurve.tangentAt(last.t)\n          startT > last.t && (endDir = endDir.negated())\n          const newEdge = createEdge(\n            isCurve,\n            startP,\n            last.p,\n            startT,\n            last.t,\n            undefined,\n            startDir,\n            endDir,\n            \"genseg\" + getGlobalId(),\n          )\n          startP = undefined\n          if (handleNewEdge(newEdge, col1 && col1.edge, col2 && col2.edge)) {\n            handleEndPoint(startA || col1, startB || col2, newEdge)\n            handleEndPoint(\n              (a && a.used && a) || col1,\n              (b && b.used && b) || col2,\n              newEdge,\n            )\n          }\n        } else if (in1 && in2) {\n          // new segment just started\n          startP = last.p\n          startDir = last.insideDir\n          startT = last.t\n          startA = a && a.used ? a : undefined\n          startB = b && b.used ? b : undefined\n        }\n      }\n      if (in1 && in2 && startT !== isCurve.tMax) {\n        const endT = isCurve.tMax\n        startDir = isCurve.tangentAt(startT)\n        startT > endT && (startDir = startDir.negated())\n        let endDir = isCurve.tangentAt(endT)\n        startT > endT && (endDir = endDir.negated())\n        const newEdge = createEdge(\n          isCurve,\n          startP!,\n          isCurve.at(endT),\n          startT,\n          endT,\n          undefined,\n          startDir,\n          endDir,\n          \"genseg\" + getGlobalId(),\n        )\n        if (handleNewEdge(newEdge, col1 && col1.edge, col2 && col2.edge)) {\n          handleEndPoint(startA || col1, startB || col2, newEdge)\n        }\n      }\n    }\n    face.getAllEdges().forEach((edge) => {\n      checkedPairs.add(new Pair(edge.getCanon(), face2))\n    })\n    face2.getAllEdges().forEach((edge) => {\n      checkedPairs.add(new Pair(edge.getCanon(), face))\n    })\n  }\n\n  edgeISPsWithSurface(\n    isCurve: Curve,\n    surface2: Surface,\n  ): IntersectionPointInfo[] {\n    const face = this\n    const surface = face.surface\n    const loops = face.holes.concat([face.contour])\n    const ps = []\n    for (const loop of loops) {\n      const colinearEdges: boolean[] = loop.map((edge) =>\n        edge.curve.isColinearTo(isCurve),\n      )\n      //const colinearSides = loop.map((edge, edgeIndex) => -1 != colinearEdges[edgeIndex]\n      //            && -sign(isCurves[colinearEdges[edgeIndex]].tangentAt(edge.aT).dot(edge.aDir)))\n      for (let edgeIndex = 0; edgeIndex < loop.length; edgeIndex++) {\n        const edge = loop[edgeIndex]\n        const nextEdgeIndex = (edgeIndex + 1) % loop.length,\n          nextEdge = loop[nextEdgeIndex]\n        //console.log(edge.toSource()) {p:V3(2, -2.102, 0),\n        if (colinearEdges[edgeIndex]) {\n          if (isCurve.containsPoint(edge.a)) {\n            const prevEdgeIndex = (edgeIndex - 1 + loop.length) % loop.length,\n              prevEdge = loop[prevEdgeIndex]\n            const curveAT = isCurve.pointT(edge.a)\n            const colinearOutA = edge.aDir.cross(surface.normalP(edge.a))\n            if (\n              !colinearEdges[prevEdgeIndex] &&\n              dotCurve2(\n                prevEdge.curve,\n                prevEdge.bT,\n                colinearOutA,\n                -sign(prevEdge.deltaT()),\n              ) > 0\n            ) {\n              ps.push({\n                p: prevEdge.b,\n                insideDir: edge.aDir.negated(),\n                t: curveAT,\n                edge: prevEdge,\n                edgeT: prevEdge.bT,\n                colinear: false,\n              })\n            }\n            ps.push({\n              p: edge.a,\n              insideDir: edge.aDir,\n              t: curveAT,\n              edge: edge,\n              edgeT: edge.aT,\n              colinear: true,\n            })\n          }\n          if (isCurve.containsPoint(edge.b)) {\n            const curveBT = isCurve.pointT(edge.b)\n            const colinearOutB = edge.bDir.cross(surface.normalP(edge.b))\n            if (\n              !colinearEdges[nextEdgeIndex] &&\n              dotCurve2(\n                nextEdge.curve,\n                nextEdge.aT,\n                colinearOutB,\n                sign(nextEdge.deltaT()),\n              ) > 0\n            ) {\n              ps.push({\n                p: edge.b,\n                insideDir: edge.bDir,\n                t: curveBT,\n                edge: nextEdge,\n                edgeT: nextEdge.aT,\n                colinear: false,\n              })\n            }\n            ps.push({\n              p: edge.b,\n              insideDir: edge.bDir.negated(),\n              t: curveBT,\n              edge: edge,\n              edgeT: edge.bT,\n              colinear: true,\n            })\n          }\n        } else {\n          const edgeTs = edge.edgeISTsWithSurface(surface2)\n          for (const edgeT of edgeTs) {\n            const p = edge.curve.at(edgeT)\n            if (!isCurve.containsPoint(p)) continue\n            const curveT = isCurve.pointT(p)\n            assert(!isNaN(curveT))\n            const insideDir = edge\n              .tangentAt(edgeT)\n              .cross(surface.normalP(p))\n              .negated()\n\n            const isTangent = isCurve.tangentAt(curveT)\n            //if(!eq0(insideDir.dot(isTangent))) {\n            // Edge.edgeISTsWithSurface returns snapped values, so comparison with == is ok:\n            if (edgeT == edge.bT) {\n              // endpoint lies on intersection line\n              if (!colinearEdges[nextEdgeIndex]) {\n                if (!eq(curveT, isCurve.tMax)) {\n                  const pointsToInside = this.pointsToInside3(\n                    edge.b,\n                    isCurve,\n                    curveT,\n                    1,\n                  )\n                  assert(pointsToInside != PointVsFace.ON_EDGE)\n                  if (PointVsFace.INSIDE == pointsToInside) {\n                    ps.push({\n                      p: edge.b,\n                      insideDir: isTangent,\n                      t: curveT,\n                      edge: edge,\n                      edgeT: edge.bT,\n                      colinear: false,\n                    })\n                  }\n                }\n                if (!eq(curveT, isCurve.tMin)) {\n                  const pointsToInside = this.pointsToInside3(\n                    edge.b,\n                    isCurve,\n                    curveT,\n                    -1,\n                  )\n                  assert(pointsToInside != PointVsFace.ON_EDGE)\n                  if (PointVsFace.INSIDE == pointsToInside) {\n                    ps.push({\n                      p: edge.b,\n                      insideDir: isTangent.negated(),\n                      t: curveT,\n                      edge: edge,\n                      edgeT: edge.bT,\n                      colinear: false,\n                    })\n                  }\n                }\n                //let thisSide = -normVector.dot(edge.bDir)\n                //if (eq0(thisSide)) {\n                //    // advanced test\n                //    const dir = -sign(edge.deltaT())\n                //    const iscd = isCurve.at(curveT).to(isCurve.at(curveT + dir * dirFactor *\n                // eps)).dot(normVector) const ecd = edge.curve.at(edgeT).to(edge.curve.at(edgeT + dir\n                // * eps)).dot(normVector) thisSide = sign(ecd - iscd) } let nextSide =\n                // normVector.dot(nextEdge.aDir) if (eq0(nextSide)) { // advanced test const dirFactor\n                // = sign(snap0(isTangent.dot(nextEdge.curve.tangentAt(nextEdge.aT)))) assert(dirFactor\n                // !== 0) const dir = sign(nextEdge.deltaT()) const iscd =\n                // isCurve.at(curveT).to(isCurve.at(curveT + dir * dirFactor * eps)).dot(normVector)\n                // const ecd = nextEdge.curve.at(nextEdge.aT).to(nextEdge.curve.at(nextEdge.aT + dir *\n                // eps)).dot(normVector) nextSide = sign(ecd - iscd) } if (nextSide < 0 || thisSide <\n                // 0) { assert(!eq0(insideDir.dot(isTangent))) // next segment is not colinear and ends\n                // on different side ps.push({ p: edge.b, insideDir: insideDir, t: curveT, edge: edge,\n                // edgeT: edge.bT, colinear: false}) }\n              }\n            } else if (edgeT != edge.aT) {\n              // edge crosses/touches an intersection curve, neither starts nor ends on it\n              if (eq0(insideDir.dot(isTangent))) {\n                const dirFactor = sign(\n                  isTangent.dot(edge.curve.tangentAt(edgeT)),\n                )\n                const eps = 1e-4\n                for (const dir of [-1, 1]) {\n                  if (\n                    (-1 == dir * dirFactor && edgeT == edge.minT) ||\n                    (1 == dir * dirFactor && edgeT == edge.maxT) ||\n                    (-1 == dir && curveT == isCurve.tMin) ||\n                    (1 == dir && curveT == isCurve.tMax)\n                  )\n                    continue\n                  const iscd = isCurve\n                    .at(curveT)\n                    .to(isCurve.at(curveT + dir * eps))\n                    .dot(insideDir)\n                  const ecd = edge.curve\n                    .at(edgeT)\n                    .to(edge.curve.at(edgeT + dir * dirFactor * eps))\n                    .dot(insideDir)\n                  if (iscd - ecd > 0) {\n                    ps.push({\n                      p,\n                      insideDir: isTangent.times(dir),\n                      t: curveT,\n                      edge: edge,\n                      edgeT: edgeT,\n                      colinear: false,\n                    })\n                  }\n                }\n              } else {\n                ps.push({\n                  p: p,\n                  insideDir: insideDir,\n                  t: curveT,\n                  edge: edge,\n                  edgeT: edgeT,\n                  colinear: false,\n                })\n              }\n            }\n            //} else {\n            //\n            //\tconst dirFactor = sign(isTangent.dot(edge.curve.tangentAt(edgeT)))\n            //\tconst eps = 1e-4\n            //\tconst normVector = surface2.normalP(p)\n            //\tfor (const dir of [-1, 1]) {\n            //\t\tif (-1 == dir * dirFactor && edgeT == edge.minT ||\n            //\t\t\t1 == dir * dirFactor && edgeT == edge.maxT ||\n            //\t\t\t-1 == dir && curveT == isCurve.tMin ||\n            //\t\t\t1 == dir && curveT == isCurve.tMax) continue\n            //\t\tconst iscd = isCurve.at(curveT).to(isCurve.at(curveT + dir * eps)).dot(normVector)\n            //\t\tconst ecd = edge.curve.at(edgeT).to(edge.curve.at(edgeT + dir * dirFactor *\n            // eps)).dot(normVector) if (iscd > ecd) { ps.push({p, insideDir: isTangent.times(dir *\n            // dirFactor), t: curveT, edge: edge, edgeT: edgeT, colinear: false}) } }\n            // curveVsSurface(isCurve, curveT, p, surface2) }\n          }\n        }\n      }\n    }\n    // duplicate 't's are ok, as sometimes a segment needs to stop and start again\n    // should be sorted so that back facing ones are first\n    ps.sort((a, b) => a.t - b.t || a.insideDir.dot(isCurve.tangentAt(a.t)))\n    return ps\n  }\n\n  transform(m4: M4): this {\n    const mirroring = m4.isMirroring()\n    const newEdges = Edge.reversePath(\n      this.contour.map((e) => e.transform(m4)),\n      mirroring,\n    )\n    const newHoles = this.holes.map((hole) =>\n      Edge.reversePath(\n        hole.map((e) => e.transform(m4)),\n        mirroring,\n      ),\n    )\n    return new this.constructor(\n      this.surface.transform(m4),\n      newEdges,\n      newHoles,\n      this.name,\n      this.info,\n    ) as this\n  }\n\n  transform4(m4: M4): this {\n    const mirroring = m4.isMirroring()\n    const newEdges = Edge.reversePath(\n      this.contour.map((e) => e.transform4(m4)),\n      mirroring,\n    )\n    const newHoles = this.holes.map((hole) =>\n      Edge.reversePath(\n        hole.map((e) => e.transform4(m4)),\n        mirroring,\n      ),\n    )\n    return new this.constructor(\n      this.surface.transform4(m4),\n      newEdges,\n      newHoles,\n      this.name,\n      this.info,\n    ) as this\n  }\n\n  flipped() {\n    const newEdges = this.contour.map((e) => e.flipped()).reverse()\n    const newHoles = this.holes.map((hole) =>\n      hole.map((e) => e.flipped()).reverse(),\n    )\n    return new this.constructor(\n      this.surface.flipped(),\n      newEdges,\n      newHoles,\n      this.name,\n      this.info,\n    )\n  }\n\n  toString() {\n    return (\n      \"new \" +\n      this.constructor.name +\n      \"(\" +\n      this.surface +\n      \", [\" +\n      this.contour.map((e) => \"\\n\\t\" + e).join() +\n      \"]\" +\n      this.holes.map((hole) => \"\\n\\t\\thole: \" + hole.join()) +\n      \")\"\n    )\n  }\n\n  toSource() {\n    return (\n      \"new \" +\n      this.constructor.name +\n      \"(\" +\n      this.surface.toSource() +\n      \", [\" +\n      this.contour.map((e) => \"\\n\\t\" + e.toSource() + \",\").join(\"\") +\n      \"], [\" +\n      this.holes\n        .map(\n          (hole) =>\n            \"[\" + hole.map((e) => \"\\n\\t\" + e.toSource() + \",\").join(\"\") + \"]\",\n        )\n        .join(\",\") +\n      \"])\"\n    )\n  }\n\n  equals(obj: any): boolean {\n    return (\n      this == obj ||\n      (Object.getPrototypeOf(this) == Object.getPrototypeOf(obj) &&\n        this.holes.length == obj.holes.length &&\n        Edge.loopsEqual(this.contour, obj.contour) &&\n        this.holes.every((hole) =>\n          (obj as Face).holes.some((hole2) => Edge.loopsEqual(hole, hole2)),\n        ))\n    )\n  }\n\n  hashCode() {\n    function arrayHashCode(array: number[]) {\n      let hashCode = 0\n      for (const val of array) {\n        hashCode = (hashCode * 31 + val) | 0\n      }\n      return hashCode\n    }\n\n    function loopHashCode(loop: Edge[]) {\n      return arrayHashCode(loop.map((edge) => edge.hashCode()).sort(MINUS))\n    }\n\n    let hashCode = 0\n    hashCode =\n      (hashCode * 31 +\n        arrayHashCode(\n          this.holes.map((loop) => loopHashCode(loop)).sort(MINUS),\n        )) |\n      0\n    hashCode = (hashCode * 31 + loopHashCode(this.contour)) | 0\n    hashCode = (hashCode * 31 + this.surface.hashCode()) | 0\n    return hashCode\n  }\n\n  likeFace(face2: Face) {\n    function loopsLike(a: Edge[], b: Edge[]) {\n      return (\n        a.length == b.length &&\n        arrayRange(0, a.length, 1).some((offset) =>\n          a.every((edge, i) => edge.like(b[(offset + i) % a.length])),\n        )\n      )\n    }\n\n    assertInst(Face, face2)\n    return (\n      this.surface.like(face2.surface) &&\n      this.holes.length == face2.holes.length &&\n      loopsLike(this.contour, face2.contour) &&\n      this.holes.every((hole) =>\n        face2.holes.some((hole2) => loopsLike(hole, hole2)),\n      )\n    )\n  }\n\n  getAllEdges(): Edge[] {\n    return this.allEdges\n  }\n\n  addEdgeLines(mesh: Mesh & { vertices: V3[]; LINES: int[] }) {\n    assert(false, \"buggy, fix\")\n    const vertices = this.contour.flatMap((edge) => edge.getVerticesNo0()),\n      mvl = mesh.vertices!.length\n    for (let i = 0; i < vertices.length; i++) {\n      mesh.vertices!.push(vertices[i])\n      mesh.LINES!.push(mvl + i, mvl + ((i + 1) % vertices.length))\n    }\n  }\n\n  containsPoint(p: V3): boolean {\n    assertVectors(p)\n    return (\n      this.surface.loopContainsPoint(this.contour, p) != PointVsFace.OUTSIDE &&\n      !this.holes.some(\n        (hole) =>\n          this.surface.loopContainsPoint(hole, p) != PointVsFace.OUTSIDE,\n      )\n    )\n  }\n\n  containsPoint2(p: V3): PointVsFace {\n    assertVectors(p)\n    const contourContainsPoint = this.surface.loopContainsPoint(this.contour, p)\n    if (contourContainsPoint != PointVsFace.INSIDE) return contourContainsPoint\n    for (const hole of this.holes) {\n      const loopContainsPoint = this.surface.loopContainsPoint(hole, p)\n      if (loopContainsPoint != PointVsFace.OUTSIDE) {\n        return loopContainsPoint == PointVsFace.ON_EDGE\n          ? PointVsFace.ON_EDGE\n          : PointVsFace.OUTSIDE\n      }\n    }\n    return PointVsFace.INSIDE\n  }\n\n  /**\n   *\n   * @param line\n   * @returns t param of the line if there is an intersection, NaN otherwise\n   */\n  intersectsLine(line: L3): number {\n    assertInst(L3, line)\n    if (!this.getAABB().intersectsLine(line)) return NaN\n    const containedIntersectionsTs = this.surface\n      .isTsForLine(line)\n      .filter((t) => this.containsPoint(line.at(t)))\n    const nearestPointT = arrayMin(containedIntersectionsTs)\n\n    return undefined != nearestPointT ? nearestPointT : NaN\n  }\n\n  toMesh(): FaceMesh {\n    const mesh = new Mesh()\n      .addIndexBuffer(\"TRIANGLES\")\n      .addIndexBuffer(\"LINES\")\n      .addVertexBuffer(\"normals\", \"ts_Normal\")\n    this.addToMesh(mesh)\n    //mesh.compile()\n    return mesh\n  }\n\n  abstract addToMesh(mesh: FaceMesh): void\n\n  zDirVolume(): { centroid: V3; volume: number } {\n    return this.surface.zDirVolume(this.getAllEdges())\n  }\n\n  calcArea(): number {\n    return this.surface.calculateArea(this.getAllEdges())\n  }\n\n  getLoops(): Edge[][] {\n    return [this.contour, ...this.holes]\n  }\n\n  getAABB(): AABB {\n    return (\n      this.aabb ||\n      (this.aabb = AABB.forAABBs(this.contour.map((e) => e.getAABB())))\n    )\n  }\n\n  pointsToInside3(\n    p: V3,\n    curve: Curve,\n    curveT: number,\n    dir: -1 | 1,\n  ): PointVsFace {\n    const eps = 1e-6\n    const normal = this.surface.normalP(p)\n    const curveTangent = curve.tangentAt(curveT).times(dir)\n    const up = normal.cross(curveTangent)\n    const ecd = curve\n      .at(curveT)\n      .to(curve.at(curveT + dir * eps))\n      .dot(up)\n    let minValue = Infinity,\n      result,\n      advanced = false\n    for (const edge of this.getAllEdges()) {\n      const aEqP = edge.a.like(p),\n        bEqP = edge.b.like(p)\n      assert(aEqP == edge.a.like(p))\n      assert(bEqP == edge.b.like(p))\n      if (!aEqP && !bEqP) continue\n      const edgeTangent = aEqP ? edge.aDir : edge.bDir.negated()\n      const angle = curveTangent.angleRelativeNormal(edgeTangent, normal)\n      if (eq0(angle)) {\n        if (curve.isColinearTo(edge.curve)) {\n          return PointVsFace.ON_EDGE\n        }\n        const edgeT = aEqP ? edge.aT : edge.bT\n        const edgeDir = (aEqP ? 1 : -1) * sign(edge.deltaT())\n        const iscd = edge.curve.diff(edgeT, edgeDir * eps).dot(up)\n        //const iscd = edge.curve.at(edgeT).to(curve.at(edgeT + edgeDir * eps)).dot(up)\n        const diff = iscd - ecd\n        if (diff > 0 && (!advanced || diff < minValue)) {\n          advanced = true\n          minValue = diff\n          result = aEqP ? PointVsFace.OUTSIDE : PointVsFace.INSIDE\n        }\n      } else if (!advanced) {\n        const angle2 = (angle + TAU) % TAU\n        if (angle2 < minValue) {\n          minValue = angle2\n          result = aEqP ? PointVsFace.OUTSIDE : PointVsFace.INSIDE\n        }\n      }\n    }\n    if (result == undefined) throw new Error()\n    return result\n  }\n\n  pointsToInside2(p: V3, dir: V3): PointVsFace {\n    return this.pointsToInside3(p, L3.anchorDirection(p, dir), 0, 1)\n    //const normal = this.surface.normalP(p)\n    //let minAngle = Infinity, inOut = false\n    //function test(v, b) {\n    //\tconst angle = (dir.angleRelativeNormal(v, normal) + TAU + NLA_PRECISION / 2) % TAU\n    //\tif (angle <= 2 * NLA_PRECISION) {\n    //\t\treturn true\n    //\t}\n    //\tif (angle < minAngle) {\n    //\t\tminAngle = angle\n    //\t\tinOut = b\n    //\t}\n    //}\n    //for (const edge of this.getAllEdges()) {\n    //\tassert(edge.a.equals(p) || !edge.a.like(p))\n    //\tassert(edge.b.equals(p) || !edge.b.like(p))\n    //\tif (edge.a.equals(p) && test(edge.aDir, false)) return PointVsFace.ON_EDGE\n    //\tif (edge.b.equals(p) && test(edge.bDir.negated(), true)) return PointVsFace.ON_EDGE\n    //}\n    //return inOut ? PointVsFace.INSIDE : PointVsFace.OUTSIDE\n  }\n}\n\nexport class PlaneFace extends Face {\n  surface!: PlaneSurface\n\n  constructor(\n    p: P3 | PlaneSurface,\n    contour: Edge[],\n    holes?: Edge[][],\n    name?: string,\n    info?: any,\n  ) {\n    assert(p instanceof P3 || p instanceof PlaneSurface)\n    super(p instanceof P3 ? new PlaneSurface(p) : p, contour, holes, name, info)\n  }\n\n  static forVertices(\n    planeSurface: PlaneSurface | P3,\n    vs: V3[],\n    ...holeVss: V3[][]\n  ): PlaneFace {\n    const _planeSurface =\n      planeSurface instanceof P3 ? new PlaneSurface(planeSurface) : planeSurface\n    assert(\n      isCCW(vs, _planeSurface.plane.normal1),\n      \"isCCW(vs, planeSurface.plane.normal1)\",\n    )\n    const edges = StraightEdge.chain(vs)\n    holeVss.forEach((vs) =>\n      assert(\n        doubleSignedArea(vs, _planeSurface.plane.normal1) >= 0,\n        \"doubleSignedArea(vs, planeSurface.plane.normal1) >= 0\",\n      ),\n    )\n    const holes = holeVss.map((hvs) => StraightEdge.chain(hvs))\n    return new PlaneFace(planeSurface, edges, holes)\n  }\n\n  addToMesh(mesh: FaceMesh) {\n    const mvl = mesh.vertices.length\n    const normal = this.surface.plane.normal1\n    const vertices = this.contour.flatMap((edge) => edge.getVerticesNo0())\n    for (let i = 0; i < vertices.length; i++) {\n      mesh.LINES.push(mvl + i, mvl + ((i + 1) % vertices.length))\n    }\n    const holeStarts: number[] = []\n    this.holes.forEach((hole) => {\n      holeStarts.push(vertices.length)\n      vertices.push(...hole.flatMap((edge) => edge.getVerticesNo0()))\n    })\n    const triangles = triangulateVertices(normal, vertices, holeStarts).map(\n      (index) => index + mvl,\n    )\n    Array.prototype.push.apply(mesh.vertices, vertices)\n    Array.prototype.push.apply(mesh.TRIANGLES, triangles)\n    Array.prototype.push.apply(\n      mesh.normals,\n      arrayFromFunction(vertices.length, () => normal),\n    )\n  }\n\n  intersectsLine(line: L3): number {\n    assertInst(L3, line)\n    const lambda = line.isTWithPlane(this.surface.plane)\n    if (!Number.isFinite(lambda)) {\n      return NaN\n    }\n    const inside = this.containsPoint(line.at(lambda))\n    return inside ? lambda : NaN\n  }\n\n  //intersectPlaneFace(face2: PlaneFace,\n  //                   thisBrep: BRep,\n  //                   face2Brep: BRep,\n  //                   faceMap: Map<Face, Edge[]>,\n  //                   thisEdgePoints: CustomMap<Edge, { edge: Edge, edgeT: number, p: V3, passEdge?: Edge }[]>,\n  //                   otherEdgePoints: CustomMap<Edge, { edge: Edge, edgeT: number, p: V3, passEdge?: Edge }[]>,\n  //                   checkedPairs: CustomSet<Pair<Equalable, Equalable>>) {\n  //\tassertInst(CustomMap, thisEdgePoints, otherEdgePoints)\n  //\n  //\tfunction hasPair(a: Equalable, b: Equalable) {\n  //\t\treturn checkedPairs.has(new Pair(a, b))\n  //\t}\n  //\tfunction addPair(a: Equalable, b: Equalable) {\n  //\t\treturn checkedPairs.add(new Pair(a, b))\n  //\t}\n  //\n  //\t/**\n  //\t * @param newEdge generated segment\n  //\t * @param col1 if newEdge is colinear to an edge of this, the edge in question\n  //\t * @param col2 same for face2\n  //\t */\n  //\tfunction handleNewEdge(newEdge: StraightEdge, col1: Edge, col2: Edge) {\n  //\t\tif (!col1 && !col2) {\n  //\t\t\tmapPush(faceMap, face, newEdge)\n  //\t\t\tmapPush(faceMap, face2, newEdge.flipped())\n  //\t\t\treturn true\n  //\t\t}\n  //\t\tfunction handleEdgeInFace(col1, col2, face, face2, thisBrep, face2Brep, coplanarSameIsInside: boolean,\n  // has, add) { if (col1 && !col2) { if (hasPair(col1.getCanon(), face2)) return  //add(col1.getCanon(), face2)\n  // const face2Plane = face2.surface.plane  // NB: a new edge is inserted even though it may be the same as an old\n  // one // however it indicates that it intersects the other volume here, i.e. the old edge cannot // be counted as\n  // 'inside' for purposes of reconstitution thisBrep.edgeFaces.get(col1.getCanon()).forEach(faceInfo => { //const\n  // dot = snap0(face2Plane.normal1.dot(faceInfo.inside)) //if (dot == 0 ? !coplanarSameIsInside : dot < 0) { const\n  // pointsInsideFace = fff(faceInfo, face2.surface) const edgeInside = pointsInsideFace == INSIDE ||\n  // !coplanarSameIsInside && pointsInsideFace == COPLANAR_SAME const pushEdge =\n  // (faceInfo.edge.aDir.like(newEdge.aDir)) ? newEdge : newEdge.flipped()\n  // assert(faceInfo.edge.aDir.like(pushEdge.aDir)) edgeInside && mapPush(faceMap, faceInfo.face, pushEdge) })  const\n  // newEdgeInside = face2Plane.normal1.cross(newEdge.aDir) const sVEF1 = splitsVolumeEnclosingFaces(thisBrep,\n  // col1.getCanon(), newEdgeInside, face2Plane.normal1) let addNewEdge, addNewEdgeFlipped if (addNewEdge = sVEF1 ==\n  // INSIDE || coplanarSameIsInside && sVEF1 == COPLANAR_SAME) { mapPush(faceMap, face2, newEdge) } const sVEF2 =\n  // splitsVolumeEnclosingFaces(thisBrep, col1.getCanon(), newEdgeInside.negated(), face2Plane.normal1) if\n  // (addNewEdgeFlipped = sVEF2 == INSIDE || coplanarSameIsInside && sVEF2 == COPLANAR_SAME) { mapPush(faceMap,\n  // face2, newEdge.flipped()) } if (addNewEdge || addNewEdgeFlipped || sVEF1 == COPLANAR_SAME && sVEF2 == INSIDE ||\n  // sVEF2 == COPLANAR_SAME && sVEF1 == INSIDE) { return true } } } const c1 = handleEdgeInFace(col1, col2, face,\n  // face2, thisBrep, face2Brep, false, hasPair, addPair) const c2 = handleEdgeInFace(col2, col1, face2, face,\n  // face2Brep, thisBrep, true, (a, b) => hasPair(b, a), (a, b) => addPair(b, a)) if (c1 || c2) return true  if (col1\n  // && col2) { if (hasPair(col1.getCanon(), col2.getCanon())) return  addPair(col1.getCanon(), col2.getCanon())\n  // function handleColinearEdgeFaces(col1, col2, thisBrep, face2Brep, coplanarSameIsInside: boolean, thisEdgePoints,\n  // has, add) { // not entirely sure for what i had the dirInsides in? //const aDirNegatedInside =\n  // (newEdge.a.like(col2.a) || newEdge.a.like(col2.b)) && splitsVolumeEnclosingCone(face2Brep, newEdge.a,\n  // newEdge.aDir.negated()) == INSIDE //const bDirInside = (newEdge.b.like(col2.a) || newEdge.b.like(col2.b)) &&\n  // splitsVolumeEnclosingCone(face2Brep, newEdge.b, newEdge.bDir) == INSIDE\n  // thisBrep.edgeFaces.get(col1.getCanon()).forEach(faceInfo => { const sVEF = splitsVolumeEnclosingFaces(face2Brep,\n  // col2.getCanon(), faceInfo.inside, faceInfo.normalAtCanonA) const edgeInside = sVEF == INSIDE ||\n  // coplanarSameIsInside && sVEF == COPLANAR_SAME const pushEdge = (faceInfo.edge.aDir.like(newEdge.aDir)) ? newEdge\n  // : newEdge.flipped() edgeInside && mapPush(faceMap, faceInfo.face, pushEdge) }) } handleColinearEdgeFaces(col1,\n  // col2, thisBrep, face2Brep, true, thisEdgePoints, hasPair, addPair) handleColinearEdgeFaces(col2, col1,\n  // face2Brep, thisBrep, false, otherEdgePoints, (a, b) => hasPair(b, a), (a, b) => addPair(b, a)) } }   // what\n  // needs to be generated: new edges on face // points on edges where they are cut by faces so that sub edges will\n  // be generated for loops // points on ends of edges where the edge will be an edge in the new volume where it goes\n  // from A to B //         you don't want thos to be marked as 'inside', otherwise invalid faces will be added // if\n  // a face cuts a corner, nothings needs to be done, as that alone does not limit what adjacent faces will be\n  // function handleEndPoint(a: IntersectionPointInfo, b: IntersectionPointInfo, newEdge: Edge) { // ends in the\n  // middle of b's face if (a && !b) { if (!a.colinear && a.edgeT != a.edge.aT && a.edgeT != a.edge.bT) {\n  // mapPush(thisEdgePoints, a.edge.getCanon(), a) assert(a.edge.isValidT(a.edgeT)) } // else colinear segment ends\n  // in middle of other face, do nothing } // ends in the middle of a's face if (b && !a) { if (!b.colinear &&\n  // b.edgeT != b.edge.aT && b.edgeT != b.edge.bT) { mapPush(otherEdgePoints, b.edge.getCanon(), b)\n  // assert(b.edge.isValidT(b.edgeT)) } // else colinear segment ends in middle of other face, do nothing } if (a &&\n  // b) { // if a or b is colinear the correct points will already have been added to the edge by handleNewEdge //\n  // segment starts/ends on edge/edge intersection function foo(a, b, face, face2, thisPlane, face2Plane, thisBrep,\n  // face2Brep, first, thisEdgePoints) { if (!a.colinear && a.edgeT != a.edge.aT && a.edgeT != a.edge.bT) { if\n  // (!hasPair(a.edge.getCanon(), b.edge.getCanon())) { addPair(a.edge.getCanon(), b.edge.getCanon()) // ends on a,\n  // on colinear segment b bT != a.edge.bT && // b can be colinear, so edgeT == aT is possible if (a.p.like(b.edge.a)\n  // || a.p.like(b.edge.b)) { const corner = a.p.like(b.edge.a) ? b.edge.a : b.edge.b // face2brep corner on edge\n  // const sVEC1 = splitsVolumeEnclosingCone(face2Brep, corner, a.edge.aDir) const sVEC2 =\n  // splitsVolumeEnclosingCone(face2Brep, corner, a.edge.aDir.negated()) // if either of these return\n  // ALONG_EDGE_OR_PLANE, then the breps share a colinear edge  if (INSIDE == sVEC1 || INSIDE == sVEC2) {\n  // mapPush(thisEdgePoints, a.edge.getCanon(), a) assert(a.edge.isValidT(a.edgeT)) } } else { // edge / edge center\n  // intersection const aEdgeDir = a.edge.tangentAt(a.edgeT) const bEdgeDir = b.edge.tangentAt(b.edgeT) const\n  // testVector = aEdgeDir.rejectedFrom(bEdgeDir) assert(!testVector.likeO()) const sVEF1 =\n  // splitsVolumeEnclosingFaces(face2Brep, b.edge.getCanon()Vector, thisPlane.normal1) const sVEF2 =\n  // splitsVolumeEnclosingFaces(face2Brep, b.edge.getCanon()Vector.negated(), thisPlane.normal1) if (INSIDE ==\n  // sVEF1 || INSIDE == sVEF2) { mapPush(thisEdgePoints, a.edge.getCanon(), a) assert(a.edge.isValidT(a.edgeT)) } } }\n  // } }  foo(a, b, face, face2, thisPlane, face2Plane, thisBrep, face2Brep, true, thisEdgePoints) foo(b, a, face2,\n  // face, face2Plane, thisPlane, face2Brep, thisBrep, false, otherEdgePoints)  } }   assertInst(PlaneFace, face2)\n  // const face: PlaneFace = this // get intersection const thisPlane = this.surface.plane, face2Plane =\n  // face2.surface.plane if (thisPlane.isParallelToPlane(face2Plane)) { if (thisPlane.like(face2Plane)) { // normal1\n  // same and same location in space // addLikeSurfaceFaces(likeSurfaceFaces, this, face2) } return } const isLine =\n  // L3.fromPlanes(thisPlane, face2Plane) // get intersections of newCurve with other edges of face and face2 const\n  // ps1 = planeFaceEdgeISPsWithPlane(face, isLine, face2Plane) const ps2 = planeFaceEdgeISPsWithPlane(face2, isLine,\n  // thisPlane) if (ps1.length == 0 || ps2.length == 0) { // faces to not intersect return }  let col1:\n  // IntersectionPointInfo, col2: IntersectionPointInfo let in1 = false, in2 = false let i = 0, j = 0, last let\n  // startP, startDir, startT, startA, startB while (i < ps1.length || j < ps2.length) { assert(i <= ps1.length)\n  // assert(j <= ps2.length) const a = ps1[i], b = ps2[j] assert(a || b) if (j == ps2.length || i < ps1.length &&\n  // lt(a.t, b.t)) { last = a in1 = !in1 a.used = true in1 && (col1 = a.colinear && a) i++ } else if (i == ps1.length\n  // || gt(a.t, b.t)) { last = b in2 = !in2 b.used = true in2 && (col2 = b.colinear && b) j++ } else { // TODO: this\n  // will break if 3 points on the same t last = a in1 = !in1 in2 = !in2 //if (in1 == in2) { a.used = true b.used =\n  // true in1 && (col1 = a.colinear && a) in2 && (col2 = b.colinear && b) //} i++ j++ } if (startP && !(in1 && in2))\n  // { // segment end const newEdge = new StraightEdge(isLine, startP, last.p, startT, last.t, undefined, 'genseg' +\n  // getGlobalId()) startP = undefined last.used = true if (handleNewEdge(newEdge, col1 && col1.edge, col2 &&\n  // col2.edge)) { handleEndPoint(startA || col1, startB || col2, newEdge) handleEndPoint(a && a.used && a || col1, b\n  // && b.used && b || col2, newEdge) } } else if (in1 && in2) { // new segment just started startP = last.p startDir\n  // = last.insideDir startT = last.t startA = a && a.used && a startB = b && b.used && b } if (!in1 && a && last ==\n  // a && a.colinear) { checkedPairs.add(new Pair(a.edge.getCanon(), face2)) } if (!in2 && b && (last == b || b.used)\n  // && b.colinear) { checkedPairs.add(new Pair(b.edge.getCanon(), face)) } } }\n\n  withHole(holeEdges: Edge[]) {\n    return new PlaneFace(this.surface, this.contour, [holeEdges])\n  }\n\n  pointsToInside(p: V3, dir: V3): PointVsFace {\n    return this.containsPoint2(p.plus(dir.times(NLA_PRECISION * 8)))\n  }\n\n  edgeISPsWithPlane(isLine: L3, plane2: P3): IntersectionPointInfo[] {\n    const face = this\n    assert(face.surface.plane.containsLine(isLine))\n    assert(plane2.containsLine(isLine))\n    const plane = face.surface.plane\n    const ps: IntersectionPointInfo[] = []\n    const loops = [face.contour].concat(face.holes)\n    loops.forEach((loop) => {\n      const colinearEdges = loop.map(\n        (edge) =>\n          edge.colinearToLine(isLine) && -sign(edge.aDir.dot(isLine.dir1)),\n      )\n      const isLineOut = isLine.dir1.cross(plane.normal1)\n\n      loop.forEach((edge, edgeIndex, edges) => {\n        const nextEdgeIndex = (edgeIndex + 1) % edges.length,\n          nextEdge = edges[nextEdgeIndex],\n          colinearEdge = colinearEdges[edgeIndex]\n        //console.log(edge.toSource()) {p:V3(2, -2.102, 0),\n        if (colinearEdge) {\n          // edge colinear to intersection line\n          const curveAT = isLine.pointT(edge.a),\n            curveBT = isLine.pointT(edge.b)\n          // add interval for colinear segment\n          ps.push(\n            {\n              p: edge.a,\n              insideDir: edge.aDir,\n              t: curveAT,\n              edge: edge,\n              edgeT: edge.aT,\n              colinear: true,\n            },\n            {\n              p: edge.b,\n              insideDir: edge.bDir.negated(),\n              t: curveBT,\n              edge: edge,\n              edgeT: edge.bT,\n              colinear: true,\n            },\n          )\n          // open next interval if necessary\n          const nextSide =\n            colinearEdges[nextEdgeIndex] ||\n            dotCurve2(\n              nextEdge.curve,\n              nextEdge.aT,\n              isLineOut,\n              nextEdge.deltaTSign(),\n            )\n          if (colinearEdge * nextSide < 0) {\n            // side changes\n            ps.push({\n              p: nextEdge.a,\n              insideDir: edge.bDir,\n              t: curveBT,\n              edge: nextEdge,\n              edgeT: nextEdge.aT,\n              colinear: false,\n            })\n          }\n        } else {\n          // not necessarily a straight edge, so multiple intersections are possible\n          const edgeTs = edge.edgeISTsWithPlane(plane2)\n          assert(\n            edgeTs.every((t) => plane2.containsPoint(edge.curve.at(t))),\n            edgeTs,\n          )\n          for (const edgeT of edgeTs) {\n            if (edgeT == edge.bT) {\n              // endpoint lies on intersection line\n              const side = dotCurve2(\n                edge.curve,\n                edge.bT,\n                isLineOut,\n                -edge.deltaTSign(),\n              )\n              const nextSide =\n                colinearEdges[nextEdgeIndex] ||\n                dotCurve2(\n                  nextEdge.curve,\n                  nextEdge.aT,\n                  isLineOut,\n                  nextEdge.deltaTSign(),\n                )\n              if (side * nextSide < 0) {\n                // next segment is not colinear and ends on different side\n                ps.push({\n                  p: edge.b,\n                  insideDir: plane2.normal1.negated(),\n                  t: isLine.pointT(edge.b),\n                  edge: edge,\n                  edgeT: edge.bT,\n                  colinear: false,\n                })\n              }\n            } else if (edgeT != edge.aT) {\n              // edge crosses intersection line, neither starts nor ends on it\n              const p = edge.curve.at(edgeT)\n              assert(\n                plane2.containsPoint(p),\n                edge.toString(),\n                p,\n                edgeT,\n                plane2.distanceToPoint(p),\n              )\n              assert(\n                isLine.containsPoint(p),\n                edge.toString(),\n                p,\n                edgeT,\n                isLine.distanceToPoint(p),\n              )\n              const insideDir = plane2.normal1.negated()\n              ps.push({\n                p: p,\n                insideDir: insideDir,\n                t: isLine.pointT(p),\n                edge: edge,\n                edgeT: edgeT,\n                colinear: false,\n              })\n            }\n          }\n        }\n      })\n    })\n    // duplicate 't's are ok, as sometimes a segment needs to stop and start again\n    // should be sorted so that back facing ones are first\n    ps.sort((a, b) => a.t - b.t || a.insideDir.dot(isLine.dir1))\n    return ps\n  }\n}\n\nexport class RotationFace extends Face {\n  constructor(\n    rot: Surface,\n    contour: Edge[],\n    holes?: Edge[][],\n    name?: string,\n    info?: any,\n  ) {\n    super(rot, contour, holes, name, info)\n  }\n\n  static loopDoesNotCrossPlane(loop: Edge[], seamPlane: P3) {\n    let side = 0\n\n    // returns true if d is on the other side as previous calls\n    function checkSide(d: number) {\n      if (side == 0) {\n        side = d\n      } else {\n        return !side || side * d < 0\n      }\n      return false\n    }\n\n    for (const edge of loop) {\n      const ts = edge.edgeISTsWithPlane(seamPlane)\n      if (ts.length == 0) {\n        if (\n          !(edge.curve instanceof L3) &&\n          checkSide(seamPlane.distanceToPointSigned(edge.a))\n        )\n          return false\n      } else {\n        for (const t of ts) {\n          // TODO: this part probably should be in a separate function\n          // check 'backwards' only if if aT != t\n          if (edge.aT != t) {\n            if (\n              checkSide(\n                dotCurve2(edge.curve, t, seamPlane.normal1, -edge.deltaTSign()),\n              )\n            )\n              return false\n          }\n          if (edge.bT != t) {\n            if (\n              checkSide(\n                dotCurve2(edge.curve, t, seamPlane.normal1, edge.deltaTSign()),\n              )\n            )\n              return false\n          }\n        }\n      }\n    }\n    return true\n  }\n\n  getAABB() {\n    if (this.aabb) return this.aabb\n    this.aabb = AABB.forAABBs(this.contour.map((e) => e.getAABB()))\n    this.aabb.addPoints(\n      this.surface.getExtremePoints().filter((p) => this.containsPoint(p)),\n    )\n    return this.aabb\n  }\n\n  unrollLoop(this: this & { surface: ParametricSurface }, edgeLoop: Edge[]) {\n    const vs: V3[] = []\n    const uvP = this.surface.uvPFunc()\n    const verticesNo0s = edgeLoop.map((edge) => edge.getVerticesNo0())\n    const startEdgeIndex = verticesNo0s.findIndex(\n      (edgeVertices) => !eq(uvP(edgeVertices[0]).x, Math.PI),\n    )\n    assert(-1 != startEdgeIndex)\n    // console.log(startEdgeIndex)\n    for (let i = 0; i < edgeLoop.length; i++) {\n      const edgeIndex = (i + startEdgeIndex) % edgeLoop.length\n      for (let j = 0; j < verticesNo0s[edgeIndex].length; j++) {\n        const p = verticesNo0s[edgeIndex][j]\n        const localP = uvP(p)\n        // console.log(hint, p.sce, localP.sce)\n        vs.push(localP)\n      }\n    }\n    edgeLoop.forEach((edge) => {\n      edge.getVerticesNo0().forEach((p) => {\n        vs.push(uvP(p))\n      })\n    })\n    console.log(\"vs\\n\", vs.join(\"\\n\"), vs.length)\n    return vs\n  }\n\n  /**\n   * f1 cos t + f2 sin t\n   * tan(phi) = sin / cos\n   *          = (f1x cos t + f2x sin t) / (f1y cos t + f2y sin t)\n   *\n   *          = (-f1x sin t + f2x cos t) / (-f1y sin t + f2y cos t)\n   */\n  unrollEllipsoidLoops(edgeLoops: Edge[][]) {\n    const verticesUV: V3[] = [],\n      vertices: V3[] = [],\n      loopStarts = []\n    const ellipsoid: EllipsoidSurface = this.surface as EllipsoidSurface\n    const ptpf = ellipsoid.uvPFunc()\n    const testDegeneratePoint =\n      ellipsoid instanceof EllipsoidSurface\n        ? (nextStart: V3) =>\n            nextStart.like(ellipsoid.center.plus(ellipsoid.f3)) ||\n            nextStart.like(ellipsoid.center.minus(ellipsoid.f3))\n        : (nextStart: V3) =>\n            nextStart.like((this.surface as ConicSurface).center)\n    for (const edgeLoop of edgeLoops) {\n      loopStarts.push(verticesUV.length)\n      // console.log(startEdgeIndex)\n      for (let i = 0; i < edgeLoop.length; i++) {\n        const ipp = (i + 1) % edgeLoop.length\n        const verticesNo0 = edgeLoop[i].getVerticesNo0()\n        vertices.push(...verticesNo0)\n        verticesUV.push(...verticesNo0.map((v) => ptpf(v)))\n        const nextStart = edgeLoop[ipp].a\n        //console.log('BLAH', nextStart.str, ellipsoid.center.plus(ellipsoid.f3).str)\n\n        if (testDegeneratePoint(nextStart)) {\n          const bDirLC = ellipsoid.matrixInverse.transformVector(\n              edgeLoop[i].bDir,\n            ),\n            aDirLC = ellipsoid.matrixInverse.transformVector(edgeLoop[ipp].aDir)\n          const inAngle = Math.atan2(-bDirLC.y, -bDirLC.x)\n          const outAngle = Math.atan2(aDirLC.y, aDirLC.x)\n\n          const stLast = verticesUV.pop()!\n          verticesUV.push(\n            new V3(inAngle, stLast.y, 0),\n            new V3(outAngle, stLast.y, 0),\n          )\n          vertices.push(getLast(vertices))\n        }\n        verticesUV.forEach(({ u, v }) => {\n          assert(isFinite(u))\n          assert(isFinite(v))\n        })\n      }\n    }\n    let normals\n    if (this.surface instanceof EllipsoidSurface) {\n      normals = vertices.map((v) => ellipsoid.normalP(v))\n    } else {\n      const normalUV = ellipsoid.normalUVFunc()\n      normals = verticesUV.map(({ u, v }) => normalUV(u, v))\n    }\n    assert(vertices.length == vertices.length)\n    //console.log(verticesUV.map(v => v.str).join('\\n'))\n    return {\n      verticesUV: verticesUV,\n      vertices: vertices,\n      normals: normals,\n      loopStarts: loopStarts,\n    }\n  }\n\n  unrollCylinderLoops(loops: Edge[][]) {\n    const vertexLoops = loops.map((loop) =>\n      loop.flatMap((edge) => edge.getVerticesNo0()),\n    )\n    const surface = this.surface as ParametricSurface\n    const vertices: V3[] = concatenated(vertexLoops)\n    // this.unrollLoop(loop).map(v => new V3(v.x / uStep, v.y / vStep, 0)))\n    const loopStarts = vertexLoops.reduce(\n      (arr, loop) => (arr.push(getLast(arr) + loop.length), arr),\n      [0],\n    )\n    const uvPFunc = surface.uvPFunc()\n    const verticesUV = vertices.map((v) => uvPFunc(v))\n    const uvN = surface.normalUVFunc()\n    const normals: V3[] = verticesUV.map(({ u, v }) => uvN(u, v))\n    return {\n      verticesUV: verticesUV,\n      vertices: vertices,\n      normals: normals,\n      loopStarts: loopStarts,\n    }\n  }\n\n  /**\n   * at(s, t) = new V3(s cos t, s sin t, t + )\n   *\n   * x = 0\n   *\n   * s cos t = 0\n   * ==> s = 0 || cos t = 0\n   * ==> L3.Z || V3(0, +-s, k * 2 pi)\n   *\n   * x = c\n   * s cos t = c\n   * ==> V3(c, c sin t / cos t = c tan t, t)\n   * ==> V3(c, c t, arctan t)\n   *\n   *\n   * x . n = w\n   *      s cos t nx + s sin t ny + t nz = w\n   *      s = (w - t nz) / (cos t nx + sub t ny)\n   * ==> V3(\n   *          cos t (w - t nz) / (cos t nx + sin t ny)\n   *          sin t (w - t nz) / (cos t nx + sin t ny)\n   *          t)\n   *\n   *  ==> V3(\n   *          (w - z arctan t) / (x + t y)\n   *          (w - z arctan t) / (y + x / t)\n   *          arctan t)\n   *\n   *\n   *\n   */\n  addToMesh(\n    this: this & { surface: ParametricSurface },\n    mesh: FaceMesh,\n    uStep: number = this.surface.uStep,\n    vStep: number = this.surface.vStep,\n  ) {\n    assertf(\n      () => uStep > 0 && vStep > 0,\n      uStep,\n      vStep,\n      \"Surface: \" + this.surface,\n    )\n    const triangles: int[] = []\n    const pMN = (m: number, n: number) =>\n      this.surface.pUVFunc()(m * uStep, n * vStep)\n    const normalMN = (m: number, n: number) =>\n      this.surface.normalUVFunc()(m * uStep, n * vStep)\n    const loops = this.getLoops()\n    const { vertices, verticesUV, normals, loopStarts } =\n      this.surface instanceof EllipsoidSurface ||\n      this.surface instanceof ConicSurface\n        ? this.unrollEllipsoidLoops(loops)\n        : this.unrollCylinderLoops(loops)\n    loopStarts.push(vertices.length)\n    const verticesMN = verticesUV.map(\n      ({ u, v }) => new V3(u / uStep, v / vStep, 0),\n    )\n\n    for (\n      let vertexLoopIndex = 0;\n      vertexLoopIndex < loops.length;\n      vertexLoopIndex++\n    ) {\n      const vertexLoopStart = loopStarts[vertexLoopIndex]\n      const vertexLoopLength = loopStarts[vertexLoopIndex + 1] - vertexLoopStart\n      const base = mesh.vertices!.length + loopStarts[vertexLoopIndex]\n      for (let i = 0; i < vertexLoopLength; i++) {\n        mesh.LINES.push(base + i, base + ((i + 1) % vertexLoopLength))\n      }\n    }\n\n    disableConsole()\n    let minM = Infinity,\n      maxM = -Infinity,\n      minN = Infinity,\n      maxN = -Infinity\n    //console.log('surface', this.surface.str)\n    //console.log(verticesMN)\n    //drPs.push(...verticesMN.map((v, i) => ({p: vertices[i], text: `${i} uv: ${v.toString(x => round10(x,\n    // -4))}`})))\n    verticesMN.forEach(([m, n]) => {\n      assert(isFinite(m))\n      assert(isFinite(n))\n      minM = min(minM, m)\n      maxM = max(maxM, m)\n      minN = min(minN, n)\n      maxN = max(maxN, n)\n    })\n    if (ParametricSurface.is(this.surface)) {\n      //assert(this.surface.boundsSigned(minM * uStep, minN * vStep) > -NLA_PRECISION)\n      //assert(this.surface.boundsSigned(maxM * uStep, maxN * vStep) > -NLA_PRECISION)\n    }\n    const mOffset = floor(minM + NLA_PRECISION),\n      nOffset = floor(minN + NLA_PRECISION)\n    const mRes = ceil(maxM - NLA_PRECISION) - mOffset,\n      nRes = ceil(maxN - NLA_PRECISION) - nOffset\n    console.log(uStep, vStep, mRes, nRes)\n    if (mRes == 1 && nRes == 1) {\n      // triangulate this face as if it were a plane\n      const polyTriangles = triangulateVertices(\n        V3.Z,\n        verticesMN,\n        loopStarts.slice(1, 1 + this.holes.length),\n      )\n      triangles.push(...polyTriangles)\n    } else {\n      const partss: int[][][] = new Array(mRes * nRes)\n\n      function fixUpPart(part: number[], baseM: int, baseN: int) {\n        assert(\n          baseM < mRes && baseN < nRes,\n          `${baseM}, ${baseN}, ${mRes}, ${nRes}`,\n        )\n        console.log(\"complete part\", part, baseM, baseN)\n        //console.trace()\n        assert(part.length)\n        const cellM = baseM + mOffset,\n          cellN = baseN + nOffset\n        for (const index of part) {\n          assert(\n            le(cellM, verticesMN[index].x) &&\n              le(verticesMN[index].x, cellM + 1),\n            `${index} ${verticesMN[index].str} ${cellM} ${cellM}`,\n          )\n          assert(\n            le(cellN, verticesMN[index].y) &&\n              le(verticesMN[index].y, cellN + 1),\n          )\n        }\n        const pos = baseN * mRes + baseM\n        ;(partss[pos] || (partss[pos] = [])).push(part)\n        //const outline = partss[pos] || (partss[pos] = [minM + baseM * uStep, minN + baseN * vStep, minM +\n        // (baseM + 1) * uStep, minN + (baseN + 1) * vStep])\n      }\n\n      // 'some' instead of forEach so we can return out of the entire function if this.edges crosses no borders\n      // and\n      for (\n        let vertexLoopIndex = 0;\n        vertexLoopIndex < loops.length;\n        vertexLoopIndex++\n      ) {\n        let part: int[] | undefined = undefined\n        let firstPart: int[] | undefined = undefined\n        let firstPartBaseM: int = -1\n        let firstPartBaseN: int = -1\n        let lastBaseM = -1,\n          lastBaseN = -1\n        let partCount = 0\n        const vertexLoopStart = loopStarts[vertexLoopIndex]\n        const vertexLoopLength =\n          loopStarts[vertexLoopIndex + 1] - vertexLoopStart\n        for (let vlvi = 0; vlvi < vertexLoopLength; vlvi++) {\n          const vx0index = vertexLoopStart + vlvi,\n            vx0 = verticesMN[vx0index]\n          const vx1index = vertexLoopStart + ((vlvi + 1) % vertexLoopLength),\n            vx1 = verticesMN[vx1index]\n          //console.log('dask', vx0index, vx1index)\n          const vx01 = vx0.to(vx1)\n          assert(vx0)\n          const di = vx01.x,\n            dj = vx01.y\n          let vxIndex = vx0index,\n            vx = vx0,\n            currentT = 0\n          let whileLimit = 400\n          while (--whileLimit) {\n            // points which are on a grid line are assigned to the cell into which they are going (+\n            // NLA_PRECISION * sign(di)) if they are parallel to the gridline (eq0(di)), they belong the\n            // the cell for which they are a CCW boundary\n            const baseM =\n              floor(vx.u + (!eq0(di) ? sign(di) : -sign(dj)) * NLA_PRECISION) -\n              mOffset\n            const baseN =\n              floor(vx.v + (!eq0(dj) ? sign(dj) : sign(di)) * NLA_PRECISION) -\n              nOffset\n            assert(\n              baseM < mRes && baseN < nRes,\n              `${baseM}, ${baseN}, ${mRes}, ${nRes}`,\n            )\n            // figure out the next intersection with a gridline:\n            // iNext is the positive horizontal distance to the next vertical gridline\n            const iNext =\n              ceil(sign(di) * vx.u + NLA_PRECISION) - sign(di) * vx.u\n            const jNext =\n              ceil(sign(dj) * vx.v + NLA_PRECISION) - sign(dj) * vx.v\n            const iNextT = currentT + iNext / abs(di)\n            const jNextT = currentT + jNext / abs(dj)\n            //console.log(vxIndex, vx.str, 'vij', vx.u, vx.v, 'd', di, dj, 'ijNext', iNext, jNext, 'nextT',\n            // iNextT, jNextT)\n            if (lastBaseM != baseM || lastBaseN != baseN) {\n              if (part) {\n                if (!firstPart) {\n                  firstPart = part\n                  firstPartBaseM = lastBaseM\n                  firstPartBaseN = lastBaseN\n                } else {\n                  partCount++\n                  fixUpPart(part, lastBaseM, lastBaseN)\n                }\n              }\n              part = [vxIndex]\n            }\n            lastBaseM = baseM\n            lastBaseN = baseN\n            currentT = min(iNextT, jNextT)\n            if (ge(currentT, 1)) {\n              //console.log('breaking ', vx1index)\n              part!.push(vx1index)\n              break\n            } else {\n              const nextPoint = vx0.lerp(vx1, currentT)\n              const nextPointIndex = addVertex(nextPoint.x, nextPoint.y)\n\n              //console.log('pushing ', nextPointIndex)\n              part!.push(nextPointIndex)\n              vx = nextPoint\n              vxIndex = nextPointIndex\n            }\n          }\n          assert(whileLimit, \"whileLimit\")\n        }\n        if (0 == partCount) {\n          // complete loop\n          assert(false, \"found a hole, try increasing resolution\")\n        }\n        // at this point, the firstPart hasn't been added, and the last part also hasn't been added\n        // either they belong to the same cell, or not\n        if (firstPartBaseM == lastBaseM && firstPartBaseN == lastBaseN) {\n          part!.pop()\n          fixUpPart(part!.concat(firstPart!), lastBaseM, lastBaseN)\n        } else {\n          fixUpPart(firstPart!, firstPartBaseM!, firstPartBaseN!)\n          fixUpPart(part!, lastBaseM, lastBaseN)\n        }\n        console.log(\"firstPart\", firstPart)\n      }\n      console.log(\"calculated parts\", partss)\n      const fieldVertexIndices = new Array((mRes + 1) * (nRes + 1))\n\n      function addVertex(m: number, n: number): int {\n        verticesMN.push(new V3(m, n, 0))\n        normals.push(normalMN(m, n))\n        return vertices.push(pMN(m, n)) - 1\n      }\n\n      function getGridVertexIndex(i: int, j: int): int {\n        const index = j * (mRes + 1) + i\n        return (\n          fieldVertexIndices[index] ||\n          (fieldVertexIndices[index] = addVertex(i + mOffset, j + nOffset))\n        )\n      }\n\n      for (let col = 0; col < mRes; col++) {\n        let inside = false\n        for (let row = 0; row < nRes; row++) {\n          const pos = row * mRes + col\n          const fieldU = mOffset + col,\n            fieldV = nOffset + row\n          const parts = partss[pos]\n          if (!parts) {\n            if (inside) {\n              pushQuad(\n                triangles,\n                false,\n                getGridVertexIndex(col, row),\n                getGridVertexIndex(col + 1, row),\n                getGridVertexIndex(col, row + 1),\n                getGridVertexIndex(col + 1, row + 1),\n              )\n            }\n          } else {\n            // assemble the field with segments in in\n            function opos(index: int) {\n              const p = verticesMN[index],\n                u1 = p.x - fieldU,\n                v1 = p.y - fieldV\n              assert(\n                -NLA_PRECISION < u1 &&\n                  u1 < 1 + NLA_PRECISION &&\n                  -NLA_PRECISION < v1 &&\n                  v1 < 1 + NLA_PRECISION,\n                \"oob u1 v1 \" +\n                  u1 +\n                  \" \" +\n                  v1 +\n                  \" \" +\n                  index +\n                  \" \" +\n                  p.str +\n                  \"IF THIS FAILS check canonSeamU is correct\",\n              )\n              return v1 < u1 ? u1 + v1 : 4 - u1 - v1\n            }\n\n            while (parts.length) {\n              const outline: int[] = []\n              const startPart = parts[0]\n              assert(startPart.length > 0)\n              let currentPart = startPart\n              do {\n                outline.push(...currentPart)\n                const currentPartEndOpos = opos(getLast(currentPart))\n                const nextPartIndex = indexWithMax(\n                  parts,\n                  (part) => -mod(opos(part[0]) - currentPartEndOpos, 4),\n                )\n                const nextPart = bagRemoveIndex(parts, nextPartIndex)\n                let currentOpos = currentPartEndOpos\n                const nextPartStartOpos =\n                  opos(nextPart[0]) > currentOpos\n                    ? opos(nextPart[0])\n                    : opos(nextPart[0]) + 4\n                let nextOpos = ceil(currentOpos + NLA_PRECISION)\n                let flipping = eq0(\n                  ((currentOpos + NLA_PRECISION) % 1) - NLA_PRECISION,\n                )\n                //inside = inside != (!eq0(currentOpos % 1) && currentOpos % 2 < 1)\n                while (lt(nextOpos, nextPartStartOpos)) {\n                  switch (nextOpos % 4) {\n                    case 0:\n                      outline.push(getGridVertexIndex(col, row))\n                      break\n                    case 1:\n                      inside = inside != flipping\n                      outline.push(getGridVertexIndex(col + 1, row))\n                      break\n                    case 2:\n                      outline.push(getGridVertexIndex(col + 1, row + 1))\n                      break\n                    case 3:\n                      inside = inside != flipping\n                      outline.push(getGridVertexIndex(col, row + 1))\n                      break\n                  }\n                  flipping = true\n                  nextOpos++\n                }\n                // if the next loop would have completed a top or bottom segment\n                inside =\n                  inside !=\n                  (flipping &&\n                    nextOpos % 2 == 1 &&\n                    eq(nextOpos, nextPartStartOpos))\n                currentOpos = nextOpos\n                currentPart = nextPart\n              } while (currentPart != startPart)\n              // triangulate outline\n              if (outline.length == 3) {\n                // its just a triangle\n                triangles.push(...outline)\n              } else {\n                const polyTriangles = triangulateVertices(\n                  V3.Z,\n                  outline.map((i) => verticesMN[i]),\n                  [],\n                ).map((i) => outline[i])\n                triangles.push(...polyTriangles)\n              }\n              //console.log('outline', col, row, outline)\n            }\n          }\n        }\n      }\n    }\n    //console.log('trinagle', triangles.max(), vertices.length, triangles.length, triangles.toSource(),\n    // triangles.map(col => vertices[col].$).toSource() ) assert(normals.every(n => n.hasLength(1)), normals.find(n\n    // => !n.hasLength(1)).length() +' '+normals.findIndex(n => !n.hasLength(1)))\n    Array.prototype.push.apply(\n      mesh.TRIANGLES,\n      triangles.map((index) => index + mesh.vertices!.length),\n    )\n    Array.prototype.push.apply(mesh.vertices, vertices)\n    Array.prototype.push.apply(mesh.normals, normals)\n    //this.addEdgeLines(mesh)\n    enableConsole()\n  }\n\n  addToMesh2(\n    this: this & { surface: ParametricSurface },\n    mesh: MeshWith<\"TRIANGLES\">,\n  ) {\n    const closed = false\n    const zSplit = 8\n    const ribs: { value: number; left: number[]; right: number[] }[] = []\n    let minZ = Infinity,\n      maxZ = -Infinity\n    //let cmp = (a, b) => a.value - b.value\n    const f = this.surface.pUVFunc()\n    const normalF = this.surface.normalUVFunc()\n    const vertexLoops = this.holes\n      .concat([this.contour])\n      .map((loop) => this.unrollLoop(loop))\n    vertexLoops.forEach((vertexLoop) => {\n      vertexLoop.forEach(({ x: d, y: z }) => {\n        const index0 = binaryIndexOf(ribs, d, (a, b) => snap(a.value - b, 0))\n        if (index0 < 0) {\n          ribs.splice(-index0 - 1, 0, { value: d, left: [], right: [] })\n        }\n        minZ = min(minZ, z)\n        maxZ = max(maxZ, z)\n      })\n    })\n    console.log(\n      \"zzzs\",\n      minZ,\n      maxZ,\n      vertexLoops[0].toSource().replace(/\\), /g, \",\\n\"),\n    )\n    const correction = 1\n    vertexLoops.forEach((vertexLoop) => {\n      vertexLoop.forEach((v0, i, vs) => {\n        let v1 = vs[(i + 1) % vs.length],\n          dDiff = v1.x - v0.x\n        //console.log(v0.sce, v1.sce)\n        if (eq0(dDiff)) {\n          return\n        }\n        if (dDiff < 0) {\n          ;[v0, v1] = [v1, v0]\n          dDiff = -dDiff\n        }\n        const index0 = binaryIndexOf(ribs, v0.x, (a, b) => snap(a.value - b, 0))\n        const index1 = binaryIndexOf(ribs, v1.x, (a, b) => snap(a.value - b, 0))\n        binaryInsert(ribs[index0].right, v0.y)\n        for (\n          let j = (index0 + correction) % ribs.length;\n          j != index1;\n          j = (j + correction) % ribs.length\n        ) {\n          const x = ribs[j].value\n          const part = (x - v0.x) / dDiff\n          const interpolated = v1.y * part + v0.y * (1 - part)\n          binaryInsert(ribs[j].left, interpolated)\n          binaryInsert(ribs[j].right, interpolated)\n        }\n        binaryInsert(ribs[index1].left, v1.y)\n        // console.log(ribs.map(r=>r.toSource()).join('\\n'))\n      })\n    })\n    const vertices = [],\n      triangles0: int[] = [],\n      normals = []\n    for (let i = 0; i < ribs.length; i++) {\n      const ribLeft = ribs[i],\n        ribRight = ribs[(i + 1) % ribs.length]\n      assert(ribLeft.right.length == ribRight.left.length)\n      for (let j = 0; j < ribLeft.right.length; j++) {\n        vertices.push(\n          f(ribLeft.value, ribLeft.right[j]),\n          f(ribRight.value, ribRight.left[j]),\n        )\n        normals.push(\n          normalF(ribLeft.value, ribLeft.right[j]),\n          normalF(ribRight.value, ribRight.left[j]),\n        )\n      }\n    }\n    //console.log(ribs.map(r=>r.toSource()).join('\\n'))\n    const vss = vertices.length,\n      detailVerticesStart = vss\n    const zInterval = maxZ - minZ,\n      zStep = zInterval / zSplit\n    const detailZs = arrayFromFunction(\n      zSplit - 1,\n      (i) => minZ + (1 + i) * zStep,\n    )\n    console.log(\"detailsZs\", detailZs)\n    for (let i = 0; i < ribs.length; i++) {\n      const d = ribs[i].value\n      for (let j = 0; j < detailZs.length; j++) {\n        vertices.push(f(d, detailZs[j]))\n        normals.push(normalF(d, detailZs[j]))\n      }\n    }\n    // console.log('detailVerticesStart', detailVerticesStart, 'vl', vertices.length, vertices.length -\n    // detailVerticesStart, ribs.length) finally, fill in the ribs\n    let vsStart = 0\n    const flipped2 = true\n    //for (var i = 0; i < 1; i++) {\n    const end = closed ? ribs.length : ribs.length - 1\n    for (let i = 0; i < end; i++) {\n      const ipp = (i + 1) % ribs.length\n      let inside = false,\n        colPos = 0\n      const ribLeft = ribs[i],\n        ribRight = ribs[(i + 1) % ribs.length]\n      for (let j = 0; j < detailZs.length + 1; j++) {\n        const detailZ = detailZs[j] || 100000\n        if (!inside) {\n          if (\n            ribLeft.right[colPos] < detailZ &&\n            ribRight.left[colPos] < detailZ\n          ) {\n            if (\n              ribLeft.right[colPos + 1] < detailZ ||\n              ribRight.left[colPos + 1] < detailZ\n            ) {\n              pushQuad(\n                triangles0,\n                flipped2,\n                vsStart + colPos * 2,\n                vsStart + (colPos + 1) * 2,\n                vsStart + colPos * 2 + 1,\n                vsStart + (colPos + 1) * 2 + 1,\n              )\n              colPos += 2\n              if (\n                ribLeft.right[colPos] < detailZ ||\n                ribRight.left[colPos] < detailZ\n              ) {\n                j--\n              }\n            } else {\n              pushQuad(\n                triangles0,\n                flipped2,\n                vsStart + colPos * 2,\n                vsStart + colPos * 2 + 1,\n                detailVerticesStart + i * detailZs.length + j,\n                detailVerticesStart + ipp * detailZs.length + j,\n              )\n              inside = true\n              colPos++\n            }\n          }\n        } else {\n          if (\n            ribLeft.right[colPos] < detailZ ||\n            ribRight.left[colPos] < detailZ\n          ) {\n            pushQuad(\n              triangles0,\n              flipped2,\n              detailVerticesStart + i * detailZs.length + j - 1,\n              detailVerticesStart + ipp * detailZs.length + j - 1,\n              vsStart + colPos * 2,\n              vsStart + colPos * 2 + 1,\n            )\n            inside = false\n            colPos++\n            if (\n              ribLeft.right[colPos] < detailZ ||\n              ribRight.left[colPos] < detailZ\n            ) {\n              j--\n            }\n          } else {\n            pushQuad(\n              triangles0,\n              flipped2,\n              detailVerticesStart + i * detailZs.length + j,\n              detailVerticesStart + i * detailZs.length + j - 1,\n              detailVerticesStart + ipp * detailZs.length + j,\n              detailVerticesStart + ipp * detailZs.length + j - 1,\n            )\n          }\n        }\n      }\n      vsStart += ribLeft.right.length * 2\n    }\n    //console.log('trinagle', triangles0.max(), vertices.length, triangles0.length, triangles0.toSource(),\n    // triangles0.map(i => vertices[i].$).toSource() )\n    const triangles = triangles0.map((index) => index + mesh.vertices!.length)\n    //assert(normals.every(n => n.hasLength(1)), normals.find(n => !n.hasLength(1)).length() +'\n    // '+normals.findIndex(n => !n.hasLength(1)))\n    Array.prototype.push.apply(mesh.vertices, vertices)\n    Array.prototype.push.apply(mesh.TRIANGLES, triangles)\n    Array.prototype.push.apply(mesh.normals, normals)\n    //this.addEdgeLines(mesh)\n  }\n}\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n\n        // filter collinear points around the cuts\n        filterPoints(outerNode, outerNode.next);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/*\n * Author : Martin Donk\n * Website : http://www.nerdamer.com\n * Email : martin.r.donk@gmail.com\n * Source : https://github.com/jiggzson/nerdamer\n */\n\n/* global trig, trigh, Infinity, define, arguments2Array, NaN */\n//externals ====================================================================\n/* BigInterger.js v1.6.40 https://github.com/peterolson/BigInteger.js/blob/master/LICENSE */\n//var nerdamerBigInt = typeof nerdamerBigInt !== 'undefined' ? nerdamerBigInt : require(\"big-integer\");\n/* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\n//var nerdamerBigDecimal = typeof nerdamerBigDecimal !== 'undefined' ? nerdamerBigDecimal : require('big.js');\n\nvar nerdamer = (function (imports) {\n    \"use strict\";\n\n//version ====================================================================== \n    var version = '1.1.5';\n\n//inits ========================================================================\n    var _ = new Parser(); //nerdamer's parser\n\n    //import bigInt\n    var bigInt = imports.bigInt;\n    var bigDec = imports.bigDec;\n    //set the precision to js precision\n    bigDec.set({\n        precision: 250\n    });\n\n    var Groups = {};\n\n    //container of pregenerated primes\n    var PRIMES = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113\n                , 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251,\n        257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,\n        401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557,\n        563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\n        709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863,\n        877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031,\n        1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171,\n        1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303,\n        1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471,\n        1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607,\n        1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753,\n        1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931,\n        1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083];\n\n//Settings ===================================================================== \n    var CUSTOM_OPERATORS = {};\n\n    var Settings = {\n\t\t//Enables/Disables call peekers. False means callPeekers are disabled and true means callPeekers are enabled.\n\t\tcallPeekers: false,\n\t\t\n\t\t\n        //the max number up to which to cache primes. Making this too high causes performance issues\n        init_primes: 1000,\n\n        exclude: [],\n        //If you don't care about division by zero for example then this can be set to true. \n        //Has some nasty side effects so choose carefully.\n        suppress_errors: false,\n        //the global used to invoke the libary to parse to a number. Normally cos(9) for example returns\n        //cos(9) for convenience but parse to number will always try to return a number if set to true. \n        PARSE2NUMBER: false,\n        //this flag forces the a clone to be returned when add, subtract, etc... is called\n        SAFE: false,\n        //the symbol to use for imaginary symbols\n        IMAGINARY: 'i',\n        //the modules used to link numeric function holders\n        FUNCTION_MODULES: [Math],\n        //Allow certain characters\n        ALLOW_CHARS: ['π'],\n        //Allow nerdamer to convert multi-character variables\n        USE_MULTICHARACTER_VARS: true,\n        //Allow changing of power operator\n        POWER_OPERATOR: '^',\n        //The variable validation regex\n        //VALIDATION_REGEX: /^[a-z_][a-z\\d\\_]*$/i\n        VALIDATION_REGEX: /^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,\n        //Aliases\n        ALIASES: {\n            'π': 'pi',\n            '∞': 'Infinity'\n        },\n        POSITIVE_MULTIPLIERS: false,\n        //Cached items\n        CACHE: {},\n        //Print out warnings or not\n        SILENCE_WARNINGS: false,\n        //Precision\n        PRECISION: 80,\n        //function mappings\n        VECTOR: 'vector',\n        PARENTHESIS: 'parens',\n        SQRT: 'sqrt',\n        ABS: 'abs',\n        FACTORIAL: 'factorial',\n        DOUBLEFACTORIAL: 'dfactorial',\n        //reference pi and e\n        LONG_PI: '3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214' +\n                '808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196',\n        LONG_E: '2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466' +\n                '39193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901',\n        PI: Math.PI,\n        E: Math.E,\n        LOG: 'log', \n        LOG10: 'log10',\n        LOG10_LATEX: 'log_{10}',\n        MAX_EXP: 200000,\n        //The number of scientific place to round to\n        SCIENTIFIC_MAX_DECIMAL_PLACES: 14,\n        //True if ints should not be converted to \n        SCIENTIFIC_IGNORE_ZERO_EXPONENTS: true\n    };\n\n    (function () {\n        Settings.CACHE.roots = {};\n        var x = 40,\n                y = 40;\n        for (var i = 2; i <= x; i++) {\n            for (var j = 2; j <= y; j++) {\n                var nthpow = bigInt(i).pow(j);\n                Settings.CACHE.roots[nthpow + '-' + j] = i;\n            }\n        }\n    })();\n    \n    //Add the groups. These have been reorganized as of v0.5.1 to make CP the highest group\n    //The groups that help with organizing during parsing. Note that for FN is still a function even \n    //when it's raised to a symbol, which typically results in an EX\n    var N = Groups.N = 1, // A number\n            P = Groups.P = 2, // A number with a rational power e.g. 2^(3/5). \n            S = Groups.S = 3, // A single variable e.g. x. \n            EX = Groups.EX = 4, // An exponential\n            FN = Groups.FN = 5, // A function\n            PL = Groups.PL = 6, // A symbol/expression having same name with different powers e.g. 1/x + x^2\n            CB = Groups.CB = 7, // A symbol/expression composed of one or more variables through multiplication e.g. x*y\n            CP = Groups.CP = 8; // A symbol/expression composed of one variable and any other symbol or number x+1 or x+y\n\n    var CONST_HASH = Settings.CONST_HASH = '#';\n\n    var PARENTHESIS = Settings.PARENTHESIS;\n\n    var SQRT = Settings.SQRT;\n\n    var ABS = Settings.ABS;\n\n    var FACTORIAL = Settings.FACTORIAL;\n\n    var DOUBLEFACTORIAL = Settings.DOUBLEFACTORIAL;\n\n    //the storage container \"memory\" for parsed expressions\n    var EXPRESSIONS = [];\n\n    //variables\n    var VARS = {};\n\n    //the container used to store all the reserved functions\n    var RESERVED = [];\n\n    var WARNINGS = [];\n\n    /**\n     * Use this when errors are suppressible\n     * @param {String} msg\n     * @param {object} ErrorObj \n     */\n    var err = function (msg, ErrorObj) {\n        if (!Settings.suppress_errors) {\n            if (ErrorObj)\n                throw new ErrorObj(msg);\n            else\n                throw new Error(msg);\n        }\n    };\n\n//Utils ======================================================================== \n    var customError = function (name) {\n        var E = function (message) {\n            this.name = name;\n            this.message = message !== undefined ? message : '';\n            var error = new Error(this.message);\n            error.name = this.name;\n            this.stack = error.stack;\n        }; //create an empty error\n        E.prototype = Object.create(Error.prototype);\n        return E;\n    };\n\n    /**\n     * Checks to see if value is one of nerdamer's reserved names\n     * @param {String} value\n     * @return boolean\n     */\n    var isReserved = function (value) {\n        return RESERVED.indexOf(value) !== -1;\n    };\n\n    /**\n     * Checks to see that all symbols in array are the same\n     * @param {Symbol[]} arr\n     * @returns {bool}\n     */\n    var allSame = function (arr) {\n        var last = arr[0];\n        for (var i = 1, l = arr.length; i < l; i++)\n            if (!arr[i].equals(last))\n                return false;\n        return true;\n    };\n\n    /**\n     * Used to pass warnings or low severity errors about the library\n     * @param msg\n     */\n    var warn = function (msg) {\n        WARNINGS.push(msg);\n        if (Settings.SHOW_WARNINGS && console && console.warn) {\n            console.warn(msg);\n        }\n    };\n\n    /**\n     * Enforces rule: \"must start with a letter or underscore and \n     * can have any number of underscores, letters, and numbers thereafter.\"\n     * @param name The name of the symbol being checked\n     * @param {String} typ - The type of symbols that's being validated\n     * @throws {Exception}  - Throws an exception on fail\n     */\n    var validateName = function (name, typ) {\n        typ = typ || 'variable';\n        if (Settings.ALLOW_CHARS.indexOf(name) !== -1)\n            return;\n        var regex = Settings.VALIDATION_REGEX;\n        if (!(regex.test(name))) {\n            throw new InvalidVariableNameError(name + ' is not a valid ' + typ + ' name');\n        }\n    };\n\n    /**\n     * Convert number from scientific format to decimal format\n     * @param {Number} num\n     */\n    var scientificToDecimal = function (num) {\n        var nsign = Math.sign(num);\n        //remove the sign\n        num = Math.abs(num);\n        //if the number is in scientific notation remove it\n        if (/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\n            var zero = '0',\n                    parts = String(num).toLowerCase().split('e'), //split into coeff and exponent\n                    e = parts.pop(), //store the exponential part\n                    l = Math.abs(e), //get the number of zeros\n                    sign = e / l,\n                    coeff_array = parts[0].split('.');\n            if (sign === -1) {\n                l = l - coeff_array[0].length;\n                if (l < 0) {\n                  num = coeff_array[0].slice(0, l) + '.' + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : '');\n                } \n                else {\n                  num = zero + '.' + new Array(l + 1).join(zero) + coeff_array.join('');\n                }\n            } \n            else {\n                var dec = coeff_array[1];\n                if (dec)\n                    l = l - dec.length;\n                if (l < 0) {\n                  num = coeff_array[0] + dec.slice(0, l) + '.' + dec.slice(l);\n                } else {\n                  num = coeff_array.join('') + new Array(l + 1).join(zero);\n                }\n            }\n        }\n\n        return nsign < 0 ? '-'+num : num;\n    };\n    /**\n     * Checks if number is a prime number\n     * @param {Number} n - the number to be checked\n     */\n    var isPrime = function (n) {\n        var q = Math.floor(Math.sqrt(n));\n        for (var i = 2; i <= q; i++) {\n            if (n % i === 0)\n                return false;\n        }\n        return true;\n    };\n    \n    /**\n     * Checks if n is a number\n     * @param {any} n \n     */\n    var isNumber = function(n) {\n        return /^\\d+\\.?\\d*$/.test(n);\n    };\n    \n    /**\n     * Checks to see if an array contains only numeric values\n     * @param {Array} arr \n     */\n    var allNumeric = function(arr) {\n        for(var i=0; i<arr.length; i++)\n            if(!isNumber(arr[i]))\n                return false;\n        return true;\n    };\n    /**\n     * Checks to see if a number or Symbol is a fraction\n     * @param {Number|Symbol} num\n     * @returns {boolean}\n     */\n    var isFraction = function (num) {\n        if (isSymbol(num))\n            return isFraction(num.multiplier.toDecimal());\n        return (num % 1 !== 0);\n    };\n\n    /**\n     * Checks to see if the object provided is a Symbol\n     * @param {Object} obj\n     */\n    var isSymbol = function (obj) {\n        return (obj instanceof Symbol);\n    };\n\n    /**\n     * Checks to see if the object provided is an Expression\n     * @param {Object} obj\n     */\n    var isExpression = function (obj) {\n        return (obj instanceof Expression);\n    };\n\n    /**\n     * This method traverses the symbol structure and grabs all the variables in a symbol. The variable\n     * names are then returned in alphabetical order.\n     * @param {Symbol} obj\n     * @param {Boolean} poly \n     * @param {Object} vars - An object containing the variables. Do not pass this in as it generated \n     * automatically. In the future this will be a Collector object.\n     * @returns {String[]} - An array containing variable names\n     */\n    var variables = function (obj, poly, vars) {\n        vars = vars || {\n            c: [],\n            add: function (value) {\n                if (this.c.indexOf(value) === -1 && isNaN(value))\n                    this.c.push(value);\n            }\n        };\n\n        if (isSymbol(obj)) {\n            var group = obj.group,\n                    prevgroup = obj.previousGroup;\n            if (group === EX)\n                variables(obj.power, poly, vars);\n\n            if (group === CP || group === CB || prevgroup === CP || prevgroup === CB) {\n                for (var x in obj.symbols) {\n                    variables(obj.symbols[x], poly, vars);\n                }\n            }\n            else if (group === S || prevgroup === S) {\n                //very crude needs fixing. TODO\n                if (!(obj.value === 'e' || obj.value === 'pi' || obj.value === Settings.IMAGINARY))\n                    vars.add(obj.value);\n            }\n            else if (group === PL || prevgroup === PL) {\n                variables(firstObject(obj.symbols), poly, vars);\n            }\n            else if (group === EX) {\n                if (!isNaN(obj.value))\n                    vars.add(obj.value);\n                variables(obj.power, poly, vars);\n            }\n            else if (group === FN && !poly) {\n                for (var i = 0; i < obj.args.length; i++) {\n                    variables(obj.args[i], poly, vars);\n                }\n            }\n        }\n\n        return vars.c.sort();\n    };\n    \n    /**\n     * Returns the sum of an array\n     * @param {Array} arr\n     * @returns {Symbol}\n     */\n    var arraySum = function(arr) {\n        var sum = new Symbol(0);\n        arr.map(function(x) {\n            sum = _.add(sum, x);\n        });\n        return sum;\n    };\n\n    /**\n     * Separates out the variables into terms of variabls. \n     * e.g. x+y+x*y+sqrt(2)+pi returns \n     * {x: x, y: y, x y: x*y, constants: sqrt(2)+pi\n     * @param {type} symbol\n     * @param {type} o\n     * @returns {undefined}\n     * @throws {Error} for expontentials\n     */\n    var separate = function (symbol, o) {\n        symbol = _.expand(symbol);\n        o = o || {};\n        var insert = function (key, sym) {\n            if (!o[key])\n                o[key] = new Symbol(0);\n            o[key] = _.add(o[key], sym.clone());\n        };\n        symbol.each(function (x) {\n            if (x.isConstant('all'))\n                insert('constants', x);\n            else if (x.group === S) {\n                insert(x.value, x);\n            }\n            else if (x.group === FN && (x.fname === ABS || x.fname === '')) {\n                separate(x.args[0]);\n            }\n            else if (x.group === EX || x.group === FN) {\n                throw new Error('Unable to separate. Term cannot be a function!');\n            }\n            else {\n                insert(variables(x).join(' '), x);\n            }\n        });\n\n        return o;\n    };\n\n    /**\n     * Fills holes in an array with zero symbol or generates one with n zeroes\n     * @param {Array} arr \n     * @param {Number} n \n     */\n    var fillHoles = function (arr, n) {\n        n = n || arr.length;\n        for (var i = 0; i < n; i++) {\n            var sym = arr[i];\n            if (!sym)\n                arr[i] = new Symbol(0);\n        }\n        return arr;\n    };\n\n    /**\n     * \n     * Checks to see if the object provided is a Vector\n     * @param {Object} obj\n     */\n    var isVector = function (obj) {\n        return (obj instanceof Vector);\n    };\n\n    /**\n     * Checks to see if the object provided is a Matrix\n     * @param {Object} obj\n     */\n    var isMatrix = function (obj) {\n        return (obj instanceof Matrix);\n    };\n    \n    var isSet = function(obj) {\n        return (obj instanceof Set);\n    };\n    \n    /**\n     * Checks to see if a symbol is in group N\n     * @param {Symbol} symbol\n     */\n    var isNumericSymbol = function (symbol) {\n        return symbol.group === N || symbol.group === P;\n    };\n\n    /**\n     * Checks to see if a symbol is a variable with no multiplier nor power\n     * @param {Symbol} symbol\n     */\n    var isVariableSymbol = function (symbol) {\n        return symbol.group === S && symbol.multiplier.equals(1) && symbol.power.equals(1);\n    };\n\n    /**\n     * Checks to see if the object provided is an Array\n     * @param {Object} arr\n     */\n    var isArray = function (arr) {\n        return Array.isArray(arr);\n    };\n\n    /**\n     * Checks to see if a number is an integer\n     * @param {Number} num\n     */\n    var isInt = function (num) {\n        return /^[-+]?\\d+e?\\+?\\d*$/gim.test(num.toString());\n    };\n\n    /**\n     * @param {Number|Symbol} obj\n     * @returns {boolean}\n     */\n    var isNegative = function (obj) {\n        if (isSymbol(obj)) {\n            obj = obj.multiplier;\n        }\n        return obj.lessThan(0);\n    };\n    /**\n     * Safely stringify object\n     * @param o\n     */\n    var stringify = function(o) {\n        if(!o)\n            return o;\n        return String(o);\n    };\n    \n    /**\n     * @param {String} str\n     * @returns {String} - returns a formatted string surrounded by brackets\n     */\n    var inBrackets = function (str) {\n        return '(' + str + ')';\n    };\n\n    /**\n     * A helper function to replace parts of string\n     * @param {String} str - The original string\n     * @param {Integer} from - The starting index\n     * @param {Integer} to - The ending index\n     * @param {String} with_str - The replacement string\n     * @returns {String} - A formatted string\n     */\n    var stringReplace = function (str, from, to, with_str) {\n        return str.substr(0, from) + with_str + str.substr(to, str.length);\n    };\n\n    /**\n     * the Parser uses this to check if it's allowed to convert the obj to type Symbol\n     * @param {Object} obj\n     * @returns {boolean}\n     */\n    var customType = function (obj) {\n        return obj !== undefined && obj.custom;\n    };\n\n    /**\n     * Checks to see if numbers are both negative or are both positive\n     * @param {Number} a\n     * @param {Number} b\n     * @returns {boolean}\n     */\n    var sameSign = function (a, b) {\n        return (a < 0) === (b < 0);\n    };\n\n    /**\n     * A helper function to replace multiple occurences in a string. Takes multiple arguments\n     * @example format('{0} nice, {0} sweet', 'something')\n     * //returns 'something nice, something sweet'\n     */\n    var format = function () {\n        var args = [].slice.call(arguments),\n                str = args.shift();\n        var new_str = str.replace(/{(\\d+)}/g, function (match, index) {\n            var arg = args[index];\n            return typeof arg === 'function' ? arg() : arg;\n        });\n\n        return new_str;\n    };\n    \n    /**\n     * Generates an array with values within a range. Multiplies by a step if provided\n     * @param {Number} start\n     * @param {Number} end\n     * @param {Number} step\n     */\n    var range = function(start, end, step) {\n        var arr = [];\n        step = step || 1;\n        for(var i=start; i<=end; i++) \n            arr.push(i*step);\n        return arr;\n    };\n    \n    /**\n     * Returns an array of all the keys in an array\n     * @param {Object} obj\n     * @returns {Array}\n     */\n    var keys = Object.keys;\n\n    /**\n     * Returns the first encountered item in an object. Items do not have a fixed order in objects \n     * so only use if you need any first random or if there's only one item in the object\n     * @param {Object} obj\n     * @param {String} key Return this key as first object\n     * @param {Boolean} both\n     * @returns {*}\n     */\n    var firstObject = function (obj, key, both) {\n        for (var x in obj)\n            break;\n        if (key)\n            return x;\n        if(both)\n            return {\n                key: x,\n                obj: obj[x]\n            };\n        return obj[x];\n    };\n\n    /**\n     * Substitutes out variables for two symbols, parses them to a number and them compares them numerically\n     * @param {Symbol} sym1\n     * @param {Symbol} sym2\n     * @param {String[]} vars - an optional array of variables to use\n     * @returns {bool}\n     */\n    var compare = function (sym1, sym2, vars) {\n        var n = 5; //a random number between 1 and 5 is good enough\n        var scope = {}; // scope object with random numbers generated using vars\n        var comparison;\n        for (var i = 0; i < vars.length; i++)\n            scope[vars[i]] = new Symbol(Math.floor(Math.random() * n) + 1);\n        block('PARSE2NUMBER', function () {\n            comparison = _.parse(sym1, scope).equals(_.parse(sym2, scope));\n        });\n        return comparison;\n    };\n\n    /**\n     * Is used to set a user defined function using the function assign operator\n     * @param {String} name\n     * @param {String[]} params_array\n     * @param {String} body\n     * @returns {Boolean}\n     */\n    var setFunction = function (name, params_array, body) {\n        validateName(name);\n        if (!isReserved(name)) {\n            params_array = params_array || variables(_.parse(body));\n            _.functions[name] = [_.mapped_function, params_array.length, {\n                    name: name,\n                    params: params_array,\n                    body: body\n                }];\n            return body;\n        }\n        return null;\n    };\n\n    /**\n     * Returns the minimum number in an array\n     * @param {Array} arr\n     * @returns {Number} \n     */\n    var arrayMax = function (arr) {\n        return Math.max.apply(undefined, arr);\n    };\n\n    /**\n     * Returns the maximum number in an array\n     * @param {Array} arr\n     * @returns {Number} \n     */\n    var arrayMin = function (arr) {\n        return Math.min.apply(undefined, arr);\n    };\n\n    /**\n     * Clones array with clonable items\n     * @param {Array} arr\n     * @returns {Array}\n     */\n    var arrayClone = function (arr) {\n        var new_array = [], l = arr.length;\n        for (var i = 0; i < l; i++)\n            new_array[i] = arr[i].clone();\n        return new_array;\n    };\n\n    /**\n     * Fills numbers between array values\n     * @param {Numbers[]} arr\n     * @param {Integer} slices\n     */\n    var arrayAddSlices = function(arr, slices) {\n        slices = slices || 20;\n        var retval = [];\n        var c, delta, e;\n        retval.push(arr[0]); //push the beginning\n        for(var i=0; i<arr.length-1; i++) {\n            c = arr[i];\n            delta = arr[i+1]-c; //get the difference\n            e = delta/slices; //chop it up in the desired number of slices\n            for(var j=0; j<slices; j++) {\n                c += e; //add the mesh to the last slice\n                retval.push(c);\n            }\n        }\n\n        return retval;\n    };\n    \n     /**\n     * Gets nth roots of a number\n     * @param {Symbol} symbol\n     * @returns {Vector}\n     */\n    var nroots = function(symbol) {\n        var a, b;\n\n        if(symbol.group === FN && symbol.fname === '') {\n            a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\n            b = _.parse(symbol.power);\n        }\n        else if(symbol.group === P) {\n            a = _.parse(symbol.value);\n            b = _.parse(symbol.power);\n        }\n\n        if(a && b && (a.group === N) && b.group === N && a.multiplier.isNegative()) {\n            var _roots = [];\n            \n            var parts = Symbol.toPolarFormArray(evaluate(symbol));\n            var r = parts[0];\n            \n            //var r = _.parse(a).abs().toString();\n\n            //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\n            var x = _.arg(a);\n            var n = b.multiplier.den.toString();\n            var p = b.multiplier.num.toString();\n\n            var formula = '(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})';\n\n            for(var i=0; i<n; i++) {\n                var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\n                _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\n            }\n            return Vector.fromArray(_roots);\n        }\n        else if(symbol.isConstant(true, true)) {\n            var sign = symbol.sign();\n            var x = evaluate(symbol.abs());\n            var root = _.sqrt(x);\n\n            var _roots = [root.clone(), root.negate()];\n\n            if(sign < 0)\n                _roots = _roots.map(function(x) {\n                    return _.multiply(x, Symbol.imaginary());\n                });\n                \n        }\n        else {\n            _roots = [_.parse(symbol)];\n        }\n\n        return Vector.fromArray(_roots);\n    };\n\n    /**\n     * Sorts and array given 2 parameters\n     * @param {String} a\n     * @param {String} b\n     */\n    var comboSort = function (a, b) {\n        var l = a.length,\n                combined = []; //the linker\n        for (var i = 0; i < a.length; i++) {\n            combined.push([a[i], b[i]]); //create the map\n        }\n\n        combined.sort(function (x, y) {\n            return x[0] - y[0];\n        });\n\n        var na = [], nb = [];\n\n        for (i = 0; i < l; i++) {\n            na.push(combined[i][0]);\n            nb.push(combined[i][1]);\n        }\n\n        return [na, nb];\n    };\n    /**\n     * TODO: Pick a more descriptive name and better description\n     * Breaks a function down into it's parts wrt to a variable, mainly coefficients\n     * Example a*x^2+b wrt x\n     * @param {Symbol} fn\n     * @param {String} wrt\n     * @param {bool} as_obj\n     */\n    var decompose_fn = function (fn, wrt, as_obj) {\n        wrt = String(wrt); //convert to string\n        var ax, a, x, b;\n        if (fn.group === CP) {\n            var t = _.expand(fn.clone()).stripVar(wrt);\n            ax = _.subtract(fn.clone(), t.clone());\n            b = t;\n        }\n        else\n            ax = fn.clone();\n        a = ax.stripVar(wrt);\n        x = _.divide(ax.clone(), a.clone());\n        b = b || new Symbol(0);\n        if (as_obj)\n            return {\n                a: a,\n                x: x,\n                ax: ax,\n                b: b\n            };\n        return [a, x, ax, b];\n    };\n    /**\n     * Rounds a number up to x decimal places\n     * @param {Number} x\n     * @param {Number} s\n     */\n    var nround = function (x, s) {\n        if(isInt(x)) {\n            if(x >= Number.MAX_VALUE)\n                return x.toString();\n            return Number(x);\n        }\n            \n        s = typeof s === 'undefined' ? 14 : s;\n        return Math.round(x * Math.pow(10, s)) / Math.pow(10, s);\n    };\n    \n    /**\n     * Is used for u-substitution. Gets a suitable u for substitution. If for\n     * instance a is used in the symbol then it keeps going down the line until\n     * one is found that's not in use. If all letters are taken then it\n     * starts appending numbers. \n     * IMPORTANT! It assumes that the substitution will be undone\n     * beore the user gets to interact with the object again.\n     * @param {Symbol} symbol\n     */\n    var getU = function (symbol) {\n        //start with u\n        var u = 'u', //start with u\n                v = u, //init with u\n                c = 0, //postfix number\n                vars = variables(symbol);\n        //make sure this variable isn't reserved and isn't in the variable list\n        while (!(RESERVED.indexOf(v) === - 1 && vars.indexOf(v) === - 1))\n            v = u + c++;\n        //get an empty slot. It seems easier to just push but the\n        //problem is that we may have some which are created by clearU\n        for (var i = 0, l = RESERVED.length; i <= l; i++)\n            //reserved cannot equals false or 0 so we can safely check for a falsy type\n            if (!RESERVED[i]) {\n                RESERVED[i] = v; //reserve the variable\n                break;\n            }\n        return v;\n    };\n\n    /**\n     * Clears the u variable so it's no longer reserved\n     * @param {String} u\n     */\n    var clearU = function (u) {\n        var indx = RESERVED.indexOf(u);\n        if (indx !== -1)\n            RESERVED[indx] = undefined;\n    };\n\n    /**\n     * Loops through each item in object and calls function with item as param\n     * @param {Object|Array} obj\n     * @param {Function} fn \n     */\n    var each = function (obj, fn) {\n        if (isArray(obj)) {\n            var l = obj.length;\n            for (var i = 0; i < l; i++)\n                fn.call(obj, i);\n        }\n        else {\n            for (var x in obj)\n                if (obj.hasOwnProperty(x))\n                    fn.call(obj, x);\n        }\n    };\n\n    /**\n     * Checks to see if a number is an even number\n     * @param {Number} num\n     * @returns {boolean}\n     */\n    var even = function (num) {\n        return num % 2 === 0;\n    };\n\n    /**\n     * Checks to see if a fraction is divisible by 2\n     * @param {Number} num\n     * @returns {boolean}\n     */\n    var evenFraction = function (num) {\n        return 1 / (num % 1) % 2 === 0;\n    };\n\n    /**\n     * Strips duplicates out of an array\n     * @param {Array} arr\n     */\n    var arrayUnique = function (arr) {\n        var l = arr.length, a = [];\n        for (var i = 0; i < l; i++) {\n            var item = arr[i];\n            if (a.indexOf(item) === -1)\n                a.push(item);\n        }\n        return a;\n    };\n    \n    /**\n     * Removes duplicates from an array. Returns a new array\n     * @param {Array} arr\n     * @param {Function} condition\n     */\n    var removeDuplicates = function(arr, condition) {\n        var conditionType = typeof condition;\n\n        if(conditionType !== 'function' || conditionType === 'undefined') {\n            condition = function(a, b) {\n                return a === b;\n            };\n        }\n\n        var seen = [];\n\n        while(arr.length) {\n            var a = arr[0];\n            //only one element left so we're done\n            if(arr.length === 1) {\n                seen.push(a);\n                break;\n            }\n            var temp = [];\n            seen.push(a); //we already scanned these\n            for(var i=1; i<arr.length; i++) {\n                var b = arr[i];\n                //if the number is outside the specified tolerance\n                if(!condition(a, b))\n                    temp.push(b);\n            }\n            //start over with the remainder\n            arr = temp;\n        }\n\n        return seen;\n    };\n    \n    /**\n     * Reserves the names in an object so they cannot be used as function names\n     * @param {Object} obj\n     */\n    var reserveNames = function (obj) {\n        var add = function (item) {\n            if (RESERVED.indexOf(item) === -1)\n                RESERVED.push(item);\n        };\n\n        if (typeof obj === 'string')\n            add(obj);\n        else {\n            each(obj, function (x) {\n                add(x);\n            });\n        }\n    };\n\n    /**\n     * Removes an item from either an array or an object. If the object is an array, the index must be \n     * specified after the array. If it's an object then the key must be specified\n     * @param {Object|Array} obj\n     * @param {Integer} indexOrKey\n     */\n    var remove = function (obj, indexOrKey) {\n        var result;\n        if (isArray(obj)) {\n            result = obj.splice(indexOrKey, 1)[0];\n        }\n        else {\n            result = obj[indexOrKey];\n            delete obj[indexOrKey];\n        }\n        return result;\n    };\n\n    /**\n     * Creates a temporary block in which one of the global settings is temporarily modified while\n     * the function is called. For instance if you want to parse directly to a number rather than have a symbolic\n     * answer for a period you would set PARSE2NUMBER to true in the block.\n     * @example block('PARSE2NUMBER', function(){//symbol being parsed to number}, true);\n     * @param {String} setting - The setting being accessed\n     * @param {Function} f \n     * @param {boolean} opt - The value of the setting in the block\n     * @param {String} obj - The obj of interest. Usually a Symbol but could be any object\n     */\n    var block = function (setting, f, opt, obj) {\n        var current_setting = Settings[setting];\n        Settings[setting] = opt === undefined ? true : !!opt;\n        var retval = f.call(obj);\n        Settings[setting] = current_setting;\n        return retval;\n    };\n\n    /**\n     * provide a mechanism for accessing functions directly. Not yet complete!!! \n     * Some functions will return undefined. This can maybe just remove the \n     * function object at some point when all functions are eventually \n     * housed in the global function object. Returns ALL parser available \n     * functions. Parser.functions may not contain all functions\n     */\n    var importFunctions = function () {\n        var o = {};\n        for (var x in _.functions)\n            o[x] = _.functions[x][0];\n        return o;\n    };\n\n    /**\n     * Converts function arguments to an array. Now used by gcd and lcm in Algebra.js :)\n     * @param {Array|object} obj\n     */\n    var arguments2Array = function (obj) {\n        return [].slice.call(obj);\n    };\n\n    /**\n     * Returns the coefficients of a symbol\n     * @param {Symbol} symbol\n     * @param {Symbol} wrt\n     */\n    var getCoeffs = function (symbol, wrt) {\n        var coeffs = [];\n        //we loop through the symbols and stick them in their respective \n        //containers e.g. y*x^2 goes to index 2\n        symbol.each(function (term) {\n            if (term.contains(wrt)) {\n                //we want only the coefficient which in this case will be everything but the variable\n                //e.g. a*b*x -> a*b if the variable to solve for is x\n                var coeff = term.stripVar(wrt),\n                        x = _.divide(term.clone(), coeff.clone()),\n                        p = x.power.toDecimal();\n            }\n            else {\n                coeff = term;\n                p = 0;\n            }\n            var e = coeffs[p];\n            //if it exists just add it to it\n            coeffs[p] = e ? _.add(e, coeff) : coeff;\n\n        }, true);\n\n        for (var i = 0; i < coeffs.length; i++)\n            if (!coeffs[i])\n                coeffs[i] = new Symbol(0);\n        //fill the holes\n        return coeffs;\n    };\n\n    /**\n     * As the name states. It forces evaluation of the expression \n     * @param {Symbol} symbol\n     * @param {Symbol} o\n     */\n    var evaluate = function (symbol, o) {\n        return block('PARSE2NUMBER', function () {\n            return _.parse(symbol, o);\n        }, true);\n    };\n\n    /**\n     * Converts an array to a vector. Consider moving this to Vector.fromArray\n     * @param {String[]|String|Symbol|Number|Number[]} x \n     */\n    var convertToVector = function (x) {\n        if (isArray(x)) {\n            var vector = new Vector([]);\n            for (var i = 0; i < x.length; i++)\n                vector.elements.push(convertToVector(x[i]));\n            return vector;\n        }\n        //Ensure that a nerdamer ready object is returned\n        if (!isSymbol(x))\n            return _.parse(x);\n        return x;\n    };\n\n    /**\n     * Generates prime numbers up to a specified number\n     * @param {Number} upto \n     */\n    var generatePrimes = function (upto) {\n        //get the last prime in the array\n        var last_prime = PRIMES[PRIMES.length - 1] || 2;\n        //no need to check if we've already encountered the number. Just check the cache.\n        for (var i = last_prime; i < upto; i++) {\n            if (isPrime(i))\n                PRIMES.push(i);\n        }\n    };\n    /**\n     * Checks to see if all arguments are numbers\n     * @param {object} args\n     */\n    var allNumbers = function (args) {\n        for (var i = 0; i < args.length; i++)\n            if (args[i].group !== N)\n                return false;\n        return true;\n    };\n    /*\n     * Checks if all arguments aren't just all number but if they\n     * are constants as well e.g. pi, e.\n     * @param {object} args \n     */\n    var allConstants = function (args) {\n        for (var i = 0; i < args.length; i++) {\n            if (args[i].isPi() || args[i].isE())\n                continue;\n            if (!args[i].isConstant(true))\n                return false;\n        }\n        return true;\n    };\n\n\n//Exceptions ===================================================================\n    //Is thrown for division by zero\n    var DivisionByZero = customError('DivisionByZero');\n    //Is throw if an error occured during parsing\n    var ParseError = customError('ParseError');\n    //Is thrown if the expression results in undefined\n    var UndefinedError = customError('UndefinedError');\n    //Is throw if a function exceeds x amount of iterations\n    var MaximumIterationsReached = customError('MaximumIterationsReached');\n    //Is thrown if the parser receives an incorrect type\n    var NerdamerTypeError = customError('NerdamerTypeError');\n    //Is thrown if bracket parity is not correct\n    var ParityError = customError('ParityError');\n    //Is thrown if an unexpectd or incorrect operator is encountered\n    var OperatorError = customError('OperatorError');\n    //Is thrown if an index is out of range.\n    var OutOfRangeError = customError('OutOfRangeError');\n    //Is thrown if dimensions are incorrect. Mostly for matrices\n    var DimensionError = customError('DimensionError');\n    //Is thrown if variable name violates naming rule\n    var InvalidVariableNameError = customError('InvalidVariableNameError');\n    //Is thrown if the limits of the library are exceeded for a function\n    //This can be that the function become unstable passed a value\n    var ValueLimitExceededError = customError('ValueLimitExceededError');\n    //Is throw if the value is an incorrect LH or RH value\n    var NerdamerValueError = customError('NerdamerValueError');\n    //Is throw if the value is an incorrect LH or RH value\n    var SolveError = customError('SolveError');\n\n    var exceptions = {\n        DivisionByZero: DivisionByZero,\n        ParseError: ParseError,\n        UndefinedError: UndefinedError,\n        MaximumIterationsReached: MaximumIterationsReached,\n        NerdamerTypeError: NerdamerTypeError,\n        ParityError: ParityError,\n        OperatorError: OperatorError,\n        OutOfRangeError: OutOfRangeError,\n        DimensionError: DimensionError,\n        InvalidVariableNameError: InvalidVariableNameError,\n        ValueLimitExceededError: ValueLimitExceededError,\n        NerdamerValueError: NerdamerValueError,\n        SolveError: SolveError\n    };\n//Big ========================================================================== \n    var Big = {\n        cos: function (x) {\n            return new Symbol(bigDec.cos(x.multiplier.toDecimal()));\n        },\n        sin: function (x) {\n            return new Symbol(bigDec.sin(x.multiplier.toDecimal()));\n        }\n    };\n//Math2 ======================================================================== \n    //This object holds additional functions for nerdamer. Think of it as an extension of the Math object.\n    //I really don't like touching objects which aren't mine hence the reason for Math2. The names of the \n    //functions within are pretty self-explanatory.\n    //NOTE: DO NOT USE INLINE COMMENTS WITH THE MATH2 OBJECT! THIS BREAK DURING COMPILATION OF BUILDFUNCTION.\n    var Math2 = {\n        csc: function (x) {\n            return 1 / Math.sin(x);\n        },\n        sec: function (x) {\n            return 1 / Math.cos(x);\n        },\n        cot: function (x) {\n            return 1 / Math.tan(x);\n        },\n\t\tacsc: function(x) { return Math.asin(1/x); },\n        asec: function(x) { \n            return Math.acos(1/x); \n        },\n        acot: function(x) { \n            return (Math.PI / 2) - Math.atan(x);\n        },\n        // https://gist.github.com/jiggzson/df0e9ae8b3b06ff3d8dc2aa062853bd8\n        erf: function (x) {\n            var t = 1 / (1 + 0.5 * Math.abs(x));\n            var result = 1 - t * Math.exp(-x * x - 1.26551223 +\n                    t * (1.00002368 +\n                            t * (0.37409196 +\n                                    t * (0.09678418 +\n                                            t * (-0.18628806 +\n                                                    t * (0.27886807 +\n                                                            t * (-1.13520398 +\n                                                                    t * (1.48851587 +\n                                                                            t * (-0.82215223 +\n                                                                                    t * (0.17087277)))))))))\n                    );\n            return x >= 0 ? result : -result;\n        },\n        diff: function(f) {\n            var h = 0.001;\n            \n            var derivative = function(x) { \n                return (f(x + h) - f(x - h)) / (2 * h); \n            };\n            \n            return derivative;\n        },\n        median: function (...values) {\n            values.sort(function (a, b) {\n                return a - b;\n            });\n\n            var half = Math.floor(values.length / 2);\n\n            if (values.length % 2)\n                return values[half];\n\n            return (values[half - 1] + values[half]) / 2.0;\n        },\n        /*\n         * Reverses continued fraction calculation\n         * @param {obj} contd\n         * @returns {Number}\n         */\n        fromContinued: function (contd) {\n            var arr = contd.fractions.slice();\n            var e = 1 / arr.pop();\n            for (var i = 0, l = arr.length; i < l; i++) {\n                e = 1 / (arr.pop() + e);\n            }\n            return contd.sign * (contd.whole + e);\n        },\n        /*\n         * Calculates continued fractions\n         * @param {Number} n\n         * @param {Number} x The number of places\n         * @returns {Number}\n         */\n        continuedFraction: function (n, x) {\n            x = x || 20;\n            var sign = Math.sign(n); /*store the sign*/\n            var absn = Math.abs(n); /*get the absolute value of the number*/\n            var whole = Math.floor(absn); /*get the whole*/\n            var ni = absn - whole; /*subtract the whole*/\n            var c = 0; /*the counter to keep track of iterations*/\n            var done = false;\n            var epsilon = 1e-14;\n            var max = 1e7;\n            var e, w;\n            var retval = {\n                whole: whole,\n                sign: sign,\n                fractions: []\n            };\n            /*start calculating*/\n            while (!done && ni !== 0) {\n                /*invert and get the whole*/\n                e = 1 / ni;\n                w = Math.floor(e);\n                if (w > max) {\n                    /*this signals that we may have already gone too far*/\n                    var d = Math2.fromContinued(retval) - n;\n                    if (d <= Number.EPSILON)\n                        break;\n                }\n                /*add to result*/\n                retval.fractions.push(w);\n                /*move the ni to the decimal*/\n                ni = e - w;\n                /*ni should always be a decimal. If we have a whole number then we're in the rounding errors*/\n                if (ni <= epsilon || c >= x - 1)\n                    done = true;\n                c++;\n            }\n            /*cleanup 1/(n+1/1) = 1/(n+1) so just move the last digit one over if it's one*/\n            var idx = retval.fractions.length - 1;\n            if (retval.fractions[idx] === 1) {\n                retval.fractions.pop();\n                /*increase the last one by one*/\n                retval.fractions[--idx]++;\n            }\n            return retval;\n        },\n        bigpow: function (n, p) {\n            if (!(n instanceof Frac))\n                n = Frac.create(n);\n            if (!(p instanceof Frac))\n                p = Frac.create(p);\n            var retval = new Frac(0);\n            if (p.isInteger()) {\n                retval.num = n.num.pow(p.toString());\n                retval.den = n.den.pow(p.toString());\n            }\n            else {\n                var num = Frac.create(Math.pow(n.num, p.num));\n                var den = Frac.create(Math.pow(n.den, p.num));\n\n                retval.num = Math2.nthroot(num, p.den.toString());\n                retval.den = Math2.nthroot(den, p.den);\n            }\n            return retval;\n        },\n        //http://stackoverflow.com/questions/15454183/how-to-make-a-function-that-computes-the-factorial-for-numbers-with-decimals\n        gamma: function (z) {\n            var g = 7;\n            var C = [\n                0.99999999999980993,\n                676.5203681218851,\n                -1259.1392167224028,\n                771.32342877765313,\n                -176.61502916214059,\n                12.507343278686905,\n                -0.13857109526572012,\n                9.9843695780195716e-6,\n                1.5056327351493116e-7]\n                    ;\n\n            if (z < 0.5)\n                return Math.PI / (Math.sin(Math.PI * z) * Math2.gamma(1 - z));\n            else {\n                z -= 1;\n\n                var x = C[0];\n                for (var i = 1; i < g + 2; i++)\n                    x += C[i] / (z + i);\n\n                var t = z + g + 0.5;\n                return Math.sqrt(2 * Math.PI) * Math.pow(t, (z + 0.5)) * Math.exp(-t) * x;\n            }\n        },\n        //factorial\n        bigfactorial: function (x) {\n            var retval = new bigInt(1);\n            for (var i = 2; i <= x; i++)\n                retval = retval.times(i);\n            return new Frac(retval);\n        },\n        //https://en.wikipedia.org/wiki/Logarithm#Calculation\n        bigLog: function (x) {\n            varn            if (CACHE[x]) {\n                return Frac.quick.apply(null, CACHE[x].split('/'));\n            }\n            x = new Frac(x);\n            var n = 80;\n            var retval = new Frac(0);\n            var a = x.subtract(new Frac(1));\n            var b = x.add(new Frac(1));\n            for (var i = 0; i < n; i++) {\n                var t = new Frac(2 * i + 1);\n                var k = Math2.bigpow(a.divide(b), t);\n                var r = t.clone().invert().multiply(k);\n                retval = retval.add(r);\n\n            }\n            return retval.multiply(new Frac(2));\n        },\n        //the factorial function but using the big library instead\n        factorial: function (x) {\n            var is_int = x % 1 === 0;\n            \n            /*factorial for negative integers is complex infinity according to Wolfram Alpha*/\n            if (is_int && x < 0)\n                return NaN;\n            \n            if(!is_int)\n                return Math2.gamma(x+1);\n            \n            var retval = 1;\n            for (var i = 2; i <= x; i++)\n                retval = retval * i;\n            return retval;\n        },\n        //double factorial\n        //http://mathworld.wolfram.com/DoubleFactorial.html\n        dfactorial: function (x) {\n            if (isInt(x)) {\n                var even = x % 2 === 0;\n                /* If x = even then n = x/2 else n = (x-1)/2*/\n                var n = even ? x / 2 : (x + 1) / 2;\n                /*the return value*/\n                var r = new Frac(1);\n                /*start the loop*/\n                if (even)\n                    for (var i = 1; i <= n; i++)\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)));\n                else\n                    for (var i = 1; i <= n; i++)\n                        r = r.multiply(new Frac(2).multiply(new Frac(i)).subtract(new Frac(1)));\n            }\n            else {\n                /*Not yet extended to bigNum*/\n                r = Math.pow(2, (1 + 2 * x - Math.cos(Math.PI * x)) / 4) * Math.pow(Math.PI, (Math.cos(Math.PI * x) - 1) / 4) * Math2.gamma(1 + x / 2);\n            }\n\n            /*done*/\n            return r;\n        },\n        GCD: function () {\n            var args = arrayUnique([].slice.call(arguments)\n                    .map(function (x) {\n                        return Math.abs(x);\n                    })).sort(),\n                    a = Math.abs(args.shift()),\n                    n = args.length;\n\n            while (n-- > 0) {\n                var b = Math.abs(args.shift());\n                while (true) {\n                    a %= b;\n                    if (a === 0) {\n                        a = b;\n                        break;\n                    }\n                    b %= a;\n                    if (b === 0)\n                        break;\n                    ;\n                }\n            }\n            return a;\n        },\n        QGCD: function () {\n            var args = [].slice.call(arguments);\n            var a = args[0];\n            for (var i = 1; i < args.length; i++) {\n                var b = args[i];\n                var sign = a.isNegative() && b.isNegative() ? -1 : 1;\n                a = b.gcd(a);\n                if (sign < 0)\n                    a.negate();\n            }\n            return a;\n        },\n        LCM: function (a, b) {\n            return (a * b) / Math2.GCD(a, b);\n        },\n        //pow but with the handling of negative numbers\n        //http://stackoverflow.com/questions/12810765/calculating-cubic-root-for-negative-number\n        pow: function (b, e) {\n            if (b < 0) {\n                if (Math.abs(e) < 1) {\n                    /*nth root of a negative number is imaginary when n is even*/\n                    if (1 / e % 2 === 0)\n                        return NaN;\n                    return -Math.pow(Math.abs(b), e);\n                }\n            }\n            return Math.pow(b, e);\n        },\n        factor: function (n) {\n            n = Number(n);\n            var sign = Math.sign(n); /*store the sign*/\n            /*move the number to absolute value*/\n            n = Math.abs(n);\n            var ifactors = Math2.ifactor(n);\n            var factors = new Symbol();\n            factors.symbols = {};\n            factors.group = CB;\n            for (var x in ifactors) {\n                var factor = new Symbol(1);\n                factor.group = P; /*cheat a little*/\n                factor.value = x;\n                factor.power = new Symbol(ifactors[x]);\n                factors.symbols[x] = factor;\n            }\n            factors.updateHash();\n            \n            if(n === 1) {\n                factors = new Symbol(n);\n            }\n            \n            /*put back the sign*/\n            if(sign < 0)\n                factors.negate();\n            \n            return factors;\n        },\n        /**\n         * Uses trial division\n         * @param {Integer} n - the number being factored\n         * @param {object} factors -  the factors object\n         * @returns {object}\n         */\n        sfactor: function (n, factors) {\n            factors = factors || {};\n            var r = Math.floor(Math.sqrt(n));\n            var lcprime = PRIMES[PRIMES.length - 1];\n            /*a one-time cost... Hopefully ... And don't bother for more than a million*/\n            /*takes too long*/\n            if (r > lcprime && n < 1e6)\n                generatePrimes(r);\n            var l = PRIMES.length;\n            for (var i = 0; i < l; i++) {\n                var prime = PRIMES[i];\n                /*trial division*/\n                while (n % prime === 0) {\n                    n = n / prime;\n                    factors[prime] = (factors[prime] || 0) + 1;\n                }\n            }\n            if (n > 1)\n                factors[n] = 1;\n            return factors;\n        },\n        /**\n         * Pollard's rho\n         * @param {Integer} n\n         * @returns {object}\n         */\n        ifactor: function (n) {\n            n = String(n);\n\n            if (n === '0')\n                return {'0': 1};\n            n = new bigInt(n); /*convert to bigInt for safety*/\n            var sign = n.sign ? -1 : 1;\n            n = n.abs();\n            var factors = {}; /*factor object being returned.*/\n            if (n.lt('65536')) { /*less than 2^16 just use trial division*/\n                factors = Math2.sfactor(n, factors);\n            }\n            else {\n                var add = function (e) {\n                    if (!e.isPrime()) {\n                        factors = Math2.sfactor(e, factors);\n                    }\n                    else\n                        factors[e] = (factors[e] || 0) + 1;\n                };\n                \n                try {\n                    //set a safety\n                    var max = 1e3;\n                    var safety = 0;\n                    \n                    while (!n.abs().equals(1)) {\n                        if (n.isPrime()) {\n                            add(n);\n                            break;\n                        }\n                        else {\n                            function rho(c) {\n                                var xf = new bigInt(c),\n                                        cz = 2,\n                                        x = new bigInt(c),\n                                        factor = new bigInt(1);\n\n                                while (factor.equals(1)) {\n                                    for (var i = 0; i <= cz && factor.equals(1); i++) {\n                                        //trigger the safety\n                                        if(safety++ > max)\n                                            throw new Error('stopping');\n                                        \n                                        x = x.pow(2).add(1).mod(n);\n                                        factor = bigInt.gcd(x.minus(xf).abs(), n);\n                                    }\n\n                                    cz = cz * 2;\n                                    xf = x;\n                                }\n                                if (factor.equals(n)) {\n                                    return rho(c + 1);\n                                }\n                                return factor;\n                            }\n                            var factor = rho(2);\n                            add(factor);\n                            /*divide out the factor*/\n                            n = n.divide(factor);\n                        }\n                    }\n                }\n                catch(e) {\n                    //reset factors\n                    factors = {};\n                    add(n);\n                }\n                    \n            }\n\n            /*put the sign back*/\n            if (sign === -1) {\n                var sm = arrayMin(keys(factors)); /*/get the smallest number*/\n                factors['-' + sm] = factors[sm];\n                delete factors[sm];\n            }\n\n            return factors;\n        },\n        //factors a number into rectangular box. If sides are primes that this will be\n        //their prime factors. e.g. 21 -> (7)(3), 133 -> (7)(19)\n        boxfactor: function (n, max) {\n            max = max || 200; //stop after this number of iterations\n            var c, r,\n                    d = Math.floor((5 / 12) * n), //the divisor\n                    i = 0, //number of iterations\n                    safety = false;\n            while (true) {\n                c = Math.floor(n / d);\n                r = n % d;\n                if (r === 0)\n                    break; //we're done\n                if (safety)\n                    return [n, 1];\n                d = Math.max(r, d - r);\n                i++;\n                safety = i > max;\n            }\n            return [c, d, i];\n        },\n        fib: function (n) {\n            var sign = Math.sign(n);\n            n = Math.abs(n);\n            sign = even(n) ? sign : Math.abs(sign);\n            var a = 0, b = 1, f = 1;\n            for (var i = 2; i <= n; i++) {\n                f = a + b;\n                a = b;\n                b = f;\n            }\n            return f * sign;\n        },\n        mod: function (x, y) {\n            return x % y;\n        },\n        //http://mathworld.wolfram.com/IntegerPart.html\n        integer_part: function (x) {\n            var sign = Math.sign(x);\n            return sign * Math.floor(Math.abs(x));\n        },\n        simpson: function (f, a, b, step) {\n            var get_value = function (f, x, side) {\n                var v = f(x);\n                var d = 0.000000000001;\n                if (isNaN(v)) {\n                    v = f(side === 1 ? x + d : x - d);\n                }\n                return v;\n            };\n\n            step = step || 0.0001;\n            //calculate the number of intervals\n            var n = Math.abs(Math.floor((b - a) / step));\n            //simpson's rule requires an even number of intervals. If it's not then add 1\n            if (n % 2 !== 0)\n                n++;\n            //get the interval size\n            var dx = (b - a) / n;\n            //get x0\n            var retval = get_value(f, a, 1);\n\n            //get the middle part 4x1+2x2+4x3 ...\n            //but first set a flag to see if it's even or odd. \n            //The first one is odd so we start there\n            var even = false;\n            //get x1\n            var xi = a + dx;\n            //the coefficient\n            var c, k;\n            //https://en.wikipedia.org/wiki/Simpson%27s_rule\n            for (var i = 1; i < n; i++) {\n                c = even ? 2 : 4;\n                k = c * get_value(f, xi, 1);\n                retval += k;\n                //flip the even flag\n                even = !even;\n                //increment xi\n                xi += dx;\n            }\n\n            //add xn\n            return (retval + get_value(f, xi, 2)) * (dx / 3);\n\n        },\n        /**\n         * https://github.com/scijs/integrate-adaptive-simpson\n         * @param {Function} f - the function being integrated\n         * @param {Number} a - lower bound\n         * @param {Number} b - upper bound\n         * @param {Number} tol - step width\n         * @param {Number} maxdepth\n         * @returns {Number}\n         */\n        num_integrate: function (f, a, b, tol, maxdepth) {\n            if (maxdepth < 0)\n                throw new Error('max depth cannot be negative');\n\n            /* This algorithm adapted from pseudocode in:*/\n            /* http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf*/\n            function adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\n                if (state.nanEncountered) {\n                    return NaN;\n                }\n                var h, f1, f2, sl, sr, s2, m, V1, V2, err;\n                h = b - a;\n                f1 = f(a + h * 0.25);\n                f2 = f(b - h * 0.25);\n                /* Simple check for NaN:*/\n                if (isNaN(f1)) {\n                    state.nanEncountered = true;\n                    return;\n                }\n                /* Simple check for NaN:*/\n                if (isNaN(f2)) {\n                    state.nanEncountered = true;\n                    return;\n                }\n\n                sl = h * (fa + 4 * f1 + fm) / 12;\n                sr = h * (fm + 4 * f2 + fb) / 12;\n                s2 = sl + sr;\n                err = (s2 - V0) / 15;\n\n                if (state.maxDepthCount > 1000 * maxdepth) {\n                    return;\n                }\n\n\n                if (depth > maxdepth) {\n                    state.maxDepthCount++;\n                    return s2 + err;\n                }\n                else if (Math.abs(err) < tol) {\n                    return s2 + err;\n                }\n                else {\n                    m = a + h * 0.5;\n                    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\n                    if (isNaN(V1)) {\n                        state.nanEncountered = true;\n                        return NaN;\n                    }\n                    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\n\n                    if (isNaN(V2)) {\n                        state.nanEncountered = true;\n                        return NaN;\n                    }\n\n                    return V1 + V2;\n                }\n            }\n\n            function integrate(f, a, b, tol, maxdepth) {\n                var state = {\n                    maxDepthCount: 0,\n                    nanEncountered: false\n                };\n\n                if (tol === undefined) {\n                    tol = 1e-9;\n                }\n                if (maxdepth === undefined) {\n                    /*Issue #458 - This was lowered because of performance issues. */\n                    /*This was suspected from before but is now confirmed with this issue*/\n                    maxdepth = 45;\n                }\n\n                var fa = f(a);\n                var fm = f(0.5 * (a + b));\n                var fb = f(b);\n\n                var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\n\n                var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\n\n                if (state.maxDepthCount > 0) {\n                    warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\n                }\n\n                if (state.nanEncountered) {\n                    throw new Error('Function does not converge over interval!');\n                }\n\n                return result;\n            }\n            var retval;\n\n            try {\n                retval = integrate(f, a, b, tol, maxdepth);\n            }\n            catch (e) {\n                /*fallback to non-adaptive*/\n                return Math2.simpson(f, a, b);\n            }\n            return nround(retval, 12);\n        },\n        //https://en.wikipedia.org/wiki/Trigonometric_integral\n        //CosineIntegral\n        Ci: function (x) {\n            var n = 20,\n                    /*roughly Euler–Mascheroni*/\n                    g = 0.5772156649015329, \n                    sum = 0;\n            for (var i = 1; i < n; i++) {\n                /*cache 2n*/\n                var n2 = 2 * i; \n                sum += (Math.pow(-1, i) * Math.pow(x, n2)) / (n2 * Math2.factorial(n2));\n            }\n            return Math.log(x) + g + sum;\n        },\n        /*SineIntegral*/\n        Si: function (x) {\n            var n = 20,\n                    sum = 0;\n            for (var i = 0; i < n; i++) {\n                var n2 = 2 * i;\n                sum += (Math.pow(-1, i) * Math.pow(x, n2 + 1)) / ((n2 + 1) * Math2.factorial(n2 + 1));\n            }\n            return sum;\n        },\n        /*ExponentialIntegral*/\n        Ei: function (x) {\n            if (Number(x) === 0)\n                return -Infinity;\n            var n = 30,\n                    g = 0.5772156649015328606, /*roughly Euler–Mascheroni*/\n                    sum = 0;\n            for (var i = 1; i < n; i++) {\n                sum += Math.pow(x, i) / (i * Math2.factorial(i));\n            }\n            return g + Math.abs(Math.log(x)) + sum;\n        },\n        /*Hyperbolic Sine Integral*/\n        /*http://mathworld.wolfram.com/Shi.html*/\n        Shi: function (x) {\n            var n = 30,\n                    sum = 0,\n                    k, t;\n            for (var i = 0; i < n; i++) {\n                k = 2 * i;\n                t = k + 1;\n                sum += Math.pow(x, t) / (t * t * Math2.factorial(k));\n            }\n            return sum;\n        },\n        /*the cosine integral function*/\n        Chi: function (x) {\n            var dx, g, f;\n            dx = 0.001;\n            g = 0.5772156649015328606;\n            f = function (t) {\n                return (Math.cosh(t) - 1) / t;\n            };\n            return Math.log(x) + g + Math2.num_integrate(f, 0.002, x, dx);\n        },\n        /*the log integral*/\n        Li: function (x) {\n            return Math2.Ei(Math2.bigLog(x));\n        },\n        /*the gamma incomplete function*/\n        gamma_incomplete: function (n, x) {\n            var t = n - 1,\n                    sum = 0,\n                    x = x || 0;\n            for (var i = 0; i < t; i++) {\n                sum += Math.pow(x, i) / Math2.factorial(i);\n            }\n            return Math2.factorial(t) * Math.exp(-x) * sum;\n        },\n        /*\n         * Heaviside step function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/HeavisideStepFunction.html\n         * if x > 0 then 1\n         * if x == 0 then 1/2\n         * if x < 0 then 0\n         */\n        step: function (x) {\n            if (x > 0)\n                return 1;\n            if (x < 0)\n                return 0;\n            return 0.5;\n        },\n        /*\n         * Rectangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/RectangleFunction.html\n         * if |x| > 1/2 then 0\n         * if |x| == 1/2 then 1/2\n         * if |x| < 1/2 then 1\n         */\n        rect: function (x) {\n            var x = Math.abs(x);\n            if (x === 0.5)\n                return x;\n            if (x > 0.5)\n                return 0;\n            return 1;\n        },\n        /*\n         * Sinc function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/SincFunction.html\n         * if x == 0 then 1\n         * otherwise sin(x)/x\n         */\n        sinc: function (x) {\n            if (x.equals(0))\n                return 1;\n            return Math.sin(x) / x;\n        },\n        /*\n         * Triangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\n         * Specification : http://mathworld.wolfram.com/TriangleFunction.html\n         * if |x| >= 1 then 0\n         * if |x| < then 1-|x|\n         */\n        tri: function (x) {\n            x = Math.abs(x);\n            if (x >= 1)\n                return 0;\n            return 1 - x;\n        },\n        //https://en.wikipedia.org/wiki/Nth_root_algorithm\n        nthroot: function (A, n) {\n            /*make sure the input is of type Frac*/\n            if (!(A instanceof Frac))\n                A = new Frac(A.toString());\n            if (!(n instanceof Frac))\n                n = new Frac(n.toString());\n            if (n.equals(1))\n                return A;\n            /*begin algorithm*/\n            var xk = A.divide(new Frac(2)); /*x0*/\n            var e = new Frac(1e-15);\n            var dk, dk0, d0;\n            var a = n.clone().invert(),\n                    b = n.subtract(new Frac(1));\n            do {\n                var powb = Math2.bigpow(xk, b);\n                var dk_dec = a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);\n                dk = Frac.create(dk_dec);\n                if (d0)\n                    break;\n\n                xk = xk.add(dk);\n                /*check to see if there's no change from the last xk*/\n                var dk_dec = dk.toDecimal();\n                d0 = dk0 ? dk0 === dk_dec : false;\n                dk0 = dk_dec;\n            }\n            while (dk.abs().gte(e))\n\n            return xk;\n        },\n        /*https://gist.github.com/jiggzson/0c5b33cbcd7b52b36132b1e96573285f*/\n        /*Just the square root function but big :)*/\n        sqrt: function (n) {\n            if (!(n instanceof Frac))\n                n = new Frac(n);\n            var xn, d, ld, same_delta;\n            var c = 0; /*counter*/\n            var done = false;\n            var delta = new Frac(1e-20);\n            xn = n.divide(new Frac(2));\n            var safety = 1000;\n            do {\n                /*break if we're not converging*/\n                if (c > safety)\n                    throw new Error('Unable to calculate square root for ' + n);\n                xn = xn.add(n.divide(xn)).divide(new Frac(2));\n                xn = new Frac(xn.decimal(30));\n                /*get the difference from the true square*/\n                d = n.subtract(xn.multiply(xn));\n                /*if the square of the calculated number is close enough to the number*/\n                /*we're getting the square root or the last delta was the same as the new delta*/\n                /*then we're done*/\n                same_delta = ld ? ld.equals(d) : false;\n                if (d.clone().abs().lessThan(delta) || same_delta)\n                    done = true;\n                /*store the calculated delta*/\n                ld = d;\n                c++; /*increase the counter*/\n            }\n            while (!done)\n\n            return xn;\n        }\n    };\n    //link the Math2 object to Settings.FUNCTION_MODULES\n    Settings.FUNCTION_MODULES.push(Math2);\n    reserveNames(Math2); //reserve the names in Math2\n\n\n//Polyfills ==================================================================== \n    //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/\n    Math.sign = Math.sign || function (x) {\n        x = +x; // convert to a number\n        if (x === 0 || isNaN(x)) {\n            return x;\n        }\n        return x > 0 ? 1 : -1;\n    };\n\n    Math.cosh = Math.cosh || function (x) {\n        var y = Math.exp(x);\n        return (y + 1 / y) / 2;\n    };\n\n    Math.sech = Math.sech || function (x) {\n        return 1 / Math.cosh(x);\n    };\n\n    Math.csch = Math.csch || function (x) {\n        return 1 / Math.sinh(x);\n    };\n\n    Math.coth = Math.coth || function (x) {\n        return 1 / Math.tanh(x);\n    };\n\n    Math.sinh = Math.sinh || function (x) {\n        var y = Math.exp(x);\n        return (y - 1 / y) / 2;\n    };\n\n    Math.tanh = Math.tanh || function (x) {\n        if (x === Infinity) {\n            return 1;\n        }\n        else if (x === -Infinity) {\n            return -1;\n        }\n        else {\n            var y = Math.exp(2 * x);\n            return (y - 1) / (y + 1);\n        }\n    };\n\n    Math.asinh = Math.asinh || function (x) {\n        if (x === -Infinity) {\n            return x;\n        }\n        else {\n            return Math.log(x + Math.sqrt(x * x + 1));\n        }\n    };\n\n    Math.acosh = Math.acosh || function (x) {\n        return Math.log(x + Math.sqrt(x * x - 1));\n    };\n\n    Math.atanh = Math.atanh || function (x) {\n        return Math.log((1 + x) / (1 - x)) / 2;\n    };\n\n    Math.log10 = Math.log10 || function (x) {\n        return Math.log(x) * Math.LOG10E;\n    };\n\n    Math.trunc = Math.trunc || function (x) {\n        if (isNaN(x)) {\n            return NaN;\n        }\n        if (x > 0) {\n            return Math.floor(x);\n        }\n        return Math.ceil(x);\n    };\n\n//Global functions ============================================================= \n    /**\n     * This method will return a hash or a text representation of a Symbol, Matrix, or Vector. \n     * If all else fails it *assumes* the object has a toString method and will call that.\n     * \n     * @param {Object} obj\n     * @param {String} option get is as a hash \n     * @param {int} useGroup\n     * @returns {String}\n     */\n    function text(obj, option, useGroup, decp) {\n        var asHash = option === 'hash',\n            //whether to wrap numbers in brackets\n            wrapCondition = undefined,\n            opt = asHash ? undefined : option,\n            asDecimal = opt === 'decimal' || opt === 'decimals';\n    \n        if(asDecimal && typeof decp === 'undefined')\n            decp = 16;\n        \n        function toString(obj) {\n            switch (option)\n            {\n                case 'decimals':\n                case 'decimal':\n                    wrapCondition = wrapCondition || function (str) {\n                        return false;\n                    };\n                    return obj.valueOf();\n                case 'recurring':\n                    wrapCondition = wrapCondition || function (str) {\n                        return str.indexOf(\"'\") !== -1;\n                    };\n\n                    var str = obj.toString();\n                    //verify that the string is actually a fraction\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\n                    if (frac.length === 0)\n                        return str;\n\n                    //split the fraction into the numerator and denominator\n                    var parts = frac[0].split('/');\n                    var negative = false;\n                    var m = Number(parts[0]);\n                    if (m < 0) {\n                        m = -m;\n                        negative = true;\n                    }\n                    var n = Number(parts[1]);\n                    if (!n)\n                        n = 1;\n\n                    //https://softwareengineering.stackexchange.com/questions/192070/what-is-a-efficient-way-to-find-repeating-decimal#comment743574_192081\n                    var quotient = Math.floor(m / n), c = 10 * (m - quotient * n);\n                    quotient = quotient.toString() + \".\";\n                    while (c && c < n) {\n                        c *= 10;\n                        quotient += \"0\";\n                    }\n                    var digits = \"\", passed = [], i = 0;\n                    while (true) {\n                        if (typeof passed[c] !== 'undefined') {\n                            var prefix = digits.slice(0, passed[c]),\n                                    cycle = digits.slice(passed[c]),\n                                    result = quotient + prefix + \"'\" + cycle + \"'\";\n                            return (negative ? \"-\" : \"\") + result.replace(\"'0'\", \"\").replace(/\\.$/, \"\");\n                        }\n                        var q = Math.floor(c / n), r = c - q * n;\n                        passed[c] = i;\n                        digits += q.toString();\n                        i += 1;\n                        c = 10 * r;\n                    }\n                case 'mixed':\n                    wrapCondition = wrapCondition || function (str) {\n                        return str.indexOf('/') !== -1;\n                    };\n\n                    var str = obj.toString();\n                    //verify that the string is actually a fraction\n                    var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\n                    if (frac.length === 0)\n                        return str;\n\n                    //split the fraction into the numerator and denominator\n                    var parts = frac[0].split('/');\n                    var numer = new bigInt(parts[0]);\n                    var denom = new bigInt(parts[1]);\n                    if (denom.equals(0))\n                        denom = new bigInt(1);\n\n                    //return the quotient plus the remainder\n                    var divmod = numer.divmod(denom);\n                    var quotient = divmod.quotient;\n                    var remainder = divmod.remainder;\n                    var operator = parts[0][0] === '-' || quotient.equals(0) || remainder.equals(0) ? '' : '+';\n                    return (quotient.equals(0) ? '' : quotient.toString()) + operator + (remainder.equals(0) ? '' : (remainder.toString() + '/' + parts[1]));\n                case 'scientific':\n                    wrapCondition = wrapCondition || function(str) {\n                        return false;\n                    }\n                    return new Scientific(obj.valueOf()).toString(Settings.SCIENTIFIC_MAX_DECIMAL_PLACES);\n                default:\n                    wrapCondition = wrapCondition || function (str) {\n                        return str.indexOf('/') !== -1;\n                    };\n                    \n                    return obj.toString();\n            }\n        }\n\n        //if the object is a symbol\n        if (isSymbol(obj)) {\n            var multiplier = '',\n                    power = '',\n                    sign = '',\n                    group = obj.group || useGroup,\n                    value = obj.value;\n            \n            //if the value is to be used as a hash then the power and multiplier need to be suppressed\n            if (!asHash) {\n                //use asDecimal to get the object back as a decimal\n                var om = toString(obj.multiplier);\n                if (om == '-1' && String(obj.multiplier) === '-1') {\n                    sign = '-';\n                    om = '1';\n                }\n                //only add the multiplier if it's not 1\n                if (om != '1')\n                    multiplier = om;\n                //use asDecimal to get the object back as a decimal\n                var p = obj.power ? toString(obj.power) : '';\n                //only add the multiplier \n                if (p != '1') {\n                    //is it a symbol\n                    if (isSymbol(p)) {\n                        power = text(p, opt);\n                    }\n                    else {\n                        power = p;\n                    }\n                }\n            }\n\n            switch (group) {\n                case N:\n                    multiplier = '';\n                    //round if requested\n                    var m = decp && asDecimal ? obj.multiplier.toDecimal(decp) : toString(obj.multiplier);\n                    //if it's numerical then all we need is the multiplier\n                    value = String(obj.multiplier) == '-1' ? '1' : m;\n                    power = '';\n                    break;\n                case PL:\n                    value = obj.collectSymbols().map(function(x) {\n                        var txt = text(x, opt, useGroup, decp);\n                        if(txt == '0')\n                            txt = '';\n                        return txt;\n                    }).sort().join('+').replace(/\\+\\-/g, '-');\n                    break;\n                case CP:\n                    value = obj.collectSymbols().map(function(x) {\n                        var txt = text(x, opt, useGroup, decp);\n                        if(txt == '0')\n                            txt = '';\n                        return txt;\n                    }).sort().join('+').replace(/\\+\\-/g, '-');\n                    break;\n                case CB:\n                    value = obj.collectSymbols(function (symbol) {\n                        var g = symbol.group;\n                        //both groups will already be in brackets if their power is greater than 1\n                        //so skip it.\n                        if ((g === PL || g === CP) && (symbol.power.equals(1) && symbol.multiplier.equals(1))) {\n                            return inBrackets(text(symbol, opt));\n                        }\n                        return text(symbol, opt);\n                    }).join('*');\n                    break;\n                case EX:\n                    var pg = obj.previousGroup,\n                            pwg = obj.power.group;\n\n                    //PL are the exception. It's simpler to just collect and set the value\n                    if (pg === PL)\n                        value = obj.collectSymbols(text, opt).join('+').replace('+-', '-');\n                    if (!(pg === N || pg === S || pg === FN) && !asHash) {\n                        value = inBrackets(value);\n                    }\n\n                    if ((pwg === CP || pwg === CB || pwg === PL || obj.power.multiplier.toString() != '1') && power) {\n                        power = inBrackets(power);\n                    }\n                    break;\n            }\n\n            if (group === FN) {\n                value = obj.fname + inBrackets(obj.args.map(function (symbol) {\n                    return text(symbol, opt);\n                }).join(','));\n            }\n            //TODO: Needs to be more efficient. Maybe. \n            if (group === FN && obj.fname in CUSTOM_OPERATORS) {\n                var a = text(obj.args[0]);\n                var b = text(obj.args[1]);\n                if (obj.args[0].isComposite()) //preserve the brackets\n                    a = inBrackets(a);\n                if (obj.args[1].isComposite()) //preserve the brackets\n                    b = inBrackets(b);\n                value = a + CUSTOM_OPERATORS[obj.fname] + b;\n            }\n            //wrap the power since / is less than ^\n            //TODO: introduce method call isSimple\n            if (power && group !== EX && wrapCondition(power)) {\n                power = inBrackets(power);\n            }\n\n            //the following groups are held together by plus or minus. They can be raised to a power or multiplied\n            //by a multiplier and have to be in brackets to preserve the order of precedence\n            if (((group === CP || group === PL) && (multiplier && multiplier != '1' || sign === '-'))\n                    || ((group === CB || group === CP || group === PL) && (power && power != '1'))\n                    || !asHash && group === P && value == -1\n                    || obj.fname === PARENTHESIS) {\n\n                value = inBrackets(value);\n            }\n            \n            if(decp && (option === 'decimal' || option === 'decimals' && multiplier)) {\n                multiplier = nround(multiplier, decp);\n            }\n            \n            //add the sign back\n            var c = sign + multiplier;\n            \n            if (multiplier && wrapCondition(multiplier))\n                c = inBrackets(c);\n\n            if (power < 0)\n                power = inBrackets(power);\n            \n            //add the multiplication back\n            if (multiplier)\n                c = c + '*';\n            \n            if (power)\n                power = Settings.POWER_OPERATOR + power;\n\n            //this needs serious rethinking. Must fix\n            if (group === EX && value.charAt(0) === '-')\n                value = inBrackets(value);\n\n            var cv = c + value;\n\n            if (obj.parens)\n                cv = inBrackets(cv);\n\n            return cv + power;\n        }\n        else if (isVector(obj)) {\n            var l = obj.elements.length,\n                    c = [];\n            for (var i = 0; i < l; i++)\n                c.push(obj.elements[i].text(option));\n            return '[' + c.join(',') + ']';\n        }\n        else {\n            try {\n                return obj.toString();\n            }\n            catch (e) {\n                return '';\n            }\n        }\n    }\n    /**\n     * Calculates prime factors for a number\n     * @param {int} num\n     * @returns {Array}\n     */\n\n    function primeFactors(num) {\n        if (isPrime(num))\n            return [num];\n        var l = num, i = 1, factors = [],\n                epsilon = 2.2204460492503130808472633361816E-16;\n        while (i < l) {\n            var quotient = num / i;\n            var whole = Math.floor(quotient);\n            var remainder = quotient - whole;\n            if (remainder <= epsilon && i > 1) {\n                if (PRIMES.indexOf(i) !== -1)\n                    PRIMES[i]=i;\n                factors.push(i);\n                l = whole;\n            }\n            i++;\n        }\n        \n        return factors.sort(function (a, b) {\n            return a - b;\n        });\n    };\n\n//Expression ===================================================================   \n    /** \n     * This is what nerdamer returns. It's sort of a wrapper around the symbol class and \n     * provides the user with some useful functions. If you want to provide the user with extra\n     * library functions then add them to this class's prototype.\n     * @param {Symbol} symbol\n     * @returns {Expression} wraps around the Symbol class\n     */\n    function Expression(symbol) {\n        //we don't want arrays wrapped\n        this.symbol = symbol;\n    }\n    /**\n     * Returns stored expression at index. For first index use 1 not 0.\n     * @param {bool} asType  \n     * @param {Integer} expression_number \n     */\n    Expression.getExpression = function (expression_number, asType) {\n        if (expression_number === 'last' || !expression_number)\n            expression_number = EXPRESSIONS.length;\n        if (expression_number === 'first')\n            expression_number = 1;\n        var index = expression_number - 1,\n                expression = EXPRESSIONS[index],\n                retval = expression ? new Expression(expression) : expression;\n        return retval;\n    };\n    Expression.prototype = {\n        /**\n         * Returns the text representation of the expression\n         * @param {String} opt - option of formatting numbers\n         * @param {Number} n The number of significant figures\n         * @returns {String}\n         */\n        text: function (opt, n) {\n            n = n || 19; \n            opt = opt || 'decimals';\n            if (this.symbol.text_)\n                return this.symbol.text_(opt);\n            \n            return text(this.symbol, opt, undefined, n);\n        },\n        /**\n         * Returns the latex representation of the expression\n         * @param {String} option - option for formatting numbers\n         * @returns {String}\n         */\n        latex: function (option) {\n            if (this.symbol.latex)\n                return this.symbol.latex(option);\n            return LaTeX.latex(this.symbol, option);\n        },\n        valueOf: function () {\n            return this.symbol.valueOf();\n        },\n\n        /**\n         * Evaluates the expression and tries to reduce it to a number if possible.\n         * If an argument is given in the form of %{integer} it will evaluate that expression.\n         * Other than that it will just use it's own text and reparse\n         * @returns {Expression}\n         */\n        evaluate: function () {\n\n            var first_arg = arguments[0], expression, idx = 1;\n\n            //Enable getting of expressions using the % so for example %1 should get the first expression\n            if (typeof first_arg === 'string') {\n                expression = (first_arg.charAt(0) === '%') ? Expression.getExpression(first_arg.substr(1)).text() : first_arg;\n            }\n            else if (first_arg instanceof Expression || isSymbol(first_arg)) {\n                expression = first_arg.text();\n            }\n            else {\n                expression = this.symbol.text();\n                idx--;\n            }\n\n            var subs = arguments[idx] || {};\n            \n            var retval = new Expression(block('PARSE2NUMBER', function () {\n                return _.parse(expression, subs);\n            }, true));\n            \n            return retval;\n        },\n        /**\n         * Converts a symbol to a JS function. Pass in an array of variables to use that order instead of \n         * the default alphabetical order\n         * @param vars {Array}\n         */\n        buildFunction: function (vars) {\n            return Build.build(this.symbol, vars);\n        },\n        /**\n         * Checks to see if the expression is just a plain old number\n         * @returns {boolean}\n         */\n        isNumber: function () {\n            return isNumericSymbol(this.symbol);\n        },\n        /**\n         * Checks to see if the expression is infinity\n         * @returns {boolean}\n         */\n        isInfinity: function () {\n            return Math.abs(this.symbol.multiplier) === Infinity;\n        },\n        /**\n         * Returns all the variables in the expression\n         * @returns {Array}\n         */\n        variables: function () {\n            return variables(this.symbol);\n        },\n\n        toString: function () {\n            try {\n                if (isArray(this.symbol))\n                    return '[' + this.symbol.toString() + ']';\n                return this.symbol.toString();\n            }\n            catch (e) {\n                return '';\n            }\n        },\n        //forces the symbol to be returned as a decimal\n        toDecimal: function (prec) {\n            Settings.precision = prec;\n            var dec = text(this.symbol, 'decimals');\n            Settings.precision = undefined;\n            return dec;\n        },\n        //checks to see if the expression is a fraction\n        isFraction: function () {\n            return isFraction(this.symbol);\n        },\n        //checks to see if the symbol is a multivariate polynomial\n        isPolynomial: function () {\n            return this.symbol.isPoly();\n        },\n        //performs a substitution\n        sub: function (symbol, for_symbol) {\n            return new Expression(this.symbol.sub(_.parse(symbol), _.parse(for_symbol)));\n        },\n        operation: function (otype, symbol) {\n            if (isExpression(symbol))\n                symbol = symbol.symbol;\n            else if (!isSymbol(symbol))\n                symbol = _.parse(symbol);\n            return new Expression(_[otype](this.symbol.clone(), symbol.clone()));\n        },\n        add: function (symbol) {\n            return this.operation('add', symbol);\n        },\n        subtract: function (symbol) {\n            return this.operation('subtract', symbol);\n        },\n        multiply: function (symbol) {\n            return this.operation('multiply', symbol);\n        },\n        divide: function (symbol) {\n            return this.operation('divide', symbol);\n        },\n        pow: function (symbol) {\n            return this.operation('pow', symbol);\n        },\n        expand: function () {\n            return new Expression(_.expand(this.symbol));\n        },\n        each: function (callback, i) {\n            if (this.symbol.each)\n                this.symbol.each(callback, i);\n            else if (isArray(this.symbol)) {\n                for (var i = 0; i < this.symbol.length; i++)\n                    callback.call(this.symbol, this.symbol[i], i);\n            }\n            else\n                callback.call(this.symbol);\n        },\n        eq: function (value) {\n            if (!isSymbol(value))\n                value = _.parse(value);\n            try {\n                var d = _.subtract(this.symbol.clone(), value);\n                return d.equals(0);\n            }\n            catch (e) {\n                return false;\n            }\n            ;\n        },\n        lt: function (value) {\n            if (!isSymbol(value))\n                value = _.parse(value);\n            try {\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\n                return d.lessThan(0);\n            }\n            catch (e) {\n                return false;\n            }\n            ;\n        },\n        gt: function (value) {\n            if (!isSymbol(value))\n                value = _.parse(value);\n            try {\n                var d = evaluate(_.subtract(this.symbol.clone(), value));\n                return d.greaterThan(0);\n            }\n            catch (e) {\n                return false;\n            }\n            ;\n        },\n        gte: function (value) {\n            return this.gt(value) || this.eq(value);\n        },\n        lte: function (value) {\n            return this.lt(value) || this.eq(value);\n        },\n\n        numerator: function () {\n            return new Expression(this.symbol.getNum());\n        },\n        denominator: function () {\n            return new Expression(this.symbol.getDenom());\n        },\n        hasFunction: function(f) {\n            return this.symbol.containsFunction(f);\n        },\n        contains: function(variable) {\n            return this.symbol.contains(variable);\n        }\n    };\n    //Aliases\n    Expression.prototype.toTeX = Expression.prototype.latex;\n\n//Scientific ===================================================================  \n    function Scientific(num) {\n        if (!(this instanceof Scientific))\n            return new Scientific(num);\n\n        num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\n\n        //remove the sign\n        if (num.startsWith('-')) {\n            this.sign = -1;\n            //remove the sign\n            num = num.substr(1, num.length);\n        } else {\n            this.sign = 1;\n        }\n\n        if (Scientific.isScientific(num)) {\n            this.fromScientific(num);\n        } else {\n            this.convert(num);\n        }\n        return this;\n    }\n\n    Scientific.prototype = {\n        fromScientific: function (num) {\n            var parts = String(num).toLowerCase().split('e');\n            this.coeff = parts[0];\n            this.exponent = parts[1];\n\n            return this;\n        },\n        convert: function (num) {\n            //get wholes and decimals\n            var parts = num.split('.');\n            //make zero go away\n            var w = parts[0] || '';\n            var d = parts[1] || '';\n            //convert zero to blank strings\n            w = Scientific.removeLeadingZeroes(w);\n            d = Scientific.removeTrailingZeroes(d);\n            //find the location of the decimal place which is right after the wholes\n            var dot_location = w.length;\n            //add them together so we can move the dot\n            var n = w + d;\n            //find the next number\n            var zeroes = Scientific.leadingZeroes(n).length;\n            //set the exponent\n            this.exponent = dot_location - (zeroes + 1);\n            //set the coeff but first remove leading zeroes\n            var coeff = Scientific.removeLeadingZeroes(n);\n            this.coeff = coeff.charAt(0) + '.' + (coeff.substr(1, coeff.length) || '0');\n\n            return this;\n        },\n        round: function (num) {\n            var n = this.copy();\n\n            num = Number(num); //cast to number for safety\n            //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\n            //we can round based on this\n            if (num === 0)\n                n.coeff = n.coeff.charAt(0);\n            else {\n                //get up to n-1 digits\n                var rounded = this.coeff.substring(0, num + 1);\n                //get the next two\n                var next_two = this.coeff.substring(num + 1, num + 3);\n                //the extra digit\n                var ed = next_two.charAt(0);\n\n                if (next_two.charAt(1) > 4)\n                    ed++;\n\n                n.coeff = rounded + ed;\n            }\n\n            return n;\n        },\n        copy: function () {\n            var n = new Scientific(0);\n            n.coeff = this.coeff;\n            n.exponent = this.exponent;\n            n.sign = this.sign;\n            return n;\n        },\n        toString: function (n) {\n            var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, n);\n            \n            var c;\n            if(this.exponent === 0 && Settings.SCIENTIFIC_IGNORE_INTS) {\n                c = this.coeff;\n            }\n            else  {\n                c = coeff + 'e' + this.exponent;\n            }\n            return (this.sign === -1 ? '-' : '') + c;\n        }\n    };\n\n    Scientific.isScientific = function (num) {\n        return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\n    };\n    Scientific.leadingZeroes = function (num) {\n        var match = num.match(/^(0*).*$/);\n        return match ? match[1] : '';\n    };\n    Scientific.removeLeadingZeroes = function (num) {\n        var match = num.match(/^0*(.*)$/);\n        return match ? match[1] : '';\n    };\n\n    Scientific.removeTrailingZeroes = function (num) {\n        var match = num.match(/0*$/);\n        return match ? num.substring(0, num.length - match[0].length) : '';\n    };\n    Scientific.round = function (c, n) {\n        var coeff = nround(c, n);\n        var m = String(coeff).split('.').pop();\n        var d = n - m.length;\n        //if we're asking for more significant figures\n        if (d > 0) {\n            coeff = coeff + (new Array(d + 1).join(0));\n        }\n        return coeff;\n    };\n\n//Scientific ===================================================================\n    /*\n     * Javascript has the toExponential method but this allows you to work with string and therefore any number of digits of your choosing\n     * For example Scientific('464589498449496467924197545625247695464569568959124568489548454');\n     */\n\n    function Scientific(num) {\n        if(!(this instanceof Scientific))\n            return new Scientific(num);\n\n        num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\n\n        //remove the sign\n        if(num.startsWith('-')) {\n            this.sign = -1;\n            //remove the sign\n            num = num.substr(1, num.length);\n        }\n        else {\n            this.sign = 1;\n        }\n\n        if(Scientific.isScientific(num)) {\n            this.fromScientific(num);\n        }\n        else {\n            this.convert(num);\n        }\n        return this;\n    }\n\n    Scientific.prototype = {\n        fromScientific: function(num) {\n            var parts = String(num).toLowerCase().split('e');\n            this.coeff = parts[0];\n            this.exponent = parts[1];\n\n            return this;\n        },\n        convert: function(num) {\n            //get wholes and decimals\n            var parts = num.split('.');\n            //make zero go away\n            var w = parts[0] || ''; \n            var d = parts[1] || '';\n            //convert zero to blank strings\n            w = Scientific.removeLeadingZeroes(w);\n            d = Scientific.removeTrailingZeroes(d);\n            //find the location of the decimal place which is right after the wholes\n            var dot_location = w.length;\n            //add them together so we can move the dot\n            var n = w+d;\n            //find the next number\n            var zeroes = Scientific.leadingZeroes(n).length;\n            //set the exponent\n            this.exponent = dot_location-(zeroes+1);\n            //set the coeff but first remove leading zeroes\n            var coeff = Scientific.removeLeadingZeroes(n);\n            this.coeff = coeff.charAt(0)+'.'+(coeff.substr(1, coeff.length) || '0');\n            \n            //the coeff decimal places\n            var dec = this.coeff.split('.')[1] || ''; //if it's undefined or zero it's going to blank\n\n            this.decp = dec === '0' ? 0 : dec.length;\n            //decimals\n            this.dec = d;\n            //wholes\n            this.wholes = w;\n\n            return this;\n        },\n        round: function(num) {\n            var n = this.copy();\n\n            num = Number(num); //cast to number for safety\n            //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\n            //we can round based on this\n            if(num === 0)\n                n.coeff = n.coeff.charAt(0);\n            else {\n                //get up to n-1 digits\n                var rounded = this.coeff.substring(0, num+1);\n                //get the next two\n                var next_two = this.coeff.substring(num+1, num+3);\n                //the extra digit\n                var ed = next_two.charAt(0);\n\n                if(next_two.charAt(1) > 4)\n                    ed++;\n\n                n.coeff = rounded+ed;\n            }\n\n            return n;\n        },\n        copy: function() {\n            var n = new Scientific(0);\n            n.coeff = this.coeff;\n            n.exponent = this.exponent;\n            n.sign = this.sign;\n            return n;\n        },\n        toString: function(n) {\n            var retval;\n            \n            if(Settings.SCIENTIFIC_IGNORE_ZERO_EXPONENTS && this.exponent === 0 && this.decp < n) {\n                if(this.decp === 0)\n                    retval = this.wholes;\n                else\n                    retval = this.coeff;\n            }\n            else {\n                var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, Math.min(n, this.decp || 1));\n                retval = this.exponent === 0 ? coeff : coeff+'e'+this.exponent;\n            }\n            \n            return (this.sign === -1 ? '-' : '' )+retval;\n        }\n    };\n\n    Scientific.isScientific = function(num) {\n        return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\n    };\n    Scientific.leadingZeroes = function(num) {\n        var match = num.match(/^(0*).*$/);\n        return match ? match[1] : '';\n    }; \n    Scientific.removeLeadingZeroes = function(num) {\n      var match = num.match(/^0*(.*)$/);\n      return match ? match[1] : '';\n    };\n\n    Scientific.removeTrailingZeroes = function(num) {\n      var match = num.match(/0*$/);\n      return match ? num.substring(0, num.length-match[0].length) : '';\n    };\n\n\n//Frac =========================================================================    \n    function Frac(n) {\n        if (n instanceof Frac)\n            return n;\n        if (n === undefined)\n            return this;\n        try {\n            if (isInt(n)) {\n                try {\n                    this.num = bigInt(n);\n                    this.den = bigInt(1);\n                }\n                catch (e) {\n                    return Frac.simple(n);\n                }\n            }\n            else {\n                var frac = Fraction.convert(n);\n                this.num = new bigInt(frac[0]);\n                this.den = new bigInt(frac[1]);\n            }\n        }\n        catch (e) {\n            return Frac.simple(n);\n        }\n\n    }\n    //safe to use with negative numbers or other types\n    Frac.create = function (n) {\n        if (n instanceof Frac)\n            return n;\n        n = n.toString();\n        var is_neg = n.charAt(0) === '-'; //check if it's negative\n        if (is_neg)\n            n = n.substr(1, n.length - 1); //remove the sign\n        var frac = new Frac(n);\n        //put the sign back\n        if (is_neg)\n            frac.negate();\n        return frac;\n    };\n    Frac.isFrac = function (o) {\n        return (o instanceof Frac);\n    };\n    Frac.quick = function (n, d) {\n        var frac = new Frac();\n        frac.num = new bigInt(n);\n        frac.den = new bigInt(d);\n        return frac;\n    };\n    Frac.simple = function (n) {\n        var nstr = String(scientificToDecimal(n)),\n                m_dc = nstr.split('.'),\n                num = m_dc.join(''),\n                den = 1,\n                l = (m_dc[1] || '').length;\n        for (var i = 0; i < l; i++)\n            den += '0';\n        var frac = Frac.quick(num, den);\n        return frac.simplify();\n    };\n    Frac.prototype = {\n        multiply: function (m) {\n            if (this.isOne()) {\n                return m.clone();\n            }\n            if (m.isOne()) {\n                return this.clone();\n            }\n\n            var c = this.clone();\n            c.num = c.num.multiply(m.num);\n            c.den = c.den.multiply(m.den);\n\n            return c.simplify();\n        },\n        divide: function (m) {\n            if (m.equals(0))\n                throw new DivisionByZero('Division by zero not allowed!');\n            return this.clone().multiply(m.clone().invert()).simplify();\n        },\n        subtract: function (m) {\n            return this.clone().add(m.clone().neg());\n        },\n        neg: function () {\n            this.num = this.num.multiply(-1);\n            return this;\n        },\n        add: function (m) {\n            var n1 = this.den, n2 = m.den, c = this.clone();\n            var a = c.num, b = m.num;\n            if (n1.equals(n2)) {\n                c.num = a.add(b);\n            }\n            else {\n                c.num = a.multiply(n2).add(b.multiply(n1));\n                c.den = n1.multiply(n2);\n            }\n\n            return c.simplify();\n        },\n        mod: function (m) {\n            var a = this.clone(),\n                    b = m.clone();\n            //make their denominators even and return the mod of their numerators\n            a.num = a.num.multiply(b.den);\n            a.den = a.den.multiply(b.den);\n            b.num = b.num.multiply(this.den);\n            b.den = b.den.multiply(this.den);\n            a.num = a.num.mod(b.num);\n            return a.simplify();\n        },\n        simplify: function () {\n            var gcd = bigInt.gcd(this.num, this.den);\n\n            this.num = this.num.divide(gcd);\n            this.den = this.den.divide(gcd);\n            return this;\n        },\n        clone: function () {\n            var m = new Frac();\n            m.num = new bigInt(this.num);\n            m.den = new bigInt(this.den);\n            return m;\n        },\n        decimal: function (prec) {\n            var sign = this.num.isNegative() ? '-' : '';\n            if (this.num.equals(this.den)) {\n                return '1';\n            }\n            //go plus one for rounding\n            prec = prec || Settings.PRECISION;\n            prec++;\n            var narr = [],\n                    n = this.num.abs(),\n                    d = this.den;\n            for (var i = 0; i < prec; i++) {\n                var w = n.divide(d), //divide out whole\n                        r = n.subtract(w.multiply(d)); //get remainder\n\n                narr.push(w);\n                if (r.equals(0))\n                    break;\n                n = r.times(10); //shift one dec place\n            }\n            var whole = narr.shift();\n            if (narr.length === 0) {\n                return sign + whole.toString();\n            }\n\n            if (i === prec) {\n                var lt = [];\n                //get the last two so we can round it\n                for (var i = 0; i < 2; i++)\n                    lt.unshift(narr.pop());\n                //put the last digit back by rounding the last two\n                narr.push(Math.round(lt.join('.')));\n            }\n\n            var dec = whole.toString() + '.' + narr.join('');\n            return sign + dec;\n        },\n        toDecimal: function (prec) {\n            if (prec || Settings.PRECISION) {\n                return this.decimal(prec);\n            }\n            else \n                return this.num / this.den;\n        },\n        qcompare: function (n) {\n            return [this.num.multiply(n.den), n.num.multiply(this.den)];\n        },\n        equals: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].equals(q[1]);\n        },\n        absEquals: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].abs().equals(q[1]);\n        },\n        //lazy check to be fixed. Sufficient for now but will cause future problems\n        greaterThan: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].gt(q[1]);\n        },\n        gte: function (n) {\n            return this.greaterThan(n) || this.equals(n);\n        },\n        lte: function (n) {\n            return this.lessThan(n) || this.equals(n);\n        },\n        lessThan: function (n) {\n            if (!isNaN(n))\n                n = new Frac(n);\n            var q = this.qcompare(n);\n\n            return q[0].lt(q[1]);\n        },\n        isInteger: function () {\n            return this.den.equals(1);\n        },\n        negate: function () {\n            this.num = this.num.multiply(-1);\n            return this;\n        },\n        invert: function () {\n            var t = this.den;\n            //why invert 0/1? It'll become 1/0 and that's a lie.\n            if (!this.num.equals(0)) {\n                var isnegative = this.num.isNegative();\n                this.den = this.num.abs();\n                this.num = t;\n                if (isnegative)\n                    this.num = this.num.multiply(-1);\n            }\n\n            return this;\n        },\n        isOne: function () {\n            return this.num.equals(1) && this.den.equals(1);\n        },\n        sign: function () {\n            return this.num.isNegative() ? -1 : 1;\n        },\n        abs: function () {\n            this.num = this.num.abs();\n            return this;\n        },\n        gcd: function (f) {\n            return Frac.quick(bigInt.gcd(f.num, this.num), bigInt.lcm(f.den, this.den));\n        },\n        toString: function () {\n            return !this.den.equals(1) ? this.num.toString() + '/' + this.den.toString() : this.num.toString();\n        },\n        valueOf: function () {\n//            if(this.num == 24) throw new Error(999)\n            if (Settings.USE_BIG)\n                return new bigDec(this.num.toString()).div(new bigDec(this.den.toString()));\n            return this.num / this.den;\n        },\n        isNegative: function () {\n            return this.toDecimal() < 0;\n        }\n    };\n\n//Symbol =======================================================================\n    /**\n     * All symbols e.g. x, y, z, etc or functions are wrapped in this class. All symbols have a multiplier and a group. \n     * All symbols except for \"numbers (group N)\" have a power. \n     * @class Primary data type for the Parser. \n     * @param {String} obj \n     * @returns {Symbol}\n     */\n    function Symbol(obj) {\n        var isInfinity = obj === 'Infinity';\n        //this enables the class to be instantiated without the new operator\n        if (!(this instanceof Symbol)) {\n            return new Symbol(obj);\n        }\n        ;\n        //define numeric symbols\n        if (/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(obj)) {\n            this.group = N;\n            this.value = CONST_HASH;\n            this.multiplier = new Frac(obj);\n        }\n        //define symbolic symbols\n        else {\n            this.group = S;\n            validateName(obj);\n            this.value = obj;\n            this.multiplier = new Frac(1);\n            this.imaginary = obj === Settings.IMAGINARY;\n            this.isInfinity = isInfinity;\n        }\n\n        //As of 6.0.0 we switched to infinite precision so all objects have a power\n        //Although this is still redundant in constants, it simplifies the logic in\n        //other parts so we'll keep it\n        this.power = new Frac(1);\n\n        // Added to silence the strict warning.\n        return this;\n    }\n    /**\n     * Returns vanilla imaginary symbol\n     * @returns {Symbol}\n     */\n    Symbol.imaginary = function () {\n        var s = new Symbol(Settings.IMAGINARY);\n        s.imaginary = true;\n        return s;\n    };\n    /**\n     * Return nerdamer's representation of Infinity\n     * @param {int} negative -1 to return negative infinity \n     * @returns {Symbol} \n     */\n    Symbol.infinity = function (negative) {\n        var v = new Symbol('Infinity');\n        if (negative === -1)\n            v.negate();\n        return v;\n    };\n    Symbol.shell = function (group, value) {\n        var symbol = new Symbol(value);\n        symbol.group = group;\n        symbol.symbols = {};\n        symbol.length = 0;\n        return symbol;\n    };\n    //sqrt(x) -> x^(1/2)\n    Symbol.unwrapSQRT = function (symbol, all) {\n        var p = symbol.power;\n        if (symbol.fname === SQRT && (symbol.isLinear() || all)) {\n            var t = symbol.args[0].clone();\n            t.power = t.power.multiply(new Frac(1 / 2));\n            t.multiplier = t.multiplier.multiply(symbol.multiplier);\n            symbol = t;\n            if (all)\n                symbol.power = p.multiply(new Frac(1 / 2));\n        }\n\n        return symbol;\n    };\n    Symbol.hyp = function (a, b) {\n        a = a || new Symbol(0);\n        b = b || new Symbol(0);\n        return _.sqrt(_.add(_.pow(a.clone(), new Symbol(2)), _.pow(b.clone(), new Symbol(2))));\n    };\n    //converts to polar form array\n    Symbol.toPolarFormArray = function (symbol) {\n        var re, im, r, theta;\n        re = symbol.realpart();\n        im = symbol.imagpart();\n        r = Symbol.hyp(re, im);\n        theta = re.equals(0) ? _.parse('pi/2') : _.trig.atan(_.divide(im, re));\n        return [r, theta];\n    };\n    //removes parentheses\n    Symbol.unwrapPARENS = function (symbol) {\n        if (symbol.fname === '') {\n            var r = symbol.args[0];\n            r.power = r.power.multiply(symbol.power);\n            r.multiplier = r.multiplier.multiply(symbol.multiplier);\n            if (symbol.fname === '')\n                return Symbol.unwrapPARENS(r);\n            return r;\n        }\n        return symbol;\n    };\n    //quickly creates a Symbol\n    Symbol.create = function (value, power) {\n        power = power === undefined ? 1 : power;\n        return _.parse('(' + value + ')^(' + power + ')');\n    };\n    Symbol.prototype = {\n        isSimple: function () {\n            return this.power.equals(1) && this.multiplier.equals(1);\n        },\n        //returns a clone.\n        powSimp: function () {\n            if (this.group === CB) {\n                var powers = [],\n                        sign = this.multiplier.sign();\n                this.each(function (x) {\n                    var p = x.power;\n                    //why waste time if I can't do anything anyway\n                    if (isSymbol(p) || p.equals(1))\n                        return this.clone();\n                    powers.push(p);\n                });\n                var min = new Frac(arrayMin(powers));\n\n                //handle the coefficient\n                //handle the multiplier\n                var sign = this.multiplier.sign(),\n                        m = this.multiplier.clone().abs(),\n                        mfactors = Math2.ifactor(m);\n                //if we have a multiplier of 6750 and a min of 2 then the factors are 5^3*5^3*2\n                //we can then reduce it to 2*3*5*(15)^2 \n                var out_ = new Frac(1);\n                var in_ = new Frac(1);\n\n                for (var x in mfactors) {\n                    var n = new Frac(mfactors[x]);\n                    if (!n.lessThan(min)) {\n                        n = n.divide(min).subtract(new Frac(1));\n                        in_ = in_.multiply(new Frac(x)); //move the factor inside the bracket\n                    }\n\n                    out_ = out_.multiply(_.parse(inBrackets(x) + '^' + inBrackets(n)).multiplier);\n                }\n                var t = new Symbol(in_);\n                this.each(function (x) {\n                    x = x.clone();\n                    x.power = x.power.divide(min);\n                    t = _.multiply(t, x);\n                });\n\n                var xt = _.symfunction(PARENTHESIS, [t]);\n                xt.power = min;\n                xt.multiplier = sign < 0 ? out_.negate() : out_;\n\n                return xt;\n            }\n            return this.clone();\n        },\n        /**\n         * Checks to see if two functions are of equal value\n         * @param {Symbol} symbol\n         */\n        equals: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.value === symbol.value && this.power.equals(symbol.power)\n                    && this.multiplier.equals(symbol.multiplier)\n                    && this.group === symbol.group;\n        },\n        abs: function() {\n            var e = this.clone();\n            e.multiplier.abs();\n            return e;\n        },\n        // Greater than\n        gt: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\n        },\n        // Greater than\n        gte: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.equals(symbol) ||\n                    this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\n        },\n        // Less than\n        lt: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\n        },\n        // Less than\n        lte: function (symbol) {\n            if (!isSymbol(symbol))\n                symbol = new Symbol(symbol);\n            return this.equals(symbol) ||\n                    this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\n        },\n        /**\n         * Because nerdamer doesn't group symbols by polynomials but \n         * rather a custom grouping method, this has to be\n         * reinserted in order to make use of most algorithms. This function\n         * checks if the symbol meets the criteria of a polynomial.\n         * @param {bool} multivariate\n         * @returns {boolean}\n         */\n        isPoly: function (multivariate) {\n            var g = this.group,\n                    p = this.power;\n            //the power must be a integer so fail if it's not\n            if (!isInt(p) || p < 0)\n                return false;\n            //constants and first orders\n            if (g === N || g === S || this.isConstant(true))\n                return true;\n            var vars = variables(this);\n            if (g === CB && vars.length === 1) {\n                //the variable is assumed the only one that was found\n                var v = vars[0];\n                //if no variable then guess what!?!? We're done!!! We have a polynomial.\n                if (!v)\n                    return true;\n                for (var x in this.symbols) {\n                    var sym = this.symbols[x];\n                    //sqrt(x)\n                    if (sym.group === FN && !sym.args[0].isConstant())\n                        return false;\n                    if (!sym.contains(v) && !sym.isConstant(true))\n                        return false;\n                }\n                return true;\n            }\n            //PL groups. These only fail if a power is not an int\n            //this should handle cases such as x^2*t\n            if (this.isComposite() || g === CB && multivariate) {\n                //fail if we're not checking for multivariate polynomials\n                if (!multivariate && vars.length > 1)\n                    return false;\n                //loop though the symbols and check if they qualify\n                for (var x in this.symbols) {\n                    //we've already the symbols if we're not checking for multivariates at this point\n                    //so we check the sub-symbols\n                    if (!this.symbols[x].isPoly(multivariate))\n                        return false;\n                }\n                return true;\n            }\n            else\n                return false;\n\n            /*\n             //all tests must have passed so we must be dealing with a polynomial\n             return true;\n             */\n        },\n        //removes the requested variable from the symbol and returns the remainder\n        stripVar: function (x, exclude_x) {\n            var retval;\n            if ((this.group === PL || this.group === S) && this.value === x)\n                retval = new Symbol(exclude_x ? 0 : this.multiplier);\n            else if (this.group === CB && this.isLinear()) {\n                retval = new Symbol(1);\n                this.each(function (s) {\n                    if (!s.contains(x, true))\n                        retval = _.multiply(retval, s.clone());\n                });\n                retval.multiplier = retval.multiplier.multiply(this.multiplier);\n            }\n            else if (this.group === CP && !this.isLinear()) {\n                retval = new Symbol(this.multiplier);\n            }\n            else if (this.group === CP && this.isLinear()) {\n                retval = new Symbol(0);\n                this.each(function (s) {\n                    if (!s.contains(x)) {\n                        var t = s.clone();\n                        t.multiplier = t.multiplier.multiply(this.multiplier);\n                        retval = _.add(retval, t);\n                    }\n                });\n                //BIG TODO!!! It doesn't make much sense\n                if (retval.equals(0))\n                    retval = new Symbol(this.multiplier);\n            }\n            else if (this.group === EX && this.power.contains(x, true)) {\n                retval = new Symbol(this.multiplier);\n            }\n            else if (this.group === FN && this.contains(x)) {\n                retval = new Symbol(this.multiplier);\n            }\n            else\n                //wth? This should technically be the multiplier. \n                //Unfortunately this method wasn't very well thought out :`(.   \n                //should be: retval = new Symbol(this.multiplier);\n                //use: ((1+x^2)*sqrt(-1+x^2))^(-1) for correction.\n                //this will break a bunch of unit tests so be ready to for the long haul\n                retval = this.clone();\n\n\n            return retval;\n        },\n        //returns symbol in array form with x as base e.g. a*x^2+b*x+c = [c, b, a]. \n        toArray: function (v, arr) {\n            arr = arr || {\n                arr: [],\n                add: function (x, idx) {\n                    var e = this.arr[idx];\n                    this.arr[idx] = e ? _.add(e, x) : x;\n                }\n            };\n            var g = this.group;\n\n            if (g === S && this.contains(v)) {\n                arr.add(new Symbol(this.multiplier), this.power);\n            }\n            else if (g === CB) {\n                var a = this.stripVar(v),\n                        x = _.divide(this.clone(), a.clone());\n                var p = x.isConstant() ? 0 : x.power;\n                arr.add(a, p);\n            }\n            else if (g === PL && this.value === v) {\n                this.each(function (x, p) {\n                    arr.add(x.stripVar(v), p);\n                });\n            }\n            else if (g === CP) {\n                //the logic: they'll be broken into symbols so e.g. (x^2+x)+1 or (a*x^2+b*x+c)\n                //each case is handled above\n                this.each(function (x) {\n                    x.toArray(v, arr);\n                });\n            }\n            else if (this.contains(v)) {\n                throw new NerdamerTypeError('Cannot convert to array! Exiting');\n            }\n            else {\n                arr.add(this.clone(), 0); //it's just a constant wrt to v\n            }\n            //fill the holes\n            arr = arr.arr; //keep only the array since we don't need the object anymore\n            for (var i = 0; i < arr.length; i++)\n                if (!arr[i])\n                    arr[i] = new Symbol(0);\n            return arr;\n        },\n        //checks to see if a symbol contans a function\n        hasFunc: function (v) {\n            var fn_group = this.group === FN || this.group === EX;\n            if (fn_group && !v || fn_group && this.contains(v))\n                return true;\n            if (this.symbols) {\n                for (var x in this.symbols) {\n                    if (this.symbols[x].hasFunc(v))\n                        return true;\n                }\n            }\n            return false;\n        },\n        sub: function (a, b) {\n            a = !isSymbol(a) ? _.parse(a) : a.clone();\n            b = !isSymbol(b) ? _.parse(b) : b.clone();\n            if (a.group === N || a.group === P)\n                err('Cannot substitute a number. Must be a variable');\n            var same_pow = false,\n                    a_is_unit_multiplier = a.multiplier.equals(1),\n                    m = this.multiplier.clone(),\n                    retval;\n            /* \n             * In order to make the substitution the bases have to first match take\n             * (x+1)^x -> (x+1)=y || x^2 -> x=y^6\n             * In both cases the first condition is that the bases match so we begin there\n             * Either both are PL or both are not PL but we cannot have PL and a non-PL group match\n             */\n            if (this.value === a.value && (this.group !== PL && a.group !== PL || this.group === PL && a.group === PL)) {\n                //we cleared the first hurdle but a subsitution may not be possible just yet\n                if (a_is_unit_multiplier || a.multiplier.equals(this.multiplier)) {\n                    if (a.isLinear()) {\n                        retval = b;\n                    }\n                    else if (a.power.equals(this.power)) {\n                        retval = b;\n                        same_pow = true;\n                    }\n                    if (a.multiplier.equals(this.multiplier))\n                        m = new Frac(1);\n                }\n            }\n            //the next thing is to handle CB\n            else if (this.group === CB || this.previousGroup === CB) {\n                retval = new Symbol(1);\n                this.each(function (x) {\n                    var subbed = _.parse(x.sub(a, b)); //parse it again for safety\n                    retval = _.multiply(retval, subbed);\n                    \n                });\n            }\n            else if (this.isComposite()) {\n                if (a.isComposite() && this.isComposite() && this.isLinear() && a.isLinear()) {\n                    var find = function (stack, needle) {\n                        for (var x in stack.symbols) {\n                            var sym = stack.symbols[x];\n                            //if the symbol equals the needle or it's within the sub-symbols we're done\n                            if (sym.isComposite() && find(sym, needle) || sym.equals(needle))\n                                return true;\n                        }\n                        return false;\n                    };\n                    //go fish\n                    for (var x in a.symbols) {\n                        if (!find(this, a.symbols[x]))\n                            return this.clone();\n                    }\n                    retval = _.add(_.subtract(this.clone(), a), b);\n                }\n                else {\n                    retval = new Symbol(0);\n                    this.each(function (x) {\n                        retval = _.add(retval, x.sub(a, b));\n                    });\n                }\n            }\n            else if (this.group === EX) {\n                // the parsed value could be a function so parse and sub\n                retval = _.parse(this.value).sub(a, b);\n            }\n            else if (this.group === FN) {\n                var nargs = [];\n                for (var i = 0; i < this.args.length; i++) {\n                    var arg = this.args[i];\n                    if (!isSymbol(arg))\n                        arg = _.parse(arg);\n                    nargs.push(arg.sub(a, b));\n                }\n                retval = _.symfunction(this.fname, nargs);\n            }\n            //if we did manage a substitution\n            if (retval) {\n                if (!same_pow) {\n                    //substitute the power\n                    var p = this.group === EX ? this.power.sub(a, b) : _.parse(this.power);\n                    //now raise the symbol to that power\n                    retval = _.pow(retval, p);\n                }\n\n                //transfer the multiplier\n                retval.multiplier = retval.multiplier.multiply(m);\n                //done\n                return retval;\n            }\n            //if all else fails\n            return this.clone();\n        },\n        isMonomial: function () {\n            if (this.group === S)\n                return true;\n            if (this.group === CB) {\n                for (var x in this.symbols)\n                    if (this.symbols[x].group !== S)\n                        return false;\n            }\n            else\n                return false;\n            return true;\n        },\n        isPi: function () {\n            return this.group === S && this.value === 'pi';\n        },\n        sign: function () {\n            return this.multiplier.sign();\n        },\n        isE: function () {\n            return this.value === 'e';\n        },\n        isSQRT: function () {\n            return this.fname === SQRT;\n        },\n        isConstant: function (check_all, check_symbols) {\n            if(check_symbols && this.group === CB) {\n                for(var x in this.symbols) {\n                    if(this.symbols[x].isConstant(true))\n                        return true;\n                }\n            }\n            \n            if (check_all === 'all' && (this.isPi() || this.isE()))\n                return true;\n            \n            if (check_all && this.group === FN) {\n                for (var i = 0; i < this.args.length; i++) {\n                    if (!this.args[i].isConstant(check_all))\n                        return false;\n                }\n                return true;\n            }\n            \n            if(check_all)\n                return isNumericSymbol(this);\n            return this.value === CONST_HASH;\n        },\n        //the symbols is imaginary if \n        //1. n*i\n        //2. a+b*i\n        //3. a*i\n        isImaginary: function () {\n            if (this.imaginary)\n                return true;\n            else if (this.symbols) {\n                for (var x in this.symbols)\n                    if (this.symbols[x].isImaginary())\n                        return true;\n            }\n            return false;\n        },\n        /**\n         * Returns the real part of a symbol\n         * @returns {Symbol}\n         */\n        realpart: function () {\n            if (this.isConstant()) {\n                return this.clone();\n            }\n            else if (this.imaginary)\n                return new Symbol(0);\n            else if (this.isComposite()) {\n                var retval = new Symbol(0);\n                this.each(function (x) {\n                    retval = _.add(retval, x.realpart());\n                });\n                return retval;\n            }\n            else if (this.isImaginary())\n                return new Symbol(0);\n            return this.clone();\n        },\n        /*\n         * Return imaginary part of a symbol\n         * @returns {Symbol}\n         */\n        imagpart: function () {\n            if (this.group === S && this.isImaginary())\n                return new Symbol(this.multiplier);\n            if (this.isComposite()) {\n                var retval = new Symbol(0);\n                this.each(function (x) {\n                    retval = _.add(retval, x.imagpart());\n                });\n                return retval;\n            }\n            if (this.group === CB)\n                return this.stripVar(Settings.IMAGINARY);\n            return new Symbol(0);\n        },\n        isInteger: function () {\n            return this.isConstant() && this.multiplier.isInteger();\n        },\n        isLinear: function (wrt) {\n            if (wrt) {\n                if (this.isConstant())\n                    return true;\n                if (this.group === S) {\n                    if (this.value === wrt)\n                        return this.power.equals(1);\n                    else\n                        return true;\n                }\n\n                if (this.isComposite() && this.power.equals(1)) {\n                    for (var x in this.symbols) {\n                        if (!this.symbols[x].isLinear(wrt))\n                            return false;\n                    }\n                    return true;\n                }\n\n                if (this.group === CB && this.symbols[wrt])\n                    return this.symbols[wrt].isLinear(wrt);\n                return false;\n            }\n            else\n                return this.power.equals(1);\n        },\n        /**\n         * Checks to see if a symbol has a function by a specified name or within a specified list\n         * @param {String|String[]} names\n         * @returns {Boolean}\n         */\n        containsFunction: function (names) {\n            if (typeof names === 'string')\n                names = [names];\n            if (this.group === FN && names.indexOf(this.fname) !== -1)\n                return true;\n            if (this.symbols) {\n                for (var x in this.symbols) {\n                    if (this.symbols[x].containsFunction(names))\n                        return true;\n                }\n            }\n            return false;\n        },\n        multiplyPower: function (p2) {\n            //leave out 1\n            if (this.group === N && this.multiplier.equals(1))\n                return this;\n\n            var p1 = this.power;\n\n            if (this.group !== EX && p2.group === N) {\n                var p = p2.multiplier;\n                if (this.group === N && !p.isInteger()) {\n                    this.convert(P);\n                }\n\n                this.power = p1.equals(1) ? p.clone() : p1.multiply(p);\n\n                if (this.group === P && isInt(this.power)) {\n                    //bring it back to an N\n                    this.value = Math.pow(this.value, this.power);\n                    this.toLinear();\n                    this.convert(N);\n                }\n            }\n            else {\n                if (this.group !== EX) {\n                    p1 = new Symbol(p1);\n                    this.convert(EX);\n                }\n                this.power = _.multiply(p1, p2);\n            }\n\n            return this;\n        },\n        setPower: function (p, retainSign) {\n            //leave out 1\n            if (this.group === N && this.multiplier.equals(1))\n                return this;\n            if (this.group === EX && !isSymbol(p)) {\n                this.group = this.previousGroup;\n                delete this.previousGroup;\n                if (this.group === N) {\n                    this.multiplier = new Frac(this.value);\n                    this.value = CONST_HASH;\n                }\n                else\n                    this.power = p;\n            }\n            else {\n                var isSymbolic = false;\n                if (isSymbol(p)) {\n                    if (p.group === N) {\n                        //p should be the multiplier instead\n                        p = p.multiplier;\n\n                    }\n                    else {\n                        isSymbolic = true;\n                    }\n                }\n                var group = isSymbolic ? EX : P;\n                this.power = p;\n                if (this.group === N && group)\n                    this.convert(group, retainSign);\n            }\n\n            return this;\n        },\n        /**\n         * Checks to see if symbol is located in the denominator\n         * @returns {boolean}\n         */\n        isInverse: function () {\n            if (this.group === EX)\n                return (this.power.multiplier.lessThan(0));\n            return this.power < 0;\n        },\n        /**\n         * Make a duplicate of a symbol by copying a predefined list of items. \n         * The name 'copy' would probably be a more appropriate name.\n         * to a new symbol\n         * @param {Symbol} c \n         * @returns {Symbol}\n         */\n        clone: function (c) {\n            var clone = c || new Symbol(0),\n                    //list of properties excluding power as this may be a symbol and would also need to be a clone.\n                    properties = [\n                        'value', 'group', 'length', 'previousGroup', 'imaginary', 'fname', 'args', 'isInfinity', 'scientific'],\n                    l = properties.length, i;\n            if (this.symbols) {\n                clone.symbols = {};\n                for (var x in this.symbols) {\n                    clone.symbols[x] = this.symbols[x].clone();\n                }\n            }\n\n            for (i = 0; i < l; i++) {\n                if (this[properties[i]] !== undefined) {\n                    clone[properties[i]] = this[properties[i]];\n                }\n            }\n\n            clone.power = this.power.clone();\n            clone.multiplier = this.multiplier.clone();\n            //add back the flag to track if this symbol is a conversion symbol\n            if (this.isConversion)\n                clone.isConversion = this.isConversion;\n\n            if (this.isUnit)\n                clone.isUnit = this.isUnit;\n\n            return clone;\n        },\n        /**\n         * Converts a symbol multiplier to one.\n         * @param {Boolean} keepSign Keep the multiplier as negative if the multiplier is negative and keepSign is true\n         * @returns {Symbol}\n         */\n        toUnitMultiplier: function (keepSign) {\n            this.multiplier.num = new bigInt(this.multiplier.num.isNegative() && keepSign ? -1 : 1);\n            this.multiplier.den = new bigInt(1);\n            return this;\n        },\n        /**\n         * Converts a Symbol's power to one.\n         * @returns {Symbol}\n         */\n        toLinear: function () {\n            this.setPower(new Frac(1));\n            return this;\n        },\n        /**\n         * Iterates over all the sub-symbols. If no sub-symbols exist then it's called on itself\n         * @param {Function} fn\n         * @@param {Boolean} deep If true it will itterate over the sub-symbols their symbols as well \n         */\n        each: function (fn, deep) {\n            if (!this.symbols) {\n                fn.call(this, this, this.value);\n            }\n            else {\n                for (var x in this.symbols) {\n                    var sym = this.symbols[x];\n                    if (sym.group === PL && deep) {\n                        for (var y in sym.symbols) {\n                            fn.call(x, sym.symbols[y], y);\n                        }\n                    }\n                    else\n                        fn.call(this, sym, x);\n                }\n            }\n        },\n        /**\n         * A numeric value to be returned for Javascript. It will try to \n         * return a number as far a possible but in case of a pure symbolic\n         * symbol it will just return its text representation\n         * @returns {String|Number}\n         */\n        valueOf: function () {\n            if (this.group === N)\n                return this.multiplier.valueOf();\n            else if (this.power === 0) {\n                return 1;\n            }\n            else if (this.multiplier === 0) {\n                return 0;\n            }\n            else {\n                return text(this, 'decimals');\n            }\n        },\n        /**\n         * Checks to see if a symbols has a particular variable within it.\n         * Pass in true as second argument to include the power of exponentials\n         * which aren't check by default.\n         * @example var s = _.parse('x+y+z'); s.contains('y');\n         * //returns true\n         * @param {any} variable \n         * @param {boolean} all \n         * @returns {boolean}\n         */\n        contains: function (variable, all) {\n            //contains expects a string\n            variable = String(variable);\n            var g = this.group;\n            if (this.value === variable)\n                return true;\n            if (this.symbols) {\n                for (var x in this.symbols) {\n                    if (this.symbols[x].contains(variable, all))\n                        return true;\n                }\n            }\n            if (g === FN || this.previousGroup === FN) {\n                for (var i = 0; i < this.args.length; i++) {\n                    if (this.args[i].contains(variable, all))\n                        return true;\n                }\n            }\n\n            if (g === EX) {\n                //exit only if it does\n                if (all && this.power.contains(variable, all)) {\n                    return true;\n                }\n                if (this.value === variable)\n                    return true;\n\n            }\n\n            return this.value === variable;\n        },\n        /**\n         * Negates a symbols\n         * @returns {boolean}\n         */\n        negate: function () {\n            this.multiplier.negate();\n            if (this.group === CP || this.group === PL)\n                this.distributeMultiplier();\n            return this;\n        },\n        /**\n         * Inverts a symbol\n         * @param {boolean} power_only\n         * @param {boolean} all\n         * @returns {boolean}\n         */\n        invert: function (power_only, all) {\n            //invert the multiplier\n            if (!power_only)\n                this.multiplier = this.multiplier.invert();\n            //invert the rest\n            if (isSymbol(this.power)) {\n                this.power.negate();\n            }\n            else if (this.group === CB && all) {\n                this.each(function (x) {\n                    return x.invert();\n                });\n            }\n            else {\n                if (this.power && this.group !== N)\n                    this.power.negate();\n            }\n            return this;\n        },\n        /**\n         * Symbols of group CP or PL may have the multiplier being carried by \n         * the top level symbol at any given time e.g. 2*(x+y+z). This is \n         * convenient in many cases, however in some cases the multiplier needs\n         * to be carried individually e.g. 2*x+2*y+2*z.\n         * This method distributes the multiplier over the entire symbol\n         * @param {boolean} all\n         * @returns {Symbol}\n         */\n        distributeMultiplier: function (all) {\n            var is_one = all ? this.power.absEquals(1) : this.power.equals(1);\n            if (this.symbols && is_one && this.group !== CB && !this.multiplier.equals(1)) {\n                for (var x in this.symbols) {\n                    var s = this.symbols[x];\n                    s.multiplier = s.multiplier.multiply(this.multiplier);\n                    s.distributeMultiplier();\n                }\n                this.toUnitMultiplier();\n            }\n\n            return this;\n        },\n        /**\n         * This method expands the exponent over the entire symbol just like\n         * distributeMultiplier\n         * @returns {Symbol}\n         */\n        distributeExponent: function () {\n            if (!this.power.equals(1)) {\n                var p = this.power;\n                for (var x in this.symbols) {\n                    var s = this.symbols[x];\n                    if (s.group === EX) {\n                        s.power = _.multiply(s.power, new Symbol(p));\n                    }\n                    else {\n                        this.symbols[x].power = this.symbols[x].power.multiply(p);\n                    }\n                }\n                this.toLinear();\n            }\n            return this;\n        },\n        /**\n         * This method will attempt to up-convert or down-convert one symbol\n         * from one group to another. Not all symbols are convertible from one \n         * group to another however. In that case the symbol will remain \n         * unchanged.\n         * @param {int} group\n         * @param {string} imaginary \n         */\n        convert: function (group, imaginary) {\n            if (group > FN) {\n                //make a clone of this symbol;\n                var cp = this.clone();\n\n                //attach a symbols object and upgrade the group\n                this.symbols = {};\n\n                if (group === CB) {\n                    //symbol of group CB hold symbols bound together through multiplication\n                    //because of commutativity this multiplier can technically be anywhere within the group\n                    //to keep track of it however it's easier to always have the top level carry it\n                    cp.toUnitMultiplier();\n                }\n                else {\n                    //reset the symbol\n                    this.toUnitMultiplier();\n                }\n\n                if (this.group === FN) {\n                    cp.args = this.args;\n                    delete this.args;\n                    delete this.fname;\n                }\n\n                //the symbol may originate from the symbol i but this property no longer holds true\n                //after copying\n                if (this.isImgSymbol)\n                    delete this.isImgSymbol;\n\n                this.toLinear();\n                //attach a clone of this symbol to the symbols object using its proper key\n                this.symbols[cp.keyForGroup(group)] = cp;\n                this.group = group;\n                //objects by default don't have a length property. However, in order to keep track of the number\n                //of sub-symbols we have to impliment our own.\n                this.length = 1;\n            }\n            else if (group === EX) {\n                //1^x is just one so check and make sure\n                if (!(this.group === N && this.multiplier.equals(1))) {\n                    if (this.group !== EX)\n                        this.previousGroup = this.group;\n                    if (this.group === N) {\n                        this.value = this.multiplier.num.toString();\n                        this.toUnitMultiplier();\n                    }\n                    //update the hash to reflect the accurate hash\n                    else\n                        this.value = text(this, 'hash');\n\n                    this.group = EX;\n                }\n            }\n            else if (group === N) {\n                var m = this.multiplier.toDecimal();\n                if (this.symbols)\n                    this.symbols = undefined;\n                new Symbol(this.group === P ? m * Math.pow(this.value, this.power) : m).clone(this);\n            }\n            else if (group === P && this.group === N) {\n                this.value = imaginary ? this.multiplier.num.toString() : Math.abs(this.multiplier.num.toString());\n                this.toUnitMultiplier(!imaginary);\n                this.group = P;\n            }\n            return this;\n        },\n        /**\n         * This method is one of the principal methods to make it all possible.\n         * It performs cleanup and prep operations whenever a symbols is \n         * inserted. If the symbols results in a 1 in a CB (multiplication) \n         * group for instance it will remove the redundant symbol. Similarly\n         * in a symbol of group PL or CP (symbols glued by multiplication) it\n         * will remove any dangling zeroes from the symbol. It will also \n         * up-convert or down-convert a symbol if it detects that it's \n         * incorrectly grouped. It should be noted that this method is not\n         * called directly but rather by the 'attach' method for addition groups\n         * and the 'combine' method for multiplication groups.\n         * @param {Symbol} symbol\n         * @param {String} action\n         */\n        insert: function (symbol, action) {\n            //this check can be removed but saves a lot of aggravation when trying to hunt down\n            //a bug. If left, you will instantly know that the error can only be between 2 symbols.\n            if (!isSymbol(symbol))\n                err('Object ' + symbol + ' is not of type Symbol!');\n            if (this.symbols) {\n                var group = this.group;\n                if (group > FN) {\n                    var key = symbol.keyForGroup(group);\n                    var existing = key in this.symbols ? this.symbols[key] : false; //check if there's already a symbol there\n                    if (action === 'add') {\n                        var hash = key;\n                        if (existing) {\n                            //add them together using the parser\n                            this.symbols[hash] = _.add(existing, symbol);\n                            //if the addition resulted in a zero multiplier remove it\n                            if (this.symbols[hash].multiplier.equals(0)) {\n                                delete this.symbols[hash];\n                                this.length--;\n\n                                if (this.length === 0) {\n                                    this.convert(N);\n                                    this.multiplier = new Frac(0);\n                                }\n                            }\n                        }\n                        else {\n                            this.symbols[key] = symbol;\n                            this.length++;\n                        }\n                    }\n                    else {\n                        //check if this is of group P and unwrap before inserting\n                        if (symbol.group === P && isInt(symbol.power)) {\n                            symbol.convert(N);\n                        }\n\n                        //transfer the multiplier to the upper symbol but only if the symbol numeric\n                        if (symbol.group !== EX) {\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier);\n                            symbol.toUnitMultiplier();\n                        }\n                        else {\n                            symbol.parens = symbol.multiplier.lessThan(0);\n                            this.multiplier = this.multiplier.multiply(symbol.multiplier.clone().abs());\n                            symbol.toUnitMultiplier(true);\n                        }\n\n                        if (existing) {\n                            //remove because the symbol may have changed\n                            symbol = _.multiply(remove(this.symbols, key), symbol);\n                            if (symbol.isConstant()) {\n                                this.multiplier = this.multiplier.multiply(symbol.multiplier);\n                                symbol = new Symbol(1); //the dirty work gets done down the line when it detects 1\n                            }\n\n                            this.length--;\n                            //clean up\n                        }\n\n                        //don't insert the symbol if it's 1\n                        if (!symbol.isOne(true)) {\n                            this.symbols[key] = symbol;\n                            this.length++;\n                        }\n                        else if (symbol.multiplier.lessThan(0)) {\n                            this.negate(); //put back the sign\n                        }\n                    }\n\n                    //clean up\n                    if (this.length === 0)\n                        this.convert(N);\n                    //update the hash\n                    if (this.group === CP || this.group === CB) {\n                        this.updateHash();\n                    }\n                }\n            }\n\n            return this;\n        },\n        //the insert method for addition\n        attach: function (symbol) {\n            if (isArray(symbol)) {\n                for (var i = 0; i < symbol.length; i++)\n                    this.insert(symbol[i], 'add');\n                return this;\n            }\n            return this.insert(symbol, 'add');\n        },\n        //the insert method for multiplication\n        combine: function (symbol) {\n            if (isArray(symbol)) {\n                for (var i = 0; i < symbol.length; i++)\n                    this.insert(symbol[i], 'multiply');\n                return this;\n            }\n            return this.insert(symbol, 'multiply');\n        },\n        /**\n         * This method should be called after any major \"surgery\" on a symbol.\n         * It updates the hash of the symbol for example if the fname of a \n         * function has changed it will update the hash of the symbol.\n         */\n        updateHash: function () {\n            if (this.group === N)\n                return;\n\n            if (this.group === FN) {\n                var contents = '',\n                        args = this.args,\n                        is_parens = this.fname === PARENTHESIS;\n                for (var i = 0; i < args.length; i++)\n                    contents += (i === 0 ? '' : ',') + text(args[i]);\n                var fn_name = is_parens ? '' : this.fname;\n                this.value = fn_name + (is_parens ? contents : inBrackets(contents));\n            }\n            else if (!(this.group === S || this.group === PL)) {\n                this.value = text(this, 'hash');\n            }\n        },\n        /**\n         * this function defines how every group in stored within a group of \n         * higher order think of it as the switchboard for the library. It \n         * defines the hashes for symbols. \n         * @param {int} group\n         */\n        keyForGroup: function (group) {\n            var g = this.group;\n            var key;\n\n            if (g === N) {\n                key = this.value;\n            }\n            else if (g === S || g === P) {\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = this.value;\n            }\n            else if (g === FN) {\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = text(this, 'hash');\n            }\n            else if (g === PL) {\n                //if the order is reversed then we'll assume multiplication\n                //TODO: possible future dilemma\n                if (group === CB)\n                    key = text(this, 'hash');\n                else if (group === CP) {\n                    if (this.power.equals(1))\n                        key = this.value;\n                    else\n                        key = inBrackets(text(this, 'hash')) + Settings.POWER_OPERATOR + this.power.toDecimal();\n                }\n                else if (group === PL)\n                    key = this.power.toString();\n                else\n                    key = this.value;\n                return key;\n            }\n            else if (g === CP) {\n                if (group === CP) {\n                    key = text(this, 'hash');\n                }\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = this.value;\n            }\n            else if (g === CB) {\n                if (group === PL)\n                    key = this.power.toDecimal();\n                else\n                    key = text(this, 'hash');\n            }\n            else if (g === EX) {\n                if (group === PL)\n                    key = text(this.power);\n                else\n                    key = text(this, 'hash');\n            }\n\n            return key;\n        },\n        /** \n         * Symbols are typically stored in an object which works fine for most\n         * cases but presents a problem when the order of the symbols makes\n         * a difference. This function simply collects all the symbols and \n         * returns them as an array. If a function is supplied then that \n         * function is called on every symbol contained within the object.\n         * @param {Function} fn\n         * @param {Object} opt\n         * @param {Function} sort_fn\n         * @@param {Boolean} expand_symbol \n         * @returns {Array}\n         */\n        collectSymbols: function (fn, opt, sort_fn, expand_symbol) {\n            var collected = [];\n            if (!this.symbols)\n                collected.push(this);\n            else {\n                for (var x in this.symbols) {\n                    var symbol = this.symbols[x];\n                    if (expand_symbol && (symbol.group === PL || symbol.group === CP)) {\n                        collected = collected.concat(symbol.collectSymbols());\n                    }\n                    else\n                        collected.push(fn ? fn(symbol, opt) : symbol);\n                }\n            }\n            if (sort_fn === null)\n                sort_fn = undefined; //WTF Firefox? Seriously?\n\n            return collected.sort(sort_fn);//sort hopefully gives us some sort of consistency\n        },\n        /**\n         * Returns the latex representation of the symbol\n         * @param {String} option\n         * @returns {String}\n         */\n        latex: function (option) {\n            return LaTeX.latex(this, option);\n        },\n        /**\n         * Returns the text representation of a symbol\n         * @param {String} option\n         * @returns {String}\n         */\n        text: function (option) {\n            return text(this, option);\n        },\n        /**\n         * Checks if the function evaluates to 1. e.g. x^0 or 1 :)\n         * @@param {bool} abs Compares the absolute value \n         */\n        isOne: function (abs) {\n            var f = abs ? 'absEquals' : 'equals';\n            if (this.group === N)\n                return this.multiplier[f](1);\n            else\n                return this.power.equals(0);\n        },\n        isComposite: function () {\n            var g = this.group,\n                    pg = this.previousGroup;\n            return g === CP || g === PL || pg === PL || pg === CP;\n        },\n        isCombination: function () {\n            var g = this.group,\n                    pg = this.previousGroup;\n            return g === CB || pg === CB;\n        },\n        lessThan: function (n) {\n            return this.multiplier.lessThan(n);\n        },\n        greaterThan: function (n) {\n            return this.multiplier.greaterThan(n);\n        },\n        /**\n         * Get's the denominator of the symbol if the symbol is of class CB (multiplication)\n         * with other classes the symbol is either the denominator or not. \n         * Take x^-1+x^-2. If the symbol was to be mixed such as x+x^-2 then the symbol doesn't have have an exclusive\n         * denominator and has to be found by looking at the actual symbols themselves.\n         */\n        getDenom: function () {\n            var retval, symbol;\n            symbol = this.clone();\n            //e.g. 1/(x*(x+1))\n            if (this.group === CB && this.power.lessThan(0))\n                symbol = _.expand(symbol);\n\n            //if the symbol already is the denominator... DONE!!!\n            if (symbol.power.lessThan(0)) {\n                var d = _.parse(symbol.multiplier.den);\n                retval = symbol.toUnitMultiplier();\n                retval.power.negate();\n                retval = _.multiply(d, retval); //put back the coeff\n            }\n            else if (symbol.group === CB) {\n                retval = _.parse(symbol.multiplier.den);\n                for (var x in symbol.symbols)\n                    if (symbol.symbols[x].power < 0)\n                        retval = _.multiply(retval, symbol.symbols[x].clone().invert());\n            }\n            else\n                retval = _.parse(symbol.multiplier.den);\n            return retval;\n        },\n        getNum: function () {\n            var retval, symbol;\n            symbol = this.clone();\n            //e.g. 1/(x*(x+1))\n            if (symbol.group === CB && symbol.power.lessThan(0))\n                symbol = _.expand(symbol);\n            //if the symbol already is the denominator... DONE!!!\n            if (symbol.power.greaterThan(0) && symbol.group !== CB) {\n                retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\n            }\n            else if (symbol.group === CB) {\n                retval = _.parse(symbol.multiplier.num);\n                symbol.each(function (x) {\n                    if (x.power > 0 || x.group === EX && x.power.multiplier > 0) {\n                        retval = _.multiply(retval, x.clone());\n                    }\n                });\n            }\n            else {\n                retval = _.parse(symbol.multiplier.num);\n            }\n            return retval;\n        },\n        toString: function () {\n            return this.text();\n        }\n    };\n\n//Parser =======================================================================     \n    //Uses modified Shunting-yard algorithm. http://en.wikipedia.org/wiki/Shunting-yard_algorithm\n    function Parser() {\n        //Point to the local parser instead of the global one\n        var _ = this;\n        var bin = {};\n        var preprocessors = {names: [], actions: []};\n\n//Parser.classes ===============================================================\n        function Slice(upper, lower) {\n            this.start = upper;\n            this.end = lower;\n        }\n        ;\n        Slice.prototype.isConstant = function () {\n            return this.start.isConstant() && this.end.isConstant();\n        };\n        Slice.prototype.text = function () {\n            return text(this.start) + ':' + text(this.end);\n        };\n\n        /**\n         * Class used to collect arguments for functions\n         * @returns {Parser.Collection}\n         */\n        function Collection() {\n            this.elements = [];\n        }\n        Collection.prototype.append = function (e) {\n            this.elements.push(e);\n        };\n        Collection.prototype.getItems = function () {\n            return this.elements;\n        };\n        Collection.prototype.toString = function () {\n            return _.pretty_print(this.elements);\n        };\n        Collection.create = function (e) {\n            var collection = new Collection();\n            if (e)\n                collection.append(e);\n            return collection;\n        };\n\n        function Token(node, node_type, column) {\n            this.type = node_type;\n            this.value = node;\n            if (column !== undefined)\n                this.column = column + 1;\n            if (node_type === Token.OPERATOR) {\n                //copy everything over from the operator\n                var operator = operators[node];\n                for (var x in operator)\n                    this[x] = operator[x];\n\n            }\n            else if (node_type === Token.FUNCTION) {\n                this.precedence = Token.MAX_PRECEDENCE; //leave enough roon\n                this.leftAssoc = false;\n            }\n        }\n        Token.prototype.toString = function () {\n            return this.value;\n        };\n        Token.prototype.toString = function () {\n            if (this.is_prefix)\n                return '`' + this.value;\n            return this.value;\n        };\n        //some constants\n        Token.OPERATOR = 'OPERATOR';\n        Token.VARIABLE_OR_LITERAL = 'VARIABLE_OR_LITERAL';\n        Token.FUNCTION = 'FUNCTION';\n        Token.UNIT = 'UNIT';\n        Token.KEYWORD = 'KEYWORD';\n        Token.MAX_PRECEDENCE = 999;\n        //create link to classes\n        this.classes = {\n            Collection: Collection,\n            Slice: Slice,\n            Token: Token\n        };\n//Parser.modules ===============================================================\n        //object for functions which handle complex number\n        var complex = {\n            prec: undefined,\n            cos: function (r, i) {\n                var re, im;\n                re = _.parse(Math.cos(r) * Math.cosh(i));\n                im = _.parse(Math.sin(r) * Math.sinh(i));\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sin: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sin(r) * Math.cosh(i));\n                im = _.parse(Math.cos(r) * Math.sinh(i));\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n            },\n            tan: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sin(2 * r) / (Math.cos(2 * r) + Math.cosh(2 * i)));\n                im = _.parse(Math.sinh(2 * i) / (Math.cos(2 * r) + Math.cosh(2 * i)));\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sec: function (r, i) {\n                var t = this.removeDen(this.cos(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            csc: function (r, i) {\n                var t = this.removeDen(this.sin(r, i));\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            cot: function (r, i) {\n                var t = this.removeDen(this.tan(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            acos: function (r, i) {\n                var symbol, sq, a, b, c;\n                symbol = this.fromArray([r, i]);\n                sq = _.expand(_.pow(symbol.clone(), new Symbol(2))); //z*z\n                a = _.multiply(sqrt(_.subtract(new Symbol(1), sq)), Symbol.imaginary());\n                b = _.expand(_.add(symbol.clone(), a));\n                c = log(b);\n                return _.expand(_.multiply(Symbol.imaginary().negate(), c));\n            },\n            asin: function (r, i) {\n                return _.subtract(_.parse('pi/2'), this.acos(r, i));\n            },\n            atan: function (r, i) {\n                var a, b, c, symbol;\n                symbol = complex.fromArray([r, i]);\n                a = _.expand(_.multiply(Symbol.imaginary(), symbol.clone()));\n                b = log(_.expand(_.subtract(new Symbol(1), a.clone())));\n                c = log(_.expand(_.add(new Symbol(1), a.clone())));\n                return _.expand(_.multiply(_.divide(Symbol.imaginary(), new Symbol(2)), _.subtract(b, c)));\n            },\n            asec: function (r, i) {\n                var d = this.removeDen([r, i]);\n                d[1].negate();\n                return this.acos.apply(this, d);\n            },\n            acsc: function (r, i) {\n                var d = this.removeDen([r, i]);\n                d[1].negate();\n                return this.asin.apply(this, d);\n            },\n            acot: function (r, i) {\n                var d = this.removeDen([r, i]);\n                d[1].negate();\n                return this.atan.apply(this, d);\n            },\n            //Hyperbolic trig\n            cosh: function (r, i) {\n                var re, im;\n                re = _.parse(Math.cosh(r) * Math.cos(i));\n                im = _.parse(Math.sinh(r) * Math.sin(i));\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sinh: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sinh(r) * Math.cos(i));\n                im = _.parse(Math.cosh(r) * Math.sin(i));\n                return _.add(re, _.multiply(im, Symbol.imaginary()));\n            },\n            tanh: function (r, i) {\n                var re, im;\n                re = _.parse(Math.sinh(2 * r) / (Math.cos(2 * i) + Math.cosh(2 * r)));\n                im = _.parse(Math.sin(2 * i) / (Math.cos(2 * i) + Math.cosh(2 * r)));\n                return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n            },\n            sech: function (r, i) {\n                var t = this.removeDen(this.cosh(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            csch: function (r, i) {\n                var t = this.removeDen(this.sinh(r, i));\n                return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            coth: function (r, i) {\n                var t = this.removeDen(this.tanh(r, i));\n                return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\n            },\n            acosh: function (r, i) {\n                var a, b, z;\n                z = this.fromArray([r, i]);\n                a = sqrt(_.add(z.clone(), new Symbol(1)));\n                b = sqrt(_.subtract(z.clone(), new Symbol(1)));\n                return _.expand(log(_.add(z, _.expand(_.multiply(a, b)))));\n            },\n            asinh: function (r, i) {\n                var a, z;\n                z = this.fromArray([r, i]);\n                a = sqrt(_.add(new Symbol(1), _.expand(_.pow(z.clone(), new Symbol(2)))));\n                return _.expand(log(_.add(z, a)));\n            },\n            atanh: function (r, i) {\n                var a, b, z;\n                z = this.fromArray([r, i]);\n                a = log(_.add(z.clone(), new Symbol(1)));\n                b = log(_.subtract(new Symbol(1), z));\n                return _.expand(_.divide(_.subtract(a, b), new Symbol(2)));\n            },\n            asech: function (r, i) {\n                var t = this.removeDen([r, i]);\n                t[1].negate();\n                return this.acosh.apply(this, t);\n            },\n            acsch: function (r, i) {\n                var t = this.removeDen([r, i]);\n                t[1].negate();\n                return this.asinh.apply(this, t);\n            },\n            acoth: function (r, i) {\n                var t = this.removeDen([r, i]);\n                t[1].negate();\n                return this.atanh.apply(this, t);\n            },\n            sqrt: function (symbol) {\n                var re, im, h, a, d;\n                re = symbol.realpart();\n                im = symbol.imagpart();\n                h = Symbol.hyp(re, im);\n                a = _.add(re.clone(), h);\n                d = sqrt(_.multiply(new Symbol(2), a.clone()));\n                return _.add(_.divide(a.clone(), d.clone()), _.multiply(_.divide(im, d), Symbol.imaginary()));\n            },\n            log: function (r, i) {\n                var re, im;\n                re = log(Symbol.hyp(r, i));\n                im = _.parse(Math.atan2(i, r));\n                return _.add(re, _.multiply(Symbol.imaginary(), im));\n            },\n            erf(symbol, n) {\n                //Do nothing for now. Revisit this in the future.\n                return _.symfunction('erf', [symbol]);\n                \n                n = n || 30;\n\n                var f = function(R, I) {\n                    return block('PARSE2NUMBER', function() {\n                        var retval = new Symbol(0);\n                        for(var i=0; i<n; i++) {\n                            var a, b;\n                            a = _.parse(bigDec.exp(bigDec(i).toPower(2).neg().dividedBy(bigDec(n).pow(2).plus(bigDec(R).toPower(2).times(4)))));\n                            b = _.parse(format('2*({1})-e^(-(2*{0}*{1}*{2}))*(2*{1}*cosh({2}*{3})-{0}*{3}*sinh({3}*{2}))', Settings.IMAGINARY, R, I, i));\n                            retval = _.add(retval, _.multiply(a, b));\n                        }\n                        return _.multiply(retval, new Symbol(2));\n                    }, true);\n                };\n                var re, im, a, b, c, k;\n                re = symbol.realpart();\n                im = symbol.imagpart();\n                \n                k = _.parse(format('(e^(-{0}^2))/pi', re));\n                a = _.parse(format('(1-e^(-(2*{0}*{1}*{2})))/(2*{1})', Settings.IMAGINARY, re, im));\n                b = f(re.toString(), im.toString());\n\n                return _.add(_.parse(Math2.erf(re.toString())), _.multiply(k, _.add(a, b)));\n            },\n            removeDen: function (symbol) {\n                var den, r, i, re, im;\n                if (isArray(symbol)) {\n                    r = symbol[0];\n                    i = symbol[1];\n                }\n                else {\n                    r = symbol.realpart();\n                    i = symbol.imagpart();\n                }\n\n                den = Math.pow(r, 2) + Math.pow(i, 2);\n                re = _.parse(r / den);\n                im = _.parse(i / den);\n                return [re, im];\n            },\n            fromArray: function (arr) {\n                return _.add(arr[0], _.multiply(Symbol.imaginary(), arr[1]));\n            },\n            evaluate: function (symbol, f) {\n                var re, im, sign;\n\n                sign = symbol.power.sign();\n                //remove it from under the denominator\n                symbol.power = symbol.power.abs();\n                //expand\n                if (symbol.power.greaterThan(1))\n                    symbol = _.expand(symbol);\n                //remove the denominator\n                if (sign < 0) {\n                    var d = this.removeDen(symbol);\n                    re = d[0];\n                    im = d[1];\n                }\n                else {\n                    re = symbol.realpart();\n                    im = symbol.imagpart();\n                }\n\n                if (re.isConstant('all') && im.isConstant('all'))\n                    return this[f].call(this, re, im);\n                return _.symfunction(f, [symbol]);\n            }\n        };\n        //object for functions which handle trig\n        var trig = this.trig = {\n            //container for trigonometric function\n            cos: function (symbol) {\n                if (symbol.equals('pi') && symbol.multiplier.den.equals(2))\n                    return new Symbol(0);\n\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.equals(new Symbol(Settings.PI / 2)))\n                        return new Symbol(0);\n                    if (symbol.isConstant()) {\n                        return new Symbol(Math.cos(symbol.valueOf()));\n                    }\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'cos');\n                    }\n                }\n                if (symbol.equals(0))\n                    return new Symbol(1);\n\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier.abs();\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return for 1 or -1 for multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(even(m) ? 1 : -1);\n                    }\n                    else {\n                        var n = Number(m.num), d = Number(m.den);\n                        if (d === 2)\n                            retval = new Symbol(0);\n                        else if (d === 3) {\n                            retval = _.parse('1/2');\n                            c = true;\n                        }\n                        else if (d === 4) {\n                            retval = _.parse('1/sqrt(2)');\n                            c = true;\n                        }\n                        else if (d === 6) {\n                            retval = _.parse('sqrt(3)/2');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('cos', [symbol]);\n                    }\n                }\n\n                if (c && (q === 2 || q === 3))\n                    retval.negate();\n\n                if (!retval)\n                    retval = _.symfunction('cos', [symbol]);\n\n                return retval;\n            },\n            sin: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant()) {\n                        return new Symbol(Math.sin(symbol.valueOf()));\n                    }\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'sin');\n                }\n\n                if (symbol.equals(0))\n                    return new Symbol(0);\n\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        sign = symbol.multiplier.sign(),\n                        m = symbol.multiplier.abs();\n                symbol.multiplier = m;\n                if (symbol.equals('pi'))\n                    retval = new Symbol(0);\n                else if (symbol.isPi() && symbol.isLinear()) {\n                    //return for 0 for multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(0);\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2) {\n                            retval = new Symbol(1);\n                            c = true;\n                        }\n                        else if (d == 3) {\n                            retval = _.parse('sqrt(3)/2');\n                            c = true\n                        }\n                        else if (d == 4) {\n                            retval = _.parse('1/sqrt(2)');\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('1/2');\n                            c = true;\n                        }\n                        else\n                            retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\n                    }\n                }\n\n                if (!retval)\n                    retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\n\n                if (c && (q === 3 || q === 4))\n                    retval.negate();\n\n                return retval;\n            },\n            tan: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.tan(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'tan');\n                }\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier;\n\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return 0 for all multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(0);\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2)\n                            throw new UndefinedError('tan is undefined for ' + symbol.toString());\n                        else if (d == 3) {\n                            retval = _.parse('sqrt(3)');\n                            c = true;\n                        }\n                        else if (d == 4) {\n                            retval = new Symbol(1);\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('1/sqrt(3)');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('tan', [symbol]);\n                    }\n                }\n\n                if (!retval)\n                    retval = _.symfunction('tan', [symbol]);\n\n                if (c && (q === 2 || q === 4))\n                    retval.negate();\n\n                return retval;\n            },\n            sec: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math2.sec(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'sec');\n                    return _.parse(format('1/cos({0})', symbol));\n                }\n\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier.abs();\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return for 1 or -1 for multiples of pi\n                    if (isInt(m)) {\n                        retval = new Symbol(even(m) ? 1 : -1);\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2)\n                            throw new UndefinedError('sec is undefined for ' + symbol.toString());\n                        else if (d == 3) {\n                            retval = new Symbol(2);\n                            c = true;\n                        }\n                        else if (d == 4) {\n                            retval = _.parse('sqrt(2)');\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('2/sqrt(3)');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('sec', [symbol]);\n                    }\n                }\n\n                if (c && (q === 2 || q === 3))\n                    retval.negate();\n\n                if (!retval)\n                    retval = _.symfunction('sec', [symbol]);\n\n                return retval;\n            },\n            csc: function(symbol) {\n                if(Settings.PARSE2NUMBER) {\n                    if(symbol.isConstant())\n                        return new Symbol(Math2.csc(symbol.valueOf()));\n                    if(symbol.isImaginary())\n                        return complex.evaluate(symbol, 'csc');\n                    return _.parse(format('1/sin({0})', symbol));\n                }\n\n                var retval,\n                    c = false,\n                    q = getQuadrant(symbol.multiplier.toDecimal()),\n                    sign = symbol.multiplier.sign(),\n                    m = symbol.multiplier.abs();\n\n                symbol.multiplier = m;\n\n                if(symbol.isPi() && symbol.isLinear()) {\n                    //return for 0 for multiples of pi\n                    if(isInt(m)) {\n                        throw new UndefinedError('csc is undefined for '+symbol.toString());\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if(d == 2) {\n                            retval = new Symbol(1); c = true;\n                        }\n                        else if(d == 3) {\n                            retval = _.parse('2/sqrt(3)'); c = true\n                        }\n                        else if(d == 4) {\n                            retval = _.parse('sqrt(2)'); c = true;\n                        }\n                        else if(d == 6) {\n                            retval = new Symbol(2); c = true;\n                        }\n                        else \n                            retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\n                    }\n                }\n\n                if(!retval) retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\n\n                if(c && (q === 3 || q === 4)) retval.negate();\n\n                return retval;\n            },\n            cot: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math2.cot(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'cot');\n                    return _.parse(format('1/tan({0})', symbol));\n                }\n                var retval,\n                        c = false,\n                        q = getQuadrant(symbol.multiplier.toDecimal()),\n                        m = symbol.multiplier;\n\n                symbol.multiplier = m;\n\n                if (symbol.isPi() && symbol.isLinear()) {\n                    //return 0 for all multiples of pi\n                    if (isInt(m)) {\n                        throw new UndefinedError('cot is undefined for ' + symbol.toString());\n                    }\n                    else {\n                        var n = m.num, d = m.den;\n                        if (d == 2)\n                            retval = new Symbol(0);\n                        else if (d == 3) {\n                            retval = _.parse('1/sqrt(3)');\n                            c = true;\n                        }\n                        else if (d == 4) {\n                            retval = new Symbol(1);\n                            c = true;\n                        }\n                        else if (d == 6) {\n                            retval = _.parse('sqrt(3)');\n                            c = true;\n                        }\n                        else\n                            retval = _.symfunction('cot', [symbol]);\n                    }\n                }\n\n                if (!retval)\n                    retval = _.symfunction('cot', [symbol]);\n\n                if (c && (q === 2 || q === 4))\n                    retval.negate();\n\n                return retval;\n            },\n            acos: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.acos(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'acos');\n                }\n                return _.symfunction('acos', arguments);\n            },\n            asin: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.asin(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'asin');\n                }\n                return _.symfunction('asin', arguments);\n            },\n            atan: function (symbol) {\n                var retval;\n                if (symbol.equals(0))\n                    retval = new Symbol(0);\n                else if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.atan(symbol.valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'atan');\n                    return _.symfunction('atan', arguments);\n                }\n                else if (symbol.equals(-1))\n                    retval = _.parse('-pi/4');\n                else\n                    retval = _.symfunction('atan', arguments);\n                return retval;\n            },\n            asec: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.acos(symbol.invert().valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'asec');\n                }\n                return _.symfunction('asec', arguments);\n            },\n            acsc: function (symbol) {\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.asin(symbol.invert().valueOf()));\n                    if (symbol.isImaginary())\n                        return complex.evaluate(symbol, 'acsc');\n                }\n                return _.symfunction('acsc', arguments);\n            },\n            acot: function(symbol) {\n                if(Settings.PARSE2NUMBER) {\n                    if(symbol.isConstant()) {\n                        return new _.add(_.parse('pi/2'), trig.atan(symbol).negate());\n                    }\n\n                    if(symbol.isImaginary())\n                        return complex.evaluate(symbol, 'acot');\n                }\n                return _.symfunction('acot', arguments);\n            },\n            atan2: function (a, b) {\n                if (a.equals(0) && b.equals(0))\n                    throw new UndefinedError('atan2 is undefined for 0, 0');\n\n                if (Settings.PARSE2NUMBER && a.isConstant() && b.isConstant()) {\n                    return new Symbol(Math.atan2(a, b));\n                }\n                return _.symfunction('atan2', arguments);\n            }\n        };\n        //object for functions which handle hyperbolic trig\n        var trigh = this.trigh = {\n            //container for hyperbolic trig function\n            cosh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.cosh(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'cosh');\n                    }\n                }\n\n                return retval = _.symfunction('cosh', arguments);\n            },\n            sinh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.sinh(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'sinh');\n                    }\n                }\n\n                return retval = _.symfunction('sinh', arguments);\n            },\n            tanh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.tanh(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'tanh');\n                    }\n                }\n\n                return retval = _.symfunction('tanh', arguments);\n            },\n            sech: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant()) {\n                        return new Symbol(Math.sech(symbol.valueOf()));\n                    }\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'sech');\n                    }\n                    return _.parse(format('1/cosh({0})', symbol));\n                }\n\n                return retval = _.symfunction('sech', arguments);\n            },\n            csch: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.csch(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'csch');\n                    }\n                    return _.parse(format('1/sinh({0})', symbol));\n                }\n\n                return retval = _.symfunction('csch', arguments);\n            },\n            coth: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER) {\n                    if (symbol.isConstant())\n                        return new Symbol(Math.coth(symbol.valueOf()));\n                    if (symbol.isImaginary()) {\n                        return complex.evaluate(symbol, 'coth');\n                    }\n                    return _.parse(format('1/tanh({0})', symbol));\n                }\n\n                return retval = _.symfunction('coth', arguments);\n            },\n            acosh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'acosh');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(_.parse(format(Settings.LOG+'(({0})+sqrt(({0})^2-1))', symbol.toString())));\n                else\n                    retval = _.symfunction('acosh', arguments);\n                return retval;\n            },\n            asinh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'asinh');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(_.parse(format(Settings.LOG+'(({0})+sqrt(({0})^2+1))', symbol.toString())));\n                else\n                    retval = _.symfunction('asinh', arguments);\n                return retval;\n            },\n            atanh: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'atanh');\n                else if (Settings.PARSE2NUMBER) {\n                    retval = evaluate(_.parse(format('(1/2)*'+Settings.LOG+'((1+({0}))/(1-({0})))', symbol.toString())));\n                }\n                else\n                    retval = _.symfunction('atanh', arguments);\n                return retval;\n            },\n            asech: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'asech');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(log(_.add(symbol.clone().invert(), sqrt(_.subtract(_.pow(symbol, new Symbol(-2)), new Symbol(1))))));\n                else\n                    retval = _.symfunction('asech', arguments);\n                return retval;\n            },\n            acsch: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'acsch');\n                else if (Settings.PARSE2NUMBER)\n                    retval = evaluate(_.parse(format(Settings.LOG+'((1+sqrt(1+({0})^2))/({0}))', symbol.toString())));\n                else\n                    retval = _.symfunction('acsch', arguments);\n                return retval;\n            },\n            acoth: function (symbol) {\n                var retval;\n                if (Settings.PARSE2NUMBER && symbol.isImaginary())\n                    retval = complex.evaluate(symbol, 'acoth');\n                else if (Settings.PARSE2NUMBER) {\n                    if (symbol.equals(1))\n                        retval = Symbol.infinity();\n                    else\n                        retval = evaluate(\n                                _.divide(\n                                        log(_.divide(_.add(symbol.clone(), new Symbol(1)), _.subtract(symbol.clone(), new Symbol(1)))),\n                                        new Symbol(2)));\n                }\n                else\n                    retval = _.symfunction('acoth', arguments);\n                return retval;\n            }\n        };\n        //list of supported units\n        this.units = {};\n        //list all the supported operators\n        var operators = {\n            '\\\\': {\n                precedence: 8,\n                operator: '\\\\',\n                action: 'slash',\n                prefix: true,\n                postfix: false,\n                leftAssoc: true,\n                operation: function (e) {\n                    return e; //bypass the slash\n                }\n            },\n            '!!': {\n                precedence: 7,\n                operator: '!!',\n                action: 'dfactorial',\n                prefix: false,\n                postfix: true,\n                leftAssoc: true,\n                operation: function (e) {\n                    return _.symfunction(Settings.DOUBLEFACTORIAL, [e]); //wrap it in a factorial function\n                }\n            },\n            '!': {\n                precedence: 7,\n                operator: '!',\n                action: 'factorial',\n                prefix: false,\n                postfix: true,\n                leftAssoc: true,\n                operation: function (e) {\n                    return factorial(e); //wrap it in a factorial function\n                }\n            },\n            '^': {\n                precedence: 6,\n                operator: '^',\n                action: 'pow',\n                prefix: false,\n                postfix: false,\n                leftAssoc: true\n            },\n            '**': {\n                precedence: 6,\n                operator: '**',\n                action: 'pow',\n                prefix: false,\n                postfix: false,\n                leftAssoc: true\n            },\n            '%': {\n                precedence: 4,\n                operator: '%',\n                action: 'percent',\n                prefix: false,\n                postfix: true,\n                leftAssoc: true,\n                overloaded: true,\n                overloadAction: 'mod',\n\t\toverloadLeftAssoc: false,\n                operation: function (x) {\n                    return _.divide(x, new Symbol(100));\n                }\n            },\n            '*': {\n                precedence: 4,\n                operator: '*',\n                action: 'multiply',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '/': {\n                precedence: 4,\n                operator: '/',\n                action: 'divide',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '+': {\n                precedence: 3,\n                operator: '+',\n                action: 'add',\n                prefix: true,\n                postfix: false,\n                leftAssoc: false,\n                operation: function (x) {\n                    return x;\n                }\n            },\n            'plus': {\n                precedence: 3,\n                operator: 'plus',\n                action: 'add',\n                prefix: true,\n                postfix: false,\n                leftAssoc: false,\n                operation: function (x) {\n                    return x;\n                }\n            },\n            '-': {\n                precedence: 3,\n                operator: '-',\n                action: 'subtract',\n                prefix: true,\n                postfix: false,\n                leftAssoc: false,\n                operation: function (x) {\n                    return x.negate();\n                }\n            },\n            '=': {\n                precedence: 2,\n                operator: '=',\n                action: 'equals',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '==': {\n                precedence: 1,\n                operator: '==',\n                action: 'eq',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '<': {\n                precedence: 1,\n                operator: '<',\n                action: 'lt',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '<=': {\n                precedence: 1,\n                operator: '<=',\n                action: 'lte',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '>': {\n                precedence: 1,\n                operator: '>',\n                action: 'gt',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            '=>': {\n                precedence: 1,\n                operator: '=>',\n                action: 'gte',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            ',': {\n                precedence: 0,\n                operator: ',',\n                action: 'comma',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false\n            },\n            ':': {\n                precedence: 0,\n                operator: ',',\n                action: 'assign',\n                prefix: false,\n                postfix: false,\n                leftAssoc: false,\n                vectorFn: 'slice'\n            },\n            ':=': {\n                precedence: 0,\n                operator: ',',\n                action: 'function_assign',\n                prefix: false,\n                postfix: false,\n                leftAssoc: true\n            }\n        };\n        //brackets\n        var brackets = {\n            '(': {\n                type: 'round',\n                id: 1,\n                is_open: true,\n                is_close: false\n            },\n            ')': {\n                type: 'round',\n                id: 2,\n                is_open: false,\n                is_close: true\n            },\n            '[': {\n                type: 'square',\n                id: 3,\n                is_open: true,\n                is_close: false,\n                maps_to: 'vector'\n            },\n            ']': {\n                type: 'square',\n                id: 4,\n                is_open: false,\n                is_close: true\n            },\n            '{': {\n                type: 'curly',\n                id: 5,\n                is_open: true,\n                is_close: false,\n                maps_to: 'Set'\n            },\n            '}': {\n                type: 'curly',\n                id: 6,\n                is_open: false,\n                is_close: true\n            }\n        };\n        // Supported functions.\n        // Format: function_name: [mapped_function, number_of_parameters]\n        var functions = this.functions = {\n            'cos':                  [trig.cos, 1],\n            'sin':                  [trig.sin, 1],\n            'tan':                  [trig.tan, 1],\n            'sec':                  [trig.sec, 1],\n            'csc':                  [trig.csc, 1],\n            'cot':                  [trig.cot, 1],\n            'acos':                 [trig.acos, 1],\n            'asin':                 [trig.asin, 1],\n            'atan':                 [trig.atan, 1],\n            'arccos':               [trig.acos, 1],\n            'arcsin':               [trig.asin, 1],\n            'arctan':               [trig.atan, 1],\n            'asec':                 [trig.asec, 1],\n            'acsc':                 [trig.acsc, 1],\n            'acot':                 [trig.acot, 1],\n            'atan2':                [trig.atan2, 2],\n            'acoth':                [trigh.acoth, 1],\n            'asech':                [trigh.asech, 1],\n            'acsch':                [trigh.acsch, 1],\n            'sinh':                 [trigh.sinh, 1],\n            'cosh':                 [trigh.cosh, 1],\n            'tanh':                 [trigh.tanh, 1],\n            'asinh':                [trigh.asinh, 1],\n            'sech':                 [trigh.sech, 1],\n            'csch':                 [trigh.csch, 1],\n            'coth':                 [trigh.coth, 1],\n            'acosh':                [trigh.acosh, 1],\n            'atanh':                [trigh.atanh, 1],\n            'log10':                [, 1],\n            'exp':                  [exp, 1],\n            'radians':              [radians, 1],\n            'degrees':              [degrees, 1],\n            'min':                  [min, -1],\n            'max':                  [max, -1],\n            'erf':                  [, 1],\n            'floor':                [, 1],\n            'ceil':                 [, 1],\n            'trunc':                [, 1],\n            'Si':                   [, 1],\n            'step':                 [, 1],\n            'rect':                 [, 1],\n            'sinc':                 [sinc, 1],\n            'tri':                  [, 1],\n            'sign':                 [sign, 1],\n            'Ci':                   [, 1],\n            'Ei':                   [, 1],\n            'Shi':                  [, 1],\n            'Chi':                  [, 1],\n            'Li':                   [, 1],\n            'fib':                  [, 1],\n            'fact':                 [factorial, 1],\n            'factorial':            [factorial, 1],\n            'continued_fraction':   [continued_fraction, [1, 2]],\n            'dfactorial':           [, 1],\n            'gamma_incomplete':     [, [1, 2]],\n            'round':                [round, [1, 2]],\n            'scientific':           [scientific, [1, 2]],\n            'mod':                  [mod, 2],\n            'pfactor':              [pfactor, 1],\n            'vector':               [vector, -1],\n            'matrix':               [matrix, -1],\n            'Set':                  [set, -1],\n            'imatrix':              [imatrix, -1],\n            'parens':               [parens, -1],\n            'sqrt':                 [sqrt, 1],\n            'cbrt':                 [cbrt, 1],\n            'nthroot':              [nthroot, 2],\n            'log':                  [log, [1, 2]],\n            'expand':               [expand, 1],\n            'abs':                  [abs, 1],\n            'invert':               [invert, 1],\n            'determinant':          [determinant, 1],\n            'size':                 [size, 1],\n            'transpose':            [transpose, 1],\n            'dot':                  [dot, 2],\n            'cross':                [cross, 2],\n            'vecget':               [vecget, 2],\n            'vecset':               [vecset, 3],\n            'vectrim':              [vectrim, [1, 2]],\n            'matget':               [matget, 3],\n            'matset':               [matset, 4],\n            'matgetrow':            [matgetrow, 2],\n            'matsetrow':            [matsetrow, 3],\n            'matgetcol':            [matgetcol, 2],\n            'matsetcol':            [matsetcol, 3],\n            'rationalize':          [rationalize, 1],\n            'IF':                   [IF, 3],\n            'is_in':                [is_in, 2],\n            //imaginary support\n            'realpart':             [realpart, 1],\n            'imagpart':             [imagpart, 1],\n            'conjugate':            [conjugate, 1],\n            'arg':                  [arg, 1],\n            'polarform':            [polarform, 1],\n            'rectform':             [rectform, 1],\n            'sort':                 [sort, [1, 2]],\n            'integer_part':         [, 1],\n            'union':                [union, 2],\n            'contains':             [contains, 2],\n            'intersection':         [intersection, 2],\n            'difference':           [difference, 2],\n            'intersects':           [intersects, 2],\n            'is_subset':            [is_subset, 2],\n            //system support\n            'print':                [print, -1]\n        };\n\n        //error handler\n        this.error = err;\n        //this function is used to comb through the function modules and find a function given its name\n        var findFunction = function (fname) {\n            var fmodules = Settings.FUNCTION_MODULES,\n                    l = fmodules.length;\n            for (var i = 0; i < l; i++) {\n                var fmodule = fmodules[i];\n                if (fname in fmodule)\n                    return fmodule[fname];\n            }\n            err('The function ' + fname + ' is undefined!');\n        };\n\n        /**\n         * This method gives the ability to override operators with new methods.\n         * @param {String} which\n         * @param {Function} with_what\n         */\n        this.override = function (which, with_what) {\n            if (!bin[which])\n                bin[which] = [];\n            bin[which].push(this[which]);\n            this[which] = with_what;\n        };\n\n        /**\n         * Restores a previously overridden operator\n         * @param {String} what\n         */\n        this.restore = function (what) {\n            if (this[what])\n                this[what] = bin[what].pop();\n        };\n\n        /**\n         * This method is supposed to behave similarly to the override method but it does not override\n         * the existing function rather it only extends it\n         * @param {String} what\n         * @param {Function} with_what\n         * @param {boolean} force_call\n         */\n        this.extend = function (what, with_what, force_call) {\n            var _ = this,\n                    extended = this[what];\n            if (typeof extended === 'function' && typeof with_what === 'function') {\n                var f = this[what];\n                this[what] = function (a, b) {\n                    if (isSymbol(a) && isSymbol(b) && !force_call)\n                        return f.call(_, a, b);\n                    else\n                        return with_what.call(_, a, b, f);\n                };\n            }\n        };\n\n        /**\n         * Generates library's representation of a function. It's a fancy way of saying a symbol with \n         * a few extras. The most important thing is that that it gives a fname and \n         * an args property to the symbols in addition to changing its group to FN\n         * @param {String} fn_name\n         * @param {Array} params\n         * @returns {Symbol}\n         */\n        this.symfunction = function (fn_name, params) {\n            //call the proper function and return the result;\n            var f = new Symbol(fn_name);\n            f.group = FN;\n            if (typeof params === 'object')\n                params = [].slice.call(params);//ensure an array\n            f.args = params;\n            f.fname = fn_name === PARENTHESIS ? '' : fn_name;\n            f.updateHash();\n            return f;\n        };\n\n        /**\n         * An internal function call for the Parser. This will either trigger a real \n         * function call if it can do so or just return a symbolic representation of the \n         * function using symfunction.\n         * @param {String} fn_name\n         * @param {Array} args\n         * @param {int} allowed_args\n         * @returns {Symbol}\n         */\n        this.callfunction = function (fn_name, args, allowed_args) {\n            var fn_settings = functions[fn_name];\n\n            if (!fn_settings)\n                err('Nerdamer currently does not support the function ' + fn_name);\n\n            var num_allowed_args = fn_settings[1] || allowed_args, //get the number of allowed arguments\n                    fn = fn_settings[0], //get the mapped function\n                    retval;\n            //We want to be able to call apply on the arguments or create a symfunction. Both require\n            //an array so make sure to wrap the argument in an array.\n            if (!(args instanceof Array))\n                args = args !== undefined ? [args] : [];\n\n            if (num_allowed_args !== -1) {\n                var is_array = isArray(num_allowed_args),\n                        min_args = is_array ? num_allowed_args[0] : num_allowed_args,\n                        max_args = is_array ? num_allowed_args[1] : num_allowed_args,\n                        num_args = args.length;\n\n                var error_msg = fn_name + ' requires a {0} of {1} arguments. {2} provided!';\n\n                if (num_args < min_args)\n                    err(format(error_msg, 'minimum', min_args, num_args));\n                if (num_args > max_args)\n                    err(format(error_msg, 'maximum', max_args, num_args));\n            }\n\n            /*\n             * The following are very important to the how nerdamer constructs functions!\n             * Assumption 1 - if fn is undefined then handling of the function is purely numeric. This\n             *     enables us to reuse Math, Math2, ..., any function from Settings.FUNCTIONS_MODULES entry\n             * Assumption 2 - if fn is defined then that function takes care of EVERYTHING including symbolics\n             * Assumption 3 - if the user calls symbolics on a function that returns a numeric value then\n             *     they are expecting a symbolic output.\n             */\n            //check if arguments are all numers\n            var numericArgs = allNumbers(args);\n            //Big number support. Check if Big number is requested and the arguments are all numeric and, not imaginary\n            if (Settings.USE_BIG && numericArgs) {\n                retval = Big[fn_name].apply(undefined, args);\n            }\n            else {\n                if (!fn) {\n                    //Remember assumption 1. No function defined so it MUST be numeric in nature\n                    fn = findFunction(fn_name);\n                    if (Settings.PARSE2NUMBER && numericArgs)\n                        retval = bigConvert(fn.apply(fn, args));\n                    else\n                        retval = _.symfunction(fn_name, args);\n                }\n                else {\n                    //Remember assumption 2. The function is defined so it MUST handle all aspects including numeric values\n                    retval = fn.apply(fn_settings[2], args);\n                }\n            }\n\n            return retval;\n        };\n        /**\n         * Build a regex based on the operators currently loaded. These operators are to be ignored when \n         * substituting spaces for multiplication\n         */\n        this.operator_filter_regex = (function () {\n            //we only want the operators which are singular since those are the ones\n            //that nerdamer uses anyway\n            var ostr = '^\\\\' + Object.keys(operators).filter(function (x) {\n                if (x.length === 1)\n                    return x;\n            }).join('\\\\');\n            //create a regex which captures all spaces between characters except those\n            //have an operator on one end\n            return new RegExp('([' + ostr + '])\\\\s+([' + ostr + '])');\n        })();\n\n        /**\n         * Replaces nerdamer.setOperator\n         * @param {object} operator\n         * @param {boolean} shift         \n         */\n        this.setOperator = function (operator, action, shift) {\n            var name = operator.operator; //take the name to be the symbol\n            operators[name] = operator;\n            if(action)\n                this[operator.action] = action;\n            //make the parser aware of the operator\n            _[name] = operator.operation;\n            //make the action available to the parser if infix\n            if (!operator.action &&!(operator.prefix || operator.postif)) {\n                operator.action = name;\n            }\n            //if this operator is exclusive then all successive operators should be shifted\n            if (shift === 'over' || shift === 'under') {\n                var precedence = operator.precedence;\n\n                for (var x in operators) {\n                    var o = operators[x];\n                    var condition = shift === 'over' ? o.precedence >= precedence : o.precedence > precedence;\n                    if (condition)\n                        o.precedence++;\n                }\n                ;\n            }\n        };\n        \n        /**\n         * Gets an opererator by its symbol\n         * @param {String} operator\n         * @returns {Object}\n         */\n        this.getOperator = function(operator) {\n            return operators[operator];\n        };\n        \n        this.aliasOperator = function(o, n) {\n            var t = {};\n            var operator = operators[o];\n            //copy everything over to the new operator\n            for(var x in operator) {\n                t[x] = operator[x];\n            }\n            //update the symbol\n            t.operator = n;\n            \n            this.setOperator(t);\n        };\n        \n        /**\n         * Returns the list of operators. Caution! Can break parser!\n         * @returns {object}\n         */\n        this.getOperators = function () {\n            //will replace this with some cloning action in the future\n            return operators;\n        };\n\n        this.getBrackets = function () {\n            return brackets;\n        };\n        /*\n         * Preforms preprocessing on the string. Useful for making early modification before \n         * sending to the parser\n         * @param {String} e\n         */\n        var prepare_expression = function (e) {\n            /*\n             * Since variables cannot start with a number, the assumption is made that when this occurs the\n             * user intents for this to be a coefficient. The multiplication symbol in then added. The same goes for \n             * a side-by-side close and open parenthesis\n             */\n            e = String(e);\n            //apply preprocessors\n            for (var i = 0; i < preprocessors.actions.length; i++)\n                e = preprocessors.actions[i].call(this, e);\n\n            /* //NO LONGER NEEDED SINCE IMPLIED MULTIPLICATION IS NOW HANDLED LATER IN TOKENIZER\n            var match;\n            //add support for spaces between variables\n            while (true) {\n                match = _.operator_filter_regex.exec(e);\n                if (!match)\n                    break;\n                try {\n                    var a = match[1],\n                            b = match[2];\n                    validateName(a);\n                    validateName(b);\n                    e = e.replace(match[0], a + '*' + b);\n                }\n                catch (e) {\n                    break;\n                }\n            }\n            */\n            \n            //e = e.split(' ').join('');//strip empty spaces\n            //replace multiple spaces with one space\n            e = e.replace(/\\s+/g, ' ');\n            \n            //only even bother to check if the string contains e. This regex is painfully slow and might need a better solution. e.g. hangs on (0.06/3650))^(365)\n            if(/e/gi.test(e)) {\n                e = e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi, function (x) { \n                    return scientificToDecimal(x);\n                });\n            }\n            //replace scientific numbers\n            \n            //allow omission of multiplication after coefficients\n            e = e.replace(/([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi, function () {\n                var str = arguments[4],\n                        group1 = arguments[1],\n                        group2 = arguments[2],\n                        start = arguments[3],\n                        first = str.charAt(start),\n                        before = '',\n                        d = '*';\n                if (!first.match(/[\\+\\-\\/\\*]/))\n                    before = str.charAt(start - 1);\n                if (before.match(/[a-z]/i))\n                    d = '';\n                return group1 + d + group2;\n            })\n            .replace(/([a-z0-9_]+)/gi, function (match, a) {\n                if (Settings.USE_MULTICHARACTER_VARS === false && !(a in functions)) {\n                    if (!isNaN(a))\n                        return a;\n                    return a.split('').join('*');\n                }\n                return a;\n            })\n            //allow omission of multiplication sign between brackets\n            .replace(/\\)\\(/g, ')*(') || '0';\n            //replace x(x+a) with x*(x+a)\n            while (true) {\n                var e_org = e; //store the original\n                e = e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi, function (match, a, b, c, d) {\n                    var g1 = a || c,\n                            g2 = b || d;\n                    if (g1 in functions) //create a passthrough for functions\n                        return g1 + g2;\n                    return g1 + '*' + g2;\n                });\n                //if the original equals the replace we're done\n                if (e_org === e)\n                    break;\n            }\n            return e;\n        };\n        //delay setting of constants until Settings is ready\n        this.initConstants = function () {\n            this.CONSTANTS = {\n                E: new Symbol(Settings.E),\n                PI: new Symbol(Settings.PI)\n            };\n        };\n        /*\n         * Debugging method used to better visualize vector and arrays\n         * @param {object} o\n         * @returns {String}\n         */\n        this.pretty_print = function (o) {\n            if (Array.isArray(o)) {\n                var s = o.map(x => _.pretty_print(x)).join(', ');\n                if (o.type === 'vector')\n                    return 'vector<' + s + '>';\n                return '(' + s + ')';\n            }\n            return o.toString();\n        };\n        this.peekers = {\n            pre_operator: [],\n            post_operator: [],\n            pre_function: [],\n            post_function: []\n        };\n        \n        this.callPeekers = function(name) {\n\t\t\tif (Settings.callPeekers) {\n\t\t\t\tvar peekers = this.peekers[name];\n\t\t\t\t//remove the first items and stringify\n\t\t\t\tvar args = arguments2Array(arguments).slice(1).map(stringify);\n\t\t\t\t//call each one of the peekers\n\t\t\t\tfor(var i=0; i<peekers.length; i++) {\n\t\t\t\t\tpeekers[i].apply(null, args);\n\t\t\t\t}\n\t\t\t}\n        };\n        /*\n         * Tokenizes the string\n         * @param {String} e\n         * @returns {Token[]}\n         */\n        this.tokenize = function (e) {\n            //cast to String\n            e = String(e);\n            //remove multiple white spaces and spaces at beginning and end of string\n            e = e.trim().replace(/\\s+/g, ' ');\n            //remove spaces before and after brackets\n            for (var x in brackets) {\n                var regex = new RegExp(brackets[x].is_close ? '\\\\s+\\\\' + x : '\\\\' + x + '\\\\s+', 'g');\n                e = e.replace(regex, x);\n            }\n\n            var col = 0; //the column position\n            var L = e.length; //expression length\n            var lpos = 0; //marks beginning of next token\n            var tokens = []; //the tokens container\n            var scopes = [tokens]; //initiate with the tokens as the highest scope\n            var target = scopes[0]; //the target to which the tokens are added. This can swing up or down\n            var depth = 0;\n            var open_brackets = [];\n            var has_space = false; //marks if an open space character was found\n            var SPACE = ' ';\n            var EMPTY_STRING = '';\n            var COMMA = ',';\n            var MINUS = '-';\n            var MULT = '*';\n            //Possible source of bug. Review\n            /*\n             //gets the next space\n             var next_space = function(from) {\n             for(var i=from; i<L; i++) {\n             if(e.charAt(i) === ' ')\n             return i;\n             }\n             \n             return L; //assume the end of the string instead\n             };\n             */\n            /**\n             * Adds a scope to tokens\n             * @param {String} scope_type \n             * @param {int} column \n             * @returns {undefined}\n             */\n            var addScope = function (scope_type, column) {\n                var new_scope = []; //create a new scope\n                if (scope_type !== undefined) {\n                    new_scope.type = scope_type;\n                }\n                new_scope.column = column; //mark the column of the scope\n                scopes.push(new_scope); //add it to the list of scopes\n                target.push(new_scope); //add it to the tokens list since now it's a scope\n                target = new_scope; //point to it\n                depth++; //go down one in scope\n            };\n            /**\n             * Goes up in scope by one\n             * @returns {undefined}\n             */\n            var goUp = function () {\n                scopes.pop(); //remove the scope from the scopes stack\n                target = scopes[--depth]; //point the above scope\n            };\n            /**\n             * Extracts all the operators from the expression string starting at postion start_at\n             * @param {int} start_at\n             * @returns {String}\n             */\n            var get_operator_str = function (start_at) {\n                start_at = start_at !== undefined ? start_at : col;\n                //mark the end of the operator as the start since we're just going\n                //to be walking along the string\n                var end = start_at + 1;\n                //just keep moving along\n                while (e.charAt(end++) in operators) {\n                }\n                //remember that we started at one position ahead. The beginning operator is what triggered\n                //this function to be called in the first place. String.CharAt is zero based so we now\n                //have to correct two places. The initial increment + the extra++ at the end of end during\n                //the last iteration.\n                return e.substring(start_at, end - 1);\n            };\n            /**\n             * Breaks operator up in to several different operators as defined in operators\n             * @param {String} operator_str\n             * @returns {String[]}\n             */\n            var chunkify = function (operator_str) {\n                var start = col - operator_str.length; //start of operator\n                var _operators = [];\n                var operator = operator_str.charAt(0);\n                //grab the largest possible chunks but start at 2 since we already know\n                //that the first character is an operator\n\n                for (var i = 1, L = operator_str.length; i < L; i++) {\n                    var ch = operator_str.charAt(i);\n                    var o = operator + ch;\n                    //since the operator now is undefined then the last operator \n                    //was the largest possible combination.\n                    if (!(o in operators)) {\n                        _operators.push(new Token(operator, Token.OPERATOR, start + i));\n                        operator = ch;\n                    }\n                    else\n                        operator = o;//now the operator is the larger chunk\n                }\n                //add the last operator\n                _operators.push(new Token(operator, Token.OPERATOR, start + i));\n                return _operators;\n            };\n\n            /**\n             * Is used to add a token to the tokens array. Makes sure that no empty token is added\n             * @param {int} at\n             * @param {String} token\n             * @returns {undefined}\n             */\n            var add_token = function (at, token) {\n                //grab the token if we're not supplied one\n                if (token === undefined)\n                    token = e.substring(lpos, at);\n                //only add it if it's not an empty string\n                if (token in _.units)\n                    target.push(new Token(token, Token.UNIT, lpos));\n                else if (token !== '')\n                    target.push(new Token(token, Token.VARIABLE_OR_LITERAL, lpos));\n            };\n            /**\n             * Adds a function to the output\n             * @param {String} f\n             * @returns {undefined}\n             */\n            var add_function = function (f) {\n                target.push(new Token(f, Token.FUNCTION, lpos));\n            };\n            /**\n             * Tokens are found between operators so this marks the location of where the last token was found\n             * @param {int} position\n             * @returns {undefined}\n             */\n            var set_last_position = function (position) {\n                lpos = position + 1;\n            };\n            /**\n             * When a operator is found and added, especially a combo operator, then the column location\n             * has to be adjusted to the end of the operator\n             * @returns {undefined}\n             */\n            var adjust_column_position = function () {\n                lpos = lpos + operator_str.length - 2;\n                col = lpos - 1;\n            };\n            for (; col < L; col++) {\n                var ch = e.charAt(col);\n                if (ch in operators) {\n                    add_token(col);\n                    //is the last token numeric?\n                    var last_token_is_numeric = target[0] && isNumber(target[0]); \n                    //is this character multiplication?\n                    var is_multiplication = last_token_is_numeric && ch === MULT;\n                    //if we're in a new scope then go up by one but if the space \n                    //is right befor an operator then it makes no sense to go up in scope\n                    //consider sin -x. The last position = current position at the minus sign\n                    //this means that we're going for sin(x) -x which is wrong\n                    //Ignore comma since comma is still part of the existing scope.\n                    if (has_space && lpos < col && !(ch === COMMA || is_multiplication)) {\n                        has_space = false;\n                        goUp();\n                    }\n                    //mark the last position that a \n                    set_last_position(col + 1);\n                    var operator_str = get_operator_str(col);\n\n                    adjust_column_position();\n                    target.push.apply(target, chunkify(operator_str));\n                }\n                else if (ch in brackets) {\n                    var bracket = brackets[ch];\n\n                    if (bracket.is_open) {\n                        //mark the bracket\n                        open_brackets.push([bracket, lpos]);\n                        var f = e.substring(lpos, col);\n                        if (f in functions) {\n                            add_function(f);\n                        }\n                        else if (f !== '') {\n                            //assume multiplication\n                            //TODO: Add the multiplication to stack\n                            target.push(new Token(f, Token.VARIABLE_OR_LITERAL, lpos));\n                        }\n                        //go down one in scope\n                        addScope(bracket.maps_to, col);\n                    }\n                    else if (bracket.is_close) {\n                        //get the matching bracket\n                        var pair = open_brackets.pop();\n                        //throw errors accordingly\n                        //missing open bracket\n                        if (!pair)\n                            throw new ParityError('Missing open bracket for bracket at: ' + (col + 1));\n                        //incorrect pair\n                        else if (pair[0].id !== bracket.id - 1)\n                            throw new ParityError('Parity error');\n\n                        add_token(col);\n                        goUp();\n                    }\n                    set_last_position(col);\n                }\n                else if (ch === SPACE) {\n                    var prev = e.substring(lpos, col); //look back\n                    var nxt = e.charAt(col+1); //look forward\n                    if (has_space) {\n\n                        if (prev in operators) {\n                            target.push(new Token(prev, Token.OPERATOR, col));\n                        }\n                        else {\n                            add_token(undefined, prev);\n                            //we're at the closing space\n                            goUp(); //go up in scope if we're at a space\n                            \n                            //assume multiplication if it's not an operator except for minus\n                            var is_operator = nxt in operators;\n\n                            if((is_operator && operators[nxt].value === MINUS) || !is_operator) {\n                                target.push(new Token(MULT, Token.OPERATOR, col));\n                            }\n                        }\n                        has_space = false; //remove the space\n                    }\n                    else {\n                        //we're at the closing space\n                        //check if it's a function\n                        var f = e.substring(lpos, col);\n\n                        if (f in functions) {\n                            //there's no need to go up in scope if the next character is an operator\n                            has_space = true; //mark that a space was found\n                            add_function(f);\n                            addScope();\n                        }\n                        else if (f in operators) {\n                            target.push(new Token(f, Token.OPERATOR, col));\n                        }\n                        else {\n                            add_token(undefined, f);\n                            //peek ahead to the next character\n                            var nxt = e.charAt(col+1);\n\n                            //If it's a number then add the multiplication operator to the stack but make sure that the next character\n                            //is not an operator\n                            \n                            if(prev !== EMPTY_STRING && nxt !== EMPTY_STRING && !(prev in operators) && !(nxt in operators))\n                                target.push(new Token(MULT, Token.OPERATOR, col));\n                        }\n                        //Possible source of bug. Review\n                        /*\n                         //space can mean multiplication so add the symbol if the is encountered\n                         if(/\\d+|\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(f)) {\n                         var next = e.charAt(col+1);\n                         var next_is_operator = next in operators;\n                         var ns = next_space(col+1);\n                         var next_word = e.substring(col+1, ns);\n                         //the next can either be a prefix operator or no operator\n                         if((next_is_operator && operators[next].prefix) || !(next_is_operator || next_word in operators))\n                         target.push(new Token('*', Token.OPERATOR, col));\n                         }\n                         */\n                    }\n                    set_last_position(col); //mark this location    \n                }\n            }\n            //check that all brackets were closed\n            if (open_brackets.length) {\n                var b = open_brackets.pop();\n                throw new ParityError('Missing closed bracket for bracket at ' + (b[1] + 1));\n            }\n            //add the last token\n            add_token(col);\n\n            return tokens;\n        };\n        /*\n         * Puts token array in Reverse Polish Notation\n         * @param {Token[]} tokens\n         * @returns {Token[]}\n         */\n        this.toRPN = function (tokens) {\n            var fn = tokens.type;\n            var l = tokens.length, i;\n            var output = [];\n            var stack = [];\n            var prefixes = [];\n            var collapse = function (target, destination) {\n                while (target.length)\n                    destination.push(target.pop());\n            };\n            //mark all the prefixes and add them to the stack\n            for (i = 0; i < l; i++) {\n                var token = tokens[i];\n                if (token.type !== Token.OPERATOR)\n                    break;\n                if (!token.prefix)\n                    throw new OperatorError('Not a prefix operator');\n                token.is_prefix = true;\n                stack.push(token);\n            }\n            //begin with remaining tokens\n            for (; i < l; i++) {\n                var e = tokens[i];\n                if (e.type === Token.OPERATOR) {\n                    var operator = e;\n\t\t    \n\t\t    //create the option for the operator being overloaded\n                    if (operator.overloaded) {\n                        var next = tokens[i + 1];\n                        //if it's followed by a number or variable then we assume it's not a postfix operator\n                        if (next && next.type === Token.VARIABLE_OR_LITERAL) {\n                            operator.postfix = false;\n                            //override the original function with the overload function\n                            operator.action = operator.overloadAction;\n\t\t\t    operator.leftAssoc = operator.overloadLeftAssoc;\n                        }\n                    }\n\t\t\t\n                    //if the stack is not empty\n                    while (stack.length) {\n                        var last = stack[stack.length - 1];\n                        //if (there is an operator at the top of the operator stack with greater precedence)\n                        //or (the operator at the top of the operator stack has equal precedence and is left associative)) ~ wikipedia\n                        //the !prefixes.length makes sure that the operator on stack isn't prematurely taken fromt he stack.\n                        if (!(last.precedence > operator.precedence || !operator.leftAssoc && last.precedence === operator.precedence))\n                            break;\n                        output.push(stack.pop());\n                    }\n                    \n                    //change the behavior of the operator if it's a vector and we've been asked to do so\n                    if ((fn === 'vector' || fn === 'set') && 'vectorFn' in operator)\n                        operator.action = operator.vectorFn;\n\n\n                    //if the operator is a postfix operator then we're ready to go since it belongs\n                    //to the preceding token. However the output cannot be empty. It must have either\n                    //an operator or a variable/literal\n                    if (operator.postfix) {\n                        var previous = tokens[i - 1];\n                        if (!previous)\n                            throw new OperatorError(\"Unexpected prefix operator '\" + e.value + \"'! at \" + e.column);\n                        else if (previous.type === Token.OPERATOR) {\n                            //a postfix can only be followed by a postfix\n                            if (!previous.postfix)\n                                throw new OperatorError(\"Unexpected prefix operator '\" + previous.value + \"'! at \" + previous.column);\n                        }\n                    }\n                    else {\n                        //we must be at an infix so point the operator this\n                        do {\n                            //the first one is an infix operator all others have to be prefix operators so jump to the end\n                            var next = tokens[i + 1]; //take a look ahead\n                            var next_is_operator = next ? next.type === Token.OPERATOR : false; //check if it's an operator\n                            if (next_is_operator) {\n                                //if it's not a prefix operator then it not in the right place\n                                if (!next.prefix) {\n                                    throw new OperatorError('A prefix operator was expected at ' + next.column);\n                                }\n                                //mark it as a confirmed prefix\n                                next.is_prefix = true;\n                                //add it to the prefixes\n                                prefixes.push(next);\n                                i++;\n                            }\n                        }\n                        while (next_is_operator)\n                    }\n\n                    //if it's a prefix it should be on a special stack called prefixes\n                    //we do this to hold on to prefixes because of left associative operators.\n                    //they belong to the variable/literal but if placed on either the stack\n                    //or output there's no way of knowing this. I might be wrong so I welcome \n                    //any discussion about this.\n\n                    if (operator.is_prefix) //ADD ALL EXCEPTIONS FOR ADDING TO PREFIX STACK HERE. !!!\n                        prefixes.push(operator);\n                    else\n                        stack.push(operator);\n                    //move the prefixes to the stack\n                    while (prefixes.length) {\n                        if (operator.leftAssoc || !operator.leftAssoc && prefixes[prefixes.length - 1].precedence >= operator.precedence) //revisit for commas\n                            stack.push(prefixes.pop());\n                        else\n                            break;\n                    }\n                }\n                else if (e.type === Token.VARIABLE_OR_LITERAL) {\n                    //move prefixes to stack at beginning of scope\n                    if (output.length === 0)\n                        collapse(prefixes, stack);\n                    //done with token\n                    output.push(e);\n                    var last_on_stack = stack[stack.length - 1];\n                    //then move all the prefixes to the output\n                    if (!last_on_stack || !last_on_stack.leftAssoc)\n                        collapse(prefixes, output);\n                }\n                else if (e.type === Token.FUNCTION) {\n                    stack.push(e);\n                }\n                else if (e.type === Token.UNIT) {\n                    //if it's a unit it belongs on the stack since it's tied to the previous token\n                    output.push(e);\n                }\n                //if it's an additonal scope then put that into RPN form\n                if (Array.isArray(e)) {\n                    output.push(this.toRPN(e));\n                    if (e.type)\n                        output.push(new Token(e.type, Token.FUNCTION, e.column)); //since it's hidden it needs no column\n\n                }\n            }\n            //collapse the remainder of the stack and prefixes to output\n            collapse(stack, output);\n            collapse(prefixes, output);\n\n            return output;\n        };\n        /*\n         * Parses the tokens  \n         * @param {Tokens[]} rpn\n         * @param {object} substitutions\n         * @returns {Symbol}\n         */\n        this.parseRPN = function (rpn, substitutions) {\n            try {\n                //default substitutions\n                substitutions = substitutions || {};\n                //prepare the substitutions.\n                //we first parse them out as-is\n                for (var x in substitutions)\n                    substitutions[x] = _.parse(substitutions[x], {});\n                //Although technically constants,\n                //pi and e are only available when evaluating the expression so add to the subs.\n                //Doing this avoids rounding errors \n                //link e and pi\n                if (Settings.PARSE2NUMBER) {\n                    //use the value provided if the individual for some strange reason prefers this.\n                    //one reason could be to sub e but not pi or vice versa\n                    if (!('e' in substitutions))\n                        substitutions.e = new Symbol(Settings.E);\n                    if ((!('pi' in substitutions)))\n                        substitutions.pi = new Symbol(Settings.PI);\n                }\n\n                var Q = [];\n                for (var i = 0, l = rpn.length; i < l; i++) {\n                    var e = rpn[i]; \n\n                    //Arrays indicate a new scope so parse that out\n                    if (Array.isArray(e)) {\n                        e = this.parseRPN(e, substitutions);\n                    }\n\n                    if(e) {\n                        if (e.type === Token.OPERATOR) {\n                            if (e.is_prefix || e.postfix)\n                                //resolve the operation assocated with the prefix\n                                Q.push(e.operation(Q.pop()));\n                            else {\n                                var b = Q.pop();\n                                var a = Q.pop();\n                                //Throw an error if the RH value is empty. This cannot be a postfix since we already checked\n                                if (typeof a === 'undefined')\n                                    throw new OperatorError(e + ' is not a valid postfix operator at ' + e.column);\n\n                                var is_comma = e.action === 'comma';\n                                //convert Sets to Vectors on all operations at this point. Sets are only recognized functions or individually\n                                if(a instanceof Set && !is_comma)\n                                    a = Vector.fromSet(a);\n\n                                if(b instanceof Set && !is_comma)\n                                    b = Vector.fromSet(b);\n\n                                //call all the pre-operators \n                                this.callPeekers('pre_operator', a, b, e);\n                                \n                                var ans = _[e.action](a, b);\n                                \n                                //call all the pre-operators\n                                this.callPeekers('post_operator', ans, a, b, e);\n                                \n                                Q.push(ans);\n                            }\n                        }\n                        else if (e.type === Token.FUNCTION) {\n                            var args = Q.pop();\n                            var parent = args.parent; //make a note of the parent\n                            if (!(args instanceof Collection))\n                                args = Collection.create(args);\n                            //the return value may be a vector. If it is then we check\n                            //Q to see if there's another vector on the stack. If it is then\n                            //we check if has elements. If it does then we know that we're dealing\n                            //with an \"getter\" object and return the requested values\n\n                            //call the function. This is the _.callfunction method in nerdamer\n                            //call the function. This is the _.callfunction method in nerdamer\n                            var fn_name = e.value;\n                            var fn_args = args.getItems();\n                            \n                            //call the pre-function peekers\n                            this.callPeekers('pre_function', fn_name, fn_args);\n                            \n                            var ret = _.callfunction(fn_name, fn_args);                             \n                            \n                            //call the post-function peekers\n                            this.callPeekers('post_function', ret, fn_name, fn_args);\n                            \n                            var last = Q[Q.length - 1];\n                            var next = rpn[i + 1];\n                            var next_is_comma = next && next.type === Token.OPERATOR && next.value === ',';\n\n                            if (!next_is_comma && ret instanceof Vector && last && last.elements && !(last instanceof Collection)) {\n                                //remove the item from the queue\n                                var item = Q.pop();\n\n                                var getter = ret.elements[0];\n                                //check if it's symbolic. If so put it back and add the item to the stack\n                                if (!getter.isConstant()) {\n                                    item.getter = getter;\n                                    Q.push(item);\n                                    Q.push(ret);\n                                }\n                                else if (getter instanceof Slice) {\n                                    //if it's a Slice return the slice\n                                    Q.push(Vector.fromArray(item.elements.slice(getter.start, getter.end)));\n                                }\n                                else {\n                                    var index = Number(getter);\n                                    var il = item.elements.length;\n                                    //support for negative indices\n                                    if (index < 0)\n                                        index = il + index;\n                                    //it it's still out of bounds\n                                    if (index < 0 || index >= il) //index should no longer be negative since it's been reset above\n                                        //range error\n                                        throw new OutOfRangeError('Index out of range ' + (e.column + 1));\n                                    \n                                    var element = item.elements[index];\n                                    //cyclic but we need to mark this for future reference\n                                    item.getter = index;\n                                    element.parent = item; \n                                    \n                                    Q.push(element);\n                                }\n                            }\n                            else {\n                                //extend the parent reference\n                                if(parent)\n                                    ret.parent = parent;\n                                Q.push(ret);\n                            }\n\n                        }\n                        else {\n                            var subbed;\n                            var v = e.value;\n\n                            if (v in Settings.ALIASES)\n                                e = _.parse(Settings.ALIASES[e]);\n                            //wrap it in a symbol if need be\n                            else if (e.type === Token.VARIABLE_OR_LITERAL)\n                                e = new Symbol(v);\n                            else if (e.type === Token.UNIT) {\n                                e = new Symbol(v);\n                                e.isUnit = true;\n                            }\n\n                            //make substitutions\n                            //Always constants first. This avoids the being overridden\n                            if (v in _.CONSTANTS) {\n                                subbed = e;\n                                e = new Symbol(_.CONSTANTS[v]);\n                            }\n                            //next substitutions. This allows declared variable to be overridden\n                            //check if the values match to avoid erasing the multiplier. \n                            //Example:/e = 3*a. substutiting a for a will wipe out the multiplier.\n                            else if (v in substitutions && v !== substitutions[v].value) {\n                                subbed = e;\n                                e = substitutions[v].clone();\n                            }\n                            //next declare variables\n                            else if (v in VARS) {\n                                subbed = e;\n                                e = VARS[v].clone();\n                            }\n                            //make notation of what it was before\n                            if (subbed)\n                                e.subbed = subbed;\n\n                            Q.push(e);\n                        }\n                    }\n                }\n\n                return Q[0];\n            }\n            catch(error) {\n                throw new ParseError(error.message+': '+e.column);\n            }\n        };\n        /**\n         * This is the method that triggers the parsing of the string. It generates a parse tree but processes \n         * it right away. The operator functions are called when their respective operators are reached. For instance\n         * + with cause this.add to be called with the left and right hand values. It works by walking along each \n         * character of the string and placing the operators on the stack and values on the output. When an operator\n         * having a lower order than the last is reached then the stack is processed from the last operator on the \n         * stack.\n         * @param {String} token\n         */\n\n        function Node(token) {\n            this.type = token.type;\n            this.value = token.value;\n            //the incoming token may already be a Node type\n            this.left = token.left;\n            this.right = token.right;\n        }\n\n        Node.prototype.toString = function () {\n            var left = this.left ? this.left.toString() + '---' : '';\n            var right = this.right ? '---' + this.right.toString() : '';\n            return left + '(' + this.value + ')' + right;\n        };\n\n        Node.prototype.toHTML = function (depth, indent) {\n            depth = depth || 0;\n            indent = typeof indent === 'undefined' ? 4 : indent;\n            var tab = function (n) {\n                return ' '.repeat(indent * n);\n            };\n            var html = '';\n            var left = this.left ? tab(depth + 1) + '<li>\\n' + this.left.toHTML(depth + 2, indent) + tab(depth + 1) + '</li> \\n' : '';\n            var right = this.right ? tab(depth + 1) + '<li>\\n' + this.right.toHTML(depth + 2, indent) + tab(depth + 1) + '</li>\\n' : '';\n            var html = tab(depth) + '<div class=\"' + this.type.toLowerCase() + '\"><span>' + this.value + '</span></div>' + tab(depth) + '\\n';\n            if (left || right) {\n                html += tab(depth) + '<ul>\\n' + left + right + tab(depth) + '</ul>\\n';\n            }\n            html += '';\n            return html;\n        };\n\n        this.tree = function (tokens) {\n            var Q = [];\n            for (var i = 0; i < tokens.length; i++) {\n                var e = tokens[i];\n                //Arrays indicate a new scope so parse that out\n                if (Array.isArray(e)) {\n                    e = this.tree(e);\n                    //if it's a comma then it's just arguments\n                    Q.push(e);\n                    continue;\n                }\n                if (e.type === Token.OPERATOR) {\n                    if (e.is_prefix || e.postfix) {\n                        //prefixes go to the left, postfix to the right\n                        var location = e.is_prefix ? 'left' : 'right';\n                        var last = Q.pop();\n                        e = new Node(e);\n                        e[location] = last;\n                        Q.push(e);\n                    }\n                    else {\n                        e = new Node(e);\n                        e.right = Q.pop();\n                        e.left = Q.pop();\n                        Q.push(e);\n                    }\n                }\n                else if (e.type === Token.FUNCTION) {\n                    e = new Node(e);\n                    var args = Q.pop();\n                    e.right = args;\n                    if (e.value === 'object') {\n                        //check if Q has a value\n                        var last = Q[Q.length - 1];\n                        if (last) {\n                            while (last.right) {\n                                last = last.right;\n                            }\n                            last.right = e;\n                            continue;\n                        }\n                    }\n\n                    Q.push(e);\n                }\n                else {\n                    Q.push(new Node(e));\n                }\n            }\n\n            return Q[0];\n        };\n        this.parse = function (e, substitutions) {\n            e = prepare_expression(e);\n            substitutions = substitutions || {};\n            //three passes but easier to debug\n            var tokens = this.tokenize(e);\n            var rpn = this.toRPN(tokens);\n            return this.parseRPN(rpn, substitutions);\n        };\n        /**\n         * TODO: Switch to Parser.tokenize for this method\n         * Reads a string into an array of Symbols and operators\n         * @param {String} expression_string\n         * @returns {Array}\n         */\n        this.toObject = function (expression_string) {\n            var objectify = function (tokens) {\n                var output = [];\n                for (var i = 0, l = tokens.length; i < l; i++) {\n                    var token = tokens[i];\n                    var v = token.value;\n                    if (token.type === Token.VARIABLE_OR_LITERAL) {\n                        output.push(new Symbol(v));\n                    }\n                    else if (token.type === Token.FUNCTION) {\n                        //jump ahead since the next object are the arguments\n                        i++;\n                        //create a symbolic function and stick it on output\n                        var f = _.symfunction(v, objectify(tokens[i]));\n                        f.isConversion = true;\n                        output.push(f);\n                    }\n                    else if (token.type === Token.OPERATOR) {\n                        output.push(v);\n                    }\n                    else {\n                        output.push(objectify(token));\n                    }\n                }\n\n                return output;\n            };\n            return objectify(_.tokenize(expression_string));\n        };\n        //helper method for toTeX\n        var chunkAtCommas = function (arr) {\n            var j, k = 0, chunks = [[]];\n            for (var j = 0, l = arr.length; j < l; j++) {\n                if (arr[j] === ',') {\n                    k++;\n                    chunks[k] = [];\n                }\n                else {\n                    chunks[k].push(arr[j]);\n                }\n            }\n            return chunks;\n        };\n        //helper method for toTeX\n        var rem_brackets = function (str) {\n            return str.replace(/^\\\\left\\((.+)\\\\right\\)$/g, function (str, a) {\n                if (a)\n                    return a;\n                return str;\n            });\n        };\n        /*\n         * Convert expression or object to LaTeX\n         * @param {String} expression_or_obj\n         * @param {object} opt\n         * @returns {String}\n         */\n        this.toTeX = function (expression_or_obj, opt) {\n            opt = opt || {};\n            var obj = typeof expression_or_obj === 'string' ? this.toObject(expression_or_obj) : expression_or_obj,\n                    TeX = [],\n                    cdot = typeof opt.cdot === 'undefined' ? '\\\\cdot' : opt.cdot; //set omit cdot to true by default\n\n            if (isArray(obj)) {\n                var nobj = [], a, b;\n                //first handle ^\n                for (var i = 0; i < obj.length; i++) {\n                    a = obj[i];\n\n                    if (obj[i + 1] === '^') {\n                        b = obj[i + 2];\n                        nobj.push(LaTeX.braces(this.toTeX([a])) + '^' + LaTeX.braces(this.toTeX([b])));\n                        i += 2;\n                    }\n                    else\n                        nobj.push(a);\n                }\n                obj = nobj;\n            }\n\n            for (var i = 0, l = obj.length; i < l; i++) {\n                var e = obj[i];\n                //convert * to cdot\n                if (e === '*') {\n                    e = cdot;\n                }\n\n                if (isSymbol(e)) {\n                    if (e.group === FN) {\n                        var fname = e.fname, f;\n\n                        if (fname === SQRT)\n                            f = '\\\\sqrt' + LaTeX.braces(this.toTeX(e.args));\n                        else if (fname === ABS)\n                            f = LaTeX.brackets(this.toTeX(e.args), 'abs');\n                        else if (fname === PARENTHESIS)\n                            f = LaTeX.brackets(this.toTeX(e.args), 'parens');\n                        else if (fname === Settings.LOG10) {\n                            f = '\\\\'+Settings.LOG10_LATEX+'\\\\left( ' + this.toTeX(e.args) + '\\\\right)';\n                        }\n                        else if (fname === 'integrate') {\n                            /* Retrive [Expression, x] */\n                            var chunks = chunkAtCommas(e.args);\n                            /* Build TeX */\n                            var expr = LaTeX.braces(this.toTeX(chunks[0])),\n                                    dx = this.toTeX(chunks[1]);\n                            f = '\\\\int ' + expr + '\\\\, d' + dx;\n                        }\n                        else if (fname === 'defint') {\n                            var chunks = chunkAtCommas(e.args),\n                                    expr = LaTeX.braces(this.toTeX(chunks[0])),\n                                    dx = this.toTeX(chunks[3]),\n                                    lb = this.toTeX(chunks[1]),\n                                    ub = this.toTeX(chunks[2]);\n                            f = '\\\\int\\\\limits_{' + lb + '}^{' + ub + '} ' + expr + '\\\\, d' + dx;\n\n                        }\n                        else if (fname === 'diff') {\n                            var chunks = chunkAtCommas(e.args);\n                            var dx = '', expr = LaTeX.braces(this.toTeX(chunks[0]));\n                            /* Handle cases: one argument provided, we need to guess the variable, and assume n = 1 */\n                            if (chunks.length === 1) {\n                                var vars = [];\n                                for (j = 0; j < chunks[0].length; j++) {\n                                    if (chunks[0][j].group === 3) {\n                                        vars.push(chunks[0][j].value);\n                                    }\n                                }\n                                vars.sort();\n                                dx = vars.length > 0 ? ('\\\\frac{d}{d ' + vars[0] + '}') : '\\\\frac{d}{d x}';\n                            }\n                            /* If two arguments, we have expression and variable, we assume n = 1 */\n                            else if (chunks.length === 2) {\n                                dx = '\\\\frac{d}{d ' + chunks[1] + '}';\n                            }\n                            /* If we have more than 2 arguments, we assume we've got everything */\n                            else {\n                                dx = '\\\\frac{d^{' + chunks[2] + '}}{d ' + this.toTeX(chunks[1]) + '^{' + chunks[2] + '}}';\n                            }\n\n                            f = dx + '\\\\left(' + expr + '\\\\right)';\n\n                        }\n                        else if (fname === 'sum' || fname === 'product') {\n                            // Split e.args into 4 parts based on locations of , symbols.\n                            var argSplit = [[], [], [], []], j = 0, i;\n                            for (i = 0; i < e.args.length; i++) {\n                                if (e.args[i] === ',') {\n                                    j++;\n                                    continue;\n                                }\n                                argSplit[j].push(e.args[i]);\n                            }\n                            // Then build TeX string.\n                            f = (fname === 'sum' ? '\\\\sum_' : '\\\\prod_') + LaTeX.braces(this.toTeX(argSplit[1]) + ' = ' + this.toTeX(argSplit[2]));\n                            f += '^' + LaTeX.braces(this.toTeX(argSplit[3])) + LaTeX.braces(this.toTeX(argSplit[0]));\n                        }\n                        else if (fname === 'limit') {\n                            var args = chunkAtCommas(e.args).map(function (x) {\n                                if (Array.isArray(x))\n                                    return _.toTeX(x.join(''));\n                                return _.toTeX(String(x));\n                            });\n                            f = '\\\\lim_' + LaTeX.braces(args[1] + '\\\\to ' + args[2]) + ' ' + LaTeX.braces(args[0]);\n                        }\n                        else if (fname === FACTORIAL || fname === DOUBLEFACTORIAL)\n                            f = this.toTeX(e.args) + (fname === FACTORIAL ? '!' : '!!');\n                        else {\n                            f = LaTeX.latex(e);\n                            //f = '\\\\mathrm'+LaTeX.braces(fname.replace(/_/g, '\\\\_')) + LaTeX.brackets(this.toTeX(e.args), 'parens');\n                        }\n\n                        TeX.push(f);\n                    }\n                    else\n                        TeX.push(LaTeX.latex(e));\n                }\n                else if (isArray(e)) {\n                    TeX.push(LaTeX.brackets(this.toTeX(e)));\n                }\n                else {\n                    if (e === '/')\n                        TeX.push(LaTeX.frac(rem_brackets(TeX.pop()), rem_brackets(this.toTeX([obj[++i]]))));\n                    else\n                        TeX.push(e);\n                }\n            }\n\n            return TeX.join(' ');\n        };\n\n//Parser.functions ==============================================================\n        /* Although parens is not a \"real\" function it is important in some cases when the \n         * symbol must carry parenthesis. Once set you don't have to worry about it anymore\n         * as the parser will get rid of it at the first opportunity\n         */\n        function parens(symbol) {\n            if (Settings.PARSE2NUMBER) {\n                return symbol;\n            }\n            return _.symfunction('parens', [symbol]);\n        }\n\n        function abs(symbol) {\n            \n            //|-∞| = ∞ \n            if(symbol.isInfinity) {\n                return Symbol.infinity();\n            }\n            if (symbol.multiplier.lessThan(0))\n                symbol.multiplier.negate();\n            \n            if (symbol.isImaginary()) {\n                var re = symbol.realpart();\n                var im = symbol.imagpart();\n                if (re.isConstant() && im.isConstant())\n                    return sqrt(_.add(_.pow(re, new Symbol(2)), _.pow(im, new Symbol(2))));\n            }\n            else if (isNumericSymbol(symbol) || even(symbol.power)) {\n                return symbol;\n            }\n            \n            if (symbol.isComposite()) {\n                var ms = [];\n                symbol.each(function (x) {\n                    ms.push(x.multiplier);\n                });\n                var gcd = Math2.QGCD.apply(null, ms);\n                if (gcd.lessThan(0)) {\n                    symbol.multiplier = symbol.multiplier.multiply(new Frac(-1));\n                    symbol.distributeMultiplier();\n                }\n            }\n            \n            //convert |n*x| to n*|x|\n            var m = _.parse(symbol.multiplier);\n            symbol.toUnitMultiplier();\n            \n            return _.multiply(m, _.symfunction(ABS, [symbol]));\n        }\n        /**\n         * The factorial function\n         * @param {Symbol} symbol\n         * @return {Symbol}\n         */\n        function factorial(symbol) {\n            var retval;\n            if (isVector(symbol)) {\n                var V = new Vector();\n                symbol.each(function (x, i) {\n                    //i start at one.\n                    V.set(i - 1, factorial(x));\n                });\n                return V;\n            }\n            if (isMatrix(symbol)) {\n                var M = new Matrix();\n                symbol.each(function (x, i, j) {\n                    //i start at one.\n                    M.set(i, j, factorial(x));\n                });\n                return M;\n            }\n            if (Settings.PARSE2NUMBER && symbol.isConstant()) {\n                if (isInt(symbol)) {\n                    retval = Math2.bigfactorial(symbol);\n                }\n                else {\n                    retval = Math2.gamma(symbol.multiplier.add(new Frac(1)).toDecimal());\n                }\n\n                retval = bigConvert(retval);\n                return retval;\n            }\n            else if (symbol.isConstant()) {\n                var den = symbol.getDenom();\n                if (den.equals(2)) {\n                    var num = symbol.getNum();\n                    var a, b, c, n;\n\n                    if (!symbol.multiplier.isNegative()) {\n                        n = _.add(num, new Symbol(1)).multiplier.divide(new Frac(2));\n                        a = Math2.bigfactorial(new Frac(2).multiply(n));\n                        b = _.pow(new Symbol(4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\n                    }\n                    else {\n                        n = _.subtract(num.negate(), new Symbol(1)).multiplier.divide(new Frac(2));\n                        a = _.pow(new Symbol(-4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\n                        b = Math2.bigfactorial(new Frac(2).multiply(n));\n                    }\n                    c = a.divide(b);\n                    return _.multiply(_.parse('sqrt(pi)'), new Symbol(c));\n                }\n            }\n            return _.symfunction(FACTORIAL, [symbol]);\n        }\n        ;\n        /**\n         * Returns the continued fraction of a number\n         * @param {Symbol} symbol\n         * @param {Symbol} n\n         * @returns {Symbol}\n         */\n        function continued_fraction(symbol, n) {\n            var _symbol = evaluate(symbol);\n            if (_symbol.isConstant()) {\n                var cf = Math2.continuedFraction(_symbol, n);\n                //convert the fractions array to a new Vector\n                var fractions = Vector.fromArray(cf.fractions.map(function (x) {\n                    return new Symbol(x);\n                }));\n                return Vector.fromArray([new Symbol(cf.sign), new Symbol(cf.whole), fractions]);\n            }\n            return _.symfunction('continued_fraction', arguments);\n        }\n        /**\n         * Returns the error function\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function erf(symbol) {\n            var _symbol = evaluate(symbol);\n\n            if (_symbol.isConstant()) {\n                return Math2.erf(_symbol);\n            }\n            else if(_symbol.isImaginary()) {\n                return complex.erf(symbol);\n            }\n            return _.symfunction('erf', arguments);\n        }\n        ;\n        /**\n         * The mod function\n         * @param {Symbol} symbol1\n         * @param {Symbol} symbol2\n         * @returns {Symbol}\n         */\n        function mod(symbol1, symbol2) {\n            if (symbol1.isConstant() && symbol2.isConstant()) {\n                var retval = new Symbol(1);\n                retval.multiplier = retval.multiplier.multiply(symbol1.multiplier.mod(symbol2.multiplier));\n                return retval;\n            }\n            //try to see if division has remainder of zero\n            var r = _.divide(symbol1.clone(), symbol2.clone());\n            if (isInt(r))\n                return new Symbol(0);\n            return _.symfunction('mod', [symbol1, symbol2]);\n        }\n        /**\n         * A branghing function\n         * @param {Boolean} condition\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        function IF(condition, a, b) {\n            if (typeof condition !== 'boolean')\n                if (isNumericSymbol(condition))\n                    condition = !!Number(condition);\n            if (condition)\n                return a;\n            return b;\n        }\n        /**\n         * \n         * @param {Matrix|Vector|Set|Collection} obj\n         * @param {Symbol} item\n         * @returns {Boolean}\n         */\n        function is_in(obj, item) {\n            if(isMatrix(obj)) {\n                for(var i=0, l=obj.rows(); i<l; i++) {\n                    for(var j=0, l2=obj.cols(); j<l2; j++) {\n                        var element = obj.elements[i][j];\n                        if(element.equals(item))\n                            return new Symbol(1);\n                    }\n                }\n            }\n            else if(obj.elements) {\n                for(var i=0, l=obj.elements.length; i<l; i++) {\n                    if(obj.elements[i].equals(item))\n                        return new Symbol(1);\n                }\n            }\n            \n            return new Symbol(0);\n        }\n        \n        /**\n         * A symbolic extension for sinc\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function sinc(symbol) {\n            if (Settings.PARSE2NUMBER) {\n                if (symbol.isConstant()) {\n                    return new Symbol(Math2.sinc(symbol));\n                }\n                return _.parse(format('sin({0})/({0})', symbol));\n            }\n            return _.symfunction('sinc', [symbol]);\n        }\n\n        /**\n         * A symbolic extension for exp. This will auto-convert all instances of exp(x) to e^x.\n         * Thanks @ Happypig375\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function exp(symbol) {\n            return _.parse(format('e^({0})', symbol));\n        }\n        \n        /**\n         * Converts value degrees to radians\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function radians(symbol) {\n            return _.parse(format('({0})*pi/180', symbol));\n        }\n        \n        /**\n         * Converts value from radians to degrees\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function degrees(symbol) {\n            return _.parse(format('({0})*180/pi', symbol));\n        }\n        \n        function nroots(symbol) {\n            var a, b;\n            if(symbol.group === FN && symbol.fname === '') {\n                a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\n                b = _.parse(symbol.power);\n            }\n            else if(symbol.group === P) {\n                a = _.parse(symbol.value);\n                b = _.parse(symbol.power);\n            }\n            \n            if(a && b && a.group === N && b.group === N) {\n                var _roots = [];\n                var parts = Symbol.toPolarFormArray(symbol);\n                var r = _.parse(a).abs().toString();\n                //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\n                var x = arg(a).toString();\n                var n = b.multiplier.den.toString();\n                var p = b.multiplier.num.toString();\n                \n                var formula = \"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\";\n                for(var i=0; i<n; i++) {\n                    var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\n                    _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\n                }\n                return Vector.fromArray(_roots);\n            }\n            else if(symbol.isConstant(true)) {\n                var sign = symbol.sign();\n                var x = evaluate(symbol.abs());\n                var root = _.sqrt(x);\n                \n                var _roots = [root.clone(), root.negate()];\n                \n                if(sign < 0)\n                    _roots = _roots.map(function(x) {\n                        return _.multiply(x, Symbol.imaginary());\n                    });\n            }\n            else {\n                _roots = [_.parse(symbol)];\n            }\n            \n            return Vector.fromArray(_roots);\n        }\n        \n        /**\n         * Rationalizes a symbol\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function rationalize(symbol) {\n            if(symbol.isComposite()) {\n                var retval = new Symbol(0);\n                var num, den, retnum, retden, a, b, n, d;\n                symbol.each(function(x) {\n                    num = x.getNum();\n                    den = x.getDenom();\n                    retnum = retval.getNum();\n                    retden = retval.getDenom();\n                    a = _.multiply(den, retnum);\n                    b = _.multiply(num, retden);\n                    n = _.expand(_.add(a, b));\n                    d = _.multiply(retden, den);\n                    retval = _.divide(n, d);\n                }, true);\n                \n                return retval;\n            }\n            return symbol;\n        }\n        \n        /**\n         * The square root function\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function sqrt(symbol) {\n            if (symbol.fname === '' && symbol.power.equals(1))\n                symbol = symbol.args[0];\n\n            var is_negative = symbol.multiplier.sign() < 0;\n\n            if (Settings.PARSE2NUMBER) {\n                if (symbol.isConstant() && !is_negative) {\n                    return new Symbol(Math.sqrt(symbol.multiplier.toDecimal()));\n                }\n                else if (symbol.isImaginary()) {\n                    return complex.sqrt(symbol);\n                }\n                else if(symbol.group === S) {\n                    return _.symfunction('sqrt', [symbol]);\n                }\n            }\n\n            var img, retval,\n                    isConstant = symbol.isConstant();\n\n            if (symbol.group === CB && symbol.isLinear()) {\n                var m = sqrt(Symbol(symbol.multiplier));\n                for (var s in symbol.symbols) {\n                    var x = symbol.symbols[s];\n                    m = _.multiply(m, sqrt(x));\n                }\n\n                retval = m;\n            }\n            //if the symbol is already sqrt then it's that symbol^(1/4) and we can unwrap it\n            else if (symbol.fname === SQRT) {\n                var s = symbol.args[0];\n                var ms = symbol.multiplier;\n                s.setPower(symbol.power.multiply(new Frac(0.25)));\n                retval = s;\n                //grab the multiplier\n                if (!ms.equals(1))\n                    retval = _.multiply(sqrt(_.parse(ms)), retval);\n            }\n            //if the symbol is a fraction then we don't keep can unwrap it. For instance\n            //no need to keep sqrt(x^(1/3))\n            else if (!symbol.power.isInteger()) {\n                symbol.setPower(symbol.power.multiply(new Frac(0.5)));\n                retval = symbol;\n            }\n            else if(symbol.multiplier < 0 && symbol.group === S) {\n                var a = _.parse(symbol.multiplier).negate();\n                var b = _.parse(symbol).toUnitMultiplier().negate();\n                retval = _.multiply(_.symfunction(Settings.SQRT, [b]), sqrt(a));\n            }\n            else {\n                //Related to issue #401. Since sqrt(a)*sqrt(b^-1) relates in issues, we'll change the form\n                //to sqrt(a)*sqrt(b)^1 for better simplification\n                //the sign of the power\n                var sign = symbol.power.sign();\n                //remove the sign\n                symbol.power = symbol.power.abs();\n\n                //if the symbols is imagary then we place in the imaginary part. We'll return it \n                //as a product\n                if (isConstant && symbol.multiplier.lessThan(0)) {\n                    img = Symbol.imaginary();\n                    symbol.multiplier = symbol.multiplier.abs();\n                }\n\n                var q = symbol.multiplier.toDecimal(),\n                        qa = Math.abs(q),\n                        t = Math.sqrt(qa);\n\n                var m;\n                //it's a perfect square so take the square\n                if (isInt(t)) {\n                    m = new Symbol(t);\n                }\n                else if (isInt(q)) {\n                    var factors = Math2.ifactor(q);\n                    var tw = 1;\n                    for (var x in factors) {\n                        var n = factors[x],\n                                nn = (n - (n % 2)); //get out the whole numbers\n                        if (nn) { //if there is a whole number ...\n                            var w = Math.pow(x, nn);\n                            tw *= Math.pow(x, nn / 2); //add to total wholes\n                            q /= w; //reduce the number by the wholes\n                        }\n                    }\n                    m = _.multiply(_.symfunction(SQRT, [new Symbol(q)]), new Symbol(tw));\n                }\n                else {\n                    //reduce the numerator and denominator using prime factorization\n                    var c = [new Symbol(symbol.multiplier.num), new Symbol(symbol.multiplier.den)];\n                    var r = [new Symbol(1), new Symbol(1)];\n                    var sq = [new Symbol(1), new Symbol(1)];\n                    for (var i = 0; i < 2; i++) {\n                        var n = c[i];\n                        //get the prime factors and loop through each. \n                        pfactor(n).each(function (x) {\n                            x = Symbol.unwrapPARENS(x);\n                            var b = x.clone().toLinear();\n                            var p = Number(x.power);\n                            //We'll consider it safe to use the native Number since 2^1000 is already a pretty huge number\n                            var rem = p % 2; //get the remainder. This will be 1 if 3 since sqrt(n^2) = n where n is positive\n                            var w = (p - rem) / 2; //get the whole numbers of n/2\n                            r[i] = _.multiply(r[i], _.pow(b, new Symbol(w)));\n                            sq[i] = _.multiply(sq[i], sqrt(_.pow(b, new Symbol(rem))));\n                        });\n                    }\n                    m = _.divide(_.multiply(r[0], sq[0]), _.multiply(r[1], sq[1]));\n                }\n\n\n                //strip the multiplier since we already took the sqrt\n                symbol = symbol.toUnitMultiplier(true);\n                //if the symbol is one just return one and not the sqrt function\n                if (symbol.isOne()) {\n                    retval = symbol;\n                }\n                else if (even(symbol.power.toString())) {\n                    //just raise it to the 1/2\n                    retval = _.pow(symbol.clone(), new Symbol(0.5));\n                }\n                else {\n                    retval = _.symfunction(SQRT, [symbol]);\n                }\n\n                //put back the sign that was removed earlier\n                if (sign < 0)\n                    retval.power.negate();\n\n                if (m)\n                    retval = _.multiply(m, retval);\n\n                if (img)\n                    retval = _.multiply(img, retval);\n            }\n\n            if (is_negative && Settings.PARSE2NUMBER)\n                return _.parse(retval);\n            \n            return retval;\n        }\n        \n        /**\n         * The cube root function\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function cbrt(symbol) {\n            if(!symbol.isConstant(true)) {\n                var retval;\n                \n                var n = symbol.power/3;\n                //take the cube root of the multplier\n                var m = _.pow(_.parse(symbol.multiplier), new Symbol(1/3));\n                //strip the multiplier\n                var sym = symbol.toUnitMultiplier();\n                \n                //simplify the power\n                if(isInt(n)) {\n                    retval = _.pow(sym.toLinear(), _.parse(n));\n                }\n                else {\n                    if(sym.group === CB) {\n                        retval = new Symbol(1);\n                        sym.each(function(x) {\n                            retval = _.multiply(retval, cbrt(x));\n                        });\n                    }\n                    else {\n                        retval = _.symfunction('cbrt', [sym]);\n                    }\n                }\n                \n                return _.multiply(m, retval);\n            }\n            return nthroot(symbol, new Symbol(3));\n        }\n        \n        function scientific(symbol, sigfigs) {\n            //Just set the flag and keep it moving. Symbol.toString will deal with how to \n            //display this\n            symbol.scientific = sigfigs || 10;\n            return symbol;\n        }\n\n        /**\n         * \n         * @param {Symbol} num - the number being raised\n         * @param {Symbol} p - the exponent\n         * @param {type} prec - the precision wanted\n         * @param {bool} asbig - true if a bigDecimal is wanted\n         * @returns {Symbol}\n         */\n        function nthroot(num, p, prec, asbig) {\n            //clone p and convert to a number if possible\n            p = evaluate(_.parse(p));\n            \n            //cannot calculate if p = 0. nthroot(0, 0) => 0^(1/0) => undefined\n            if(p.equals(0)) {\n                throw new UndefinedError('Unable to calculate nthroots of zero');\n            }\n            \n            //Stop computation if it negative and even since we have an imaginary result\n            if(num < 0 && even(p)) \n                throw new Error('Cannot calculate nthroot of negative number for even powers');\n            \n            //return non numeric values unevaluated\n            if(!num.isConstant(true)) {\n                return _.symfunction('nthroot', arguments);\n            }\n            \n            //evaluate numeric values\n            if(num.group !== N) {\n                num = evaluate(num);\n            }\n            \n            //default is to return a big value\n            if (typeof asbig === 'undefined')\n                asbig = true;\n            \n            prec = prec || 25;\n            \n            var sign = num.sign();\n            var retval;\n            var ans;\n            \n            if(sign < 0) {\n                num = abs(num); //remove the sign\n            }\n            \n            if (isInt(num) && p.isConstant()) {\n\n                if (num < 18446744073709551616) {\n                    //2^64\n                    ans = Frac.create(Math.pow(num, 1 / p));\n                }\n                else {\n                    ans = Math2.nthroot(num, p);\n                }\n\n                var retval;\n                if (asbig) {\n                    retval =  new Symbol(ans);\n                }\n                retval = new Symbol(ans.toDecimal(prec));\n\n                return _.multiply(new Symbol(sign), retval);\n            }\n        }\n\n        function pfactor(symbol) {\n            //Fix issue #458 | nerdamer(\"sqrt(1-(3.3333333550520926e-7)^2)\").evaluate().text()\n            //More Big Number issues >:(\n            if (symbol.greaterThan(9.999999999998891e+41) || symbol.equals(-1))\n                return symbol;\n            //Fix issue #298\n            if (symbol.equals(Math.PI))\n                return new Symbol(Math.PI);\n            //evaluate the symbol to merge constants\n            symbol = evaluate(symbol.clone());\n\n\n            if (symbol.isConstant()) {\n                var retval = new Symbol(1);\n                var m = symbol.toString();\n                if (isInt(m)) {\n                    var factors = Math2.ifactor(m);\n                    for (var factor in factors) {\n                        var p = factors[factor];\n                        retval = _.multiply(retval, _.symfunction('parens', [new Symbol(factor).setPower(new Frac(p))]));\n                    }\n                }\n                else {\n                    var n = pfactor(new Symbol(symbol.multiplier.num));\n                    var d = pfactor(new Symbol(symbol.multiplier.den));\n                    retval = _.multiply(_.symfunction('parens', [n]), _.symfunction('parens', [d]).invert());\n                }\n            }\n            else\n                retval = _.symfunction('pfactor', arguments);\n            return retval;\n        }\n\n        /**\n         * Get's the real part of a complex number. Return number if real\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function realpart(symbol) {\n            return symbol.realpart();\n        }\n\n        /**\n         * Get's the imaginary part of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function imagpart(symbol) {\n            return symbol.imagpart();\n        }\n\n        /**\n         * Computes the conjugate of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function conjugate(symbol) {\n            var re = symbol.realpart();\n            var im = symbol.imagpart();\n            return _.add(re, _.multiply(im.negate(), Symbol.imaginary()));\n        }\n\n        /**\n         * Returns the arugment of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function arg(symbol) {\n            var re = symbol.realpart();\n            var im = symbol.imagpart();\n            if (re.isConstant() && im.isConstant())\n                return new Symbol(Math.atan2(im, re));\n            return _.symfunction('atan2', [im, re]);\n        }\n\n        /**\n         * Returns the arugment of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function arg(symbol) {\n            var re = symbol.realpart();\n            var im = symbol.imagpart();\n            if (re.isConstant() && im.isConstant()) {\n                if(im.equals(0) && re.equals(-1)) {\n                    return _.parse('pi');\n                }\n                else if(im.equals(1) && re.equals(0)) {\n                    return _.parse('pi/2');\n                }\n                else if(im.equals(1) && re.equals(1)) {\n                    return _.parse('pi/4');\n                }\n                return new Symbol(Math.atan2(im, re));\n            }\n            return _.symfunction('atan2', [im, re]);\n        }\n\n        /**\n         * Returns the polarform of a complex number\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function polarform(symbol) {\n            var p, r, e, theta;\n            p = Symbol.toPolarFormArray(symbol);\n            theta = p[1];\n            r = p[0];\n            e = _.parse(format('e^({0}*({1}))', Settings.IMAGINARY, theta));\n            return _.multiply(r, e);\n        }\n\n        /**\n         * Returns the rectangular form of a complex number. Does not work for symbolic coefficients\n         * @param {Symbol} symbol\n         * @returns {Symbol}\n         */\n        function rectform(symbol) {\n            //TODO: e^((i*pi)/4)\n            var original = symbol.clone();\n            try {\n                var f, p, q, s, h, d, n;\n                f = decompose_fn(symbol, 'e', true);\n                p = _.divide(f.x.power, Symbol.imaginary());\n                q = evaluate(trig.tan(p));\n                s = _.pow(f.a, new Symbol(2));\n                d = q.getDenom(true);\n                n = q.getNum();\n                h = Symbol.hyp(n, d);\n                //check \n                if (h.equals(f.a)) {\n                    return _.add(d, _.multiply(Symbol.imaginary(), n));\n                }\n                else {\n                    return original;\n                }\n            }\n            catch (e) {\n                return original;\n            }\n        }\n\n        function symMinMax(f, args) {\n            args.map(function (x) {\n                x.numVal = evaluate(x).multiplier;\n            });\n            var l, a, b, a_val, b_val;\n            while (true) {\n                l = args.length;\n                if (l < 2)\n                    return args[0];\n                a = args.pop();\n                b = args[l - 2];\n                if (f === 'min' ? a.numVal < b.numVal : a.numVal > b.numVal) {\n                    args.pop();\n                    args.push(a);\n                }\n            }\n        }\n\n        /**\n         * Returns maximum of a set of numbers\n         * @returns {Symbol}\n         */\n        function max() {\n            var args = [].slice.call(arguments);\n            if (allSame(args))\n                return args[0];\n            if (allNumbers(args))\n                return new Symbol(Math.max.apply(null, args));\n            if (Settings.SYMBOLIC_MIN_MAX && allConstants(args))\n                return symMinMax('max', args);\n            return _.symfunction('max', args);\n        }\n\n        /**\n         * Returns minimum of a set of numbers\n         * @returns {Symbol}\n         */\n        function min() {\n            var args = [].slice.call(arguments);\n            if (allSame(args))\n                return args[0];\n            if (allNumbers(args))\n                return new Symbol(Math.min.apply(null, args));\n            if (Settings.SYMBOLIC_MIN_MAX && allConstants(args))\n                return symMinMax('min', args);\n            return _.symfunction('min', args);\n        }\n\n        /**\n         * Returns the sign of a number\n         * @param {Symbol} x\n         * @returns {Symbol}\n         */\n        function sign(x) {\n            if (x.isConstant(true))\n                return new Symbol(Math.sign(evaluate(x)));\n            return _.symfunction('sign', arguments);\n        }\n\n        function sort(symbol, opt) {\n            opt = opt ? opt.toString() : 'asc';\n            var getval = function (e) {\n                if (e.group === N)\n                    return e.multiplier;\n                if (e.group === FN) {\n                    if (e.fname === '')\n                        return getval(e.args[0]);\n                    return e.fname;\n                }\n                if (e.group === S)\n                    return e.power;\n\n                return e.value;\n            };\n            var symbols = isVector(symbol) ? symbol.elements : symbol.collectSymbols();\n            return new Vector(symbols.sort(function (a, b) {\n                var aval = getval(a),\n                        bval = getval(b);\n                if (opt === 'desc')\n                    return bval - aval;\n                return aval - bval;\n            }));\n        }\n\n        /**\n         * The log function\n         * @param {Symbol} symbol\n         * @param {Symbol} base\n         * @returns {Symbol}\n         */\n        function log(symbol, base) {\n            if(symbol.equals(1)) {\n                return new Symbol(0);\n            }\n            \n            var retval;\n            if (symbol.fname === SQRT && symbol.multiplier.equals(1)) {\n                return _.divide(log(symbol.args[0]), new Symbol(2));\n            }\n\n            //log(0) is undefined so complain\n            if (symbol.equals(0)) {\n                throw new UndefinedError(Settings.LOG+'(0) is undefined!');\n            }\n\n            //deal with imaginary values\n            if (symbol.isImaginary()) {\n                return complex.evaluate(symbol, Settings.LOG);\n                /*\n                 var a = format('log(sqrt(({0})^2+({1})^2))-({2})*atan2(({1}),({0}))', symbol.imagpart(), symbol.realpart(), Settings.IMAGINARY),\n                 b = format('({0})*PI/2', Settings.IMAGINARY);\n                 \n                 return _.add(_.parse(a), _.parse(b));\n                 */\n            }\n\n            if (symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\n                /*\n                 var log_sym = Math2.bigLog(symbol.multiplier);\n                 var log_base = Math2.bigLog(base.multiplier);\n                 retval = new Symbol(log_sym.divide());\n                 */\n                var log_sym = Math.log(symbol);\n                var log_base = Math.log(base);\n                retval = new Symbol(log_sym / log_base);\n            }\n            else if (symbol.group === EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\n                symbol.power.negate();\n                //move the negative outside but keep the positive inside :)\n                retval = log(symbol).negate();\n            }\n            else if (symbol.value === 'e' && symbol.multiplier.equals(1)) {\n                var p = symbol.power;\n                retval = isSymbol(p) ? p : new Symbol(p);\n            }\n            else if (symbol.group === FN && symbol.fname === 'exp') {\n                var s = symbol.args[0];\n                if (symbol.multiplier.equals(1))\n                    retval = _.multiply(s, new Symbol(symbol.power));\n                else\n                    retval = _.symfunction(Settings.LOG, [symbol]);\n            }\n            else if (Settings.PARSE2NUMBER && isNumericSymbol(symbol)) {\n                var img_part;\n                if (symbol.multiplier.lessThan(0)) {\n                    symbol.negate();\n                    img_part = _.multiply(new Symbol(Math.PI), new Symbol('i'));\n                }\n                retval = new Symbol(Math.log(symbol.multiplier.toDecimal()));\n                if (img_part)\n                    retval = _.add(retval, img_part);\n            }\n            else {\n                var s;\n                if (!symbol.power.equals(1)) {\n                    s = symbol.group === EX ? symbol.power : new Symbol(symbol.power);\n                    symbol.toLinear();\n                }\n                //log(a,a) = 1 since the base is allowed to be changed. \n                //This was pointed out by Happypig375 in issue #280\n                if (arguments.length > 1 && allSame(arguments))\n                    retval = new Symbol(1);\n                else\n                    retval = _.symfunction(Settings.LOG, arguments);\n\n                if (s)\n                    retval = _.multiply(s, retval);\n            }\n            return retval;\n        }\n\n        /**\n         * Round a number up to s decimal places\n         * @param {Number} x\n         * @param {int} s - the number of decimal places\n         * @returns {undefined}\n         */\n        function round(x, s) {\n            var sIsConstant = s && s.isConstant() || typeof s === 'undefined';\n            if (x.isConstant() && sIsConstant) {\n                var v, e, exp, retval;\n                v = x;\n                //round the coefficient of then number but not the actual decimal value\n                //we know this because a negative number was passed\n                if (s && s.lessThan(0)) {\n                    s = abs(s);\n                    //convert the number to exponential form\n                    e = Number(x).toExponential().toString().split('e');\n                    //point v to the coefficient of then number\n                    v = e[0];\n                    //set the expontent\n                    exp = e[1];\n                }\n                //round the number to the requested precision\n                retval = new Symbol(nround(v, Number(s || 0)));\n                //if there's a exponent then put it back\n                return _.multiply(retval, _.pow(new Symbol(10), new Symbol(exp || 0)))\n            }\n\n\n            return _.symfunction('round', arguments);\n        }\n\n        /**\n         * Gets the quadrant of the trig function\n         * @param {Frac} m\n         * @returns {Int}\n         */\n        function getQuadrant(m) {\n            var v = m % 2, quadrant;\n\n            if (v < 0)\n                v = 2 + v; //put it in terms of pi\n\n            if (v >= 0 && v <= 0.5)\n                quadrant = 1;\n            else if (v > 0.5 && v <= 1)\n                quadrant = 2;\n            else if (v > 1 && v <= 1.5)\n                quadrant = 3;\n            else\n                quadrant = 4;\n            return quadrant;\n        }\n\n        /*\n         * Serves as a bridge between numbers and bigNumbers\n         * @param {Frac|Number} n\n         * @returns {Symbol} \n         */\n        function bigConvert(n) {\n            if (!isFinite(n)) {\n                var sign = Math.sign(n);\n                var r = new Symbol(String(Math.abs(n)));\n                r.multiplier = r.multiplier.multiply(new Frac(sign));\n                return r;\n            }\n            if (isSymbol(n))\n                return n;\n            if (typeof n === 'number') {\n                try {\n                    n = Frac.simple(n);\n                }\n                catch (e) {\n                    n = new Frac(n);\n                }\n            }\n\n            var symbol = new Symbol(0);\n            symbol.multiplier = n;\n            return symbol;\n        }\n        ;\n\n        function clean(symbol) {\n            // handle functions with numeric values\n            // handle denominator within denominator\n            // handle trig simplifications\n            var g = symbol.group, retval;\n            //Now let's get to work\n            if (g === CP) {\n                var num = symbol.getNum(),\n                        den = symbol.getDenom() || new Symbol(1),\n                        p = Number(symbol.power),\n                        factor = new Symbol(1);\n                if (Math.abs(p) === 1) {\n                    den.each(function (x) {\n                        if (x.group === CB) {\n                            factor = _.multiply(factor, clean(x.getDenom()));\n                        }\n                        else if (x.power.lessThan(0)) {\n                            factor = _.multiply(factor, clean(x.clone().toUnitMultiplier()));\n                        }\n                    });\n\n                    var new_den = new Symbol(0);\n                    //now divide out the factor and add to new den\n                    den.each(function (x) {\n                        new_den = _.add(_.divide(x, factor.clone()), new_den);\n                    });\n\n                    factor.invert(); //invert so it can be added to the top\n                    var new_num;\n                    if (num.isComposite()) {\n                        new_num = new Symbol(0);\n                        num.each(function (x) {\n                            new_num = _.add(_.multiply(clean(x), factor.clone()), new_num);\n                        });\n                    }\n                    else\n                        new_num = _.multiply(factor, num);\n\n                    retval = _.divide(new_num, new_den);\n                }\n            }\n            else if (g === CB) {\n                retval = new Symbol(1);\n                symbol.each(function (x) {\n                    retval = _.multiply(retval, _.clean(x));\n                });\n            }\n            else if (g === FN) {\n                if (symbol.args.length === 1 && symbol.args[0].isConstant())\n                    retval = block('PARSE2NUMBER', function () {\n                        return _.parse(symbol);\n                    }, true);\n            }\n\n            if (!retval)\n                retval = symbol;\n\n            return retval;\n        }\n\n        /**\n         * Expands a symbol\n         * @param symbol\n         */\n        function expand(symbol) {\n            //deal with parenthesis\n            if (symbol.group === FN && symbol.fname === '') {\n                return _.expand(symbol.args[0]);\n            }\n\n            //TODO - some test need to be verified in order to implement this\n            /*\n             if(symbol.group === FN) {\n             symbol.args[0] = _.expand(symbol.args[0]);\n             symbol.updateHash();\n             return symbol;\n             }\n             */\n\n            if (!symbol.symbols)\n                return symbol; //nothing to do\n\n            var original = symbol.clone();\n            try {\n\n                if (!symbol.symbols)\n                    return symbol;\n\n                //expand all the symbols\n                for (var s in symbol.symbols) {\n                    var x = symbol.symbols[s];\n                    symbol.symbols[s] = expand(x);\n                }\n\n                symbol = _.parse(symbol);\n\n                var p = symbol.power,\n                        m = symbol.multiplier.clone(),\n                        pn = Number(p);\n                if (isInt(pn) && pn > 0 && symbol.isComposite()) {\n                    var f = new Symbol(0);\n                    //we loop through the f and make sure that it's fully expanded\n                    for (var x in symbol.symbols) {\n                        var sym = symbol.symbols[x];\n                        if (sym.power.greaterThan(1))\n                            sym = _.expand(sym);\n                        f = _.add(f, sym);\n                    }\n\n                    //assume (a+b)^3 = (a+b)(a+b)(a+b) = (b^2+2*a*b+a^2)(a+b)\n                    //we have n=p-1=2 iterations where p=3 in this case\n                    var n = pn - 1;\n                    //Initiate with the first term. Remember that we have p-1 iterations because\n                    //the first iteration is equal to P where p is the polynomial\n                    var result = f.clone(); //initiate this as the first term\n                    //the first loop is the top iterator and remains untouched. No sub-symbols\n                    //from this symbol are allowed to be touched\n                    for (var i = 0; i < n; i++) {\n                        var t = new Symbol(0);\n                        for (var x in f.symbols) {\n                            var a = f.symbols[x];\n                            //we now loop through the \n                            for (var y in result.symbols) {\n                                var b = _.multiply(a.clone(), result.symbols[y]);\n                                //the result must always be a composite. If not expand\n                                if (b.group === CB)\n                                    b = _.expand(b);\n                                t = _.add(t, b);\n                            }\n                        }\n                        ;\n                        result = t;\n                    }\n\n                    //put back the multiplier\n                    if (!m.equals(1)) {\n                        for (var s in result.symbols) {\n                            var x = result.symbols[s];\n                            x.multiplier = x.multiplier.multiply(m);\n                            if (x.isComposite())\n                                x.distributeMultiplier();\n                            symbol.symbols[s] = x;\n                        }\n                    }\n\n                    return result;\n                }\n                else if (symbol.group === CB) {\n                    //check if the symbol has composites\n                    var hascomposites = false,\n                            sp = symbol.power.clone(),\n                            sign = symbol.power.sign();\n\n                    for (var x in symbol.symbols) {\n                        var sub = symbol.symbols[x];\n                        if (sub.isComposite()) {\n                            hascomposites = true;\n                            break;\n                        }\n\n                        if (isSymbol(sub.power) || isSymbol(sp)) {\n                            sub.power = _.multiply(sub.power, Symbol(sp));\n                            sub.group = EX;\n                        }\n                        else\n                            sub.power = sub.power.multiply(sp);\n                    }\n\n                    symbol.toLinear();\n\n                    //I'm going to be super lazy here and take the easy way out. TODO: do this without re-parsing\n                    symbol = _.parse(symbol.text());\n\n                    if (!hascomposites)\n                        return symbol; //nothing to do here\n\n                    var result = new Symbol(0);\n                    var composites = [],\n                            non_composites = new Symbol(symbol.multiplier);\n\n                    //sort them out\n                    for (var s in symbol.symbols) {\n                        var x = symbol.symbols[s];\n\n                        if (x.group === EX)\n                            continue;\n                        if (x.isComposite()) {\n                            var p = x.power, isDenom = false;\n                            ;\n                            if (isInt(p)) {\n                                if (p < 0) {\n                                    x.power.negate();\n                                    isDenom = true;\n                                }\n                            }\n\n                            if (isDenom) {\n                                x.power.negate();\n                                non_composites = _.multiply(non_composites, x);\n                            }\n                            else\n                                composites.push(x);\n                        }\n                        else\n                            non_composites = _.multiply(non_composites, x);\n                    }\n\n                    //grab the first symbol since we'll loop over that one to begin\n                    result = composites.pop();\n\n                    while (composites.length) {\n                        var s = composites.pop();\n                        var t = new Symbol(0);\n                        result.each(function (x) {\n                            s.each(function (y) {\n                                var prod = _.multiply(x.clone(), y.clone());\n                                t = _.add(t, prod);\n                            });\n                        });\n\n                        result = t;\n                    }\n\n                    var finalResult = new Symbol(0);\n                    //put back the multiplier\n                    result.each(function (x) {\n                        finalResult = _.add(finalResult, expand(_.multiply(non_composites, x)));\n                    });\n                    //expand the power\n                    finalResult.power = finalResult.power.multiply(sp.abs());\n\n                    symbol = _.expand(finalResult);\n\n                    if (sign < 0)\n                        symbol.invert();\n                }\n            }\n            catch (e) {\n                return original;\n            }\n\n            return symbol;\n        }\n        \n        /**\n         * Returns an identity matrix of nxn\n         * @param {Number} n\n         * @returns {Matrix}\n         */\n        function imatrix(n) {\n            return Matrix.identity(n);\n        }\n        \n        /**\n         * Retrieves and item from a vector\n         * @param {Vector} vector\n         * @param {Number} index\n         * @returns {Vector|Symbol}\n         */\n        function vecget(vector, index) {\n            if (index.isConstant() && isInt(index))\n                return vector.elements[index];\n            return _.symfunction('vecget', arguments);\n        }\n        \n        /**\n         * Removes duplicates from a vector\n         * @param {Vector} vector\n         * @param {Number} tolerance\n         * @returns {Vector}\n         */\n        function vectrim(vector, tolerance) {\n            tolerance = typeof tolerance === 'undefined' ? 1e-14 : tolerance;\n            \n            vector = vector.clone();\n            \n            tolerance = Number(tolerance);\n            //place algebraic solutions first\n            vector.elements.sort(function(a, b) {\n                return b.group - a.group;\n            });\n            //depending on the start point we may have duplicates so we need to clean those up a bit.\n            //start by creating an object with the solution and the numeric value. This way we don't destroy algebraic values\n            vector.elements = removeDuplicates(vector.elements, function(a, b) {\n                var diff = Number(_.subtract(evaluate(a), evaluate(b)).abs());\n                return diff <= tolerance;\n            });\n            \n            return vector;\n        }\n        \n        /**\n         * Set a value for a vector at a given index\n         * @param {Vector} vector\n         * @param {Number} index\n         * @param {Symbol} value\n         * @returns {Vector}\n         */\n        function vecset(vector, index, value) {\n            if (!index.isConstant)\n                return _.symfunction('vecset', arguments);\n            vector.elements[index] = value;\n            return vector;\n        }\n\n        function matget(matrix, i, j) {\n            if (i.isConstant() && j.isConstant())\n                return matrix.elements[i][j];\n            return _.symfunction('matget', arguments);\n        }\n\n        function matgetrow(matrix, i) {\n            if (i.isConstant())\n                return new Matrix(matrix.elements[i]);\n            return _.symfunction('matgetrow', arguments);\n        }\n\n        function matsetrow(matrix, i, x) {\n            //handle symbolics\n            if (!i.isConstant())\n                return _.symfunction('matsetrow', arguments);\n            if (matrix.elements[i].length !== x.elements.length)\n                throw new DimensionError('Matrix row must match row dimensions!');\n            var M = matrix.clone();\n            M.elements[i] = x.clone().elements;\n            return M;\n        }\n\n        function matgetcol(matrix, col_index) {\n            //handle symbolics\n            if (!col_index.isConstant())\n                return _.symfunction('matgetcol', arguments);\n            col_index = Number(col_index);\n            var M = Matrix.fromArray([]);\n            matrix.each(function (x, i, j) {\n                if (j === col_index) {\n                    M.elements.push([x.clone()]);\n                }\n            });\n            return M;\n        }\n\n        function matsetcol(matrix, j, col) {\n            //handle symbolics\n            if (!j.isConstant())\n                return _.symfunction('matsetcol', arguments);\n            j = Number(j);\n            if (matrix.rows() !== col.elements.length)\n                throw new DimensionError('Matrix columns must match number of columns!');\n            col.each(function (x, i) {\n                matrix.set(i - 1, j, x.elements[0].clone());\n            });\n            return matrix;\n        }\n\n\n        function matset(matrix, i, j, value) {\n            matrix.elements[i][j] = value;\n            return matrix;\n        }\n\n        //the constructor for vectors\n        function vector() {\n            return new Vector([].slice.call(arguments));\n        }\n\n        //the constructor for matrices\n        function matrix() {\n            return Matrix.fromArray(arguments);\n        }\n        \n        //the constructor for sets\n        function set() {\n            return Set.fromArray(arguments);\n        }\n\n        function determinant(symbol) {\n            if (isMatrix(symbol)) {\n                return symbol.determinant();\n            }\n            return symbol;\n        }\n\n        function size(symbol) {\n            var retval;\n            if (isMatrix(symbol))\n                retval = [new Symbol(symbol.cols()), new Symbol(symbol.rows())];\n            else if(isVector(symbol) || isSet(symbol)) \n                retval = new Symbol(symbol.elements.length);\n            else\n                err('size expects a matrix or a vector');\n            return retval;\n        }\n\n        function dot(vec1, vec2) {\n            if (isVector(vec1) && isVector(vec2))\n                return vec1.dot(vec2);\n            err('function dot expects 2 vectors');\n        }\n\n        function cross(vec1, vec2) {\n            if (isVector(vec1) && isVector(vec2))\n                return vec1.cross(vec2);\n            err('function cross expects 2 vectors');\n        }\n\n        function transpose(mat) {\n            if (isMatrix(mat))\n                return mat.transpose();\n            err('function transpose expects a matrix');\n        }\n\n        function invert(mat) {\n            if (isMatrix(mat))\n                return mat.invert();\n            err('invert expects a matrix');\n        }\n        \n        //basic set functions\n        function union(set1, set2) {\n            return set1.union(set2);\n        }\n        \n        function intersection(set1, set2) {\n            return set1.intersection(set2);\n        }\n        \n        function contains(set1, e) {\n            return set1.contains(e);\n        }\n        \n        function difference(set1, set2) {\n            return set1.difference(set2);\n        }\n        \n        function intersects(set1, set2) {\n            return new Symbol(Number(set1.intersects(set2)));\n        }\n        \n        function is_subset(set1, set2) {\n            return new Symbol(Number(set1.is_subset(set2)));\n        }\n        \n        function print() {\n            arguments2Array(arguments).map(function(x) {\n                console.log(x.toString());\n            });\n        }\n        \n        function testSQRT(symbol) {\n            //wrap the symbol in sqrt. This eliminates one more check down the line.\n            if (!isSymbol(symbol.power) && symbol.power.absEquals(0.5)) {\n                var sign = symbol.power.sign();\n                //don't devide the power directly. Notice the use of toString. This makes it possible\n                //to use a bigNumber library in the future\n                var retval = sqrt(symbol.group === P ? new Symbol(symbol.value) : symbol.toLinear());\n                //place back the sign of the power\n                if (sign < 0)\n                    retval.invert();\n                return retval;\n            }\n            return symbol;\n        }\n\n        //try to reduce a symbol by pulling its power\n        function testPow(symbol) {\n            if (symbol.group === P) {\n                var v = symbol.value;\n                \n                var fct = primeFactors(v)[0];\n                \n                //safety\n                if(!fct) {\n                    warn('Unable to compute prime factors. This should not happen. Please review and report.');\n                    return symbol;\n                }\n                \n                var n = new Frac(Math.log(v) / Math.log(fct)),\n                    p = n.multiply(symbol.power);\n                \n                //we don't want a more complex number than before \n                if (p.den > symbol.power.den)\n                    return symbol;\n\n                if (isInt(p))\n                    symbol = Symbol(Math.pow(fct, p));\n                else\n                    symbol = new Symbol(fct).setPower(p);\n            }\n\n            return symbol;\n        }\n\n        //Link the functions to the parse so they're available outside of the library.\n        //This is strictly for convenience and may be deprecated.\n        this.expand = expand;\n        this.round = round;\n        this.clean = clean;\n        this.sqrt = sqrt;\n        this.cbrt = cbrt;\n        this.abs = abs;\n        this.log = log;\n        this.rationalize = rationalize;\n        this.nthroot = nthroot;\n        this.arg = arg;\n        this.conjugate = conjugate;\n        this.imagpart = imagpart;\n        this.realpart = realpart;\n        \n        //TODO:\n        //Utilize the function below instead of the linked function\n        this.getFunction = function(name) {\n            return functions[name][0];\n        };\n\n//Parser.methods ===============================================================\n        this.addPreprocessor = function (name, action, order, shift_cells) {\n            var names = preprocessors.names;\n            var actions = preprocessors.actions;\n            if ((typeof action !== 'function')) //the person probably forgot to specify a name\n                throw new PreprocessorError('Incorrect parameters. Function expected!');\n            if (!order) {\n                names.push(name);\n                actions.push(action);\n            }\n            else {\n                if (shift_cells) {\n                    names.splice(order, 0, name);\n                    actions.splice(order, 0, action);\n                }\n                else {\n                    names[order] = name;\n                    actions[order] = action;\n                }\n            }\n        };\n\n        this.getPreprocessors = function () {\n            var preprocessors = {};\n            for (var i = 0, l = preprocessors.names.length; i < l; i++) {\n                var name = preprocessors.names[i];\n                preprocessors[name] = {\n                    order: i,\n                    action: preprocessors.actions[i]\n                };\n            }\n            return preprocessors;\n        };\n\n        this.removePreprocessor = function (name, shift_cells) {\n            var i = preprocessors.names.indexOf(name);\n            if (shift_cells) {\n                remove(preprocessors.names, i);\n                remove(preprocessors.actions, i);\n            }\n            else {\n                preprocessors.names[i] = undefined;\n                preprocessors.actions[i] = undefined;\n            }\n        };\n\n        //The loader for functions which are not part of Math2\n        this.mapped_function = function () {\n            var subs = {},\n                    params = this.params;\n            for (var i = 0; i < params.length; i++)\n                subs[params[i]] = arguments[i];\n\n            return _.parse(this.body, subs);\n        };\n        /**\n         * Adds two symbols\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.add = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n            //we're dealing with two symbols\n            if (aIsSymbol && bIsSymbol) {\n                //forward the adding of symbols with units to the Unit module\n                if (a.unit || b.unit) {\n                    return _.Unit.add(a, b);\n                }\n                //handle Infinity\n                //https://www.encyclopediaofmath.org/index.php/Infinity\n                if (a.isInfinity || b.isInfinity) {\n                    var aneg = a.multiplier.lessThan(0),\n                            bneg = b.multiplier.lessThan(0);\n\n                    if (a.isInfinity && b.isInfinity && aneg !== bneg) {\n                        throw new UndefinedError('(' + a + ')+(' + b + ') is not defined!');\n                    }\n\n                    var inf = Symbol.infinity();\n                    if (bneg)\n                        inf.negate();\n                    return inf;\n                }\n\n                if (a.isComposite() && a.isLinear() && b.isComposite() && b.isLinear()) {\n                    a.distributeMultiplier();\n                    b.distributeMultiplier();\n                }\n                //no need to waste time on zeroes\n                if (a.multiplier.equals(0))\n                    return b;\n                if (b.multiplier.equals(0))\n                    return a;\n\n                if (a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\n                    var result = new Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings.PRECISION));\n                    return result;\n                }\n\n                var g1 = a.group,\n                        g2 = b.group,\n                        ap = a.power.toString(),\n                        bp = b.power.toString();\n\n                //always keep the greater group on the left. \n                if (g1 < g2 || (g1 === g2 && ap > bp && bp > 0)) {\n                    return this.add(b, a);\n                }\n\n                /*note to self: Please don't forget about this dilemma ever again. In this model PL and CB goes crazy\n                 * because it doesn't know which one to prioritize. */\n                //correction to PL dilemma\n                if (g1 === CB && g2 === PL && a.value === b.value) {\n                    //swap\n                    var t = a;\n                    a = b;\n                    b = t;\n                    g1 = a.group;\n                    g2 = b.group;\n                    ap = a.power.toString();\n                    bp = b.power.toString();\n                }\n\n                var powEQ = ap === bp,\n                        v1 = a.value,\n                        v2 = b.value,\n                        aIsComposite = a.isComposite(),\n                        bIsComposite = b.isComposite(),\n                        h1, h2, result;\n\n                if (aIsComposite)\n                    h1 = text(a, 'hash');\n                if (bIsComposite)\n                    h2 = text(b, 'hash');\n\n                if (g1 === CP && g2 === CP && b.isLinear() && !a.isLinear() && h1 !== h2) {\n                    return this.add(b, a);\n                }\n\n                //PL & PL should compare hashes and not values e.g. compare x+x^2 with x+x^3 and not x with x\n                if (g1 === PL && g2 === PL) {\n                    v1 = h1;\n                    v2 = h2;\n                }\n\n                var PN = g1 === P && g2 === N,\n                        PNEQ = a.value === b.multiplier.toString(),\n                        valEQ = (v1 === v2 || h1 === h2 && h1 !== undefined || (PN && PNEQ));\n\n                //equal values, equal powers\n                if (valEQ && powEQ && g1 === g2) {\n                    //make sure to convert N to something P can work with\n                    if (PN)\n                        b = b.convert(P);//CL\n\n                    //handle PL\n                    if (g1 === PL && (g2 === S || g2 === P)) {\n                        a.distributeMultiplier();\n                        result = a.attach(b);\n                    }\n                    else {\n                        result = a;//CL\n                        if (a.multiplier.isOne() && b.multiplier.isOne() && g1 === CP && a.isLinear() && b.isLinear()) {\n                            for (var s in b.symbols) {\n                                var x = b.symbols[s];\n                                result.attach(x);\n                            }\n                        }\n                        else\n                            result.multiplier = result.multiplier.add(b.multiplier);\n                    }\n                }\n                //equal values uneven powers\n                else if (valEQ && g1 !== PL) {\n                    //break the tie for e.g. (x+1)+((x+1)^2+(x+1)^3)\n                    if (g1 === CP && g2 === PL) {\n                        b.insert(a);\n                        result = b;\n                    }\n                    else {\n                        result = Symbol.shell(PL).attach([a, b]);\n                        //update the hash\n                        result.value = g1 === PL ? h1 : v1;\n                    }\n                }\n                else if (aIsComposite && a.isLinear()) {\n                    var canIterate = g1 === g2,\n                            bothPL = g1 === PL && g2 === PL;\n\n                    //we can only iterate group PL if they values match\n                    if (bothPL)\n                        canIterate = a.value === b.value;\n                    //distribute the multiplier over the entire symbol\n                    a.distributeMultiplier();\n\n                    if (b.isComposite() && b.isLinear() && canIterate) {\n                        b.distributeMultiplier();\n                        //CL\n                        for (var s in b.symbols) {\n                            var x = b.symbols[s];\n                            a.attach(x);\n                        }\n                        result = a;\n                    }\n                    //handle cases like 2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2\n                    else if (bothPL && a.value !== h2 || g1 === PL && !valEQ) {\n                        result = Symbol.shell(CP).attach([a, b]);\n                        result.updateHash();\n\n                    }\n                    else {\n                        result = a.attach(b);\n                    }\n                }\n                else {\n                    if (g1 === FN && a.fname === SQRT && g2 !== EX && b.power.equals(0.5)) {\n                        var m = b.multiplier.clone();\n                        b = sqrt(b.toUnitMultiplier().toLinear());\n                        b.multiplier = m;\n                    }\n                    //fix for issue #3 and #159\n                    if (a.length === 2 && b.length === 2 && even(a.power) && even(b.power)) {\n                        result = _.add(expand(a), expand(b));\n                    }\n                    else {\n                        result = Symbol.shell(CP).attach([a, b]);\n                        result.updateHash();\n                    }\n                }\n\n                if (result.multiplier.equals(0))\n                    result = new Symbol(0);\n\n                //make sure to remove unnecessary wraps\n                if (result.length === 1) {\n                    var m = result.multiplier;\n                    result = firstObject(result.symbols);\n                    result.multiplier = result.multiplier.multiply(m);\n                }\n\n                return result;\n            }\n            else {\n                //keep symbols to the right \n                if (bIsSymbol && !aIsSymbol) {\n                    var t = a;\n                    a = b;\n                    b = t; //swap\n                    t = bIsSymbol;\n                    bIsSymbol = aIsSymbol;\n                    aIsSymbol = t;\n                }\n\n                var bIsMatrix = isMatrix(b);\n\n                if (aIsSymbol && bIsMatrix) {\n                    var M = new Matrix();\n                    b.eachElement(function (e, i, j) {\n                        M.set(i, j, _.add(a.clone(), e));\n                    });\n                    \n                    b = M\n                }\n                else {\n                    if (isMatrix(a) && bIsMatrix) {\n                        b = a.add(b);\n                    }\n                    else if (aIsSymbol && isVector(b)) {\n                        b.each(function (x, i) {\n                            i--;\n                            b.elements[i] = _.add(a.clone(), b.elements[i]);\n                        });\n                    }\n                    else {\n                        if (isVector(a) && isVector(b)) {\n                            b.each(function (x, i) {\n                                i--;\n                                b.elements[i] = _.add(a.elements[i], b.elements[i]);\n                            });\n                        }\n                        else if (isVector(a) && isMatrix(b)) {\n                            //try to convert a to a matrix\n                            return _.add(b, a);\n                        }\n                        else if (isMatrix(a) && isVector(b)) {\n                            if (b.elements.length === a.rows()) {\n                                var M = new Matrix(), l = a.cols();\n                                b.each(function (e, i) {\n                                    var row = [];\n                                    for (var j = 0; j < l; j++) {\n                                        row.push(_.add(a.elements[i - 1][j].clone(), e.clone()));\n                                    }\n                                    M.elements.push(row);\n                                });\n                                return M;\n                            }\n                            else\n                                err('Dimensions must match!');\n                        }\n                    }\n                }\n                return b;\n            }\n\n        };\n        /**\n         * Gets called when the parser finds the - operator. Not the prefix operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.subtract = function (a, b) {\n            var aIsSymbol = aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b), t;\n\n            if (aIsSymbol && bIsSymbol) {\n                if (a.unit || b.unit) {\n                    return _.Unit.subtract(a, b);\n                }\n                return this.add(a, b.negate());\n            }\n            else {\n                if (bIsSymbol && isVector(a)) {\n                    b = a.map(function (x) {\n                        return _.subtract(x, b.clone());\n                    });\n                }\n                else if (aIsSymbol && isVector(b)) {\n                    b = b.map(function (x) {\n                        return _.subtract(a.clone(), x);\n                    });\n                }\n                else if (isVector(a) && isVector(b)) {\n                    if (a.dimensions() === b.dimensions())\n                        b = a.subtract(b);\n                    else\n                        _.error('Unable to subtract vectors. Dimensions do not match.');\n                }\n                else if (isMatrix(a) && isVector(b)) {\n                    if (b.elements.length === a.rows()) {\n                        var M = new Matrix(), l = a.cols();\n                        b.each(function (e, i) {\n                            var row = [];\n                            for (var j = 0; j < l; j++) {\n                                row.push(_.subtract(a.elements[i - 1][j].clone(), e.clone()));\n                            }\n                            M.elements.push(row);\n                        });\n                        return M;\n                    }\n                    else\n                        err('Dimensions must match!');\n                }\n                else if (isVector(a) && isMatrix(b)) {\n                    var M = b.clone().negate();\n                    return _.add(M, a);\n                }\n                else if (isMatrix(a) && isMatrix(b)) {\n                    b = a.subtract(b);\n                }\n                else if(isMatrix(a) && bIsSymbol) {\n                    var M = new Matrix();\n                    a.each(function(x, i, j) {\n                        M.set(i, j, _.subtract(x, b.clone()));\n                    });\n                    b = M;\n                }\n                else if(aIsSymbol && isMatrix(b)) {\n                    var M = new Matrix();\n                    b.each(function(x, i, j) {\n                        M.set(i, j, _.subtract(a.clone(), x));\n                    });\n                    b = M;\n                }\n                return b;\n            }\n        };\n        /**\n         * Gets called when the parser finds the * operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.multiply = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n            //we're dealing with function assignment here\n            if (aIsSymbol && b instanceof Collection) {\n                b.elements.push(a);\n                return b;\n            }\n            if (aIsSymbol && bIsSymbol) {\n                //if it has a unit then add it and return it right away.\n                if (b.isUnit) {\n                    var result = a.clone();\n                    a.unit = b;\n                    return result;\n                }\n                //if it has units then just forward that problem to the unit module\n                if (a.unit || b.unit) {\n                    return _.Unit.multiply(a, b);\n                }\n\n                //handle Infinty\n                if (a.isInfinity || b.isInfinity) {\n                    if (a.equals(0) || b.equals(0))\n                        throw new UndefinedError(a + '*' + b + ' is undefined!');\n                    //x/infinity\n                    if (b.power.lessThan(0)) {\n                        if (!a.isInfinity) {\n                            return new Symbol(0);\n                        }\n                        else {\n                            throw new UndefinedError('Infinity/Infinity is not defined!');\n                        }\n                    }\n\n                    var sign = a.multiplier.multiply(b.multiplier).sign(),\n                            inf = Symbol.infinity();\n                    if (a.isConstant() || b.isConstant() || (a.isInfinity && b.isInfinity)) {\n                        if (sign < 0)\n                            inf.negate();\n\n                        return inf;\n                    }\n                }\n                //the quickies\n                if (a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\n                    var t = new bigDec(a.multiplier.toDecimal()).times(new bigDec(b.multiplier.toDecimal())).toFixed();\n                    var retval = new Symbol(t);\n                    return retval;\n                }\n\n                //don't waste time\n                if (a.isOne()) {\n                    return b.clone();\n                }\n                if (b.isOne()) {\n                    return a.clone();\n                }\n\n                if (a.multiplier.equals(0) || b.multiplier.equals(0))\n                    return new Symbol(0);\n\n                if (b.group > a.group && !(b.group === CP))\n                    return this.multiply(b, a);\n                //correction for PL/CB dilemma\n                if (a.group === CB && b.group === PL && a.value === b.value) {\n                    var t = a;\n                    a = b;\n                    b = t;//swap\n                }\n\n                var g1 = a.group,\n                        g2 = b.group,\n                        bnum = b.multiplier.num,\n                        bden = b.multiplier.den;\n\n                if (g1 === FN && a.fname === SQRT && !b.isConstant() && a.args[0].value === b.value && !a.args[0].multiplier.lessThan(0)) {\n                    //unwrap sqrt\n                    var a_pow = a.power;\n                    a = a.args[0].clone();\n                    a.setPower(new Frac(0.5).multiply(a_pow));\n                    g1 = a.group;\n                }\n                //simplify n/sqrt(n). Being very specific\n                else if(g1 === FN && a.fname === SQRT && a.multiplier.equals(1) && a.power.equals(-1) && b.isConstant() && a.args[0].equals(b)) {\n                    a = _.symfunction(SQRT,[b.clone()]);\n                    b = new Symbol(1);\n                };\n\n                var v1 = a.value,\n                        v2 = b.value,\n                        sign = new Frac(a.sign()),\n                        //since P is just a morphed version of N we need to see if they relate\n                        ONN = (g1 === P && g2 === N && b.multiplier.equals(a.value)),\n                        //don't multiply the multiplier of b since that's equal to the value of a\n                        m = ONN ? new Frac(1).multiply(a.multiplier).abs() : a.multiplier.multiply(b.multiplier).abs(),\n                        result = a.clone().toUnitMultiplier();\n                b = b.clone().toUnitMultiplier(true);\n\n                //further simplification of sqrt\n                if (g1 === FN && g2 === FN) {\n                    var u = a.args[0].clone();\n                    var v = b.args[0].clone();\n                    if (a.fname === SQRT && b.fname === SQRT && a.isLinear() && b.isLinear()) {\n\n                        var q = _.divide(u, v).invert();\n                        if (q.gt(1) && isInt(q)) {\n                            //b contains a factor a which can be moved to a\n                            result = _.multiply(a.args[0].clone(), sqrt(q.clone()));\n                            b = new Symbol(1);\n                        }\n                    }\n                    //simplify factorial but only if \n                    //1 - It's division so b will have a negative power\n                    //2 - We're not dealing with factorials of numbers\n                    else if (a.fname === FACTORIAL && b.fname === FACTORIAL && !u.isConstant() && !v.isConstant() && b.power < 0) {                         \n                        //assume that n = positive\n                        var d = _.subtract(u.clone(), v.clone());\n                        \n                        //if it's not numeric then we don't know if we can simplify so just return\n                        if(!d.isConstant()) {\n                            b = new Symbol(1);\n                        }\n                        else {\n                            //there will never be a case where d == 0 since this will already have \n                            //been handled at the beginning of this function\n                            t = new Symbol(1);\n                            if(d < 0) {\n                                //If d is negative then the numerator is larger so expand that\n                                for(var i=0, n = Math.abs(d); i<=n; i++) {\n                                    var s = _.add(u.clone(), new Symbol(i));\n                                    t = _.multiply(t, s);\n                                }\n                               \n                                result = _.multiply(_.pow(u, new Symbol(a.power)), _.pow(t, new Symbol(b.power)));\n                                \n                                b = new Symbol(1);\n                            }\n                            else {\n                                //Otherwise the denominator is larger so expand that\n                                for(var i=0, n = Math.abs(d); i<=n; i++) {\n                                    var s = _.add(v.clone(), new Symbol(i));\n                                    t = _.multiply(t, s);\n                                }\n                                \n                                result = _.multiply(_.pow(t, new Symbol(a.power)), _.pow(v, new Symbol(b.power)));\n                                \n                                b = new Symbol(1);\n                            }\n                        }\n                    }\n                }\n\n\n                //if both are PL then their hashes have to match\n                if (v1 === v2 && g1 === PL && g1 === g2) {\n                    v1 = a.text('hash');\n                    v2 = b.text('hash');\n                }\n\n                //same issue with (x^2+1)^x*(x^2+1)\n                //EX needs an exception when multiplying because it needs to recognize\n                //that (x+x^2)^x has the same hash as (x+x^2). The latter is kept as x\n                if (g2 === EX && b.previousGroup === PL && g1 === PL) {\n                    v1 = text(a, 'hash', EX);\n                }\n\n                if ((v1 === v2 || ONN) && !(g1 === PL && (g2 === S || g2 === P || g2 === FN)) && !(g1 === PL && g2 === CB)) {\n                    var p1 = a.power,\n                            p2 = b.power,\n                            isSymbolP1 = isSymbol(p1),\n                            isSymbolP2 = isSymbol(p2),\n                            toEX = (isSymbolP1 || isSymbolP2);\n                    //TODO: this needs cleaning up\n                    if (g1 === PL && g2 !== PL && b.previousGroup !== PL && p1.equals(1)) {\n                        result = new Symbol(0);\n                        a.each(function (x) {\n                            result = _.add(result, _.multiply(x, b.clone()));\n                        }, true);\n                    }\n                    else {\n                        //add the powers\n                        result.power = toEX ? _.add(\n                                !(isSymbol(p1)) ? new Symbol(p1) : p1,\n                                !(isSymbol(p2)) ? new Symbol(p2) : p2\n                                ) : (g1 === N /*don't add powers for N*/ ? p1 : p1.add(p2));\n\n                        //eliminate zero power values and convert them to numbers\n                        if (result.power.equals(0))\n                            result = result.convert(N);\n\n                        //properly convert to EX\n                        if (toEX)\n                            result.convert(EX);\n\n                        //take care of imaginaries\n                        if (a.imaginary && b.imaginary) {\n                            var isEven = even(result.power % 2);\n                            if (isEven) {\n                                result = new Symbol(1);\n                                m.negate();\n                            }\n                        }\n\n                        //cleanup: this causes the LaTeX generator to get confused as to how to render the symbol\n                        if (result.group !== EX && result.previousGroup)\n                            result.previousGroup = undefined;\n                        //the sign for b is floating around. Remember we are assuming that the odd variable will carry\n                        //the sign but this isn't true if they're equals symbols\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\n                    }\n                }\n                else if (g1 === CB && a.isLinear()) {\n                    if (g2 === CB)\n                        b.distributeExponent();\n                    if (g2 === CB && b.isLinear()) {\n                        for (var s in b.symbols) {\n                            var x = b.symbols[s];\n                            result = result.combine(x);\n                        }\n                        result.multiplier = result.multiplier.multiply(b.multiplier);\n                    }\n                    else {\n                        result.combine(b);\n                    }\n                }\n                else {\n                    //the multiplier was already handled so nothing left to do\n                    if (g1 !== N) {\n                        if (g1 === CB) {\n                            result.distributeExponent();\n                            result.combine(b);\n                        }\n                        else if (!b.isOne()) {\n                            var bm = b.multiplier.clone();\n                            b.toUnitMultiplier();\n                            result = Symbol.shell(CB).combine([result, b]);\n                            //transfer the multiplier to the outside\n                            result.multiplier = result.multiplier.multiply(bm);\n                        }\n                    }\n                    else {\n                        result = b.clone().toUnitMultiplier();\n                    }\n                }\n\n                if (result.group === P) {\n                    var logV = Math.log(result.value),\n                            n1 = Math.log(bnum) / logV,\n                            n2 = Math.log(bden) / logV,\n                            ndiv = m.num / bnum,\n                            ddiv = m.den / bden;\n                    //we don't want to divide by zero no do we? Strange things happen.\n                    if (n1 !== 0 && isInt(n1) && isInt(ndiv)) {\n                        result.power = result.power.add(new Frac(n1));\n                        m.num /= bnum; //BigInt? Keep that in mind for the future.\n                    }\n                    if (n2 !== 0 && isInt(n2) && isInt(ddiv)) {\n                        result.power = result.power.subtract(new Frac(n2));\n                        m.den /= bden; //BigInt? Keep that in mind for the future.\n                    }\n                }\n\n                //unpack CB if length is only one\n                if (result.length === 1) {\n                    var t = result.multiplier;\n                    //transfer the multiplier\n                    result = firstObject(result.symbols);\n                    result.multiplier = result.multiplier.multiply(t);\n                }\n\n                //reduce square root\n                var ps = result.power.toString();\n                if (even(ps) && result.fname === SQRT) {\n                    //grab the sign of the symbol\n                    sign = sign * result.sign();\n                    var p = result.power;\n                    result = result.args[0];\n                    result = _.multiply(new Symbol(m), _.pow(result, new Symbol(p.divide(new Frac(2)))));\n                    //flip it back to the correct sign\n                    if (sign < 0)\n                        result.negate()\n                }\n                else {\n                    result.multiplier = result.multiplier.multiply(m).multiply(sign);\n                    if (result.group === CP && result.isImaginary())\n                        result.distributeMultiplier();\n                }\n\n                //back convert group P to a simpler group N if possible\n                if (result.group === P && isInt(result.power.toDecimal()))\n                    result = result.convert(N);\n\n                return result;\n            }\n            else {\n                //****** Matrices & Vector *****//\n                if (bIsSymbol && !aIsSymbol) { //keep symbols to the right \n                    t = a;\n                    a = b;\n                    b = t; //swap\n                    t = bIsSymbol;\n                    bIsSymbol = aIsSymbol;\n                    aIsSymbol = t;\n                }\n\n                var isMatrixB = isMatrix(b), isMatrixA = isMatrix(a);\n                if (aIsSymbol && isMatrixB) {\n                    var M = new Matrix();\n                    b.eachElement(function (e, i, j) {\n                        M.set(i, j, _.multiply(a.clone(), e));\n                    });\n                    \n                    b = M;\n                }\n                else {\n                    if (isMatrixA && isMatrixB) {\n                        b = a.multiply(b);\n                    }\n                    else if (aIsSymbol && isVector(b)) {\n                        b.each(function (x, i) {\n                            i--;\n                            b.elements[i] = _.multiply(a.clone(), b.elements[i]);\n                        });\n                    }\n                    else {\n                        if (isVector(a) && isVector(b)) {\n                            b.each(function (x, i) {\n                                i--;\n                                b.elements[i] = _.multiply(a.elements[i], b.elements[i]);\n                            });\n                        }\n                        else if (isVector(a) && isMatrix(b)) {\n                            //try to convert a to a matrix\n                            return this.multiply(b, a);\n                        }\n                        else if (isMatrix(a) && isVector(b)) {\n                            if (b.elements.length === a.rows()) {\n                                var M = new Matrix(), l = a.cols();\n                                b.each(function (e, i) {\n                                    var row = [];\n                                    for (var j = 0; j < l; j++) {\n                                        row.push(_.multiply(a.elements[i - 1][j].clone(), e.clone()));\n                                    }\n                                    M.elements.push(row);\n                                });\n                                return M;\n                            }\n                            else\n                                err('Dimensions must match!');\n                        }\n                    }\n                }\n\n                return b;\n            }\n        };\n        /**\n         * Gets called when the parser finds the / operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.divide = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n\n            if (aIsSymbol && bIsSymbol) {\n                //forward to Unit division\n                if (a.unit || b.unit) {\n                    return _.Unit.divide(a, b);\n                }\n                var result;\n                if (b.equals(0))\n                    throw new DivisionByZero('Division by zero not allowed!');\n\n                if (a.isConstant() && b.isConstant()) {\n                    result = a.clone();\n                    result.multiplier = result.multiplier.divide(b.multiplier);\n                }\n                else {\n                    b.invert();\n                    result = _.multiply(a, b);\n                }\n                return result;\n            }\n            else {\n                //******* Vectors & Matrices *********//\n                var isVectorA = isVector(a), isVectorB = isVector(b);\n                if (aIsSymbol && isVectorB) {\n                    b = b.map(function (x) {\n                        return _.divide(a.clone(), x);\n                    });\n                }\n                else if (isVectorA && bIsSymbol) {\n                    b = a.map(function (x) {\n                        return _.divide(x, b.clone());\n                    });\n                }\n                else if (isVectorA && isVectorB) {\n                    if (a.dimensions() === b.dimensions()) {\n                        b = b.map(function (x, i) {\n                            return _.divide(a.elements[--i], x);\n                        });\n                    }\n                    else\n                        _.error('Cannot divide vectors. Dimensions do not match!');\n                }\n                else {\n                    var isMatrixA = isMatrix(a), isMatrixB = isMatrix(b);\n                    if (isMatrixA && bIsSymbol) {\n                        var M = new Matrix();\n                        a.eachElement(function (x, i, j) {\n                            M.set(i, j, _.divide(x, b.clone()));\n                        });\n                        b = M;\n                    }\n                    else if(aIsSymbol && isMatrixB) {\n                        var M = new Matrix();\n                        b.eachElement(function (x, i, j) {\n                            M.set(i, j, _.divide(a.clone(), x));\n                        });\n                        b = M;\n                    }\n                    else if (isMatrixA && isMatrixB) {\n                        var M = new Matrix();\n                        if (a.rows() === b.rows() && a.cols() === b.cols()) {\n                            a.eachElement(function (x, i, j) {\n                                M.set(i, j, _.divide(x, b.elements[i][j]));\n                            });\n                            b = M;\n                        }\n                        else {\n                            _.error('Dimensions do not match!');\n                        }\n                    }\n                    else if (isMatrixA && isVectorB) {\n                        if (a.cols() === b.dimensions()) {\n                            var M = new Matrix();\n                            a.eachElement(function (x, i, j) {\n                                M.set(i, j, _.divide(x, b.elements[i].clone()));\n                            });\n                            b = M;\n                        }\n                        else {\n                            _.error('Unable to divide matrix by vector.');\n                        }\n                    }\n                }\n                return b;\n            }\n        };\n        /**\n         * Gets called when the parser finds the ^ operator. See this.add\n         * @param {Symbol} a\n         * @param {Symbol} b\n         * @returns {Symbol}\n         */\n        this.pow = function (a, b) {\n            var aIsSymbol = isSymbol(a),\n                    bIsSymbol = isSymbol(b);\n            if (aIsSymbol && bIsSymbol) {\n                //it has units then it's the Unit module's problem\n                if (a.unit || b.unit) {\n                    return _.Unit.pow(a, b);\n                }\n                //handle infinity\n                if (a.isInfinity || b.isInfinity) {\n                    if (a.isInfinity && b.isInfinity)\n                        throw new UndefinedError('(' + a + ')^(' + b + ') is undefined!');\n\n                    if (a.isConstant() && b.isInfinity) {\n                        if (a.equals(0)) {\n                            if (b.lessThan(0))\n                                throw new UndefinedError('0^Infinity is undefined!');\n                            return new Symbol(0);\n                        }\n                        if (a.equals(1))\n                            throw new UndefinedError('1^' + b.toString() + ' is undefined!');\n                        //a^-oo\n                        if (b.lessThan(0))\n                            return new Symbol(0);\n                        //a^oo\n                        if (!a.lessThan(0))\n                            return Symbol.infinity();\n                    }\n\n                    if (a.isInfinity && b.isConstant()) {\n                        if (b.equals(0))\n                            throw new UndefinedError(a + '^0 is undefined!');\n                        if (b.lessThan(0))\n                            return new Symbol(0);\n                        return _.multiply(Symbol.infinity(), _.pow(new Symbol(a.sign()), b.clone()));\n                    }\n                }\n\n                var aIsZero = a.equals(0);\n                var bIsZero = b.equals(0);\n                if (aIsZero && bIsZero)\n                    throw new UndefinedError('0^0 is undefined!');\n                //return 0 right away if possible\n                if (aIsZero && b.isConstant() && b.multiplier.greaterThan(0))\n                    return new Symbol(0);\n\n                if (bIsZero)\n                    return new Symbol(1);\n\n                var bIsConstant = b.isConstant(),\n                        aIsConstant = a.isConstant(),\n                        bIsInt = b.isInteger(),\n                        m = a.multiplier,\n                        result = a.clone();\n                if (aIsConstant && bIsConstant && a.equals(0) && b.lessThan(0))\n                    throw new UndefinedError('Division by zero is not allowed!');\n\n                //compute imaginary numbers right away\n                if (Settings.PARSE2NUMBER && aIsConstant && bIsConstant && a.sign() < 0 && evenFraction(b)) {\n                    var k, re, im;\n                    k = Math.PI * b;\n                    re = new Symbol(Math.cos(k));\n                    im = _.multiply(Symbol.imaginary(), new Symbol(Math.sin(k)));\n                    return _.add(re, im);\n                }\n\n                //imaginary number under negative nthroot or to the n\n                if (Settings.PARSE2NUMBER && a.isImaginary() && bIsConstant && isInt(b) && !b.lessThan(0)) {\n                    var re, im, r, theta, nre, nim;\n                    re = a.realpart();\n                    im = a.imagpart();\n                    if (re.isConstant('all') && im.isConstant('all')) {\n                        theta = new Symbol(Math.atan2(im, re) * b);\n                        r = _.pow(Symbol.hyp(re, im), b);\n                        nre = _.multiply(r.clone(), _.trig.cos(theta.clone()));\n                        nim = _.multiply(r, _.trig.sin(theta));\n                        return _.add(nre, _.multiply(Symbol.imaginary(), nim));\n                    }\n                }\n\n                /*\n                 if(a.isImaginary() && bIsConstant && b.multiplier.num.abs().equals(1) && !b.multiplier.den.equals(1)) { \n                 var sign = b.sign();\n                 b = abs(b);\n                 var p, re, im, theta, n, ai, bi, di, ei, ii, th;\n                 p = Symbol.toPolarFormArray(a);\n                 theta = _.multiply(b.clone(), arg(a));\n                 di = _.pow(p[0], b);\n                 ai = _.trig.cos(theta.clone());\n                 bi = _.trig.sin(theta);\n                 \n                 if(sign < 0) {\n                 re = _.divide(ai, di.clone());\n                 im = _.divide(bi, di);\n                 }\n                 else {\n                 re = _.multiply(ai, di.clone());\n                 im = _.multiply(bi, di);\n                 }\n                 return _.add(re, _.multiply(im, Symbol.imaginary()));\n                 }\n                 */\n\n                //take care of the symbolic part\n                result.toUnitMultiplier();\n                //simpifly sqrt\n                if (result.group === FN && result.fname === SQRT && !bIsConstant) {\n                    var s = result.args[0];\n                    s.multiplyPower(new Symbol(0.5));\n                    s.multiplier.multiply(result.multiplier);\n                    s.multiplyPower(b);\n                    result = s;\n                }\n                else {\n                    var sign = m.sign();\n                    //handle cases such as (-a^3)^(1/4)\n                    if (evenFraction(b) && sign < 0) {\n                        //swaperoo\n                        //first put the sign back on the symbol\n                        result.negate();\n                        //wrap it in brackets\n                        result = _.symfunction(PARENTHESIS, [result]);\n                        //move the sign back the exterior and let nerdamer handle the rest\n                        result.negate();\n                    }\n                    \n                    result.multiplyPower(b);\n                }\n\n                if (aIsConstant && bIsConstant && Settings.PARSE2NUMBER) {\n                        var c;\n                        //remove the sign\n                        if (sign < 0) {\n                            a.negate();\n                            if (b.multiplier.den.equals(2))\n                                //we know that the numerator has to be odd and therefore it's i\n                                c = new Symbol(Settings.IMAGINARY);\n                            else if (isInt(b.multiplier)) {\n                                if (even(b.multiplier))\n                                    c = new Symbol(1);\n                                else\n                                    c = new Symbol(-1);\n                            }\n                            else if (!even(b.multiplier.den)) { \n                                c = new Symbol(Math.pow(sign, b.multiplier.num));\n                            }\n                            else {\n                                c = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\n                            }\n                        }\n\n                        result = new Symbol(Math.pow(a.multiplier.toDecimal(), b.multiplier.toDecimal()));\n                        \n                        //result = new Symbol(Math2.bigpow(a.multiplier, b.multiplier));\n                        //put the back sign\n                        if (c)\n                            result = _.multiply(result, c);\n                }\n                else if (bIsInt && !m.equals(1)) {\n                    var abs_b = b.abs();     \n                    // Provide fall back to JS until big number implementation is improved\n                    if(abs_b.gt(Settings.MAX_EXP)) {\n                        if(b.sign() < 0)\n                            return new Symbol(0);\n                        return Symbol.infinity();\n                    }\n                    else {\n                        var p = b.multiplier.toDecimal();\n                        var sgn = Math.sign(p);\n                        p = Math.abs(p);\n                        var multiplier = new Frac(1);\n                        multiplier.num = m.num.pow(p);\n                        multiplier.den = m.den.pow(p);\n                        if (sgn < 0)\n                            multiplier.invert();\n                        //multiplying is justified since after mulltiplyPower if it was of group P it will now be of group N\n                        result.multiplier = result.multiplier.multiply(multiplier);\n                    }\n                }\n                else { \n                    var sign = a.sign();\n                    if (b.isConstant() && a.isConstant() && !b.multiplier.den.equals(1) && sign < 0) {\n                        //we know the sign is negative so if the denominator for b == 2 then it's i\n                        if (b.multiplier.den.equals(2)) {\n                            var i = new Symbol(Settings.IMAGINARY);\n                            a.negate();//remove the sign\n                            //if the power is negative then i is negative\n                            if (b.lessThan(0)) {\n                                i.negate();\n                                b.negate();//remove the sign from the power\n                            }\n                            //pull the power normally and put back the imaginary\n                            result = _.multiply(_.pow(a, b), i);\n                        }\n                        else {\n//                            if(a.equals(-1)) {\n//                                var theta = _.multiply(b, _.parse('pi'));\n//                                result = evaluate(_.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta))));\n//                            }\n//                            else {\n                            var aa = a.clone();\n                            aa.multiplier.negate();\n                            result = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\n                            var _a = _.pow(new Symbol(aa.multiplier.num), b.clone());\n                            var _b = _.pow(new Symbol(aa.multiplier.den), b.clone());\n                            var r = _.divide(_a, _b);\n                            result = _.multiply(result, r);\n//                            }  \n                        }\n                    }\n                    else if (Settings.PARSE2NUMBER && b.isImaginary()) {\n                        //4^(i + 2) = e^(- (2 - 4 i) π n + (2 + i) log(4))\n                        var re, im, aa, a1, b1, c1;\n                        aa = a.clone().toLinear();\n                        re = b.realpart();\n                        im = b.imagpart();\n                        a1 = _.pow(aa.clone(), re);\n                        b1 = trig.cos(_.multiply(im.clone(), log(aa.clone())));\n                        c1 = _.multiply(trig.sin(_.multiply(im, log(aa))), Symbol.imaginary());\n                        result = _.multiply(a1, _.add(b1, c1));\n                        result = _.expand(_.parse(result));\n                    }\n                    else {\n                        //b is a symbol\n                        var neg_num = a.group === N && sign < 0,\n                                num = testSQRT(new Symbol(neg_num ? m.num : Math.abs(m.num)).setPower(b.clone())),\n                                den = testSQRT(new Symbol(m.den).setPower(b.clone()).invert());\n\n                        //eliminate imaginary if possible\n                        if (a.imaginary) {\n                            if (bIsInt) {\n                                var s, p, n;\n                                s = Math.sign(b);\n                                p = abs(b);\n                                n = p % 4;\n                                result = new Symbol(even(n) ? -1 : Settings.IMAGINARY);\n                                if (n === 0 || s < 0 && (n === 1) || s > 0 && (n === 3)) {\n                                    result.negate();\n                                }\n                            }\n                            else {\n                                //assume i = sqrt(-1) -> (-1)^(1/2)\n                                var nr = b.multiplier.multiply(Frac.quick(1, 2)),\n                                        //the denominator denotes the power so raise to it. It will turn positive it round\n                                        tn = Math.pow(-1, nr.num);\n                                result = even(nr.den) ? new Symbol(-1).setPower(nr, true) : new Symbol(tn);\n                            }\n                        }\n                        //ensure that the sign is carried by the symbol and not the multiplier\n                        //this enables us to check down the line if the multiplier can indeed be transferred\n                        if (sign < 0 && !neg_num)\n                            result.negate();\n\n                        //retain the absolute value\n                        if (bIsConstant && a.group !== EX) {\n                            var evenr = even(b.multiplier.den),\n                                    evenp = even(a.power),\n                                    n = result.power.toDecimal(),\n                                    evennp = even(n);\n                            if (evenr && evenp && !evennp) {\n                                if (n === 1)\n                                    result = _.symfunction(ABS, [result]);\n                                else if (!isInt(n)) {\n                                    var p = result.power;\n                                    result = _.symfunction(ABS, [result.toLinear()]).setPower(p);\n                                }\n                                else {\n                                    result = _.multiply(_.symfunction(ABS, [result.clone().toLinear()]),\n                                            result.clone().setPower(new Frac(n - 1)));\n                                }\n                                //quick workaround. Revisit\n                                if (Settings.POSITIVE_MULTIPLIERS && result.fname === ABS)\n                                    result = result.args[0];\n                            }\n                        }\n                        //multiply out sqrt\n                        if(b.equals(2) && result.group === CB) {\n                            var _result = new Symbol(1);\n                            result.each(function(sym) {\n                                _result = _.multiply(_result, _.pow(sym, b));\n                            });\n                            result = _result;\n                        }\n                    }\n                }\n\n                result = testSQRT(result);\n\n                //don't multiply until we've tested the remaining symbol\n                if (num && den)\n                    result = _.multiply(result, testPow(_.multiply(num, den)));\n\n                //reduce square root\n                if (result.fname === SQRT) {\n                    var isEX = result.group === EX;\n                    var t = isEX ? result.power.multiplier.toString() : result.power.toString();\n                    if (even(t)) {\n                        var pt = isEX ? _.divide(result.power, new Symbol(2)) : new Symbol(result.power.divide(new Frac(2))),\n                                m = result.multiplier;\n                        result = _.pow(result.args[0], pt);\n                        result.multiplier = result.multiplier.multiply(m);\n                    }\n                }\n                //detect Euler's identity\n                else if (!Settings.IGNORE_E && result.isE() && result.group === EX && result.power.contains('pi')\n                        && result.power.contains(Settings.IMAGINARY)) {\n                    var theta = b.stripVar(Settings.IMAGINARY);\n                    result = _.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta)));\n//                    //we have a match\n//                    var m1 = result.multiplier,\n//                            m2 = result.power.multiplier;\n//                    result = new Symbol(even(m2.num) ? m1 : m1.negate());\n//                    result = _.pow(result, new Symbol(m2.den).invert());\n                }\n                \n                return result;\n            }\n            else {\n                if (isVector(a) && bIsSymbol) {\n                    a = a.map(function (x) {\n                        return _.pow(x, b.clone());\n                    });\n                }\n                else if (isMatrix(a) && bIsSymbol) {\n                    var M = new Matrix();\n                    a.eachElement(function (x, i, j) {\n                        M.set(i, j, _.pow(x, b.clone()));\n                    });\n                    a = M;\n                }\n                else if(aIsSymbol && isMatrix(b)) {\n                    var M = new Matrix();\n                    b.eachElement(function (x, i, j) {\n                        M.set(i, j, _.pow(a.clone(), x));\n                    });\n                    a = M;\n                }\n                return a;\n            }\n        };\n        //gets called when the parser finds the , operator. \n        //Commas return a Collector object which roughly an array\n        this.comma = function (a, b) {\n            if (!(a instanceof Collection))\n                a = Collection.create(a);\n            a.append(b);\n            return a;\n        };\n        //link to modulus\n        this.mod = function (a, b) {\n            return mod(a, b);\n        };\n        //used to slice elements from arrays\n        this.slice = function (a, b) {\n            return new Slice(a, b);\n        };\n        //the equality setter\n        this.equals = function (a, b) {\n            //equality can only be set for group S so complain it's not\n            if (a.group !== S && !a.isLinear())\n                err('Cannot set equality for ' + a.toString());\n            VARS[a.value] = b.clone();\n            return b;\n        };\n        //percent\n        this.percent = function (a) {\n            return _.divide(a, new Symbol(100));\n        };\n        //set variable\n        this.assign = function (a, b) {\n            if (a instanceof Collection && b instanceof Collection) {\n                a.elements.map(function (x, i) {\n                    return _.assign(x, b.elements[i]);\n                });\n                return Vector.fromArray(b.elements);\n            }\n            if(a.parent) {\n                //it's referring to the parent instead. The current item can be discarded\n                var e = a.parent;\n                e.elements[e.getter] = b;\n                delete e.getter;\n                return e;\n            }\n            \n            if (a.group !== S)\n                throw new NerdamerValueError('Cannot complete operation. Incorrect LH value for ' + a);\n            VARS[a.value] = b;\n            return b;\n        };\n        this.function_assign = function (a, b) {\n            var f = a.elements.pop();\n            return setFunction(f, a.elements, b);\n        };\n        //function to quickly convert bools to Symbols\n        var bool2Symbol = function (x) {\n            return new Symbol(x === true ? 1 : 0);\n        };\n        //check for equality\n        this.eq = function (a, b) {\n            return bool2Symbol(a.equals(b));\n        };\n        //checks for greater than\n        this.gt = function (a, b) {\n            return bool2Symbol(a.gt(b));\n        };\n        //checks for greater than equal\n        this.gte = function (a, b) {\n            return bool2Symbol(a.gte(b));\n        };\n        //checks for less than\n        this.lt = function (a, b) {\n            return bool2Symbol(a.lt(b));\n        };\n        //checks for less than equal\n        this.lte = function (a, b) {\n            return bool2Symbol(a.lte(b));\n        };\n        //wraps the factorial\n        this.factorial = function (a) {\n            return this.symfunction(FACTORIAL, [a]);\n        };\n        //wraps the double factorial\n        this.dfactorial = function (a) {\n            return this.symfunction(DOUBLEFACTORIAL, [a]);\n        };\n    }\n    ;\n\n    /* \"STATIC\" */\n    //converts a number to a fraction. \n    var Fraction = {\n        /**\n         * Converts a decimal to a fraction\n         * @param {number} value\n         * @param {object} opts\n         * @returns {Array} - an array containing the denominator and the numerator\n         */\n        convert: function (value, opts) {\n            var frac;\n            if (value === 0) {\n                frac = [0, 1];\n            }\n            else {\n                if (value < 1e-6 || value > 1e20) {\n                    var qc = this.quickConversion(Number(value));\n                    if (qc[1] <= 1e20) {\n                        var abs = Math.abs(value);\n                        var sign = value / abs;\n                        frac = this.fullConversion(abs.toFixed((qc[1] + '').length - 1));\n                        frac[0] = frac[0] * sign;\n                    }\n                    else {\n                        frac = qc;\n                    }\n                }\n                else {\n                    frac = this.fullConversion(value);\n                }\n            }\n            return frac;\n        },\n        /**\n         * If the fraction is too small or too large this gets called instead of fullConversion method\n         * @param {number} dec\n         * @returns {Array} - an array containing the denominator and the numerator\n         */\n        quickConversion: function (dec) {\n            var x = (dec.toExponential() + '').split('e');\n            var d = x[0].split('.')[1];// get the number of places after the decimal\n            var l = (d ? d.length : 0)-parseInt(x[1]); // maybe the coefficient is an integer;\n            //call Math.round to avoid rounding error\n            return [Math.round(Math.pow(10, l) * x[0]), Math.pow(10, Math.abs(x[1]) + l)];\n        },\n        /**\n         * Returns a good approximation of a fraction. This method gets called by convert\n         * http://mathforum.org/library/drmath/view/61772.html\n         * Decimal To Fraction Conversion - A Simpler Version\n         * Dr Peterson\n         * @param {number} dec\n         * @returns {Array} - an array containing the denominator and the numerator\n         */\n        fullConversion: function (dec) {\n            var done = false;\n            //you can adjust the epsilon to a larger number if you don't need very high precision\n            var n1 = 0, d1 = 1, n2 = 1, d2 = 0, n = 0, q = dec, epsilon = 1e-16;\n            while (!done) {\n                n++;\n                if (n > 10000) {\n                    done = true;\n                }\n                var a = Math.floor(q);\n                var num = n1 + a * n2;\n                var den = d1 + a * d2;\n                var e = (q - a);\n                if (e < epsilon) {\n                    done = true;\n                }\n                q = 1 / e;\n                n1 = n2;\n                d1 = d2;\n                n2 = num;\n                d2 = den;\n                if (Math.abs(num / den - dec) < epsilon || n > 30) {\n                    done = true;\n                }\n            }\n            return [num, den];\n        }\n    };\n    //Depends on Fraction\n\n    //The latex generator\n    var LaTeX = {\n        parser: (function () {\n            //create a parser and strip it from everything except the items that you need\n            var keep = ['classes', 'setOperator', 'getOperators', 'getBrackets', 'tokenize', 'toRPN', 'tree', 'units'];\n            var parser = new Parser();\n            for (var x in parser) {\n                if (keep.indexOf(x) === -1)\n                    delete parser[x];\n            }\n            //declare the operators\n            parser.setOperator({\n                precedence: 8,\n                operator: '\\\\',\n                action: 'slash',\n                prefix: true,\n                postfix: false,\n                leftAssoc: true,\n                operation: function (e) {\n                    return e; //bypass the slash\n                }\n            });\n            parser.setOperator({\n                precedence: 8,\n                operator: '\\\\,',\n                action: 'slash_comma',\n                prefix: true,\n                postfix: false,\n                leftAssoc: true,\n                operation: function (e) {\n                    return e; //bypass the slash\n                }\n            });\n            //have braces not map to anything. We want them to be return as-is\n            var brackets = parser.getBrackets();\n            brackets['{'].maps_to = undefined;\n            return parser;\n        })(),\n        space: '~',\n        dot: ' \\\\cdot ',\n        //grab a list of supported functions but remove the excluded ones found in exclFN\n\n        latex: function (symbol, option) {\n            //it might be an array\n            if (symbol.clone) {\n                symbol = symbol.clone(); //leave original as-is\n            }\n            if (symbol instanceof _.classes.Collection)\n                symbol = symbol.elements;\n\n            if (isArray(symbol)) {\n                var LaTeXArray = [];\n                for (var i = 0; i < symbol.length; i++) {\n                    var sym = symbol[i];\n                    //This way I can generate LaTeX on an array of strings.\n                    if (!isSymbol(sym))\n                        sym = _.parse(sym);\n                    LaTeXArray.push(this.latex(sym, option));\n                }\n                return this.brackets(LaTeXArray.join(', '), 'square');\n            }\n\n            else if (isMatrix(symbol)) {\n                var TeX = '\\\\begin{pmatrix}\\n';\n                for (var i = 0; i < symbol.elements.length; i++) {\n                    var rowTeX = [],\n                            e = symbol.elements[i];\n                    for (var j = 0; j < e.length; j++) {\n                        rowTeX.push(this.latex(e[j], option));\n                    }\n                    TeX += rowTeX.join(' & ');\n                    if (i < symbol.elements.length - 1) {\n                        TeX += '\\\\\\\\\\n';\n                    }\n                }\n                TeX += '\\\\end{pmatrix}';\n                return TeX;\n            }\n\n            else if (isVector(symbol)) {\n                var TeX = '\\\\left[';\n                for (var i = 0; i < symbol.elements.length; i++) {\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\n                }\n                TeX += '\\\\right]';\n                return TeX;\n            }\n            \n            else if(isSet(symbol)) {\n                var TeX = '\\\\{';\n                for (var i = 0; i < symbol.elements.length; i++) {\n                    TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\n                }\n                TeX += '\\\\}';\n                return TeX;\n            }\n\n            symbol = symbol.clone();\n            var decimal = (option === 'decimal' || option === 'decimals'),\n                    power = symbol.power,\n                    invert = isNegative(power),\n                    negative = symbol.multiplier.lessThan(0);\n\n            if (symbol.group === P && decimal) {\n                return String(symbol.multiplier.toDecimal() * Math.pow(symbol.value, symbol.power.toDecimal()));\n            }\n            else {\n                symbol.multiplier = symbol.multiplier.abs();\n\n                //if the user wants the result in decimal format then return it as such by placing it at the top part\n                var m_array;\n\n                if (decimal) {\n                    var m = String(symbol.multiplier.toDecimal());\n                    //if(String(m) === '1' && !decimal) m = '';\n                    m_array = [m, ''];\n                }\n                else {\n                    m_array = [symbol.multiplier.num, symbol.multiplier.den];\n                }\n                //get the value as a two part array\n                var v_array = this.value(symbol, invert, option, negative),\n                        p;\n                //make it all positive since we know whether to push the power to the numerator or denominator already.\n                if (invert)\n                    power.negate();\n                //the power is simple since it requires no additional formatting. We can get it to a\n                //string right away. pass in true to neglect unit powers\n                if (decimal) {\n                    p = isSymbol(power) ? LaTeX.latex(power, option) : String(power.toDecimal());\n                    if (String(p) === '1')\n                        p = '';\n                }\n                //get the latex representation\n                else if (isSymbol(power))\n                    p = this.latex(power, option);\n                //get it as a fraction\n                else\n                    p = this.formatFrac(power, true);\n                //use this array to specify if the power is getting attached to the top or the bottom\n                var p_array = ['', ''],\n                        //stick it to the top or the bottom. If it's negative then the power gets placed on the bottom\n                        index = invert ? 1 : 0;\n                p_array[index] = p;\n\n                //special case group P and decimal\n                var retval = (negative ? '-' : '') + this.set(m_array, v_array, p_array, symbol.group === CB);\n\n                return retval.replace(/\\+\\-/gi, '-');\n            }\n\n        },\n        //greek mapping\n        greek: {\n            alpha: '\\\\alpha',\n            beta: '\\\\beta',\n            gamma: '\\\\gamma',\n            delta: '\\\\delta',\n            epsilon: '\\\\epsilon',\n            zeta: '\\\\zeta',\n            eta: '\\\\eta',\n            theta: '\\\\theta',\n            iota: '\\\\iota',\n            kappa: '\\\\kappa',\n            lambda: '\\\\lambda',\n            mu: '\\\\mu',\n            nu: '\\\\nu',\n            xi: '\\\\xi',\n            omnikron: '\\\\omnikron',\n            pi: '\\\\pi',\n            rho: '\\\\rho',\n            sigma: '\\\\sigma',\n            tau: '\\\\tau',\n            upsilon: '\\\\upsilon',\n            phi: '\\\\phi',\n            chi: '\\\\chi',\n            psi: '\\\\psi',\n            omega: '\\\\omega',\n            Gamma: '\\\\Gamma',\n            Delta: '\\\\Delta',\n            Epsilon: '\\\\Epsilon',\n            Theta: '\\\\Theta',\n            Lambda: '\\\\Lambda',\n            Xi: '\\\\Xi',\n            Pi: '\\\\Pi',\n            Sigma: '\\\\Sigma',\n            Phi: '\\\\Phi',\n            Psi: '\\\\Psi',\n            Omega: '\\\\Omega'\n        },\n        symbols: {\n            arccos: '\\\\arccos',\n            cos: '\\\\cos',\n            csc: '\\\\csc',\n            exp: '\\\\exp',\n            ker: '\\\\ker',\n            limsup: '\\\\limsup',\n            min: '\\\\min',\n            sinh: '\\\\sinh',\n            arcsin: '\\\\arcsin',\n            cosh: '\\\\cosh',\n            deg: '\\\\deg',\n            gcd: '\\\\gcd',\n            lg: '\\\\lg',\n            ln: '\\\\ln',\n            Pr: '\\\\Pr',\n            sqrt: '\\\\sqrt',\n            sup: '\\\\sup',\n            arctan: '\\\\arctan',\n            cot: '\\\\cot',\n            det: '\\\\det',\n            hom: '\\\\hom',\n            lim: '\\\\lim',\n            log: '\\\\log',\n            LN:  '\\\\LN',\n            sec: '\\\\sec',\n            tan: '\\\\tan',\n            arg: '\\\\arg',\n            coth: '\\\\coth',\n            dim: '\\\\dim',\n            inf: '\\\\inf',\n            liminf: '\\\\liminf',\n            max: '\\\\max',\n            sin: '\\\\sin',\n            tanh: '\\\\tanh'\n        },\n        //get the raw value of the symbol as an array\n        value: function (symbol, inverted, option, negative) {\n            var group = symbol.group,\n                    previousGroup = symbol.previousGroup,\n                    v = ['', ''],\n                    index = inverted ? 1 : 0;\n            /*if(group === N) //do nothing since we want to return top & bottom blank; */\n            if (symbol.isInfinity) {\n                v[index] = '\\\\infty';\n            }\n            else if (group === S || group === P || previousGroup === S || previousGroup === P || previousGroup === N) {\n                var value = symbol.value;\n                if (value.replace)\n                    value = value.replace(/(.+)_$/, '$1\\\\_');\n                //split it so we can check for instances of alpha as well as alpha_b\n                var t_varray = String(value).split('_');\n                var greek = this.greek[t_varray[0]];\n                if (greek) {\n                    t_varray[0] = greek;\n                    value = t_varray.join('_');\n                }\n                var symbol = this.symbols[t_varray[0]];\n                if (symbol) {\n                    t_varray[0] = symbol;\n                    value = t_varray.join('_');\n                }\n                v[index] = value;\n            }\n            else if (group === FN || previousGroup === FN) {\n                var name,\n                        input = [],\n                        fname = symbol.fname;\n                //collect the arguments\n                for (var i = 0; i < symbol.args.length; i++) {\n                    var arg = symbol.args[i], item;\n                    if (typeof arg === 'string')\n                        item = arg;\n                    else {\n                        item = this.latex(arg, option);\n                    }\n                    input.push(item);\n                }\n\n                if (fname === SQRT) {\n                    v[index] = '\\\\sqrt' + this.braces(input.join(','));\n                }\n                else if (fname === ABS) {\n                    v[index] = this.brackets(input.join(','), 'abs');\n                }\n                else if (fname === PARENTHESIS) {\n                    v[index] = this.brackets(input.join(','), 'parens');\n                }\n                else if (fname === 'limit') {\n                    v[index] = ' \\\\lim\\\\limits_{' + input[1] + ' \\\\to ' + input[2] + '} ' + input[0];\n                }\n                else if (fname === 'integrate') {\n                    v[index] = '\\\\int' + this.braces(input[0]) + this.braces('d' + input[1]);\n                }\n                else if (fname === 'defint') {\n                    v[index] = '\\\\int\\\\limits_' + this.braces(input[1]) + '^' + this.braces(input[2]) + ' ' + input[0] + ' d' + input[3];\n                }\n                else if (fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\n                    var arg = symbol.args[0];\n                    if (arg.power.equals(1) && (arg.isComposite() || arg.isCombination())) {\n                        input[0] = this.brackets(input[0]);\n                    }\n                    v[index] = input[0] + (fname === FACTORIAL ? '!' : '!!');\n                }\n                else if (fname === 'floor') {\n                    v[index] = '\\\\left \\\\lfloor' + this.braces(input[0]) + '\\\\right \\\\rfloor';\n                }\n                else if (fname === 'ceil') {\n                    v[index] = '\\\\left \\\\lceil' + this.braces(input[0]) + '\\\\right \\\\rceil';\n                }\n                //capture log(a, b)\n                else if (fname === Settings.LOG && input.length > 1) {\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(input[1]) + this.brackets(input[0]);\n                }\n                //capture log(a, b)\n                else if (fname === Settings.LOG10) {\n                    v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(10) + this.brackets(input[0]);\n                }\n                else if (fname === 'sum') {\n                    var a = input[0],\n                            b = input[1],\n                            c = input[2],\n                            d = input[3];\n                    v[index] = '\\\\sum\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\n                }\n                else if (fname === 'product') {\n                    var a = input[0],\n                            b = input[1],\n                            c = input[2],\n                            d = input[3];\n                    v[index] = '\\\\prod\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\n                }\n                else if (fname === 'nthroot') {\n                    v[index] = '\\\\sqrt[' + input[1] + ']' + this.braces(input[0]);\n                }\n                else if (fname === 'mod') {\n                    v[index] = input[0] + ' \\\\bmod ' + input[1];\n                }\n                else if (fname === 'realpart') {\n                    v[index] = '\\\\operatorname{Re}' + this.brackets(input[0]);\n                }\n                else if (fname === 'imagpart') {\n                    v[index] = '\\\\operatorname{Im}' + this.brackets(input[0]);\n                }\n                else {\n                    var name = fname !== '' ? '\\\\mathrm' + this.braces(fname.replace(/_/g, '\\\\_')) : '';\n                    if (symbol.isConversion)\n                        v[index] = name + this.brackets(input.join(''), 'parens');\n                    else\n                        v[index] = name + this.brackets(input.join(','), 'parens');\n                }\n            }\n            else if (symbol.isComposite()) {\n                var collected = symbol.collectSymbols().sort(\n                        group === CP || previousGroup === CP ?\n                        function (a, b) {\n                            return b.group - a.group;\n                        } :\n                        function (a, b) {\n                            var x = isSymbol(a.power) ? -1 : a.power;\n                            var y = isSymbol(b.power) ? -1 : b.power;\n                            return y - x;\n                        }\n                ),\n                        symbols = [],\n                        l = collected.length;\n                for (var i = 0; i < l; i++) {\n                    symbols.push(LaTeX.latex(collected[i], option));\n                }\n                var value = symbols.join('+');\n\n                v[index] = !(symbol.isLinear() && symbol.multiplier.equals(1)) || negative ? this.brackets(value, 'parens') : value;\n            }\n            else if (group === CB || previousGroup === EX || previousGroup === CB) {\n                if (group === CB)\n                    symbol.distributeExponent();\n                //this almost feels a little like cheating but I need to know if I should be wrapping the symbol\n                //in brackets or not. We'll do this by checking the value of the numerator and then comparing it \n                //to whether the symbol value is \"simple\" or not.\n                var denominator = [],\n                        numerator = [];\n                //generate a profile\n                var den_map = [], num_map = [], num_c = 0, den_c = 0;\n                var setBrackets = function (container, map, counter) {\n                    if (counter > 1 && map.length > 0) {\n                        var l = map.length;\n                        for (var i = 0; i < l; i++) {\n                            var idx = map[i], item = container[idx];\n                            if (!(/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(item) || /^\\\\left\\(.+\\\\right\\)$/g.test(item))) {\n                                container[idx] = LaTeX.brackets(item, 'parens');\n                            }\n                        }\n                    }\n                    return container;\n                };\n\n                //generate latex for each of them\n                symbol.each(function (x) {\n                    var isDenom = isNegative(x.power),\n                            laTex;\n\n                    if (isDenom) {\n                        laTex = LaTeX.latex(x.invert(), option);\n                        den_c++;\n                        if (x.isComposite()) {\n                            if (symbol.multiplier.den != 1 && Math.abs(x.power) == 1)\n                                laTex = LaTeX.brackets(laTex, 'parens');\n                            den_map.push(denominator.length); //make a note of where the composite was found \n                        }\n\n                        denominator.push(laTex);\n                    }\n                    else {\n                        laTex = LaTeX.latex(x, option);\n                        num_c++;\n                        if (x.isComposite()) {\n                            if (symbol.multiplier.num != 1 && Math.abs(x.power) == 1)\n                                laTex = LaTeX.brackets(laTex, 'parens');\n                            num_map.push(numerator.length);   //make a note of where the composite was found \n                        }\n                        numerator.push(laTex);\n                    }\n                });\n\n                //apply brackets\n                setBrackets(numerator, num_map, num_c);\n                v[0] = numerator.join(this.dot); //collapse the numerator into one string\n\n                setBrackets(denominator, den_map, den_c);\n                v[1] = denominator.join(this.dot);\n            }\n\n            return v;\n        },\n        set: function (m, v, p, combine_power) {\n            var isBracketed = function (v) {\n                return /^\\\\left\\(.+\\\\right\\)$/.test(v);\n            };\n            //format the power if it exists\n            if (p)\n                p = this.formatP(p);\n            //group CB will have to be wrapped since the power applies to both it's numerator and denominator\n            if (combine_power) {\n                //POSSIBLE BUG: If powers for group CB format wrong, investigate this since I might have overlooked something\n                //the assumption is that in every case the denonimator should be empty when dealing with CB. I can't think\n                //of a case where this isn't true\n                var tp = p[0];\n                p[0] = ''; //temporarily make p blank\n            }\n\n            //merge v and p. Not that v MUST be first since the order matters\n            v = this.merge(v, p);\n            var mn = m[0], md = m[1], vn = v[0], vd = v[1];\n            //filters\n            //if the top has a variable but the numerator is one drop it\n            if (vn && Number(mn) === 1)\n                mn = '';\n            //if denominator is 1 drop it always\n            if (Number(md) === 1)\n                md = '';\n            //prepare the top portion but check that it's not already bracketed. If it is then leave out the cdot\n            var top = this.join(mn, vn, !isBracketed(vn) ? this.dot : '');\n\n            //prepare the bottom portion but check that it's not already bracketed. If it is then leave out the cdot\n            var bottom = this.join(md, vd, !isBracketed(vd) ? this.dot : '');\n            //format the power if it exists\n            //make it a fraction if both top and bottom exists\n            if (top && bottom) {\n                var frac = this.frac(top, bottom);\n                if (combine_power && tp)\n                    frac = this.brackets(frac) + tp;\n                return frac;\n            }\n            //otherwise only the top exists so return that\n            else\n                return top;\n        },\n        merge: function (a, b) {\n            var r = [];\n            for (var i = 0; i < 2; i++)\n                r[i] = a[i] + b[i];\n            return r;\n        },\n        //joins together two strings if both exist\n        join: function (n, d, glue) {\n            if (!n && !d)\n                return '';\n            if (n && !d)\n                return n;\n            if (d && !n)\n                return d;\n            return n + glue + d;\n        },\n        formatP: function (p_array) {\n            for (var i = 0; i < 2; i++) {\n                var p = p_array[i];\n                if (p)\n                    p_array[i] = '^' + this.braces(p);\n            }\n            return p_array;\n        },\n        /**\n         * formats the fractions accordingly.\n         * @param {Frac} f\n         * @param {bool} is_pow\n         */\n        formatFrac: function (f, is_pow) {\n            var n = f.num.toString(),\n                    d = f.den.toString();\n            //no need to have x^1\n            if (is_pow && n === '1' && d === '1')\n                return '';\n            //no need to have x/1\n            if (d === '1')\n                return n;\n            return this.frac(n, d);\n        },\n        frac: function (n, d) {\n            return '\\\\frac' + this.braces(n) + this.braces(d);\n        },\n        braces: function (e) {\n            return '{' + e + '}';\n        },\n        brackets: function (e, typ) {\n            typ = typ || 'parens';\n            var bracketTypes = {\n                parens: ['(', ')'],\n                square: ['[', ']'],\n                brace: ['{', '}'],\n                abs: ['|', '|'],\n                angle: ['\\\\langle', '\\\\rangle']\n            };\n            var bracket = bracketTypes[typ];\n            return '\\\\left' + bracket[0] + e + '\\\\right' + bracket[1];\n        },\n        /**\n         * Removes extreneous tokens\n         * @param {Tokens[]} tokens\n         * @returns {Tokens[]}\n         */\n        filterTokens: function (tokens) {\n            var filtered = [];\n            //the items that need to be disposed\n            var d = ['\\\\', 'left', 'right', 'big', 'Big', 'large', 'Large'];\n            for (var i = 0, l = tokens.length; i < l; i++) {\n                var token = tokens[i];\n                if (isArray(token))\n                    filtered.push(LaTeX.filterTokens(token));\n                else if (d.indexOf(token.value) === -1)\n                    filtered.push(token);\n            }\n            return filtered;\n        },\n        /*\n         * Parses tokens from LaTeX string. Does not do any error checking\n         * @param {Tokens[]} rpn\n         * @returns {String}\n         */\n        parse: function (raw_tokens) {\n            var i, l;\n            var retval = '';\n            var tokens = this.filterTokens(raw_tokens);\n            var replace = {\n                'cdot': '',\n                'times': '',\n                'infty': 'Infinity'\n            };\n            //get the next token\n            var next = function () {\n                return tokens[++i];\n            };\n            var parse_next = function () {\n                return LaTeX.parse(next());\n            };\n            var get = function (token) {\n                if (token in replace)\n                    return replace[token];\n                return token;\n            };\n\n            //start parsing the tokens\n            for (i = 0, l = tokens.length; i < l; i++) {\n                var token = tokens[i];\n                //fractions\n                if (token.value === 'frac') {\n                    //parse and wrap it in brackets\n                    var n = parse_next();\n                    var d = parse_next();\n                    retval += n + '/' + d;\n                }\n                else if (token.value in LaTeX.symbols) {\n                    retval += token.value + parse_next();\n                }\n                else if (token.value === 'int') {\n                    var f = parse_next();\n                    //skip the comma\n                    i++;\n                    //get the variable of integration\n                    var dx = next().value;\n                    dx = get(dx.substring(1, dx.length));\n                    retval += 'integrate' + inBrackets(f + ',' + dx);\n                }\n                else if (token.value === 'mathrm') {\n                    var f = tokens[++i][0].value;\n                    retval += f + parse_next();\n                }\n                //sum and product\n                else if (token.value === 'sum_' || token.value === 'prod_') {\n                    var fn = token.value === 'sum_' ? 'sum' : 'product';\n                    var nxt = next();\n                    i++; //skip the caret\n                    var end = parse_next();\n                    var f = parse_next();\n                    retval += fn + inBrackets([f, get(nxt[0]), get(nxt[2]), get(end)].join(','));\n                }\n                else if (token.value === 'lim_') {\n                    var nxt = next();\n                    retval += 'limit' + inBrackets([parse_next(), get(nxt[0]), get(nxt[2])].join(','));\n                }\n                else {\n                    if(Array.isArray(token)) {\n                        retval += get(LaTeX.parse(token));\n                    }\n                    else\n                        retval += get(token.value.toString());\n                }\n            }\n            return inBrackets(retval);\n        }\n    };\n//Vector =======================================================================    \n    function Vector(v) {\n        if (isVector(v))\n            this.elements = v.items.slice(0);\n        else if (isArray(v))\n            this.elements = v.slice(0);\n        else\n            this.elements = [].slice.call(arguments);\n    }\n    /*\n     * Generates a pre-filled array\n     * @param {type} n\n     * @param {type} val\n     * @returns {unresolved}\n     */\n    Vector.arrayPrefill = function (n, val) {\n        var a = [];\n        val = val || 0;\n        for (var i = 0; i < n; i++)\n            a[i] = val;\n        return a;\n    };\n    /**\n     * Generate a vector from and array\n     * @param {type} a\n     * @returns {unresolved}\n     */\n    Vector.fromArray = function (a) {\n        var v = new Vector();\n        v.elements = a;\n        return v;\n    };\n    \n    /**\n     * Convert a Set to a Vector\n     * @param {Set} set\n     * @returns {Vector}\n     */\n    Vector.fromSet = function(set) {\n        return Vector.fromArray(set.elements);\n    };\n    \n    //Ported from Sylvester.js\n    Vector.prototype = {\n        custom: true,\n        // Returns element i of the vector\n        e: function (i) {\n            return (i < 1 || i > this.elements.length) ? null : this.elements[i - 1];\n        },\n\n        set: function (i, val) {\n            if (!isSymbol(val))\n                val = new Symbol(val);\n            this.elements[i] = val;\n        },\n\n        // Returns the number of elements the vector has\n        dimensions: function () {\n            return this.elements.length;\n        },\n\n        // Returns the modulus ('length') of the vector\n        modulus: function () {\n            return block('SAFE', function () {\n                return _.pow((this.dot(this.clone())), new Symbol(0.5));\n            }, undefined, this);\n        },\n\n        // Returns true iff the vector is equal to the argument\n        eql: function (vector) {\n            var n = this.elements.length;\n            var V = vector.elements || vector;\n            if (n !== V.length) {\n                return false;\n            }\n            do {\n                if (Math.abs(_.subtract(this.elements[n - 1], V[n - 1]).valueOf()) > PRECISION) {\n                    return false;\n                }\n            }\n            while (--n);\n            return true;\n        },\n\n        // Returns a clone of the vector\n        clone: function () {\n            var V = new Vector(),\n                    l = this.elements.length;\n            for (var i = 0; i < l; i++) {\n                //Rule: all items within the vector must have a clone method.\n                V.elements.push(this.elements[i].clone());\n            }\n            if (this.getter) {\n                V.getter = this.getter.clone();\n            }\n            return V;\n        },\n\n        // Maps the vector to another vector according to the given function\n        map: function (fn) {\n            var elements = [];\n            this.each(function (x, i) {\n                elements.push(fn(x, i));\n            });\n\n            return new Vector(elements);\n        },\n\n        // Calls the iterator for each element of the vector in turn\n        each: function (fn) {\n            var n = this.elements.length, k = n, i;\n            do {\n                i = k - n;\n                fn(this.elements[i], i + 1);\n            }\n            while (--n);\n        },\n\n        // Returns a new vector created by normalizing the receiver\n        toUnitVector: function () {\n            return block('SAFE', function () {\n                var r = this.modulus();\n                if (r.valueOf() === 0) {\n                    return this.clone();\n                }\n                return this.map(function (x) {\n                    return _.divide(x, r);\n                });\n            }, undefined, this);\n        },\n\n        // Returns the angle between the vector and the argument (also a vector)\n        angleFrom: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                var n = this.elements.length;\n                if (n !== V.length) {\n                    return null;\n                }\n                var dot = new Symbol(0), mod1 = new Symbol(0), mod2 = new Symbol(0);\n                // Work things out in parallel to save time\n                this.each(function (x, i) {\n                    dot = _.add(dot, _.multiply(x, V[i - 1]));\n                    mod1 = _.add(mod1, _.multiply(x, x));//will not conflict in safe block\n                    mod2 = _.add(mod2, _.multiply(V[i - 1], V[i - 1]));//will not conflict in safe block\n                });\n                mod1 = _.pow(mod1, new Symbol(0.5));\n                mod2 = _.pow(mod2, new Symbol(0.5));\n                var product = _.multiply(mod1, mod2);\n                if (product.valueOf() === 0) {\n                    return null;\n                }\n                var theta = _.divide(dot, product);\n                var theta_val = theta.valueOf();\n                if (theta_val < -1) {\n                    theta = -1;\n                }\n                if (theta_val > 1) {\n                    theta = 1;\n                }\n                return new Symbol(Math.acos(theta));\n            }, undefined, this);\n        },\n\n        // Returns true iff the vector is parallel to the argument\n        isParallelTo: function (vector) {\n            var angle = this.angleFrom(vector).valueOf();\n            return (angle === null) ? null : (angle <= PRECISION);\n        },\n\n        // Returns true iff the vector is antiparallel to the argument\n        isAntiparallelTo: function (vector) {\n            var angle = this.angleFrom(vector).valueOf();\n            return (angle === null) ? null : (Math.abs(angle - Math.PI) <= PRECISION);\n        },\n\n        // Returns true iff the vector is perpendicular to the argument\n        isPerpendicularTo: function (vector) {\n            var dot = this.dot(vector);\n            return (dot === null) ? null : (Math.abs(dot) <= PRECISION);\n        },\n\n        // Returns the result of adding the argument to the vector\n        add: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                if (this.elements.length !== V.length) {\n                    return null;\n                }\n                return this.map(function (x, i) {\n                    return _.add(x, V[i - 1]);\n                });\n            }, undefined, this);\n        },\n\n        // Returns the result of subtracting the argument from the vector\n        subtract: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                if (this.elements.length !== V.length) {\n                    return null;\n                }\n                return this.map(function (x, i) {\n                    return _.subtract(x, V[i - 1]);\n                });\n            }, undefined, this);\n        },\n\n        // Returns the result of multiplying the elements of the vector by the argument\n        multiply: function (k) {\n            return this.map(function (x) {\n                return x.clone() * k.clone();\n            });\n        },\n\n        x: function (k) {\n            return this.multiply(k);\n        },\n\n        // Returns the scalar product of the vector with the argument\n        // Both vectors must have equal dimensionality\n        dot: function (vector) {\n            return block('SAFE', function () {\n                var V = vector.elements || vector;\n                var product = new Symbol(0), n = this.elements.length;\n                if (n !== V.length) {\n                    return null;\n                }\n                do {\n                    product = _.add(product, _.multiply(this.elements[n - 1], V[n - 1]));\n                }\n                while (--n);\n                return product;\n            }, undefined, this);\n        },\n\n        // Returns the vector product of the vector with the argument\n        // Both vectors must have dimensionality 3\n        cross: function (vector) {\n            var B = vector.elements || vector;\n            if (this.elements.length !== 3 || B.length !== 3) {\n                return null;\n            }\n            var A = this.elements;\n            return block('SAFE', function () {\n                return new Vector([\n                    _.subtract(_.multiply(A[1], B[2]), _.multiply(A[2], B[1])),\n                    _.subtract(_.multiply(A[2], B[0]), _.multiply(A[0], B[2])),\n                    _.subtract(_.multiply(A[0], B[1]), _.multiply(A[1], B[0]))\n                ]);\n            }, undefined, this);\n        },\n\n        // Returns the (absolute) largest element of the vector\n        max: function () {\n            var m = 0, n = this.elements.length, k = n, i;\n            do {\n                i = k - n;\n                if (Math.abs(this.elements[i].valueOf()) > Math.abs(m.valueOf())) {\n                    m = this.elements[i];\n                }\n            }\n            while (--n);\n            return m;\n        },\n        magnitude: function() {\n            var magnitude = new Symbol(0);\n            this.each(function(e) {\n                magnitude = _.add(magnitude, _.pow(e, new Symbol(2)));\n            });\n            return _.sqrt(magnitude);\n        },\n        // Returns the index of the first match found\n        indexOf: function (x) {\n            var index = null, n = this.elements.length, k = n, i;\n            do {\n                i = k - n;\n                if (index === null && this.elements[i].valueOf() === x.valueOf()) {\n                    index = i + 1;\n                }\n            }\n            while (--n);\n            return index;\n        },\n        text: function (x) {\n            return text(this);\n        },\n        toString: function () {\n            return this.text();\n        },\n        latex: function (option) {\n            var tex = [];\n            for (var i = 0; i < this.elements.length; i++) {\n                tex.push(LaTeX.latex.call(LaTeX, this.elements[i], option));\n            }\n            return '[' + tex.join(', ') + ']';\n        }\n    };\n\n//Matrix =======================================================================\n    function Matrix() {\n        var m = arguments,\n                l = m.length, i, el = [];\n        if (isMatrix(m)) { //if it's a matrix then make a clone\n            for (i = 0; i < l; i++) {\n                el.push(m[i].slice(0));\n            }\n        }\n        else {\n            var row, lw, rl;\n            for (i = 0; i < l; i++) {\n                row = m[i];\n                if (isVector(row))\n                    row = row.elements;\n                if (!isArray(row))\n                    row = [row];\n                rl = row.length;\n                if (lw && lw !== rl)\n                    err('Unable to create Matrix. Row dimensions do not match!');\n                el.push(row);\n                lw = rl;\n            }\n        }\n        this.elements = el;\n    }\n    Matrix.identity = function (n) {\n        var m = new Matrix();\n        for (var i = 0; i < n; i++) {\n            m.elements.push([]);\n            for (var j = 0; j < n; j++) {\n                m.set(i, j, i === j ? new Symbol(1) : new Symbol(0));\n            }\n        }\n        return m;\n    };\n    Matrix.fromArray = function (arr) {\n        function F(args) {\n            return Matrix.apply(this, args);\n        }\n        F.prototype = Matrix.prototype;\n\n        return new F(arr);\n    };\n    Matrix.zeroMatrix = function (rows, cols) {\n        var m = new Matrix();\n        for (var i = 0; i < rows; i++) {\n            m.elements.push(Vector.arrayPrefill(cols, new Symbol(0)));\n        }\n        return m;\n    };\n    Matrix.prototype = {\n        //needs be true to let the parser know not to try to cast it to a symbol\n        custom: true,\n        get: function (row, column) {\n            if (!this.elements[row])\n                return undefined;\n            return this.elements[row][column];\n        },\n        map: function(f, raw_values) {\n            var M = new Matrix();\n            this.each(function(e, i, j) {\n                M.set( i, j, f.call(M, e), raw_values);\n            });\n            return M;\n        },\n        set: function (row, column, value, raw) {\n            if (!this.elements[row])\n                this.elements[row] = [];\n            this.elements[row][column] = raw ? value : (isSymbol(value) ? value : new Symbol(value));\n        },\n        cols: function () {\n            return this.elements[0].length;\n        },\n        rows: function () {\n            return this.elements.length;\n        },\n        row: function (n) {\n            if (!n || n > this.cols())\n                return [];\n            return this.elements[n - 1];\n        },\n        col: function (n) {\n            var nr = this.rows(),\n                    col = [];\n            if (n > this.cols() || !n)\n                return col;\n            for (var i = 0; i < nr; i++) {\n                col.push(this.elements[i][n - 1]);\n            }\n            return col;\n        },\n        eachElement: function (fn) {\n            var nr = this.rows(),\n                    nc = this.cols(), i, j;\n            for (i = 0; i < nr; i++) {\n                for (j = 0; j < nc; j++) {\n                    fn.call(this, this.elements[i][j], i, j);\n                }\n            }\n        },\n        //ported from Sylvester.js\n        determinant: function () {\n            if (!this.isSquare()) {\n                return null;\n            }\n            var M = this.toRightTriangular();\n            var det = M.elements[0][0], n = M.elements.length - 1, k = n, i;\n            do {\n                i = k - n + 1;\n                det = _.multiply(det, M.elements[i][i]);\n            }\n            while (--n);\n            return det;\n        },\n        isSquare: function () {\n            return this.elements.length === this.elements[0].length;\n        },\n        isSingular: function () {\n            return this.isSquare() && this.determinant() === 0;\n        },\n        augment: function (m) {\n            var r = this.rows(), rr = m.rows();\n            if (r !== rr)\n                err(\"Cannot augment matrix. Rows don't match.\");\n            for (var i = 0; i < r; i++) {\n                this.elements[i] = this.elements[i].concat(m.elements[i]);\n            }\n\n            return this;\n        },\n        clone: function () {\n            var r = this.rows(), c = this.cols(),\n                    m = new Matrix();\n            for (var i = 0; i < r; i++) {\n                m.elements[i] = [];\n                for (var j = 0; j < c; j++) {\n                    var symbol = this.elements[i][j];\n                    m.elements[i][j] = isSymbol(symbol) ? symbol.clone() : symbol;\n                }\n            }\n            return m;\n        },\n        //ported from Sylvester.js\n        invert: function () {\n            if (!this.isSquare())\n                err('Matrix is not square!');\n            return block('SAFE', function () {\n                var ni = this.elements.length, ki = ni, i, j;\n                var imatrix = Matrix.identity(ni);\n                var M = this.augment(imatrix).toRightTriangular();\n                var np, kp = M.elements[0].length, p, els, divisor;\n                var inverse_elements = [], new_element;\n                // Matrix is non-singular so there will be no zeros on the diagonal\n                // Cycle through rows from last to first\n                do {\n                    i = ni - 1;\n                    // First, normalise diagonal elements to 1\n                    els = [];\n                    np = kp;\n                    inverse_elements[i] = [];\n                    divisor = M.elements[i][i];\n                    do {\n                        p = kp - np;\n                        new_element = _.divide(M.elements[i][p], divisor.clone());\n                        els.push(new_element);\n                        // Shuffle of the current row of the right hand side into the results\n                        // array as it will not be modified by later runs through this loop\n                        if (p >= ki) {\n                            inverse_elements[i].push(new_element);\n                        }\n                    }\n                    while (--np);\n                    M.elements[i] = els;\n                    // Then, subtract this row from those above it to\n                    // give the identity matrix on the left hand side\n                    for (j = 0; j < i; j++) {\n                        els = [];\n                        np = kp;\n                        do {\n                            p = kp - np;\n                            els.push(_.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), M.elements[j][i].clone())));\n                        }\n                        while (--np);\n                        M.elements[j] = els;\n                    }\n                }\n                while (--ni);\n                return Matrix.fromArray(inverse_elements);\n            }, undefined, this);\n        },\n        //ported from Sylvester.js\n        toRightTriangular: function () {\n            return block('SAFE', function () {\n                var M = this.clone(), els, fel, nel,\n                        n = this.elements.length, k = n, i, np, kp = this.elements[0].length, p;\n                do {\n                    i = k - n;\n                    fel = M.elements[i][i];\n                    if (fel.valueOf() === 0) {\n                        for (var j = i + 1; j < k; j++) {\n                            nel = M.elements[j][i];\n                            if (nel && nel.valueOf() !== 0) {\n                                els = [];\n                                np = kp;\n                                do {\n                                    p = kp - np;\n                                    els.push(_.add(M.elements[i][p].clone(), M.elements[j][p].clone()));\n                                }\n                                while (--np);\n                                M.elements[i] = els;\n                                break;\n                            }\n                        }\n                    }\n                    var fel = M.elements[i][i];\n                    if (fel.valueOf() !== 0) {\n                        for (j = i + 1; j < k; j++) {\n                            var multiplier = _.divide(M.elements[j][i].clone(), M.elements[i][i].clone());\n                            els = [];\n                            np = kp;\n                            do {\n                                p = kp - np;\n                                // Elements with column numbers up to an including the number\n                                // of the row that we're subtracting can safely be set straight to\n                                // zero, since that's the point of this routine and it avoids having\n                                // to loop over and correct rounding errors later\n                                els.push(p <= i ? new Symbol(0) :\n                                        _.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), multiplier.clone())));\n                            }\n                            while (--np);\n                            M.elements[j] = els;\n                        }\n                    }\n                }\n                while (--n);\n\n                return M;\n            }, undefined, this);\n        },\n        transpose: function () {\n            var rows = this.elements.length, cols = this.elements[0].length;\n            var M = new Matrix(), ni = cols, i, nj, j;\n\n            do {\n                i = cols - ni;\n                M.elements[i] = [];\n                nj = rows;\n                do {\n                    j = rows - nj;\n                    M.elements[i][j] = this.elements[j][i].clone();\n                }\n                while (--nj);\n            }\n            while (--ni);\n            return M;\n        },\n        // Returns true if the matrix can multiply the argument from the left\n        canMultiplyFromLeft: function (matrix) {\n            var l = isMatrix(matrix) ? matrix.elements.length : matrix.length;\n            // this.columns should equal matrix.rows\n            return (this.elements[0].length === l);\n        },\n        sameSize: function (matrix) {\n            return this.rows() === matrix.rows() && this.cols() === matrix.cols();\n        },\n        multiply: function (matrix) {\n            return block('SAFE', function () {\n                var M = matrix.elements || matrix;\n                if (!this.canMultiplyFromLeft(M)) {\n                    if (this.sameSize(matrix)) {\n                        var MM = new Matrix();\n                        var rows = this.rows();\n                        for (var i = 0; i < rows; i++) {\n                            var e = _.multiply(new Vector(this.elements[i]), new Vector(matrix.elements[i]));\n                            MM.elements[i] = e.elements;\n                        }\n                        return MM;\n                    }\n                    return null;\n                }\n                var ni = this.elements.length, ki = ni, i, nj, kj = M[0].length, j;\n                var cols = this.elements[0].length, elements = [], sum, nc, c;\n                do {\n                    i = ki - ni;\n                    elements[i] = [];\n                    nj = kj;\n                    do {\n                        j = kj - nj;\n                        sum = new Symbol(0);\n                        nc = cols;\n                        do {\n                            c = cols - nc;\n                            sum = _.add(sum, _.multiply(this.elements[i][c], M[c][j]));\n                        }\n                        while (--nc);\n                        elements[i][j] = sum;\n                    }\n                    while (--nj);\n                }\n                while (--ni);\n                return Matrix.fromArray(elements);\n            }, undefined, this);\n        },\n        add: function (matrix, callback) {\n            var M = new Matrix();\n            if (this.sameSize(matrix)) {\n                this.eachElement(function (e, i, j) {\n                    var result = _.add(e.clone(), matrix.elements[i][j].clone());\n                    if(callback) {\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\n                    }\n                    M.set(i, j, result);\n                });\n            }\n            return M;\n        },\n        subtract: function (matrix, callback) {\n            var M = new Matrix();\n            if (this.sameSize(matrix)) {\n                this.eachElement(function (e, i, j) {\n                    var result = _.subtract(e.clone(), matrix.elements[i][j].clone());\n                    if(callback) {\n                        result = callback.call(M, result, e, matrix.elements[i][j]);\n                    }\n                    M.set(i, j, result);\n                });\n            }\n            return M;\n        },\n        negate: function () {\n            this.each(function (e) {\n                return e.negate();\n            });\n            return this;\n        },\n        toVector: function () {\n            if (this.rows() === 1 || this.cols() === 1) {\n                var v = new Vector();\n                v.elements = this.elements;\n                return v;\n            }\n            return this;\n        },\n        toString: function (newline, to_decimal) {\n            var l = this.rows(),\n                    s = [];\n            newline = newline === undefined ? '\\n' : newline;\n            for (var i = 0; i < l; i++) {\n                s.push('[' + this.elements[i].map(function (x) {\n                    var v = to_decimal ? x.multiplier.toDecimal() : x.toString();\n                    return x !== undefined ? v : '';\n                }).join(',') + ']');\n            }\n            return 'matrix' + inBrackets(s.join(','));\n        },\n        text: function () {\n            return 'matrix(' + this.elements.toString('') + ')';\n        },\n        latex: function (option) {\n            var cols = this.cols(), elements = this.elements;\n            return format('\\\\begin{vmatrix}{0}\\\\end{vmatrix}', function () {\n                var tex = [];\n                for (var row in elements) {\n                    var row_tex = [];\n                    for (var i = 0; i < cols; i++) {\n                        row_tex.push(LaTeX.latex.call(LaTeX, elements[row][i], option));\n                    }\n                    tex.push(row_tex.join(' & '));\n                }\n                return tex.join(' \\\\cr ');\n            });\n        }\n    };\n    //aliases\n    Matrix.prototype.each = Matrix.prototype.eachElement;\n\n\n    function Set(set) {\n        this.elements = [];\n        //if the first object isn't an array, convert it to one.\n        if(!isVector(set))\n            set = Vector.fromArray(arguments);\n        \n        if(set) { \n            var elements = set.elements;\n            for(var i=0, l=elements.length; i<l; i++) {\n                this.add(elements[i]);\n            }\n        }\n    }\n    \n    Set.fromArray = function (arr) {\n        function F(args) {\n            return Set.apply(this, args);\n        }\n        F.prototype = Set.prototype;\n\n        return new F(arr);\n    };\n    \n    Set.prototype = {\n        add: function(x) {\n            if(!this.contains(x))\n                this.elements.push(x.clone());\n        },\n        contains: function(x) {\n            for(var i=0; i<this.elements.length; i++) {\n                var e = this.elements[i];\n                if(x.equals(e))\n                    return true;\n            }\n            return false;\n        },\n        each: function(f) {\n            var elements = this.elements;\n            var set = new Set();\n            for(var i=0, l=elements.length; i<l; i++) {\n                var e = elements[i];\n                f.call(this, e, set, i);\n            }\n            return set;\n        },\n        clone: function() {\n            var set = new Set();\n            this.each(function(e) {\n                set.add(e.clone());\n            });\n            return set;\n        },\n        union: function(set) {\n            var _union = this.clone();\n            set.each(function(e) {\n                _union.add(e);\n            });\n            \n            return _union;\n        },\n        difference: function(set) {\n            var diff = this.clone();\n            set.each(function(e) {\n                diff.remove(e);\n            });\n            return diff;\n        },\n        remove: function(element) {\n            for(var i=0, l=this.elements.length; i<l; i++) {\n                var e = this.elements[i];\n                if(e.equals(element)) {\n                    remove(this.elements, i);\n                    return true;\n                }\n            }\n            return false;\n        },\n        intersection: function(set) { \n            var _intersection = new Set();\n            var A = this;\n            set.each(function(e) {\n                if(A.contains(e)) {\n                    _intersection.add(e);\n                };\n            });\n            \n            return _intersection;\n        },\n        intersects: function(set) {\n            return this.intersection(set).elements.length > 0;\n        },\n        is_subset: function(set) {\n            var elements = set.elements;\n            for(var i=0, l=elements.length; i<l; i++) {\n                if(!this.contains(elements[i])) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        toString: function() {\n            return '{'+this.elements.join(',')+'}';\n        }\n    };\n\n//build ========================================================================\n    var Build = {\n        dependencies: {\n            _rename: {\n                'Math2.factorial': 'factorial'\n            },\n            factorial: {\n                'Math2.gamma': Math2.gamma\n            },\n            gamma_incomplete: {\n                'Math2.factorial': Math2.factorial\n            },\n            Li: {\n                'Math2.Ei': Math2.Ei,\n                'Math2.bigLog': Math2.bigLog,\n                'Frac': Frac\n            },\n            Ci: {\n                'Math2.factorial': Math2.factorial\n            },\n            Ei: {\n                'Math2.factorial': Math2.factorial\n            },\n            Si: {\n                'Math2.factorial': Math2.factorial\n            },\n            Shi: {\n                'Math2.factorial': Math2.factorial\n            },\n            Chi: {\n                'isInt': isInt,\n                'nround': nround,\n                'Math2.num_integrate': Math2.num_integrate\n            },\n            factor: {\n                'Math2.ifactor': Math2.ifactor,\n                'Symbol': Symbol\n            },\n            num_integrate: {\n                'Math2.simpson': Math2.simpson,\n                'nround': nround\n            },\n            fib: {\n                'even': even\n            }\n        },\n        /* Some functions need to be made numeric safe. Build checks if there's a \n         * reformat option and calls that instead when compiling the function string.\n         */\n        reformat: {\n            //this simply extends the build function\n            diff: function(symbol, deps) {\n                var f = 'var f = '+Build.build(symbol.args[0].toString())+';';\n                deps[1] += 'var diff = '+Math2.diff.toString()+';';\n                deps[1] += f;\n\n                return ['diff(f)('+symbol.args[1].toString()+')', deps];\n            }\n        },\n        getProperName: function(f) {\n            var map = {\n                continued_fraction: 'continuedFraction'\n            };\n            return map[f] || f;\n        },\n        //assumes that dependences are at max 2 levels\n        compileDependencies: function(f, deps) {\n            //grab the predefined dependiences\n            var dependencies = Build.dependencies[f];\n\n            //the dependency string\n            var dep_string = deps && deps[1] ? deps[1] : '';\n            \n            //the functions to be replaced\n            var replacements = deps && deps[0] ? deps[0] : {};\n            \n            //loop through them and add them to the list\n            for(var x in dependencies) {\n                if(typeof dependencies[x] === 'object')\n                    continue; //skip object\n                var components = x.split('.'); //Math.f becomes f\n                //if the function isn't part of an object then reference the function itself\n                dep_string += 'var '+(components.length > 1 ? components[1] : components[0])+'='+dependencies[x]+';';\n                replacements[x] = components.pop();\n            }\n            \n            return [replacements, dep_string];\n        },\n        getArgsDeps: function(symbol, dependencies) {\n            var args = symbol.args;\n            for(var i=0; i<args.length; i++) {\n                symbol.args[i].each(function(x) {\n                    if(x.group === FN)\n                        dependencies = Build.compileDependencies(x.fname, dependencies);\n                });\n            }\n            return dependencies;\n        },\n        build: function (symbol, arg_array) {\n            symbol = block('PARSE2NUMBER', function () {\n                return _.parse(symbol);\n            }, true);\n            var args = variables(symbol);\n            var supplements = [];\n            var dependencies = [];\n            var ftext = function (symbol, xports) {\n                xports = xports || [];\n                var c = [],\n                        group = symbol.group,\n                        prefix = '';\n\n                var ftext_complex = function (group) {\n                    var d = group === CB ? '*' : '+',\n                            cc = [];\n\n                    for (var x in symbol.symbols) {\n                        var sym = symbol.symbols[x],\n                                ft = ftext(sym, xports)[0];\n                        //wrap it in brackets if it's group PL or CP\n                        if (sym.isComposite())\n                            ft = inBrackets(ft);\n                        cc.push(ft);\n                    }\n                    var retval = cc.join(d);\n                    retval = retval && !symbol.multiplier.equals(1) ? inBrackets(retval) : retval;\n                    return retval;\n                },\n                ftext_function = function (bn) {\n                    var retval;\n                    if (bn in Math)\n                        retval = 'Math.' + bn;\n                    else {\n                        bn = Build.getProperName(bn);\n                        if (supplements.indexOf(bn) === -1) { //make sure you're not adding the function twice\n                            //Math2 functions aren't part of the standard javascript\n                            //Math library and must be exported.\n                            xports.push('var ' + bn + ' = ' + Math2[bn].toString() + '; ');\n                            supplements.push(bn);\n                        }\n                        retval = bn;\n                    }\n                    retval = retval + inBrackets(symbol.args.map(function (x) {\n                        return ftext(x, xports)[0];\n                    }).join(','));\n\n                    return retval;\n                };\n                \n                //the multiplier\n                if (group === N)\n                    c.push(symbol.multiplier.toDecimal());\n                else if (symbol.multiplier.equals(-1))\n                    prefix = '-';\n                else if (!symbol.multiplier.equals(1))\n                    c.push(symbol.multiplier.toDecimal());\n                //the value\n                var value;\n\n                if (group === S || group === P)\n                    value = symbol.value;\n                else if (group === FN) {\n                    dependencies = Build.compileDependencies(symbol.fname, dependencies);\n                    dependencies = Build.getArgsDeps(symbol, dependencies);\n                    if(Build.reformat[symbol.fname]) {\n                        var components = Build.reformat[symbol.fname](symbol, dependencies);\n                        dependencies = components[1];\n                        value = components[0];\n                    }\n                    else {\n                        value =  ftext_function(symbol.fname);\n                    }\n                    \n                }\n                else if (group === EX) {\n                    var pg = symbol.previousGroup;\n                    if (pg === N || pg === S)\n                        value = symbol.value;\n                    else if (pg === FN) {\n                        value = ftext_function(symbol.fname);\n                        dependencies = Build.compileDependencies(symbol.fname, dependencies);\n                        dependencies = Build.getArgsDeps(symbol, dependencies);\n                    }\n                    else\n                        value = ftext_complex(symbol.previousGroup);\n                }\n                else {\n                    value = ftext_complex(symbol.group);\n                }\n\n                if (symbol.group !== N && !symbol.power.equals(1)) {\n                    var pow = ftext(_.parse(symbol.power));\n                    xports.push(pow[1]);\n                    value = 'Math.pow' + inBrackets(value + ',' + pow[0]);\n                }\n\n                if (value)\n                    c.push(prefix + value);\n\n                return [c.join('*'), xports.join('').replace(/\\n+\\s+/g, ' ')];\n            };\n            if (arg_array) {\n                for (var i = 0; i < args.length; i++) {\n                    var arg = args[i];\n                    if (arg_array.indexOf(arg) === -1)\n                        err(arg + ' not found in argument array');\n                }\n                args = arg_array;\n            }\n\n            var f_array = ftext(symbol);\n            \n            //make all the substitutions;\n            for(var x in dependencies[0]) {\n                var alias = dependencies[0][x];\n                f_array[1] = f_array[1].replace(x, alias);\n                dependencies[1] = dependencies[1].replace(x, alias);\n            }\n\n            var f = new Function(args, (dependencies[1] || '') + f_array[1] + ' return ' + f_array[0] + ';');\n            \n            return f;\n        }\n    };\n    \n    \n//finalize =====================================================================\n    /* FINALIZE */\n    (function () {\n        reserveNames(_.CONSTANTS);\n        reserveNames(_.functions);\n        _.initConstants();\n        //bug fix for error but needs to be revisited\n        if (!_.error)\n            _.error = err;\n        \n        //Store the log and log10 functions\n        Settings.LOG_FNS = {\n            log: _.functions['log'],\n            log10: _.functions['log10']\n        };\n        \n    })();\n    \n    /* END FINALIZE */\n\n//Core =========================================================================\n    var Utils = {\n        allSame: allSame,\n        allNumeric: allNumeric,\n        arguments2Array: arguments2Array,\n        arrayAddSlices: arrayAddSlices,\n        arrayClone: arrayClone,\n        arrayMax: arrayMax,\n        arrayMin: arrayMin,\n        arrayUnique: arrayUnique,\n        arraySum: arraySum,\n        block: block,\n        build: Build.build,\n        clearU: clearU,\n        comboSort: comboSort,\n        compare: compare,\n        convertToVector: convertToVector,\n        customError: customError,\n        customType: customType,\n        decompose_fn: decompose_fn,\n        each: each,\n        evaluate: evaluate,\n        even: even,\n        evenFraction: evenFraction,\n        fillHoles: fillHoles,\n        firstObject: firstObject,\n        format: format,\n        generatePrimes: generatePrimes,\n        getCoeffs: getCoeffs,\n        getU: getU,\n        importFunctions: importFunctions,\n        inBrackets: inBrackets,\n        isArray: isArray,\n        isExpression: isExpression,\n        isFraction: isFraction,\n        isInt: isInt,\n        isMatrix: isMatrix,\n        isNegative: isNegative,\n        isNumericSymbol: isNumericSymbol,\n        isPrime: isPrime,\n        isReserved: isReserved,\n        isSymbol: isSymbol,\n        isVariableSymbol: isVariableSymbol,\n        isVector: isVector,\n        keys: keys,\n        nroots: nroots,\n        remove: remove,\n        reserveNames: reserveNames,\n        range: range,\n        round: nround,\n        sameSign: sameSign,\n        scientificToDecimal: scientificToDecimal,\n        separate: separate,\n        stringReplace: stringReplace,\n        text: text,\n        validateName: validateName,\n        variables: variables,\n        warn: warn\n    };\n\n    //This contains all the parts of nerdamer and enables nerdamer's internal functions\n    //to be used.\n    var C = {\n        groups: Groups,\n        Symbol: Symbol,\n        Expression: Expression,\n        Frac: Frac,\n        Vector: Vector,\n        Matrix: Matrix,\n        Parser: Parser,\n        Fraction: Fraction,\n        Math2: Math2,\n        LaTeX: LaTeX,\n        Utils: Utils,\n        PARSER: _,\n        PARENTHESIS: PARENTHESIS,\n        Settings: Settings,\n        err: err,\n        bigInt: bigInt,\n        bigDec: bigDec,\n        exceptions: exceptions\n    };\n\n//libExports ===================================================================  \n    /**\n     * \n     * @param {String} expression the expression to be evaluated\n     * @param {Object} subs the object containing the variable values\n     * @param {Integer} location a specific location in the equation list to \n     * insert the evaluated expression\n     * @param {String} option additional options\n     * @returns {Expression} \n     */\n    var libExports = function (expression, subs, option, location) {\n        //is the user declaring a function?\n        var fndec = /^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(expression);\n        if (fndec)\n            return nerdamer.setFunction(fndec[1], fndec[2].split(','), fndec[3]);\n\n        //var variable, fn, args;\n        //convert any expression passed in to a string\n        if (expression instanceof Expression)\n            expression = expression.toString();\n\n        var multi_options = isArray(option),\n                expand = 'expand',\n                numer = multi_options ? option.indexOf('numer') !== -1 : option === 'numer';\n        if ((multi_options ? option.indexOf(expand) !== -1 : option === expand)) {\n            expression = format('{0}({1})', expand, expression);\n        }\n        var e = block('PARSE2NUMBER', function () {\n            return _.parse(expression, subs);\n        }, numer || Settings.PARSE2NUMBER);\n\n        if (location) {\n            EXPRESSIONS[location - 1] = e;\n        }\n        else {\n            EXPRESSIONS.push(e);\n        }\n\n        /*\n         if(variable) libExports.setVar(variable, e);\n         if(fn) libExports.setFunction(fn, args, e);\n         */\n\n        return new Expression(e);\n    };\n    /**\n     * Converts expression into rpn form\n     * @param {String} expression\n     * @returns {Token[]}\n     */\n    libExports.rpn = function (expression) {\n        return _.tokenize(_.toRPN(expression));\n    };\n\n    /**\n     * Generates LaTeX from expression string\n     * @param {String} e\n     * @param {object} opt\n     * @returns {String}\n     */\n    libExports.convertToLaTeX = function (e, opt) {\n        return _.toTeX(e, opt);\n    };\n\n    /**\n     * Converts latex to text - Very very very basic at the moment\n     * @param {String} e\n     * @returns {String}\n     */\n    libExports.convertFromLaTeX = function (e) {\n        var txt = LaTeX.parse(_.tokenize(e));\n        return new Expression(_.parse(txt));\n    };\n\n    /**\n     * Get the version of nerdamer or a loaded add-on\n     * @param {String} add_on - The add-on being checked\n     * @returns {String} returns the version of nerdamer\n     */\n    libExports.version = function (add_on) {\n        if (add_on) {\n            try {\n                return C[add_on].version;\n            }\n            catch (e) {\n                return \"No module named \" + add_on + \" found!\";\n            }\n        }\n        return version;\n    };\n\n    /**\n     * Get nerdamer generated warnings\n     * @returns {String[]}\n     */\n    libExports.getWarnings = function () {\n        return WARNINGS;\n    };\n\n    /**\n     * \n     * @param {String} constant The name of the constant to be set\n     * @param {mixed} value The value of the constant \n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.setConstant = function (constant, value) {\n        validateName(constant);\n        if (!isReserved(constant)) {\n            //fix for issue #127\n            if (value === 'delete' || value === '') {\n                delete _.CONSTANTS[constant];\n            }\n            else {\n                if (isNaN(value))\n                    throw new NerdamerTypeError('Constant must be a number!');\n                _.CONSTANTS[constant] = value;\n            }\n        }\n        return this;\n    };\n\n    /**\n     * Returns the value of a previously set constant\n     * @param {type} constant\n     * @returns {String}\n     */\n    libExports.getConstant = function (constant) {\n        return String(_.constant[constant]);\n    };\n\n    /**\n     * \n     * @param {String} name The name of the function\n     * @param {Array} params_array A list containing the parameter name of the functions\n     * @param {String} body The body of the function\n     * @returns {Boolean} returns true if succeeded and falls on fail\n     * @example nerdamer.setFunction('f',['x'], 'x^2+2');\n     */\n    libExports.setFunction = setFunction;\n\n    /**\n     * \n     * @returns {C} Exports the nerdamer core functions and objects\n     */\n    libExports.getCore = function () {\n        return C;\n    };\n\n    libExports.getExpression = libExports.getEquation = Expression.getExpression;\n\n    /**\n     * \n     * @param {Boolean} asArray The returned names are returned as an array if this is set to true;\n     * @returns {String|Array}\n     */\n    libExports.reserved = function (asArray) {\n        if (asArray) {\n            return RESERVED;\n        }\n        return RESERVED.join(', ');\n    };\n\n    /**\n     * \n     * @param {Integer} equation_number the number of the equation to clear. \n     * If 'all' is supplied then all equations are cleared\n     * @param {Boolean} keep_EXPRESSIONS_fixed use true if you don't want to keep EXPRESSIONS length fixed\n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.clear = function (equation_number, keep_EXPRESSIONS_fixed) {\n        if (equation_number === 'all') {\n            EXPRESSIONS = [];\n        }\n        else if (equation_number === 'last') {\n            EXPRESSIONS.pop();\n        }\n        else if (equation_number === 'first') {\n            EXPRESSIONS.shift();\n        }\n        else {\n            var index = !equation_number ? EXPRESSIONS.length : equation_number - 1;\n            keep_EXPRESSIONS_fixed === true ? EXPRESSIONS[index] = undefined : remove(EXPRESSIONS, index);\n        }\n        return this;\n    };\n\n    /**\n     * Alias for nerdamer.clear('all')\n     */\n    libExports.flush = function () {\n        this.clear('all');\n        return this;\n    };\n\n    /**\n     * \n     * @param {Boolean} asObject\n     * @param {Boolean} asLaTeX\n     * @param {String|String[]} option \n     * @returns {Array}\n     */\n    libExports.expressions = function (asObject, asLaTeX, option) {\n        var result = asObject ? {} : [];\n        for (var i = 0; i < EXPRESSIONS.length; i++) {\n            var eq = asLaTeX ? LaTeX.latex(EXPRESSIONS[i], option) : text(EXPRESSIONS[i], option);\n            asObject ? result[i + 1] = eq : result.push(eq);\n        }\n        return result;\n    };\n\n    //the method for registering modules\n    libExports.register = function (obj) {\n        var core = this.getCore();\n\n        if (isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                if (obj)\n                    this.register(obj[i]);\n            }\n        }\n        else if (obj && Settings.exclude.indexOf(obj.name) === -1) {\n            //make sure all the dependencies are available\n            if (obj.dependencies) {\n                for (var i = 0; i < obj.dependencies.length; i++)\n                    if (!core[obj.dependencies[i]])\n                        throw new Error(format('{0} requires {1} to be loaded!', obj.name, obj.dependencies[i]));\n            }\n            //if no parent object is provided then the function does not have an address and cannot be called directly\n            var parent_obj = obj.parent,\n                    fn = obj.build.call(core); //call constructor to get function\n            if (parent_obj) {\n                if (!core[parent_obj])\n                    core[obj.parent] = {};\n\n                var ref_obj = parent_obj === 'nerdamer' ? this : core[parent_obj];\n                //attach the function to the core\n                ref_obj[obj.name] = fn;\n            }\n            if (obj.visible)\n                _.functions[obj.name] = [fn, obj.numargs]; //make the function available\n\n        }\n    };\n\n    /**\n     * @param {String} name variable name\n     * @returns {boolean} validates if the profided string is a valid variable name\n     */\n    libExports.validateName = validateName;\n\n    /**\n     * @param {String} varname variable name\n     * @returns {boolean} validates if the profided string is a valid variable name\n     */\n    libExports.validVarName = function (varname) {\n        try {\n            validateName(varname);\n            return RESERVED.indexOf(varname) === -1;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n\n    /**\n     * \n     * @returns {Array} Array of functions currently supported by nerdamer\n     */\n    libExports.supported = function () {\n        return keys(_.functions);\n    };\n\n    /**\n     * \n     * @returns {Number} The number equations/expressions currently loaded\n     */\n    libExports.numEquations = libExports.numExpressions = function () {\n        return EXPRESSIONS.length;\n    };\n    /* END EXPORTS */\n\n    /**\n     * \n     * @param {String} v variable to be set\n     * @param {String} val value of variable. This can be a variable expression or number\n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.setVar = function (v, val) {\n        validateName(v);\n        //check if it's not already a constant\n        if (v in _.CONSTANTS)\n            err('Cannot set value for constant ' + v);\n        if (val === 'delete' || val === '')\n            delete VARS[v];\n        else {\n            VARS[v] = isSymbol(val) ? val : _.parse(val);\n        }\n        return this;\n    };\n\n    /**\n     * Returns the value of a set variable\n     * @param {type} v\n     * @returns {varies}\n     */\n    libExports.getVar = function (v) {\n        return VARS[v];\n    };\n    /**\n     * Clear the variables from the VARS object\n     * @returns {Object} Returns the nerdamer object\n     */\n    libExports.clearVars = function () {\n        VARS = {};\n        return this;\n    };\n\n    /**\n     * \n     * @param {Function} loader\n     * @returns {nerdamer}\n     */\n    libExports.load = function (loader) {\n        loader.call(this);\n        return this;\n    };\n\n    /**\n     * @param {String} output - output format. Can be 'object' (just returns the VARS object), 'text' or 'latex'. Default: 'text'\n     * @param {String|String[]} option\n     * @returns {Object} Returns an object with the variables\n     */\n    libExports.getVars = function (output, option) {\n        output = output || 'text';\n        var variables = {};\n        if (output === 'object')\n            variables = VARS;\n        else {\n            for (var v in VARS) {\n                if (output === 'latex') {\n                    variables[v] = VARS[v].latex(option);\n                }\n                else if (output === 'text') {\n                    variables[v] = VARS[v].text(option);\n                }\n            }\n        }\n        return variables;\n    };\n\n    /**\n     * Set the value of a setting\n     * @param {String} setting The setting to be changed\n     * @param {boolean} value \n     */\n    libExports.set = function (setting, value) {\n        //current options:\n        //PARSE2NUMBER, suppress_errors\n        if (typeof setting === 'object')\n            for (var x in setting) {\n                libExports.set(x, setting[x]);\n            }\n\n        var disallowed = ['SAFE'];\n        if (disallowed.indexOf(setting) !== -1)\n            err('Cannot modify setting: ' + setting);\n\n        if (setting === 'PRECISION')\n            bigDec.set({precision: value});\n        else if(setting === 'USE_LN' && value === true) {\n            //set log as LN\n            Settings.LOG = 'LN';\n            //set log10 as log\n            Settings.LOG10 = 'log';\n            //point the functions in the right direction\n            _.functions['log'] = Settings.LOG_FNS.log10; //log is now log10\n            //the log10 function must be explicitly set\n            _.functions['log'][0] = function(x) {\n                if(x.isConstant())\n                    return new Symbol(Math.log10(x));\n                return _.symfunction(Settings.LOG10, [x]);\n            };\n            _.functions['LN'] = Settings.LOG_FNS.log; //LN is now log\n            \n            //remove log10\n            delete _.functions['log10'];\n        }\n        else\n            Settings[setting] = value;\n    };\n\n    /**\n     * Get the value of a setting\n     * @param {type} setting\n     * @returns {undefined}\n     */\n    libExports.get = function (setting) {\n        return Settings[setting];\n    };\n\n    /**\n     * This functions makes internal functions available externally\n     * @param {bool} override Override the functions when calling api if it exists \n     */\n    libExports.api = function (override) {\n        //Map internal functions to external ones\n        var linker = function (fname) {\n            return function () {\n                var args = [].slice.call(arguments);\n                for (var i = 0; i < args.length; i++)\n                    args[i] = _.parse(args[i]);\n                return new Expression(block('PARSE2NUMBER', function () {\n                    return _.callfunction(fname, args);\n                }));\n            };\n        };\n        //perform the mapping\n        for (var x in _.functions)\n            if (!(x in libExports) || override)\n                libExports[x] = linker(x);\n    };\n\n    libExports.replaceFunction = function (name, fn, num_args) {\n        var existing = _.functions[name];\n        var new_num_args = typeof num_args === 'undefined' ? existing[1] : num_args;\n        _.functions[name] = [fn.call(undefined, existing[0], C), new_num_args];\n    };\n\n    libExports.setOperator = function (operator, shift) {\n        _.setOperator(operator, shift);\n    };\n    \n    libExports.getOperator = function(operator) {\n        return _.getOperator(operator);\n    };\n\n    libExports.aliasOperator = function(operator, withOperator) {\n        _.aliasOperator(operator, withOperator);\n    };\n\n    libExports.tree = function (expression) {\n        return _.tree(_.toRPN(_.tokenize(expression)));\n    };\n\n    libExports.htmlTree = function (expression, indent) {\n        var tree = this.tree(expression);\n\n        return '<div class=\"tree\">\\n' +\n                '    <ul>\\n' +\n                '        <li>\\n' +\n                tree.toHTML(3, indent) + '\\n' +\n                '        </li>\\n' +\n                '    </ul>\\n' +\n                '</div>';\n    };\n    \n    libExports.addPeeker = function(name, f) {\n        if(_.peekers[name])\n            _.peekers[name].push(f);\n    };\n    \n    libExports.removePeeker = function(name, f) {\n        remove(_.peekers[name], f);\n    };\n    \n    libExports.parse = function(e) {\n        return String(e).split(';').map(function(x) {\n            return _.parse(x);\n        });\n    };\n\n    libExports.api();\n\n    return libExports; //Done\n//imports ======================================================================\n})({\n    //https://github.com/peterolson/BigInteger.js\n    bigInt: (function(){\n        var bigInt=function(undefined){\"use strict\";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),LOG_MAX_INT=Math.log(MAX_INT);function Integer(v,radix){if(typeof v===\"undefined\")return Integer[0];if(typeof radix!==\"undefined\")return+radix===10?parseValue(v):parseBase(v,radix);return parseValue(v)}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true}SmallInteger.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)]}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE}}return arr}function trim(v){var i=v.length;while(v[--i]===0);v.length=i+1}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0}return x}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n)}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base}if(carry>0)r.push(carry);return r}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a)}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate())}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign)}return new BigInteger(addAny(a,b),this.sign)};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate())}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b))}return new BigInteger(addSmall(b,Math.abs(a)),a<0)};SmallInteger.prototype.plus=SmallInteger.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1}else borrow=0;r[i]=difference}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break}r[i]=difference}for(;i<a_l;i++){r[i]=a[i]}trim(r);return r}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b)}else{value=subtract(b,a);sign=!sign}value=arrayToSmall(value);if(typeof value===\"number\"){if(sign)value=-value;return new SmallInteger(value)}return new BigInteger(value,sign)}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference}r=arrayToSmall(r);if(typeof r===\"number\"){if(sign)r=-r;return new SmallInteger(r)}return new BigInteger(r,sign)}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate())}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign)};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate())}var b=n.value;if(n.isSmall){return new SmallInteger(a-b)}return subtractSmall(b,Math.abs(a),a>=0)};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign)};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false)};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value))};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry}}trim(r);return r}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base)}return r}function shiftLeft(x,n){var r=[];while(n-- >0)r.push(0);return r.concat(x)}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign)}b=smallToArray(abs)}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign)};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign)}return new BigInteger(multiplyLong(b,smallToArray(a)),sign)}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value)}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign)};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign)};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this)};SmallInteger.prototype.times=SmallInteger.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base}r[i+l]=carry}trim(r);return r}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false)};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false)};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit)}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1}else{remainder[shift+i]=borrow;borrow=0}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0}else{remainder[shift+i]=carry;carry=1}}borrow+=carry}result[shift]=quotientDigit}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)]}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--}while(guess);result.push(guess);part=subtract(part,check)}result.reverse();return[arrayToSmall(result),arrayToSmall(part)]}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0}return[quotient,remainder|0]}function divModAny(self,v){var value,n=parseValue(v);var a=self.value,b=n.value;var quotient;if(b===0)throw new Error(\"Cannot divide by zero\");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)]}return[Integer[0],self]}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient===\"number\"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)]}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)]}b=smallToArray(abs)}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient===\"number\"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient)}else quotient=new BigInteger(quotient,qSign);if(typeof mod===\"number\"){if(mSign)mod=-mod;mod=new SmallInteger(mod)}else mod=new BigInteger(mod,mSign);return[quotient,mod]}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]}};SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0]};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1]};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0]}if(!n.isSmall)throw new Error(\"The exponent \"+n.toString()+\" is too large.\");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value))}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b}if(b===0)break;b/=2;x=x.square()}return y};SmallInteger.prototype.pow=BigInteger.prototype.pow;BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error(\"Cannot take modPow with modulus 0\");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod)}return r};SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1}return 0}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b)};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1}return-1};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1}if(n.isSmall){return this.sign?-1:1}return compareAbs(a,b)*(this.sign?-1:1)};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1}if(v===-Infinity){return 1}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1}if(a<0!==n.sign){return a<0?-1:1}return a<0?1:-1};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0};SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0};SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0};SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0};SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0};SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0};SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0};SmallInteger.prototype.isEven=function(){return(this.value&1)===0};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1};BigInteger.prototype.isPositive=function(){return!this.sign};SmallInteger.prototype.isPositive=function(){return this.value>0};BigInteger.prototype.isNegative=function(){return this.sign};SmallInteger.prototype.isNegative=function(){return this.value<0};BigInteger.prototype.isUnit=function(){return false};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1};BigInteger.prototype.isZero=function(){return false};SmallInteger.prototype.isZero=function(){return this.value===0};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);var value=n.value;if(value===0)return false;if(value===1)return true;if(value===2)return this.isEven();return this.mod(n).equals(Integer[0])};SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven())b=b.divide(2),r++;next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.equals(Integer[1])||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next}return false}return true}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,325,9375,28178,450775,9780504,1795265022]);var logN=Math.log(2)*bits;var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2))}return millerRabinTest(n,a)};SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)))}return millerRabinTest(n,a)};SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.equals(bigInt.zero)){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR))}if(!r.equals(1))throw new Error(this.toString()+\" and \"+n.toString()+\" are not co-prime\");if(t.compare(0)===-1){t=t.add(n)}if(this.isNegative()){return t.negate()}return t};SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign)}return new BigInteger(addSmall(value,1),this.sign)};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false)};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true)}return subtractSmall(value,1,this.sign)};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true)};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE)powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return(typeof n===\"number\"||typeof n===\"string\")&&+Math.abs(n)<=BASE||n instanceof BigInteger&&n.value.length<=1}BigInteger.prototype.shiftLeft=function(n){if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1}return result.multiply(powersOfTwo[n])};SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(n){var remQuo;if(!shift_isSmall(n)){throw new Error(String(n)+\" is too large for shifting.\")}n=+n;if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0]};SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit))}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]))}return sum}BigInteger.prototype.not=function(){return this.negate().prev()};SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b})};SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b})};SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b})};SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v===\"number\"?v|LOBMASK_I:v[0]+v[1]*BASE|LOBMASK_BI;return x&-x}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2}}return{p:bigInt(1),e:0}}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1))}if(n.compareTo(bigInt(0))===0){return bigInt(0)}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1))};SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=Math.min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d)}while(a.isEven()){a=a.divide(roughLOB(a))}do{while(b.isEven()){b=b.divide(roughLOB(b))}if(a.greater(b)){t=b;b=a;a=t}b=b.subtract(a)}while(!b.isZero());return c.isUnit()?a:a.multiply(c)}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b)}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var length=range.value.length-1;var result=[],restricted=true;for(var i=length;i>=0;i--){var top=restricted?range.value[i]:BASE;var digit=truncate(Math.random()*top);result.unshift(digit);if(digit<top)restricted=false}result=arrayToSmall(result);return low.add(typeof result===\"number\"?new SmallInteger(result):new BigInteger(result,false))}var parseBase=function(text,base){var length=text.length;var i;var absBase=Math.abs(base);for(var i=0;i<length;i++){var c=text[i].toLowerCase();if(c===\"-\")continue;if(/[a-z0-9]/.test(c)){if(/[0-9]/.test(c)&&+c>=absBase){if(c===\"1\"&&absBase===1)continue;throw new Error(c+\" is not a valid digit in base \"+base+\".\")}else if(c.charCodeAt(0)-87>=absBase){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}}}if(2<=base&&base<=36){if(length<=LOG_MAX_INT/Math.log(base)){var result=parseInt(text,base);if(isNaN(result)){throw new Error(c+\" is not a valid digit in base \"+base+\".\")}return new SmallInteger(parseInt(text,base))}}base=parseValue(base);var digits=[];var isNegative=text[0]===\"-\";for(i=isNegative?1:0;i<text.length;i++){var c=text[i].toLowerCase(),charCode=c.charCodeAt(0);if(48<=charCode&&charCode<=57)digits.push(parseValue(c));else if(97<=charCode&&charCode<=122)digits.push(parseValue(c.charCodeAt(0)-87));else if(c===\"<\"){var start=i;do{i++}while(text[i]!==\">\");digits.push(parseValue(text.slice(start+1,i)))}else throw new Error(c+\" is not a valid character\")}return parseBaseFromArray(digits,base,isNegative)};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base)}return isNegative?val.negate():val}function stringify(digit){if(digit<=35){return\"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit)}return\"<\"+digit+\">\"}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error(\"Cannot convert nonzero numbers to base 0.\")}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n)).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(+n-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false}}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs()}if(base.equals(1)){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(+n)).map(Number.prototype.valueOf,1),isNegative:neg}}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next()}out.push(digit.toJSNumber())}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg}}function toBaseString(n,base){var arr=toBase(n,base);return(arr.isNegative?\"-\":\"\")+arr.value.map(stringify).join(\"\")}BigInteger.prototype.toArray=function(radix){return toBase(this,radix)};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix)};BigInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix);var v=this.value,l=v.length,str=String(v[--l]),zeros=\"0000000\",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit}var sign=this.sign?\"-\":\"\";return sign+str};SmallInteger.prototype.toString=function(radix){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix);return String(this.value)};BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString()};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10)};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return new SmallInteger(x);throw new Error(\"Invalid integer: \"+v)}var sign=v[0]===\"-\";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error(\"Invalid integer: \"+split.join(\"e\"));if(split.length===2){var exp=split[1];if(exp[0]===\"+\")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error(\"Invalid integer: \"+exp+\" is not a valid exponent.\");var text=split[0];var decimalPlace=text.indexOf(\".\");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1)}if(exp<0)throw new Error(\"Cannot include negative exponent part for integers\");text+=new Array(exp+1).join(\"0\");v=text}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error(\"Invalid integer: \"+v);var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l}trim(r);return new BigInteger(r,sign)}function parseNumberValue(v){if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+\" is not an integer.\");return new SmallInteger(v)}return parseStringValue(v.toString())}function parseValue(v){if(typeof v===\"number\"){return parseNumberValue(v)}if(typeof v===\"string\"){return parseStringValue(v)}return v}for(var i=0;i<1e3;i++){Integer[i]=new SmallInteger(i);if(i>0)Integer[-i]=new SmallInteger(-i)}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative)};return Integer}();if(typeof module!==\"undefined\"&&module.hasOwnProperty(\"exports\")){module.exports=bigInt}if(typeof define===\"function\"&&define.amd){define(\"big-integer\",[],function(){return bigInt})}\n        return bigInt;\n    })(),\n    /* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\n    bigDec: function(n){\"use strict\";var e,i,t,r=9e15,s=1e9,o=\"0123456789abcdef\",u=\"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",c=\"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",f={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-r,maxE:r,crypto:!1},h=!0,a=\"[DecimalError] \",d=a+\"Invalid argument: \",l=a+\"Precision limit exceeded\",p=a+\"crypto unavailable\",g=Math.floor,w=Math.pow,m=/^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,v=/^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,N=/^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,b=/^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,E=1e7,x=7,M=u.length-1,y=c.length-1,q={name:\"[object Decimal]\"};function O(n){var e,i,t,r=n.length-1,s=\"\",o=n[0];if(r>0){for(s+=o,e=1;e<r;e++)t=n[e]+\"\",(i=x-t.length)&&(s+=S(i)),s+=t;o=n[e],(i=x-(t=o+\"\").length)&&(s+=S(i))}else if(0===o)return\"0\";for(;o%10==0;)o/=10;return s+o}function F(n,e,i){if(n!==~~n||n<e||n>i)throw Error(d+n)}function A(n,e,i,t){var r,s,o,u;for(s=n[0];s>=10;s/=10)--e;return--e<0?(e+=x,r=0):(r=Math.ceil((e+1)/x),e%=x),s=w(10,x-e),u=n[r]%s|0,null==t?e<3?(0==e?u=u/100|0:1==e&&(u=u/10|0),o=i<4&&99999==u||i>3&&49999==u||5e4==u||0==u):o=(i<4&&u+1==s||i>3&&u+1==s/2)&&(n[r+1]/s/100|0)==w(10,e-2)-1||(u==s/2||0==u)&&0==(n[r+1]/s/100|0):e<4?(0==e?u=u/1e3|0:1==e?u=u/100|0:2==e&&(u=u/10|0),o=(t||i<4)&&9999==u||!t&&i>3&&4999==u):o=((t||i<4)&&u+1==s||!t&&i>3&&u+1==s/2)&&(n[r+1]/s/1e3|0)==w(10,e-3)-1,o}function D(n,e,i){for(var t,r,s=[0],u=0,c=n.length;u<c;){for(r=s.length;r--;)s[r]*=e;for(s[0]+=o.indexOf(n.charAt(u++)),t=0;t<s.length;t++)s[t]>i-1&&(void 0===s[t+1]&&(s[t+1]=0),s[t+1]+=s[t]/i|0,s[t]%=i)}return s.reverse()}q.absoluteValue=q.abs=function(){var n=new this.constructor(this);return n.s<0&&(n.s=1),P(n)},q.ceil=function(){return P(new this.constructor(this),this.e+1,2)},q.comparedTo=q.cmp=function(n){var e,i,t,r,s=this,o=s.d,u=(n=new s.constructor(n)).d,c=s.s,f=n.s;if(!o||!u)return c&&f?c!==f?c:o===u?0:!o^c<0?1:-1:NaN;if(!o[0]||!u[0])return o[0]?c:u[0]?-f:0;if(c!==f)return c;if(s.e!==n.e)return s.e>n.e^c<0?1:-1;for(e=0,i=(t=o.length)<(r=u.length)?t:r;e<i;++e)if(o[e]!==u[e])return o[e]>u[e]^c<0?1:-1;return t===r?0:t>r^c<0?1:-1},q.cosine=q.cos=function(){var n,e,i=this,r=i.constructor;return i.d?i.d[0]?(n=r.precision,e=r.rounding,r.precision=n+Math.max(i.e,i.sd())+x,r.rounding=1,i=function(n,e){var i,t,r=e.d.length;r<32?(i=Math.ceil(r/3),t=Math.pow(4,-i).toString()):(i=16,t=\"2.3283064365386962890625e-10\");n.precision+=i,e=W(n,1,e.times(t),new n(1));for(var s=i;s--;){var o=e.times(e);e=o.times(o).minus(o).times(8).plus(1)}return n.precision-=i,e}(r,J(r,i)),r.precision=n,r.rounding=e,P(2==t||3==t?i.neg():i,n,e,!0)):new r(1):new r(NaN)},q.cubeRoot=q.cbrt=function(){var n,e,i,t,r,s,o,u,c,f,a=this,d=a.constructor;if(!a.isFinite()||a.isZero())return new d(a);for(h=!1,(s=a.s*Math.pow(a.s*a,1/3))&&Math.abs(s)!=1/0?t=new d(s.toString()):(i=O(a.d),(s=((n=a.e)-i.length+1)%3)&&(i+=1==s||-2==s?\"0\":\"00\"),s=Math.pow(i,1/3),n=g((n+1)/3)-(n%3==(n<0?-1:2)),(t=new d(i=s==1/0?\"5e\"+n:(i=s.toExponential()).slice(0,i.indexOf(\"e\")+1)+n)).s=a.s),o=(n=d.precision)+3;;)if(f=(c=(u=t).times(u).times(u)).plus(a),t=Z(f.plus(a).times(u),f.plus(c),o+2,1),O(u.d).slice(0,o)===(i=O(t.d)).slice(0,o)){if(\"9999\"!=(i=i.slice(o-3,o+1))&&(r||\"4999\"!=i)){+i&&(+i.slice(1)||\"5\"!=i.charAt(0))||(P(t,n+1,1),e=!t.times(t).times(t).eq(a));break}if(!r&&(P(u,n+1,0),u.times(u).times(u).eq(a))){t=u;break}o+=4,r=1}return h=!0,P(t,n,d.rounding,e)},q.decimalPlaces=q.dp=function(){var n,e=this.d,i=NaN;if(e){if(i=((n=e.length-1)-g(this.e/x))*x,n=e[n])for(;n%10==0;n/=10)i--;i<0&&(i=0)}return i},q.dividedBy=q.div=function(n){return Z(this,new this.constructor(n))},q.dividedToIntegerBy=q.divToInt=function(n){var e=this.constructor;return P(Z(this,new e(n),0,1,1),e.precision,e.rounding)},q.equals=q.eq=function(n){return 0===this.cmp(n)},q.floor=function(){return P(new this.constructor(this),this.e+1,3)},q.greaterThan=q.gt=function(n){return this.cmp(n)>0},q.greaterThanOrEqualTo=q.gte=function(n){var e=this.cmp(n);return 1==e||0===e},q.hyperbolicCosine=q.cosh=function(){var n,e,i,t,r,s=this,o=s.constructor,u=new o(1);if(!s.isFinite())return new o(s.s?1/0:NaN);if(s.isZero())return u;i=o.precision,t=o.rounding,o.precision=i+Math.max(s.e,s.sd())+4,o.rounding=1,(r=s.d.length)<32?(n=Math.ceil(r/3),e=Math.pow(4,-n).toString()):(n=16,e=\"2.3283064365386962890625e-10\"),s=W(o,1,s.times(e),new o(1),!0);for(var c,f=n,h=new o(8);f--;)c=s.times(s),s=u.minus(c.times(h.minus(c.times(h))));return P(s,o.precision=i,o.rounding=t,!0)},q.hyperbolicSine=q.sinh=function(){var n,e,i,t,r=this,s=r.constructor;if(!r.isFinite()||r.isZero())return new s(r);if(e=s.precision,i=s.rounding,s.precision=e+Math.max(r.e,r.sd())+4,s.rounding=1,(t=r.d.length)<3)r=W(s,2,r,r,!0);else{n=(n=1.4*Math.sqrt(t))>16?16:0|n,r=W(s,2,r=r.times(Math.pow(5,-n)),r,!0);for(var o,u=new s(5),c=new s(16),f=new s(20);n--;)o=r.times(r),r=r.times(u.plus(o.times(c.times(o).plus(f))))}return s.precision=e,s.rounding=i,P(r,e,i,!0)},q.hyperbolicTangent=q.tanh=function(){var n,e,i=this,t=i.constructor;return i.isFinite()?i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+7,t.rounding=1,Z(i.sinh(),i.cosh(),t.precision=n,t.rounding=e)):new t(i.s)},q.inverseCosine=q.acos=function(){var n,e=this,i=e.constructor,t=e.abs().cmp(1),r=i.precision,s=i.rounding;return-1!==t?0===t?e.isNeg()?_(i,r,s):new i(0):new i(NaN):e.isZero()?_(i,r+4,s).times(.5):(i.precision=r+6,i.rounding=1,e=e.asin(),n=_(i,r+4,s).times(.5),i.precision=r,i.rounding=s,n.minus(e))},q.inverseHyperbolicCosine=q.acosh=function(){var n,e,i=this,t=i.constructor;return i.lte(1)?new t(i.eq(1)?0:NaN):i.isFinite()?(n=t.precision,e=t.rounding,t.precision=n+Math.max(Math.abs(i.e),i.sd())+4,t.rounding=1,h=!1,i=i.times(i).minus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln()):new t(i)},q.inverseHyperbolicSine=q.asinh=function(){var n,e,i=this,t=i.constructor;return!i.isFinite()||i.isZero()?new t(i):(n=t.precision,e=t.rounding,t.precision=n+2*Math.max(Math.abs(i.e),i.sd())+6,t.rounding=1,h=!1,i=i.times(i).plus(1).sqrt().plus(i),h=!0,t.precision=n,t.rounding=e,i.ln())},q.inverseHyperbolicTangent=q.atanh=function(){var n,e,i,t,r=this,s=r.constructor;return r.isFinite()?r.e>=0?new s(r.abs().eq(1)?r.s/0:r.isZero()?r:NaN):(n=s.precision,e=s.rounding,t=r.sd(),Math.max(t,n)<2*-r.e-1?P(new s(r),n,e,!0):(s.precision=i=t-r.e,r=Z(r.plus(1),new s(1).minus(r),i+n,1),s.precision=n+4,s.rounding=1,r=r.ln(),s.precision=n,s.rounding=e,r.times(.5))):new s(NaN)},q.inverseSine=q.asin=function(){var n,e,i,t,r=this,s=r.constructor;return r.isZero()?new s(r):(e=r.abs().cmp(1),i=s.precision,t=s.rounding,-1!==e?0===e?((n=_(s,i+4,t).times(.5)).s=r.s,n):new s(NaN):(s.precision=i+6,s.rounding=1,r=r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(),s.precision=i,s.rounding=t,r.times(2)))},q.inverseTangent=q.atan=function(){var n,e,i,t,r,s,o,u,c,f=this,a=f.constructor,d=a.precision,l=a.rounding;if(f.isFinite()){if(f.isZero())return new a(f);if(f.abs().eq(1)&&d+4<=y)return(o=_(a,d+4,l).times(.25)).s=f.s,o}else{if(!f.s)return new a(NaN);if(d+4<=y)return(o=_(a,d+4,l).times(.5)).s=f.s,o}for(a.precision=u=d+10,a.rounding=1,n=i=Math.min(28,u/x+2|0);n;--n)f=f.div(f.times(f).plus(1).sqrt().plus(1));for(h=!1,e=Math.ceil(u/x),t=1,c=f.times(f),o=new a(f),r=f;-1!==n;)if(r=r.times(c),s=o.minus(r.div(t+=2)),r=r.times(c),void 0!==(o=s.plus(r.div(t+=2))).d[e])for(n=e;o.d[n]===s.d[n]&&n--;);return i&&(o=o.times(2<<i-1)),h=!0,P(o,a.precision=d,a.rounding=l,!0)},q.isFinite=function(){return!!this.d},q.isInteger=q.isInt=function(){return!!this.d&&g(this.e/x)>this.d.length-2},q.isNaN=function(){return!this.s},q.isNegative=q.isNeg=function(){return this.s<0},q.isPositive=q.isPos=function(){return this.s>0},q.isZero=function(){return!!this.d&&0===this.d[0]},q.lessThan=q.lt=function(n){return this.cmp(n)<0},q.lessThanOrEqualTo=q.lte=function(n){return this.cmp(n)<1},q.logarithm=q.log=function(n){var e,i,t,r,s,o,u,c,f=this.constructor,a=f.precision,d=f.rounding;if(null==n)n=new f(10),e=!0;else{if(i=(n=new f(n)).d,n.s<0||!i||!i[0]||n.eq(1))return new f(NaN);e=n.eq(10)}if(i=this.d,this.s<0||!i||!i[0]||this.eq(1))return new f(i&&!i[0]?-1/0:1!=this.s?NaN:i?0:1/0);if(e)if(i.length>1)s=!0;else{for(r=i[0];r%10==0;)r/=10;s=1!==r}if(h=!1,o=B(this,u=a+5),t=e?U(f,u+10):B(n,u),A((c=Z(o,t,u,1)).d,r=a,d))do{if(o=B(this,u+=10),t=e?U(f,u+10):B(n,u),c=Z(o,t,u,1),!s){+O(c.d).slice(r+1,r+15)+1==1e14&&(c=P(c,a+1,0));break}}while(A(c.d,r+=10,d));return h=!0,P(c,a,d)},q.minus=q.sub=function(n){var e,i,t,r,s,o,u,c,f,a,d,l,p=this,w=p.constructor;if(n=new w(n),!p.d||!n.d)return p.s&&n.s?p.d?n.s=-n.s:n=new w(n.d||p.s!==n.s?p:NaN):n=new w(NaN),n;if(p.s!=n.s)return n.s=-n.s,p.plus(n);if(f=p.d,l=n.d,u=w.precision,c=w.rounding,!f[0]||!l[0]){if(l[0])n.s=-n.s;else{if(!f[0])return new w(3===c?-0:0);n=new w(p)}return h?P(n,u,c):n}if(i=g(n.e/x),a=g(p.e/x),f=f.slice(),s=a-i){for((d=s<0)?(e=f,s=-s,o=l.length):(e=l,i=a,o=f.length),s>(t=Math.max(Math.ceil(u/x),o)+2)&&(s=t,e.length=1),e.reverse(),t=s;t--;)e.push(0);e.reverse()}else{for((d=(t=f.length)<(o=l.length))&&(o=t),t=0;t<o;t++)if(f[t]!=l[t]){d=f[t]<l[t];break}s=0}for(d&&(e=f,f=l,l=e,n.s=-n.s),o=f.length,t=l.length-o;t>0;--t)f[o++]=0;for(t=l.length;t>s;){if(f[--t]<l[t]){for(r=t;r&&0===f[--r];)f[r]=E-1;--f[r],f[t]+=E}f[t]-=l[t]}for(;0===f[--o];)f.pop();for(;0===f[0];f.shift())--i;return f[0]?(n.d=f,n.e=L(f,i),h?P(n,u,c):n):new w(3===c?-0:0)},q.modulo=q.mod=function(n){var e,i=this,t=i.constructor;return n=new t(n),!i.d||!n.s||n.d&&!n.d[0]?new t(NaN):!n.d||i.d&&!i.d[0]?P(new t(i),t.precision,t.rounding):(h=!1,9==t.modulo?(e=Z(i,n.abs(),0,3,1)).s*=n.s:e=Z(i,n,0,t.modulo,1),e=e.times(n),h=!0,i.minus(e))},q.naturalExponential=q.exp=function(){return H(this)},q.naturalLogarithm=q.ln=function(){return B(this)},q.negated=q.neg=function(){var n=new this.constructor(this);return n.s=-n.s,P(n)},q.plus=q.add=function(n){var e,i,t,r,s,o,u,c,f,a,d=this,l=d.constructor;if(n=new l(n),!d.d||!n.d)return d.s&&n.s?d.d||(n=new l(n.d||d.s===n.s?d:NaN)):n=new l(NaN),n;if(d.s!=n.s)return n.s=-n.s,d.minus(n);if(f=d.d,a=n.d,u=l.precision,c=l.rounding,!f[0]||!a[0])return a[0]||(n=new l(d)),h?P(n,u,c):n;if(s=g(d.e/x),t=g(n.e/x),f=f.slice(),r=s-t){for(r<0?(i=f,r=-r,o=a.length):(i=a,t=s,o=f.length),r>(o=(s=Math.ceil(u/x))>o?s+1:o+1)&&(r=o,i.length=1),i.reverse();r--;)i.push(0);i.reverse()}for((o=f.length)-(r=a.length)<0&&(r=o,i=a,a=f,f=i),e=0;r;)e=(f[--r]=f[r]+a[r]+e)/E|0,f[r]%=E;for(e&&(f.unshift(e),++t),o=f.length;0==f[--o];)f.pop();return n.d=f,n.e=L(f,t),h?P(n,u,c):n},q.precision=q.sd=function(n){var e,i=this;if(void 0!==n&&n!==!!n&&1!==n&&0!==n)throw Error(d+n);return i.d?(e=k(i.d),n&&i.e+1>e&&(e=i.e+1)):e=NaN,e},q.round=function(){var n=this,e=n.constructor;return P(new e(n),n.e+1,e.rounding)},q.sine=q.sin=function(){var n,e,i=this,r=i.constructor;return i.isFinite()?i.isZero()?new r(i):(n=r.precision,e=r.rounding,r.precision=n+Math.max(i.e,i.sd())+x,r.rounding=1,i=function(n,e){var i,t=e.d.length;if(t<3)return W(n,2,e,e);i=(i=1.4*Math.sqrt(t))>16?16:0|i,e=e.times(Math.pow(5,-i)),e=W(n,2,e,e);for(var r,s=new n(5),o=new n(16),u=new n(20);i--;)r=e.times(e),e=e.times(s.plus(r.times(o.times(r).minus(u))));return e}(r,J(r,i)),r.precision=n,r.rounding=e,P(t>2?i.neg():i,n,e,!0)):new r(NaN)},q.squareRoot=q.sqrt=function(){var n,e,i,t,r,s,o=this,u=o.d,c=o.e,f=o.s,a=o.constructor;if(1!==f||!u||!u[0])return new a(!f||f<0&&(!u||u[0])?NaN:u?o:1/0);for(h=!1,0==(f=Math.sqrt(+o))||f==1/0?(((e=O(u)).length+c)%2==0&&(e+=\"0\"),f=Math.sqrt(e),c=g((c+1)/2)-(c<0||c%2),t=new a(e=f==1/0?\"1e\"+c:(e=f.toExponential()).slice(0,e.indexOf(\"e\")+1)+c)):t=new a(f.toString()),i=(c=a.precision)+3;;)if(t=(s=t).plus(Z(o,s,i+2,1)).times(.5),O(s.d).slice(0,i)===(e=O(t.d)).slice(0,i)){if(\"9999\"!=(e=e.slice(i-3,i+1))&&(r||\"4999\"!=e)){+e&&(+e.slice(1)||\"5\"!=e.charAt(0))||(P(t,c+1,1),n=!t.times(t).eq(o));break}if(!r&&(P(s,c+1,0),s.times(s).eq(o))){t=s;break}i+=4,r=1}return h=!0,P(t,c,a.rounding,n)},q.tangent=q.tan=function(){var n,e,i=this,r=i.constructor;return i.isFinite()?i.isZero()?new r(i):(n=r.precision,e=r.rounding,r.precision=n+10,r.rounding=1,(i=i.sin()).s=1,i=Z(i,new r(1).minus(i.times(i)).sqrt(),n+10,0),r.precision=n,r.rounding=e,P(2==t||4==t?i.neg():i,n,e,!0)):new r(NaN)},q.times=q.mul=function(n){var e,i,t,r,s,o,u,c,f,a=this,d=a.constructor,l=a.d,p=(n=new d(n)).d;if(n.s*=a.s,!(l&&l[0]&&p&&p[0]))return new d(!n.s||l&&!l[0]&&!p||p&&!p[0]&&!l?NaN:l&&p?0*n.s:n.s/0);for(i=g(a.e/x)+g(n.e/x),(c=l.length)<(f=p.length)&&(s=l,l=p,p=s,o=c,c=f,f=o),s=[],t=o=c+f;t--;)s.push(0);for(t=f;--t>=0;){for(e=0,r=c+t;r>t;)u=s[r]+p[t]*l[r-t-1]+e,s[r--]=u%E|0,e=u/E|0;s[r]=(s[r]+e)%E|0}for(;!s[--o];)s.pop();return e?++i:s.shift(),n.d=s,n.e=L(s,i),h?P(n,d.precision,d.rounding):n},q.toBinary=function(n,e){return z(this,2,n,e)},q.toDecimalPlaces=q.toDP=function(n,e){var i=this,t=i.constructor;return i=new t(i),void 0===n?i:(F(n,0,s),void 0===e?e=t.rounding:F(e,0,8),P(i,n+i.e+1,e))},q.toExponential=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,!0):(F(n,0,s),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n+1,e),!0,n+1)),t.isNeg()&&!t.isZero()?\"-\"+i:i},q.toFixed=function(n,e){var i,t,r=this,o=r.constructor;return void 0===n?i=R(r):(F(n,0,s),void 0===e?e=o.rounding:F(e,0,8),i=R(t=P(new o(r),n+r.e+1,e),!1,n+t.e+1)),r.isNeg()&&!r.isZero()?\"-\"+i:i},q.toFraction=function(n){var e,i,t,r,s,o,u,c,f,a,l,p,g=this,m=g.d,v=g.constructor;if(!m)return new v(g);if(f=i=new v(1),t=c=new v(0),o=(s=(e=new v(t)).e=k(m)-g.e-1)%x,e.d[0]=w(10,o<0?x+o:o),null==n)n=s>0?e:f;else{if(!(u=new v(n)).isInt()||u.lt(f))throw Error(d+u);n=u.gt(e)?s>0?e:f:u}for(h=!1,u=new v(O(m)),a=v.precision,v.precision=s=m.length*x*2;l=Z(u,e,0,1,1),1!=(r=i.plus(l.times(t))).cmp(n);)i=t,t=r,r=f,f=c.plus(l.times(r)),c=r,r=e,e=u.minus(l.times(r)),u=r;return r=Z(n.minus(i),t,0,1,1),c=c.plus(r.times(f)),i=i.plus(r.times(t)),c.s=f.s=g.s,p=Z(f,t,s,1).minus(g).abs().cmp(Z(c,i,s,1).minus(g).abs())<1?[f,t]:[c,i],v.precision=a,h=!0,p},q.toHexadecimal=q.toHex=function(n,e){return z(this,16,n,e)},q.toNearest=function(n,e){var i=this,t=i.constructor;if(i=new t(i),null==n){if(!i.d)return i;n=new t(1),e=t.rounding}else{if(n=new t(n),void 0===e?e=t.rounding:F(e,0,8),!i.d)return n.s?i:n;if(!n.d)return n.s&&(n.s=i.s),n}return n.d[0]?(h=!1,i=Z(i,n,0,e,1).times(n),h=!0,P(i)):(n.s=i.s,i=n),i},q.toNumber=function(){return+this},q.toOctal=function(n,e){return z(this,8,n,e)},q.toPower=q.pow=function(n){var e,i,t,r,s,o,u=this,c=u.constructor,f=+(n=new c(n));if(!(u.d&&n.d&&u.d[0]&&n.d[0]))return new c(w(+u,f));if((u=new c(u)).eq(1))return u;if(t=c.precision,s=c.rounding,n.eq(1))return P(u,t,s);if((e=g(n.e/x))>=n.d.length-1&&(i=f<0?-f:f)<=9007199254740991)return r=T(c,u,i,t),n.s<0?new c(1).div(r):P(r,t,s);if((o=u.s)<0){if(e<n.d.length-1)return new c(NaN);if(0==(1&n.d[e])&&(o=1),0==u.e&&1==u.d[0]&&1==u.d.length)return u.s=o,u}return(e=0!=(i=w(+u,f))&&isFinite(i)?new c(i+\"\").e:g(f*(Math.log(\"0.\"+O(u.d))/Math.LN10+u.e+1)))>c.maxE+1||e<c.minE-1?new c(e>0?o/0:0):(h=!1,c.rounding=u.s=1,i=Math.min(12,(e+\"\").length),(r=H(n.times(B(u,t+i)),t)).d&&A((r=P(r,t+5,1)).d,t,s)&&(e=t+10,+O((r=P(H(n.times(B(u,e+i)),e),e+5,1)).d).slice(t+1,t+15)+1==1e14&&(r=P(r,t+1,0))),r.s=o,h=!0,c.rounding=s,P(r,t,s))},q.toPrecision=function(n,e){var i,t=this,r=t.constructor;return void 0===n?i=R(t,t.e<=r.toExpNeg||t.e>=r.toExpPos):(F(n,1,s),void 0===e?e=r.rounding:F(e,0,8),i=R(t=P(new r(t),n,e),n<=t.e||t.e<=r.toExpNeg,n)),t.isNeg()&&!t.isZero()?\"-\"+i:i},q.toSignificantDigits=q.toSD=function(n,e){var i=this.constructor;return void 0===n?(n=i.precision,e=i.rounding):(F(n,1,s),void 0===e?e=i.rounding:F(e,0,8)),P(new i(this),n,e)},q.toString=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()&&!n.isZero()?\"-\"+i:i},q.truncated=q.trunc=function(){return P(new this.constructor(this),this.e+1,1)},q.valueOf=q.toJSON=function(){var n=this,e=n.constructor,i=R(n,n.e<=e.toExpNeg||n.e>=e.toExpPos);return n.isNeg()?\"-\"+i:i};var Z=function(){function n(n,e,i){var t,r=0,s=n.length;for(n=n.slice();s--;)t=n[s]*e+r,n[s]=t%i|0,r=t/i|0;return r&&n.unshift(r),n}function e(n,e,i,t){var r,s;if(i!=t)s=i>t?1:-1;else for(r=s=0;r<i;r++)if(n[r]!=e[r]){s=n[r]>e[r]?1:-1;break}return s}function t(n,e,i,t){for(var r=0;i--;)n[i]-=r,r=n[i]<e[i]?1:0,n[i]=r*t+n[i]-e[i];for(;!n[0]&&n.length>1;)n.shift()}return function(r,s,o,u,c,f){var h,a,d,l,p,w,m,v,N,b,M,y,q,O,F,A,D,Z,R,L,U=r.constructor,_=r.s==s.s?1:-1,k=r.d,S=s.d;if(!(k&&k[0]&&S&&S[0]))return new U(r.s&&s.s&&(k?!S||k[0]!=S[0]:S)?k&&0==k[0]||!S?0*_:_/0:NaN);for(f?(p=1,a=r.e-s.e):(f=E,p=x,a=g(r.e/p)-g(s.e/p)),R=S.length,D=k.length,b=(N=new U(_)).d=[],d=0;S[d]==(k[d]||0);d++);if(S[d]>(k[d]||0)&&a--,null==o?(O=o=U.precision,u=U.rounding):O=c?o+(r.e-s.e)+1:o,O<0)b.push(1),w=!0;else{if(O=O/p+2|0,d=0,1==R){for(l=0,S=S[0],O++;(d<D||l)&&O--;d++)F=l*f+(k[d]||0),b[d]=F/S|0,l=F%S|0;w=l||d<D}else{for((l=f/(S[0]+1)|0)>1&&(S=n(S,l,f),k=n(k,l,f),R=S.length,D=k.length),A=R,y=(M=k.slice(0,R)).length;y<R;)M[y++]=0;(L=S.slice()).unshift(0),Z=S[0],S[1]>=f/2&&++Z;do{l=0,(h=e(S,M,R,y))<0?(q=M[0],R!=y&&(q=q*f+(M[1]||0)),(l=q/Z|0)>1?(l>=f&&(l=f-1),1==(h=e(m=n(S,l,f),M,v=m.length,y=M.length))&&(l--,t(m,R<v?L:S,v,f))):(0==l&&(h=l=1),m=S.slice()),(v=m.length)<y&&m.unshift(0),t(M,m,y,f),-1==h&&(h=e(S,M,R,y=M.length))<1&&(l++,t(M,R<y?L:S,y,f)),y=M.length):0===h&&(l++,M=[0]),b[d++]=l,h&&M[0]?M[y++]=k[A]||0:(M=[k[A]],y=1)}while((A++<D||void 0!==M[0])&&O--);w=void 0!==M[0]}b[0]||b.shift()}if(1==p)N.e=a,i=w;else{for(d=1,l=b[0];l>=10;l/=10)d++;N.e=d+a*p-1,P(N,c?o+N.e+1:o,u,w)}return N}}();function P(n,e,i,t){var r,s,o,u,c,f,a,d,l,p=n.constructor;n:if(null!=e){if(!(d=n.d))return n;for(r=1,u=d[0];u>=10;u/=10)r++;if((s=e-r)<0)s+=x,o=e,c=(a=d[l=0])/w(10,r-o-1)%10|0;else if((l=Math.ceil((s+1)/x))>=(u=d.length)){if(!t)break n;for(;u++<=l;)d.push(0);a=c=0,r=1,o=(s%=x)-x+1}else{for(a=u=d[l],r=1;u>=10;u/=10)r++;c=(o=(s%=x)-x+r)<0?0:a/w(10,r-o-1)%10|0}if(t=t||e<0||void 0!==d[l+1]||(o<0?a:a%w(10,r-o-1)),f=i<4?(c||t)&&(0==i||i==(n.s<0?3:2)):c>5||5==c&&(4==i||t||6==i&&(s>0?o>0?a/w(10,r-o):0:d[l-1])%10&1||i==(n.s<0?8:7)),e<1||!d[0])return d.length=0,f?(e-=n.e+1,d[0]=w(10,(x-e%x)%x),n.e=-e||0):d[0]=n.e=0,n;if(0==s?(d.length=l,u=1,l--):(d.length=l+1,u=w(10,x-s),d[l]=o>0?(a/w(10,r-o)%w(10,o)|0)*u:0),f)for(;;){if(0==l){for(s=1,o=d[0];o>=10;o/=10)s++;for(o=d[0]+=u,u=1;o>=10;o/=10)u++;s!=u&&(n.e++,d[0]==E&&(d[0]=1));break}if(d[l]+=u,d[l]!=E)break;d[l--]=0,u=1}for(s=d.length;0===d[--s];)d.pop()}return h&&(n.e>p.maxE?(n.d=null,n.e=NaN):n.e<p.minE&&(n.e=0,n.d=[0])),n}function R(n,e,i){if(!n.isFinite())return V(n);var t,r=n.e,s=O(n.d),o=s.length;return e?(i&&(t=i-o)>0?s=s.charAt(0)+\".\"+s.slice(1)+S(t):o>1&&(s=s.charAt(0)+\".\"+s.slice(1)),s=s+(n.e<0?\"e\":\"e+\")+n.e):r<0?(s=\"0.\"+S(-r-1)+s,i&&(t=i-o)>0&&(s+=S(t))):r>=o?(s+=S(r+1-o),i&&(t=i-r-1)>0&&(s=s+\".\"+S(t))):((t=r+1)<o&&(s=s.slice(0,t)+\".\"+s.slice(t)),i&&(t=i-o)>0&&(r+1===o&&(s+=\".\"),s+=S(t))),s}function L(n,e){var i=n[0];for(e*=x;i>=10;i/=10)e++;return e}function U(n,e,i){if(e>M)throw h=!0,i&&(n.precision=i),Error(l);return P(new n(u),e,1,!0)}function _(n,e,i){if(e>y)throw Error(l);return P(new n(c),e,i,!0)}function k(n){var e=n.length-1,i=e*x+1;if(e=n[e]){for(;e%10==0;e/=10)i--;for(e=n[0];e>=10;e/=10)i++}return i}function S(n){for(var e=\"\";n--;)e+=\"0\";return e}function T(n,e,i,t){var r,s=new n(1),o=Math.ceil(t/x+4);for(h=!1;;){if(i%2&&G((s=s.times(e)).d,o)&&(r=!0),0===(i=g(i/2))){i=s.d.length-1,r&&0===s.d[i]&&++s.d[i];break}G((e=e.times(e)).d,o)}return h=!0,s}function I(n){return 1&n.d[n.d.length-1]}function C(n,e,i){for(var t,r=new n(e[0]),s=0;++s<e.length;){if(!(t=new n(e[s])).s){r=t;break}r[i](t)&&(r=t)}return r}function H(n,e){var i,t,r,s,o,u,c,f=0,a=0,d=0,l=n.constructor,p=l.rounding,g=l.precision;if(!n.d||!n.d[0]||n.e>17)return new l(n.d?n.d[0]?n.s<0?0:1/0:1:n.s?n.s<0?0:n:NaN);for(null==e?(h=!1,c=g):c=e,u=new l(.03125);n.e>-2;)n=n.times(u),d+=5;for(c+=t=Math.log(w(2,d))/Math.LN10*2+5|0,i=s=o=new l(1),l.precision=c;;){if(s=P(s.times(n),c,1),i=i.times(++a),O((u=o.plus(Z(s,i,c,1))).d).slice(0,c)===O(o.d).slice(0,c)){for(r=d;r--;)o=P(o.times(o),c,1);if(null!=e)return l.precision=g,o;if(!(f<3&&A(o.d,c-t,p,f)))return P(o,l.precision=g,p,h=!0);l.precision=c+=10,i=s=u=new l(1),a=0,f++}o=u}}function B(n,e){var i,t,r,s,o,u,c,f,a,d,l,p=1,g=n,w=g.d,m=g.constructor,v=m.rounding,N=m.precision;if(g.s<0||!w||!w[0]||!g.e&&1==w[0]&&1==w.length)return new m(w&&!w[0]?-1/0:1!=g.s?NaN:w?0:g);if(null==e?(h=!1,a=N):a=e,m.precision=a+=10,t=(i=O(w)).charAt(0),!(Math.abs(s=g.e)<15e14))return f=U(m,a+2,N).times(s+\"\"),g=B(new m(t+\".\"+i.slice(1)),a-10).plus(f),m.precision=N,null==e?P(g,N,v,h=!0):g;for(;t<7&&1!=t||1==t&&i.charAt(1)>3;)t=(i=O((g=g.times(n)).d)).charAt(0),p++;for(s=g.e,t>1?(g=new m(\"0.\"+i),s++):g=new m(t+\".\"+i.slice(1)),d=g,c=o=g=Z(g.minus(1),g.plus(1),a,1),l=P(g.times(g),a,1),r=3;;){if(o=P(o.times(l),a,1),O((f=c.plus(Z(o,new m(r),a,1))).d).slice(0,a)===O(c.d).slice(0,a)){if(c=c.times(2),0!==s&&(c=c.plus(U(m,a+2,N).times(s+\"\"))),c=Z(c,new m(p),a,1),null!=e)return m.precision=N,c;if(!A(c.d,a-10,v,u))return P(c,m.precision=N,v,h=!0);m.precision=a+=10,f=o=g=Z(d.minus(1),d.plus(1),a,1),l=P(g.times(g),a,1),r=u=1}c=f,r+=2}}function V(n){return String(n.s*n.s/0)}function j(n,e){var i,t,r;for((i=e.indexOf(\".\"))>-1&&(e=e.replace(\".\",\"\")),(t=e.search(/e/i))>0?(i<0&&(i=t),i+=+e.slice(t+1),e=e.substring(0,t)):i<0&&(i=e.length),t=0;48===e.charCodeAt(t);t++);for(r=e.length;48===e.charCodeAt(r-1);--r);if(e=e.slice(t,r)){if(r-=t,n.e=i=i-t-1,n.d=[],t=(i+1)%x,i<0&&(t+=x),t<r){for(t&&n.d.push(+e.slice(0,t)),r-=x;t<r;)n.d.push(+e.slice(t,t+=x));e=e.slice(t),t=x-e.length}else t-=r;for(;t--;)e+=\"0\";n.d.push(+e),h&&(n.e>n.constructor.maxE?(n.d=null,n.e=NaN):n.e<n.constructor.minE&&(n.e=0,n.d=[0]))}else n.e=0,n.d=[0];return n}function $(n,i){var t,r,s,o,u,c,f,a,l;if(\"Infinity\"===i||\"NaN\"===i)return+i||(n.s=NaN),n.e=NaN,n.d=null,n;if(v.test(i))t=16,i=i.toLowerCase();else if(m.test(i))t=2;else{if(!N.test(i))throw Error(d+i);t=8}for((o=i.search(/p/i))>0?(f=+i.slice(o+1),i=i.substring(2,o)):i=i.slice(2),u=(o=i.indexOf(\".\"))>=0,r=n.constructor,u&&(o=(c=(i=i.replace(\".\",\"\")).length)-o,s=T(r,new r(t),o,2*o)),o=l=(a=D(i,t,E)).length-1;0===a[o];--o)a.pop();return o<0?new r(0*n.s):(n.e=L(a,l),n.d=a,h=!1,u&&(n=Z(n,s,4*c)),f&&(n=n.times(Math.abs(f)<54?Math.pow(2,f):e.pow(2,f))),h=!0,n)}function W(n,e,i,t,r){var s,o,u,c,f=n.precision,a=Math.ceil(f/x);for(h=!1,c=i.times(i),u=new n(t);;){if(o=Z(u.times(c),new n(e++*e++),f,1),u=r?t.plus(o):t.minus(o),t=Z(o.times(c),new n(e++*e++),f,1),void 0!==(o=u.plus(t)).d[a]){for(s=a;o.d[s]===u.d[s]&&s--;);if(-1==s)break}s=u,u=t,t=o,o=s,0}return h=!0,o.d.length=a+1,o}function J(n,e){var i,r=e.s<0,s=_(n,n.precision,1),o=s.times(.5);if((e=e.abs()).lte(o))return t=r?4:1,e;if((i=e.divToInt(s)).isZero())t=r?3:2;else{if((e=e.minus(i.times(s))).lte(o))return t=I(i)?r?2:3:r?4:1,e;t=I(i)?r?1:4:r?3:2}return e.minus(s).abs()}function z(n,e,t,r){var u,c,f,h,a,d,l,p,g,w=n.constructor,m=void 0!==t;if(m?(F(t,1,s),void 0===r?r=w.rounding:F(r,0,8)):(t=w.precision,r=w.rounding),n.isFinite()){for(m?(u=2,16==e?t=4*t-3:8==e&&(t=3*t-2)):u=e,(f=(l=R(n)).indexOf(\".\"))>=0&&(l=l.replace(\".\",\"\"),(g=new w(1)).e=l.length-f,g.d=D(R(g),10,u),g.e=g.d.length),c=a=(p=D(l,10,u)).length;0==p[--a];)p.pop();if(p[0]){if(f<0?c--:((n=new w(n)).d=p,n.e=c,p=(n=Z(n,g,t,r,0,u)).d,c=n.e,d=i),f=p[t],h=u/2,d=d||void 0!==p[t+1],d=r<4?(void 0!==f||d)&&(0===r||r===(n.s<0?3:2)):f>h||f===h&&(4===r||d||6===r&&1&p[t-1]||r===(n.s<0?8:7)),p.length=t,d)for(;++p[--t]>u-1;)p[t]=0,t||(++c,p.unshift(1));for(a=p.length;!p[a-1];--a);for(f=0,l=\"\";f<a;f++)l+=o.charAt(p[f]);if(m){if(a>1)if(16==e||8==e){for(f=16==e?4:3,--a;a%f;a++)l+=\"0\";for(a=(p=D(l,u,e)).length;!p[a-1];--a);for(f=1,l=\"1.\";f<a;f++)l+=o.charAt(p[f])}else l=l.charAt(0)+\".\"+l.slice(1);l=l+(c<0?\"p\":\"p+\")+c}else if(c<0){for(;++c;)l=\"0\"+l;l=\"0.\"+l}else if(++c>a)for(c-=a;c--;)l+=\"0\";else c<a&&(l=l.slice(0,c)+\".\"+l.slice(c))}else l=m?\"0p+0\":\"0\";l=(16==e?\"0x\":2==e?\"0b\":8==e?\"0o\":\"\")+l}else l=V(n);return n.s<0?\"-\"+l:l}function G(n,e){if(n.length>e)return n.length=e,!0}function K(n){return new this(n).abs()}function Q(n){return new this(n).acos()}function X(n){return new this(n).acosh()}function Y(n,e){return new this(n).plus(e)}function nn(n){return new this(n).asin()}function en(n){return new this(n).asinh()}function tn(n){return new this(n).atan()}function rn(n){return new this(n).atanh()}function sn(n,e){n=new this(n),e=new this(e);var i,t=this.precision,r=this.rounding,s=t+4;return n.s&&e.s?n.d||e.d?!e.d||n.isZero()?(i=e.s<0?_(this,t,r):new this(0)).s=n.s:!n.d||e.isZero()?(i=_(this,s,1).times(.5)).s=n.s:e.s<0?(this.precision=s,this.rounding=1,i=this.atan(Z(n,e,s,1)),e=_(this,s,1),this.precision=t,this.rounding=r,i=n.s<0?i.minus(e):i.plus(e)):i=this.atan(Z(n,e,s,1)):(i=_(this,s,1).times(e.s>0?.25:.75)).s=n.s:i=new this(NaN),i}function on(n){return new this(n).cbrt()}function un(n){return P(n=new this(n),n.e+1,2)}function cn(n){if(!n||\"object\"!=typeof n)throw Error(a+\"Object expected\");var e,i,t,o=!0===n.defaults,u=[\"precision\",1,s,\"rounding\",0,8,\"toExpNeg\",-r,0,\"toExpPos\",0,r,\"maxE\",0,r,\"minE\",-r,0,\"modulo\",0,9];for(e=0;e<u.length;e+=3)if(i=u[e],o&&(this[i]=f[i]),void 0!==(t=n[i])){if(!(g(t)===t&&t>=u[e+1]&&t<=u[e+2]))throw Error(d+i+\": \"+t);this[i]=t}if(i=\"crypto\",o&&(this[i]=f[i]),void 0!==(t=n[i])){if(!0!==t&&!1!==t&&0!==t&&1!==t)throw Error(d+i+\": \"+t);if(t){if(\"undefined\"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(p);this[i]=!0}else this[i]=!1}return this}function fn(n){return new this(n).cos()}function hn(n){return new this(n).cosh()}function an(n,e){return new this(n).div(e)}function dn(n){return new this(n).exp()}function ln(n){return P(n=new this(n),n.e+1,3)}function pn(){var n,e,i=new this(0);for(h=!1,n=0;n<arguments.length;)if((e=new this(arguments[n++])).d)i.d&&(i=i.plus(e.times(e)));else{if(e.s)return h=!0,new this(1/0);i=e}return h=!0,i.sqrt()}function gn(n){return n instanceof e||n&&\"[object Decimal]\"===n.name||!1}function wn(n){return new this(n).ln()}function mn(n,e){return new this(n).log(e)}function vn(n){return new this(n).log(2)}function Nn(n){return new this(n).log(10)}function bn(){return C(this,arguments,\"lt\")}function En(){return C(this,arguments,\"gt\")}function xn(n,e){return new this(n).mod(e)}function Mn(n,e){return new this(n).mul(e)}function yn(n,e){return new this(n).pow(e)}function qn(n){var e,i,t,r,o=0,u=new this(1),c=[];if(void 0===n?n=this.precision:F(n,1,s),t=Math.ceil(n/x),this.crypto)if(crypto.getRandomValues)for(e=crypto.getRandomValues(new Uint32Array(t));o<t;)(r=e[o])>=429e7?e[o]=crypto.getRandomValues(new Uint32Array(1))[0]:c[o++]=r%1e7;else{if(!crypto.randomBytes)throw Error(p);for(e=crypto.randomBytes(t*=4);o<t;)(r=e[o]+(e[o+1]<<8)+(e[o+2]<<16)+((127&e[o+3])<<24))>=214e7?crypto.randomBytes(4).copy(e,o):(c.push(r%1e7),o+=4);o=t/4}else for(;o<t;)c[o++]=1e7*Math.random()|0;for(t=c[--o],n%=x,t&&n&&(r=w(10,x-n),c[o]=(t/r|0)*r);0===c[o];o--)c.pop();if(o<0)i=0,c=[0];else{for(i=-1;0===c[0];i-=x)c.shift();for(t=1,r=c[0];r>=10;r/=10)t++;t<x&&(i-=x-t)}return u.e=i,u.d=c,u}function On(n){return P(n=new this(n),n.e+1,this.rounding)}function Fn(n){return(n=new this(n)).d?n.d[0]?n.s:0*n.s:n.s||NaN}function An(n){return new this(n).sin()}function Dn(n){return new this(n).sinh()}function Zn(n){return new this(n).sqrt()}function Pn(n,e){return new this(n).sub(e)}function Rn(n){return new this(n).tan()}function Ln(n){return new this(n).tanh()}function Un(n){return P(n=new this(n),n.e+1,1)}return(e=function n(e){var i,t,r;function s(n){var e,i,t,r=this;if(!(r instanceof s))return new s(n);if(r.constructor=s,n instanceof s)return r.s=n.s,void(h?!n.d||n.e>s.maxE?(r.e=NaN,r.d=null):n.e<s.minE?(r.e=0,r.d=[0]):(r.e=n.e,r.d=n.d.slice()):(r.e=n.e,r.d=n.d?n.d.slice():n.d));if(\"number\"==(t=typeof n)){if(0===n)return r.s=1/n<0?-1:1,r.e=0,void(r.d=[0]);if(n<0?(n=-n,r.s=-1):r.s=1,n===~~n&&n<1e7){for(e=0,i=n;i>=10;i/=10)e++;return void(h?e>s.maxE?(r.e=NaN,r.d=null):e<s.minE?(r.e=0,r.d=[0]):(r.e=e,r.d=[n]):(r.e=e,r.d=[n]))}return 0*n!=0?(n||(r.s=NaN),r.e=NaN,void(r.d=null)):j(r,n.toString())}if(\"string\"!==t)throw Error(d+n);return 45===n.charCodeAt(0)?(n=n.slice(1),r.s=-1):r.s=1,b.test(n)?j(r,n):$(r,n)}if(s.prototype=q,s.ROUND_UP=0,s.ROUND_DOWN=1,s.ROUND_CEIL=2,s.ROUND_FLOOR=3,s.ROUND_HALF_UP=4,s.ROUND_HALF_DOWN=5,s.ROUND_HALF_EVEN=6,s.ROUND_HALF_CEIL=7,s.ROUND_HALF_FLOOR=8,s.EUCLID=9,s.config=s.set=cn,s.clone=n,s.isDecimal=gn,s.abs=K,s.acos=Q,s.acosh=X,s.add=Y,s.asin=nn,s.asinh=en,s.atan=tn,s.atanh=rn,s.atan2=sn,s.cbrt=on,s.ceil=un,s.cos=fn,s.cosh=hn,s.div=an,s.exp=dn,s.floor=ln,s.hypot=pn,s.ln=wn,s.log=mn,s.log10=Nn,s.log2=vn,s.max=bn,s.min=En,s.mod=xn,s.mul=Mn,s.pow=yn,s.random=qn,s.round=On,s.sign=Fn,s.sin=An,s.sinh=Dn,s.sqrt=Zn,s.sub=Pn,s.tan=Rn,s.tanh=Ln,s.trunc=Un,void 0===e&&(e={}),e&&!0!==e.defaults)for(r=[\"precision\",\"rounding\",\"toExpNeg\",\"toExpPos\",\"maxE\",\"minE\",\"modulo\",\"crypto\"],i=0;i<r.length;)e.hasOwnProperty(t=r[i++])||(e[t]=this[t]);return s.config(e),s}(f)).default=e.Decimal=e,u=new e(u),c=new e(c),e}()\n//    bigDec: require('decimal.js')\n});\n\nif ((typeof module) !== 'undefined') {\n    module.exports = nerdamer;\n};","import earcut from \"earcut\"\nimport { JavaMap, JavaSet, JavaSet as CustomSet, Pair } from \"javasetmap.ts\"\nimport nerdamer from \"nerdamer\"\nimport {\n  AABB,\n  assert,\n  assertf,\n  assertInst,\n  assertNever,\n  assertNumbers,\n  assertVectors,\n  concatenated,\n  eq,\n  eq0,\n  getLast,\n  gt,\n  indexWithMax,\n  int,\n  lt,\n  M4,\n  mapFilter,\n  mapPush,\n  newtonIterate2d,\n  newtonIterateWithDerivative,\n  NLA_DEBUG,\n  NLA_PRECISION,\n  SCE,\n  snap,\n  snap0,\n  sum,\n  TAU,\n  Transformable,\n  V,\n  V3,\n  withMax,\n} from \"ts3dutils\"\nimport { Mesh } from \"tsgl\"\n\nimport {\n  AABB2,\n  Curve,\n  curvePointMF,\n  Edge,\n  Face,\n  FaceInfoFactory,\n  L3,\n  P3,\n  ParametricSurface,\n  PlaneFace,\n  PointVsFace,\n  R2,\n  R2_R,\n  Surface,\n  uvInAABB2,\n  createEdge,\n} from \".\"\n\nimport { abs, sign, sqrt } from \"./math\"\n\nexport const EPS = 1e-5\n\nlet globalId = 0\n\nexport function getGlobalId() {\n  return globalId++\n}\n\nexport function addLikeSurfaceFaces(\n  likeSurfaceFaces: Face[][],\n  face1: Face,\n  face2: Face,\n) {\n  // There cannot be two subgroups which will later be connected, as the \"graph\" of like surface faces is fully\n  // connected\n  for (let i = 0; i < likeSurfaceFaces.length; i++) {\n    const faceGroup = likeSurfaceFaces[i]\n    let foundFace1 = false,\n      foundFace2 = false\n    for (let j = 0; j < faceGroup.length; j++) {\n      const face = faceGroup[j]\n      if (face == face1) {\n        foundFace1 = true\n      }\n      if (face == face2) {\n        foundFace2 = true\n      }\n    }\n    if (foundFace1 != foundFace2) {\n      faceGroup.push(foundFace1 ? face2 : face1)\n      return\n    } else if (foundFace1) {\n      // found both\n      return\n    }\n  }\n  // nothing found, add a new group\n  likeSurfaceFaces.push([face1, face2])\n}\n\nexport function assembleFaceFromLooseEdges(\n  edges: Edge[],\n  surface: Surface,\n  originalFace: Face,\n): Face {\n  const visited = new Set()\n\n  function nextStart() {\n    return edges.find((edge) => !visited.has(edge))\n  }\n\n  const loops = []\n  let startEdge,\n    currentEdge: Edge = undefined!\n  while ((startEdge = nextStart())) {\n    currentEdge = startEdge\n    const loop = []\n    let total = 0\n    do {\n      visited.add(currentEdge)\n      loop.push(currentEdge)\n      const possibleEdges = edges.filter((edge) => currentEdge.b.like(edge.a))\n      const normalAtCurrentB = surface.normalP(currentEdge.b)\n      const nextEdgeIndex = indexWithMax(possibleEdges, (edge) =>\n        currentEdge.bDir.angleRelativeNormal(edge.aDir, normalAtCurrentB),\n      )\n      currentEdge = possibleEdges[nextEdgeIndex]\n    } while (startEdge != currentEdge && total++ < 200)\n    assert(total != 201)\n    loops.push(loop)\n  }\n\n  const assembledFaces = BRep.assembleFacesFromLoops(\n    loops,\n    surface,\n    originalFace,\n  )\n  assertf(() => 1 == assembledFaces.length)\n  return assembledFaces[0]\n}\n\n/**\n * ## Markdown header\n * ![foo](screenshots/Capture.PNG)\n * {@link ../screenshots/Capture.PNG}\n * find the next edge with the MAXIMUM angle\n */\nexport function calcNextEdgeIndex(\n  currentEdge: Edge,\n  possibleEdges: Edge[],\n  faceNormalAtCurrentB: V3,\n): int {\n  let maxValue = -20,\n    advanced = false,\n    result = Number.MAX_SAFE_INTEGER\n  const normVector = currentEdge.bDir.cross(faceNormalAtCurrentB)\n  const eps = 1e-4\n  const dir = sign(currentEdge.deltaT())\n  const ecd = currentEdge.curve.diff(currentEdge.bT, -dir * eps).dot(normVector)\n  for (let i = possibleEdges.length; i--; ) {\n    const edge = possibleEdges[i]\n    const angle1 = currentEdge.bDir\n      .negated()\n      .angleRelativeNormal(edge.aDir, faceNormalAtCurrentB)\n    const angle = ((angle1 + TAU + NLA_PRECISION) % TAU) - NLA_PRECISION\n    if (eq0(angle)) {\n      // do advanced analysis\n      if (currentEdge.curve.isColinearTo(edge.curve)) {\n        continue\n      }\n      const edgeDir = sign(edge.deltaT())\n      const iscd = edge.curve.diff(edge.aT, edgeDir * eps).dot(normVector)\n      const diff = iscd - ecd\n      // if diff > 0, the angle is actually ~= 0\n      if (diff < 0 && (!advanced || diff > maxValue)) {\n        advanced = true\n        maxValue = diff\n        result = i\n      }\n    } else if (!advanced) {\n      if (gt(angle, maxValue)) {\n        maxValue = angle\n        result = i\n      }\n    }\n  }\n  return result == Number.MAX_SAFE_INTEGER ? 0 : result\n}\nexport type FaceInfo = {\n  face: Face\n  edge: Edge\n  normalAtCanonA: V3\n  inside: V3\n  reversed: boolean\n  angle: number\n}\nexport class BRep extends Transformable {\n  static EMPTY = new BRep([], false, \"BRep.EMPTY\", new Map()).buildAdjacencies()\n  static R3 = new BRep([], true, \"BRep.R3\", new Map()).buildAdjacencies()\n  faces: Face[]\n  infiniteVolume: boolean\n  generator: string | undefined\n  vertexNames: Map<V3, string> | undefined\n  edgeFaces: JavaMap<Edge, FaceInfo[]> | undefined\n\n  constructor(\n    faces: Face[],\n    infiniteVolume: boolean,\n    generator?: string,\n    vertexNames?: Map<V3, string>,\n  ) {\n    super()\n    this.faces = faces\n    assertInst(Face, ...faces)\n    this.infiniteVolume = infiniteVolume\n    assert(!this.infiniteVolume || true === this.infiniteVolume)\n    this.generator = generator\n    this.vertexNames = vertexNames\n    this.edgeFaces = undefined\n    //this.assertSanity()\n  }\n\n  static loop1ContainsLoop2(\n    loop1: Edge[],\n    ccw1: boolean,\n    loop2: Edge[],\n    ccw2: boolean,\n    surface: Surface,\n  ): boolean {\n    for (const edge of loop2) {\n      const loop1ContainsPoint = surface.loopContainsPoint(loop1, edge.a)\n      if (PointVsFace.ON_EDGE != loop1ContainsPoint)\n        return PointVsFace.INSIDE == loop1ContainsPoint\n    }\n    for (const edge of loop2) {\n      const edgePoint = edge.curve.at(edge.aT * 0.2 + edge.bT * 0.8)\n      const loop1ContainsPoint = surface.loopContainsPoint(loop1, edgePoint)\n      if (PointVsFace.ON_EDGE != loop1ContainsPoint)\n        return PointVsFace.INSIDE == loop1ContainsPoint\n    }\n    if (ccw1 != ccw2) {\n      return ccw2\n    }\n    throw new Error(loop1.sce + loop2.sce)\n  }\n\n  static assembleFacesFromLoops(\n    loops: Edge[][],\n    surface: Surface,\n    originalFace: Face,\n    infoFactory?: FaceInfoFactory<any>,\n  ): Face[] {\n    type LoopInfo = { loop: Edge[]; ccw: boolean; subloops: LoopInfo[] }\n\n    function placeRecursively(newLoopInfo: LoopInfo, loopInfos: LoopInfo[]) {\n      if (loopInfos.length == 0) {\n        loopInfos.push(newLoopInfo)\n      } else {\n        const subLoopInfo = loopInfos.find((loopInfo) =>\n          BRep.loop1ContainsLoop2(\n            loopInfo.loop,\n            loopInfo.ccw,\n            newLoopInfo.loop,\n            newLoopInfo.ccw,\n            surface,\n          ),\n        )\n        if (subLoopInfo) {\n          placeRecursively(newLoopInfo, subLoopInfo.subloops)\n        } else {\n          // newLoopInfo isnt contained by any other subLoopInfo\n          for (let i = loopInfos.length; --i >= 0; ) {\n            const subLoopInfo = loopInfos[i]\n            //console.log(\"cheving subLoopInfo\", surface.loopContainsPoint(newLoopInfo.edges,\n            // subLoopInfo.edges[0].a))\n            if (\n              BRep.loop1ContainsLoop2(\n                newLoopInfo.loop,\n                newLoopInfo.ccw,\n                subLoopInfo.loop,\n                subLoopInfo.ccw,\n                surface,\n              )\n            ) {\n              newLoopInfo.subloops.push(subLoopInfo)\n              loopInfos.splice(i, 1) // remove it\n            }\n          }\n          loopInfos.push(newLoopInfo)\n        }\n      }\n    }\n\n    function newFacesRecursive(loopInfo: LoopInfo): void {\n      // CW loops can be top level, if they are holes in the original face not contained in the new face\n      if (loopInfo.ccw) {\n        if (loopInfo.subloops.every((sl) => !sl.ccw)) {\n          const holes = loopInfo.subloops.map((sl) => sl.loop)\n          const info =\n            infoFactory &&\n            infoFactory.newSubFace(originalFace, surface, loopInfo.loop, holes)\n          const newFace = new originalFace.constructor(\n            surface,\n            loopInfo.loop,\n            holes,\n            \"genface\" + getGlobalId(),\n            info,\n          )\n          newFaces.push(newFace)\n          loopInfo.subloops.forEach((sl) =>\n            sl.subloops.forEach((slsl) => slsl.ccw && newFacesRecursive(slsl)),\n          )\n        } else {\n          loopInfo.subloops.forEach((sl) => sl.ccw && newFacesRecursive(sl))\n        }\n      }\n    }\n\n    const newFaces: Face[] = []\n    const topLevelLoops: LoopInfo[] = []\n    loops.forEach((loop) =>\n      placeRecursively(\n        {\n          loop: loop,\n          ccw: surface.edgeLoopCCW(loop),\n          subloops: [],\n        },\n        topLevelLoops,\n      ),\n    )\n    topLevelLoops.forEach((tll) => newFacesRecursive(tll))\n    return newFaces\n  }\n\n  /**\n   * Create a [BRep] by concatenating the faces of other BReps. Only use this if certain that the faces of the BReps do not intersect.\n   * Otherwise, use [BRep.plus].\n   * @param bReps\n   * @param generator\n   */\n  static join(bReps: BRep[], generator?: string) {\n    return new BRep(\n      bReps.flatMap((b2) => b2.faces),\n      false,\n      generator,\n    )\n  }\n\n  containsPoint(p: V3, forceInsideOutside: boolean = false): boolean {\n    const dirs = [\n      V(-0.3920414696448526, -0.12936136783391444, -0.9108068525164064),\n      V(0.6520650903544943, -0.07151288645511984, -0.7547827667692488),\n      V(0.9433494201061395, -0.2402757256238473, -0.22882186797013926),\n      V(0.13678704228501923, -0.04480387361087783, 0.9895867410047372),\n      V(0.0662057922721913, -0.5865836917435423, 0.8071780259955845),\n      V(-0.7322576567870621, -0.12953393611526787, 0.6685953061989045),\n      V(0.6579719127258273, -0.012300218400456116, 0.7529420075219719),\n      V(-0.5576497966736425, 0.8006695748324647, 0.2189861552871446),\n    ]\n    dirLoop: for (const dir of dirs) {\n      const testLine = new L3(p, dir)\n      let inside = this.infiniteVolume,\n        minT = Infinity\n      for (const face of this.faces) {\n        assert(!face.surface.containsCurve(testLine))\n        const ists = face.surface.isTsForLine(testLine)\n        for (const t of ists) {\n          const p = testLine.at(t)\n          const pvf = face.containsPoint2(p)\n          //assert(pvf != PointVsFace.ON_EDGE)\n          !forceInsideOutside && assert(!eq0(t))\n          if (t > 0) {\n            if (pvf == PointVsFace.ON_EDGE) {\n              continue dirLoop\n            }\n            if (pvf == PointVsFace.INSIDE) {\n              inside = !inside\n              if (t < minT) {\n                minT = t\n              }\n            }\n          }\n        }\n      }\n      return inside\n    }\n    return false\n  }\n\n  withMergedFaces(): BRep {\n    const likeSurfaceFaces = []\n    for (let i = 0; i < this.faces.length; i++) {\n      let addedToGroup = false\n      for (let j = 0; j < i; j++) {\n        if (this.faces[i].surface.isCoplanarTo(this.faces[j].surface)) {\n          const faceGroup = likeSurfaceFaces.find((faceGroup) =>\n            faceGroup.includes(this.faces[j]),\n          )\n          if (faceGroup) {\n            faceGroup.push(this.faces[i])\n            addedToGroup = true\n          }\n        }\n      }\n      !addedToGroup && likeSurfaceFaces.push([this.faces[i]])\n    }\n\n    console.log(\"likeSurfaceFaces\", likeSurfaceFaces)\n    if (likeSurfaceFaces.every((group) => group.length == 1)) return this\n\n    const newFaces = []\n    let total = 0\n    for (const faceGroup of likeSurfaceFaces) {\n      console.log(faceGroup)\n      if (faceGroup.length == 1) {\n        newFaces.push(faceGroup[0])\n      } else {\n        const allEdges = faceGroup.flatMap((face) => face.getAllEdges())\n        for (let i = allEdges.length; i-- > 0; ) {\n          for (let j = 0; j < i; j++) {\n            console.log(\"blugh\", total)\n            assert(i >= 0 && j >= 0 && total++ < 500, i + \" \" + j + \" \" + total)\n            if (allEdges[i].isCoEdge(allEdges[j])) {\n              // remove both\n              allEdges.splice(i, 1)\n              allEdges.splice(j, 1)\n              i--\n              break\n            }\n          }\n        }\n        const newFace = assembleFaceFromLooseEdges(\n          allEdges,\n          faceGroup[0].surface,\n          faceGroup[0],\n        )\n        newFaces.push(newFace)\n      }\n    }\n\n    return new BRep(\n      newFaces,\n      this.infiniteVolume,\n      this.generator && this.generator + \".withMergedFaces()\",\n      this.vertexNames,\n    )\n  }\n\n  calculateVolume(): number {\n    return sum(this.faces.map((face) => face.zDirVolume().volume))\n  }\n\n  toMesh(): Mesh & {\n    faceIndexes: Map<Face, { start: int; count: int }>\n    TRIANGLES: int[]\n    LINES: int[]\n    normals: V3[]\n  } {\n    const mesh = new Mesh()\n      .addVertexBuffer(\"normals\", \"ts_Normal\")\n      .addIndexBuffer(\"TRIANGLES\")\n      .addIndexBuffer(\"LINES\") as any\n    mesh.faceIndexes = new Map()\n    for (const face of this.faces) {\n      const triangleStart = mesh.TRIANGLES.length\n      face.addToMesh(mesh)\n      mesh.faceIndexes.set(face, {\n        start: triangleStart,\n        count: mesh.TRIANGLES.length - triangleStart,\n      })\n    }\n    //this.buildAdjacencies()\n    //for (const edge of this.edgeFaces.keys()) {\n    //\n    //}\n    return mesh\n  }\n\n  minus(other: BRep, infoFactory?: FaceInfoFactory<any>): BRep {\n    const generator =\n      this.generator &&\n      other.generator &&\n      this.generator + \".minus(\" + other.generator + \")\"\n    return this.intersection(\n      other.flipped(),\n      true,\n      true,\n      generator,\n      infoFactory,\n    )\n  }\n\n  plus(other: BRep, infoFactory?: FaceInfoFactory<any>): BRep {\n    const generator =\n      this.generator &&\n      other.generator &&\n      this.generator + \".plus(\" + other.generator + \")\"\n    return this.flipped()\n      .intersection(other.flipped(), true, true, generator, infoFactory)\n      .flipped()\n  }\n\n  and(other: BRep, infoFactory?: FaceInfoFactory<any>): BRep {\n    const generator =\n      this.generator &&\n      other.generator &&\n      this.generator + \".and(\" + other.generator + \")\"\n    return this.intersection(other, true, true, generator, infoFactory)\n  }\n\n  xor(other: BRep, infoFactory?: FaceInfoFactory<any>): BRep {\n    const generator =\n      this.generator &&\n      other.generator &&\n      this.generator + \".xor(\" + other.generator + \")\"\n    return new BRep(\n      this.minus(other, infoFactory).faces.concat(\n        other.minus(this, infoFactory).faces,\n      ),\n      this.infiniteVolume != other.infiniteVolume,\n      generator,\n    )\n  }\n\n  equals(obj: any): boolean {\n    return (\n      this.faces.length == obj.faces.length &&\n      this.faces.every((face) =>\n        (obj as BRep).faces.some((face2) => face.equals(face2)),\n      )\n    )\n  }\n\n  like(brep: BRep): boolean {\n    return (\n      this.faces.length == brep.faces.length &&\n      this.faces.every((face) =>\n        brep.faces.some((face2) => face.likeFace(face2)),\n      )\n    )\n  }\n\n  //reconstituteCoplanarFaces(likeSurfacePlanes, edgeLooseSegments, faceMap, newFaces) {\n  //    likeSurfacePlanes.forEach(faceGroup => {\n  //        // calculate total contours\n  //        let surface = faceGroup[0].surface, bag = []\n  //        faceGroup.forEach(face => {\n  //            Array.prototype.push.apply(bag, faceMap(face))\n  //            face.getAllEdges().forEach(edge => {\n  //                let edgeSubSegments\n  //                if (edgeSubSegments = edgeLooseSegments.get(edge)) {\n  //                    Array.prototype.push.apply(bag, edgeSubSegments)\n  //                } else {\n  //                    bag.push(edge)\n  //                }\n  //            })\n  //        })\n  //        let currentEdge, loops = []\n  //        while (currentEdge = bag.find(edge => !edge.visited)) {\n  //            let path = []\n  //            do {\n  //                currentEdge.visited = true\n  //                path.push(currentEdge)\n  //                let possibleNextEdges = bag.filter(edge => currentEdge.b.like(edge.a))\n  //                // lowest angle, i.e. the right-most next edge\n  //                let nextEdgeIndex = possibleNextEdges.indexWithMax((edge, index) =>\n  // -currentEdge.bDir.angleRelativeNormal(edge.aDir, surface.normalP(currentEdge.b))) currentEdge =\n  // possibleNextEdges[nextEdgeIndex] } while (!currentEdge.visited) let startIndex = path.find(currentEdge) if (-1\n  // != startIndex) { loops.push(path.slice(startIndex)) } } }) }\n\n  toString(): string {\n    return `new BRep([\\n${this.faces.join(\",\\n\").replace(/^/gm, \"\\t\")}], ${\n      this.infiniteVolume\n    })`\n  }\n\n  getConstructorParameters() {\n    return [this.faces, this.infiniteVolume]\n  }\n\n  toSource(useGenerator: boolean = true): string {\n    return (\n      (useGenerator && this.generator) ||\n      `new BRep([\\n${this.faces.map(SCE).join(\",\\n\").replace(/^/gm, \"\\t\")}], ${\n        this.infiniteVolume\n      })`\n    )\n  }\n\n  /**\n   * Rightmost next segment doesn't work, as the correct next segment isn't obvious from the current corner\n   * alone.\n   * (at least, not without extensive pre-analysis on the face edges, which shouldn't be necessary, as the\n   * correct new faces are defined by the new edges already.) Leftmost edge should work. Holes which touch the\n   * edge of the face will be added to the face contour.\n   *\n   * New segments will always be part left-er than existing ones, so no special check is required.\n   *\n   */\n  reconstituteFaces(\n    oldFaces: Face[],\n    edgeSubEdges: Map<Edge, Edge[]>,\n    faceMap: Map<Face, Edge[]>,\n    newFaces: Face[],\n    infoFactory?: FaceInfoFactory<any>,\n  ): void {\n    const oldFaceStatuses: Map<Face, string> = new Map()\n    // reconstitute faces\n    const insideEdges: Edge[] = []\n    for (const face of oldFaces) {\n      const usableOldEdges = face\n        .getAllEdges()\n        .filter((edge) => !edgeSubEdges.get(edge))\n      const subEdges: Edge[] = concatenated(\n        mapFilter(face.getAllEdges(), (edge) => edgeSubEdges.get(edge)),\n      )\n      const newEdges = faceMap.get(face) || []\n      if (newEdges.length || subEdges.length) {\n        oldFaceStatuses.set(face, \"partial\")\n        const loops = []\n        // new edges are definitely part of a resulting loop\n        // old edges (both contour and holes) can either be part of a new loop, in which case they will already\n        // have been visited when starting a loop search with a new edge, OR they can be stranded, OR they can\n        // remain in their old loop\n        function getNextStart() {\n          return (\n            newEdges.find((edge) => !visitedEdges.has(edge)) ||\n            subEdges.find((edge) => !visitedEdges.has(edge)) ||\n            usableOldEdges.find((edge) => !visitedEdges.has(edge))\n          )\n        }\n\n        const visitedEdges = new Set()\n\n        // search for a loop:\n        let currentEdge: Edge | undefined\n        while ((currentEdge = getNextStart())) {\n          const startEdge = currentEdge,\n            edges: Edge[] = []\n          let i = 0\n          // wether only new edges are used (can include looseSegments)\n          do {\n            visitedEdges.add(currentEdge)\n            edges.push(currentEdge)\n            // find next edge\n            const possibleOldEdges = usableOldEdges.filter((edge) =>\n              currentEdge!.b.like(edge.a),\n            )\n            const possibleSubEdges = subEdges.filter((edge) =>\n              currentEdge!.b.like(edge.a),\n            )\n            const possibleNewEdges = newEdges.filter((edge) =>\n              currentEdge!.b.like(edge.a),\n            )\n            const possibleEdges = possibleOldEdges.concat(\n              possibleSubEdges,\n              possibleNewEdges,\n            )\n            if (0 == possibleEdges.length) break\n            assert(0 < possibleEdges.length, () => face.sce)\n            const faceNormalAtCurrentB = face.surface.normalP(currentEdge.b)\n            const nextEdgeIndex = calcNextEdgeIndex(\n              currentEdge,\n              possibleEdges,\n              faceNormalAtCurrentB,\n            )\n            currentEdge = possibleEdges[nextEdgeIndex]\n            if (visitedEdges.has(currentEdge)) {\n              break\n            }\n            assert(currentEdge)\n            assert(currentEdge != startEdge)\n          } while (++i < 400)\n          if (400 == i) {\n            assert(false, \"too many\")\n          }\n          // check if we found a loop\n          if (edges.length > 1 && currentEdge == startEdge) {\n            loops.push(edges)\n          }\n        }\n        const faceNewFaces = BRep.assembleFacesFromLoops(\n          loops,\n          face.surface,\n          face,\n          infoFactory,\n        )\n        newFaces.push(...faceNewFaces)\n        const faceNewFacesEdges = faceNewFaces.flatMap((face) =>\n          face.getAllEdges(),\n        )\n        insideEdges.push(\n          ...usableOldEdges.filter((edge) => faceNewFacesEdges.includes(edge)),\n        )\n      }\n    }\n    while (insideEdges.length != 0) {\n      const insideEdge = insideEdges.pop()!\n      const adjacentFaces = this.edgeFaces!.get(insideEdge.getCanon())!\n      adjacentFaces.forEach((info) => {\n        if (!oldFaceStatuses.has(info.face)) {\n          oldFaceStatuses.set(info.face, \"inside\")\n          insideEdges.push.apply(insideEdges, info.face.getAllEdges())\n        }\n      })\n    }\n    newFaces.push(\n      ...oldFaces.filter((face) => oldFaceStatuses.get(face) == \"inside\"),\n    )\n  }\n\n  static getLooseEdgeSegments(\n    edgePointInfoss: JavaMap<Edge, IntersectionPointInfo[]>,\n    edgeFaces: JavaMap<Edge, FaceInfo[]>,\n  ): Map<Edge, Edge[]> {\n    const result = new JavaMap<Edge, Edge[]>()\n    // if there are no point info, the original edge will be kept, so we should return nothing\n    // otherwise, something will be returned, even if it a new edge identical to the base edge\n    for (const [canonEdge, pointInfos] of edgePointInfoss) {\n      if (0 == pointInfos.length) continue\n      const allFaces = edgeFaces.get(canonEdge)!\n      pointInfos.sort((a, b) => snap0(a.edgeT - b.edgeT) || +!!undefined)\n      let startP = canonEdge.a,\n        startDir = canonEdge.aDir,\n        startT = canonEdge.aT,\n        startInfo\n\n      function addNewEdge(\n        startInfo: IntersectionPointInfo | undefined,\n        endInfo: IntersectionPointInfo | undefined,\n        newEdge: Edge,\n      ) {\n        for (let i = 0; i < allFaces.length; i++) {\n          const faceInfo = allFaces[i]\n          mapPush(\n            result,\n            !faceInfo.reversed ? canonEdge : canonEdge.flipped(),\n            !faceInfo.reversed ? newEdge : newEdge.flipped(),\n          )\n        }\n      }\n\n      for (let i = 0; i < pointInfos.length; i++) {\n        const info = pointInfos[i]\n        const pDir = canonEdge.tangentAt(info.edgeT)\n        if (!eq(info.edgeT, startT)) {\n          const newEdge = createEdge(\n            canonEdge.curve,\n            startP,\n            info.p,\n            startT,\n            info.edgeT,\n            undefined,\n            startDir,\n            pDir,\n            \"looseSegment\" + getGlobalId(),\n          )\n          addNewEdge(startInfo, info, newEdge)\n        }\n        startP = info.p\n        startT = info.edgeT\n        startInfo = info\n        startDir = pDir\n      }\n      if (startInfo && !eq(startT, canonEdge.bT)) {\n        const newEdge = createEdge(\n          canonEdge.curve,\n          startP,\n          canonEdge.b,\n          startT,\n          canonEdge.bT,\n          undefined,\n          startDir,\n          canonEdge.bDir,\n          \"looseSegment\" + getGlobalId(),\n        )\n        addNewEdge(startInfo, undefined, newEdge)\n      }\n    }\n    return result\n  }\n\n  getIntersectionEdges(brep2: BRep) {\n    const faceMap = new Map(),\n      thisEdgePoints = new JavaMap<Edge, IntersectionPointInfo[]>(),\n      otherEdgePoints = new JavaMap<Edge, IntersectionPointInfo[]>()\n\n    const checkedPairs = new JavaSet<Pair<any, any>>()\n\n    this.faces.forEach((face) => {\n      //console.log('face', face.toString())\n      brep2.faces.forEach((face2) => {\n        //console.log('face2', face2.toString())\n        face.intersectFace(\n          face2,\n          this,\n          brep2,\n          faceMap,\n          thisEdgePoints,\n          otherEdgePoints,\n          checkedPairs,\n        )\n      })\n    })\n\n    return concatenated(Array.from(faceMap.values()))\n  }\n\n  shellCount(): int {\n    const foundFaces = new Set<Face>()\n    let face: Face | undefined,\n      result = 0\n    while ((face = this.faces.find((face) => !foundFaces.has(face)))) {\n      result++\n      const stack = [face]\n      while ((face = stack.pop())) {\n        // @ts-ignore\n        for (const edge of face.getAllEdges()) {\n          // @ts-ignore\n          for (const { face: face2 } of this.edgeFaces!.get(edge.getCanon())!) {\n            if (face !== face2 && !foundFaces.has(face2)) {\n              foundFaces.add(face2)\n              stack.push(face2)\n            }\n          }\n        }\n      }\n    }\n    return result\n  }\n\n  getAABB(): AABB {\n    return AABB.forAABBs(this.faces.map((face) => face.getAABB()))\n  }\n\n  assertSanity(): void {\n    if (!NLA_DEBUG) return\n    // const allFaceEdges = this.faces.flatMap(face => face.getAllEdges())\n    // for (const { i, j } of combinations(allFaceEdges.length)) {\n    // const a = allFaceEdges[i],\n    // \tb = allFaceEdges[j]\n    // assert(i == j || !a.isCoEdge(b) || a == b || a.flippedOf == b, 'coedges not linked properly', a, b)\n    // assert(\n    // \ti == j ||\n    // \t\t!a.curve.isColinearTo(b.curve) ||\n    // \t\t(a.curve.equals(b.curve) && a.isCoEdge(b)) ||\n    // \t\t!a.overlaps(b),\n    // \t'colinear edges overlap',\n    // \ta,\n    // \tb,\n    // )\n    // }\n\n    this.buildAdjacencies()\n    for (const [canonEdge, edgeFaceInfos] of this.edgeFaces!) {\n      // TODO handle curved faces\n      assert(edgeFaceInfos.length % 2 == 0, () => canonEdge + edgeFaceInfos.sce)\n    }\n  }\n\n  //intersection3(other: BRep, buildThis: boolean, buildOther: boolean, name?: string): BRep {\n  //    this.assertSanity()\n  //    other.assertSanity()\n  //    this.buildAdjacencies()\n  //    other.buildAdjacencies()\n  //\n  //    // edge / edge\n  //    for (const [edge1, edge1Faces] of this.edgeFaces) {\n  //        for (const [edge2, edge2Faces] of other.edgeFaces) {\n  //            const curve1 = edge1.curve, curve2 = edge2.curve\n  //            if (curve1.isColinearTo(curve2)) {\n  //                if (edge1.overlaps(edge2)) {\n  //                    // faces have a common edge\n  //                    const aT = curve1.pointT(edge2.a), bT = curve1.pointT(edge2.a)\n  //                    const minT = min(aT, bT), maxT = max(aT, bT)\n  //                    const commonEdge = createEdge(curve1, min(edge1.minT, minT), min(edge1.maxT, maxT), )\n  //                }\n  //            } else if (x = curve1.isInfosWithCurve(edge2.curve)) {\n  //                // edges intersect in a point\n  //            }\n  //        }\n  //    }\n  //\n  //    // point / edge\n  //    function pointEdge(b1, b2, has, add) {\n  //        for (const v1 of this.vertFaces.keys()) {\n  //            for (const edge2 of other.edgeFaces.keys()) {\n  //                if (edge2.curve.containsPoint(v1)) {\n  //                    const edge2T = edge2.curve.pointT(v1)\n  //                    if (eq(edge2.aT, edge2T) || eq(edge2.bT, edge2T)) {\n  //                        add(v1, eq(edge2.aT, edge2T) ? edge2.a : edge2.b)\n  //                    }\n  //                }\n  //            }\n  //        }\n  //    }\n  //    const pairs: CustomSet<[Equalable, Equalable]> = new CustomSet<[Equalable, Equalable]>()\n  //    pointEdge(this, other, (a, b) => pairs.has([a, b]), (a, b) => pairs.add([a, b]))\n  //    pointEdge(other, this, (b, a) => pairs.has([a, b]), (b, a) => pairs.add([a, b]))\n  //\n  //\n  //    // point / point\n  //    for (const v1 of this.vertFaces.keys()) {\n  //        for (const v2 of other.vertFaces.keys()) {\n  //            if (v1.like(v2)) {\n  //\n  //            }\n  //        }\n  //    }\n  //\n  //    for (const face1 of this.faces) {\n  //        for (const face2 of other.faces) {\n  //            face1.intersectFace(face2)\n  //        }\n  //    }\n  //\n  //}\n\n  buildAdjacencies(): this & {\n    edgeFaces: JavaMap<\n      Edge,\n      {\n        face: Face\n        edge: Edge\n        normalAtCanonA: V3\n        inside: V3\n        reversed: boolean\n        angle: number\n      }[]\n    >\n  } {\n    if (this.edgeFaces) return this as any\n\n    this.edgeFaces = new JavaMap()\n    for (const face of this.faces) {\n      for (const edge of face.getAllEdges()) {\n        const canon = edge.getCanon()\n        const normalAtCanonA = face.surface.normalP(canon.a)\n        const inside = normalAtCanonA.cross(\n          canon == edge ? edge.aDir : edge.bDir,\n        )\n        mapPush(this.edgeFaces!, canon, {\n          face: face,\n          edge: edge,\n          normalAtCanonA: normalAtCanonA,\n          reversed: canon != edge,\n          inside: inside,\n          angle: 0,\n        })\n      }\n    }\n\n    for (const [canonEdge, edgeFaceInfos] of this.edgeFaces!) {\n      // TODO handle curved faces\n      //assert(edgeFaceInfos.length % 2 == 0, () => canonEdge + edgeFaceInfos.sce)\n      const faceInfo0 = edgeFaceInfos.find((faceInfo) => faceInfo.reversed)\n      if (!faceInfo0) {\n        console.warn(\"invalid brep\")\n        continue\n      }\n      edgeFaceInfos.forEach((faceInfo) => {\n        if (faceInfo != faceInfo0) {\n          faceInfo.angle = faceInfo0.inside.angleRelativeNormal(\n            faceInfo.inside,\n            canonEdge.aDir.unit(),\n          )\n          if (faceInfo.angle < 0) faceInfo.angle += 2 * Math.PI\n        }\n      })\n      edgeFaceInfos.sort((a, b) => snap(a.angle - b.angle, 0)) // TODO  || assertNever()\n    }\n\n    return this as any\n  }\n\n  /**\n   * Cases for volumes A and B\n   *\n   *          1.  Volumes do not touch.\n   *          2.  face/face Face surfaces intersect each other.\n   *              implies edges going through faces.\n   *              e.g. box(5, 5, 5) - box(5, 5, 5).translate(1, 1, 1)\n   *          3.  face/edge Edge of A lies in a face of B\n   *              implies vertices of A lying in face of B\n   *              e.g. box(5, 5, 5) - box(3, 3, 3).rotateZ([0, 1, 2] * PI / 2).translate(0, 1, 1)\n   *          4.  edge/edge Two edges are colinear.\n   *              implies vertex of A lying in edge of B\n   *           5.  vertex/edge Vertex of A lies on edge of B (but no edge/edge)\n   *          6.  vertex/vertex with/without edge/edge, edge/face and face/face intersections\n   *          7.  vertex lies in face\n   *\n   *\n   *\n   */\n  intersection(\n    other: BRep,\n    buildThis: boolean,\n    buildOther: boolean,\n    generator?: string,\n    infoFactory?: FaceInfoFactory<any>,\n  ): BRep {\n    this.assertSanity()\n    other.assertSanity()\n    this.buildAdjacencies()\n    other.buildAdjacencies()\n\n    const faceMap = new Map()\n    const thisEdgePoints = new JavaMap<Edge, IntersectionPointInfo[]>(),\n      otherEdgePoints = new JavaMap<Edge, IntersectionPointInfo[]>()\n\n    const checkedPairs = new CustomSet<Pair<any, any>>()\n\n    for (const thisFace of this.faces) {\n      for (const otherFace of other.faces) {\n        thisFace.intersectFace(\n          otherFace,\n          this,\n          other,\n          faceMap,\n          thisEdgePoints,\n          otherEdgePoints,\n          checkedPairs,\n        )\n      }\n    }\n    for (const edge of thisEdgePoints.keys()) {\n      assert(this.edgeFaces!.get(edge))\n    }\n    for (const edge of otherEdgePoints.keys()) {\n      assert(other.edgeFaces!.get(edge))\n    }\n    const newFaces: Face[] = []\n\n    if (\n      0 == faceMap.size &&\n      0 == thisEdgePoints.size &&\n      0 == otherEdgePoints.size\n    ) {\n      const thisInOther =\n        other.containsPoint(this.faces[0].contour[0].a, true) !==\n        other.infiniteVolume\n      const otherInThis =\n        !thisInOther &&\n        this.containsPoint(other.faces[0].contour[0].a) !== this.infiniteVolume\n      if (thisInOther || otherInThis) {\n        const [inside, outside] = thisInOther ? [this, other] : [other, this]\n        if (inside.infiniteVolume) {\n          if (outside.infiniteVolume) {\n            return outside\n          } else {\n            return BRep.join([inside, outside])\n          }\n        } else {\n          if (outside.infiniteVolume) {\n            return BRep.EMPTY\n          } else {\n            return inside\n          }\n        }\n      } else {\n        if (this.infiniteVolume) {\n          if (other.infiniteVolume) {\n            return BRep.join([this, other])\n          } else {\n            other\n          }\n        } else {\n          if (other.infiniteVolume) {\n            return this\n          } else {\n            return BRep.EMPTY\n          }\n        }\n      }\n\n      return BRep.EMPTY\n    } else {\n      if (buildThis) {\n        const edgeLooseSegments = BRep.getLooseEdgeSegments(\n          thisEdgePoints,\n          this.edgeFaces!,\n        )\n        // @ts-ignore\n        const els = this.faces.map((face) => [\n          face,\n          Array.from(edgeLooseSegments.entries()).flatMap(([edge, subs]) =>\n            face.getAllEdges().some((e) => e.equals(edge)) ? subs : [],\n          ),\n        ])\n        this.reconstituteFaces(\n          this.faces,\n          edgeLooseSegments,\n          faceMap,\n          newFaces,\n          infoFactory,\n        )\n      }\n      if (buildOther) {\n        const edgeLooseSegments = BRep.getLooseEdgeSegments(\n          otherEdgePoints,\n          other.edgeFaces!,\n        )\n        // @ts-ignore\n        const els = other.faces.map((face) => [\n          face,\n          Array.from(edgeLooseSegments.entries()).flatMap(([edge, subs]) =>\n            face.getAllEdges().some((e) => e.equals(edge)) ? subs : [],\n          ),\n        ])\n        other.reconstituteFaces(\n          other.faces,\n          edgeLooseSegments,\n          faceMap,\n          newFaces,\n          infoFactory,\n        )\n      }\n    }\n    //buildCoplanar && this.reconstituteCoplanarFaces(likeSurfaceFaces, edgeLooseSegments, faceMap, newFaces,\n    // this.infiniteVolume, other.infiniteVolume)\n\n    const result = new BRep(\n      newFaces,\n      this.infiniteVolume && other.infiniteVolume,\n      generator,\n    )\n    //result.buildAdjacencies()\n    return result\n  }\n\n  transform(m4: M4, desc?: string) {\n    let vertexNames: Map<V3, string> | undefined\n    if (this.vertexNames) {\n      vertexNames = new Map()\n      this.vertexNames.forEach((name, vertex) =>\n        vertexNames!.set(m4.transformPoint(vertex), name + desc),\n      )\n    }\n    return new BRep(\n      this.faces.map((f) => f.transform(m4)),\n      this.infiniteVolume,\n      this.generator && desc && this.generator + desc, // if desc isn't set, the generator will be invalid\n      vertexNames,\n    ) as this\n  }\n  transform4(m4: M4, desc?: string) {\n    let vertexNames: Map<V3, string> | undefined\n    if (this.vertexNames) {\n      vertexNames = new Map()\n      this.vertexNames.forEach((name, vertex) =>\n        vertexNames!.set(m4.transformPoint(vertex), name + desc),\n      )\n    }\n    return new BRep(\n      this.faces.map((f) => f.transform4(m4)),\n      this.infiniteVolume,\n      this.generator && desc && this.generator + desc, // if desc isn't set, the generator will be invalid\n      vertexNames,\n    ) as this\n  }\n\n  flipped(): BRep {\n    return new BRep(\n      this.faces.map((f) => f.flipped()),\n      !this.infiniteVolume,\n      this.generator && this.generator + \".flipped()\",\n      this.vertexNames,\n    )\n  }\n}\n\nexport type IntersectionPointInfo = {\n  p: V3 // intersection point\n  insideDir: V3\n  t: number // param on intersection curve\n  edge: Edge // face edge doing the intersection\n  edgeT: number\n  colinear: boolean // whether edge is colinear to intersection line\n  used?: boolean\n}\n\nexport function dotCurve(v: V3, cDir: V3, cDDT: V3): number {\n  let dot = v.dot(cDir)\n  if (eq0(dot)) {\n    dot = v.dot(cDDT)\n  }\n  assert(!eq0(dot))\n  return dot\n}\n\nexport function dotCurve2(\n  curve: Curve,\n  t: number,\n  normal: V3,\n  sign: number,\n): number {\n  assert(sign == 1 || sign == -1, sign)\n  const tangentDot = curve.tangentAt(t).dot(normal)\n  // if tangentDot != 0 the curve simply crosses the plane\n  if (!eq0(tangentDot)) {\n    return sign * tangentDot\n  }\n  if (curve.ddt) {\n    const ddtDot = curve.ddt(t).dot(normal)\n    // tangentDot == 0 ==> critical point at t, if ddtDot != 0, then it is a turning point, otherwise we can't be sure\n    // and must do a numeric test\n    if (!eq0(ddtDot)) {\n      return ddtDot\n    }\n  }\n  const numericDot = curve\n    .at(t)\n    .to(curve.at(t + sign * 4 * NLA_PRECISION))\n    .dot(normal)\n  assert(!(curve instanceof L3))\n  return numericDot\n}\n\nexport const INSIDE = 0,\n  OUTSIDE = 1,\n  COPLANAR_SAME = 2,\n  COPLANAR_OPPOSITE = 3,\n  ALONG_EDGE_OR_PLANE = 4\n\n/**\n *\n * @param brep BREP to check\n * @param edge edge to check\n * @param dirAtEdgeA the direction vector to check\n * @param faceNormal If dirAtEdgeA doesn't split a volume, but is along a face, the returned value depends on\n *     wether that faces normal1 points in the same direction as faceNormal\n * @returns INSIDE, OUTSIDE, COPLANAR_SAME or COPLANAR_OPPOSITE\n */\n//function splitsVolumeEnclosingFaces(brep: BRep, edge: Edge, dirAtEdgeA: V3, faceNormal: V3): int {\n//    assert(arguments.length == 4)\n//    //assert(p.equals(edge.a))\n//    const ab1 = edge.aDir.unit()\n//    const relFaces = facesWithEdge(edge, brep.faces) as any[]\n//    relFaces.forEach(faceInfo => {\n//        faceInfo.normalAtEdgeA = faceInfo.face.surface.normalP(edge.a)\n//        faceInfo.edgeDirAtEdgeA = !faceInfo.reversed\n//            ? faceInfo.edge.aDir\n//            : faceInfo.edge.bDir\n//        faceInfo.outsideVector = faceInfo.edgeDirAtEdgeA.cross(faceInfo.normalAtEdgeA)\n//        faceInfo.angle = (dirAtEdgeA.angleRelativeNormal(faceInfo.outsideVector.negated(), ab1) + 2 * Math.PI +\n// NLA_PRECISION / 2) % (2 * Math.PI) }) assert(relFaces.length != 0, edge.toSource()) relFaces.sort((a, b) => a.angle\n// - b.angle) // assert(relFaces.length % 2 == 0, edge.toSource()) // even number of touching faces  if\n// (eq0(relFaces[0].angle)) { //assert(false) todo const coplanarSame = relFaces[0].normalAtEdgeA.dot(faceNormal) > 0;\n// return coplanarSame ? COPLANAR_SAME : COPLANAR_OPPOSITE } else { return !relFaces[0].reversed ? INSIDE : OUTSIDE } }\nexport function splitsVolumeEnclosingFaces(\n  brep: BRep,\n  canonEdge: Edge,\n  dirAtEdgeA: V3,\n  faceNormal: V3,\n): int {\n  assert(arguments.length == 4)\n  assert(canonEdge == canonEdge.getCanon())\n  //assert(p.equals(canonEdge.a))\n  const edgeFaceInfos = brep.edgeFaces!.get(canonEdge) as any[]\n  assertf(() => edgeFaceInfos.length % 2 == 0)\n  assertf(() => brep.edgeFaces)\n  const faceInfo0 = edgeFaceInfos[0]\n  const aDir1 = canonEdge.aDir.unit()\n  const angleToCanon =\n    ((faceInfo0.inside.angleRelativeNormal(dirAtEdgeA, aDir1) +\n      2 * Math.PI +\n      NLA_PRECISION) %\n      (2 * Math.PI)) -\n    NLA_PRECISION\n  const nearestFaceInfoIndex = edgeFaceInfos.findIndex((faceInfo) =>\n    lt(angleToCanon, faceInfo.angle),\n  )\n  const nearestFaceInfo =\n    edgeFaceInfos[\n      nearestFaceInfoIndex == -1\n        ? edgeFaceInfos.length - 1\n        : nearestFaceInfoIndex - 1\n    ]\n  if (eq(nearestFaceInfo.angle, angleToCanon)) {\n    //assert(false) todo\n    const coplanarSame = nearestFaceInfo.normalAtCanonA.dot(faceNormal) > 0\n    return coplanarSame ? COPLANAR_SAME : COPLANAR_OPPOSITE\n  } else {\n    return nearestFaceInfo.reversed ? INSIDE : OUTSIDE\n  }\n}\n\nexport function splitsVolumeEnclosingFacesP(\n  brep: BRep,\n  canonEdge: Edge,\n  p: V3,\n  pInside: V3,\n  pFaceNormal: V3,\n): int {\n  assert(arguments.length == 5)\n  assert(canonEdge == canonEdge.getCanon())\n  //assert(p.equals(canonEdge.a))\n  assertf(() => brep.edgeFaces)\n  const edgeFaceInfos = brep.edgeFaces!.get(canonEdge)!\n  assertf(() => edgeFaceInfos.length % 2 == 0)\n  const pDir1 = canonEdge.tangentAt(canonEdge.curve.pointT(p)).unit()\n  const faceInfoAngleFromPInsideNeg = (faceInfo: FaceInfo) => {\n    const faceInfoPDir =\n      faceInfo.edge.getCanon() == faceInfo.edge ? pDir1 : pDir1.negated()\n    const faceInfoInsideAtP = faceInfo.face.surface\n      .normalP(p)\n      .cross(faceInfoPDir)\n    const faceInfoAngleAtP = pInside.angleRelativeNormal(\n      faceInfoInsideAtP,\n      pDir1,\n    )\n    return -(((faceInfoAngleAtP + TAU + NLA_PRECISION) % TAU) - NLA_PRECISION)\n  }\n  const nearestFaceInfo = withMax(edgeFaceInfos, faceInfoAngleFromPInsideNeg)!\n  if (eq0(faceInfoAngleFromPInsideNeg(nearestFaceInfo))) {\n    //assert(false) todo\n    const coplanarSame =\n      nearestFaceInfo.face.surface.normalP(p).dot(pFaceNormal) > 0\n    return coplanarSame ? COPLANAR_SAME : COPLANAR_OPPOSITE\n  } else {\n    return nearestFaceInfo.reversed ? OUTSIDE : INSIDE\n  }\n}\n\nexport function splitsVolumeEnclosingFacesP2(\n  brep: BRep,\n  canonEdge: Edge,\n  p: V3,\n  testCurve: Curve,\n  curveT: number,\n  dir: -1 | 1,\n  faceNormal: V3,\n): int {\n  assert(canonEdge == canonEdge.getCanon())\n  //assert(p.equals(canonEdge.a))\n  assertf(() => brep.edgeFaces)\n  const edgeFaceInfos = brep.edgeFaces!.get(canonEdge) as any[]\n  assertf(() => edgeFaceInfos.length % 2 == 0)\n  const pDir1 = canonEdge.tangentAt(canonEdge.curve.pointT(p)).unit()\n  let pInside = testCurve.tangentAt(curveT).times(dir)\n  if (pInside.isParallelTo(pDir1)) {\n    pInside = testCurve\n      .diff(curveT, (1e-4 * dir) / testCurve.tangentAt(curveT).length())\n      .rejectedFrom(pDir1)\n    pInside = pInside.div(pInside.length())\n  }\n  let minValue = 20,\n    advanced = false,\n    result = OUTSIDE\n  for (const faceInfo of edgeFaceInfos) {\n    const faceInfoPDir =\n      faceInfo.edge.getCanon() == faceInfo.edge ? pDir1 : pDir1.negated()\n    const faceInfoInsideAtP = faceInfo.face.surface\n      .normalP(p)\n      .cross(faceInfoPDir)\n    const faceInfoAngleAtP = pInside.angleRelativeNormal(\n      faceInfoInsideAtP,\n      pDir1,\n    )\n    const angle =\n      ((faceInfoAngleAtP + TAU + NLA_PRECISION) % TAU) - NLA_PRECISION\n    if (eq0(angle)) {\n      // do advanced analysis\n      const normVector = faceInfo.face.surface.normalP(p)\n      if (faceInfo.face.surface.containsCurve(testCurve)) {\n        const coplanarSame = normVector.dot(faceNormal) > 0\n        return coplanarSame ? COPLANAR_SAME : COPLANAR_OPPOSITE\n      }\n      const testPlane = P3.normalOnAnchor(pDir1, p)\n      const isCurve = faceInfo.face.surface.isCurvesWithPlane(testPlane)[0]\n      const isCurvePT = isCurve.pointT(p)\n      const dirFactor = sign(isCurve.tangentAt(isCurvePT).dot(pInside))\n      const eps = 1e-4\n      const iscd = isCurve\n        .at(isCurvePT)\n        .to(isCurve.at(isCurvePT + dir * dirFactor * eps))\n        .dot(normVector)\n      const ecd = testCurve\n        .at(curveT)\n        .to(testCurve.at(curveT + dir * eps))\n        .dot(normVector)\n      const diff = (iscd - ecd) * (faceInfo.reversed ? -1 : 1)\n      if (diff > 0 && (!advanced || diff < minValue)) {\n        advanced = true\n        minValue = diff\n        result = faceInfo.reversed ? OUTSIDE : INSIDE\n      }\n    } else if (!advanced) {\n      if (angle < minValue) {\n        minValue = angle\n        result = faceInfo.reversed ? OUTSIDE : INSIDE\n      }\n    }\n  }\n  return result\n}\n\nexport function splitsVolumeEnclosingCone(brep: BRep, p: V3, dir: V3) {\n  const testPlane = P3.forAnchorAndPlaneVectors(p, dir, dir.getPerpendicular())\n  const rays = []\n  for (let k = 0; k < brep.faces.length; k++) {\n    const planeFace = brep.faces[k] as PlaneFace\n    assertf(() => planeFace instanceof PlaneFace)\n    if (planeFace.getAllEdges().some((edge) => edge.a.like(p))) {\n      if (testPlane.isParallelToPlane(planeFace.surface.plane)) {\n        if (planeFace.pointsToInside(p, dir) != PointVsFace.OUTSIDE) {\n          return ALONG_EDGE_OR_PLANE\n        }\n      } else {\n        const isLine = L3.fromPlanes(testPlane, planeFace.surface.plane)\n        const ps = planeFace.edgeISPsWithPlane(isLine, testPlane)\n        let i = 0\n        while (i < ps.length) {\n          const a = ps[i++],\n            b = ps[i++]\n          const out = a.p.like(p)\n          if (out || b.p.like(p)) {\n            const dir2 = out ? isLine.dir1 : isLine.dir1.negated()\n            const angle =\n              (dir.angleRelativeNormal(dir2, testPlane.normal1) +\n                2 * Math.PI +\n                NLA_PRECISION / 2) %\n              (2 * Math.PI)\n            rays.push({ angle: angle, out: out })\n          }\n        }\n      }\n    }\n  }\n  rays.sort((a, b) => a.angle - b.angle)\n  //console.log(\"testPlane\"Plane.toSource(), \"rays\", rays.toSource())\n\n  if (eq0(rays[0].angle)) {\n    return ALONG_EDGE_OR_PLANE\n  } else {\n    return rays[0].out ? OUTSIDE : INSIDE\n  }\n}\n\nexport function splitsVolumeEnclosingCone2(\n  brep: BRep,\n  p: V3,\n  curve: Curve,\n  curveT: number,\n  fb: 1 | -1,\n) {\n  assert(curve.containsPoint(p))\n  const pFaces = brep.faces.filter((face) =>\n    face.getAllEdges().some((edge) => edge.a.like(p)),\n  )\n  for (let k = 0; k < pFaces.length; k++) {\n    const face = pFaces[k]\n    if (face.surface.containsCurve(curve)) {\n      //assert(false)\n      if (face.pointsToInside3(p, curve, curveT, fb) != PointVsFace.OUTSIDE) {\n        return ALONG_EDGE_OR_PLANE\n      }\n    }\n  }\n  const EPS = 1e-6\n  return brep.containsPoint(curve.at(curveT + fb * EPS), true)\n    ? INSIDE\n    : OUTSIDE\n}\n\nexport function fff(\n  info: {\n    face: Face\n    edge: Edge\n    normalAtCanonA: V3\n    inside: V3\n    reversed: boolean\n    angle: number\n  },\n  surface: Surface,\n): int {\n  const canonA = info.edge.reversed ? info.edge.b : info.edge.a\n  const surfaceNormalAtCanonA = surface.normalP(canonA)\n  const dot = snap0(info.inside.dot(surfaceNormalAtCanonA))\n  if (0 !== dot) {\n    return 0 < dot ? OUTSIDE : INSIDE\n  }\n  if (surface.isCoplanarTo(info.face.surface)) {\n    return 0 < info.normalAtCanonA.dot(surfaceNormalAtCanonA)\n      ? COPLANAR_SAME\n      : COPLANAR_OPPOSITE\n  }\n  throw new Error()\n}\n\nexport function triangulateVertices(\n  normal: V3,\n  vertices: V3[],\n  holeStarts: int[],\n) {\n  const absMaxDim = normal.maxAbsDim(),\n    factor = sign(normal.e(absMaxDim))\n  const contour = new Float64Array(vertices.length * 2)\n  let i = vertices.length\n  /*\n\t var [coord0, coord1] = [['y', 'z'], ['z', 'x'], ['x', 'y']][maxAbsDim]\n\t while (i--) {\n\t contour[i * 2    ] = vertices[i][coord0] * factor\n\t contour[i * 2 + 1] = vertices[i][coord1]\n\t }\n\t */\n\n  while (i--) {\n    // unroll disambiguation instead of accessing elements by string name ([coord0] etc)\n    // as it confuses google closure\n    switch (absMaxDim) {\n      case 0:\n        contour[i * 2] = vertices[i].y * factor\n        contour[i * 2 + 1] = vertices[i].z\n        break\n      case 1:\n        contour[i * 2] = vertices[i].z * factor\n        contour[i * 2 + 1] = vertices[i].x\n        break\n      case 2:\n        contour[i * 2] = vertices[i].x * factor\n        contour[i * 2 + 1] = vertices[i].y\n        break\n    }\n  }\n  return earcut(contour, holeStarts)\n}\n\n/**\n * Solves a quadratic system of equations of the form\n *      a * x + b * y = c\n *      x² + y² = 1\n * This can be understood as the intersection of the unit circle with a line.\n *      => y = (c - a x) / b\n *      => x² + (c - a x)² / b² = 1\n *      => x² b² + c² - 2 c a x + a² x² = b²\n *      => (a² + b²) x² - 2 a c x + (c² - b²) = 0\n *\n * a * b + (b -c) * (b + c)\n */\nexport function intersectionUnitCircleLine(\n  a: number,\n  b: number,\n  c: number,\n): { x1: number; y1: number; x2: number; y2: number } {\n  assertNumbers(a, b, c)\n  // TODO: disambiguate on a < b\n  const term = sqrt(a * a + b * b - c * c)\n  return {\n    x1: (a * c + b * term) / (a * a + b * b),\n    x2: (a * c - b * term) / (a * a + b * b),\n    y1: (b * c - a * term) / (a * a + b * b),\n    y2: (b * c + a * term) / (a * a + b * b),\n  }\n}\n\nexport function intersectionUnitCircleLine2(\n  a: number,\n  b: number,\n  c: number,\n): [number, number][] {\n  assertNumbers(a, b, c)\n  // TODO: disambiguate on a < b\n  // cf. pqFormula\n  const termSqr = snap0(a * a + b * b - c * c)\n  if (termSqr < 0) {\n    return []\n  } else if (termSqr == 0) {\n    return [[(a * c) / (a * a + b * b), (b * c) / (a * a + b * b)]]\n  } else {\n    const term = sqrt(termSqr)\n    return [\n      [\n        (a * c + b * term) / (a * a + b * b),\n        (b * c - a * term) / (a * a + b * b),\n      ],\n      [\n        (a * c - b * term) / (a * a + b * b),\n        (b * c + a * term) / (a * a + b * b),\n      ],\n    ]\n  }\n}\n\nexport function intersectionCircleLine(\n  a: number,\n  b: number,\n  c: number,\n  r: number,\n): { x1: number; x2: number; y1: number; y2: number } {\n  assertNumbers(a, b, c, r)\n  const term = sqrt(r * r * (a * a + b * b) - c * c)\n  return {\n    x1: (a * c + b * term) / (a * a + b * b),\n    x2: (a * c - b * term) / (a * a + b * b),\n    y1: (b * c - a * term) / (a * a + b * b),\n    y2: (b * c + a * term) / (a * a + b * b),\n  }\n}\n\n/**\n * Solves a quadratic system of equations of the form\n *      a * x + b * y = c\n *      x^2 - y^2 = 1\n * This can be understood as the intersection of the unit hyperbola with a line.\n *\n * @returns with x1 >= x2 and y1 <= y2\n * a * b + (b -c) * (b + c)\n */\nexport function intersectionUnitHyperbolaLine(\n  a: number,\n  b: number,\n  c: number,\n): { x1: number; y1: number; x2: number; y2: number } {\n  assertNumbers(a, b, c)\n  const aa = a * a,\n    bb = b * b,\n    cc = c * c\n  // TODO: disambiguate on a < b\n  //var xTerm = sqrt(4*cc*aa-4*(bb-aa)*(-cc-bb))\n  const xTerm = 2 * sqrt(bb * cc + bb * bb - aa * bb)\n  const yTerm = sqrt(4 * cc * bb - 4 * (bb - aa) * (cc - aa))\n  return {\n    x1: (-2 * a * c + xTerm) / 2 / (bb - aa),\n    x2: (-2 * a * c - xTerm) / 2 / (bb - aa),\n    y1: (2 * b * c - yTerm) / 2 / (bb - aa),\n    y2: (2 * b * c + yTerm) / 2 / (bb - aa),\n  }\n}\n\nexport function curvePointPP(\n  ps1: ParametricSurface,\n  ps2: ParametricSurface,\n  startPoint: V3,\n  dontCheck?: boolean,\n) {\n  const EPS = NLA_PRECISION / 4\n  //if (!dontCheck) {\n  //    const p = curvePointPP(ps1, ps2, startPoint, true).p\n  //    if (!ps1.containsPoint(p)) {\n  //        console.log(\"foo, startPoint was \" + startPoint.sce)\n  //        ps1.containsPoint(p)\n  //    }\n  //}\n  let Q = startPoint\n  let st1 = ps1.pointFoot(Q)\n  let st2 = ps2.pointFoot(Q)\n  let a, b, aNormal, bNormal, abNormalsCross\n  //console.log(\"curvePointPP, startPoint was \" + startPoint.sce)\n  //console.log(Q.sce+ ',')\n  let i = 16\n  do {\n    a = ps1.pUV(st1.x, st1.y)\n    b = ps2.pUV(st2.x, st2.y)\n    if (eq0(a.distanceTo(b), EPS)) break\n    // drPs.push({p:a,text:'a'+j+' '+i})\n    // drPs.push({p:b,text:'b'+j+' '+i})\n    aNormal = ps1.normalUV(st1.x, st1.y)\n    bNormal = ps2.normalUV(st2.x, st2.y)\n    // next Q is the intersection of the planes\n    // (x - a) * aNormal,\n    // (x - b) * bNormal and\n    // (x - Q) * (aNormal X bNormal)\n    abNormalsCross = aNormal.cross(bNormal)\n    // drVs.push({anchor: Q, dir: aNormal})\n    // drVs.push({anchor: Q, dir: bNormal})\n    Q = V3.add(\n      bNormal.cross(abNormalsCross).times(a.dot(aNormal)),\n      abNormalsCross.cross(aNormal).times(b.dot(bNormal)),\n      abNormalsCross.times(abNormalsCross.dot(Q)),\n    ).div(abNormalsCross.squared())\n    //console.log(Q.sce+ ',')\n    // feet of Q on ps1 and ps2 (closest points)\n    st1 = ps1.pointFoot(Q, st1.x, st1.y)\n    st2 = ps2.pointFoot(Q, st2.x, st2.y)\n  } while (--i)\n  //assert(ps1.containsPoint(Q), Q, ps1)\n  //assert(ps2.containsPoint(Q))\n  if (!eq0(a.distanceTo(b), EPS)) {\n    return undefined\n  }\n  return { p: Q, st1: st1, st2: st2 }\n}\n\n/**\n * Follow the intersection curve of two parametric surfaces starting from a given point.\n * @param {ParametricSurface} ps1\n * @param {ParametricSurface} ps2\n * @param {number} s1Step\n * @param {number} t1Step\n * @param {number} s2Step\n * @param {number} t2Step\n * @param {number} curveStepSize\n * @return {Curve[]}\n */\nexport function followAlgorithmPP(\n  ps1: ParametricSurface,\n  ps2: ParametricSurface,\n  startPoint: V3,\n  curveStepSize: number,\n  bounds1: (u: number, v: number) => boolean = uvInAABB2.bind(undefined, ps1),\n  bounds2: (u: number, v: number) => boolean = uvInAABB2.bind(undefined, ps2),\n): { points: V3[]; tangents: V3[]; st1s: V3[]; st2s: V3[] } {\n  const points: V3[] = []\n  const tangents: V3[] = []\n  const st1s: V3[] = []\n  const st2s: V3[] = []\n  let Q = startPoint\n  let st1 = ps1.uvP(Q)\n  let st2 = ps2.uvP(Q)\n  assert(ps1.pUV(st1.x, st1.y).like(Q))\n  assert(st1.like(ps1.pointFoot(Q, st1.x, st1.y)))\n  assert(ps2.pUV(st2.x, st2.y).like(Q))\n  assert(st2.like(ps2.pointFoot(Q, st2.x, st2.y)))\n  for (let i = 0; i < 1000; i++) {\n    ;({ p: Q, st1, st2 } = curvePointPP(ps1, ps2, Q)!)\n    assert(ps1.containsPoint(Q), Q, ps1)\n    assert(ps2.containsPoint(Q))\n    const aNormal = ps1.normalUV(st1.x, st1.y)\n    const bNormal = ps2.normalUV(st2.x, st2.y)\n    const tangent = aNormal.cross(bNormal).toLength(curveStepSize)\n    tangents.push(tangent)\n    points.push(Q)\n    st1s.push(st1)\n    st2s.push(st2)\n    if (i > 4) {\n      if (!bounds1(st1.x, st1.y) || !bounds2(st2.x, st2.y)) {\n        break\n      }\n    }\n    Q = Q.plus(tangent)\n  }\n  return { points, tangents, st1s, st2s }\n}\n\n/**\n * Iteratively calculate points on an implicit 2D curve.\n * @param ic The curve in question.\n * @param startP The point at which to start.\n * @param stepLength The step the algorithm takes. Will be the approximate distance between points.\n * @param bounds Bounds function.\n * @param endP End point. If undefined, algorithm will continue until out of bounds or back at start point.\n * @param startTangent TODO Ignore this.\n * @returns Calculated points and tangents. points[0] and tangents[0] will be startP and startTangent.\n */\nexport function followAlgorithm2d(\n  ic: MathFunctionR2R,\n  startP: V3,\n  stepLength: number = 0.5,\n  bounds: AABB2,\n  validUV: R2<boolean>,\n  endP?: V3,\n  startTangent?: V3,\n): {\n  points: V3[]\n  tangents: V3[]\n} {\n  assertNumbers(stepLength, ic(0, 0))\n  assertVectors(startP)\n  if (!startTangent) {\n    startTangent = new V3(\n      -ic.y(startP.x, startP.y),\n      ic.x(startP.x, startP.y),\n      0,\n    ).toLength(stepLength)\n  }\n  assertVectors(startTangent)\n  const points: V3[] = []\n  const tangents: V3[] = []\n  assert(\n    eq0(ic(startP.x, startP.y), 0.01),\n    \"isZero(implicitCurve(startPoint.x, startPoint.y))\",\n    ic(startP.x, startP.y),\n  )\n  let i = 0,\n    p = startP,\n    tangent = startTangent,\n    fullLoop = false\n  do {\n    points.push(p)\n    tangents.push(tangent)\n    const searchStart = p.plus(tangent)\n    assert(searchStart)\n    const newP = curvePointMF(ic, searchStart)\n    const dfpdx = ic.x(newP.x, newP.y),\n      dfpdy = ic.y(newP.x, newP.y)\n    const newTangent = new V3(-dfpdy, dfpdx, 0).toLength(stepLength)\n    //const reversedDir = p.minus(prevp).dot(tangent) < 0\n    assert(!p.equals(newP))\n    // check if we passed a singularity\n    if (tangent.dot(newTangent) < 0) {\n      const singularity = newtonIterate2d(ic.x, ic.y, p.x, p.y)!\n      if (\n        eq0(ic(singularity.x, singularity.y)) &&\n        singularity.distanceTo(p) < abs(stepLength)\n      ) {\n        // end on this point\n        points.push(singularity)\n        tangents.push(p.to(singularity))\n        break\n      } else {\n        throw new Error()\n      }\n    }\n    // check for endP\n    if (endP && p.equals(endP)) {\n      break\n    }\n    // check if loop\n    if (fullLoop) {\n      if (p.distanceTo(startP) > abs(stepLength)) {\n        points.pop()\n        tangents.pop()\n        assert(getLast(points).distanceTo(startP) <= abs(stepLength))\n        break\n      }\n    } else {\n      if (i > 4 && p.distanceTo(startP) <= abs(stepLength)) {\n        fullLoop = true\n      }\n    }\n    // check if out of bounds\n    if (i > 1 && !uvInAABB2(bounds, p.x, p.y)) {\n      const endP = figureOutBorderPoint(bounds, p, ic)\n      points.pop()\n      tangents.pop()\n      if (getLast(points).distanceTo(endP) < abs(stepLength) / 2) {\n        points.pop()\n        tangents.pop()\n      }\n      const endTangent = new V3(\n        -ic.y(endP.x, endP.y),\n        ic.x(endP.x, endP.y),\n        0,\n      ).toLength(stepLength)\n      points.push(endP)\n      tangents.push(endTangent)\n      break\n    }\n    if (i > 4 && !validUV(p.x, p.y)) {\n      break\n    }\n    assert(\n      eq0(ic(newP.x, newP.y), NLA_PRECISION * 2),\n      p,\n      newP,\n      searchStart,\n      ic(newP.x, newP.y),\n    )\n    tangent = newTangent\n    p = newP\n  } while (++i < 1000)\n  assert(i < 1000)\n\n  //assert(points.length > 6)\n  return { points, tangents }\n}\n\n/**\n * Given a point p just outside the bounds, figure out the nearby intersection of the bounds with the ic.\n * @param bounds\n * @param p\n * @param ic\n */\nfunction figureOutBorderPoint(bounds: AABB2, p: V3, ic: MathFunctionR2R): V3 {\n  if (p.x < bounds.uMin || bounds.uMax < p.x) {\n    const u = bounds.uMax < p.x ? bounds.uMax : bounds.uMin\n    const v = newtonIterateWithDerivative(\n      (t) => ic(u, t),\n      p.y,\n      4,\n      (t) => ic.y(u, t),\n    )\n    if (uvInAABB2(bounds, u, v)) {\n      return new V3(u, v, 0)\n    }\n  }\n  if (p.y < bounds.vMin || bounds.vMax < p.y) {\n    const v = bounds.vMax < p.y ? bounds.vMax : bounds.vMin\n    const u = newtonIterateWithDerivative(\n      (s) => ic(s, v),\n      p.x,\n      4,\n      (s) => ic.x(s, v),\n    )\n    assert(uvInAABB2(bounds, u, v))\n    return new V3(u, v, 0)\n  }\n  throw new Error(p + \" \" + bounds)\n}\n\nexport function followAlgorithm2dAdjustable(\n  ic: MathFunctionR2R,\n  start: V3,\n  stepLength: number = 0.5,\n  bounds: (u: number, v: number) => boolean,\n  endp: V3 = start,\n): { points: V3[]; tangents: V3[] } {\n  assertNumbers(stepLength, ic(0, 0))\n  assertVectors(start)\n  //assert (!startDir || startDir instanceof V3)\n  const points = []\n  const tangents = []\n  assert(\n    eq0(ic(start.x, start.y), 0.01),\n    \"isZero(implicitCurve(startPoint.x, startPoint.y))\",\n  )\n  let p = start,\n    prevp = p\n  let i = 0\n  do {\n    const dfpdx = ic.x(p.x, p.y),\n      dfpdy = ic.y(p.x, p.y)\n    const dfpdxx = ic.xx!(p.x, p.y),\n      dfpdyy = ic.yy!(p.x, p.y),\n      dfpdxy = ic.xy!(p.x, p.y)\n    const c2factor = abs(\n      (dfpdy ** 2 * dfpdxx - 2 * dfpdx * dfpdy * dfpdxy + dfpdx ** 2 * dfpdyy) /\n        (dfpdx ** 2 + dfpdy ** 2) ** 2,\n    )\n    const c2 = new V3(dfpdx, dfpdy, 0).times(c2factor)\n    const s = 1 / 16 / c2.length()\n    const tangent = new V3(-dfpdy, dfpdx, 0).unit()\n    const newPStart = p.plus(tangent.times(s).plus(c2.times(s ** 2 / 2)))\n    points.push(p)\n    tangents.push(tangent)\n    prevp = p\n    const newP = curvePointMF(ic, newPStart)\n    if (newP.equals(p)) {\n      assertNever()\n    }\n    console.log(p.to(newP).length())\n    p = newP\n\n    assert(eq0(ic(p.x, p.y)))\n  } while (\n    i++ < 1000 &&\n    (i < 4 || prevp.distanceTo(endp) > stepLength) &&\n    bounds(p.x, p.y)\n  )\n  assert(i != 1000)\n  //assert(bounds(p.x, p.y))\n  const end = i < 4 || prevp.distanceTo(endp) > stepLength ? p : endp\n  const endTangent = new V3(\n    -ic.y(end.x, end.y),\n    ic.x(end.x, end.y),\n    0,\n  ).toLength(stepLength)\n  points.push(end)\n  tangents.push(endTangent)\n\n  //assert(points.length > 6)\n  // TODO gleichmäßige Verteilung der Punkte\n  return { points, tangents }\n}\n\n// both curves must be in the same s-t coordinates for this to make sense\nexport function intersectionICurveICurve(\n  iCurve1: MathFunctionR2R,\n  startParams1: V3,\n  endParams1: V3,\n  startDir: V3,\n  stepLength: number,\n  iCurve2: MathFunctionR2R,\n) {\n  assertNumbers(stepLength, iCurve1(0, 0), iCurve2(0, 0))\n  assertVectors(startParams1, endParams1)\n  assert(!startDir || startDir instanceof V3)\n  const vertices = []\n  assert(eq0(iCurve1(startParams1.x, startParams1.y)))\n  stepLength = stepLength || 0.5\n  const eps = 1e-5\n  let p = startParams1,\n    prevp = p // startDir ? p.minus(startDir) : p\n  let i = 0\n  while (i++ < 1000 && (i < 4 || p.distanceTo(endParams1) > 1.1 * stepLength)) {\n    const fp = iCurve1(p.x, p.y)\n    const dfpdx = (iCurve1(p.x + eps, p.y) - fp) / eps,\n      dfpdy = (iCurve1(p.x, p.y + eps) - fp) / eps\n    let tangent = new V3(-dfpdy, dfpdx, 0).toLength(stepLength)\n    if (p.minus(prevp).dot(tangent) < 0) tangent = tangent.negated()\n    prevp = p\n    p = curvePointMF(iCurve1, p.plus(tangent))\n    vertices.push(p)\n  }\n  // TODO gleichmäßige Verteilung der Punkte\n  return vertices\n}\n\nexport function intersectionICurveICurve2(\n  iCurve1: R2_R,\n  loopPoints1: V3[],\n  iCurve2: R2_R,\n) {\n  let p = loopPoints1[0],\n    val = iCurve2(p.x, p.y),\n    lastVal\n  const iss = []\n  for (let i = 0; i < loopPoints1.length; i++) {\n    lastVal = val\n    p = loopPoints1[i]\n    val = iCurve2(p.x, p.y)\n    if (val * lastVal <= 0) {\n      // TODO < ?\n      iss.push(newtonIterate2d(iCurve1, iCurve2, p.x, p.y))\n    }\n  }\n  return iss\n}\n\n// export function intersectionPCurveISurface(\n// \tparametricCurve: Curve,\n// \tsearchStart: number,\n// \tsearchEnd: number,\n// \tsearchStep: number,\n// \timplicitSurface: ImplicitSurface,\n// ) {\n// \tassertNumbers(searchStart, searchEnd, searchStep)\n// \tconst iss = []\n// \tlet val = implicitSurface(parametricCurve(searchStart)),\n// \t\tlastVal\n// \tfor (let t = searchStart + searchStep; t <= searchEnd; t += searchStep) {\n// \t\tlastVal = val\n// \t\tval = implicitSurface(parametricCurve(t))\n// \t\tif (val * lastVal <= 0) {\n// \t\t\tiss.push(newtonIterate1d(t => implicitSurface(parametricCurve(t)), t))\n// \t\t}\n// \t}\n// \treturn iss\n// }\n\nexport function cassini(\n  a: number,\n  c: number,\n): (x: number, y: number) => number {\n  return (x, y) =>\n    (x * x + y * y) * (x * x + y * y) -\n    2 * c * c * (x * x - y * y) -\n    (a ** 4 - c ** 4)\n}\n\n/**\n * A function R² -> R with first and (optionally) second derivatives.\n */\nexport interface MathFunctionR2R {\n  readonly x: R2_R\n  readonly y: R2_R\n  readonly xx?: R2_R\n  readonly xy?: R2_R\n  readonly yy?: R2_R\n\n  (u: number, v: number): number\n}\n\nexport namespace MathFunctionR2R {\n  export function forNerdamer(\n    expression: nerdamer.ExpressionParam,\n    args: [string, string] = [\"x\", \"y\"],\n  ): MathFunctionR2R {\n    const ndf = nerdamer(expression)\n    const ndfs = nerdamer.diff(ndf, args[0])\n    const ndft = nerdamer.diff(ndf, args[1])\n    const f = ndf.buildFunction(args) as any\n    f.x = ndfs.buildFunction(args)\n    f.y = ndft.buildFunction(args)\n    f.xx = nerdamer.diff(ndfs, args[0]).buildFunction(args)\n    f.xy = nerdamer.diff(ndfs, args[1]).buildFunction(args)\n    f.yy = nerdamer.diff(ndft, args[1]).buildFunction(args)\n    return f\n  }\n\n  export function nerdamerToR2_R(\n    expression: nerdamer.Expression,\n    args: [string, string] = [\"x\", \"y\"],\n  ) {\n    return expression.buildFunction(args)\n  }\n\n  export function forFFxFy(f: R2_R, fx: R2_R, fy: R2_R): MathFunctionR2R {\n    ;(f as any).x = fx\n    ;(f as any).y = fy\n    return f as any\n  }\n}\nexport const cas2 = cassini(0.9, 1.02)\n\nexport function arrayLerp<T>(\n  lerp: (a: T, b: T, t: number) => T,\n  arr: T[],\n  t: number,\n): T {\n  if (0 === t % 1) return arr[t]\n  return lerp(arr[Math.floor(t)], arr[Math.ceil(t)], t % 1)\n}\n","import { assert } from \"ts3dutils\"\nimport { getGlobalId } from \".\"\n\nexport function doNotSerialize(target: any, key: PropertyKey) {\n  const map =\n    target.__SERIALIZATION_BLACKLIST || (target.__SERIALIZATION_BLACKLIST = {})\n  map[key] = \"no\"\n}\n\nexport class ClassSerializer {\n  CLASS_NAMES = new Map<any, string>()\n  NAME_CLASSES = new Map<string, any>()\n  private updater: ((v: any) => void) | undefined\n\n  constructor() {\n    this.addClass(\"Object\", Object)\n  }\n\n  addClass(name: string, clazz: any) {\n    if (this.NAME_CLASSES.has(name)) {\n      throw new Error(name)\n    }\n    this.NAME_CLASSES.set(name, clazz)\n    this.CLASS_NAMES.set(clazz, name)\n    return this\n  }\n\n  addNamespace(namespace: { [symbol: string]: any }, namespaceName?: string) {\n    Object.keys(namespace).forEach((symbol) => {\n      const o = namespace[symbol]\n      if (\"function\" == typeof o && o.name) {\n        this.addClass((namespaceName ? namespaceName + \".\" : \"\") + symbol, o)\n      }\n    })\n    return this\n  }\n\n  setUpdater(f: (v: any) => void) {\n    this.updater = f\n    return this\n  }\n\n  serialize(v: any) {\n    return JSON.stringify(this.serializeObj(v))\n  }\n\n  serializeObj(v: any) {\n    const path: string[] = []\n    const gatherList = (v: any) => {\n      //console.log(path.toString())\n      if (\n        undefined !== v &&\n        v.hasOwnProperty(\"constructor\") &&\n        this.CLASS_NAMES.has(v.constructor)\n      ) {\n        // do nothing, this is a class/function prototype\n      } else if (Array.isArray(v)) {\n        if (visited.has(v)) {\n          if (!listMap.has(v)) {\n            listMap.set(v, resultList.length)\n            resultList.push(v)\n          }\n        } else {\n          visited.add(v)\n          for (let i = 0; i < v.length; i++) {\n            path.push(\"\" + i)\n            gatherList(v[i])\n            path.pop()\n          }\n        }\n      } else if (undefined !== v && \"object\" == typeof v) {\n        if (visited.has(v)) {\n          if (!listMap.has(v)) {\n            listMap.set(v, resultList.length)\n            resultList.push(v)\n          }\n        } else {\n          assert(!v.__noxTarget || !visited.has(v.__noxTarget))\n          assert(!v.__noxProxy || !visited.has(v.__noxProxy))\n          visited.add(v)\n          if (!v.getConstructorParameters) {\n            for (const key of Object.keys(v).sort()) {\n              if (key == \"__noxProxy\" || key == \"__noxTarget\") continue\n              if (\n                !v.__SERIALIZATION_BLACKLIST ||\n                !v.__SERIALIZATION_BLACKLIST[key]\n              ) {\n                path.push(key)\n                gatherList(v[key])\n                path.pop()\n              }\n            }\n          }\n          path.push(\"proto\")\n          gatherList(Object.getPrototypeOf(v))\n          path.pop()\n        }\n      }\n    }\n\n    const transform = (v: any, allowLinks: boolean, first?: true): any => {\n      if (\n        \"string\" == typeof v ||\n        \"number\" == typeof v ||\n        \"boolean\" == typeof v ||\n        null === v\n      ) {\n        return v\n      }\n      if (\"undefined\" == typeof v) {\n        return { \"#REF\": -1 }\n      }\n      if (\n        v.hasOwnProperty(\"constructor\") &&\n        this.CLASS_NAMES.has(v.constructor)\n      ) {\n        return { \"#REF\": this.CLASS_NAMES.get(v.constructor) }\n      }\n      let index\n      if (allowLinks && !first && undefined !== (index = listMap.get(v))) {\n        return { \"#REF\": index }\n      }\n\n      if (Array.isArray(v)) {\n        return v.map((x) => transform(x, allowLinks))\n      }\n\n      //if (mobx && mobx.isObservableArray(v)) {\n      //\tconst result = {'#PROTO': 'ObservableArray'} as any\n      //\tv.forEach((val, i) => result[i] = transform(val))\n      //\treturn result\n      //}\n\n      if (\"object\" == typeof v) {\n        if (v.getConstructorParameters) {\n          return {\n            \"#CONSTRUCTOR\": this.CLASS_NAMES.get(v.constructor),\n            \"#ARGS\": transform(v.getConstructorParameters(), false),\n          }\n        }\n        const result: any = {}\n        if (Object.prototype !== Object.getPrototypeOf(v)) {\n          result[\"#PROTO\"] = transform(Object.getPrototypeOf(v), allowLinks)\n        }\n        for (const key of Object.keys(v)) {\n          if (key == \"__noxProxy\" || key == \"__noxTarget\") continue\n          if (\n            !v.__SERIALIZATION_BLACKLIST ||\n            !v.__SERIALIZATION_BLACKLIST[key]\n          ) {\n            result[key] = transform(v[key], allowLinks)\n          }\n        }\n        return result\n      }\n\n      throw new Error(\"?\" + typeof v + v.toString())\n    }\n\n    const visited = new Set()\n    const listMap = new Map()\n    let resultList: {}[] = []\n    listMap.set(v, 0)\n    resultList.push(v)\n    gatherList(v)\n\n    resultList = resultList.map((v) => transform(v, true, true))\n    return resultList\n  }\n\n  unserialize(string: string) {\n    let depth = 0\n    const fixObject = (v: any, onReady: (x: any) => void): void => {\n      depth++\n      if (depth > 100) throw new Error()\n      if (v && v.constructor === Array) {\n        onReady(v)\n        for (let i = 0; i < v.length; i++) {\n          fixObject(v[i], (x) => (v[i] = x))\n        }\n      } else if (\"object\" == typeof v && undefined != v) {\n        if (\"#CONSTRUCTOR\" in v) {\n          const protoName = v[\"#CONSTRUCTOR\"] as string\n          const proto = this.NAME_CLASSES.get(protoName as string)\n          assert(proto, protoName + \" Missing \")\n          let args: any[] = undefined!\n          fixObject(v[\"#ARGS\"], (x) => (args = x))\n          onReady(new proto(...args))\n        } else if (\"#REF\" in v) {\n          const ref = v[\"#REF\"]\n          if (\"string\" == typeof ref) {\n            onReady(this.NAME_CLASSES.get(ref).prototype)\n          } else if (\"number\" == typeof ref) {\n            if (-1 == ref) {\n              onReady(undefined)\n            } else if (fixedObjects[ref]) {\n              onReady(fixedObjects[ref])\n            } else {\n              fixObject(tree[ref], (x) => onReady((fixedObjects[ref] = x)))\n            }\n          }\n        } else {\n          let result: any\n          if (\"#PROTO\" in v) {\n            fixObject(v[\"#PROTO\"], (x) => {\n              result = Object.create(x)\n              onReady(result)\n            })\n          } else {\n            onReady((result = v))\n          }\n\n          const keys = Object.keys(v)\n          for (let i = 0; i < keys.length; i++) {\n            //if ('name' == keys[i]) console.log(result)\n            if (\"#PROTO\" != keys[i]) {\n              fixObject(v[keys[i]], (x) => (result[keys[i]] = x))\n              //Object.defineProperty(result, keys[i], {\n              //\tvalue: fixObjects(v[keys[i]]),\n              //\tenumerable: true,\n              //\twritable: true,\n              //\tconfigurable: true\n              //})\n            }\n          }\n          Object.defineProperty(result, \"loadID\", {\n            value: getGlobalId(),\n            enumerable: false,\n            writable: false,\n          })\n          this.updater && this.updater(result)\n        }\n      } else {\n        onReady(v)\n      }\n      depth--\n    }\n\n    // const linkReferences = (v: any) => {\n    // \tif (v && v.constructor === Array) {\n    // \t\tfor (let i = 0; i < v.length; i++) {\n    // \t\t\tv[i] = linkReferences(v[i])\n    // \t\t}\n    // \t\treturn v\n    // \t} else if ('object' == typeof v && undefined != v) {\n    // \t\tif ('#REF' in v) {\n    // \t\t\treturn tree[v['#REF']]\n    // \t\t} else {\n    // \t\t\tconst keys = Object.keys(v)\n    // \t\t\tfor (let i = 0; i < keys.length; i++) {\n    // \t\t\t\tv[keys[i]] = linkReferences(v[keys[i]])\n    // \t\t\t}\n    // \t\t\treturn v\n    // \t\t}\n    // \t} else {\n    // \t\treturn v\n    // \t}\n    // }\n\n    const tree = JSON.parse(string)\n    // console.log(tree)\n    const fixedObjects = new Array(tree.length)\n    fixObject({ \"#REF\": 0 }, () => {})\n    // console.log(tree)\n    // linkReferences(tree)\n    // console.log(tree)\n    return fixedObjects[0]\n  }\n}\n","import { ShaderType } from \"tsgl\"\n\nexport const fragmentShaderLighting: ShaderType<{\n  color: \"FLOAT_VEC3\"\n  camPos: \"FLOAT_VEC3\"\n}> = `\n\tprecision highp float;\n\tuniform vec4 color;\n\tuniform vec3 camPos;\n\tvarying vec3 normal;\n\tvarying vec4 vPosition;\n\tvoid main() {\n\t\tvec3 normal1 = normalize(normal);\n\t\tvec3 lightPos = vec3(1000, 2000, 4000);\n\t\tvec3 lightDir = normalize(vPosition.xyz - lightPos);\n        vec3 reflectionDirection = reflect(lightDir, normal1);\n        vec3 eyeDirection = normalize(camPos.xyz-vPosition.xyz);\n        float uMaterialShininess = 256.0;\n\t\tfloat specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), uMaterialShininess);\n\t\tfloat lightIntensity = 0.6 + 0.2 * max(0.0, -dot(lightDir, normal1)) + 0.2*specularLightWeighting;\n\t\tgl_FragColor = vec4(vec3(color) * lightIntensity, 1);\n\t}\n`\nexport const vertexShaderLighting: ShaderType<{ color: \"FLOAT_VEC4\" }> = `\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tuniform mat4 ts_ModelViewMatrix;\n\tattribute vec4 ts_Vertex;\n\tuniform mat3 ts_NormalMatrix;\n\tattribute vec3 ts_Normal;\n\tuniform vec4 color;\n\tvarying vec3 normal;\n\tvarying vec4 vPosition;\n\tvoid main() {\n\t\tgl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n        vPosition = ts_ModelViewMatrix * ts_Vertex;\n\t\tnormal = normalize(ts_NormalMatrix * ts_Normal);\n\t}\n`\nexport const vertexShaderWaves: ShaderType<{ color: \"FLOAT_VEC3\" }> = `\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tuniform mat4 ts_ModelViewMatrix;\n\tattribute vec4 ts_Vertex;\n\tuniform mat3 ts_NormalMatrix;\n\tattribute vec3 ts_Normal;\n\tuniform vec4 color;\n\tvarying vec3 normal;\n\tvarying vec4 vPosition;\n\tvoid main() {\n\t\tnormal = normalize(ts_NormalMatrix * ts_Normal);\n\t\tfloat offset = mod  (((ts_Vertex.x + ts_Vertex.y + ts_Vertex.z) * 31.0), 20.0) - 10.0;\n\t\tvec4 modPos = ts_Vertex + vec4(normal * offset, 0);\n\t\tgl_Position = ts_ModelViewProjectionMatrix * modPos;\n        vPosition = ts_ModelViewMatrix * modPos;\n\t}\n`\nexport const vertexShader: ShaderType<{}> = `\n\tvarying vec4 pos;\n\tvoid main() {\n\t\tpos = vec4(position,1.0);\n\t\tgl_Position = projectionMatrix *\n\t\t\tmodelViewMatrix *\n\t\t\tvec4(position,1.0);\n\t}\n`\nexport const fragmentShader: ShaderType<{ color: \"FLOAT_VEC3\" }> = `\n\tprecision highp float;\n\tuniform vec3 color;\n\tvarying vec4 pos;\n\tvoid main() {\n\t\tfloat distance = pos.x * pos.x + pos.y * pos.y;\n\t\tif (distance <= 0.98) {\n\t\t\tgl_FragColor = vec4(color, 1.0);\n\t\t} else if (distance <= 1.0) {\n\t\t\tgl_FragColor = vec4(color, 0.5);\n\t\t} else {\n\t\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n\t\t}\n\t}\n\t/*\n\t precision mediump float;\n\n\t varying vec4 pos;\n\n\n\t void main() {\n\t float inside = pos.r * pos.r + pos.g * pos.g;\n\t if (inside <= 1) {\n\t gl_FragColor = vec4(0.0, 1.0, 0.0, 1.0);\n\t } else {\n\t gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n\t }\n\t }\n\t */\n`\nexport const vertexShaderBasic: ShaderType<{}> = `\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tattribute vec4 ts_Vertex;\n\tvoid main() {\n\t\tgl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n\t}\n`\nexport const vertexShaderColor: ShaderType<{}> = `\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tattribute vec4 ts_Vertex;\n\tattribute vec4 ts_Color;\n\tvarying vec4 fragColor;\n\tvoid main() {\n\t\tgl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n\t\tfragColor = ts_Color;\n\t}\n`\nexport const vertexShaderArc: ShaderType<{\n  color: \"FLOAT_VEC4\"\n  step: \"FLOAT\"\n  offset: \"FLOAT\"\n  radius: \"FLOAT\"\n  width: \"FLOAT\"\n}> = `\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tattribute vec4 ts_Vertex;\n\tuniform float step, offset;\n\tuniform float radius, width;\n\tvoid main() {\n\t\tfloat r = radius;\n\t\tfloat t = offset + ts_Vertex.x * step;\n\t\tfloat pRadius = r - ts_Vertex.y * width;\n\t\tvec4 p = vec4(pRadius * cos(t), pRadius * sin(t), 0, 1);\n\t\tgl_Position = ts_ModelViewProjectionMatrix * p;\n}\n`\nexport const vertexShaderConic3d: ShaderType<{\n  startT: \"FLOAT\"\n  endT: \"FLOAT\"\n  scale: \"FLOAT\"\n  center: \"FLOAT_VEC3\"\n  f1: \"FLOAT_VEC3\"\n  f2: \"FLOAT_VEC3\"\n  mode: \"INT\"\n}> = `\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tattribute vec4 ts_Vertex;\n\tuniform float startT, endT, scale;\n\tuniform vec3 center, f1, f2;\n\tuniform int mode;\n\tfloat sinh(float x) { return (exp(x) - exp(-x)) / 2.0; }\n\tfloat cosh(float x) { return (exp(x) + exp(-x)) / 2.0; }\n\tvoid main() {\n\t\tfloat t = startT + ts_Vertex.x * (endT - startT);\n\n\t\tvec3 normal = normalize(cross(f1, f2));\n\n\t\tvec3 p, tangent;\n\t\tif (0 == mode) { // ellipse\n\t\t\tp = center + f1 * cos(t) + f2 * sin(t);\n\t\t\ttangent = f1 * -sin(t) + f2 * cos(t);\n\t\t}\n\t\tif (1 == mode) { // parabola\n\t\t\tp = center + f1 * t + f2 * t * t;\n\t\t\ttangent = f1 + 2.0 * f2 * t;\n\t\t}\n\t\tif (2 == mode) { // hyperbola\n\t\t\tp = center + f1 * cosh(t) + f2 * sinh(t);\n\t\t\ttangent = f1 * sinh(t) + f2 * cosh(t);\n\t\t}\n\t\tvec3 outDir = normalize(cross(normal, tangent));\n\t\tvec3 p2 = p + scale * (outDir * ts_Vertex.y + normal * ts_Vertex.z);\n\t\tgl_Position = ts_ModelViewProjectionMatrix * vec4(p2, 1);\n\t}\n`\n\nexport const vertexShaderNURBS: ShaderType<{}> = `#version 300 es\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tin vec4 ts_Vertex;\n\tuniform float startT, endT, scale;\n\tuniform vec4 points[32];\n\tuniform int pointCount, degree;\n\tuniform float knots[40];\n\tuniform vec3 normal;\n\tconst int MIN_DEGREE = 1;\n\tconst int MAX_DEGREE = 6;\n\t\n\tint tInterval(float t) {\n\t\tfor (int s = degree; s < 40 - 1 - degree; s++) {\n\t\t\tif (t >= knots[s] && t <= knots[s + 1]) {\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvec4 stepp(int k, int i, vec4 dkMinus1iMinus1, vec4 dkMinus1i) {\n\t    return dkMinus1i - dkMinus1iMinus1 * float(k) / (knots[i + degree - k] - knots[i - 1]);\n\t}\n\t\n\tvoid main() {\n\t\t// ts_Vertex.x is in [0, 1]\n\t\tfloat t = startT + ts_Vertex.x * (endT - startT);\n\t\t\n\t\tint s = tInterval(t);\n\t\t\n\t\tvec4 v[MAX_DEGREE + 1];\n\t\tfor (int i = 0; i < degree + 1; i++) {\n\t\t    v[i] = points[s - degree + i];\n\t\t}\n\t\t\n\t\tvec4 pTangent4, ddt4 = vec4(0, 0, 1, 0);\n\t\tfor (int level = 0; level < degree; level++) {\n\t\t\tif (level == degree - 2) {\n\t\t\t\t// see https://www.globalspec.com/reference/61012/203279/10-8-derivatives\n\t\t\t\tvec4 a = v[degree];\n\t\t\t\tvec4 b = v[degree - 1];\n\t\t\t\tvec4 c = v[degree - 2];\n\t\t\t\tddt4 = stepp(degree, s + 1, stepp(degree - 1, s + 1, a, b), stepp(degree - 1, s, b, c));\n\t\t\t}\n\t\t\tif (level == degree - 1) {\n\t\t\t\tvec4 a = v[degree];\n\t\t\t\tvec4 b = v[degree - 1];\n\t\t\t\tpTangent4 = (b - a) * (float(degree) / (knots[s] - knots[s + 1]));\n\t\t\t}\n\t\t\tfor (int i = degree; i > level; i--) {\n\t\t\t\tfloat alpha = (t - knots[i + s - degree]) / (knots[i + s - level] - knots[i + s - degree]);\n\n\t\t\t\t// interpolate each component\n                v[i] = (1.0 - alpha) * v[i - 1] + alpha * v[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\tvec4 p4 = v[degree];\n\t\t\n\t\tvec3 p = p4.xyz / p4.w;\n\t\tvec3 pTangent = ((pTangent4.xyz * p4.w) - (p4.xyz * pTangent4.w)) / (p4.w * p4.w);\n\t\tvec3 ddt = (\n\t\t    p4.xyz * (-p4.w * ddt4.w + 2.0 * pow(pTangent4.w, 2.0))\n\t\t    + pTangent4.xyz * (-2.0 * p4.w * pTangent4.w) \n\t\t    + ddt4.xyz * pow(p4.w, 2.0)\n        ) / pow(p4.w, 3.0);\n\t\t\n\t\tvec3 outDir = normalize(cross(ddt, pTangent));\n\t\tvec3 correctNormal = normalize(cross(pTangent, outDir));\n\t\tvec3 p2 = p + scale * (outDir * ts_Vertex.y + correctNormal * ts_Vertex.z);\n\t\tgl_Position = ts_ModelViewProjectionMatrix * vec4(p2, 1);\n    }\n`\n\nexport const vertexShaderBezier: ShaderType<{\n  width: \"FLOAT\"\n  startT: \"FLOAT\"\n  endT: \"FLOAT\"\n  p0: \"FLOAT_VEC3\"\n  p1: \"FLOAT_VEC3\"\n  p2: \"FLOAT_VEC3\"\n  p3: \"FLOAT_VEC3\"\n}> = `\n    // calculates a bezier curve using ts_Vertex.x as the (t) parameter of the curve\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tattribute vec4 ts_Vertex;\n\tuniform float width, startT, endT;\n\tuniform vec3 p0, p1, p2, p3;\n\tvoid main() {\n\t\t// ts_Vertex.x is in [0, 1]\n\t\tfloat t = startT + ts_Vertex.x * (endT - startT), s = 1.0 - t;\n\t\tfloat c0 = s * s * s, c1 = 3.0 * s * s * t, c2 = 3.0 * s * t * t, c3 = t * t * t;\n\t\tvec3 pPos = p0 * c0 + p1 * c1 + p2 * c2 + p3 * c3;\n\t\tfloat c01 = 3.0 * s * s, c12 = 6.0 * s * t, c23 = 3.0 * t * t;\n\t\tvec3 pTangent = (p1 - p0) * c01 + (p2 - p1) * c12 + (p3 - p2) * c23;\n\t\tvec3 pNormal = normalize(vec3(pTangent.y, -pTangent.x, 0));\n\t\tvec4 p = vec4(pPos - ts_Vertex.y * width * pNormal, 1);\n\t\tgl_Position = ts_ModelViewProjectionMatrix * p;\n\t}\n`\nexport const vertexShaderBezier3d: ShaderType<{\n  scale: \"FLOAT\"\n  startT: \"FLOAT\"\n  endT: \"FLOAT\"\n  p0: \"FLOAT_VEC3\"\n  p1: \"FLOAT_VEC3\"\n  p2: \"FLOAT_VEC3\"\n  p3: \"FLOAT_VEC3\"\n  normal: \"FLOAT_VEC3\"\n}> = `\n    precision highp float;\n    // calculates a bezier curve using ts_Vertex.x as the (t) parameter of the curve\n\tuniform float scale, startT, endT;\n\tuniform vec3 ps[4];\n\tuniform vec3 p0, p1, p2, p3, normal;\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tattribute vec4 ts_Vertex;\n\tvoid main() {\n\t\t// ts_Vertex.y is in [0, 1]\n\t\tvec3 p5 = ps[0];\n\t\tfloat t = startT * (1.0 - ts_Vertex.x) + endT * ts_Vertex.x, s = 1.0 - t;\n\t\tfloat c0 = s * s * s, \n\t\t      c1 = 3.0 * s * s * t, \n\t\t      c2 = 3.0 * s * t * t, c3 = t * t * t;\n\t\tvec3 p = (p0 * c0 + p1 * c1) + (p2 * c2 + p3 * c3);\n\t\tfloat c01 = 3.0 * s * s, \n\t\t      c12 = 6.0 * s * t, \n\t\t      c23 = 3.0 * t * t;\n\t\tvec3 pTangent = (p1 - p0) * c01 + (p2 - p1) * c12 + (p3 - p2) * c23;\n\t\tvec3 outDir = normalize(cross(normal, pTangent));\n\t\tvec3 correctNormal = normalize(cross(pTangent, outDir));\n\t\tvec3 p2 = p + scale * (outDir * ts_Vertex.y + correctNormal * ts_Vertex.z);\n\t\tgl_Position = ts_ModelViewProjectionMatrix * vec4(p2, 1);\n\t}\n`\nexport const vertexShaderGeneric: ShaderType<{ scale: \"FLOAT\" }> = `\n\tuniform float scale;\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tattribute vec4 ts_Vertex;\n\tuniform mat3 ts_NormalMatrix;\n\tattribute vec3 ts_Normal;\n\tvoid main() {\n\t\tvec3 normal = normalize(ts_NormalMatrix * ts_Normal);\n\t\tvec4 vertexPos = ts_Vertex + vec4(normal * scale, 0);\n\t\tgl_Position = ts_ModelViewProjectionMatrix * vertexPos;\n\t}\n`\nexport const vertexShaderRing: ShaderType<{\n  step: \"FLOAT\"\n  innerRadius: \"FLOAT\"\n  outerRadius: \"FLOAT\"\n}> = `\n\t#define M_PI 3.1415926535897932384626433832795\n\tuniform float step;\n\tuniform float innerRadius, outerRadius;\n\tattribute float index;\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tattribute vec4 ts_Vertex;\n\tvoid main() {\n\t\tgl_Position = ts_ModelViewProjectionMatrix * vec4(index, index, index, 1);\n\t\tfloat id = atan(ts_Vertex.x, ts_Vertex.y) / M_PI  * 32.0;\n\t\tfloat radius = mod(id, 2.0) < 1.0 ? outerRadius : innerRadius;\n\t\tgl_Position = ts_ModelViewProjectionMatrix * vec4(radius * cos(index * step), radius * sin(index * step), 0, 1);\n\t}\n`\nexport const fragmentShaderColor: ShaderType<{ color: \"FLOAT_VEC4\" }> = `\n\tprecision highp float;\n\tuniform vec4 color;\n\tvoid main() {\n\t\tgl_FragColor = color;\n\t}\n`\nexport const fragmentShaderColor3: ShaderType<{\n  color: \"FLOAT_VEC4\"\n}> = `#version 300 es\n\tprecision highp float;\n\tuniform vec4 color;\n\tout vec4 fragColor;\n\tvoid main() {\n\t\tfragColor = color;\n\t}\n`\nexport const fragmentShaderVaryingColor: ShaderType<{}> = `\n\tprecision highp float;\n\tvarying vec4 fragColor;\n\tvoid main() {\n\t\tgl_FragColor = fragColor;\n\t}\n`\nexport const fragmentShaderColorHighlight: ShaderType<{}> = `\n\tprecision highp float;\n\tuniform vec4 color;\n\tvoid main() {\n\t\tfloat diagonal = (gl_FragCoord.x + 2.0 * gl_FragCoord.y);\n\t\tif (mod(diagonal, 50.0) > 40.0) { // mod(diagonal, 2.0) > 1.0\n\t\t\tdiscard;\n\t\t\t//gl_FragColor = color + vec4(0.2,0.2,0.2,0);\n\t\t} else {\n\t\t\tgl_FragColor = color - vec4(0.2,0.2,0.2,0);\n\t\t}\n\t}\n`\nexport const vertexShaderTexture: ShaderType<{}> = `\n\tvarying vec2 texturePos;\n\tattribute vec4 ts_Vertex;\n\tuniform mat4 ts_ModelViewProjectionMatrix;\n\tvoid main() {\n\t\ttexturePos = ts_Vertex.xy;\n\t\tgl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\n\t}\n`\nexport const fragmentShaderTextureColor: ShaderType<{}> = `\n\tprecision highp float;\n\tvarying vec2 texturePos;\n\tuniform vec4 color;\n\tuniform sampler2D texture;\n\tvoid main() {\n\t\tgl_FragColor = texture2D(texture, texturePos) * color;\n\t}\n`\nexport const fragmentShaderTexture: ShaderType<{}> = `\n\tprecision highp float;\n\tvarying vec2 texturePos;\n\tuniform sampler2D texture;\n\tvoid main() {\n\t\tgl_FragColor = texture2D(texture, texturePos);\n\t}\n`\n","import * as chroma from \"chroma.ts\"\nimport {\n  addOwnProperties,\n  arrayFromFunction,\n  DEG,\n  int,\n  M4,\n  TAU,\n  V,\n  V3,\n  Vector,\n} from \"ts3dutils\"\nimport { GL_COLOR, GL_COLOR_BLACK, Mesh, Shader, TSGLContext } from \"tsgl\"\n\nimport {\n  B2T,\n  BezierCurve,\n  Curve,\n  CustomPlane,\n  Edge,\n  EllipseCurve,\n  HyperbolaCurve,\n  ImplicitCurve,\n  L3,\n  NURBS,\n  ParabolaCurve,\n  PICurve,\n  PPCurve,\n} from \".\"\nimport { ceil, floor, pow, sign } from \"./math\"\nimport * as shaders from \"./shaders\"\n\nexport function parseGetParams(str: string) {\n  const result: { [key: string]: string } = {}\n  str.split(\"&\").forEach(function (item) {\n    const splitIndex = item.indexOf(\"=\")\n    if (-1 == splitIndex) {\n      result[item] = item\n    } else {\n      result[item.substr(0, splitIndex)] = decodeURI(\n        item.substr(splitIndex + 1),\n      )\n    }\n  })\n  return result\n}\n\nexport const COLORS = {\n  RD_FILL: chroma.color(\"#9EDBF9\"),\n  RD_STROKE: chroma.color(\"#77B0E0\"),\n  TS_FILL: chroma.color(\"#D19FE3\"),\n  TS_STROKE: chroma.color(\"#A76BC2\"),\n  PP_FILL: chroma.color(\"#F3B6CF\"),\n  PP_STROKE: chroma.color(\"#EB81B4\"),\n}\n\nexport interface BREPGLContext extends TSGLContext {}\n\nexport class BREPGLContext {\n  shaders: SHADERS_TYPE\n\n  cachedMeshes: WeakMap<\n    any,\n    Mesh & { TRIANGLES: int[]; normals: V3[] }\n  > = new WeakMap()\n\n  constructor(gl: BREPGLContext) {\n    this.shaders = initShaders(gl)\n    initMeshes((this.meshes = {}), gl)\n  }\n\n  static create(gl: TSGLContext) {\n    addOwnProperties(gl, BREPGLContext.prototype)\n    addOwnProperties(gl, new BREPGLContext(gl as BREPGLContext))\n    return gl as BREPGLContext\n  }\n\n  drawPoint(p: V3, color: GL_COLOR = GL_COLOR_BLACK, size = 5) {\n    this.pushMatrix()\n    this.translate(p)\n    this.scale(size / 2, size / 2, size / 2)\n    this.shaders.singleColor\n      .uniforms({ color: color })\n      .draw(this.meshes.sphere1)\n    this.popMatrix()\n  }\n\n  drawEdge(edge: Edge, color: GL_COLOR = GL_COLOR_BLACK, width = 2) {\n    CURVE_PAINTERS[edge.curve.constructor.name](\n      this,\n      edge.curve,\n      color,\n      edge.minT,\n      edge.maxT,\n      width,\n    )\n  }\n\n  drawCurve(\n    curve: Curve,\n    color: GL_COLOR = GL_COLOR_BLACK,\n    width = 2,\n    tStart: number,\n    tEnd: number,\n  ) {\n    CURVE_PAINTERS[curve.constructor.name](\n      this,\n      curve,\n      color,\n      tStart,\n      tEnd,\n      width,\n    )\n  }\n\n  drawVector(\n    vector: V3,\n    anchor: V3,\n    color: GL_COLOR = GL_COLOR_BLACK,\n    size = 1,\n  ) {\n    if (vector.likeO()) return\n    this.pushMatrix()\n\n    const headLength = size * 4\n    if (headLength > vector.length()) return\n\n    const vT = vector.getPerpendicular().unit()\n    this.multMatrix(\n      M4.forSys(vector.unit(), vT, vector.cross(vT).unit(), anchor),\n    )\n    this.scale(vector.length() - headLength, size / 2, size / 2)\n\n    this.shaders.singleColor\n      .uniforms({\n        color: color,\n      })\n      .draw(this.meshes.vectorShaft)\n\n    this.scale(1 / (vector.length() - headLength), 1, 1)\n    this.translate(vector.length() - headLength, 0, 0)\n    this.scale(headLength / 2, 1, 1)\n\n    this.shaders.singleColor.draw(this.meshes.vectorHead)\n    this.popMatrix()\n  }\n\n  drawVectors(\n    drVs: { v: V3; anchor: V3; color?: GL_COLOR }[],\n    size: number | undefined = undefined,\n  ) {\n    this.drawVector(V3.X, V3.O, chroma.color(\"red\").gl(), size)\n    this.drawVector(V3.Y, V3.O, chroma.color(\"green\").gl(), size)\n    this.drawVector(V3.Z, V3.O, chroma.color(\"blue\").gl(), size)\n\n    drVs.forEach((vi) => this.drawVector(vi.v, vi.anchor, vi.color, size))\n  }\n\n  drawPlane(\n    customPlane: CustomPlane,\n    color: GL_COLOR,\n    dotted: boolean = false,\n  ) {\n    this.pushMatrix()\n    this.multMatrix(\n      M4.forSys(\n        customPlane.right,\n        customPlane.up,\n        customPlane.normal1,\n        customPlane.anchor,\n      ),\n    )\n    this.translate(customPlane.uMin, customPlane.vMin, 0)\n    this.scale(\n      customPlane.uMax - customPlane.uMin,\n      customPlane.vMax - customPlane.vMin,\n      1,\n    )\n\n    const mesh = dotted\n      ? this.meshes.xyDottedLinePlane\n      : this.meshes.xyLinePlane\n    this.shaders.singleColor.uniforms({ color: color }).draw(mesh, this.LINES)\n\n    this.popMatrix()\n  }\n\n  drawBox(m4: M4, color?: GL_COLOR) {\n    this.pushMatrix()\n    this.multMatrix(m4.m[15] >= 0 ? m4 : m4.mulScalar(-1))\n    if (color) {\n      this.shaders.singleColor\n        .uniforms({ color: color })\n        .draw(this.meshes.cube, this.LINES)\n    } else {\n      this.shaders.multiColor.draw(this.meshes.cube, this.LINES)\n    }\n    this.popMatrix()\n  }\n}\n\nfunction conicPainter(\n  mode: 0 | 1 | 2,\n  gl: BREPGLContext,\n  ellipse: EllipseCurve,\n  color: GL_COLOR,\n  startT: number,\n  endT: number,\n  width = 2,\n) {\n  gl.shaders.ellipse3d\n    .uniforms({\n      f1: ellipse.f1,\n      f2: ellipse.f2,\n      center: ellipse.center,\n      color: color,\n      startT: startT,\n      endT: endT,\n      scale: width,\n      mode: mode,\n    })\n    .draw(gl.meshes.pipe)\n}\n\nexport const CURVE_PAINTERS: {\n  [curveConstructorName: string]: (\n    gl: BREPGLContext,\n    curve: any,\n    color: GL_COLOR,\n    startT: number,\n    endT: number,\n    width: number,\n  ) => void\n} = {\n  [EllipseCurve.name]: conicPainter.bind(undefined, 0),\n  [ParabolaCurve.name]: conicPainter.bind(undefined, 1),\n  [HyperbolaCurve.name]: conicPainter.bind(undefined, 2),\n  [ImplicitCurve.name](\n    gl,\n    curve: ImplicitCurve,\n    color,\n    startT,\n    endT,\n    width = 2,\n  ) {\n    let mesh = gl.cachedMeshes.get(curve)\n    const RES = 4\n    if (!mesh) {\n      mesh = new Mesh()\n        .addIndexBuffer(\"TRIANGLES\")\n        .addVertexBuffer(\"normals\", \"ts_Normal\")\n      curve.addToMesh(mesh, RES)\n      mesh.compile()\n      gl.cachedMeshes.set(curve, mesh)\n    }\n    const startIndex = ceil(startT)\n    const endIndex = floor(endT)\n    if (startIndex <= endIndex) {\n      const indexFactor =\n        2 * // no of triangles per face\n        RES * // no of faces\n        3 // no of indexes per triangle\n      gl.shaders.generic3d\n        .uniforms({\n          color: color,\n          scale: width,\n        })\n        .draw(\n          mesh,\n          gl.TRIANGLES,\n          startIndex * indexFactor,\n          (floor(endT) - startIndex) * indexFactor,\n        )\n      if (startT % 1 !== 0) {\n        const p = curve.at(startT)\n        gl.pushMatrix()\n        const m = M4.forSys(\n          p.to(curve.points[startIndex]),\n          mesh.normals[startIndex * RES].toLength(width),\n          mesh.normals[startIndex * RES + 1].toLength(width),\n          p,\n        )\n        gl.multMatrix(m)\n        gl.shaders.singleColor\n          .uniforms({ color: color })\n          .draw(gl.meshes.pipeSegmentForICurve)\n        console.log(gl.meshes.pipeSegmentForICurve)\n        gl.popMatrix()\n      }\n      if (endT % 1 !== 0) {\n        const p = curve.at(endT)\n        gl.pushMatrix()\n        const m = M4.forSys(\n          curve.points[endIndex].to(p),\n          mesh.normals[endIndex * RES].toLength(width),\n          mesh.normals[endIndex * RES + 1].toLength(width),\n          curve.points[endIndex],\n        )\n        gl.multMatrix(m)\n        gl.shaders.singleColor\n          .uniforms({ color: color })\n          .draw(gl.meshes.pipeSegmentForICurve)\n        gl.popMatrix()\n      }\n    } else {\n      const p1 = curve.at(startT)\n      const p2 = curve.at(endT)\n      gl.pushMatrix()\n      const v0 = p1.to(p2),\n        v1 = v0.getPerpendicular().toLength(width),\n        v2 = v0.cross(v1).toLength(width)\n      const m = M4.forSys(v0, v1, v2, p1)\n      gl.multMatrix(m)\n      gl.shaders.singleColor\n        .uniforms({ color: color })\n        .draw(gl.meshes.pipeSegmentForICurve)\n      gl.popMatrix()\n    }\n  },\n  [BezierCurve.name](\n    gl,\n    curve: BezierCurve,\n    color,\n    startT,\n    endT,\n    width = 2,\n    normal = V3.Z,\n  ) {\n    gl.shaders.bezier3d\n      .uniforms({\n        p0: curve.p0,\n        p1: curve.p1,\n        p2: curve.p2,\n        p3: curve.p3,\n        color: color,\n        startT: startT,\n        endT: endT,\n        scale: width,\n        normal: normal,\n      })\n      .draw(gl.meshes.pipe)\n  },\n  [NURBS.name](\n    gl,\n    curve: NURBS,\n    color,\n    startT,\n    endT,\n    width = 2,\n    normal = V3.Z,\n  ) {\n    gl.shaders.nurbs\n      .uniforms({\n        \"points[0]\": Vector.pack(curve.points),\n        degree: curve.degree,\n        \"knots[0]\": curve.knots,\n        color: color,\n        startT: startT,\n        endT: endT,\n        scale: width,\n        normal: normal,\n      })\n      .draw(gl.meshes.pipe)\n  },\n  [L3.name](gl, curve: L3, color, startT, endT, width = 2, normal = V3.Z) {\n    gl.pushMatrix()\n    const a = curve.at(startT),\n      b = curve.at(endT)\n    const ab = b.minus(a),\n      abT = ab.getPerpendicular().unit()\n    const m = M4.forSys(ab, abT, ab.cross(abT).unit(), a)\n    gl.multMatrix(m)\n    gl.scale(1, width, width)\n    gl.shaders.singleColor\n      .uniforms({\n        color: color, // TODO: error checking\n      })\n      .draw(gl.meshes.pipe)\n\n    gl.popMatrix()\n  },\n}\nCURVE_PAINTERS[PICurve.name] = CURVE_PAINTERS[ImplicitCurve.name]\nCURVE_PAINTERS[PPCurve.name] = CURVE_PAINTERS[ImplicitCurve.name]\n\nexport function initMeshes(\n  _meshes: { [name: string]: Mesh },\n  _gl: BREPGLContext,\n) {\n  _gl.makeCurrent()\n  _meshes.cube = (() => {\n    const cube = B2T.box().toMesh().addVertexBuffer(\"colors\", \"ts_Color\")\n    cube.colors = cube.vertices.map((p) =>\n      [p.x, p.y, p.z, 1].map((x) => x * 0.9),\n    )\n    cube.compile()\n    return cube\n  })()\n  _meshes.sphere1 = Mesh.sphere(2)\n  _meshes.segment = Mesh.plane({ startY: -0.5, height: 1, detailX: 128 })\n  _meshes.text = Mesh.plane()\n  _meshes.vector = Mesh.rotation(\n    [V3.O, V(0, 0.05, 0), V(0.8, 0.05), V(0.8, 0.1), V(1, 0)],\n    L3.X,\n    TAU,\n    16,\n    true,\n  )\n  _meshes.vectorShaft = Mesh.rotation([V3.O, V3.Y, V3.XY], L3.X, TAU, 8, true)\n  _meshes.vectorHead = Mesh.rotation(\n    [V3.Y, V(0, 2, 0), V(2, 0, 0)],\n    L3.X,\n    TAU,\n    8,\n    true,\n  )\n  _meshes.pipe = Mesh.rotation(\n    arrayFromFunction(512, (i, l) => new V3(i / (l - 1), -0.5, 0)),\n    L3.X,\n    TAU,\n    8,\n    true,\n  )\n  _meshes.xyLinePlane = Mesh.plane()\n  _meshes.xyDottedLinePlane = makeDottedLinePlane()\n  _meshes.pipeSegmentForICurve = Mesh.offsetVertices(\n    M4.rotateY(90 * DEG).transformedPoints(\n      arrayFromFunction(4, (i) => V3.polar(1, (TAU * i) / 4)),\n    ),\n    V3.X,\n    true,\n  )\n}\n\nexport function initShaders(_gl: TSGLContext) {\n  _gl.makeCurrent()\n  return {\n    singleColor: Shader.create(\n      shaders.vertexShaderBasic,\n      shaders.fragmentShaderColor,\n    ),\n    multiColor: Shader.create(\n      shaders.vertexShaderColor,\n      shaders.fragmentShaderVaryingColor,\n    ),\n    singleColorHighlight: Shader.create(\n      shaders.vertexShaderBasic,\n      shaders.fragmentShaderColorHighlight,\n    ),\n    textureColor: Shader.create(\n      shaders.vertexShaderTexture,\n      shaders.fragmentShaderTextureColor,\n    ),\n    arc: Shader.create(shaders.vertexShaderRing, shaders.fragmentShaderColor),\n    arc2: Shader.create(shaders.vertexShaderArc, shaders.fragmentShaderColor),\n    ellipse3d: Shader.create(\n      shaders.vertexShaderConic3d,\n      shaders.fragmentShaderColor,\n    ),\n    generic3d: Shader.create(\n      shaders.vertexShaderGeneric,\n      shaders.fragmentShaderColor,\n    ),\n    bezier3d: Shader.create(\n      shaders.vertexShaderBezier3d,\n      shaders.fragmentShaderColor,\n    ),\n    nurbs: Shader.create(\n      shaders.vertexShaderNURBS,\n      shaders.fragmentShaderColor3,\n    ),\n    bezier: Shader.create(\n      shaders.vertexShaderBezier,\n      shaders.fragmentShaderColor,\n    ),\n    lighting: Shader.create(\n      shaders.vertexShaderLighting,\n      shaders.fragmentShaderLighting,\n    ),\n    waves: Shader.create(\n      shaders.vertexShaderWaves,\n      shaders.fragmentShaderLighting,\n    ),\n  }\n}\n\nfunction makeDottedLinePlane(count: int = 128) {\n  const mesh = new Mesh().addIndexBuffer(\"LINES\")\n  const OXvertices = arrayFromFunction(count, (i) => new V3(i / count, 0, 0))\n  mesh.vertices.push(...OXvertices)\n  mesh.vertices.push(\n    ...M4.forSys(V3.Y, V3.O, V3.O, V3.X).transformedPoints(OXvertices),\n  )\n  mesh.vertices.push(\n    ...M4.forSys(V3.X.negated(), V3.O, V3.O, new V3(1, 1, 0)).transformedPoints(\n      OXvertices,\n    ),\n  )\n  mesh.vertices.push(\n    ...M4.forSys(V3.Y.negated(), V3.O, V3.O, V3.Y).transformedPoints(\n      OXvertices,\n    ),\n  )\n  mesh.LINES = arrayFromFunction(count * 4, (i) => i - (i >= count * 2 ? 1 : 0))\n  mesh.compile()\n  return mesh\n}\n\nexport type Eye = { pos: V3; focus: V3; up: V3; zoomFactor: number }\n\nexport function initNavigationEvents(\n  _gl: BREPGLContext,\n  eye: Eye,\n  paintScreen: () => void,\n) {\n  const canvas = _gl.canvas\n  let lastPos: V3 = V3.O\n  //_gl.onmousedown.push((e) => {\n  //\te.preventDefault()\n  //\te.stopPropagation()\n  //})\n  //_gl.onmouseup.push((e) => {\n  //\te.preventDefault()\n  //\te.stopPropagation()\n  //})\n  canvas.addEventListener(\"mousemove\", (e: MouseEvent) => {\n    const pagePos = V(e.pageX, e.pageY)\n    const delta = lastPos.to(pagePos)\n    //noinspection JSBitwiseOperatorUsage\n    if (e.buttons & 4) {\n      // pan\n      const moveCamera = V(\n        (-delta.x * 2) / _gl.canvas.width,\n        (delta.y * 2) / _gl.canvas.height,\n      )\n      const inverseProjectionMatrix = _gl.projectionMatrix.inversed()\n      const worldMoveCamera = inverseProjectionMatrix.transformVector(\n        moveCamera,\n      )\n      eye.pos = eye.pos.plus(worldMoveCamera)\n      eye.focus = eye.focus.plus(worldMoveCamera)\n      setupCamera(eye, _gl)\n      paintScreen()\n    }\n    // scene rotation\n    //noinspection JSBitwiseOperatorUsage\n    if (e.buttons & 2) {\n      const rotateLR = (-delta.x / 6.0) * DEG\n      const rotateUD = (-delta.y / 6.0) * DEG\n      // rotate\n      let matrix = M4.rotateLine(eye.focus, eye.up, rotateLR)\n      //let horizontalRotationAxis = focus.minus(pos).cross(up)\n      const horizontalRotationAxis = eye.up.cross(eye.pos.minus(eye.focus))\n      matrix = matrix.times(\n        M4.rotateLine(eye.focus, horizontalRotationAxis, rotateUD),\n      )\n      eye.pos = matrix.transformPoint(eye.pos)\n      eye.up = matrix.transformVector(eye.up)\n\n      setupCamera(eye, _gl)\n      paintScreen()\n    }\n    lastPos = pagePos\n  })\n  canvas.addEventListener(\"wheel\", (e: WheelEvent) => {\n    // zoom\n    const wheelY = -sign(e.deltaY) * 2\n    // console.log(e.deltaY, e.deltaX)\n    eye.zoomFactor *= pow(0.9, -wheelY)\n    const mouseCoordsOnCanvas = getPosOnTarget(e)\n    const mousePosFrustrum = V(\n      (mouseCoordsOnCanvas.x * 2) / _gl.canvas.offsetWidth - 1,\n      (-mouseCoordsOnCanvas.y * 2) / _gl.canvas.offsetHeight + 1,\n      0,\n    )\n    const moveCamera = mousePosFrustrum.times(1 - 1 / pow(0.9, -wheelY))\n    const inverseProjectionMatrix = _gl.projectionMatrix.inversed()\n    const worldMoveCamera = inverseProjectionMatrix.transformVector(moveCamera)\n    //console.log(\"moveCamera\", moveCamera)\n    //console.log(\"worldMoveCamera\", worldMoveCamera)\n    eye.pos = eye.pos.plus(worldMoveCamera)\n    eye.focus = eye.focus.plus(worldMoveCamera)\n\n    // tilt\n    const mousePosWC = inverseProjectionMatrix.transformPoint(mousePosFrustrum)\n    const tiltMatrix = M4.rotateLine(\n      mousePosWC,\n      eye.pos.to(eye.focus),\n      -sign(e.deltaX) * 10 * DEG,\n    )\n    eye.up = tiltMatrix.transformVector(eye.up)\n    eye.pos = tiltMatrix.transformPoint(eye.pos)\n    eye.focus = tiltMatrix.transformPoint(eye.focus)\n    setupCamera(eye, _gl)\n    paintScreen()\n    e.preventDefault()\n  })\n}\n\n/**\n * Transforms position on the screen into a line in world coordinates.\n */\nexport function getMouseLine(\n  pos: { x: number; y: number },\n  _gl: TSGLContext,\n): L3 {\n  const ndc1 = V(\n    (pos.x * 2) / _gl.canvas.width - 1,\n    (-pos.y * 2) / _gl.canvas.height + 1,\n    0,\n  )\n  const ndc2 = V(\n    (pos.x * 2) / _gl.canvas.width - 1,\n    (-pos.y * 2) / _gl.canvas.height + 1,\n    1,\n  )\n  //console.log(ndc)\n  const inverseProjectionMatrix = _gl.projectionMatrix.inversed()\n  const s = inverseProjectionMatrix.transformPoint(ndc1)\n  const dir = inverseProjectionMatrix.transformPoint(ndc2).minus(s)\n  return L3.anchorDirection(s, dir)\n}\n\nexport function getPosOnTarget(e: MouseEvent) {\n  const target = e.target as HTMLElement\n  const targetRect = target.getBoundingClientRect()\n  const mouseCoordsOnElement = {\n    x: e.clientX - targetRect.left,\n    y: e.clientY - targetRect.top,\n  }\n  return mouseCoordsOnElement\n}\n\nexport function setupCamera(\n  _eye: Eye,\n  _gl: TSGLContext,\n  suppressEvents = false,\n) {\n  const { pos, focus, up, zoomFactor } = _eye\n  //console.log(\"pos\", pos.$, \"focus\", focus.$, \"up\", up.$)\n  _gl.matrixMode(_gl.PROJECTION)\n  _gl.loadIdentity()\n  //_gl.perspective(70, _gl.canvas.width / _gl.canvas.height, 0.1, 1000);\n  const lr = _gl.canvas.width / 2 / zoomFactor\n  const bt = _gl.canvas.height / 2 / zoomFactor\n  _gl.ortho(-lr, lr, -bt, bt, -1e4, 1e4)\n  _gl.lookAt(pos, focus, up)\n  _gl.matrixMode(_gl.MODELVIEW)\n  !suppressEvents && cameraChangeListeners.forEach((l) => l(_eye))\n}\n\nexport const cameraChangeListeners: ((eye: Eye) => void)[] = []\n\nexport const SHADERS_TYPE_VAR = (false as true) && initShaders(0 as any)\nexport type SHADERS_TYPE = typeof SHADERS_TYPE_VAR\n// let shaders: typeof SHADERS_TYPE_VAR\n// declare let a: BRep, b: BRep, c: BRep, d: BRep, edges: Edge[] = [], hovering: any,\n// \t, normallines: boolean = false, b2s: BRep[] = []\n// const\n","import { assertf, eq, floatHashCode, M4, raddd, V3 } from \"ts3dutils\"\n\nimport { acos, cos, sin } from \"./math\"\n\nexport class Quaternion {\n  private constructor(\n    public readonly s: number,\n    public readonly x: number,\n    public readonly y: number,\n    public readonly z: number,\n  ) {}\n\n  static O = new Quaternion(1, 0, 0, 0)\n\n  static axis(axis: V3, rotation: raddd) {\n    assertf(() => axis.hasLength(1))\n    return new Quaternion(\n      cos(rotation / 2),\n      sin(rotation / 2) * axis.x,\n      sin(rotation / 2) * axis.y,\n      sin(rotation / 2) * axis.z,\n    )\n  }\n\n  static of(s: number, x: number, y: number, z: number) {\n    return new Quaternion(s, x, y, z)\n  }\n\n  public plus(q: Quaternion) {\n    return new Quaternion(\n      this.s + q.s,\n      this.x + q.x,\n      this.y + q.y,\n      this.z + q.z,\n    )\n  }\n\n  public times(q: Quaternion | number) {\n    return \"number\" == typeof q\n      ? new Quaternion(q * this.s, q * this.x, q * this.y, q * this.z)\n      : new Quaternion(\n          this.s * q.s - (this.x * q.x + this.y * q.y + this.z * q.z),\n          this.y * q.z - this.z * q.y + this.s * q.x + q.s * this.x,\n          this.z * q.x - this.x * q.z + this.s * q.y + q.s * this.y,\n          this.x * q.y - this.y * q.x + this.s * q.z + q.s * this.z,\n        )\n  }\n\n  public conjugated() {\n    return new Quaternion(this.s, -this.x, -this.y, -this.z)\n  }\n\n  public length() {\n    return Math.hypot(this.s, this.x, this.y, this.z)\n  }\n\n  public norm() {\n    return this.s ** 2 + this.x ** 2 + (this.y ** 2 + this.z ** 2)\n  }\n\n  public unit() {\n    const l = this.length()\n    return new Quaternion(this.s / l, this.x / l, this.y / l, this.z / l)\n  }\n\n  public inverse() {\n    return this.conjugated().times(1 / this.norm())\n  }\n\n  public toM4() {\n    assertf(() => eq(1, this.length()))\n    const { s, x, y, z } = this\n    // prettier-ignore\n    return new M4([\n      1 - 2 * (y * y + z * z), 2 * (x * y - z * s), 2 * (x * z + y * s), 0,\n      2 * (x * y + z * s), 1 - 2 * (x * x + z * z), 2 * (y * z - x * s), 0,\n      2 * (x * z - y * s), 2 * (y * z + x * s), 1 - 2 * (x * x + y * y), 0,\n      0, 0, 0, 1,\n    ])\n  }\n\n  static fromRotation(m4: M4) {\n    const sqrtTracePlus1 = Math.sqrt(m4.trace() + 1)\n    const f = 1 / (2 * sqrtTracePlus1)\n    return new Quaternion(\n      sqrtTracePlus1 / 2,\n      f * (m4.e(2, 1) - m4.e(1, 2)),\n      f * (m4.e(0, 2) - m4.e(2, 0)),\n      f * (m4.e(1, 0) - m4.e(0, 1)),\n    )\n  }\n\n  public rotatePoint(p: V3) {\n    const v = this.times(Quaternion.of(1, p.x, p.y, p.z)).times(\n      this.conjugated(),\n    )\n    return new V3(v.x, v.y, v.z)\n  }\n\n  public like(q: Quaternion, precision?: number) {\n    return (\n      eq(this.s, q.s, precision) &&\n      eq(this.x, q.x, precision) &&\n      eq(this.y, q.y, precision) &&\n      eq(this.z, q.z, precision)\n    )\n  }\n\n  public equals(q: any) {\n    return (\n      this == q ||\n      (q instanceof Quaternion &&\n        this.s == q.s &&\n        this.x == q.x &&\n        this.y == q.y &&\n        this.z == q.z)\n    )\n  }\n\n  public hashCode() {\n    let hashCode = 0\n    hashCode = (hashCode * 31 + floatHashCode(this.s)) | 0\n    hashCode = (hashCode * 31 + floatHashCode(this.x)) | 0\n    hashCode = (hashCode * 31 + floatHashCode(this.y)) | 0\n    hashCode = (hashCode * 31 + floatHashCode(this.z)) | 0\n    return hashCode\n  }\n\n  public slerp(b: Quaternion, f: number) {\n    assertf(() => eq(1, this.length()))\n    assertf(() => eq(1, b.length()))\n    const a = this\n    let dot = a.s * b.s + a.x * b.x + a.y * b.y + a.z * b.z\n\n    if (dot < 0) {\n      dot = -dot\n      b = b.times(-1)\n      console.log(\"dot < 0\")\n    }\n\n    const DOT_THRESHOLD = 0.9995\n    if (dot > DOT_THRESHOLD) {\n      // If the inputs are too close for comfort, linearly interpolate\n      // and normalize the result.\n      return a\n        .times(1 - f)\n        .plus(b.times(f))\n        .unit()\n    }\n\n    // Since dot is in range [0, DOT_THRESHOLD], acos is safe\n    const theta0 = acos(dot) // theta_0 = angle between input vectors\n    const theta = theta0 * f // theta = angle between v0 and result\n\n    const s0 = cos(theta) - (dot * sin(theta)) / sin(theta0) // == sin(theta_0 - theta) / sin(theta_0)\n    const s1 = sin(theta) / sin(theta0)\n    console.log(s0, s1, a.times(s0), b.times(s1))\n    return a.times(s0).plus(b.times(s1))\n  }\n\n  toArray(): [number, number, number, number] {\n    return [this.s, this.x, this.y, this.z]\n  }\n}\n","import { V3 } from \"ts3dutils\"\nimport { Surface } from \"..\"\n\nexport abstract class ImplicitSurface extends Surface {\n  static is(obj: any): obj is ImplicitSurface {\n    return obj.implicitFunction && obj.didp\n  }\n\n  abstract implicitFunction(): (pWC: V3) => number\n\n  /**\n   * partial derivatives of this.implicitFunction in point pWC\n   * @param pWC\n   * @return\n   */\n  abstract didp(pWC: V3): V3\n}\n","import * as chroma from \"chroma.ts\"\nimport debounce from \"debounce\"\nimport { assert, DEG, emod, int, M4, round10, V, V3 } from \"ts3dutils\"\nimport { GL_COLOR, GL_COLOR_BLACK, Mesh, TSGLContext } from \"tsgl\"\n\nimport {\n  BRep,\n  BREPGLContext,\n  cameraChangeListeners,\n  COLORS,\n  CustomPlane,\n  Edge,\n  Face,\n  FaceMesh,\n  getMouseLine,\n  ImplicitCurve,\n  initNavigationEvents,\n  L3,\n  P3,\n  PICurve,\n  setupCamera,\n} from \".\"\n\nimport * as ts3dutils from \"ts3dutils\"\nimport * as tsgl from \"tsgl\"\nimport * as brepts from \".\"\n\nconst eye = { pos: V(1000, 1000, 1000), focus: V3.O, up: V3.Z, zoomFactor: 1 }\nconst bReps: BRep[] = []\nconst edgeViewerColors = [\"darkorange\", \"darkgreen\", \"cyan\"].map((c) =>\n  chroma.css(c).gl(),\n)\nlet bRepMeshes: (Mesh & {\n  faceIndexes: Map<Face, { start: int; count: int }>\n  TRIANGLES: int[]\n  normals: V3[]\n})[] = []\n//bMesh: Mesh & {faceIndexes?: Map<Face, {start: int, count: int}>},\n//cMesh: Mesh & {faceIndexes?: Map<Face, {start: int, count: int}>},\nlet edgesMesh: Mesh & {\n  faceIndexes?: Map<Face, { start: int; count: int }>\n  TRIANGLES: int[]\n  normals: V3[]\n  curve1: V3[]\n  curve1colors: GL_COLOR[]\n}\nlet faceMesh: FaceMesh & { tangents: V3[] }\nlet meshes: (Mesh & { TRIANGLES: int[]; normals: V3[] })[] = []\nlet hovering: {}\nconst edgeDebugPoints: V3[] = []\nconst edgeDebugLines: V3[] = []\n\nconst addMissing = (to: any, from: any) =>\n  Object.keys(from).forEach(\n    (key) => \"Buffer\" != key && !to[key] && (to[key] = from[key]),\n  )\n\n// tslint:disable-next-line:class-name\nexport class RenderObjects {\n  a: BRep | undefined = undefined\n  b: BRep | undefined = undefined\n  c: BRep | undefined = undefined\n  d: BRep | undefined = undefined\n  face: Face[] = []\n  edges: Edge[] = []\n  wireframe: boolean = false\n  normallines: boolean = false\n  i: any = undefined\n  hjk: any = undefined\n  drPs: (V3 | { p: V3; info?: string; color?: string })[] = []\n  drVs: { v: V3; anchor: V3; color?: GL_COLOR }[] = []\n  drLines: V3[] = []\n  mesh: (Mesh & { TRIANGLES: int[]; normals: V3[] })[] = []\n  boxes: M4[] = []\n  paintMeshNormals = false\n  paintWireframe = false\n  paintCurveDebug = false\n  planes: CustomPlane[] = []\n}\n\nconst renderObjectKeys = Object.keys(\n  new RenderObjects(),\n) as (keyof RenderObjects)[]\n\ndeclare function INIT_HTML(): void\n\naddMissing(window, ts3dutils)\naddMissing(window, tsgl)\naddMissing(window, brepts)\naddMissing(window, new RenderObjects())\ndeclare global {\n  interface Window extends RenderObjects {}\n}\nconst arrayLiteralType = <T extends string>(x: T[]): T[] => x\nconst g = window\nObject.assign\n\nfunction objectAssignConcatArray<T, U>(a: T, b: U): T & U {\n  for (const key of Object.keys(b)) {\n    if (Array.isArray((g as any)[key]) && Array.isArray((b as any)[key])) {\n      ;(a as any)[key].push(...(b as any)[key])\n    } else if (undefined !== (b as any)[key]) {\n      ;(a as any)[key] = (b as any)[key]\n    }\n  }\n  return a as any\n}\n\nfunction initBRep() {\n  eye.pos = V(1, 2, 101)\n  eye.focus = V(0, 1, 0)\n  eye.up = V(0, 1, 0)\n  eye.zoomFactor = 8\n\n  const htmlContext = INIT_HTML()\n\n  const hash =\n    window.location.search.substr(1) || window.location.hash.substr(1) || \"\"\n  const command = decodeURIComponent(hash)\n  console.log(command)\n  const hashContext = new Function(\n    `let ${renderObjectKeys.join(\n      \",\",\n    )};${command};return{${renderObjectKeys.join(\",\")}}`,\n  )() as RenderObjects\n\n  // hashContext last, so i value in hash wins\n  objectAssignConcatArray(g, htmlContext)\n  objectAssignConcatArray(g, hashContext)\n  console.log(htmlContext)\n\n  Object.assign(eye, g.i)\n  // let gets: any = {a, b, c, d, mesh, edges, points, vectors}\n  // g.hjk && Object.assign(g, HJK())\n  arrayLiteralType([\"a\", \"b\", \"c\", \"d\"]).forEach((k) => {\n    const bRep = g[k]\n    if (bRep) {\n      bReps.push(bRep)\n    }\n  })\n\n  bRepMeshes = bReps.map((bRep) => bRep.toMesh())\n  bRepMeshes.forEach((mesh) => {\n    mesh.computeWireframeFromFlatTriangles(\"wireframe\")\n    mesh.computeNormalLines(0.1, \"normallines\")\n    mesh.compile()\n  })\n\n  if (g.mesh) {\n    console.log(\"mesh/es from GET\", bRepMeshes)\n    meshes = g.mesh instanceof Array ? g.mesh : [g.mesh]\n    meshes.forEach((mesh) => {\n      mesh.computeWireframeFromFlatTriangles(\"wireframe\")\n      mesh.computeNormalLines(0.1, \"normallines\")\n      mesh.compile()\n    })\n  }\n\n  if (g.edges) {\n    console.log(\"edges from GET\")\n    edgesMesh = new Mesh()\n      .addIndexBuffer(\"TRIANGLES\")\n      .addVertexBuffer(\"normals\", \"ts_Normal\")\n      .addVertexBuffer(\"curve1\", \"curve1\")\n      .addVertexBuffer(\"curve1colors\", \"curve1colors\")\n    g.edges.forEach((edge, edgeIndex) => {\n      const points = edge.points()\n      for (let i = 0; i < points.length - 1; i++) {\n        const color =\n          edgeViewerColors[(edgeIndex + (i % 2)) % edgeViewerColors.length]\n        // const tangent = edge.tangentAt(i)\n        // dMesh.curve1.push(points[i], points[i].plus(tangent.toLength(1)))\n        edgesMesh.curve1.push(points[i], points[i + 1])\n        edgesMesh.curve1colors.push(color, color)\n      }\n      edge.curve instanceof PICurve &&\n        (edge.curve as PICurve).addToMesh(edgesMesh, 8, 0.02, 2)\n\n      if (edge.curve.debugInfo) {\n        const { points, lines } = edge.curve.debugInfo()\n        points && edgeDebugPoints.push(...points)\n        lines && edgeDebugLines.push(...lines)\n      }\n    })\n    //dMesh.computeWireframeFromFlatTriangles()\n    edgesMesh.compile()\n  }\n  if (g.face) {\n    if (undefined === g.face.length) {\n      g.face = [g.face] as any\n    }\n    faceMesh = new Mesh()\n      .addIndexBuffer(\"TRIANGLES\")\n      .addIndexBuffer(\"LINES\")\n      .addVertexBuffer(\"tangents\", \"tangents\")\n      .addVertexBuffer(\"normals\", \"ts_Normal\")\n    for (const face of g.face) {\n      face.addToMesh(faceMesh)\n      for (const edge of face.allEdges) {\n        const ts = edge.curve.calcSegmentTs(\n          edge.aT,\n          edge.bT,\n          edge.reversed,\n          true,\n        )\n        for (const t of ts) {\n          const p = edge.curve.at(t)\n          faceMesh.tangents.push(p, p.plus(edge.tangentAt(t)))\n        }\n      }\n    }\n    faceMesh.compile()\n  }\n\n  g.drPs.push()\n}\n\nconst brepMeshColors: chroma.Color[][] = [\n  chroma.scale([\"#ff297f\", \"#6636FF\"]),\n  chroma.scale([\"#ffe93a\", \"#ff6e35\"]),\n  chroma.scale([\"#1eff33\", \"#4960ff\"]),\n  chroma.scale([\"#31fff8\", \"#2dff2a\"]),\n].map((scale) => scale.mode(\"lab\").colors(20, \"color\"))\nconst brepMeshColorssGL = brepMeshColors.map((cs) => cs.map((c) => c.gl()))\nconst meshColorsGL: GL_COLOR[] = chroma.scale(\"GnBu\").colors(16, \"gl\")\n\nfunction viewerPaint(time: int, gl: BREPGLContext) {\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n  gl.loadIdentity()\n\n  //setupCamera(eye, gl)\n\n  gl.drawVectors(g.drVs, 4 / eye.zoomFactor)\n\n  g.drPs.forEach((info) =>\n    gl.drawPoint(\n      info instanceof V3 ? info : info.p,\n      info instanceof V3 || !info.color\n        ? chroma.css(\"#cc0000\").gl()\n        : chroma.css(info.color).gl(),\n      6 / eye.zoomFactor,\n    ),\n  )\n  drawPlanes.forEach((plane) =>\n    gl.drawPlane(plane, plane.color, hovering == plane),\n  )\n  g.planes.forEach((plane) =>\n    gl.drawPlane(plane, plane.color, hovering == plane),\n  )\n\n  g.boxes.forEach((m4) => gl.drawBox(m4))\n\n  gl.shaders.lighting.uniforms({ camPos: eye.pos })\n  for (let i = 0; i < bRepMeshes.length; i++) {\n    const mesh = bRepMeshes[i]\n    gl.pushMatrix()\n    //gl.translate(30, 0, 0)\n    gl.projectionMatrix.m[11] -= 1 / (1 << 20) // prevent Z-fighting\n    g.paintWireframe &&\n      mesh.indexBuffers.wireframe &&\n      gl.shaders.singleColor\n        .uniforms({ color: COLORS.TS_STROKE.gl() })\n        .drawBuffers(mesh.vertexBuffers, mesh.indexBuffers.wireframe, gl.LINES)\n    g.paintMeshNormals &&\n      mesh.indexBuffers.normallines &&\n      gl.shaders.singleColor\n        .uniforms({ color: COLORS.TS_STROKE.gl() })\n        .drawBuffers(\n          mesh.vertexBuffers,\n          mesh.indexBuffers.normallines,\n          gl.LINES,\n        )\n    gl.shaders.singleColor\n      .uniforms({ color: COLORS.TS_STROKE.gl() })\n      .drawBuffers(mesh.vertexBuffers, mesh.indexBuffers.LINES, gl.LINES)\n    gl.projectionMatrix.m[11] += 1 / (1 << 20)\n\n    let faceIndex = bReps[i].faces.length\n    while (faceIndex--) {\n      const face = bReps[i].faces[faceIndex]\n      const faceTriangleIndexes = mesh.faceIndexes.get(face)!\n      gl.shaders.lighting\n        .uniforms({\n          color:\n            hovering == face\n              ? emod(emod(brepMeshColors, i), faceIndex).darker(2).gl()\n              : emod(emod(brepMeshColorssGL, i), faceIndex),\n        })\n        .draw(\n          mesh,\n          gl.TRIANGLES,\n          faceTriangleIndexes.start,\n          faceTriangleIndexes.count,\n        )\n    }\n\n    gl.popMatrix()\n  }\n\n  if (faceMesh) {\n    gl.shaders.singleColor\n      .uniforms({ color: chroma.css(\"red\").gl() })\n      .drawBuffers(\n        { ts_Vertex: faceMesh.vertexBuffers.tangents },\n        undefined,\n        gl.LINES,\n      )\n    gl.shaders.lighting\n      .uniforms({\n        color: chroma.css(\"red\").gl(),\n        camPos: eye.pos,\n      })\n      .draw(faceMesh)\n  }\n\n  for (let i = 0; i < meshes.length; i++) {\n    const mesh = meshes[i]\n    gl.pushMatrix()\n    gl.projectionMatrix.m[11] -= 1 / (1 << 20) // prevent Z-fighting\n    g.paintWireframe &&\n      mesh.indexBuffers.wireframe &&\n      gl.shaders.singleColor\n        .uniforms({ color: COLORS.TS_STROKE.gl() })\n        .drawBuffers(mesh.vertexBuffers, mesh.indexBuffers.wireframe, gl.LINES)\n    g.paintMeshNormals &&\n      mesh.indexBuffers.normallines &&\n      gl.shaders.singleColor\n        .uniforms({ color: COLORS.TS_STROKE.gl() })\n        .drawBuffers(\n          mesh.vertexBuffers,\n          mesh.indexBuffers.normallines,\n          gl.LINES,\n        )\n    gl.projectionMatrix.m[11] += 1 / (1 << 20)\n    mesh.TRIANGLES &&\n      gl.shaders.lighting\n        .uniforms({\n          color: emod(meshColorsGL, i),\n          camPos: eye.pos,\n        })\n        .draw(mesh)\n    gl.popMatrix()\n  }\n\n  if (hovering instanceof Edge) {\n    gl.projectionMatrix.m[11] -= 1 / (1 << 20) // prevent Z-fighting\n    gl.drawEdge(hovering, GL_COLOR_BLACK, 2 / eye.zoomFactor)\n    gl.projectionMatrix.m[11] += 1 / (1 << 20)\n  }\n  g.edges.forEach((e, i) =>\n    gl.drawEdge(e, emod(edgeViewerColors, i), 3 / eye.zoomFactor),\n  )\n\n  if (g.paintCurveDebug) {\n    gl.begin(gl.LINES)\n    gl.color(\"red\")\n    edgeDebugLines.forEach((x) => gl.vertex(x))\n    gl.end()\n    edgeDebugPoints.forEach((p) =>\n      gl.drawPoint(p, chroma.css(\"red\").gl(), 6 / eye.zoomFactor),\n    )\n  }\n  if (0 !== g.drLines.length) {\n    gl.begin(gl.LINES)\n    g.drLines.forEach((x) => {\n      gl.color((x as any).color || \"red\")\n      gl.vertex(x)\n    })\n    gl.end()\n  }\n}\n\nfunction getHovering(\n  mouseLine: L3,\n  faces: Face[],\n  planes: CustomPlane[] | undefined,\n  points: V3[],\n  edges: Edge[],\n  mindist: number,\n  ...consider: (\n    | \"faces\"\n    | \"planes\"\n    | \"sketchElements\"\n    | \"points\"\n    | \"edges\"\n    | \"features\"\n  )[]\n): any {\n  let hoverHighlight = null,\n    nearest = Infinity\n\n  const checkFeatures = consider.includes(\"features\")\n  assert(!checkFeatures || !consider.includes(\"faces\"))\n\n  function checkEl(el: any, distance: number) {\n    if (distance < nearest) {\n      nearest = distance\n      hoverHighlight = el\n    }\n  }\n\n  if (faces && (consider.includes(\"faces\") || consider.includes(\"features\"))) {\n    for (const face of faces) {\n      checkEl(\n        checkFeatures ? face.info.feature : face,\n        face.intersectsLine(mouseLine),\n      )\n    }\n  }\n  if (planes && consider.includes(\"planes\")) {\n    for (const plane of planes) {\n      checkEl(plane, plane.distanceTo(mouseLine, mindist))\n    }\n  }\n  if (consider.includes(\"points\")) {\n    for (const p of points) {\n      const t = mouseLine.pointT(p)\n      if (mouseLine.at(t).distanceTo(p) < mindist * 1.2) {\n        checkEl(p, t - 0.1)\n      }\n    }\n  }\n  if (consider.includes(\"edges\")) {\n    const projPlane = new P3(mouseLine.dir1, 0)\n    const projPoint = projPlane.projectedPoint(mouseLine.anchor)\n    for (const edge of edges) {\n      const curve = edge.curve\n      const prio = 0.05\n      if (curve instanceof L3 && curve.dir1.isParallelTo(mouseLine.dir1)) {\n        const d = mouseLine.distanceToPoint(edge.a)\n        const t = mouseLine.pointT(edge.a)\n\n        if (d < mindist) {\n          checkEl(edge, t - prio)\n        }\n      } else {\n        if (!(curve instanceof ImplicitCurve)) {\n          const projCurve = curve.project(projPlane)\n          const curveT = edge.clampedT(projCurve.closestTToPoint(projPoint))\n          const p = curve.at(curveT)\n          const t = mouseLine.pointT(p)\n          if (projCurve.at(curveT).distanceTo(projPoint) < mindist) {\n            checkEl(edge, t - prio)\n          }\n        }\n      }\n    }\n  }\n\n  return hoverHighlight\n}\n\nfunction initInfoEvents(paintScreen: () => {}, gl: BREPGLContext) {\n  gl.canvas.addEventListener(\"mousemove\", function (e) {\n    const mouseLine = getMouseLine({ x: e.clientX, y: e.clientY }, gl)\n    const faces = bReps.flatMap((b2) => b2 && b2.faces)\n    const testEdges: Edge[] = [\n      ...bReps.flatMap((b2) =>\n        Array.from<Edge>(b2.buildAdjacencies().edgeFaces.keys()),\n      ),\n      ...g.edges,\n    ]\n    hovering = getHovering(\n      mouseLine,\n      faces,\n      undefined,\n      [],\n      testEdges,\n      0.1,\n      \"faces\",\n      \"edges\",\n    )\n    //let html = '', pp\n    //if (hovering instanceof Edge) {\n    //\tpp = V(e.clientX, e.clientY)\n    //\tdefaultRoundFunction = x => round10(x, -3)\n    //\thtml = hovering.toString(x => round10(x, -3)) + ' length=' + hovering.length().toFixed(3)\n    //} else if (hovering instanceof Face) {\n    //\tpp = V(e.clientX, e.clientY)\n    //\tdefaultRoundFunction = x => round10(x, -3)\n    //   let area\n    //   try { area = hovering.calcArea() } catch (e) {}\n    //\thtml = `face surface=${hovering.surface.constructor.name} edges=${hovering.contour.length} area=${area}`\n    //}\n    //if (pp) {\n    //\t//const pSC = gl.projectionMatrix.times(gl.modelViewMatrix).transformPoint(pp)\n    //\t//const x = (pSC.x * 0.5 + 0.5) * window.innerWidth, y = (-pSC.y * 0.5 + 0.5) * window.innerHeight\n    //\ttooltipShow(html, pp.x, pp.y)\n    //} else {\n    //\ttooltipHide()\n    //}\n    paintScreen()\n  })\n}\n\n//var sketchPlane = new CustomPlane(V3.X, V3(1, 0, -1).unit(), V3.Y, -500, 500, -500, 500, 0xff00ff);\nconst drawPlanes = [\n  new CustomPlane(V3.O, V3.Y, V3.Z, \"planeYZ\", chroma.color(0xff0000).gl()),\n  new CustomPlane(V3.O, V3.X, V3.Z, \"planeZX\", chroma.color(0x00ff00).gl()),\n  new CustomPlane(V3.O, V3.X, V3.Y, \"planeXY\", chroma.color(0x0000ff).gl()),\n  //\tsketchPlane\n]\nlet paintScreen: () => void\ndeclare var BREPTS_ROOT: string\n\nexport async function viewerMain() {\n  const meshNormalsCheckbox = document.getElementById(\"paint-mesh-normals\")!\n  meshNormalsCheckbox.onclick = (e) => {\n    g.paintMeshNormals = !g.paintMeshNormals\n    paintScreen()\n  }\n\n  const wireframeCheckbox = document.getElementById(\"paint-wireframe\")!\n  wireframeCheckbox.onclick = (e) => {\n    g.paintWireframe = !g.paintWireframe\n    paintScreen()\n  }\n\n  const paintDebugCheckbox = document.getElementById(\"paint-curvedebug\")!\n  paintDebugCheckbox.onclick = (e) => {\n    g.paintCurveDebug = !g.paintCurveDebug\n    paintScreen()\n  }\n\n  paintScreen = () => requestAnimationFrame((t) => viewerPaint(t, gl))\n  // B2T.defaultFont = await B2T.loadFont(BREPTS_ROOT + '/fonts/FiraSansMedium.woff')\n  window.onerror = function (errorMsg, url, lineNumber, column, errorObj) {\n    console.log(errorMsg, url, lineNumber, column, errorObj)\n  }\n  window.onpopstate = function (e) {\n    const hash =\n      window.location.search.substr(1) || window.location.hash.substr(1) || \"\"\n    const command = decodeURIComponent(hash)\n    const hashContext = new Function(\n      `let ${renderObjectKeys.join(\n        \",\",\n      )};${command};return{${renderObjectKeys.join(\",\")}}`,\n    )() as RenderObjects\n\n    Object.assign(eye, hashContext.i)\n    setupCamera(eye, gl, true)\n    paintScreen()\n  }\n  const gl = BREPGLContext.create(\n    TSGLContext.create({\n      canvas: document.getElementById(\"testcanvas\") as HTMLCanvasElement,\n    }),\n  )\n  gl.fullscreen()\n  gl.canvas.oncontextmenu = () => false\n\n  setupCamera(eye, gl)\n  //gl.cullFace(gl.FRONT_AND_BACK);\n  gl.clearColor(1.0, 1.0, 1.0, 0.0)\n  gl.enable(gl.BLEND)\n  gl.enable(gl.DEPTH_TEST)\n  gl.enable(gl.CULL_FACE)\n  gl.depthFunc(gl.LEQUAL)\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA) // TODO ?!\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n  gl.loadIdentity()\n  gl.scale(10, 10, 10)\n\n  gl.loadIdentity()\n  ;(window as any).gl = gl\n\n  initNavigationEvents(gl, eye, paintScreen)\n  cameraChangeListeners.push(\n    debounce(function (eye) {\n      const round = (x: number) => round10(x, -3)\n      const roundedEye = {\n        pos: eye.pos.map(round),\n        focus: eye.focus.map(round),\n        up: eye.up.map(round),\n        zoomFactor: round(eye.zoomFactor),\n      }\n      const iSource =\n        \"i=\" + roundedEye.toSource().replace(/[\\n\\r\\s]+|^\\(|\\)$/g, \"\")\n      const hash = window.location.hash.substr(1) || iSource\n      const result = hash.match(/i=\\{[^}]*\\}/)\n        ? hash.replace(/i=\\{[^}]*\\}/, iSource)\n        : hash + \";\" + iSource\n      window.history.pushState(undefined, \"\", \"#\" + result)\n    }, 500),\n  )\n  // initInfoEvents(paintScreen, g l)\n  //initToolTips() // hide tooltip on mouseover\n  //initPointInfoEvents()\n  initBRep()\n  setupCamera(eye, gl)\n  paintScreen()\n}\n\nexport function alignX(dir: number) {\n  eye.pos = eye.focus.plus(V(100 * dir, 0, 0))\n  eye.up = V3.Z\n  setupCamera(eye, (window as any).gl)\n  paintScreen()\n}\n\nexport function alignY(dir: number) {\n  eye.pos = eye.focus.plus(V(0, 100 * dir, 0))\n  eye.up = V3.Z\n  setupCamera(eye, (window as any).gl)\n  paintScreen()\n}\n\nexport function alignZ(dir: number) {\n  eye.pos = eye.focus.plus(V(0, 0, 100 * dir))\n  eye.up = eye.pos.cross(V3.X).unit()\n  setupCamera(eye, (window as any).gl)\n  paintScreen()\n}\n\nexport function rot(angleInDeg: number) {\n  eye.up = M4.rotateLine(\n    eye.pos,\n    eye.pos.to(eye.focus),\n    angleInDeg * DEG,\n  ).transformVector(eye.up)\n  setupCamera(eye, (window as any).gl)\n  paintScreen()\n}\n"],"names":["PI","lerp","lerpInv","clamp","bisect","withMax","min","max","CustomMap","abs","newtonIterate1d","__awaiter","Buffer","cos","sin","WGL","log","chroma.color","atan2","cbrt","floor","hypot","random","round","sign","sqrt","const","let","arguments","i","ii","equals","log2","pair","WS","this","subtable","singleSubstitutionFormat1","singleSubstitutionFormat2","chainingSubstitutionFormat3","ligatureSubstitutionFormat1","getContextParams","HintingTrueType","subtableParsers","subtableMakers","inflate","opentype.load","opentype.Path","chroma.random","encodeSVGPath","commands","str","Array","isArray","length","command","type","SVGPathData","CLOSE_PATH","HORIZ_LINE_TO","relative","x","VERT_LINE_TO","y","MOVE_TO","LINE_TO","CURVE_TO","x1","y1","x2","y2","SMOOTH_CURVE_TO","QUAD_TO","SMOOTH_QUAD_TO","ARC","Error","rX","rY","xRot","lArcFlag","sweepFlag","rotate","_a","rad","Math","assertNumbers","_i","numbers","annotateArcCommand","c","x1_","y1_","testValue","pow","c_ScaleTemp","c_Scale","cx_","cy_","cRot","cX","cY","phi1","phi2","intersectionUnitCircleLine","a","b","termSqr","term","SVGPathDataTransformer","DEG","t","arcAt","phiDeg","bezierRoot","x0","x3","x01","x12","p","q","PRECISION","discriminantX4","root","pqFormula","bezierAt","s","TO_ABS","INFO","prevX","prevY","NORMALIZE_ST","prevCurveC2X","NaN","prevCurveC2Y","prevQuadCX","prevQuadCY","isNaN","QT_TO_C","prevQuadX1","prevQuadY1","f","prevXAbs","prevYAbs","pathStartXAbs","pathStartYAbs","result","MATRIX","d","e","pathStartX","origX1","origX2","comRel","sqr","det","sinRot","cosRot","xCurve","yCurve","A","B","C","A1","B1","C1","newXRot","newSinRot","newCosRot","CLONE","key","roundVal","rf","val","normalizeZ","normalizeH","normalizeV","pathStartY","EPS","skip","x1Rel","y1Rel","LINE_COMMANDS","xRel","yRel","x2Rel","y2Rel","dX","dY","atan","xOffset","yOffset","arc","y0","phiMin","deltaPhi","partCount","ceil","phiStart","phiEnd","deltaPhi_1","tan","_e","_f","_g","transform","xTemp","yTemp","_b","_c","_d","a2c","clone","toAbs","qtToC","normST","fixX","absX","maxX","minX","fixY","absY","maxY","minY","DRAWING_COMMANDS","xDerivRoots_1","derivRoot","yDerivRoots_1","xRotRad","x90","y90","phiMin_1","phiMax","normalizeXiEta","xi","eta","phi","xDerivRoots_2","map","yDerivRoots_2","Infinity","TransformableSVG","ROUND","TO_REL","NORMALIZE_HVZ","A_TO_C","eps","SANITIZE","TRANSLATE","SCALE","ROTATE","SKEW_X","SKEW_Y","X_AXIS_SYMMETRY","Y_AXIS_SYMMETRY","ANNOTATE_ARCS","isWhiteSpace","isDigit","charCodeAt","_super","_this","__extends","SVGPathDataParser","parse","curArgs","canParseCommandOrComma","SyntaxError","finishCommand","push","isAArcFlag","curCommandType","curNumber","isEndingDigit","curNumberHasExp","curNumberHasExpDigits","curNumberHasDecimal","Number","COMMAND_ARG_COUNTS","curCommandRelative","Object","create","value","chunk","parsedCommands_1","getPrototypeOf","call","cT","content","encode","boundsTransform","CALCULATE_BOUNDS","transformFunction","newCommands","transformedCommand","path","parser","finish","JavaMap","arrayMin","undefined","CustomSet","earcut","nerdamer","shaders.vertexShaderBasic","shaders.fragmentShaderColor","shaders.vertexShaderColor","shaders.fragmentShaderVaryingColor","shaders.fragmentShaderColorHighlight","shaders.vertexShaderTexture","shaders.fragmentShaderTextureColor","shaders.vertexShaderRing","shaders.vertexShaderArc","shaders.vertexShaderConic3d","shaders.vertexShaderGeneric","shaders.vertexShaderBezier3d","shaders.vertexShaderNURBS","shaders.fragmentShaderColor3","shaders.vertexShaderBezier","shaders.vertexShaderLighting","shaders.fragmentShaderLighting","shaders.vertexShaderWaves","chroma.css","chroma.scale","debounce"],"mappings":"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C,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBAClE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAGjE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBAClE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAGjE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACpE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAGhE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACpE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACpE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,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C,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAChE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAEhE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC/D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC/D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAChE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAEhE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACjE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACjE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAEnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAA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R,IAAI,CAAC,EAAE,CAAC;IACR,IAAI,CAAC,EAAE,CAAC;IACR,IAAI,CAAC,EAAE,CAAC;IACR,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,EAAE;IACV,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,EAAE,EAAE,CAAC;IACT,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;IAC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AAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC;IAClC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,OAAO,CAAC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B,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,SAAS;IACxB,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACvC,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,eAAe,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACvD,CAAC,CAAC;AACF;IAGA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;AACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;AACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;AACA;IACA;IACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;AACA;AACA;IACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;AACA;IACA;IACA;AACA;IACA;AACA;IACA;IACA;AACA;IACA;AACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;IACA;AACA;AACA;AACA;IACA;IACA;IACA;AACA;IACA;AACA;IACA;AACA;AACA;AACA;IACA;IACA;AACA;IACA;AACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;AACA;AACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA;AACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA;IACA;AACA;IACA;AACA;AACA;IACA;IACA;IACA;IACA;IACA;AACA;AACA;IACA;IACA;AACA;AACA;AACA;IACA;IACA;;ICr/FA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,IAAI,EAAE;IACrB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpB,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,YAAY,CAAC,UAAU,EAAE,SAAS,EAAE,WAAW,EAAE;IAC1D,IAAI,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,IAAI,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,cAAc,CAAC,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE;IAC3D,IAAI,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACjC,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,aAAa,CAAC,OAAO,EAAE,YAAY,EAAE;IAC9C,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,IAAI,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;IAC9B,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IACjC,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;IACzC,IAAI,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;IACpD,IAAI,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;IACrD,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,KAAK,CAAC,OAAO,EAAE;IACxB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,IAAI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC1B,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,oBAAoB,CAAC,MAAM,EAAE;;AAAC;IACvC,IAAIR,IAAM,UAAU,GAAG;IACvB,QAAQ,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,cAAc;IAC1D,QAAQ,YAAY,EAAE,aAAa,EAAE,aAAa,EAAE,aAAa;IACjE,QAAQ,cAAc,EAAE,cAAc,EAAE,YAAY,EAAE,sBAAsB;IAC5E,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,OAAO,WAAC,SAAW;IAClC,QAAQ,MAAM,CAAC,cAAc,CAACS,MAAI,CAAC,MAAM,EAAE,OAAO,EAAE;IACpD,YAAY,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC;IACrC,SAAS,CAAC,CAAC;IACX,KAAK,CAAC,CAAC;AACP;IACA,IAAI,IAAI,CAAC,CAAC,MAAM,EAAE;IAClB,QAAQ,UAAU,CAAC,OAAO,WAAC,SAAW;IACtC,YAAYT,IAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;IAC1C,YAAY,IAAI,OAAO,KAAK,KAAK,UAAU,EAAE;IAC7C,gBAAgBS,MAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IACtD,aAAa;IACb,SAAS,CAAC,CAAC;IACX,KAAK;IACL,IAAIT,IAAM,qBAAqB,GAAG;IAClC,QAAQ,aAAa,EAAE,aAAa,EAAE,aAAa;IACnD,QAAQ,cAAc,EAAE,cAAc,EAAE,YAAY;IACpD,KAAK,CAAC;IACN,IAAI,qBAAqB,CAAC,OAAO,WAAC,SAAW;IAC7C,QAAQS,MAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS;IACtC,YAAYA,MAAI,CAAC,oBAAoB;IACrC,SAAS,CAAC;IACV,KAAK,CAAC,CAAC;IACP,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,SAAS,CAAC,MAAM,EAAE;IAC3B,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,IAAI,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;IACjC,IAAI,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC9B,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,IAAI,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;AAClC;IACA,IAAI,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC5C,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,GAAG,EAAE,KAAK,EAAE;IAChD,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAC5B,IAAI,IAAI,CAAC,WAAW,GAAG,OAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;IACvD,IAAI,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC,CAAC;AACF;IACA,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,OAAO,EAAE;IAC9C,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;IACvC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,KAAK,EAAE;IACnD,IAAI,OAAO,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACpD,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE;;AAAC;IAClD,IAAIT,IAAM,MAAM,GAAG,IAAI,CAAC;IACxB,IAAIA,IAAM,KAAK,GAAG,IAAI,CAAC,GAAG,WAAC;IAC3B,QAAQS,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAACA,MAAI,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC7D,QAAK,CAAC,CAAC;IACP,IAAIT,IAAM,aAAa,aAAG;IAC1B,QAAQ,OAAO,GAAG,KAAK,QAAQ;IAC/B,QAAQ,GAAG,CAAC,cAAc,CAAC,MAAM,CAAC;IAClC,QAAK,CAAC;IACN,IAAI,IAAI,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;IACpC,QAAQ,OAAO;IACf,YAAY,IAAI,EAAE,kEAAkE;IACpF,YAAY,MAAM,EAAE,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC;IAC/C,SAAS,CAAC;IACV,KAAK;IACL,IAAI,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,MAAM,WAAC,aAAM,CAAC,aAAa,CAAC,EAAE,IAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IACjF,IAAI,MAAM,GAAG,MAAM,KAAK,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAC3D,IAAIA,IAAM,WAAW,GAAG,MAAM,CAAC,KAAK,WAAC,gBAAS,KAAK,YAAY,QAAK,CAAC,CAAC;IACtE,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,WAAW,EAAE;IAC5E,QAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK;IACjD,YAAY,IAAI,CAAC,MAAM,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;IAC5D,SAAS,CAAC;IACV,QAAQ,IAAI,CAAC,MAAM,IAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,GAAC;IACjF,QAAQ,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAClC,KAAK,MAAM;IACX,QAAQ,OAAO,EAAE,IAAI,EAAE,6CAA6C,EAAE,CAAC;IACvE,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;IACnE,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,KAAK,EAAE;IAC7E,QAAQA,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;IAC7D,QAAQ,IAAI,CAAC,MAAM,IAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,GAAC;IACnE,QAAQ,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACpC,KAAK,MAAM;IACX,QAAQ,OAAO,EAAE,IAAI,EAAE,uCAAuC,EAAE,CAAC;IACjE,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE;IACvE,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IAC1D,IAAIA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC1D,IAAI,IAAI,CAAC,MAAM,IAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC,GAAC;IAC5E,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,KAAK,EAAE,MAAM,EAAE;IAC1D,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;IACnD,QAAQA,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACnD,QAAQ,IAAI,CAAC,MAAM,IAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,GAAC;IAClE,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK,MAAM;IACX,QAAQ,OAAO,EAAE,IAAI,EAAE,mCAAmC,EAAE,CAAC;IAC7D,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;IACnE,IAAIA,IAAM,SAAS,GAAG,MAAM,CAAC,KAAK;IAClC,kBAAQ,gBAAS,KAAK,YAAY,QAAK;IACvC,KAAK,CAAC;IACN,IAAI,IAAI,SAAS,EAAE;IACnB,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK;IAChC,YAAY,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;IAClD,SAAS,CAAC;IACV,QAAQ,IAAI,CAAC,MAAM,IAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,GAAC;IACnE,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,MAAM;IACX,QAAQ,OAAO,EAAE,IAAI,EAAE,gCAAgC,EAAE,CAAC;IAC1D,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAS,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE;IACjF,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,KAAK,EAAE,aAAa,EAAE;IAClE,QAAQA,IAAM,eAAe,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;IACvD,QAAQA,IAAM,gBAAgB;IAC9B,YAAY,SAAS,KAAK,IAAI;IAC9B,YAAY,SAAS,CAAC,KAAK,CAAC,IAAI,EAAE,eAAe,CAAC,KAAK,IAAI;IAC3D,SAAS,CAAC;IACV,QAAQA,IAAM,cAAc,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;IACtD,QAAQ,IAAI,gBAAgB,EAAE;IAC9B,YAAYC,IAAI,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IACrE,YAAY,KAAK,CAAC,QAAQ,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC;IACtD,SAAS;IACT,KAAK,CAAC,CAAC;IACP,IAAI,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,YAAY,EAAE;IACpD,IAAI,IAAI,OAAO,YAAY,KAAK,UAAU,EAAE;IAC5C,QAAQ,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;IAC3D,KAAK,MAAM;IACX,QAAQ,OAAO,EAAE,IAAI,kBAAc,IAAI,CAAC,QAAO,qBAAiB,CAAC,CAAC;IAClE,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,MAAM,EAAE;IAChD,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,aAAa,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,KAAK,EAAE;IAC1D,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACvC,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAClD,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,aAAa,CAAC,SAAS,CAAC,GAAG,GAAG,UAAU,MAAM,EAAE;IAChD,IAAI,QAAQ,IAAI;IAChB,QAAQ,MAAM,MAAM,KAAK,CAAC;IAC1B,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC;IAChC,QAAQ,MAAM,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM;IACrE,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,QAAQ,MAAM,MAAM,GAAG,CAAC,IAAI,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM;IAC3D,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,QAAQ;IACR,YAAY,OAAO,IAAI,CAAC;IACxB,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,KAAK,EAAE;IACnD,IAAI,IAAI,KAAK,YAAY,YAAY,EAAE;IACvC,QAAQ;IACR,YAAY,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;IACtC,iBAAiB,GAAG,WAAC,gBAAS,KAAK,CAAC,OAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;IAClD,UAAU;IACV,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;IAC1C,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,WAAC,gBAAS,KAAK,CAAC,OAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzD,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,WAAW,EAAE;IACxD,IAAIA,IAAI,OAAO,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;IACvD,IAAI,OAAO,CAAC,CAAC,OAAO,GAAG,OAAO,GAAG,IAAI,CAAC;IACtC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,EAAE,GAAG,SAAS,SAAS,EAAE,YAAY,EAAE;IAC3D,IAAID,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACzC,IAAI,IAAI,CAAC,CAAC,KAAK,EAAE;IACjB,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IAC7C,KAAK,MAAM;IACX,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAS,EAAE,IAAI,EAAE;;AAAC;IAC1D,IAAIA,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACzC,IAAI,IAAI,KAAK,YAAY,KAAK,EAAE;IAChC,QAAQ,KAAK,CAAC,WAAW,CAAC,OAAO,WAAC,YAAc;IAChD,YAAY,UAAU,CAAC,KAAK,CAACS,MAAI,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;IAC/C,SAAS,CAAC,CAAC;IACX,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,sBAAsB,GAAG,SAAS,WAAW,EAAE,iBAAiB,EAAE,eAAe,EAAE;IACvG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAE,OAAO;IAC/C,QAAQ,IAAI;IACZ,4BAAyB,WAAW,8BAA0B;IAC9D,KAAK,GAAC;IACN,IAAI,IAAI,OAAO,iBAAiB,KAAK,UAAU,IAAE,OAAO;IACxD,QAAQ,IAAI;IACZ,QAAQ,8BAA8B;IACtC,KAAK,GAAC;IACN,IAAI,IAAI,OAAO,eAAe,KAAK,UAAU,IAAE,OAAO;IACtD,QAAQ,IAAI;IACZ,QAAQ,4BAA4B;IACpC,KAAK,GAAC;IACN,IAAIT,IAAM,eAAe,GAAG,IAAI,cAAc;IAC9C,QAAQ,WAAW,EAAE,iBAAiB,EAAE,eAAe;IACvD,KAAK,CAAC;IACN,IAAI,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,GAAG,eAAe,CAAC;IAC3D,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAC/C,IAAI,OAAO,eAAe,CAAC;IAC3B,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,cAAc,GAAG,SAAS,KAAK,EAAE;IACrD,IAAIA,IAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC;IACxD,IAAI,OAAO,EAAE,CAAC,MAAM;IACpB,QAAQ,IAAI,CAAC,MAAM;IACnB,aAAa,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC;IAC9C,KAAK,CAAC;IACN,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAS,WAAW,EAAE;IAC7D,IAAIA,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IACjD,IAAI,IAAI,CAAC,CAAC,OAAO,EAAE;IACnB,QAAQ,OAAO,OAAO,CAAC,MAAM,CAAC;IAC9B,KAAK,MAAM;IACX,QAAQ,OAAO,EAAE,IAAI,yBAAsB,WAAW,0BAAsB,EAAE,CAAC;IAC/E,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,mBAAmB,GAAG,YAAY;IACtD,IAAIA,IAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC;IACvD,IAAI,KAAKA,IAAM,WAAW,IAAI,kBAAkB,EAAE;IAClD,QAAQ,IAAI,kBAAkB,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;IAC5D,YAAYA,IAAM,OAAO,GAAG,kBAAkB,CAAC,WAAW,CAAC,CAAC;IAC5D,YAAY,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC;IAChC,SAAS;IACT,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,oBAAoB,GAAG,YAAY;IACvD,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,IAAIA,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,WAAC,gBAAS,KAAK,CAAC,OAAI,CAAC,CAAC;IACvD,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC3C,QAAQD,IAAM,aAAa,GAAG,IAAI,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC1D,QAAQ,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;IAC5C,KAAK;IACL,IAAI,IAAI,CAAC,QAAQ,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACrE,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,YAAY,GAAG,UAAU,MAAM,EAAE,WAAW,EAAE;IAClE,IAAIA,IAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC;IACzE,IAAIC,IAAI,KAAK,GAAG,IAAI,YAAY,CAAC,UAAU,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;IAClE,IAAID,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC;IACvD,IAAI,KAAK,CAAC,OAAO,GAAM,WAAW,UAAI,MAAM,CAAC,OAAQ,CAAC;IACtD,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvB,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;IAClD,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,aAAa,EAAE;;AAAC;IAC/D,IAAIA,IAAM,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;IACtC,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,WAAC,gBAAkB;IACnD,QAAQC,IAAI,WAAW,GAAG,cAAc,CAAC,WAAW,CAAC;IACrD,QAAQA,IAAI,SAAS,GAAGQ,MAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC;IAC/D,QAAQ,IAAI,CAAC,SAAS,IAAI,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE;IACpE,YAAY,SAAS,GAAG,IAAI,YAAY,CAAC,KAAK,EAAE,IAAI,EAAE,WAAW,CAAC,CAAC;IACnE,YAAYA,MAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/D,YAAYA,MAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;IAChE,SAAS;IACT,QAAQ,IAAI,CAAC,CAAC,SAAS,IAAI,cAAc,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;IACnE,YAAYT,IAAM,MAAM,GAAG,CAAC,KAAK,GAAG,SAAS,CAAC,UAAU,IAAI,CAAC,CAAC;IAC9D,YAAYA,IAAM,KAAK,GAAGS,MAAI,CAAC,YAAY,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;IACjE,YAAYA,MAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;IAC9D,SAAS;IACT,KAAK,CAAC,CAAC;IACP,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,SAAS,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAE;IAC/C,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,IAAI,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC/B,IAAIR,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC3B,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC3C,QAAQD,IAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,QAAQA,IAAM,aAAa,GAAG,IAAI,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC1D,QAAQ,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IAC/C,QAAQ,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;IAC5C,QAAQC,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC;IACpC,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChC,QAAQ,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC,CAAC;IAC1D,KAAK;IACL,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACxC,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC,CAAC;;ICtgBF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACO,SAAS,YAAY,CAAC,CAAC,EAAE;IAChC,IAAI,OAAO,2CAA2C,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC;AACD;IACA;IACA;IACA;IACA;IACO,SAAS,oBAAoB,CAAC,IAAI,EAAE;IAC3C,IAAI,OAAO,kUAAkU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzV,CAAC;AACD;IACA;IACA;IACA;IACA;IACO,SAAS,oBAAoB,CAAC,IAAI,EAAE;IAC3C,IAAI,OAAO,uHAAuH,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9I,CAAC;AACD;IACA;IACA;IACA;IACA;IACO,SAAS,WAAW,CAAC,CAAC,EAAE;IAC/B,IAAI,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;AACD;IACA;IACA;IACA;IACA;IACO,SAAS,YAAY,CAAC,CAAC,EAAE;IAChC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC;;IC1CD;IACA;IACA;AACA;IAIA;IACA;IACA;IACA;IACA,SAAS,YAAY,CAAC,IAAI,EAAE;IAC5B,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA,SAAS,kBAAkB,CAAC,MAAM,EAAE;IACpC,IAAI,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;IACxB,IAAI,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;IAC1B,IAAI,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IAC5C,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,cAAc,CAAC,UAAU,EAAE,QAAQ,EAAE;IAC9C,IAAI,IAAI,CAAC,UAAU,IAAE,OAAO,CAAC,CAAC,GAAC;IAC/B,IAAI,QAAQ,QAAQ,CAAC,MAAM;IAC3B,QAAQ,KAAK,CAAC;IACd,YAAY,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACvD;IACA,QAAQ,KAAK,CAAC;IACd,YAAYA,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;IACzC,YAAY,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpD,gBAAgBD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACxC,gBAAgB,IAAI,UAAU,IAAI,KAAK,CAAC,KAAK,IAAI,UAAU,IAAI,KAAK,CAAC,GAAG,EAAE;IAC1E,oBAAoBC,IAAI,MAAM,GAAG,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC;IAC1D,oBAAoB,OAAO,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;IAChD,iBAAiB;IACjB,aAAa;IACb,YAAY,MAAM;IAClB,QAAQ;IACR,YAAY,OAAO,CAAC,CAAC,CAAC;IACtB,KAAK;IACL,IAAI,OAAO,CAAC,CAAC,CAAC;IACd,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,yBAAyB,CAAC,UAAU,EAAE,QAAQ,EAAE;IACzD,IAAIA,IAAI,eAAe,GAAG,cAAc,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACxE,IAAI,IAAI,eAAe,KAAK,CAAC,CAAC,IAAE,OAAO,IAAI,GAAC;IAC5C,IAAI,OAAO,UAAU,GAAG,QAAQ,CAAC,YAAY,CAAC;IAC9C,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,yBAAyB,CAAC,UAAU,EAAE,QAAQ,EAAE;IACzD,IAAIA,IAAI,eAAe,GAAG,cAAc,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACxE,IAAI,IAAI,eAAe,KAAK,CAAC,CAAC,IAAE,OAAO,IAAI,GAAC;IAC5C,IAAI,OAAO,QAAQ,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;IAChD,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,kBAAkB,CAAC,YAAY,EAAE,aAAa,EAAE;IACzD,IAAIA,IAAI,UAAU,GAAG,EAAE,CAAC;IACxB,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAClD,QAAQD,IAAM,QAAQ,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;IACzC,QAAQC,IAAI,UAAU,GAAG,aAAa,CAAC,OAAO,CAAC;IAC/C,QAAQ,UAAU,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC;IAC5E,QAAQD,IAAM,WAAW,GAAG,cAAc,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACjE,QAAQ,IAAI,WAAW,KAAK,CAAC,CAAC,EAAE;IAChC,YAAY,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzC,SAAS;IACT,KAAK;IACL,IAAI,IAAI,UAAU,CAAC,MAAM,KAAK,YAAY,CAAC,MAAM,IAAE,OAAO,CAAC,CAAC,GAAC;IAC7D,IAAI,OAAO,UAAU,CAAC;IACtB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,2BAA2B,CAAC,aAAa,EAAE,QAAQ,EAAE;IAC9D,IAAIA,IAAM,YAAY;IACtB,QAAQ,QAAQ,CAAC,aAAa,CAAC,MAAM;IACrC,QAAQ,QAAQ,CAAC,iBAAiB,CAAC,MAAM;IACzC,QAAQ,QAAQ,CAAC,iBAAiB,CAAC,MAAM;IACzC,KAAK,CAAC;IACN,IAAI,IAAI,aAAa,CAAC,OAAO,CAAC,MAAM,GAAG,YAAY,IAAE,OAAO,EAAE,GAAC;IAC/D;IACA,IAAIC,IAAI,YAAY,GAAG,kBAAkB;IACzC,QAAQ,QAAQ,CAAC,aAAa,EAAE,aAAa;IAC7C,KAAK,CAAC;IACN,IAAI,IAAI,YAAY,KAAK,CAAC,CAAC,IAAE,OAAO,EAAE,GAAC;IACvC;IACA,IAAID,IAAM,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;IAC9D,IAAI,IAAI,aAAa,CAAC,SAAS,CAAC,MAAM,GAAG,QAAQ,CAAC,iBAAiB,CAAC,MAAM,IAAE,OAAO,EAAE,GAAC;IACtF,IAAIC,IAAI,gBAAgB,GAAG,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;IAC1E,IAAI,OAAO,gBAAgB,CAAC,MAAM,IAAI,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;IACtF,QAAQ,gBAAgB,CAAC,KAAK,EAAE,CAAC;IACjC,KAAK;IACL,IAAID,IAAM,eAAe,GAAG,IAAI,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IACnE,IAAIC,IAAI,gBAAgB,GAAG,kBAAkB;IAC7C,QAAQ,QAAQ,CAAC,iBAAiB,EAAE,eAAe;IACnD,KAAK,CAAC;IACN;IACA,IAAIA,IAAI,gBAAgB,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;IAC9D,IAAI,gBAAgB,CAAC,OAAO,EAAE,CAAC;IAC/B,IAAI,OAAO,gBAAgB,CAAC,MAAM,IAAI,oBAAoB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;IACtF,QAAQ,gBAAgB,CAAC,KAAK,EAAE,CAAC;IACjC,KAAK;IACL,IAAI,IAAI,gBAAgB,CAAC,MAAM,GAAG,QAAQ,CAAC,iBAAiB,CAAC,MAAM,IAAE,OAAO,EAAE,GAAC;IAC/E,IAAID,IAAM,eAAe,GAAG,IAAI,aAAa,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IACnE,IAAIC,IAAI,gBAAgB,GAAG,kBAAkB;IAC7C,QAAQ,QAAQ,CAAC,iBAAiB,EAAE,eAAe;IACnD,KAAK,CAAC;IACN,IAAID,IAAM,iBAAiB;IAC3B,QAAQ,YAAY,CAAC,MAAM,KAAK,QAAQ,CAAC,aAAa,CAAC,MAAM;IAC7D,QAAQ,gBAAgB,CAAC,MAAM,KAAK,QAAQ,CAAC,iBAAiB,CAAC,MAAM;IACrE,QAAQ,gBAAgB,CAAC,MAAM,KAAK,QAAQ,CAAC,iBAAiB,CAAC,MAAM;IACrE,KAAK,CAAC;IACN,IAAIC,IAAI,aAAa,GAAG,EAAE,CAAC;IAC3B,IAAI,IAAI,iBAAiB,EAAE;IAC3B,QAAQ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChE,YAAYD,IAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IAC3D,YAAYA,IAAM,eAAe,GAAG,YAAY,CAAC,eAAe,CAAC;IACjE,YAAYA,IAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC;IACvE,YAAY,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACnE,gBAAgBD,IAAMU,UAAQ,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC1D,gBAAgBV,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAEU,UAAQ,CAAC,CAAC;IAC3E,gBAAgBV,IAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAEU,UAAQ,CAAC,CAAC;IACzF,gBAAgB,IAAI,gBAAgB,KAAK,IAAI,EAAE;IAC/C,oBAAoB,KAAKT,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAClE,wBAAwBD,IAAM,UAAU,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChE,wBAAwBA,IAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IAChE,wBAAwB,IAAI,YAAY,IAAE,aAAa,CAAC,IAAI,CAAC,YAAY,CAAC,GAAC;IAC3E,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,OAAO,aAAa,CAAC;IACzB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,2BAA2B,CAAC,aAAa,EAAE,QAAQ,EAAE;IAC9D;IACA,IAAIC,IAAI,UAAU,GAAG,aAAa,CAAC,OAAO,CAAC;IAC3C,IAAIA,IAAI,WAAW,GAAG,cAAc,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACpE,IAAI,IAAI,WAAW,KAAK,CAAC,CAAC,IAAE,OAAO,IAAI,GAAC;IACxC;IACA;IACA,IAAIA,IAAI,QAAQ,CAAC;IACjB,IAAIA,IAAI,WAAW,GAAG,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IACzD,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjD,QAAQ,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IAClC,QAAQ,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC7D,YAAYD,IAAM,aAAa,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7D,YAAYA,IAAM,SAAS,GAAG,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACrD,YAAY,IAAI,aAAa,KAAK,SAAS,IAAE,QAAM;IACnD,YAAY,IAAI,CAAC,KAAK,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,IAAE,OAAO,QAAQ,GAAC;IACtE,SAAS;IACT,KAAK;IACL,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,gCAAgC,CAAC,UAAU,EAAE,QAAQ,EAAE;IAChE,IAAIC,IAAI,eAAe,GAAG,cAAc,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACxE,IAAI,IAAI,eAAe,KAAK,CAAC,CAAC,IAAE,OAAO,IAAI,GAAC;IAC5C,IAAI,OAAO,QAAQ,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;IAC/C,CAAC;AACD;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,+BAA+B,GAAG,YAAY;IACrE,IAAID,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IAClD,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC7C,QAAQD,IAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAClC,QAAQ,IAAI,MAAM,CAAC,GAAG,KAAK,MAAM,IAAE;IACnC,YAAY,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,cAAc;IACvD,YAAU;IACV,KAAK;IACL,IAAI,OAAO,EAAE,CAAC;IACd,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,wBAAwB,GAAG,SAAS,SAAS,EAAE;IACtE,IAAIA,IAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IACpC,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,IAAE,OAAO,EAAE,GAAC;IAChC,IAAI,IAAI,CAAC,SAAS,IAAE,OAAO,IAAI,CAAC,+BAA+B,EAAE,GAAC;IAClE,IAAIA,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IAClD,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC7C,QAAQD,IAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAClC,QAAQ,IAAI,MAAM,CAAC,GAAG,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE;IACtE,YAAY,OAAO,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,cAAc,CAAC;IAC/D,SAAS,MAAM;IACf,YAAYC,IAAI,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;IACvD,YAAY,IAAI,CAAC,CAAC,cAAc,EAAE;IAClC,gBAAgB,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChE,oBAAoBD,IAAM,aAAa,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;IAC5D,oBAAoB,IAAI,aAAa,CAAC,GAAG,KAAK,SAAS,EAAE;IACzD,wBAAwBC,IAAI,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;IAC5D,wBAAwB,OAAO,OAAO,CAAC,cAAc,CAAC;IACtD,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,OAAO,IAAI,CAAC,+BAA+B,EAAE,CAAC;IAClD,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,QAAQ,EAAE,SAAS,EAAE;IAC1E,IAAIA,IAAI,IAAI,GAAG,EAAE,CAAC;IAClB,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC9C,QAAQD,IAAM,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACpC,QAAQA,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;IAC5C,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;IAC5B,KAAK;IACL,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;IACzC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,SAAS,EAAE;IAChE,IAAIC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC5C,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,IAAE,OAAO,QAAQ,GAAC;IACjE,IAAID,IAAM,eAAe,GAAG,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;IACrE,IAAI,IAAI,CAAC,eAAe,IAAE,OAAO,IAAI,GAAC;IACtC,IAAIA,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IACvC,IAAI,QAAQ,GAAG,eAAe,CAAC,GAAG,WAAC,gBAAS,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAC,CAAC,CAAC;IAClE,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;IACxC,IAAI,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IAChD,IAAI,OAAO,QAAQ,CAAC;IACpB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,mBAAmB,GAAG,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7E,IAAIA,IAAM,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IACzD,IAAIA,IAAM,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACxD,IAAI,OAAO,UAAU,GAAG,WAAW,CAAC;IACpC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,WAAW,EAAE,QAAQ,EAAE;;AAAC;IAC1E,IAAIC,IAAI,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC3E,IAAI,QAAQ,gBAAgB;IAC5B,QAAQ,KAAK,IAAI;IACjB,YAAY,iBAAO,qBAAc,yBAAyB,CAAC,KAAK;IAChE,gBAAgBQ,MAAI,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC;IAC5C,gBAAa,CAAC;IACd,QAAQ,KAAK,IAAI;IACjB,YAAY,iBAAO,qBAAc,yBAAyB,CAAC,KAAK;IAChE,gBAAgBA,MAAI,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC;IAC5C,gBAAa,CAAC;IACd,QAAQ,KAAK,IAAI;IACjB,YAAY,iBAAO,wBAAiB,2BAA2B,CAAC,KAAK;IACrE,gBAAgBA,MAAI,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC;IAC/C,gBAAa,CAAC;IACd,QAAQ,KAAK,IAAI;IACjB,YAAY,iBAAO,wBAAiB,2BAA2B,CAAC,KAAK;IACrE,gBAAgBA,MAAI,EAAE,CAAC,aAAa,EAAE,QAAQ,CAAC;IAC/C,gBAAa,CAAC;IACd,QAAQ,KAAK,IAAI;IACjB,YAAY,iBAAO,qBAAc,gCAAgC,CAAC,KAAK;IACvE,gBAAgBA,MAAI,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC;IAC5C,gBAAa,CAAC;IACd,QAAQ;IACR,YAAY,MAAM,IAAI,KAAK;IAC3B,gBAAgB,kBAAe,WAAW,CAAC,WAAU,QAAK;IAC1D,gBAAgB,mBAAgB,QAAQ,CAAC,YAAW,MAAG;IACvD,gBAAgB,sBAAsB;IACtC,aAAa,CAAC;IACd,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,KAAK,EAAE;IACxD,IAAIR,IAAI,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;IAC5C,IAAIA,IAAI,YAAY,GAAG,aAAa,CAAC,KAAK,CAAC;IAC3C,IAAID,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;IACpC,QAAQ,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM;IAC5C,KAAK,CAAC,CAAC;IACP,IAAI,IAAI,CAAC,OAAO,IAAE,OAAO,IAAI,KAAK;IAClC,QAAQ,YAAS,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAE,OAAI;IAChD,QAAQ,+BAA4B,KAAK,CAAC,IAAG,OAAI;IACjD,QAAQ,kBAAe,KAAK,CAAC,OAAM,OAAI;IACvC,KAAK,GAAC;IACN,IAAIA,IAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IACpD,IAAIA,IAAM,aAAa,GAAG,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IAC3D,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC7C,QAAQD,IAAM,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACvC,QAAQA,IAAM,SAAS,GAAG,IAAI,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAAC;IAC/D,QAAQ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACnD,YAAYD,IAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC1C,YAAYA,IAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IAC9E,YAAYA,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;IACvE,YAAYC,IAAI,uBAAY,CAAC;IAC7B,YAAY,QAAQ,SAAS;IAC7B,gBAAgB,KAAK,IAAI;IACzB,oBAAoB,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACjE,oBAAoB,IAAI,YAAY,EAAE;IACtC,wBAAwB,aAAa,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,IAAI,kBAAkB,CAAC;IACrF,4BAA4B,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,gBAAE,YAAY;IAChE,yBAAyB,CAAC,CAAC,CAAC;IAC5B,qBAAqB;IACrB,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,IAAI;IACzB,oBAAoB,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACjE,oBAAoB,IAAI,YAAY,EAAE;IACtC,wBAAwB,aAAa,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,IAAI,kBAAkB,CAAC;IACrF,4BAA4B,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,gBAAE,YAAY;IAChE,yBAAyB,CAAC,CAAC,CAAC;IAC5B,qBAAqB;IACrB,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,IAAI;IACzB,oBAAoB,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;IACzD,oBAAoB,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,YAAY,CAAC,MAAM,EAAE;IAC5E,wBAAwB,aAAa,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,IAAI,kBAAkB,CAAC;IACrF,4BAA4B,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,gBAAE,YAAY;IAChE,yBAAyB,CAAC,CAAC,CAAC;IAC5B,qBAAqB;IACrB,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,IAAI;IACzB,oBAAoB,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,CAAC;IACzD,oBAAoB,IAAI,YAAY,EAAE;IACtC,wBAAwB,aAAa,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,IAAI,kBAAkB,CAAC;IACrF,4BAA4B,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,gBAAE,YAAY;IAChE,yBAAyB,CAAC,CAAC,CAAC;IAC5B,qBAAqB;IACrB,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,IAAI;IACzB,oBAAoB,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;IACjE,oBAAoB,IAAI,YAAY,EAAE;IACtC,wBAAwB,aAAa,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,EAAE,IAAI,kBAAkB,CAAC;IACrF,4BAA4B,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,gBAAE,YAAY;IAChE,yBAAyB,CAAC,CAAC,CAAC;IAC5B,qBAAqB;IACrB,oBAAoB,MAAM;IAC1B,aAAa;IACb,YAAY,aAAa,GAAG,IAAI,aAAa,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC;IAC3E,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,IAAE,WAAS;IAC9E,YAAY,YAAY,GAAG,IAAI,CAAC;IAChC,SAAS;IACT,KAAK;IACL,IAAI,OAAO,aAAa,CAAC,MAAM,GAAG,aAAa,GAAG,IAAI,CAAC;IACvD,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,KAAK,EAAE;IACnD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAE,OAAO,KAAK,GAAC;IACpC,IAAI,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACzC,IAAID,IAAM,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACvE,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,IAAE,OAAO,eAAe,GAAC;IAC3C,IAAIA,IAAM,gBAAgB;IAC1B,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,WAAC,kBAAW,OAAO,CAAC,GAAG,KAAK,KAAK,CAAC,MAAG,CAAC;IAC9E,KAAK,CAAC;IACN,IAAI,OAAO,eAAe,IAAI,gBAAgB,CAAC;IAC/C,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,WAAW,EAAE;IACnE,IAAI,OAAO,WAAW,CAAC,SAAS,IAAI,IAAI,CAAC;IACzC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,KAAK,EAAE;IAC3D,IAAIA,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IAClD,IAAI,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC;IAClC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,OAAO,EAAE;IAC9D;IACA,IAAI,OAAO,OAAO,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAC,KAAK,EAAE;IAC/D,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAE,OAAO,EAAE,IAAI,EAAE,mBAAmB,CAAC,GAAC;IACxD,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;IACrD,QAAQ,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC7C,KAAK;IACL,IAAIA,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACvD,IAAI,IAAI,CAAC,cAAc,IAAE;IACzB,QAAQ,EAAE,IAAI,+BAA2B,KAAK,CAAC,QAAQ,CAAC;IACxD,QAAM;IACN,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAE,OAAO,IAAI,GAAC;IACrD,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC;;IC/dF;IACA;IACA;AACA;IAGA,SAAS,oBAAoB,CAAC,aAAa,EAAE;IAC7C,IAAIA,IAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC;IACvC,IAAIA,IAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAI;IACJ;IACA,QAAQ,CAAC,QAAQ,KAAK,IAAI,IAAI,YAAY,CAAC,IAAI,CAAC;IAChD;IACA,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;IACvD,MAAM;IACN,CAAC;AACD;IACA,SAAS,kBAAkB,CAAC,aAAa,EAAE;IAC3C,IAAIA,IAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAI;IACJ;IACA,QAAQ,CAAC,QAAQ,KAAK,IAAI;IAC1B;IACA,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IACjC,MAAM;IACN,CAAC;AACD;IACA,sBAAe;IACf,IAAI,UAAU,EAAE,oBAAoB;IACpC,IAAI,QAAQ,EAAE,kBAAkB;IAChC,CAAC,CAAC;;IC9BF;IACA;IACA;AACA;IAGA,SAAS,wBAAwB,CAAC,aAAa,EAAE;IACjD,IAAIA,IAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC;IACvC,IAAIA,IAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAI;IACJ;IACA,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,oBAAoB,CAAC,IAAI,CAAC;IACzD,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC;IAC/B,MAAM;IACN,CAAC;AACD;IACA,SAAS,sBAAsB,CAAC,aAAa,EAAE;IAC/C,IAAIA,IAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAI,QAAQ,IAAI;IAChB,QAAQ,KAAK,QAAQ,KAAK,IAAI;IAC9B,YAAY,OAAO,IAAI,CAAC;IACxB,QAAQ,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;IACxE,YAAYA,IAAM,gBAAgB,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;IAC5D,YAAY,IAAI,CAAC,gBAAgB,IAAE,OAAO,IAAI,GAAC;IAC/C,YAAY,IAAI,gBAAgB,EAAE;IAClC,gBAAgBC,IAAI,eAAe,GAAG,KAAK,CAAC;IAC5C,gBAAgB,eAAe;IAC/B,oBAAoB,aAAa,CAAC,SAAS,CAAC,IAAI;IAChD,kCAAwB,YAAK,YAAY,CAAC,CAAC,CAAC,IAAI,oBAAoB,CAAC,CAAC,IAAC;IACvE,qBAAqB;IACrB,iBAAiB,CAAC;IAClB,gBAAgB,IAAI,CAAC,eAAe,IAAE,OAAO,IAAI,GAAC;IAClD,aAAa;IACb,YAAY,MAAM;IAClB,QAAQ;IACR,YAAY,OAAO,KAAK,CAAC;IACzB,KAAK;IACL,CAAC;AACD;IACA,0BAAe;IACf,IAAI,UAAU,EAAE,wBAAwB;IACxC,IAAI,QAAQ,EAAE,sBAAsB;IACpC,CAAC,CAAC;;ICxCF;IACA;IACA;IACA;IACA;IACA;IACA,SAASU,2BAAyB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;IAC1D,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;IAC5D,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAASC,2BAAyB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;IAC1D,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;IAC5D,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAASC,6BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;IAC5D,IAAI,MAAM,CAAC,YAAY,CAAC,OAAO,WAAE,KAAK,EAAE,MAAM,EAAK;IACnD,QAAQb,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC;IAC7C,QAAQ,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC1C,KAAK,CAAC,CAAC;IACP,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAASc,6BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;IAC5D,IAAIb,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9B,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IAC7D,IAAID,IAAM,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC;IAC7D,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;IACzC,QAAQ,KAAK,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,QAAQ,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACxC,KAAK;IACL,CAAC;AACD;IACA;IACA;IACA;IACAD,IAAM,aAAa,GAAG;IACtB,IAAI,EAAE,EAAEW,2BAAyB;IACjC,IAAI,EAAE,EAAEC,2BAAyB;IACjC,IAAI,EAAE,EAAEC,6BAA2B;IACnC,IAAI,EAAE,EAAEC,6BAA2B;IACnC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;IAClD,IAAI,IAAI,MAAM,YAAY,kBAAkB,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;IAC1E,QAAQ,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IACxD,KAAK;IACL,CAAC;;ICvED;IACA;IACA;AACA;IAMA;IACA;IACA;IACA;IACA,SAAS,eAAe,CAAC,iBAAiB,EAAE;IAC5C,IAAIb,IAAI,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;IAC3D,IAAI,KAAKA,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACpD,QAAQD,IAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IACtC,QAAQA,IAAM,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IACxD,QAAQA,IAAM,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IACxD,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC,QAAQ,IAAE,OAAO,IAAI,GAAC;IAChD,QAAQ,IAAI,QAAQ,IAAE,OAAO,KAAK,GAAC;IACnC,KAAK;IACL,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,eAAe,CAAC,iBAAiB,EAAE;IAC5C,IAAI,IAAI,oBAAoB,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAE,OAAO,KAAK,GAAC;IACtE,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjE,QAAQD,IAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACxD,QAAQA,IAAM,QAAQ,GAAG,oBAAoB,CAAC,QAAQ,CAAC,CAAC;IACxD,QAAQ,IAAI,CAAC,QAAQ,IAAE,OAAO,IAAI,GAAC;IACnC,KAAK;IACL,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,uBAAuB,CAAC,KAAK,EAAE;;AAAC;IACzC,IAAIA,IAAM,MAAM,GAAG,MAAM,CAAC;IAC1B,IAAIA,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC3C,IAAIA,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACxD,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAE,SAAO;IACpC,IAAIC,IAAI,aAAa,GAAG,IAAI,aAAa;IACzC,QAAQ,MAAM,CAAC,GAAG,WAAC,gBAAS,KAAK,CAAC,QAAQ,CAAC,YAAY,IAAC;IACxD,KAAK,EAAE,CAAC,CAAC,CAAC;IACV,IAAID,IAAM,iBAAiB,GAAG,IAAI,aAAa;IAC/C,QAAQ,MAAM,CAAC,GAAG,WAAC,gBAAS,KAAK,CAAC,OAAI;IACtC,KAAK,EAAE,CAAC,CAAC,CAAC;IACV,IAAI,MAAM,CAAC,OAAO,WAAE,KAAK,EAAE,KAAK,EAAK;IACrC,QAAQ,IAAI,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,IAAE,SAAO;IACrD,QAAQ,aAAa,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC7C,QAAQ,iBAAiB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IACjD,QAAQC,IAAI,OAAO,GAAG,CAAC,CAAC;IACxB,QAAQ,IAAI,eAAe,CAAC,iBAAiB,CAAC,IAAE,OAAO,IAAI,CAAC,GAAC;IAC7D,QAAQ,IAAI,eAAe,CAAC,iBAAiB,CAAC,IAAE,OAAO,IAAI,CAAC,GAAC;IAC7D,QAAQA,IAAI,GAAG,CAAC;IAChB,QAAQ,QAAQ,OAAO;IACvB,YAAY,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,EAAE,CAAC,MAAM;IAC1C,YAAY,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,EAAE,CAAC,MAAM;IAC1C,YAAY,KAAK,CAAC,EAAE,CAAC,GAAG,GAAG,MAAM,EAAE,CAAC,MAAM;IAC1C,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAE,SAAO;IAC7C,QAAQA,IAAI,aAAa,GAAGQ,MAAI,CAAC,KAAK,CAAC,aAAa,CAAC;IACrD,iBAAY,GAAG,UAAE,MAAM,iBAAE,aAAa;IACtC,SAAS,CAAC,CAAC;IACX,QAAQ,IAAI,aAAa,YAAY,KAAK,IAAE,OAAO,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAC;IACvF,QAAQ,aAAa,CAAC,OAAO,WAAE,MAAM,EAAE,KAAK,EAAK;IACjD,YAAY,IAAI,MAAM,YAAY,kBAAkB,EAAE;IACtD,gBAAgB,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;IACzD,gBAAgB,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC;IACnE,aAAa;IACb,SAAS,CAAC,CAAC;IACX,KAAK,CAAC,CAAC;IACP,CAAC;;IC/ED;IACA;IACA;AACA;IAIA;IACA;IACA;IACA;IACA;IACA,SAAS,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE;IACzC,IAAIT,IAAM,OAAO,GAAG,MAAM,CAAC,GAAG,WAAC,gBAAS,KAAK,CAAC,WAAW,CAAC,QAAK,CAAC,CAAC;IACjE,IAAI,OAAO,IAAI,aAAa,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;IAClD,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,uBAAuB,CAAC,KAAK,EAAE;;AAAC;IACzC,IAAIA,IAAM,MAAM,GAAG,MAAM,CAAC;IAC1B,IAAIC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACtD,IAAIA,IAAI,aAAa,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;IACjD,IAAI,aAAa,CAAC,OAAO,CAAC,OAAO,WAAE,UAAU,EAAE,KAAK,EAAK;IACzD,QAAQ,aAAa,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC7C,QAAQA,IAAI,aAAa,GAAGQ,MAAI,CAAC,KAAK,CAAC,aAAa,CAAC;IACrD,YAAY,GAAG,EAAE,MAAM,UAAE,MAAM,iBAAE,aAAa;IAC9C,SAAS,CAAC,CAAC;IACX,QAAQ,IAAI,aAAa,CAAC,MAAM,EAAE;IAClC,YAAY,aAAa,CAAC,OAAO;IACjC,0BAAgB,iBAAU,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,IAAC;IAClE,aAAa,CAAC;IACd,YAAY,aAAa,GAAG,gBAAgB,CAAC,MAAM,CAAC,CAAC;IACrD,SAAS;IACT,KAAK,CAAC,CAAC;IACP,CAAC;;ICrCD;IACA;IACA;AACA;IAGA,SAAS,mBAAmB,CAAC,aAAa,EAAE;IAC5C,IAAIT,IAAM,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC;IACvC,IAAIA,IAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAI;IACJ;IACA,QAAQ,CAAC,QAAQ,KAAK,IAAI,IAAI,WAAW,CAAC,IAAI,CAAC;IAC/C;IACA,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,WAAW,CAAC,IAAI,CAAC,CAAC;IACrD,MAAM;IACN,CAAC;AACD;IACA,SAAS,iBAAiB,CAAC,aAAa,EAAE;IAC1C,IAAIA,IAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAI;IACJ;IACA,QAAQ,CAAC,QAAQ,KAAK,IAAI;IAC1B;IACA,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IAChC,MAAM;IACN,CAAC;AACD;IACA,qBAAe;IACf,IAAI,UAAU,EAAE,mBAAmB;IACnC,IAAI,QAAQ,EAAE,iBAAiB;IAC/B,CAAC,CAAC;;IC9BF;IACA;IACA;AACA;IAIA;IACA;IACA;IACA;IACA;IACA,SAASe,kBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE;IACzC,IAAIf,IAAM,OAAO,GAAG,MAAM,CAAC,GAAG,WAAC,gBAAS,KAAK,CAAC,WAAW,CAAC,QAAK,CAAC,CAAC;IACjE,IAAI,OAAO,IAAI,aAAa,CAAC,OAAO,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC;IAClD,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,aAAa,CAAC,KAAK,EAAE;;AAAC;IAC/B,IAAIA,IAAM,MAAM,GAAG,MAAM,CAAC;IAC1B,IAAIC,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACtD,IAAIA,IAAI,aAAa,GAAGc,kBAAgB,CAAC,MAAM,CAAC,CAAC;IACjD,IAAI,aAAa,CAAC,OAAO,CAAC,OAAO,WAAE,UAAU,EAAE,KAAK,EAAK;IACzD,QAAQ,aAAa,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAC7C,QAAQd,IAAI,aAAa,GAAGQ,MAAI,CAAC,KAAK,CAAC,aAAa,CAAC;IACrD,YAAY,GAAG,EAAE,MAAM,UAAE,MAAM,iBAAE,aAAa;IAC9C,SAAS,CAAC,CAAC;IACX,QAAQ,IAAI,aAAa,CAAC,MAAM,EAAE;IAClC,YAAY,aAAa,CAAC,OAAO;IACjC,0BAAgB,iBAAU,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,IAAC;IAClE,aAAa,CAAC;IACd,YAAY,aAAa,GAAGM,kBAAgB,CAAC,MAAM,CAAC,CAAC;IACrD,SAAS;IACT,KAAK,CAAC,CAAC;IACP,CAAC;;ICrCD;IACA;IACA;IACA;AACA;IAUA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,OAAO,EAAE;IACvB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,KAAK,CAAC;IACpC,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,SAAS,EAAE,CAAC;IACrC,IAAI,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE;IACzC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,aAAa,IAAI;IAChC,oBAAI,cAAc;IAClB,qBAAI,eAAe;IACnB,yBAAI,mBAAmB;IACvB,CAAC,CAAC,CAAC;AACH;IACA;IACA;IACA;IACA,SAAS,sBAAsB,CAAC,OAAO,EAAE;IACzC,IAAIf,IAAM,KAAK,GAAG,IAAI,CAAC,aAAa,EAAI,OAAO,YAAQ,CAAC;IACxD,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,sBAAsB;IAChD,QAAQ,OAAO,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ;IACjD,KAAK,CAAC;IACN,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,YAAY,GAAG;IACxB,IAAI,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;IACnD,IAAI,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IACpD,IAAI,sBAAsB,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;IACxD,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,SAAS,sBAAsB,GAAG;;AAAC;IACnC,IAAIA,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;IACrE,IAAI,MAAM,CAAC,OAAO,WAAC,OAAS;IAC5B,QAAQC,IAAI,WAAW,GAAGQ,MAAI,CAAC,SAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/D,QAAQA,MAAI,CAAC,SAAS,CAAC,YAAY;IACnC,YAAY,KAAK,CAAC,UAAU;IAC5B,YAAY,KAAK,CAAC,SAAS;IAC3B,YAAY,WAAW,CAAC,OAAO,EAAE;IACjC,SAAS,CAAC;IACV,KAAK,CAAC,CAAC;IACP,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,MAAM,EAAE,IAAI,EAAE;;AAAC;IAC3D,IAAIT,IAAM,aAAa,GAAG,IAAI,CAAC,MAAM;IACrC,kBAAQ,cAAOS,MAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAC,MAAM,OAAE,GAAG,CAAC,IAAC;IACjD,KAAK,CAAC;IACN,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;IACnD,QAAQ,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,aAAa,CAAC;IAClD,KAAK,MAAM;IACX,QAAQ,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC;IACjC,QAAQ,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACxD,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,IAAI,EAAE,QAAQ,EAAE;IACzD,IAAI,IAAI,CAAC,IAAI,IAAE,MAAM,IAAI,KAAK;IAC9B,QAAQ,8CAA8C;IACtD,KAAK,GAAC;IACN,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAE,IAAI,CAAC,KAAK,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,GAAC;IACzD,IAAI,KAAKR,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC9C,QAAQD,IAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,IAAE,WAAS;IACrE,QAAQ,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;IAC5D,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE;IAC7E,IAAI,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,UAAU,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;IACrE,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA,SAAS,qBAAqB,GAAG;IACjC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE;IACzE,QAAQ,MAAM,IAAI,KAAK;IACvB,YAAY,2CAA2C;IACvD,YAAY,+BAA+B;IAC3C,SAAS,CAAC;IACV,KAAK;IACL,CAAC;AACD;IACA;IACA;IACA;IACA,SAAS,4BAA4B,GAAG;;AAAC;IACzC,IAAIA,IAAM,MAAM,GAAG,MAAM,CAAC;IAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,IAAE,SAAO;IAC1D,IAAI,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,IAAIA,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;IACjE,IAAI,MAAM,CAAC,OAAO,WAAC,OAAS;IAC5B,QAAQ,uBAAuB,CAAC,IAAI,CAACS,MAAI,EAAE,KAAK,CAAC,CAAC;IAClD,KAAK,CAAC,CAAC;IACP,CAAC;AACD;IACA;IACA;IACA;IACA,SAAS,2BAA2B,GAAG;;AAAC;IACxC,IAAIT,IAAM,MAAM,GAAG,MAAM,CAAC;IAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,IAAE,SAAO;IAC1D,IAAIA,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC3C,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAE,SAAO;IAC5C,IAAI,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,IAAIA,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;IACjE,IAAI,MAAM,CAAC,OAAO,WAAC,OAAS;IAC5B,QAAQ,uBAAuB,CAAC,IAAI,CAACS,MAAI,EAAE,KAAK,CAAC,CAAC;IAClD,KAAK,CAAC,CAAC;IACP,CAAC;AACD;IACA;IACA;IACA;IACA,SAAS,mBAAmB,GAAG;;AAAC;IAChC,IAAIT,IAAM,MAAM,GAAG,MAAM,CAAC;IAC1B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,IAAE,SAAO;IAC1D,IAAIA,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IAC3C,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAE,SAAO;IAC5C,IAAI,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,IAAIA,IAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;IAChE,IAAI,MAAM,CAAC,OAAO,WAAC,OAAS;IAC5B,QAAQ,aAAa,CAAC,IAAI,CAACS,MAAI,EAAE,KAAK,CAAC,CAAC;IACxC,KAAK,CAAC,CAAC;IACP,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,SAAS,EAAE;IACxD,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,uBAAuB,GAAG,YAAY;IACrD,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,EAAE;IAC9C,QAAQ,4BAA4B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChD,QAAQ,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/C,KAAK;IACL,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,EAAE;IAC7C,QAAQ,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,KAAK;IACL,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,EAAE;IAClD,QAAQ,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1C,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,IAAI,EAAE;IAC5C,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;IAC1C,QAAQ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC3B,QAAQ,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,QAAQ,IAAI,CAAC,uBAAuB,EAAE,CAAC;IACvC,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,IAAI,EAAE;IAC7C,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC3B,IAAI,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IACpC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,IAAI,EAAE;IAC/C,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC3B,IAAIR,IAAI,OAAO,GAAG,EAAE,CAAC;IACrB,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC3D,QAAQD,IAAM,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/C,QAAQ,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,IAAE,WAAS;IAC1C,QAAQA,IAAM,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC;IAC9C,QAAQ,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;IAC9D,KAAK;IACL,IAAI,OAAO,OAAO,CAAC;IACnB,CAAC,CAAC;;IChPF;AACA;IAWA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,OAAO,EAAE;IACvB,IAAI,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;IAC5B,IAAI,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC;AAC1C;IACA,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;IACxB;IACA,QAAQ,aAAa,CAAC,OAAO,CAAC,UAAU,EAAE,0DAA0D,CAAC,CAAC;IACtG,QAAQ,aAAa,CAAC,OAAO,CAAC,SAAS,EAAE,yDAAyD,CAAC,CAAC;IACpG,QAAQ,aAAa,CAAC,OAAO,CAAC,UAAU,EAAE,0DAA0D,CAAC,CAAC;IACtG,QAAQ,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,wDAAwD,CAAC,CAAC;IAClG,QAAQ,aAAa,CAAC,OAAO,CAAC,SAAS,IAAI,CAAC,EAAE,wEAAwE,CAAC,CAAC;AACxH;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG;IACrB,YAAY,UAAU,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,UAAU,IAAI,GAAG,CAAC;IACvD,YAAY,aAAa,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,SAAS,IAAI,GAAG,CAAC;IACzD,YAAY,QAAQ,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC,UAAU,GAAG,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC;IAC5F;IACA,YAAY,cAAc,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,cAAc,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACvH,YAAY,QAAQ,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,QAAQ,IAAI,GAAG,CAAC;IACnD,YAAY,WAAW,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,WAAW,IAAI,GAAG,CAAC;IACzD,YAAY,YAAY,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,YAAY,IAAI,GAAG,CAAC;IAC3D,YAAY,eAAe,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,eAAe,IAAI,GAAG,CAAC;IACjE,YAAY,OAAO,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,IAAI,GAAG,CAAC;IACjD,YAAY,UAAU,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,UAAU,IAAI,GAAG,CAAC;IACvD,YAAY,OAAO,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,IAAI,aAAa,CAAC;IAC3D,YAAY,WAAW,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,WAAW,IAAI,GAAG,CAAC;IACzD,YAAY,SAAS,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,SAAS,IAAI,GAAG,CAAC;IACrD,YAAY,SAAS,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,SAAS,IAAI,GAAG,CAAC;IACrD,SAAS,CAAC;IACV,QAAQ,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC;IACrD,QAAQ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;IACzC,QAAQ,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;IAC3C,QAAQ,IAAI,CAAC,gBAAgB,GAAG,OAAO,CAAC,gBAAgB,CAAC;IACzD,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE;IACpD,YAAY,GAAG,EAAE,MAAM,CAAC,MAAM,CAAC;IAC/B,gBAAgB,aAAa,EAAE,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM;IACjF,gBAAgB,YAAY,EAAE,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM;IAC9E,gBAAgB,WAAW,EAAE,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,iBAAiB,CAAC,OAAO;IAClF,aAAa,EAAE,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC;IAClC,SAAS,CAAC,CAAC;IACX,KAAK;AACL;IACA,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;IACpE,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC;IAC9C,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC;IACvC,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC;IAC/C,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;AACpC;IACA;IACA,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,IAAI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;AAC7B;IACA,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE;IAC3C,QAAQ,GAAG,EAAE,WAAW;IACxB,YAAY,IAAI,IAAI,CAAC,QAAQ,IAAE,OAAO,IAAI,CAAC,QAAQ,GAAC;IACpD,YAAY,IAAI,IAAI,CAAC,cAAc,KAAK,UAAU,EAAE;IACpD,gBAAgB,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAIgB,OAAe,CAAC,IAAI,CAAC,EAAE;IACnE,aAAa;IACb,SAAS;IACT,KAAK,CAAC,CAAC;IACP,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC,EAAE;IACrC,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC;IACtD,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAS,CAAC,EAAE;IAC9C,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,CAAC,EAAE;IACzC,IAAIhB,IAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAChD,IAAIC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC5C,IAAI,IAAI,CAAC,KAAK,EAAE;IAChB;IACA,QAAQ,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnC,KAAK;AACL;IACA,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,OAAO,EAAE;IACnD;IACA,IAAI,OAAO,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,GAAG,WAAC,SAAW;IAC7D,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE;IACvC,YAAY,OAAO;IACnB,gBAAgB,MAAM,EAAE,MAAM;IAC9B,gBAAgB,IAAI,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,WAAC,cAAO,OAAO,CAAC,GAAG,IAAC,CAAC;IAC9D,aAAa,CAAC;IACd,SAAS,MAAM;IACf,YAAY,OAAO,OAAO,CAAC;IAC3B,SAAS;IACT,KAAK,CAAC,CAAC;IACP,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,SAAS,CAAC,EAAE,OAAO,EAAE;;AAAC;AACtD;IACA,IAAID,IAAM,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;AAC5B;IACA;IACA,IAAIA,IAAM,mBAAmB,aAAG,gBAASS,MAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,IAAC,CAAC;IAC3E,IAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,EAAE,mBAAmB,CAAC,CAAC;AACnE;IACA;IACA,IAAIR,IAAI,QAAQ,GAAG,OAAO;IAC1B,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC;IACzC,IAAI,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC;AACvC;IACA,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;AACvC;IACA,IAAID,IAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAC1C;IACA,IAAIC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAChC;IACA;IACA,IAAID,IAAM,MAAM,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC;IACrC,IAAIA,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtC,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACxC,QAAQ,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;IAC1D,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAS,IAAI,EAAE;IACjD,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,IAAI,EAAE;IAC5C,IAAID,IAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACnD,IAAIC,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC5C,IAAI,IAAI,CAAC,KAAK,EAAE;IAChB;IACA,QAAQ,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnC,KAAK;AACL;IACA,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAS,GAAG,EAAE;IAChD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE;IAC3C,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK;AACL;IACA,IAAI,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACjD,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,SAAS,EAAE,UAAU,EAAE;IACjE,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC;IAC7C,IAAI,UAAU,GAAG,UAAU,CAAC,KAAK,IAAI,UAAU,CAAC;IAChD,IAAID,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC;IAC3D,IAAI,IAAI,WAAW,EAAE;IACrB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IACjF,KAAK;IACL;IACA,IAAI,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,GAAG,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,oBAAoB,GAAG;IACtC,IAAI,OAAO,EAAE,IAAI;IACjB,IAAI,QAAQ,EAAE;IACd;IACA;IACA;IACA;IACA,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE;IAClE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,EAAE;IAClD,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE;IAChF,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC,IAAI,CAAC,GAAG,CAAC,KAAK,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC,IAAI,QAAQ,GAAG,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,EAAE,CAAC;IACtD,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;IACpE,IAAIA,IAAM,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;IACrD,IAAIA,IAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACtD,IAAIC,IAAI,cAAc,CAAC;IACvB,IAAI,IAAI,OAAO,CAAC,OAAO,EAAE;IACzB,QAAQD,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,oBAAoB,EAAE,CAAC;IAC9E,QAAQ,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;IAClF,KAAK;IACL,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC/C,QAAQD,IAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAChC,QAAQ,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC5D,QAAQ,IAAI,KAAK,CAAC,YAAY,EAAE;IAChC,YAAY,CAAC,IAAI,KAAK,CAAC,YAAY,GAAG,SAAS,CAAC;IAChD,SAAS;AACT;IACA,QAAQ,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;IACtD;IACA;IACA,YAAYA,IAAM,YAAY,GAAG,cAAc;IAC/C,kBAAkB,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,cAAc,EAAE,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;IACjG,kBAAkB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7D,YAAY,CAAC,IAAI,YAAY,GAAG,SAAS,CAAC;IAC1C,SAAS;AACT;IACA,QAAQ,IAAI,OAAO,CAAC,aAAa,EAAE;IACnC,YAAY,CAAC,IAAI,OAAO,CAAC,aAAa,GAAG,QAAQ,CAAC;IAClD,SAAS,MAAM,IAAI,OAAO,CAAC,QAAQ,EAAE;IACrC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,IAAI,QAAQ,CAAC;IACtD,SAAS;IACT,KAAK;IACL,IAAI,OAAO,CAAC,CAAC;IACb,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE;IACjE,IAAIA,IAAM,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC;IAChC,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE;IACxF,QAAQA,IAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IAC1E,QAAQ,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACnC,KAAK,CAAC,CAAC;IACP,IAAI,OAAO,QAAQ,CAAC;IACpB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE;IAClE,IAAIA,IAAM,UAAU,GAAG,EAAE,CAAC;IAC1B,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE;IACxF,QAAQA,IAAM,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;IAC1E,QAAQ,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACnC,KAAK,CAAC,CAAC;AACP;IACA,IAAI,OAAO,UAAU,CAAC;IACtB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,SAAS,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE;IACnE,IAAI,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC,CAAC;IAC3E,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE;IACnE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC1D,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE;IACzE,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE;IACxF,QAAQ,KAAK,CAAC,UAAU,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;IACjD,KAAK,CAAC,CAAC;IACP,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE;IAC1E,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE;IACxF,QAAQ,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,CAAC,CAAC;IAClD,KAAK,CAAC,CAAC;IACP,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,SAAS,IAAI,EAAE;IAC/C,IAAIA,IAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC1C,IAAI,IAAI,YAAY,EAAE;IACtB,QAAQ,OAAO,YAAY,CAAC,EAAE,CAAC;IAC/B,KAAK;IACL,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;IAErC,IAAIA,IAAM,KAAK,GAAG,IAAI,CAAC;AACvB;IACA,IAAI,SAAS,MAAM,CAAC,SAAS,EAAE,OAAO,EAAE;IAIxC,KAAK;AACL;IACA,IAAI,SAAS,iBAAiB,CAAC,IAAI,EAAE;IACrC,QAAQA,IAAM,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACvD,QAAQ,MAAM,CAAC,WAAW,IAAI,WAAW,CAAC,IAAI,EAAE,CAAC,MAAM,GAAG,CACP,CAAC,CAAC;IACrD,KAAK;AACL;IACA;IACA,IAAI,iBAAiB,CAAC,YAAY,CAAC,CAAC;IACpC,IAAI,iBAAiB,CAAC,YAAY,CAAC,CAAC;IACpC,IAAI,iBAAiB,CAAC,cAAc,CAAC,CAAC;IACtC,IAAI,iBAAiB,CAAC,WAAW,CAAC,CAAC;IACnC,IAAI,iBAAiB,CAAC,SAAS,CAAC,CAAC;AACjC;IACA;IACA,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAA6B,CAAC;IAC5D,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;IACrC,IAAI,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC,CAAC;IACF;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,WAAW;IACrC,IAAI,OAAO,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;IACjF,IAAI,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;IAChC,CAAC,CAAC;IACF;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,WAAW;IAC1C,IAAIA,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IACtC,IAAIA,IAAM,KAAK,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC;IACrC,IAAIA,IAAM,MAAM,GAAG,IAAI,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACjD,IAAIA,IAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC;IAC5C,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC3C,QAAQ,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/B,KAAK;AACL;IACA,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,EAAE;IAC7C,IAAID,IAAM,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IACzD,IAAIA,IAAM,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAC3D,IAAI,QAAQ,GAAG,QAAQ,IAAI,UAAU,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,GAAG,GAAG,SAAS,GAAG,MAAM,CAAC;IACpF,IAAIA,IAAM,WAAW,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAC7C;IACA,IAAI,IAAI,SAAS,EAAE,EAAE;IACrB,QAAQ,MAAM,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC;AACpD;IACA,QAAQ,IAAI,MAAM,CAAC,GAAG,EAAE;IACxB,YAAYA,IAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,WAAW,CAAC,CAAC;IACvD,YAAYA,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC,CAAC;AACvE;IACA,YAAYC,IAAI,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACnD,YAAY,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IACzD,YAAY,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACrC;IACA,YAAYA,IAAI,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAC5D,YAAY,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IAClD,YAAY,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACtC,SAAS,MAAM;IACf,YAAY,OAAO,CAAC,IAAI,CAAC,mEAAmE,CAAC,CAAC;IAC9F,SAAS;IACT,KAAK,MAAM;IACX,QAAQD,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IACjC,QAAQA,IAAM,MAAM,GAAG,uBAAuB,CAAC,WAAW,CAAC,CAAC;IAC5D,QAAQ,EAAE,CAAC,aAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC3C,KAAK;IACL,CAAC,CAAC;IACF;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG;IACnC,IAAI,MAAM,eAAe,KAAK;IAC9B,IAAI,UAAU,WAAW,KAAK;IAC9B,IAAI,QAAQ,aAAa,KAAK;IAC9B,IAAI,QAAQ,aAAa,KAAK;IAC9B,IAAI,SAAS,YAAY,KAAK;IAC9B,IAAI,IAAI,iBAAiB,KAAK;IAC9B,IAAI,OAAO,cAAc,KAAK;IAC9B,IAAI,iBAAiB,IAAI,KAAK;IAC9B,IAAI,GAAG,kBAAkB,KAAK;IAC9B,IAAI,OAAO,cAAc,KAAK;IAC9B,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG;IAChC,IAAI,eAAe,EAAE,CAAC;IACtB,IAAI,eAAe,EAAE,CAAC;IACtB,IAAI,SAAS,EAAE,CAAC;IAChB,IAAI,cAAc,EAAE,CAAC;IACrB,IAAI,MAAM,EAAE,CAAC;IACb,IAAI,aAAa,EAAE,CAAC;IACpB,IAAI,QAAQ,EAAE,CAAC;IACf,IAAI,cAAc,EAAE,CAAC;IACrB,IAAI,cAAc,EAAE,CAAC;IACrB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG;IACjC,IAAI,IAAI,EAAE,GAAG;IACb,IAAI,WAAW,EAAE,GAAG;IACpB,IAAI,KAAK,EAAE,GAAG;IACd,IAAI,MAAM,EAAE,GAAG;IACf,IAAI,MAAM,EAAE,GAAG;IACf,IAAI,SAAS,EAAE,GAAG;IAClB,IAAI,IAAI,EAAE,GAAG;IACb,IAAI,UAAU,EAAE,GAAG;IACnB,IAAI,KAAK,KAAK,GAAG;IACjB,CAAC,CAAC;;ICvkBF;AACA;IAMA,SAAS,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE;IAC9B,IAAIA,IAAM,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC5C,IAAIC,IAAI,MAAM,GAAG,GAAG,CAAC;IACrB,IAAI,KAAKA,IAAI,OAAO,IAAI,KAAK,EAAE;IAC/B,QAAQA,IAAI,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;IAClC,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE;IAC3B,YAAY,SAAS;IACrB,SAAS;AACT;IACA,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,UAAU,EAAE;IAC3D,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;AACT;IACA,QAAQ,IAAI,MAAM,IAAI,CAAC,EAAE;IACzB,YAAY,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3B,SAAS;IACT,KAAK;AACL;IACA,IAAI,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;IACzB,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AACD;IACA,SAAS,YAAY,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IACtC,IAAID,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC7C,IAAI,OAAO;IACX,QAAQ,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC;IACxD,QAAQ,CAAC,IAAI,EAAE,WAAW,GAAG,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;IAC1E,QAAQ,CAAC,IAAI,EAAE,eAAe,GAAG,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,IAAI,EAAE,CAAC;IAClF,QAAQ,CAAC,IAAI,EAAE,WAAW,GAAG,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;IAC1E,QAAQ,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IACtD,QAAQ,CAAC,IAAI,EAAE,SAAS,GAAG,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC;IAC5D,KAAK,CAAC;IACN,CAAC;AACD;IACA,SAAS,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;IAC3C,IAAIA,IAAM,IAAI,GAAG,EAAE,CAAC;IACpB,IAAIA,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC5C,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC5B,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACnC,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACvC,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACnC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACxB,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;IAC7C,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;AACD;IACA,SAAS,gBAAgB,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;IAChD,IAAIA,IAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC7C,IAAIA,IAAM,MAAM,GAAG;IACnB,QAAQ,CAAC,IAAI,EAAE,SAAS,GAAG,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC;IAC5D,QAAQ,CAAC,IAAI,EAAE,QAAQ,GAAG,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IACtD,KAAK,CAAC;AACN;IACA,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAC1C,QAAQD,IAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACpC,QAAQ,MAAM,CAAC,IAAI,CAAC;IACpB,YAAY,IAAI,EAAE,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,OAAO;IAC7C,YAAY,IAAI,EAAE,OAAO;IACzB,YAAY,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,EAAE;IAClD,SAAS,CAAC,CAAC;IACX,KAAK;AACL;IACA,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AACD;IACA,SAAS,iBAAiB,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;IACrD,IAAIA,IAAM,IAAI,GAAG,EAAE,CAAC;IACpB,IAAIA,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC5C,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;IAC7C,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;AACxB;IACA,IAAI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC1B,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;IAC1C,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACvD,KAAK;AACL;IACA,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;AACD;IACA,SAAS,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE;IACpC,IAAID,IAAM,MAAM,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;IAC3C,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC;IACxD,QAAQ,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IACxD,QAAQ,CAAC,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1D,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;IACpE,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,CAAC;IACrD,QAAQ,CAAC,IAAI,EAAE,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;IAC7E,QAAQ,CAAC,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAC/E,KAAK,CAAC,CAAC;IACP,IAAI,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;AAC1C;IACA,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC/C,QAAQ,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACnF,KAAK;AACL;IACA,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpD,QAAQ,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IACvG,KAAK;AACL;IACA,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AACD;IACA,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE;IAC5C,IAAID,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC5C,IAAIA,IAAM,YAAY,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACxC,IAAI,KAAK,CAAC,QAAQ,CAAC,YAAY,KAAK,UAAU,EAAE,iCAAiC,CAAC,CAAC;IACnF,IAAIA,IAAM,YAAY,GAAG,CAAC,CAAC,aAAa,EAAE,CAAC;IAC3C;IACA,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACxB,IAAIA,IAAM,SAAS,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IACtC,IAAIA,IAAM,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IACrC,IAAIA,IAAM,aAAa,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAC1C,IAAIA,IAAM,YAAY,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;AACzC;IACA,IAAIA,IAAM,IAAI,GAAG,EAAE,CAAC;IACpB,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;IACxC,QAAQ,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,GAAG,YAAY,GAAG,CAAC,GAAG,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;IACnF,KAAK;AACL;IACA,IAAID,IAAM,SAAS,GAAG,EAAE,CAAC;IACzB,IAAIA,IAAM,aAAa,GAAG,KAAK,GAAG,YAAY,GAAG,SAAS,GAAG,QAAQ,CAAC;IACtE,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAE;IAC5C,QAAQ,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,GAAG,CAAC,GAAG,YAAY,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAC/F,KAAK;AACL;IACA,IAAI,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IAC9C,CAAC;AACD;IACA,WAAe,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC;;ICvI9D;AACA;IAMAD,IAAMiB,iBAAe,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;AACtC;IACA;IACA;IACAA,iBAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG;IAC7C,IAAIjB,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;IACpD,IAAIA,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACzC,IAAI,IAAI,SAAS,KAAK,CAAC,EAAE;IACzB,QAAQ,OAAO;IACf,YAAY,SAAS,EAAE,CAAC;IACxB,YAAY,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;IACxD,YAAY,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE;IAC1C,SAAS,CAAC;IACV,KAAK,MAAM,IAAI,SAAS,KAAK,CAAC,EAAE;IAChC,QAAQ,OAAO;IACf,YAAY,SAAS,EAAE,CAAC;IACxB,YAAY,QAAQ,EAAE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC;IACxD,YAAY,MAAM,EAAE,IAAI,CAAC,oBAAoB,EAAE;IAC/C,SAAS,CAAC;IACV,KAAK;IACL,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,6CAA6C,CAAC,CAAC;IACnG,CAAC,CAAC;AACF;IACA;IACAiB,iBAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG;IAC7C,IAAIjB,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;IACpD,IAAIA,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACzC,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,KAAK,CAAC,IAAI,SAAS,KAAK,CAAC,EAAE,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,6CAA6C,CAAC,CAAC;IAChI,IAAIA,IAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACxD,IAAIA,IAAM,YAAY,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC5C,IAAIA,IAAM,YAAY,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC5C,IAAI,IAAI,SAAS,KAAK,CAAC,EAAE;IACzB;IACA,QAAQ,OAAO;IACf,YAAY,SAAS,EAAE,SAAS;IAChC,YAAY,QAAQ,EAAE,QAAQ;IAC9B,YAAY,YAAY,EAAE,YAAY;IACtC,YAAY,YAAY,EAAE,YAAY;IACtC,YAAY,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW;IAC3E,gBAAgB,OAAO;IACvB,oBAAoB,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE;IACnD,oBAAoB,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;IAC/D,oBAAoB,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;IAC/D,iBAAiB,CAAC;IAClB,aAAa,CAAC,CAAC,CAAC;IAChB,SAAS,CAAC;IACV,KAAK,MAAM,IAAI,SAAS,KAAK,CAAC,EAAE;IAChC,QAAQA,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC7D,QAAQA,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC7D,QAAQA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC/C,QAAQA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC/C,QAAQ,OAAO;IACf;IACA,YAAY,SAAS,EAAE,SAAS;IAChC,YAAY,QAAQ,EAAE,QAAQ;IAC9B,YAAY,YAAY,EAAE,YAAY;IACtC,YAAY,YAAY,EAAE,YAAY;IACtC,YAAY,SAAS,EAAE,SAAS;IAChC,YAAY,SAAS,EAAE,SAAS;IAChC,YAAY,WAAW,EAAE,WAAW;IACpC,YAAY,WAAW,EAAE,WAAW;IACpC,YAAY,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW;IAC1F,gBAAgB,OAAO;IACvB,oBAAoB,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;IAC/D,oBAAoB,MAAM,EAAE,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;IAC/D,iBAAiB,CAAC;IAClB,aAAa,CAAC,CAAC;IACf,SAAS,CAAC;IACV,KAAK;IACL,CAAC,CAAC;AACF;IACAiB,iBAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,EAAE,CAAC;IAClGA,iBAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,EAAE,CAAC;IAClGA,iBAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,EAAE,CAAC;IAClGA,iBAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,EAAE,CAAC;IAClGA,iBAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,EAAE,CAAC;IAClGA,iBAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,EAAE,CAAC;IAClGA,iBAAe,CAAC,CAAC,CAAC,GAAG,SAAS,YAAY,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,6BAA6B,EAAE,CAAC,EAAE,CAAC;AAClG;IACA;IACA,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;IACrC,IAAI,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IACvB,IAAIjB,IAAM,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACtC,IAAIA,IAAM,YAAY,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAI,KAAK,CAAC,QAAQ,CAAC,YAAY,KAAK,CAAC,IAAI,YAAY,KAAK,GAAG,EAAE,iCAAiC,GAAG,YAAY,CAAC,CAAC;AACjH;IACA,IAAI,IAAI,YAAY,KAAK,CAAC,EAAE;IAC5B,QAAQ,OAAO;IACf,YAAY,OAAO,EAAE,YAAY;IACjC,YAAY,OAAO,EAAE,CAAC,CAAC,eAAe,EAAE;IACxC,YAAY,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE;IAC1C,YAAY,OAAO,EAAE,CAAC,CAAC,eAAe,CAACiB,iBAAe,CAAC;IACvD,SAAS,CAAC;IACV,KAAK,MAAM;IACX,QAAQ,OAAO;IACf,YAAY,OAAO,EAAE,YAAY;IACjC,YAAY,OAAO,EAAE,CAAC,CAAC,eAAe,EAAE;IACxC,YAAY,QAAQ,EAAE,CAAC,CAAC,gBAAgB,EAAE;IAC1C,YAAY,OAAO,EAAE,CAAC,CAAC,eAAe,CAACA,iBAAe,CAAC;IACvD,YAAY,UAAU,EAAE,CAAC,CAAC,0BAA0B,EAAE;IACtD,SAAS,CAAC;IACV,KAAK;AACL;IACA,CAAC;AACD;IACA;IACA;IACAjB,IAAMkB,gBAAc,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;AACrC;IACA,SAAS,aAAa,CAAC,IAAI,EAAE;IAC7B,IAAI,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;IACnC,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC;IACxD,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACnF,QAAQ,CAAC,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtF,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAEA,gBAAc,CAAC,CAAC;IACnG,KAAK,CAAC,CAAC;IACP,CAAC;AACD;IACA,WAAe,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC;;IC7H9D;AACA;IAMA,SAAS,qBAAqB,CAAC,CAAC,EAAE;IAClC,IAAIlB,IAAM,KAAK,GAAG,EAAE,CAAC;IACrB;IACA,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrB,IAAIA,IAAM,eAAe,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAC5C,IAAI,KAAK,CAAC,QAAQ,CAAC,eAAe,KAAK,CAAC,EAAE,qCAAqC,CAAC,CAAC;IACjF;IACA,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACxB,IAAIA,IAAM,MAAM,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IACnC;IACA,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACxB,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACxC,QAAQD,IAAM,SAAS,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAC1C,QAAQA,IAAM,UAAU,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAC3C,QAAQA,IAAM,KAAK,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACrC,QAAQ,KAAK,CAAC,SAAS,GAAG,GAAG,GAAG,UAAU,CAAC,GAAG,KAAK,CAAC;IACpD,KAAK;IACL,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC;AACD;IACA,SAAS,iBAAiB,CAAC,CAAC,EAAE;IAC9B,IAAIA,IAAM,KAAK,GAAG,EAAE,CAAC;IACrB;IACA;IACA,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrB,IAAIA,IAAM,OAAO,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACnC;IACA,IAAI,IAAI,OAAO,GAAG,CAAC,EAAE;IACrB,QAAQ,OAAO,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;IACnE,KAAK;IACL,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpB,IAAIA,IAAM,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IACrC,IAAIA,IAAM,eAAe,GAAG,QAAQ,GAAG,IAAI,CAAC;IAC5C,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrB,IAAI,IAAI,eAAe,KAAK,CAAC,EAAE;IAC/B,QAAQA,IAAM,MAAM,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IACvC;IACA,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC5B,QAAQ,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC5C,YAAYD,IAAM,SAAS,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAC9C,YAAYA,IAAM,UAAU,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IAC/C,YAAYA,IAAM,KAAK,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IACzC,YAAY,KAAK,CAAC,SAAS,GAAG,GAAG,GAAG,UAAU,CAAC,GAAG,KAAK,CAAC;IACxD,SAAS;IACT,KAAK;IACL,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC;AACD;IACA;IACA,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE;IACrC,IAAIA,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC5C,IAAIA,IAAM,YAAY,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;IACzC,IAAI,IAAI,YAAY,KAAK,CAAC,EAAE;IAC5B,QAAQ,OAAO,qBAAqB,CAAC,CAAC,CAAC,CAAC;IACxC,KAAK,MAAM,IAAI,YAAY,KAAK,CAAC,EAAE;IACnC,QAAQ,OAAO,iBAAiB,CAAC,CAAC,CAAC,CAAC;IACpC,KAAK,MAAM;IACX,QAAQ,MAAM,IAAI,KAAK,CAAC,kCAAkC,GAAG,YAAY,GAAG,IAAI,CAAC,CAAC;IAClF,KAAK;IACL,CAAC;AACD;IACA,WAAe,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC;;ICpEzC;AACA;IAIA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,YAAY,EAAE;IAC9D,IAAIA,IAAM,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC5C,IAAIA,IAAM,OAAO,GAAG,YAAY,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,UAAU,CAAC;IAChE;IACA;IACA,IAAIA,IAAM,YAAY,GAAG,EAAE,CAAC;IAC5B,IAAI,KAAKC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IAC/C,QAAQA,IAAI,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1C,QAAQ,IAAI,YAAY,EAAE;IAC1B;IACA,YAAY,WAAW,IAAI,CAAC,CAAC;IAC7B,SAAS;AACT;IACA,QAAQ,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvC,KAAK;AACL;IACA,IAAI,OAAO,YAAY,CAAC;IACxB,CAAC;AACD;IACA,WAAe,EAAE,KAAK,EAAE,cAAc,EAAE,CAAC;;IC9BzC;AACA;IAiCA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAE;IACtC,IAAID,IAAM,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IAC7B,IAAI,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,SAAS,GAAG,EAAE,MAAM,EAAE;IAC5C,QAAQ,IAAI,GAAG,EAAE;IACjB,YAAY,OAAO,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACzC,SAAS;AACT;IACA,QAAQ,QAAQ,CAAC,IAAI,EAAE,uBAAuB,CAAC,MAAM,CAAC,CAAC,CAAC;IACxD,KAAK,CAAC,CAAC;IACP,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,WAAW,CAAC,GAAG,EAAE,QAAQ,EAAE;IACpC,IAAIA,IAAM,OAAO,GAAG,IAAI,cAAc,EAAE,CAAC;IACzC,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACnC,IAAI,OAAO,CAAC,YAAY,GAAG,aAAa,CAAC;IACzC,IAAI,OAAO,CAAC,MAAM,GAAG,WAAW;IAChC,QAAQ,IAAI,OAAO,CAAC,QAAQ,EAAE;IAC9B,YAAY,OAAO,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;IACpD,SAAS,MAAM;IACf,YAAY,OAAO,QAAQ,CAAC,4BAA4B,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;IAC/E,SAAS;IACT,KAAK,CAAC;AACN;IACA,IAAI,OAAO,CAAC,OAAO,GAAG,YAAY;IAClC,QAAQ,QAAQ,CAAC,0BAA0B,CAAC,CAAC;IAC7C,KAAK,CAAC;AACN;IACA,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;IACnB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,yBAAyB,CAAC,IAAI,EAAE,SAAS,EAAE;IACpD,IAAIA,IAAM,YAAY,GAAG,EAAE,CAAC;IAC5B,IAAIC,IAAI,CAAC,GAAG,EAAE,CAAC;IACf,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,IAAI,CAAC,EAAE;IAC3C,QAAQD,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC1C,QAAQA,IAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACrD,QAAQA,IAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACnD,QAAQA,IAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;IACpD,QAAQ,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC;IAC9G,QAAQ,CAAC,IAAI,EAAE,CAAC;IAChB,KAAK;AACL;IACA,IAAI,OAAO,YAAY,CAAC;IACxB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,qBAAqB,CAAC,IAAI,EAAE,SAAS,EAAE;IAChD,IAAIA,IAAM,YAAY,GAAG,EAAE,CAAC;IAC5B,IAAIC,IAAI,CAAC,GAAG,EAAE,CAAC;IACf,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,IAAI,CAAC,EAAE;IAC3C,QAAQD,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC1C,QAAQA,IAAM,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACnD,QAAQA,IAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACvD,QAAQA,IAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;IACxD,QAAQC,IAAI,sBAAW,CAAC;IACxB,QAAQ,IAAI,UAAU,GAAG,UAAU,EAAE;IACrC,YAAY,WAAW,GAAG,MAAM,CAAC;IACjC,SAAS,MAAM;IACf,YAAY,WAAW,GAAG,KAAK,CAAC;IAChC,SAAS;AACT;IACA,QAAQ,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,WAAW;IAC7E,YAAY,gBAAgB,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC,CAAC;IAC/D,QAAQ,CAAC,IAAI,EAAE,CAAC;IAChB,KAAK;AACL;IACA,IAAI,OAAO,YAAY,CAAC;IACxB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,eAAe,CAAC,IAAI,EAAE,UAAU,EAAE;IAC3C,IAAI,IAAI,UAAU,CAAC,WAAW,KAAK,MAAM,EAAE;IAC3C,QAAQD,IAAM,QAAQ,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,UAAU,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC;IAC7G,QAAQA,IAAM,SAAS,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAC5D,QAAQmB,WAAO,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IACrC,QAAQ,IAAI,SAAS,CAAC,UAAU,KAAK,UAAU,CAAC,MAAM,EAAE;IACxD,YAAY,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,UAAU,CAAC,GAAG,GAAG,qDAAqD,CAAC,CAAC;IAC9H,SAAS;AACT;IACA,QAAQnB,IAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACvD,QAAQ,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IACvC,KAAK,MAAM;IACX,QAAQ,OAAO,CAAC,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC;IACvD,KAAK;IACL,CAAC;AACD;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,WAAW,CAAC,MAAM,EAAE,GAAG,EAAE;IAClC,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,KAAK,EAAE,GAAG,GAAG,CAAC;AAC1D;IACA,IAAIC,IAAI,gBAAgB,CAAC;IACzB,IAAIA,IAAI,SAAS,CAAC;AAClB;IACA;IACA;IACA,IAAID,IAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AACzC;IACA;IACA;IACA;IACA,IAAIA,IAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACzC,IAAIC,IAAI,SAAS,CAAC;IAClB,IAAIA,IAAI,YAAY,GAAG,EAAE,CAAC;IAC1B,IAAID,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC5C,IAAI,IAAI,SAAS,KAAK,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,SAAS,KAAK,MAAM,IAAI,SAAS,KAAK,MAAM,EAAE;IACvG,QAAQ,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;IACzC,QAAQ,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC7C,QAAQ,YAAY,GAAG,yBAAyB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAClE,KAAK,MAAM,IAAI,SAAS,KAAK,MAAM,EAAE;IACrC,QAAQ,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IACpC,QAAQ,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC7C,QAAQ,YAAY,GAAG,yBAAyB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAClE,KAAK,MAAM,IAAI,SAAS,KAAK,MAAM,EAAE;IACrC,QAAQA,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC7C,QAAQ,IAAI,MAAM,KAAK,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;IACxD,YAAY,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;IAC7C,SAAS,MAAM,IAAI,MAAM,KAAK,MAAM,EAAE;IACtC,YAAY,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;IACxC,SAAS,MAAM;IACf,YAAY,MAAM,IAAI,KAAK,CAAC,8BAA8B,GAAG,SAAS,CAAC,CAAC;IACxE,SAAS;AACT;IACA,QAAQ,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAC9C,QAAQ,YAAY,GAAG,qBAAqB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC9D,KAAK,MAAM;IACX,QAAQ,MAAM,IAAI,KAAK,CAAC,iCAAiC,GAAG,SAAS,CAAC,CAAC;IACvE,KAAK;AACL;IACA,IAAIC,IAAI,aAAa,CAAC;IACtB,IAAIA,IAAI,cAAc,CAAC;IACvB,IAAIA,IAAI,cAAc,CAAC;IACvB,IAAIA,IAAI,cAAc,CAAC;IACvB,IAAIA,IAAI,cAAc,CAAC;IACvB,IAAIA,IAAI,cAAc,CAAC;IACvB,IAAIA,IAAI,cAAc,CAAC;IACvB,IAAIA,IAAI,cAAc,CAAC;IACvB,IAAIA,IAAI,cAAc,CAAC;IACvB,IAAIA,IAAI,cAAc,CAAC;IACvB,IAAIA,IAAI,CAAC,CAAC;AACV;IACA,IAAI,KAAKA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,IAAI,CAAC,EAAE;IAC3C,QAAQD,IAAM,UAAU,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC;IAC3C,QAAQC,IAAI,gBAAK,CAAC;IAClB,QAAQ,QAAQ,UAAU,CAAC,GAAG;IAC9B,YAAY,KAAK,MAAM;IACvB,gBAAgB,KAAK,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC1D,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACxE,gBAAgB,IAAI,CAAC,QAAQ,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACnE,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,KAAK,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC1D,gBAAgB,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/D,gBAAgB,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC1E,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,cAAc,GAAG,UAAU,CAAC;IAC5C,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,KAAK,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC1D,gBAAgB,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/D,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACtE,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,KAAK,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC1D,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACxE,gBAAgB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAC9D,gBAAgB,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;IACrE,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,KAAK,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC1D,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACxE,gBAAgB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC1D,gBAAgB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC5D,gBAAgB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;IAC1E,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,cAAc,GAAG,UAAU,CAAC;IAC5C,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,KAAK,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC1D,gBAAgB,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACjE,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,KAAK,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC1D,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACxE,gBAAgB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC5D,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,cAAc,GAAG,UAAU,CAAC;IAC5C,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,KAAK,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC1D,gBAAgB,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACtE,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,KAAK,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC1D,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IACxE,gBAAgB,IAAI,CAAC,UAAU,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACnE,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,KAAK,GAAG,eAAe,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC1D,gBAAgB,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/D,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACtE,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,cAAc,GAAG,UAAU,CAAC;IAC5C,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,cAAc,GAAG,UAAU,CAAC;IAC5C,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,aAAa,GAAG,UAAU,CAAC;IAC3C,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,cAAc,GAAG,UAAU,CAAC;IAC5C,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,cAAc,GAAG,UAAU,CAAC;IAC5C,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,cAAc,GAAG,UAAU,CAAC;IAC5C,gBAAgB,MAAM;IACtB,YAAY,KAAK,MAAM;IACvB,gBAAgB,cAAc,GAAG,UAAU,CAAC;IAC5C,gBAAgB,MAAM;IACtB,SAAS;IACT,KAAK;AACL;IACA,IAAID,IAAM,SAAS,GAAG,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAC5D,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAChF,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAClC;IACA,IAAI,IAAI,cAAc,IAAI,cAAc,EAAE;IAC1C,QAAQA,IAAM,YAAY,GAAG,gBAAgB,KAAK,CAAC,CAAC;IACpD,QAAQA,IAAM,SAAS,GAAG,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAChE,QAAQA,IAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;IACvG,QAAQA,IAAM,SAAS,GAAG,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAChE,QAAQ,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IAC3F,KAAK,MAAM,IAAI,aAAa,EAAE;IAC9B,QAAQA,IAAM,QAAQ,GAAG,eAAe,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9D,QAAQ,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;IAC7D,KAAK,MAAM;IACX,QAAQ,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;IAC3E,KAAK;AACL;IACA,IAAIA,IAAM,SAAS,GAAG,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAC5D,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAChH,IAAI,aAAa,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC7B;IACA,IAAI,IAAI,cAAc,EAAE;IACxB,QAAQA,IAAM,SAAS,GAAG,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAChE,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IACzE,KAAK,MAAM;IACX,QAAQ,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC/B,KAAK;AACL;IACA,IAAI,IAAI,cAAc,EAAE;IACxB,QAAQA,IAAM,SAAS,GAAG,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAChE,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IACxE,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC7B,KAAK;AACL;IACA,IAAI,IAAI,cAAc,EAAE;IACxB,QAAQA,IAAM,SAAS,GAAG,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAChE,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IACxE,KAAK;AACL;IACA,IAAI,IAAI,cAAc,EAAE;IACxB,QAAQA,IAAM,SAAS,GAAG,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAChE,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACpF,KAAK;AACL;IACA,IAAI,IAAI,cAAc,EAAE;IACxB,QAAQA,IAAM,SAAS,GAAG,eAAe,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;IAChE,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC;IACxE,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IACtC,KAAK;AACL;IACA,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE;IAClC,IAAIA,IAAM,MAAM,GAAG,OAAO,MAAM,KAAK,WAAW,CAAC;IACjD,IAAIA,IAAM,MAAM,GAAG,MAAM,GAAG,YAAY,GAAG,WAAW,CAAC;AACvD;IACA,IAAI,OAAO,IAAI,OAAO,WAAE,OAAO,EAAE,MAAM,EAAK;IAC5C,QAAQ,MAAM,CAAC,GAAG,EAAE,SAAS,GAAG,EAAE,WAAW,EAAE;IAC/C,YAAY,IAAI,GAAG,EAAE;IACrB,gBAAgB,IAAI,QAAQ,EAAE;IAC9B,oBAAoB,OAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;IACzC,iBAAiB,MAAM;IACvB,oBAAoB,MAAM,CAAC,GAAG,CAAC,CAAC;IAChC,iBAAiB;IACjB,aAAa;IACb,YAAYC,IAAI,IAAI,CAAC;IACrB,YAAY,IAAI;IAChB,gBAAgB,IAAI,GAAG,WAAW,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IACrD,aAAa,CAAC,OAAO,CAAC,EAAE;IACxB,gBAAgB,IAAI,QAAQ,EAAE;IAC9B,oBAAoB,OAAO,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC7C,iBAAiB,MAAM;IACvB,oBAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,QAAQ,EAAE;IAC1B,gBAAgB,OAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5C,aAAa,MAAM;IACnB,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9B,aAAa;IACb,SAAS,CAAC,CAAC;IACX,KAAK,CAAC,CAAC;IACP;;ICzVA;;;;;;;aAOgB,YAAY,CAC1B,KAAY,EACZ,MAAU,EACV,OAAgB;QAEhB,IAAI,KAAK,YAAY,EAAE,EAAE;YACvB,MAAM,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;YACzE,OAAO,IAAI,YAAY,CAAC,EAAE,CAAC,cAAc,CAAC,aAAa,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAA;SACxE;QACD,IAAI,KAAK,YAAY,YAAY,EAAE;YACjC,MAAM,QAAQ,GAAG,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAA;YACpD,OAAO,IAAI,eAAe,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,SAAS,CAAC,CAAA;SACzE;QACD,IAAI,KAAK,YAAY,WAAW,IAAI,KAAK,YAAY,UAAU,EAAE;YAC/D,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YAC/C,OAAO,IAAI,qBAAqB,CAC9B,KAAK,EACL,QAAQ,EACR,SAAS,EACT,SAAS,EACT,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,EAChB,OAAO,GAAG,CAAC,GAAG,CAAC,CAChB,CAAA;SACF;QACD,MAAM,IAAI,KAAK,EAAE,CAAA;IACnB,CAAC;IAED;;;aAGgB,iBAAiB,CAC/B,KAAY,EACZ,IAAI,GAAG,KAAK,CAAC,IAAI,EACjB,IAAI,GAAG,KAAK,CAAC,IAAI,EACjB,CAAK,EACL,OAAgB;QAEhB,IAAI,KAAK,YAAY,EAAE,EAAE;YACvB,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;YACtD,OAAO,YAAY,CAAC,wBAAwB,CAC1C,KAAK,CAAC,MAAM,EACZ,KAAK,CAAC,IAAI,EACV,EAAE,CAAC,IAAI,EAAE,EACT,IAAI,EACJ,IAAI,EACJ,CAAC,EACD,EAAE,CAAC,MAAM,EAAE,CACZ,CAAA;SACF;aAAM,IAAI,KAAK,YAAY,YAAY,EAAE;;YAExC,MAAM,MAAM,GAAG,CAAC,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;YACtC,OAAO,IAAI,YAAY,CACrB,CAAC,EACD,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,EACtB,KAAK,CAAC,EAAE,EACR,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,EAClB,IAAI,EACJ,IAAI,EACJ,CAAC,EACD,CAAC,CACF,CAAA;SACF;aAAM;YACL,MAAM,IAAI,KAAK,CACb,wCAAwC,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAClE,CAAA;SACF;IACH,CAAC;IAED;;;;;;;;;aASgB,WAAW,CACzB,KAAY,EACZ,IAAI,GAAG,KAAK,CAAC,IAAI,EACjB,IAAI,GAAG,KAAK,CAAC,IAAI,EACjB,KAAY,EACZ,OAAgB;QAEhB,OAAO,CAAC,MAAM,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAA;QAC3D,IAAI,KAAK,YAAY,EAAE,EAAE;YACvB,IAAI,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;gBACjC,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;oBACvB,OAAO,SAAS,CAAA;;iBAEjB;gBACD,MAAM,WAAW,GAAG,IAAI,YAAY,CAClC,EAAE,CAAC,CAAC,EACJ,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,EACjB,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,gBAAgB,EAAE,EACpC,CAAC,EACD,KAAK,CACN,CAAA;;gBAED,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;gBAC/D,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG;oBACnB,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM;oBACzB,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,MAAM;iBAC1B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;gBACb,OAAO,IAAI,eAAe,CACxB,WAAW,EACX,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAClB,CAAC,EACD,KAAK,EACL,IAAI,EACJ,IAAI,CACL,CAAA;aACF;YACD,IACE,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;gBACjC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;gBACrC,CAAC,EACD;gBACA,MAAM,IAAI,KAAK,CACb,8GAA8G,CAC/G,CAAA;aACF;YACD,IAAI,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;;gBAEtC,MAAM,MAAM,GACV,CAAC,KAAK,CAAC,EAAE,CAAC1B,MAAI,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;qBAC5D,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;gBACpB,OAAO,IAAI,YAAY,CACrB,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,CACpD,CAAA;aACF;iBAAM;;gBAEL,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EACtB,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAA;gBACpB,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;gBACrD,MAAM,IAAI,GAAG,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAA;gBAChC,MAAM,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;gBACzD,MAAM,CAAC,GAAG,IAAI,YAAY,CACxB,IAAI,EACJ,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EACnC,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,EACnC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EACjD,CAAC,EACD,KAAK,EACL,CAAC,EACD,CAAC,CACF,CAAA;gBACD,OAAO,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAA;aACpC;SACF;QACD,IAAI,KAAK,YAAY,YAAY,EAAE;YACjC,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EACtB,CAAC,GAAG,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAA;YACpB,MAAM,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,CAAA;YAC/B,MAAM,MAAM,GAAG,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,EAC3C,MAAM,GAAG,GAAG,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YACzC,IAAI,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,MAAM,IAAI,MAAM,CAAC,EAAE;gBACxD,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;gBAC9B,IAAI,KAAK,GAAG,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,EACzB,MAAM,GAAG,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,CAAA;gBAC1B,IAAI,GAAG,CAAC,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;oBAC5B,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;iBACnC;gBACD,OAAO,gBAAgB,CAAC,MAAM,CAC5B,KAAK,EACL,CAAC,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,EAC3B,MAAM,EACN,GAAG,CAAC,MAAM,CACX,CAAA;aACF;iBAAM;gBACL,MAAM,CAAC,GAAG,IAAI,mBAAmB,CAAC,KAAK,EAAE,EAAE,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;gBACjE,OAAO,CAAC,CAAA;aACT;SACF;QACD,MAAM,IAAI,KAAK,EAAE,CAAA;IACnB,CAAC;QAEgB,GAAG,CA+rCnB;IA/rCD,WAAiB,GAAG;;;;;;;;QAQlB,SAAgB,GAAG,CACjB,QAAgB,CAAC,EACjB,SAAiB,CAAC,EAClB,QAAgB,CAAC,EACjB,OAAe,KAAK,GAAG,WAAW,EAAE;YAEpC,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACnC,MAAM,CAAC,QAAQ,KAAK,OAAO,IAAI,CAAC,CAAA;YAChC,MAAM,YAAY,GAAG;gBACnB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACf,IAAI,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;gBACpB,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;gBACxB,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;aACpB,CAAA;YACD,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;YAChE,OAAO,GAAG,CAAC,eAAe,CACxB,YAAY,EACZ,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,EACf,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,EACnB,IAAI,EACJ,SAAS,CACV,CAAA;SACF;QAtBe,OAAG,MAsBlB,CAAA;QAED,SAAgB,OAAO,CACrB,MAAc,EACd,IAAW,EACX,MAAc,EACd,OAAe,SAAS,GAAG,WAAW,EAAE;YAExC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAA;YAC5B,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;YAC3C,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAA;YAC5B,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAC9B;gBACE,EAAE,CAAC,CAAC;gBACJ,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;gBACpB,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC;gBACzB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;aACrB,EACD,IAAI,CACL,CAAA;YACD,OAAO,GAAG,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;SAC1C;QAnBe,WAAO,UAmBtB,CAAA;QAED,SAAgB,kBAAkB,CAChC,GAAoB,EACpB,IAAY,EACZ,CAAK;;YAGL,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;gBACpD,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;aACjB;SACF;QATe,sBAAkB,qBASjC,CAAA;;;;;;;;;;QAWD,SAAgB,YAAY,CAC1B,aAAqB,EACrB,gBAAoB,EAAE,CAAC,EAAE,EACzB,SAAa,EAAE,CAAC,CAAC,EACjB,OAAe,SAAS,GAAG,WAAW,EAAE,EACxC,GAAY,EACZ,WAAkC;YAElC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAA;;;;YAIvC,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAA;;;;;YAKzC,MAAM,WAAW,GAAG,IAAI,GAAG,EAAE,CAAA;YAC7B,MAAM,gBAAgB,GAAG,IAAI,YAAY,CAAC,aAAa,CAAC,CAAA;;YAExD,MAAM,iBAAiB,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;YAC9C,MAAM,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,KACtC,IAAI,CAAC,SAAS,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAC/B,CAAA;YACX,MAAM,SAAS,GAAG,aAAa,CAAC,MAAM,CAAA;YAEtC,MAAM,UAAU,GACd,WAAW,IAAI,WAAW,CAAC,aAAa,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAA;YAC3E,MAAM,UAAU,GAAG,IAAI,SAAS,CAC9B,gBAAgB,EAChB,aAAa,EACb,EAAE,EACF,IAAI,GAAG,QAAQ,EACf,UAAU,CACX,CAAA;YAED,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,CAAA;YACrE,MAAM,UAAU,GAAG,IAAI,YAAY,CACjC,aAAa,CAAC,OAAO,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAC3C,CAAA;YACD,MAAM,OAAO,GACX,WAAW,IAAI,WAAW,CAAC,aAAa,CAAC,UAAU,EAAE,YAAY,CAAC,CAAA;YACpE,MAAM,OAAO,GAAG,IAAI,SAAS,CAC3B,UAAU,EACV,YAAY,EACZ,EAAE,EACF,IAAI,GAAG,KAAK,EACZ,OAAO,CACR,CAAA;YAED,aAAa,CAAC,OAAO,CAAC,CAAC,IAAI,KACzB,GAAG,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAC7D,CAAA;YACD,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,KACxB,GAAG,CAAC,kBAAkB,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAC7D,CAAA;YAED,MAAM,IAAI,GAAG,iBAAiB,CAAC,SAAS,EAAE,CAAC,CAAC,KAC1C,YAAY,CAAC,aAAa,CACxB,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAClB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EACb,IAAI,GAAG,KAAK,GAAG,CAAC,CACjB,CACF,CAAA;YAED,MAAM,KAAK,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;gBACtC,MAAM,QAAQ,GAAG,IAAI,GAAG,MAAM,GAAG,CAAC,CAAA;gBAClC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,SAAS,CAAA;gBAC7B,MAAM,SAAS,GAAG;oBAChB,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;oBAC1B,IAAI,CAAC,CAAC,CAAC;oBACP,QAAQ,CAAC,CAAC,CAAC;oBACX,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;iBAClB,CAAA;gBACD,MAAM,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA;gBAC/D,MAAM,IAAI,GAAG,WAAW,IAAI,WAAW,CAAC,WAAW,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,CAAC,CAAA;gBAC1E,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;aAClE,CAAW,CAAA;YACZ,KAAK,CAAC,IAAI,CAAC,UAAU,EAAE,OAAO,CAAC,CAAA;YAC/B,GAAG;gBACD,GAAG;oBACH,OAAO,CAAC,kBAAkB,EAAE,aAAa,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;YACzE,OAAO,IAAI,IAAI,CACb,KAAK,EACL,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EACrC,GAAG,EACH,WAAW,CACZ,CAAA;SACF;QAxFe,gBAAY,eAwF3B,CAAA;QAED,SAAgB,QAAQ,CACtB,SAAiB,CAAC,EAClB,SAAiB,CAAC,EAClB,OAAc,GAAG,EACjB,OAAe,UAAU,GAAG,WAAW,EAAE;YAEzC,MAAM,QAAQ,GAAG;gBACf,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACf,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC;gBACpB,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC;gBACzB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;aACrB,CAAA;YACD,OAAO,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;SACnE;QAbe,YAAQ,WAavB,CAAA;QAED,SAAgB,IAAI,CAClB,SAAiB,CAAC,EAClB,SAAiB,CAAC,EAClB,OAAc,GAAG,EACjB,OAAe,MAAM,GAAG,WAAW,EAAE;YAErC,MAAM,QAAQ,GAAG;gBACf,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;gBACf,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC;gBACzB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;aACrB,CAAA;YACD,OAAO,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;SACnE;QAZe,QAAI,OAYnB,CAAA;QAED,SAAgB,MAAM,CACpB,SAAiB,CAAC,EAClB,OAAe,QAAQ,GAAG,WAAW,EAAE,EACvC,MAAa,GAAG;YAEhB,MAAM,EAAE,GAAG,IAAI,UAAU,CACvB,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EACnE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,EACrB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,EACpB,CAAC,EACDD,IAAE,EACF,SAAS,EACT,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EACpB,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CACtB,CAAA;YACD,MAAM,SAAS,GAAG,OAAO,CAAC,YAAY,EAAE,MAAM,EAAE,IAAI,EAAE,GAAG,CAAC,CAAA;YAC1D,OAAO,WAAW,CAChB,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAC5C,GAAG,EACH,IAAI,EACJ,SAAS,CACV,CAAA;SACF;QAtBe,UAAM,SAsBrB,CAAA;;;;;;QAOD,SAAgB,MAAM,CACpB,MAAW,CAAC,EACZ,OAAe,QAAQ,GAAG,WAAW,EAAE;YAEvC,IAAI,MAAM,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAC7B,IAAI,CAAC,IAAI,GAAG;gBAAE,OAAO,MAAM,CAAA;YAC3B,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;iBACnC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;iBAC/B,OAAO,EAAE,CAAA;YAEZ,SAAS,OAAO,CAAC,KAAU,EAAE,EAAM;gBACjC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAA;gBACxC,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC1B,IAAI,CAAC,IAAI,CAAC;4BAAE,SAAQ;wBACpB,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;qBACtE;iBACF;aACF;YAED,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAA;YACzB,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAA;YACpB,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAA;YACpB,OAAO,MAAM,CAAA;SACd;QAzBe,UAAM,SAyBrB,CAAA;QAED,SAAgB,OAAO,CACrB,MAAW,CAAC,EACZ,OAAe,QAAQ,GAAG,WAAW,EAAE;YAEvC,IAAI,CAAC,IAAI,GAAG;gBAAE,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAErC,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;iBACnC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;iBAC/B,OAAO,EAAE,CAAA;YACZ,MAAM,YAAY,GAAW,EAAE,CAAA;YAE/B,SAAS,OAAO,CAAC,KAAU,EAAE,EAAM;gBACjC,YAAY,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAA;gBAC/C,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;wBAC1B,IAAI,CAAC,IAAI,CAAC;4BAAE,SAAQ;wBACpB,OAAO,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;qBACtE;iBACF;aACF;YAED,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,QAAQ,CAAC,CAAA;YACzB,MAAM,OAAO,GAAG,IAAI,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;YAE5C,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;iBAC1B,GAAG,CAAC,OAAO,CAAC;iBACZ,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;iBAC9B,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;SAClC;QA7Be,WAAO,UA6BtB,CAAA;;;;;;;;QASD,SAAgB,KAAK,CACnB,MAAc,EACd,MAAc,EACd,OAAc,GAAG,EACjB,OAAe,OAAO,GAAG,WAAW,EAAE;YAEtC,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;YACnC,OAAO,CAAC,MAAM,MAAM,GAAG,MAAM,CAAC,CAAA;YAC9B,MAAM,MAAM,GAAG;gBACb,YAAY,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACrD,YAAY,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;aACvD,CAAA;YACD,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAC7B,UAAU,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAACA,IAAE,GAAG,CAAC,CAAC,CACxD,CAAA;YACD,OAAO,GAAG,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;SAC9C;QAhBe,SAAK,QAgBpB,CAAA;;;;;QAMD,SAAgB,WAAW,CACzB,QAAgB,EAChB,SAAgB,EAChB,OAAe,aAAa,GAAG,WAAW,EAAE,EAC5C,SAAkB,EAClB,WAAkC;YAElC,MAAM,CACJ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CACtE,CAAA;YACD,MAAM,CAAC,CAAC,EAAE,CAACA,IAAE,EAAE,SAAS,CAAC,IAAIA,IAAE,IAAI,SAAS,CAAC,CAAA;YAC7C,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAA;YACrD,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAA;YAChC,OAAO,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA;YACpC,MAAM,SAAS,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC;kBACrE,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;kBACjC,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;;;YAG3B,MAAM,IAAI,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,GAAGA,IAAE,CAAC,CAAA;YACnC,MAAM,aAAa,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI;gBACtC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,EACd,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAA;gBACvB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;oBAChB,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAA;iBACxE;gBACD,OAAO,SAAS,CAAA;aACjB,CAAC,CAAA;YACF,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI;gBACrC,MAAM,CAAC,GAAG,WAAW,CACnB,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACTA,IAAE,EACF,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAClB,CAAA;gBACD,MAAM,CAAC,GAAGC,MAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAA;gBACrC,CAAC;oBACC,MAAM,CACJ,IAAI;yBACD,SAAS,CAAC,CAAC,CAAC;yBACZ,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;yBACX,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACxC,CAAA;gBACH,OAAO,CAAC,CAAA;aACT,CAAC,CAAA;YACF,IAAI,cAAc,GAAG,QAAQ,EAC3B,YAAoB,CAAA;YACtB,MAAM,KAAK,GAAG,EAAE,CAAA;YAChB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,SAAS,EAAE,GAAG,IAAID,IAAE,EAAE;gBAC5C,MAAM,EAAE,GAAG,CAAC,EACV,EAAE,GAAGM,KAAG,CAAC,SAAS,GAAG,GAAG,EAAEN,IAAE,CAAC,CAAA;gBAC/B,MAAM,QAAQ,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC,CAAA;gBACrC,YAAY;oBACV,GAAG,GAAG,EAAE,IAAI,GAAG;0BACX,QAAQ;0BACR,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAA;gBACtD,MAAM,IAAI,GAAG,iBAAiB,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC;oBAChD,MAAM,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,EAC3B,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAA;oBACvB,MAAM,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;oBAC3B,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;wBAChB,MAAM,KAAK,GACT,CAAC,KAAK,GAAG,GAAG,aAAa,CAAC,CAAC,CAAE,GAAG,aAAa,CAAC,CAAC,CAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;wBAChE,OAAO,IAAI,UAAU,CACnB,KAAK,EACL,CAAC,EACD,CAAC,EACD,EAAE,EACF,EAAE,EACF,SAAS,EACT,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,EACnB,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,EACnB,IAAI,GAAG,KAAK,GAAG,CAAC,CACjB,CAAA;qBACF;oBACD,OAAO,SAAS,CAAA;iBACjB,CAAC,CAAA;gBACF,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,QAAQ,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE;oBAChE,IAAI,YAAY,CAAC,SAAS,CAAC,EAAE;wBAC3B,MAAM,IAAI,GAAG,cAAc,CAAC,SAAS,CAAC,CAAA;wBACtC,MAAM,GAAG,GAAG,CAAC,SAAS,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAA;wBAC7C,MAAM,SAAS,GAAG;4BAChB,cAAc,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE;4BACnC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC;4BACjC,YAAY,CAAC,SAAS,CAAC;4BACvB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAE,CAAC,OAAO,EAAE;yBACvC,CAAC,MAAM,CAAC,CAAC,CAAM,KAAgB,CAAC,CAAC,CAAA;wBAClC,MAAM,OAAO,GACX,CAAC,KAAK,GAAG;8BACL,YAAY,CAAC,SAAS,CAAE;8BACxB,YAAY,CAAC,SAAS,CAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;wBAC3C,MAAM,IAAI,GACR,WAAW;4BACX,WAAW,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,CAAC,CAAA;wBACnE,KAAK,CAAC,IAAI,CACR,IAAI,CAAC,MAAM,CACT,OAAO,EACP,SAAS,EACT,SAAS,EACT,IAAI,GAAG,MAAM,GAAG,SAAS,EACzB,IAAI,CACL,CACF,CAAA;qBACF;iBACF;gBACD,cAAc,GAAG,YAAY,CAAA;aAC9B;YACD,IAAI,IAAI,EAAE;gBACR,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,YAAa,CAAC,CAAA;gBACpD,MAAM,SAAS,GACb,WAAW,IAAI,WAAW,CAAC,aAAa,CAAC,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAA;gBAC1E,MAAM,OAAO,GACX,WAAW;oBACX,WAAW,CAAC,WAAW,CACrB,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,EACtC,YAAY,EACZ,SAAS,CACV,CAAA;gBACH,KAAK,CAAC,IAAI,CACR,IAAI,SAAS,CACX,SAAS,EACT,QAAQ,EACR,SAAS,EACT,IAAI,GAAG,OAAO,EACd,SAAS,CACV,EACD,IAAI,SAAS,CACX,SAAS,CAAC,OAAO,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,EACtC,YAAY,EACZ,SAAS,EACT,IAAI,GAAG,KAAK,EACZ,OAAO,CACR,CACF,CAAA;aACF;YACD,MAAM,cAAc,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAA;YACpE,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,cAAc,EAAE,SAAS,CAAC,CAAA;SAClD;QA1Ie,eAAW,cA0I1B,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAwCD,SAAgB,OAAO;YACrB,MAAM,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAA;;;;;;;YAOvD,MAAM,EAAE,GAAG,IAAI,IAAI,CACjB,IAAA,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAClE,KAAK,CACN,CAAA;;YAED,OAAO,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;SAC5B;QAde,WAAO,UActB,CAAA;QAED,SAAgB,WAAW,CAAC,IAAe,EAAE,GAAO;YAClD,OAAO,IAAI,IAAI,CACb,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;iBAChD,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBAClB,MAAM,CACL,IAAI,EACJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,EAC7C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KACtB,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAC/D,CAAC,EACD,CAAC,CAAC,CACH,CACF,CACF,EACH,KAAK,CACN,CAAA;SACF;QAhBe,eAAW,cAgB1B,CAAA;QAID,SAAgB,SAAS;YACvB,OAAO,QAAQ,CAAC,2BAA2B,CAAC,CAAC,IAAI,CAC/C,CAAC,IAAI,MAAM,IAAA,WAAW,GAAG,IAAI,CAAC,CAC/B,CAAA;SACF;QAJe,aAAS,YAIxB,CAAA;QAED,MAAM,WAAW,GAAG,IAAI,GAAG,EAAyB,CAAA;QAEpD,SAAgB,QAAQ,CAAC,QAAgB;YACvC,OAAO,IAAI,OAAO,CAAgB,UAAU,OAAO,EAAE,MAAM;gBACzD,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;gBACtC,IAAI,IAAI,EAAE;oBACR,OAAO,CAAC,IAAI,CAAC,CAAA;iBACd;qBAAM;oBACL8C,IAAa,CAAC,QAAQ,EAAE,UAAU,GAAG,EAAE,CAAC;wBACtC,IAAI,GAAG,EAAE;4BACP,MAAM,CAAC,GAAG,CAAC,CAAA;yBACZ;6BAAM;4BACL,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAE,CAAC,CAAA;4BAC7B,OAAO,CAAC,CAAC,CAAC,CAAA;yBACX;qBACF,CAAC,CAAA;iBACH;aACF,CAAC,CAAA;SACH;QAhBe,YAAQ,WAgBvB,CAAA;QAED,SAAgB,cAAc,CAAC,QAAoB;YACjD,IAAI,IAAA,WAAW,EAAE;gBACf,QAAQ,EAAE,CAAA;aACX;iBAAM;gBACLA,IAAa,CAAC,2BAA2B,EAAE,UAAU,GAAG,EAAE,IAAI;oBAC5D,IAAI,GAAG,EAAE;wBACP,MAAM,IAAI,KAAK,CAAC,uBAAuB,GAAG,GAAG,CAAC,CAAA;qBAC/C;yBAAM;wBACL,IAAA,WAAW,GAAG,IAAK,CAAA;wBACnB,QAAQ,EAAE,CAAA;qBACX;iBACF,CAAC,CAAA;aACH;SACF;QAbe,kBAAc,iBAa7B,CAAA;;;;;;;;QASD,SAAgB,IAAI,CAClB,IAAY,EACZ,IAAY,EACZ,QAAgB,CAAC,EACjB,OAAsB,IAAA,WAAW;YAEjC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAA;YAC3C,MAAM,QAAQ,GAA6B,EAAE,CAAA;YAC7C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;gBACtB,IAAI,CAAC,CAAC,IAAI,IAAI,GAAG,EAAE;oBACjB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;iBAClB;gBACD,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;aAC1B,CAAC,CAAA;YACF,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;gBAC5B,MAAM,IAAI,GAAG,IAAIC,IAAa,EAAE,CAAA;gBAChC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;gBAClB,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAC3B,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CACrC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA;gBACzB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAA;gBACzB,OAAO,IAAI,CAAA;aACZ,CAAC,CAAA;YACF,MAAM,KAAK,GAAG,IAAI,CAAC,sBAAsB,CACvC,KAAK,EACL,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,EACvB,SAAgB,CACjB,CAAA;YACD,MAAM,SAAS,GAAG,OAAO,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;YACxD,OAAO,IAAI,CAAC,IAAI,CACd,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,CAAC,IAAiB,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EACxE,SAAS,CACV,CAAA;SACF;QAjCe,QAAI,OAiCnB,CAAA;QAED,SAAgB,cAAc;YAC5B,MAAM,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAA;YACtB,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,GAAG,CAAC;iBACpC,KAAK,CAAC,GAAG,GAAG,EAAE,CAAC;iBACf,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC;iBAC3B,OAAO,EAAE,CAAA;YACZ,MAAM,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;YAC1B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SACxB;QARe,kBAAc,iBAQ7B,CAAA;QAED,SAAgB,QAAQ;YACtB,MAAM,GAAG,GAAG,WAAW,EAAE,CAAA;YACzB,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAC3B,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;gBACpB,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;gBAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO;qBAC1B,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;qBACrB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;qBACjC,GAAG,CAAC,CAAC,CAAC,CAAA;gBAET,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CACnB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EACpB,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EACpC,QAAQ,CAAC,IAAI,EAAE,EACf,QAAQ,CACT,CAAA;gBACD,OAAO,UAAU,CAAC,SAAS,CACzB,GAAG,CAAC,KAAK,CACP,EAAE,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAC9D,CACF,CAAA;aACF,CAAC,CACH,CAAA;YACD,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;;YAErB,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA;;SAEnC;QA3Be,YAAQ,WA2BvB,CAAA;QAED,SAAgB,SAAS;YACvB,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACzB,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;SACvD;QAHe,aAAS,YAGxB,CAAA;QAED,SAAgB,GAAG;YACjB,MAAM,GAAG,GAAG,WAAW,EAAE,CAAA;YACzB,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAC3B,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;gBACpB,MAAM,UAAU,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAA;gBAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO;qBAC1B,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;qBACrB,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;qBACjC,GAAG,CAAC,CAAC,CAAC,CAAA;gBAET,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CACnB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EACpB,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EACpC,QAAQ,CAAC,IAAI,EAAE,EACf,QAAQ,CACT,CAAA;gBACD,OAAO,UAAU,CAAC,SAAS,CACzB,GAAG,CAAC,KAAK,CACP,EAAE,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAC9D,CACF,CAAA;aACF,CAAC,CACH,CAAA;YACD,MAAM,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;;YAErB,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA;;SAEnC;QA3Be,OAAG,MA2BlB,CAAA;QAkBD,SAAgB,OAAO,CACrB,KAAa,EACb,iBAAkC,EAClC,MAAY;YAEZ,MAAM,MAAM,GACV,QAAQ,KAAK,OAAO,iBAAiB;kBACjC,iBAAiB,CACf,MAAO,EACP,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAO,IAAI,iBAAiB,CAC/C;kBACD,iBAAiB,CAAA;YACvB,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAA;YAC3B,MAAM,IAAI,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC,CAAA;YACtC,MAAM,IAAI,GAAG;gBACX,KAAK;gBACL,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG;oBAChB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;wBAChB,OAAO,KAAK,CAAA;qBACb;oBACD,MAAM,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;oBAC9B,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAA;iBACnD,CAAC;aACH,CAAA;YACD,MAAM,eAAe,GAAG,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC;gBACjD,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,CAAA;gBACjC,OAAO,iBAAiB,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;oBACvC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE;wBAC/B,OAAO,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;qBAChE;oBACD,OAAO,SAAU,CAAA;iBAClB,CAAC,CAAA;aACH,CAAC,CAAA;YAEF,MAAM,KAAK,GAAW,EAAE,CAAA;YACxB,IAAI,IAAU,CAAA;YACd,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;gBACpB,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,CAAA;;gBAElC,IACE,IAAI,YAAY,YAAY;oBAC5B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC,EACvC;oBACA,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;oBACnC,MAAM,OAAO,GAAG,IAAI,YAAY,CAC9B,OAAO,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CACrE,CAAA;oBACD,IAAI,IAAI,EAAE;wBACR,MAAM,SAAS,GAAW,EAAE,CAAA;wBAC5B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BAClB,SAAS,CAAC,IAAI,CACZ,GAAG,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAC3D,CAAA;yBACF;wBACD,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;wBAC9B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BAClB,SAAS,CAAC,IAAI,CACZ,GAAG,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC,KAC5B,eAAe,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAE,CAAC,OAAO,EAAE,CAC/C,CACF,CAAA;yBACF;wBACD,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAA;wBAC9B,IAAI,GAAG,IAAI,SAAS,CAAC,OAAO,EAAE,SAAS,CAAC,CAAA;qBACzC;yBAAM;wBACL,MAAM,OAAO,GAAG,OAAO;8BACnB,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;8BACtD,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC,KACzB,eAAe,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAE,CAAC,OAAO,EAAE,CAC/C,CAAA;wBACL,IAAI,IAAI,CAAA;wBACR,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BAC7B,IAAI,GAAG,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC,KAChC,eAAe,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAE,CAAC,OAAO,EAAE,CAC/C,CAAA;yBACF;6BAAM,IAAI,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;4BACrC,IAAI,GAAG,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;yBAC9D;wBACD,IAAI,GAAG,IAAI,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;qBAC3D;oBACD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;oBAChB,OAAM;iBACP;qBAAM,IAAI,IAAI,YAAY,YAAY,EAAE;oBACvC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,EAAE;wBACpD,OAAM;qBACP;iBACF;gBACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;oBAC9B,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,CAAA;oBACjC,MAAM,SAAS,GAAG;wBAChB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;wBACpB,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBACrB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;wBACZ,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,GAAG,CAAE,CAAC,OAAO,EAAE;qBAC9D,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;oBAClB,IAAI,OAAO,CAAA;oBACX,IAAI,IAAI,YAAY,YAAY,EAAE;wBAChC,OAAO,GAAG,IAAI,YAAY,CACxB,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACjE,CAAA;qBACF;yBAAM;wBACL,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;wBACrC,MAAM,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,EACnB,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;wBACtC,MAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;wBAC9D,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;qBACxD;oBACD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAA;iBAC5C;aACF,CAAC,CAAA;YACF,IAAI,IAAI,EAAE;gBACR,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,CAAA;gBACxE,MAAM,OAAO,GAAG,IAAI,SAAS,CAC3B,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAChD,YAAY,CACb,CAAA;gBACD,KAAK,CAAC,IAAI,CACR,IAAI,SAAS,CAAC,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,EACvD,OAAO,CACR,CAAA;aACF;YACD,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAA;SACnE;QA1He,WAAO,UA0HtB,CAAA;QAED,SAAgB,QAAQ,CAAC,KAAa;YACpC,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;gBACxB,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAA;gBACpB,IAAI,CAAC,YAAY,YAAY,IAAI,CAAC,CAAC,IAAI,KAAK,CAAC/C,IAAE,IAAI,CAAC,CAAC,IAAI,KAAKA,IAAE,EAAE;oBAChE,MAAM,UAAU,GACd,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;oBACzD,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI;wBACzB,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE;4BAClB,OAAO,UAAU,CACf,IAAI,YAAY,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAEO,KAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAC9D,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,EAAE,EACP,SAAS,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,CACV,CAAA;yBACF;6BAAM;;4BAEL,OAAO,UAAU,CACf,IAAI,YAAY,CACd,CAAC,CAAC,MAAM,EACR,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,EACd,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,EACd,CAAC,CAAC,IAAI,GAAGP,IAAE,EACXM,KAAG,CAACN,IAAE,EAAE,CAAC,CAAC,IAAI,GAAGA,IAAE,CAAC,CACrB,EACD,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,EAAE,GAAGA,IAAE,EACZ,IAAI,CAAC,EAAE,GAAGA,IAAE,EACZ,SAAS,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,CACV,CAAA;yBACF;qBACF,CAAC,CAAA;iBACH;gBACD,IAAI,CAAC,YAAY,WAAW,EAAE;oBAC5B,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;wBACvB,OAAO,IAAI,CAAC,KAAK,CAACC,MAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAA;qBAC/C;iBACF;gBACD,OAAO,IAAI,CAAA;aACZ,CAAC,CAAA;SACH;QAhDe,YAAQ,WAgDvB,CAAA;;;;;;;;;QAUD,SAAgB,eAAe,CAC7B,YAA+B,EAC/B,aAAiB,EACjB,MAAU,EACV,IAAa,EACb,SAAkB;YAElB,MAAM,CACJ,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,EAC1C,0CAA0C,CAC3C,CAAA;YACD,UAAU,CAAC,EAAE,EAAE,aAAa,CAAC,CAAA;YAC7B,aAAa,CAAC,MAAM,CAAC,CAAA;YACrB,IAAI,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;gBACvC,aAAa,GAAG,aAAa,CAAC,OAAO,EAAE,CAAA;YACzC,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,YAAY,EAAE,IAAI,CAAC,CAAA;YACpD,SAAS;gBACP,SAAS;oBACT,OAAO,CAAC,qBAAqB,EAAE,YAAY,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;YAC3E,OAAO,GAAG,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,CAAA;SACvE;QApBe,mBAAe,kBAoB9B,CAAA;;;;;;;;;;;QAYD,SAAgB,WAAW,CACzB,CAAK,EACL,CAAK,EACL,CAAK,EACL,CAAK,EACL,OAAe,OAAO,GAAG,WAAW,EAAE;YAEtC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YACzB,MAAM,SAAS,GAAG,EAAE,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAA;YACpE,IAAI,GAAG,CAAC,SAAS,CAAC,EAAE;gBAClB,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAA;aAC5C;YACD,IAAI,SAAS,GAAG,CAAC,EAAE;gBAChB,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;aACjB;YACD,MAAM,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC3C,MAAM,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC3C,MAAM,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC3C,MAAM,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC3C,MAAM,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC3C,MAAM,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC3C,MAAM,KAAK,GAAG;gBACZ,IAAI,SAAS,CACX,YAAY,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACnC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,OAAO,EAAE,CAAC,EACtB,EAAE,EACF,IAAI,GAAG,KAAK,CACb;gBACD,IAAI,SAAS,CACX,YAAY,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACnC,CAAC,EAAE,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,OAAO,EAAE,CAAC,EAChC,EAAE,EACF,IAAI,GAAG,KAAK,CACb;gBACD,IAAI,SAAS,CACX,YAAY,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACnC,CAAC,EAAE,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,OAAO,EAAE,CAAC,EAChC,EAAE,EACF,IAAI,GAAG,KAAK,CACb;gBACD,IAAI,SAAS,CACX,YAAY,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACnC,CAAC,EAAE,EAAE,EAAE,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,EACtB,EAAE,EACF,IAAI,GAAG,KAAK,CACb;aACF,CAAA;YACD,MAAM,GAAG,GAAG,OAAO,CAAC,iBAAiB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;YAClD,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAA;SACnC;QAjDe,eAAW,cAiD1B,CAAA;QAED,MAAM,CAAC,GAAG,CAAC,GAAG,YAAY,EACxB,CAAC,GAAG,CAAC,GAAG,YAAY,CAAA;QACT,wBAAoB,GAAsB;YACrD,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC;YACtB,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC;YACvB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC;YACtB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;SACtB,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;QACT,yBAAqB,GAAsB;YACtD,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAClB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;SACjB,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;QACT,8BAA0B,GAElC;YACH,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;YAClB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;YAClB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;YAClB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAClB,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;YAClB,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAClB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;YACjB,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACnB,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACnB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;SAClB,CAAA;QAEY,uBAAmB,GAAsB;YACpD,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SACjB,CAAA;QACY,4BAAwB,GAEhC;YACH,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAET,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACV,CAAA;QAED,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;QAC3C,wBAAoB,GAAsB;YACrD,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YAEhB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAEhB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YAChB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;YACjB,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACjB,CAAA;QACY,6BAAyB,GAEjC;;YAEH,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACV,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;;YAGX,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACV,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACX,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;YAGT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;YAGT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YACV,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACV,CAAA;;;;QAKD,SAAgB,YAAY;YAC1B,OAAO,YAAY,CACjB,IAAA,qBAAqB,EACrB,IAAA,0BAA0B,EAC1B,oBAAoB,CACrB,CAAA;SACF;QANe,gBAAY,eAM3B,CAAA;;;;QAKD,SAAgB,UAAU;YACxB,OAAO,YAAY,CACjB,IAAA,mBAAmB,EACnB,IAAA,wBAAwB,EACxB,kBAAkB,CACnB,CAAA;SACF;QANe,cAAU,aAMzB,CAAA;;;;QAKD,SAAgB,WAAW;YACzB,OAAO,YAAY,CACjB,IAAA,oBAAoB,EACpB,IAAA,yBAAyB,EACzB,mBAAmB,CACpB,CAAA;SACF;QANe,eAAW,cAM1B,CAAA;QAED,SAAS,YAAY,CACnB,EAAqB,EACrB,IAA0C,EAC1C,SAAiB;YAEjB,MAAM,OAAO,GAAG,IAAI,GAAG,EAAE,CAAA;YACzB,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW;gBACjC,MAAM,OAAO,GAAG,YAAY,CAAC,aAAa,CACxC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAClB,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAClB,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CACnB,CAAA;gBACD,MAAM,OAAO,GAAG,iBAAiB,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC;oBACtD,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,WAAW,CAAC,MAAM,CAAA;oBACxC,MAAM,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,EACvB,EAAE,GAAG,WAAW,CAAC,GAAG,CAAC,CAAA;oBACvB,MAAM,IAAI,GAAGK,KAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EACtB,IAAI,GAAGC,KAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAClB,MAAM,GAAG,IAAI,GAAG,EAAE,CAAC,MAAM,GAAG,IAAI,CAAA;oBAClC,IAAI,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;oBAC9B,CAAC,IAAI;wBACH,OAAO,CAAC,GAAG,CACT,MAAM,GACL,IAAI,GAAG,YAAY,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,EACvD,CAAA;oBACH,OAAO,EAAE,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAA;iBACvC,CAAC,CAAA;gBACF,OAAO,IAAI,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;aACvC,CAAC,CAAA;YACF,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAA;SACzC;;;;;;;QAQD,SAAgB,YAAY,CAC1B,SAAiB,EACjB,IAAQ,EACR,OAAe,SAAS,GAAG,WAAW,EAAE;YAExC,UAAU,CAAC,IAAI,EAAE,GAAG,SAAS,CAAC,CAAA;YAC9B,aAAa,CAAC,IAAI,CAAC,CAAA;YAEnB,MAAM,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,KAClC,YAAY,CAAC,aAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAC7C,CAAA;YACD,MAAM,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;gBACtC,MAAM,QAAQ,GAAG,IAAI,GAAG,MAAM,GAAG,CAAC,CAAA;gBAClC,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,MAAM,CAAA;gBACtC,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA;gBAC1D,MAAM,OAAO,GAAG,iBAAiB,CAC/B,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,IAAI,EACb,IAAI,EACJ,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CACtB,CAAA;gBACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAA;aAC5D,CAAC,CAAA;YACF,MAAM,WAAW,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAA;YACrD,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAA;YACxE,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAA;YACtB,MAAM,SAAS,GAAG,OAAO,CAAC,kBAAkB,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;YACpE,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,SAAS,CAAC,CAAA;SACzC;QA7Be,gBAAY,eA6B3B,CAAA;QAED,SAAgB,OAAO,CAAC,GAAW;YACjC,MAAM,SAAS,GAAG,KAAK,CAAA;YACvB,MAAM,QAAQ,GAAG,MAAM,SAAS,CAAC,IAAI,CAAC,GAAG,CAAE,CAAC,CAAC,CAAC,CAAA;YAC9C,MAAM,eAAe,GAAG,MACtB,QAAQ,EAAE;iBACP,IAAI,EAAE;iBACN,KAAK,CAAC,KAAK,CAAC;iBACZ,GAAG,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;YAC9B,MAAM,YAAY,GAAG,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAA;YACzC,MAAM,KAAK,GAAW,iBAAiB,CAAC,YAAY,EAAE;gBACpD,MAAM,CAAC,YAAY,EAAE,YAAY,CAAC,GAAG,eAAe,EAAE,CAAA;gBACtD,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CACvB,EAAE,MAAM,EAAE,CAAC,YAAY,GAAG,CAAC,KAAK,YAAY,GAAG,CAAC,CAAC,EAAE,EACnD,MAAM,EAAE,CAAC,GAAG,eAAe,EAAE,EAAE,CAAC,CAAC,CAClC,CAAA;gBACD,MAAM,OAAO,GAAG,IAAI,YAAY,CAC9B,MAAM,EACN,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,EAC/B,KAAK,CAAC,WAAW,CAAC,YAAY,CAAC,EAC/B,YAAY,EACZ,YAAY,EACZ,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,CACF,CAAA;gBACD,MAAM,KAAK,GAAG;oBACZ,iBAAiB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;oBAC5C,iBAAiB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;oBAC5C,iBAAiB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;oBACtD,iBAAiB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;iBACvD,CAAA;gBACD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAA;aACnC,CAAC,CAAA;YACF,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;SAC9B;QAnCe,WAAO,UAmCtB,CAAA;IACH,CAAC,EA/rCgB,GAAG,KAAH,GAAG;;UC5OP,WAAY,SAAQ,EAAE;QAUjC,YACE,MAAU,EACV,KAAS,EACT,EAAM,EACN,OAAe,aAAa,GAAG,WAAW,EAAE,EAC5C,QAAkByC,MAAa,EAAE,CAAC,EAAE,EAAE,EACtC,OAAe,CAAC,GAAG,EACnB,OAAe,GAAG,EAClB,OAAe,CAAC,GAAG,EACnB,OAAe,GAAG;YAElB,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,wBAAwB,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC,CAAA;YACrE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;YACjB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAA;YACZ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;YAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;YAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;YAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;YAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;YAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA;YAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;SACnB;QAED,IAAI,KAAK;YACP,OAAO,IAAI,CAAA;SACZ;QAED,cAAc;YACZ,OAAO,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA;SACnD;QAED,QAAQ;YACN,OAAO,OAAO,CACZ,iBAAiB,EACjB,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,CACV,CAAA;SACF;QAED,OAAO,QAAQ,CAAC,KAAS,EAAE,QAAkB,cAAc,EAAE,IAAa;;YAExE,MAAM,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,IAAI,EAAE,EAChD,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;YACjC,OAAO,IAAI,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;SAC7D;QAED,OAAO,gBAAgB,CAAC,OAAqB;YAC3C,OAAO,IAAI,WAAW,CACpB,OAAO,CAAC,KAAK,CAAC,MAAM,EACpB,OAAO,CAAC,KAAK,EACb,OAAO,CAAC,EAAE,EACV,gBAAgB,GAAG,WAAW,EAAE,CACjC,CAAA;SACF;QAED,UAAU,CAAC,IAAQ,EAAE,OAAe;YAClC,OAAO1C,KAAG,CACR;gBACE,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC;gBAC9D,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC;gBAC9D,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;gBAC9D,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;aAC/D,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,UAAU;gBACtB,MAAM,IAAI,GAAG,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAA;gBAC1C,IACE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;qBACX,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC;qBAC7D,UAAU,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC;oBACjE,IAAI,CAAC,QAAQ,IAAI,OAAO,EACxB;oBACA,OAAO,IAAI,CAAC,CAAC,CAAA;iBACd;qBAAM;oBACL,OAAO,QAAQ,CAAA;iBAChB;aACF,CAAC,CACH,CAAA;SACF;QAED,WAAW,CAAC,IAAQ,EAAE,OAAe;YACnC,OAAOA,KAAG,CACR;gBACE,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC;gBAC9D,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC;gBAC9D,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;gBAC9D,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;aAC/D,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,UAAU;gBACtB,MAAM,IAAI,GAAG,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAA;gBAC1C,IACE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;qBACX,UAAU,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC;qBAC7D,UAAU,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC;oBACjE,IAAI,CAAC,QAAQ,IAAI,OAAO,EACxB;oBACA,OAAO,IAAI,CAAC,QAAQ,CAAA;iBACrB;qBAAM;oBACL,OAAO,QAAQ,CAAA;iBAChB;aACF,CAAC,CACH,CAAA;SACF;;;UCjGmB,IAAK,SAAQ,aAAa;QAO9C,YACW,KAAY,EACZ,CAAK,EACL,CAAK,EACL,EAAU,EACV,EAAU,EACZ,SAA4B,EAC1B,IAAa;YAEtB,KAAK,EAAE,CAAA;YARE,UAAK,GAAL,KAAK,CAAO;YACZ,MAAC,GAAD,CAAC,CAAI;YACL,MAAC,GAAD,CAAC,CAAI;YACL,OAAE,GAAF,EAAE,CAAQ;YACV,OAAE,GAAF,EAAE,CAAQ;YACZ,cAAS,GAAT,SAAS,CAAmB;YAC1B,SAAI,GAAJ,IAAI,CAAS;YAGtB,aAAa,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;YACrB,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;YACnB,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACnB,OAAO,CAAC,MAAM,KAAK,YAAY,KAAK,EAAE,KAAK,CAAC,CAAA;YAC5C,OAAO,CACL,MAAM,CAAC,KAAK,CAAC,QAAQ,KAAK,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EACnE,EAAE,EACF,EAAE,EACF,KAAK,CACN,CAAA;;;;;YAKD,OAAO,CACL,MAAM,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,uBAAuB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CACxE,CAAA;YACD,OAAO,CACL,MAAM,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAC1B,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,uBAAuB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CACxE,CAAA;;YAED,OAAO,CACL,MAAM,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAC9C,EAAE,EACF,KAAK,CAAC,IAAI,EACV,KAAK,CAAC,IAAI,CACX,CAAA;YACD,OAAO,CACL,MAAM,YAAY,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,EAC9C,EAAE,EACF,KAAK,CAAC,IAAI,EACV,KAAK,CAAC,IAAI,CACX,CAAA;YACD,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA;YACxC,IAAI,CAAC,EAAE,GAAGH,OAAK,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAA;YAC3C,IAAI,CAAC,EAAE,GAAGA,OAAK,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAA;YAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAA;SAClC;QAED,IAAI,IAAI;YACN,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA;SAClC;QAED,IAAI,IAAI;YACN,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA;SAClC;QAED,OAAO,MAAM,CAAC,IAAY;YACxB,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;SAC3E;QAED,OAAO,cAAc,CAAC,EAAQ,EAAE,EAAQ;;YAEtC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;YAC3C,UAAU,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAA;YACxB,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE;gBAChC,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;aACrB;YACD,MAAM,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAA;YAC/C,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;gBAC/D,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;gBACnB,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;gBACnB,MAAM,CAAC,KAAK,CAAC,CAAA;aACd;YACD,OAAO,GAAG,CAAC,IAAI;;YAEb,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE;gBAChB,OAAO,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA;aACzD,CACF,CAAA;SACF;QAED,OAAO,UAAU,CAAC,KAAa;YAC7B,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;gBACpB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,CAAA;gBAChC,MAAM,CACJ,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACvB,SAAS,CAAC,gBAAgB,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAC1E,CAAA;aACF,CAAC,CAAA;SACH;QAED,OAAO,WAAW,CAAC,IAAY,EAAE,YAAqB,IAAI;YACxD,OAAO,SAAS;kBACZ,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,KAC/B,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CACpC;kBACD,IAAI,CAAA;SACT;QAID,QAAQ;YACN,OAAO,OAAO,CACZ,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAC9B,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,EAAE,EACP,SAAS,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,CACV,CAAA;SACF;QAUD,cAAc,CAAC,IAAQ;YACrB,OAAO,IAAI,CAAC,KAAK,YAAY,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;SACjE;QAED,YAAY,CAAC,CAAS;YACpB,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;kBACpB,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC;kBAChC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA;SACrC;QAED,QAAQ,CAAC,CAAS;YAChB,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;kBACpB,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC;kBAChC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA;SACrC;QAED,QAAQ,CAAC,CAAS;YAChB,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;kBACpBA,OAAK,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC;kBAC1BA,OAAK,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA;SAC/B;;;;;;;QAUD,MAAM,CAAC,GAAQ;YACb,QACE,IAAI,KAAK,GAAG;iBACX,IAAI,CAAC,WAAW,IAAI,GAAG,CAAC,WAAW;oBAClC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;oBACpB,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;oBACpB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAChC;SACF;QAED,QAAQ;YACN,IAAI,QAAQ,GAAG,CAAC,CAAA;YAChB,QAAQ,GAAG,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;YAC5C,QAAQ,GAAG,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAA;YAC5C,QAAQ,GAAG,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA;YAChD,OAAO,QAAQ,GAAG,CAAC,CAAA;SACpB;QAED,IAAI,CAAC,IAAU;;;YAGb,QACE,IAAI,KAAK,IAAI;iBACZ,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;oBAClC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;oBACjC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAChC;SACF;QASD,OAAO;YACL,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAA;SACtB;QAED,QAAQ;YACN,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAA;SAC7C;QAED,QAAQ,CAAC,IAAU,EAAE,MAAgB;YACnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;YAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YAC5E,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YAC5E,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,MAAM,EAAE;gBACxC,OAAO,MAAM,GAAG,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;aAClD;YACD,OAAO,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;SAC/D;QAED,OAAO;YACL,MAAM,GAAG,GAAmB,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EACxD,GAAG,GAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAA;YACzD,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,GAAG;gBACjC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;oBACX,IAAI,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;wBACxC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;wBACtD,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;qBACvD;iBACF,CAAC,CAAA;aACH,CAAC,CAAA;YACF,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;YACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACrB,OAAO,IAAI,CAAA;SACZ;QAED,MAAM,CAAC,QAAa,CAAC;YACnB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;SACzD;QAQD,MAAM;YACJ,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAA;SACzB;QAED,UAAU;YACR,OAAOqB,MAAI,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAW,CAAA;SACzC;QAED,MAAM;YACJ,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAA;SAClD;;;;;;QAOD,OAAO,UAAU,CAAC,KAAa,EAAE,KAAa;YAC5C,QACE,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM;gBAC5B,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KACzC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,KAClB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAChD,CACF,EACF;SACF;;;UC3RU,YAAa,SAAQ,IAAI;QAIpC,YACE,IAAQ,EACR,CAAK,EACL,CAAK,EACL,EAAU,EACV,EAAU,EACH,SAAwB,EAC/B,IAAa;YAEb,KAAK,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;YAHnC,cAAS,GAAT,SAAS,CAAe;YAI/B,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;YACpB,CAAC,SAAS,IAAI,UAAU,CAAC,YAAY,EAAE,SAAS,CAAC,CAAA;YACjD,CAAC,IAAI,IAAI,OAAO,CAAC,MAAM,QAAQ,KAAK,OAAO,IAAI,EAAE,IAAI,CAAC,CAAA;YACtD,IAAI,CAAC,OAAO;gBACV,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,CAAA;SAClE;QAED,IAAI,IAAI;YACN,OAAO,IAAI,CAAC,OAAO,CAAA;SACpB;QAED,IAAI,IAAI;YACN,OAAO,IAAI,CAAC,OAAO,CAAA;SACpB;QAED,OAAO,aAAa,CAAC,CAAK,EAAE,CAAK,EAAE,IAAa;YAC9C,OAAO,IAAI,YAAY,CACrB,EAAE,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAC3C,CAAC,EACD,CAAC,EACD,CAAC,EACD,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,EAChB,SAAS,EACT,IAAI,CACL,CAAA;SACF;;;;;;;QAQD,OAAO,KAAK,CACV,QAA2B,EAC3B,SAAkB,IAAI;YAEtB,MAAM,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAA;YAC1B,OAAO,iBAAiB,CAAC,MAAM,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,KAC/C,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAChE,CAAA;SACF;QAED,QAAQ;YACN,OAAO,OAAO,CACZ,kBAAkB,EAClB,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,EAAE,CACR,CAAA;SACF;QAED,cAAc;YACZ,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SAChB;QAED,WAAW;YACT,OAAO,CAAC,CAAA;SACT;QAED,MAAM;YACJ,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAA;SACxB;QAED,iBAAiB,CAAC,KAAS;YACzB,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA;YACrE,OAAO,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAA;SAC/D;QAED,mBAAmB,CAAC,OAAgB;YAClC,IAAI,OAAO,YAAY,YAAY,EAAE;gBACnC,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;aAC7C;iBAAM;gBACL,OAAO,OAAO;qBACX,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC;qBACvB,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;qBAC9C,MAAM,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,CAAA;aAC/D;SACF;QAED,SAAS;YACP,OAAO,IAAI,CAAC,OAAO,CAAA;SACpB;QAED,OAAO;YACL,QACE,IAAI,CAAC,SAAS;iBACb,IAAI,CAAC,SAAS,GAAG,IAAI,YAAY,CAChC,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,EAAE,EACP,IAAI,EACJ,IAAI,CAAC,IAAI,CACV,CAAC,EACH;SACF;QAED,SAAS,CAAC,EAAM,EAAE,IAAa;YAC7B,MAAM,mBAAmB,GAAG,EAAE;iBAC3B,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;iBACpD,MAAM,EAAE,CAAA;YACX,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;YACtC,MAAM,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACnC,MAAM,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACnC,OAAO,IAAI,YAAY,CACrB,KAAK,EACL,CAAC,EACD,CAAC,EACD,EAAE,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,mBAAmB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAC/D,EAAE,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,mBAAmB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAC/D,SAAS,EACT,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CACd,CAAA;SACV;QAED,UAAU,CAAC,EAAM,EAAE,IAAa;YAC9B,MAAM,mBAAmB,GAAG,EAAE;iBAC3B,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;iBACpD,MAAM,EAAE,CAAA;YACX,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAA;YACvC,MAAM,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACnC,MAAM,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACnC,OAAO,IAAI,YAAY,CACrB,KAAK,EACL,CAAC,EACD,CAAC,EACD,EAAE,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,mBAAmB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAC/D,EAAE,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,mBAAmB,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAC/D,SAAS,EACT,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CACd,CAAA;SACV;QAED,QAAQ,CAAC,IAAU;YACjB,QACE,IAAI,KAAK,IAAI;gBACb,IAAI,KAAK,IAAI,CAAC,SAAS;iBACtB,IAAI,CAAC,WAAW,YAAY,YAAY;qBACtC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;yBACzC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACnD;SACF;QAED,QAAQ,CAAC,CAAK;YACZ,aAAa,CAAC,CAAC,CAAC,CAAA;YAChB,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;YAC3D,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;gBAC5C,OAAM;aACP;YACD,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAA;YACtC,OAAO,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,GAAG,SAAS,CAAA;SACpE;QAED,KAAK,CAAC,CAAS;YACb,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YAC1B,OAAO;gBACL,IAAI,YAAY,CACd,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,CAAC,EACN,CAAC,EACD,IAAI,CAAC,EAAE,EACP,CAAC,EACD,SAAS,EACT,IAAI,CAAC,IAAI,GAAG,MAAM,CACnB;gBACD,IAAI,YAAY,CACd,IAAI,CAAC,KAAK,EACV,CAAC,EACD,IAAI,CAAC,CAAC,EACN,CAAC,EACD,IAAI,CAAC,EAAE,EACP,SAAS,EACT,IAAI,CAAC,IAAI,GAAG,OAAO,CACpB;aACF,CAAA;SACF;;;UCjMU,UAAW,SAAQ,IAAI;QAClC,YACE,KAAY,EACZ,CAAK,EACL,CAAK,EACL,EAAU,EACV,EAAU,EACH,SAAiC,EAC/B,IAAQ,EACR,IAAQ,EACjB,IAAa;YAEb,KAAK,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,CAAC,CAAA;YALpC,cAAS,GAAT,SAAS,CAAwB;YAC/B,SAAI,GAAJ,IAAI,CAAI;YACR,SAAI,GAAJ,IAAI,CAAI;YAIjB,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;YACzB,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAA;YACnC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAA;YACnC,IAAI,EAAE,KAAK,YAAY,OAAO,CAAC,EAAE;;gBAE/B,OAAO,CACL,MAAM,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,EAC9C,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CACnD,CAAA;gBACD,OAAO,CACL,MAAM,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,cAAc,CAAC,IAAI,CAAC,EAC9C,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CACnD,CAAA;aACF;YACD,MAAM,CACJ,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EACxD,EAAE;gBACA,GAAG;gBACH,EAAE;gBACF,GAAG;gBACH,KAAK,CAAC,WAAW,CAAC,IAAI;gBACtB,GAAG;gBACH,IAAI,CAAC,IAAI,CAAC,GAAG;gBACb,GAAG;gBACH,IAAI,CAAC,IAAI,CAAC,GAAG;gBACb,GAAG;gBACH,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CACtB,CAAA;YACD,MAAM,CACJ,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EACxD,EAAE;gBACA,GAAG;gBACH,EAAE;gBACF,GAAG;gBACH,KAAK,CAAC,WAAW,CAAC,IAAI;gBACtB,GAAG;gBACH,IAAI,CAAC,IAAI,CAAC,GAAG;gBACb,GAAG;gBACH,IAAI,CAAC,IAAI,CAAC,GAAG;gBACb,GAAG;gBACH,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CACtB,CAAA;SACF;QAED,OAAO,aAAa,CAAC,KAAY,EAAE,EAAU,EAAE,EAAU,EAAE,IAAa;YACtE,OAAO,IAAI,UAAU,CACnB,KAAK,EACL,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EACZ,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EACZ,EAAE,EACF,EAAE,EACF,SAAS,EACT,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,EAC7D,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,EAC7D,IAAI,CACL,CAAA;SACF;QAED,QAAQ;YACN,OAAO,OAAO,CACZ,gBAAgB,EAChB,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,EAAE,EACP,SAAS,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,CACV,CAAA;SACF;QAED,cAAc;YACZ,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CACjC,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,QAAQ,EACb,KAAK,CACN,CAAA;SACF;QAED,WAAW;YACT,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,CAAA;SAC5B;QAED,MAAM;YACJ,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CACjC,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,QAAQ,EACb,IAAI,CACL,CAAA;SACF;QAED,mBAAmB,CAAC,OAAgB;YAClC,OAAO,IAAI,CAAC,KAAK;iBACd,eAAe,CAAC,OAAO,CAAC;iBACxB,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;iBAC9C,MAAM,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,CAAA;SAC/D;QAED,iBAAiB,CAAC,OAAW;YAC3B,OAAO,IAAI,CAAC,KAAK;iBACd,aAAa,CAAC,OAAO,CAAC;iBACtB,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;iBAC9C,MAAM,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,CAAA;SAC/D;QAED,SAAS,CAAC,CAAS;YACjB,OAAO,CAAC,IAAI,CAAC,QAAQ;kBACjB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;kBACvB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAA;SACtC;QAED,OAAO;YACL,QACE,IAAI,CAAC,SAAS;iBACb,IAAI,CAAC,SAAS,GAAG,IAAI,UAAU,CAC9B,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,CAAC,EACN,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,EAAE,EACP,IAAI,EACJ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EACnB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EACnB,IAAI,CAAC,IAAI,CACV,CAAC,EACH;SACF;QAED,SAAS,CAAC,EAAM,EAAE,IAAa;YAC7B,OAAO,IAAI,UAAU,CACnB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,EACxB,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EACzB,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EACzB,IAAI,CAAC,EAAE,EACP,IAAI,CAAC,EAAE,EACP,SAAS,EACT,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAC7B,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAC7B,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CACd,CAAA;SACV;QAED,UAAU,CAAC,EAAM,EAAE,IAAa;YAC9B,MAAM,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACpC,MAAM,EAAE,GAAG,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACpC,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAA;YACxC,OAAO,IAAI,UAAU,CACnB,MAAM,EACN,EAAE,EACF,EAAE,EACF,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAChC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,EAChC,SAAS,EACT,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAC7B,EAAE,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAC7B,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CACd,CAAA;SACV;QAED,QAAQ,CAAC,IAAU;YACjB,QACE,IAAI,KAAK,IAAI;gBACb,IAAI,KAAK,IAAI,CAAC,SAAS;iBACtB,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC;qBACjC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;yBACzC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACnD;SACF;QACD,KAAK,CAAC,CAAS;YACb,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;YAC7B,OAAO;gBACL,IAAI,UAAU,CACZ,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,CAAC,EACN,CAAC,EACD,IAAI,CAAC,EAAE,EACP,CAAC,EACD,SAAS,EACT,IAAI,CAAC,IAAI,EACT,GAAG,EACH,IAAI,CAAC,IAAI,GAAG,MAAM,CACnB;gBACD,IAAI,UAAU,CACZ,IAAI,CAAC,KAAK,EACV,CAAC,EACD,IAAI,CAAC,CAAC,EACN,CAAC,EACD,IAAI,CAAC,EAAE,EACP,SAAS,EACT,IAAI,CAAC,IAAI,EACT,GAAG,EACH,IAAI,CAAC,IAAI,GAAG,OAAO,CACpB;aACF,CAAA;SACF;;;;;;;;;;;;;;;;;uUC7NayB,EAAcC,GAC5B,IAAIC,EAAM,GAELC,MAAMC,QAAQH,KACjBA,EAAW,CAACA,IAEd,IAAK,IAAIrB,EAAI,EAAGA,EAAIqB,EAASI,OAAQzB,IAAK,CACxC,IAAM0B,EAAUL,EAASrB,GACzB,GAAI0B,EAAQC,OAASC,EAAYC,WAC/BP,GAAO,SACF,GAAII,EAAQC,OAASC,EAAYE,cACtCR,IAAQI,EAAQK,SAAW,IAAM,KAC/BL,EAAQM,OACL,GAAIN,EAAQC,OAASC,EAAYK,aACtCX,IAAQI,EAAQK,SAAW,IAAM,KAC/BL,EAAQQ,OACL,GAAIR,EAAQC,OAASC,EAAYO,QACtCb,IAAQI,EAAQK,SAAW,IAAM,KAC/BL,EAAQM,EApBJ,IAoBcN,EAAQQ,OACvB,GAAIR,EAAQC,OAASC,EAAYQ,QACtCd,IAAQI,EAAQK,SAAW,IAAM,KAC/BL,EAAQM,EAvBJ,IAuBcN,EAAQQ,OACvB,GAAIR,EAAQC,OAASC,EAAYS,SACtCf,IAAQI,EAAQK,SAAW,IAAM,KAC/BL,EAAQY,GA1BJ,IA0BeZ,EAAQa,GA1BvB,IA2BEb,EAAQc,GA3BV,IA2BqBd,EAAQe,GA3B7B,IA4BEf,EAAQM,EA5BV,IA4BoBN,EAAQQ,OAC7B,GAAIR,EAAQC,OAASC,EAAYc,gBACtCpB,IAAQI,EAAQK,SAAW,IAAM,KAC/BL,EAAQc,GA/BJ,IA+Bed,EAAQe,GA/BvB,IAgCEf,EAAQM,EAhCV,IAgCoBN,EAAQQ,OAC7B,GAAIR,EAAQC,OAASC,EAAYe,QACtCrB,IAAQI,EAAQK,SAAW,IAAM,KAC/BL,EAAQY,GAnCJ,IAmCeZ,EAAQa,GAnCvB,IAoCEb,EAAQM,EApCV,IAoCoBN,EAAQQ,OAC7B,GAAIR,EAAQC,OAASC,EAAYgB,eACtCtB,IAAQI,EAAQK,SAAW,IAAM,KAC/BL,EAAQM,EAvCJ,IAuCcN,EAAQQ,OACvB,CAAA,GAAIR,EAAQC,OAASC,EAAYiB,IAQtC,MAAM,IAAIC,MACR,4BAA8BpB,EAAgBC,mBAAkB3B,OARlEsB,IAAQI,EAAQK,SAAW,IAAM,KAC/BL,EAAQqB,GA1CJ,IA0CerB,EAAQsB,GA1CvB,IA2CEtB,EAAQuB,KA3CV,MA4CIvB,EAAQwB,SA5CZ,MA4CgCxB,EAAQyB,UA5CxC,IA6CEzB,EAAQM,EA7CV,IA6CoBN,EAAQQ,IAQtC,OAAOZ,WCzDO8B,EAAOC,EAA0BC,OAAzBtB,OAAGE,OACzB,OAAO,CACLF,EAAIuB,KAAKvE,IAAIsE,GAAOpB,EAAIqB,KAAKtE,IAAIqE,GACjCtB,EAAIuB,KAAKtE,IAAIqE,GAAOpB,EAAIqB,KAAKvE,IAAIsE,IAIrC,SACgBE,QAAc,aAAAC,mBAAAA,IAAAC,kBAE1B,IAAK,IAAI1D,EAAI,EAAGA,EAAI0D,EAAQjC,OAAQzB,IAClC,GAAI,iBAAoB0D,EAAQ1D,GAC9B,MAAM,IAAI8C,MACR,2BAA2B9C,+BAA8B0D,EAAQ1D,iBAAgB0D,EAAQ1D,IAIjG,QAAO,EAGT,IAAM7B,EAAKoF,KAAKpF,GAShB,SAAgBwF,EAAmBC,EAAatB,EAAYC,GAC1DqB,EAAEV,SAAY,IAAMU,EAAEV,SAAY,EAAI,EACtCU,EAAET,UAAa,IAAMS,EAAET,UAAa,EAAI,EAEnC,IAAAJ,OAAIC,OAAIhB,MAAGE,MAEhBa,EAAKQ,KAAK3E,IAAIgF,EAAEb,IAChBC,EAAKO,KAAK3E,IAAIgF,EAAEZ,IACV,IAAAK,qCAACQ,OAAKC,OACNC,EAAYR,KAAKS,IAAIH,EAAK,GAAKN,KAAKS,IAAIjB,EAAI,GAAKQ,KAAKS,IAAIF,EAAK,GAAKP,KAAKS,IAAIhB,EAAI,GAEnF,EAAIe,IACNhB,GAAMQ,KAAK3D,KAAKmE,GAChBf,GAAMO,KAAK3D,KAAKmE,IAElBH,EAAEb,GAAKA,EACPa,EAAEZ,GAAKA,EACP,IAAMiB,EAAeV,KAAKS,IAAIjB,EAAI,GAAKQ,KAAKS,IAAIF,EAAK,GAAKP,KAAKS,IAAIhB,EAAI,GAAKO,KAAKS,IAAIH,EAAK,GACpFK,GAAWN,EAAEV,WAAaU,EAAET,UAAY,GAAK,GACjDI,KAAK3D,KAAK2D,KAAK7E,IAAI,GAAI6E,KAAKS,IAAIjB,EAAI,GAAKQ,KAAKS,IAAIhB,EAAI,GAAKiB,GAAeA,IACtEE,EAAMpB,EAAKe,EAAMd,EAAKkB,EACtBE,GAAOpB,EAAKa,EAAMd,EAAKmB,EACvBG,EAAOjB,EAAO,CAACe,EAAKC,GAAMR,EAAEX,KAAO,IAAM9E,GAE/CyF,EAAEU,GAAKD,EAAK,IAAM/B,EAAKN,GAAK,EAC5B4B,EAAEW,GAAKF,EAAK,IAAM9B,EAAKL,GAAK,EAC5B0B,EAAEY,KAAOjB,KAAKlE,OAAOyE,EAAMM,GAAOpB,GAAKa,EAAMM,GAAOpB,GACpDa,EAAEa,KAAOlB,KAAKlE,QAAQyE,EAAMM,GAAOpB,IAAMa,EAAMM,GAAOpB,GAClD,IAAMa,EAAET,WAAaS,EAAEa,KAAOb,EAAEY,OAClCZ,EAAEa,MAAQ,EAAItG,GAEZ,IAAMyF,EAAET,WAAaS,EAAEa,KAAOb,EAAEY,OAClCZ,EAAEa,MAAQ,EAAItG,GAEhByF,EAAEY,MAAQ,IAAMrG,EAChByF,EAAEa,MAAQ,IAAMtG,GAalB,SAAgBuG,EAA2BC,EAAWC,EAAWhB,GAC/DJ,EAAcmB,EAAGC,EAAGhB,GAEpB,IAAMiB,EAAUF,EAAIA,EAAIC,EAAIA,EAAIhB,EAAIA,EAEpC,GAAI,EAAIiB,EACN,OAAO,GACF,GAAI,IAAMA,EACf,OAAO,CACL,CACGF,EAAIf,GAAMe,EAAIA,EAAIC,EAAIA,GACtBA,EAAIhB,GAAMe,EAAIA,EAAIC,EAAIA,KAE7B,IAAME,EAAOvB,KAAK3D,KAAKiF,GAEvB,OAAO,CACL,EACGF,EAAIf,EAAIgB,EAAIE,IAASH,EAAIA,EAAIC,EAAIA,IACjCA,EAAIhB,EAAIe,EAAIG,IAASH,EAAIA,EAAIC,EAAIA,IACpC,EACGD,EAAIf,EAAIgB,EAAIE,IAASH,EAAIA,EAAIC,EAAIA,IACjCA,EAAIhB,EAAIe,EAAIG,IAASH,EAAIA,EAAIC,EAAIA,KAIxC,ICjGiBG,EDiGJC,EAAMzB,KAAKpF,GAAK,IAE7B,SAAgBC,EAAKuG,EAAWC,EAAWK,GACzC,QAAQ,EAAIA,GAAKN,EAAIM,EAAIL,EAG3B,SAAgBM,EAAMtB,EAAWtB,EAAYE,EAAY2C,GACvD,OAAOvB,EAAIL,KAAKvE,IAAImG,EAAS,IAAMhH,GAAMmE,EAAKiB,KAAKtE,IAAIkG,EAAS,IAAMhH,GAAMqE,EAG9E,SAAgB4C,EAAWC,EAAY/C,EAAYE,EAAY8C,GAC7D,IACMC,EAAMjD,EAAK+C,EACXG,EAAMhD,EAAKF,EAEXqC,EAAI,EAAIY,EAAM,GADRD,EAAK9C,GACa,EAAIgD,EAC5BZ,EAAkB,GAAbY,EAAMD,GACX3B,EAAI,EAAI2B,EAGd,OAAIhC,KAAK3E,IAAI+F,GATD,KAWH,EAAEf,EAAIgB,GAiBjB,SAAmBa,EAAWC,EAAWC,gBAAAA,QAEvC,IAAMC,EAAiBH,EAAIA,EAAI,EAAIC,EAEnC,GAAIE,GAAkBD,EACpB,OAAO,GACF,GAAIC,GAAkBD,EAC3B,OAAO,EAAEF,EAAI,GAEf,IAAMI,EAAOtC,KAAK3D,KAAKgG,GAEvB,OAAO,EAAGH,EAAI,EAAKI,GAAQJ,EAAI,EAAKI,GA1B7BC,CAAUlB,EAAID,EAAGf,EAAIe,EAbhB,eAiBEoB,EAASV,EAAY/C,EAAYE,EAAY8C,EAAYL,GAEvE,IAAMe,EAAI,EAAIf,EAMd,OAAOI,GALIW,EAAIA,EAAIA,GAKF1D,GAJN,EAAI0D,EAAIA,EAAIf,GAIIzC,GAHhB,EAAIwD,EAAIf,EAAIA,GAGcK,GAF1BL,EAAIA,EAAIA,ICnIrB,SAAiBF,GAuCf,SAAgBkB,IACd,OAAOC,GAAK,SAACxE,EAASyE,EAAOC,GAyB3B,OAxBI1E,EAAQK,gBAEN,IAAuBL,EAAQY,KACjCZ,EAAQY,IAAM6D,QAEZ,IAAuBzE,EAAQa,KACjCb,EAAQa,IAAM6D,QAGZ,IAAuB1E,EAAQc,KACjCd,EAAQc,IAAM2D,QAEZ,IAAuBzE,EAAQe,KACjCf,EAAQe,IAAM2D,QAGZ,IAAuB1E,EAAQM,IACjCN,EAAQM,GAAKmE,QAEX,IAAuBzE,EAAQQ,IACjCR,EAAQQ,GAAKkE,GAEf1E,EAAQK,UAAW,GAEdL,KAkEX,SAAgB2E,IACd,IAAIC,EAAeC,IACfC,EAAeD,IACfE,EAAaF,IACbG,EAAaH,IAEjB,OAAOL,GAAK,SAACxE,EAASyE,EAAOC,GA8B3B,OA7BI1E,EAAQC,KAAOC,EAAYc,kBAC7BhB,EAAQC,KAAOC,EAAYS,SAC3BiE,EAAeK,MAAML,GAAgBH,EAAQG,EAC7CE,EAAeG,MAAMH,GAAgBJ,EAAQI,EAC7C9E,EAAQY,GAAKZ,EAAQK,SAAWoE,EAAQG,EAAe,EAAIH,EAAQG,EACnE5E,EAAQa,GAAKb,EAAQK,SAAWqE,EAAQI,EAAe,EAAIJ,EAAQI,GAEjE9E,EAAQC,KAAOC,EAAYS,UAC7BiE,EAAe5E,EAAQK,SAAWoE,EAAQzE,EAAQc,GAAKd,EAAQc,GAC/DgE,EAAe9E,EAAQK,SAAWqE,EAAQ1E,EAAQe,GAAKf,EAAQe,KAE/D6D,EAAeC,IACfC,EAAeD,KAEb7E,EAAQC,KAAOC,EAAYgB,iBAC7BlB,EAAQC,KAAOC,EAAYe,QAC3B8D,EAAaE,MAAMF,GAAcN,EAAQM,EACzCC,EAAaC,MAAMD,GAAcN,EAAQM,EACzChF,EAAQY,GAAKZ,EAAQK,SAAWoE,EAAQM,EAAa,EAAIN,EAAQM,EACjE/E,EAAQa,GAAKb,EAAQK,SAAWqE,EAAQM,EAAa,EAAIN,EAAQM,GAE/DhF,EAAQC,KAAOC,EAAYe,SAC7B8D,EAAa/E,EAAQK,SAAWoE,EAAQzE,EAAQY,GAAKZ,EAAQY,GAC7DoE,EAAahF,EAAQK,SAAWqE,EAAQ1E,EAAQa,GAAKb,EAAQa,KAE7DkE,EAAaF,IACbG,EAAaH,KAGR7E,KAYX,SAAgBkF,IACd,IAAIC,EAAaN,IACbO,EAAaP,IAEjB,OAAOL,GAAK,SAACxE,EAASyE,EAAOC,GAQ3B,GAPI1E,EAAQC,KAAOC,EAAYgB,iBAC7BlB,EAAQC,KAAOC,EAAYe,QAC3BkE,EAAaF,MAAME,GAAcV,EAAQU,EACzCC,EAAaH,MAAMG,GAAcV,EAAQU,EACzCpF,EAAQY,GAAKZ,EAAQK,SAAWoE,EAAQU,EAAa,EAAIV,EAAQU,EACjEnF,EAAQa,GAAKb,EAAQK,SAAWqE,EAAQU,EAAa,EAAIV,EAAQU,GAE/DpF,EAAQC,KAAOC,EAAYe,QAAS,CACtCkE,EAAanF,EAAQK,SAAWoE,EAAQzE,EAAQY,GAAKZ,EAAQY,GAC7DwE,EAAapF,EAAQK,SAAWqE,EAAQ1E,EAAQa,GAAKb,EAAQa,GAC7D,IAAMD,EAAKZ,EAAQY,GACbC,EAAKb,EAAQa,GAEnBb,EAAQC,KAAOC,EAAYS,SAC3BX,EAAQY,KAAOZ,EAAQK,SAAW,EAAIoE,GAAc,EAAL7D,GAAU,EACzDZ,EAAQa,KAAOb,EAAQK,SAAW,EAAIqE,GAAc,EAAL7D,GAAU,EACzDb,EAAQc,IAAMd,EAAQM,EAAS,EAALM,GAAU,EACpCZ,EAAQe,IAAMf,EAAQQ,EAAS,EAALK,GAAU,QAEpCsE,EAAaN,IACbO,EAAaP,IAGf,OAAO7E,KAGX,SAAgBwE,EACda,GAEA,IAAIC,EAAW,EACXC,EAAW,EACXC,EAAgBX,IAChBY,EAAgBZ,IAEpB,OAAO,SAAmB7E,GACxB,GAAIiF,MAAMO,MAAoBxF,EAAQC,KAAOC,EAAYO,SACvD,MAAM,IAAIW,MAAM,+BAGlB,IAAMsE,EAASL,EAAErF,EAASsF,EAAUC,EAAUC,EAAeC,GAmB7D,OAjBIzF,EAAQC,KAAOC,EAAYC,aAC7BmF,EAAWE,EACXD,EAAWE,QAGT,IAAuBzF,EAAQM,IACjCgF,EAAYtF,EAAQK,SAAWiF,EAAWtF,EAAQM,EAAIN,EAAQM,QAE5D,IAAuBN,EAAQQ,IACjC+E,EAAYvF,EAAQK,SAAWkF,EAAWvF,EAAQQ,EAAIR,EAAQQ,GAG5DR,EAAQC,KAAOC,EAAYO,UAC7B+E,EAAgBF,EAChBG,EAAgBF,GAGXG,GAoFX,SAAgBC,EAAO1C,EAAWC,EAAWhB,EAAW0D,EAAWC,EAAWR,GAG5E,OAFAvD,EAAcmB,EAAGC,EAAGhB,EAAG0D,EAAGC,EAAGR,GAEtBb,GAAK,SAACxE,EAASyE,EAAOC,EAAOoB,GAClC,IAAMC,EAAS/F,EAAQY,GACjBoF,EAAShG,EAAQc,GAGjBmF,EAASjG,EAAQK,WAAa4E,MAAMa,GACpCxF,OAAI,IAAuBN,EAAQM,EAAIN,EAAQM,EAAK2F,EAAS,EAAIxB,EACjEjE,OAAI,IAAuBR,EAAQQ,EAAIR,EAAQQ,EAAKyF,EAAS,EAAIvB,EA6BvE,SAASwB,EAAI5F,GAAa,OAAOA,EAAIA,EA3BjCN,EAAQC,KAAOC,EAAYE,eAAiB,IAAM8C,IACpDlD,EAAQC,KAAOC,EAAYQ,QAC3BV,EAAQQ,EAAIR,EAAQK,SAAW,EAAIqE,GAEjC1E,EAAQC,KAAOC,EAAYK,cAAgB,IAAM2B,IACnDlC,EAAQC,KAAOC,EAAYQ,QAC3BV,EAAQM,EAAIN,EAAQK,SAAW,EAAIoE,QAGjC,IAAuBzE,EAAQM,IACjCN,EAAQM,EAAKN,EAAQM,EAAI2C,EAAMzC,EAAI0B,GAAM+D,EAAS,EAAIJ,SAEpD,IAAuB7F,EAAQQ,IACjCR,EAAQQ,EAAKF,EAAI4C,EAAKlD,EAAQQ,EAAIoF,GAAKK,EAAS,EAAIZ,SAElD,IAAuBrF,EAAQY,KACjCZ,EAAQY,GAAKZ,EAAQY,GAAKqC,EAAIjD,EAAQa,GAAKqB,GAAK+D,EAAS,EAAIJ,SAE3D,IAAuB7F,EAAQa,KACjCb,EAAQa,GAAKkF,EAAS7C,EAAIlD,EAAQa,GAAK+E,GAAKK,EAAS,EAAIZ,SAEvD,IAAuBrF,EAAQc,KACjCd,EAAQc,GAAKd,EAAQc,GAAKmC,EAAIjD,EAAQe,GAAKmB,GAAK+D,EAAS,EAAIJ,SAE3D,IAAuB7F,EAAQe,KACjCf,EAAQe,GAAKiF,EAAS9C,EAAIlD,EAAQe,GAAK6E,GAAKK,EAAS,EAAIZ,IAG3D,IAAMc,EAAMlD,EAAI2C,EAAI1C,EAAIhB,EAExB,QAAI,IAAuBlC,EAAQuB,OAE7B,IAAM0B,GAAK,IAAMC,GAAK,IAAMhB,GAAK,IAAM0D,GAEzC,GAAI,IAAMO,SAIDnG,EAAQqB,UACRrB,EAAQsB,UACRtB,EAAQuB,YACRvB,EAAQwB,gBACRxB,EAAQyB,UACfzB,EAAQC,KAAOC,EAAYQ,aACtB,CAEL,IAAMa,EAAOvB,EAAQuB,KAAOM,KAAKpF,GAAK,IAOhC2J,EAASvE,KAAKtE,IAAIgE,GAClB8E,EAASxE,KAAKvE,IAAIiE,GAClB+E,EAAS,EAAIJ,EAAIlG,EAAQqB,IACzBkF,EAAS,EAAIL,EAAIlG,EAAQsB,IACzBkF,EAAIN,EAAIG,GAAUC,EAASJ,EAAIE,GAAUG,EACzCE,EAAI,EAAIL,EAASC,GAAUC,EAASC,GACpCG,EAAIR,EAAIE,GAAUE,EAASJ,EAAIG,GAAUE,EAOzCI,EAAKH,EAAIZ,EAAIA,EAAIa,EAAIvD,EAAI0C,EAAIc,EAAIxD,EAAIA,EACrC0D,EAAKH,GAAKxD,EAAI2C,EAAI1C,EAAIhB,GAAK,GAAKsE,EAAItE,EAAI0D,EAAIc,EAAIzD,EAAIC,GACpD2D,EAAKL,EAAItE,EAAIA,EAAIuE,EAAIxD,EAAIf,EAAIwE,EAAIzD,EAAIA,EAerC6D,GAAYjF,KAAKlE,MAAMiJ,EAAID,EAAKE,GAAMhF,KAAKpF,IAAMoF,KAAKpF,GAAM,EAM5DsK,EAAYlF,KAAKtE,IAAIuJ,GACrBE,EAAYnF,KAAKvE,IAAIwJ,GAE3B9G,EAAQqB,GAAKQ,KAAK3E,IAAIiJ,GACpBtE,KAAK3D,KAAKyI,EAAKT,EAAIc,GAAaJ,EAAKG,EAAYC,EAAYH,EAAKX,EAAIa,IACxE/G,EAAQsB,GAAKO,KAAK3E,IAAIiJ,GACpBtE,KAAK3D,KAAKyI,EAAKT,EAAIa,GAAaH,EAAKG,EAAYC,EAAYH,EAAKX,EAAIc,IACxEhH,EAAQuB,KAAiB,IAAVuF,EAAgBjF,KAAKpF,IAW1C,YAHI,IAAuBuD,EAAQyB,WAAa,EAAI0E,IAClDnG,EAAQyB,YAAczB,EAAQyB,WAEzBzB,KAwDX,SAAgBiH,IACd,OAAO,SAAC/E,GACN,IAAMwD,EAAS,GAEf,IAAK,IAAMwB,KAAOhF,EAChBwD,EAAOwB,GAA2BhF,EAAEgF,GAEtC,OAAOxB,GAzfKrC,QAAhB,SAAsB8D,GAEpB,SAASC,EAAGC,GAAe,OAAOxF,KAAK7D,MAAMqJ,EAAMF,GAAYA,EAC/D,oBAHoBA,QACpBrF,EAAcqF,GAEP,SAAenH,GA6BpB,YA5BI,IAAuBA,EAAQY,KACjCZ,EAAQY,GAAKwG,EAAGpH,EAAQY,UAEtB,IAAuBZ,EAAQa,KACjCb,EAAQa,GAAKuG,EAAGpH,EAAQa,UAGtB,IAAuBb,EAAQc,KACjCd,EAAQc,GAAKsG,EAAGpH,EAAQc,UAEtB,IAAuBd,EAAQe,KACjCf,EAAQe,GAAKqG,EAAGpH,EAAQe,UAGtB,IAAuBf,EAAQM,IACjCN,EAAQM,EAAI8G,EAAGpH,EAAQM,SAErB,IAAuBN,EAAQQ,IACjCR,EAAQQ,EAAI4G,EAAGpH,EAAQQ,SAGrB,IAAuBR,EAAQqB,KACjCrB,EAAQqB,GAAK+F,EAAGpH,EAAQqB,UAEtB,IAAuBrB,EAAQsB,KACjCtB,EAAQsB,GAAK8F,EAAGpH,EAAQsB,KAGnBtB,IAIKqD,WA8BAA,SAAhB,WACE,OAAOmB,GAAK,SAACxE,EAASyE,EAAOC,GAyB3B,OAxBK1E,EAAQK,gBAEP,IAAuBL,EAAQY,KACjCZ,EAAQY,IAAM6D,QAEZ,IAAuBzE,EAAQa,KACjCb,EAAQa,IAAM6D,QAGZ,IAAuB1E,EAAQc,KACjCd,EAAQc,IAAM2D,QAEZ,IAAuBzE,EAAQe,KACjCf,EAAQe,IAAM2D,QAGZ,IAAuB1E,EAAQM,IACjCN,EAAQM,GAAKmE,QAEX,IAAuBzE,EAAQQ,IACjCR,EAAQQ,GAAKkE,GAEf1E,EAAQK,UAAW,GAEdL,MAIKqD,gBAAhB,SAA8BiE,EAAmBC,EAAmBC,GAClE,oBAD4BF,mBAAmBC,mBAAmBC,MAC3DhD,GAAK,SAACxE,EAASyE,EAAOC,EAAOoB,EAAY2B,GAC9C,GAAIxC,MAAMa,MAAiB9F,EAAQC,KAAOC,EAAYO,SACpD,MAAM,IAAIW,MAAM,+BAuBlB,OArBImG,GAAcvH,EAAQC,KAAOC,EAAYE,gBAC3CJ,EAAQC,KAAOC,EAAYQ,QAC3BV,EAAQQ,EAAIR,EAAQK,SAAW,EAAIqE,GAEjC8C,GAAcxH,EAAQC,KAAOC,EAAYK,eAC3CP,EAAQC,KAAOC,EAAYQ,QAC3BV,EAAQM,EAAIN,EAAQK,SAAW,EAAIoE,GAEjC6C,GAActH,EAAQC,KAAOC,EAAYC,aAC3CH,EAAQC,KAAOC,EAAYQ,QAC3BV,EAAQM,EAAIN,EAAQK,SAAWyF,EAAarB,EAAQqB,EACpD9F,EAAQQ,EAAIR,EAAQK,SAAWoH,EAAa/C,EAAQ+C,GAElDzH,EAAQC,KAAOC,EAAYiB,MAAQ,IAAMnB,EAAQqB,IAAM,IAAMrB,EAAQsB,MACvEtB,EAAQC,KAAOC,EAAYQ,eACpBV,EAAQqB,UACRrB,EAAQsB,UACRtB,EAAQuB,YACRvB,EAAQwB,gBACRxB,EAAQyB,WAEVzB,MAMKqD,iBAgDAA,YA+BAA,SAsCAA,WAAhB,SAAyBqE,gBAAAA,KACvB5F,EAAc4F,GACd,IAAI9C,EAAeC,IACfC,EAAeD,IACfE,EAAaF,IACbG,EAAaH,IAEjB,OAAOL,GAAK,SAACxE,EAASyE,EAAOC,EAAOoB,EAAY2B,GAC9C,IAAMvK,EAAM2E,KAAK3E,IACbyK,GAAO,EACPC,EAAQ,EACRC,EAAQ,EAwBZ,GAtBI7H,EAAQC,KAAOC,EAAYc,kBAC7B4G,EAAQ3C,MAAML,GAAgB,EAAIH,EAAQG,EAC1CiD,EAAQ5C,MAAMH,GAAgB,EAAIJ,EAAQI,GAExC9E,EAAQC,MAAQC,EAAYS,SAAWT,EAAYc,kBACrD4D,EAAe5E,EAAQK,SAAWoE,EAAQzE,EAAQc,GAAKd,EAAQc,GAC/DgE,EAAe9E,EAAQK,SAAWqE,EAAQ1E,EAAQe,GAAKf,EAAQe,KAE/D6D,EAAeC,IACfC,EAAeD,KAEb7E,EAAQC,KAAOC,EAAYgB,gBAC7B6D,EAAaE,MAAMF,GAAcN,EAAQ,EAAIA,EAAQM,EACrDC,EAAaC,MAAMD,GAAcN,EAAQ,EAAIA,EAAQM,GAC5ChF,EAAQC,KAAOC,EAAYe,SACpC8D,EAAa/E,EAAQK,SAAWoE,EAAQzE,EAAQY,GAAKZ,EAAQY,GAC7DoE,EAAahF,EAAQK,SAAWqE,EAAQ1E,EAAQa,GAAKb,EAAQe,KAE7DgE,EAAaF,IACbG,EAAaH,KAGX7E,EAAQC,KAAOC,EAAY4H,eAC7B9H,EAAQC,KAAOC,EAAYiB,MAAQ,IAAMnB,EAAQqB,IAAM,IAAMrB,EAAQsB,KAAOtB,EAAQwB,WACpFxB,EAAQC,KAAOC,EAAYS,UAAYX,EAAQC,KAAOC,EAAYc,iBAClEhB,EAAQC,KAAOC,EAAYe,SAAWjB,EAAQC,KAAOC,EAAYgB,eAAgB,CACjF,IAAM6G,OAAO,IAAuB/H,EAAQM,EAAI,EAC7CN,EAAQK,SAAWL,EAAQM,EAAIN,EAAQM,EAAImE,EACxCuD,OAAO,IAAuBhI,EAAQQ,EAAI,EAC7CR,EAAQK,SAAWL,EAAQQ,EAAIR,EAAQQ,EAAIkE,EAE9CkD,EAAS3C,MAAMF,QACb,IAAuB/E,EAAQY,GAAKgH,EAClC5H,EAAQK,SAAWL,EAAQM,EACzBN,EAAQY,GAAK6D,EAHUM,EAAaN,EAI1CoD,EAAS5C,MAAMD,QACb,IAAuBhF,EAAQa,GAAKgH,EAClC7H,EAAQK,SAAWL,EAAQQ,EACzBR,EAAQa,GAAK6D,EAHUM,EAAaN,EAK1C,IAAMuD,OAAQ,IAAuBjI,EAAQc,GAAK,EAC/Cd,EAAQK,SAAWL,EAAQM,EAAIN,EAAQc,GAAK2D,EACzCyD,OAAQ,IAAuBlI,EAAQe,GAAK,EAC/Cf,EAAQK,SAAWL,EAAQQ,EAAIR,EAAQe,GAAK2D,EAE3CxH,EAAI6K,IAASL,GAAOxK,EAAI8K,IAASN,GACnCxK,EAAI0K,IAAUF,GAAOxK,EAAI2K,IAAUH,GACnCxK,EAAI+K,IAAUP,GAAOxK,EAAIgL,IAAUR,IACnCC,GAAO,IAUX,OANI3H,EAAQC,KAAOC,EAAYC,YACzBjD,EAAIuH,EAAQqB,IAAe4B,GAAOxK,EAAIwH,EAAQ+C,IAAeC,IAC/DC,GAAO,GAIJA,EAAO,GAAK3H,MAOPqD,WA0HAA,SAAhB,SAAuBJ,EAAW3C,EAAOE,gBAAPF,kBAAOE,KACvCsB,EAAcmB,EAAG3C,EAAGE,GACpB,IAAMjD,EAAMsE,KAAKtE,IAAI0F,GACf3F,EAAMuE,KAAKvE,IAAI2F,GAErB,OAAO0C,EAAOrI,EAAKC,GAAMA,EAAKD,EAAKgD,EAAIA,EAAIhD,EAAMkD,EAAIjD,EAAKiD,EAAIF,EAAI/C,EAAMiD,EAAIlD,IAE9D+F,YAAhB,SAA0B8E,EAAYC,GAEpC,oBAFoCA,KACpCtG,EAAcqG,EAAIC,GACXzC,EAAO,EAAG,EAAG,EAAG,EAAGwC,EAAIC,IAEhB/E,QAAhB,SAAsB8E,EAAYC,GAEhC,oBAFgCA,KAChCtG,EAAcqG,EAAIC,GACXzC,EAAOwC,EAAI,EAAG,EAAGC,EAAI,EAAG,IAEjB/E,SAAhB,SAAuBJ,GAErB,OADAnB,EAAcmB,GACP0C,EAAO,EAAG,EAAG9D,KAAKwG,KAAKpF,GAAI,EAAG,EAAG,IAE1BI,SAAhB,SAAuBJ,GAErB,OADAnB,EAAcmB,GACP0C,EAAO,EAAG9D,KAAKwG,KAAKpF,GAAI,EAAG,EAAG,EAAG,IAE1BI,kBAAhB,SAAgCiF,GAE9B,oBAF8BA,KAC9BxG,EAAcwG,GACP3C,GAAQ,EAAG,EAAG,EAAG,EAAG2C,EAAS,IAEtBjF,kBAAhB,SAAgCkF,GAE9B,oBAF8BA,KAC9BzG,EAAcyG,GACP5C,EAAO,EAAG,EAAG,GAAI,EAAG,EAAG4C,IAGhBlF,SAAhB,WACE,OAAOmB,GAAK,SAACxE,EAASyE,EAAOC,GAC3B,OAAIxE,EAAYiB,MAAQnB,EAAQC,KD3UtC,SAAoBuI,EAAe7E,EAAY8E,eACxCD,EAAI5F,IACPX,EAAmBuG,EAAK7E,EAAI8E,GAQ9B,IALA,IAAMC,EAAS7G,KAAK9E,IAAIyL,EAAI1F,KAAO0F,EAAIzF,MAAiD4F,EAAhC9G,KAAK7E,IAAIwL,EAAI1F,KAAO0F,EAAIzF,MAA4B2F,EACtGE,EAAY/G,KAAKgH,KAAKF,EAAW,IAEjCjD,EAAqB,IAAI7F,MAAM+I,GACjCnE,EAAQd,EAAIe,EAAQ+D,EACfnK,EAAI,EAAGA,EAAIsK,EAAWtK,IAAK,CAClC,IAAMwK,EAAWpM,EAAK8L,EAAI1F,KAAO0F,EAAIzF,KAAOzE,EAAIsK,GAC1CG,EAASrM,EAAK8L,EAAI1F,KAAO0F,EAAIzF,MAAQzE,EAAI,GAAKsK,GAC9CI,EAAWD,EAASD,EACpBzD,EAAI,EAAI,EAAIxD,KAAKoH,IAAID,EAAW1F,EAAM,GAEtC4F,gEAACtI,OAAIC,OAGLsI,gCAAC7I,OAAGE,OACJ4I,wCAACtI,OAAIC,OACX2E,EAAOpH,GAAK,CAAC+B,SAAUmI,EAAInI,SAAUJ,KAAMC,EAAYS,UACvD,IAAM0I,EAAY,SAAC/I,EAAWE,GACtB,IAAAmB,4BAAC2H,OAAOC,OACd,OAAO,CAACf,EAAI5F,GAAM0G,EAAOd,EAAI3F,GAAM0G,IAErC5H,SAAC+D,aAAcA,aACf8D,SAAC9D,aAAcA,aACf+D,SAAC/D,YAAaA,YACV8C,EAAInI,WACNqF,EAAOpH,GAAGsC,IAAM6D,EAChBiB,EAAOpH,GAAGuC,IAAM6D,EAChBgB,EAAOpH,GAAGwC,IAAM2D,EAChBiB,EAAOpH,GAAGyC,IAAM2D,EAChBgB,EAAOpH,GAAGgC,GAAKmE,EACfiB,EAAOpH,GAAGkC,GAAKkE,GAEhBD,GAADiF,sBAAQhF,QAEV,OAAOgB,ECqSMiE,CAAI3J,EAASA,EAAQK,SAAW,EAAIoE,EAAOzE,EAAQK,SAAW,EAAIqE,GAEpE1E,MAIKqD,gBAAhB,WACE,OAAOmB,GAAK,SAACtC,EAAGtB,EAAIC,GAQlB,OAPIqB,EAAE7B,WACJO,EAAK,EACLC,EAAK,GAEHX,EAAYiB,MAAQe,EAAEjC,MACxBgC,EAAmBC,EAAGtB,EAAIC,GAErBqB,MAGKmB,UAWAA,mBAAhB,WACE,IAAMuG,EAXC,SAAC1H,GACN,IAAMwD,EAAS,GAEf,IAAK,IAAMwB,KAAOhF,EAChBwD,EAAOwB,GAA2BhF,EAAEgF,GAEtC,OAAOxB,GAMHmE,EAAQtF,IACRuF,EAAQ5E,IACR6E,EAASpF,IACTU,EACFb,GAAK,SAACxE,EAASsF,EAAUC,GAC3B,IAAMrD,EAAI6H,EAAOD,EAAMD,EAAMD,EAAM5J,MACnC,SAASgK,EAAKC,GACRA,EAAO5E,EAAE6E,OAAQ7E,EAAE6E,KAAOD,GAC1BA,EAAO5E,EAAE8E,OAAQ9E,EAAE8E,KAAOF,IAEhC,SAASG,EAAKC,GACRA,EAAOhF,EAAEiF,OAAQjF,EAAEiF,KAAOD,GAC1BA,EAAOhF,EAAEkF,OAAQlF,EAAEkF,KAAOF,IAgBhC,GAdInI,EAAEjC,KAAOC,EAAYsK,mBACvBR,EAAK1E,GACL8E,EAAK7E,IAEHrD,EAAEjC,KAAOC,EAAYE,eACvB4J,EAAK9H,EAAE5B,GAEL4B,EAAEjC,KAAOC,EAAYK,cACvB6J,EAAKlI,EAAE1B,GAEL0B,EAAEjC,KAAOC,EAAYQ,UACvBsJ,EAAK9H,EAAE5B,GACP8J,EAAKlI,EAAE1B,IAEL0B,EAAEjC,KAAOC,EAAYS,SAAU,CAEjCqJ,EAAK9H,EAAE5B,GACP8J,EAAKlI,EAAE1B,GAGP,IAFA,QAEwBiK,EAFJ/G,EAAW4B,EAAUpD,EAAEtB,GAAIsB,EAAEpB,GAAIoB,EAAE5B,GAE/ByB,WAAAA,IAAa,CAC/B,GADK2I,SACY,EAAIA,GACvBV,EAAK3F,EAASiB,EAAUpD,EAAEtB,GAAIsB,EAAEpB,GAAIoB,EAAE5B,EAAGoK,KAK7C,IAFA,QAEwBC,EAFJjH,EAAW6B,EAAUrD,EAAErB,GAAIqB,EAAEnB,GAAImB,EAAE1B,GAE/BmB,WAAAA,IAAa,CAC/B,GADK+I,SACY,EAAIA,GACvBN,EAAK/F,EAASkB,EAAUrD,EAAErB,GAAIqB,EAAEnB,GAAImB,EAAE1B,EAAGkK,MAI/C,GAAIxI,EAAEjC,KAAOC,EAAYiB,IAAK,CAE5B6I,EAAK9H,EAAE5B,GACP8J,EAAKlI,EAAE1B,GACPyB,EAAmBC,EAAGoD,EAAUC,GAwBhC,IArBA,IAAMqF,EAAU1I,EAAEX,KAAO,IAAMM,KAAKpF,GAE9BkH,EAAK9B,KAAKvE,IAAIsN,GAAW1I,EAAEb,GAC3BoH,EAAK5G,KAAKtE,IAAIqN,GAAW1I,EAAEb,GAC3BwJ,GAAOhJ,KAAKtE,IAAIqN,GAAW1I,EAAEZ,GAC7BwJ,EAAMjJ,KAAKvE,IAAIsN,GAAW1I,EAAEZ,GAI5BkI,oFAACuB,OAAQC,OAGTC,EAAiB,SAACtJ,OAACuJ,OAAIC,OAErBC,EAAe,IADNvJ,KAAKlE,MAAMwN,EAAKD,GACJrJ,KAAKpF,GAEhC,OAAO2O,EAAML,EAASK,EAAM,IAAMA,OAKZC,EADJrI,EAA2B6H,GAAMlH,EAAI,GAAG2H,IAAIL,GACxCxB,WAAAA,IAAa,EAA1BiB,QACOK,GAAUL,EAAYM,GACpChB,EAAKxG,EAAMtB,EAAEU,GAAIe,EAAIkH,EAAKH,KAK9B,IADA,QACwBa,EADJvI,EAA2B8H,GAAMrC,EAAI,GAAG6C,IAAIL,GACxCvB,WAAAA,IAAa,CAAhC,IAAMgB,GAAAA,QACOK,GAAUL,EAAYM,GACpCZ,EAAK5G,EAAMtB,EAAEW,GAAI4F,EAAIqC,EAAKJ,MAIhC,OAAO1K,KAOT,OAJAqF,EAAE8E,KAAOqB,EAAAA,EACTnG,EAAE6E,MAAQsB,EAAAA,EACVnG,EAAEkF,KAAOiB,EAAAA,EACTnG,EAAEiF,MAAQkB,EAAAA,EACHnG,IAjmBX,CAAiBhC,IAAAA,OCLjB,mBAAA,cAsEA,OArEEoI,kBAAA,SAAMnL,GACJ,OAAO1B,KAAKyK,UAAUhG,EAAuBqI,MAAMpL,KAGrDmL,kBAAA,WACE,OAAO7M,KAAKyK,UAAUhG,EAAuBkB,WAG/CkH,kBAAA,WACE,OAAO7M,KAAKyK,UAAUhG,EAAuBsI,WAG/CF,yBAAA,SAAaxI,EAAaC,EAAahB,GACrC,OAAOtD,KAAKyK,UAAUhG,EAAuBuI,cAAc3I,EAAGC,EAAGhB,KAGnEuJ,wBAAA,WACE,OAAO7M,KAAKyK,UAAUhG,EAAuBsB,iBAG/C8G,kBAAA,WACE,OAAO7M,KAAKyK,UAAUhG,EAAuB6B,YAG/CuG,iBAAA,WACE,OAAO7M,KAAKyK,UAAUhG,EAAuBwI,WAG/CJ,qBAAA,SAASK,GACP,OAAOlN,KAAKyK,UAAUhG,EAAuB0I,SAASD,KAGxDL,sBAAA,SAAUnL,EAAWE,GACnB,OAAO5B,KAAKyK,UAAUhG,EAAuB2I,UAAU1L,EAAGE,KAG5DiL,kBAAA,SAAMnL,EAAWE,GACf,OAAO5B,KAAKyK,UAAUhG,EAAuB4I,MAAM3L,EAAGE,KAGxDiL,mBAAA,SAAOxI,EAAW3C,EAAYE,GAC5B,OAAO5B,KAAKyK,UAAUhG,EAAuB6I,OAAOjJ,EAAG3C,EAAGE,KAG5DiL,mBAAA,SAAOxI,EAAWC,EAAWhB,EAAW0D,EAAWC,EAAWR,GAC5D,OAAOzG,KAAKyK,UAAUhG,EAAuBsC,OAAO1C,EAAGC,EAAGhB,EAAG0D,EAAGC,EAAGR,KAGrEoG,kBAAA,SAAMxI,GACJ,OAAOrE,KAAKyK,UAAUhG,EAAuB8I,OAAOlJ,KAGtDwI,kBAAA,SAAMxI,GACJ,OAAOrE,KAAKyK,UAAUhG,EAAuB+I,OAAOnJ,KAGtDwI,sBAAA,SAAUnD,GACR,OAAO1J,KAAKyK,UAAUhG,EAAuBgJ,gBAAgB/D,KAG/DmD,sBAAA,SAAUlD,GACR,OAAO3J,KAAKyK,UAAUhG,EAAuBiJ,gBAAgB/D,KAG/DkD,yBAAA,WACE,OAAO7M,KAAKyK,UAAUhG,EAAuBkJ,uBC/D3CC,EAAe,SAACtK,GACpB,OAAA,MAAQA,GAAK,OAASA,GAAK,OAASA,GAAK,OAASA,GAC9CuK,EAAU,SAACvK,GACf,OAAA,IAAIwK,WAAW,IAAMxK,EAAEwK,WAAW,IAAMxK,EAAEwK,WAAW,IAAM,IAAIA,WAAW,kBAa1E,aAAA,MACEC,0BAVMC,YAAoB,GACpBA,kBAA2C,EAC3CA,sBAAqB,EACrBA,0BAAyB,EACzBA,mBAAkB,EAClBA,yBAAwB,EACxBA,uBAAsB,EACtBA,UAAoB,KA6Q9B,OArRuCC,OAcrCC,mBAAA,SAAOnN,GAGL,gBAHKA,MACLf,KAAKmO,MAAM,IAAKpN,GAEZ,IAAMf,KAAKoO,QAAQjN,SAAWnB,KAAKqO,uBACrC,MAAM,IAAIC,YAAY,yCAExB,OAAOvN,GAGTmN,kBAAA,SAAMlN,EAAaD,GAAnB,wBAAmBA,MAOjB,IANA,IAAMwN,EAAgB,SAACnN,GACrBL,EAASyN,KAAKpN,GACd4M,EAAKI,QAAQjN,OAAS,EACtB6M,EAAKK,wBAAyB,IAGvB3O,EAAI,EAAGA,EAAIsB,EAAIG,OAAQzB,IAAK,CACnC,IAAM4D,EAAItC,EAAItB,GAER+O,IAAazO,KAAK0O,iBAAmBpN,EAAYiB,KAC5B,IAAxBvC,KAAKoO,QAAQjN,QAAwC,IAAxBnB,KAAKoO,QAAQjN,QACjB,IAA1BnB,KAAK2O,UAAUxN,QACK,MAAnBnB,KAAK2O,WAAwC,MAAnB3O,KAAK2O,WAC5BC,EAAgBf,EAAQvK,KACR,MAAnBtD,KAAK2O,WAA2B,MAANrL,GAC3BmL,GAGF,IACEZ,EAAQvK,IACPsL,EAMH,GAAI,MAAQtL,GAAK,MAAQA,EAKzB,GACG,MAAQA,GAAK,MAAQA,IACtBtD,KAAK6O,iBACJ7O,KAAK8O,sBAMR,GAAI,MAAQxL,GAAMtD,KAAK6O,iBAAoB7O,KAAK+O,qBAAwBN,EAAxE,CAOA,GAAIzO,KAAK2O,YAAc,IAAM3O,KAAK0O,eAAgB,CAChD,IAAMjG,EAAMuG,OAAOhP,KAAK2O,WACxB,GAAItI,MAAMoC,GACR,MAAM,IAAI6F,YAAY,4BAA4B5O,GAEpD,GAAIM,KAAK0O,iBAAmBpN,EAAYiB,IACtC,GAAI,IAAMvC,KAAKoO,QAAQjN,QAAU,IAAMnB,KAAKoO,QAAQjN,QAClD,GAAI,EAAIsH,EACN,MAAM,IAAI6F,YACR,kCAAkC7F,iBAAkB/I,YAGnD,IAAI,IAAMM,KAAKoO,QAAQjN,QAAU,IAAMnB,KAAKoO,QAAQjN,SACrD,MAAQnB,KAAK2O,WAAa,MAAQ3O,KAAK2O,UACzC,MAAM,IAAIL,YACR,yBAAyBtO,KAAK2O,yBAAwBjP,OAK9DM,KAAKoO,QAAQI,KAAK/F,GACdzI,KAAKoO,QAAQjN,SAAW8N,EAAmBjP,KAAK0O,kBAC9CpN,EAAYE,gBAAkBxB,KAAK0O,eACrCH,EAAc,CACZlN,KAAMC,EAAYE,cAClBC,SAAUzB,KAAKkP,mBACfxN,EAAG+G,IAEInH,EAAYK,eAAiB3B,KAAK0O,eAC3CH,EAAc,CACZlN,KAAMC,EAAYK,aAClBF,SAAUzB,KAAKkP,mBACftN,EAAG6G,IAILzI,KAAK0O,iBAAmBpN,EAAYO,SACpC7B,KAAK0O,iBAAmBpN,EAAYQ,SACpC9B,KAAK0O,iBAAmBpN,EAAYgB,gBAEpCiM,EAAc,CACZlN,KAAMrB,KAAK0O,eACXjN,SAAUzB,KAAKkP,mBACfxN,EAAG1B,KAAKoO,QAAQ,GAChBxM,EAAG5B,KAAKoO,QAAQ,KAGd9M,EAAYO,UAAY7B,KAAK0O,iBAC/B1O,KAAK0O,eAAiBpN,EAAYQ,UAE3B9B,KAAK0O,iBAAmBpN,EAAYS,SAC7CwM,EAAc,CACZlN,KAAMC,EAAYS,SAClBN,SAAUzB,KAAKkP,mBACflN,GAAIhC,KAAKoO,QAAQ,GACjBnM,GAAIjC,KAAKoO,QAAQ,GACjBlM,GAAIlC,KAAKoO,QAAQ,GACjBjM,GAAInC,KAAKoO,QAAQ,GACjB1M,EAAG1B,KAAKoO,QAAQ,GAChBxM,EAAG5B,KAAKoO,QAAQ,KAETpO,KAAK0O,iBAAmBpN,EAAYc,gBAC7CmM,EAAc,CACZlN,KAAMC,EAAYc,gBAClBX,SAAUzB,KAAKkP,mBACfhN,GAAIlC,KAAKoO,QAAQ,GACjBjM,GAAInC,KAAKoO,QAAQ,GACjB1M,EAAG1B,KAAKoO,QAAQ,GAChBxM,EAAG5B,KAAKoO,QAAQ,KAETpO,KAAK0O,iBAAmBpN,EAAYe,QAC7CkM,EAAc,CACZlN,KAAMC,EAAYe,QAClBZ,SAAUzB,KAAKkP,mBACflN,GAAIhC,KAAKoO,QAAQ,GACjBnM,GAAIjC,KAAKoO,QAAQ,GACjB1M,EAAG1B,KAAKoO,QAAQ,GAChBxM,EAAG5B,KAAKoO,QAAQ,KAETpO,KAAK0O,iBAAmBpN,EAAYiB,KAC7CgM,EAAc,CACZlN,KAAMC,EAAYiB,IAClBd,SAAUzB,KAAKkP,mBACfzM,GAAIzC,KAAKoO,QAAQ,GACjB1L,GAAI1C,KAAKoO,QAAQ,GACjBzL,KAAM3C,KAAKoO,QAAQ,GACnBxL,SAAU5C,KAAKoO,QAAQ,GACvBvL,UAAW7C,KAAKoO,QAAQ,GACxB1M,EAAG1B,KAAKoO,QAAQ,GAChBxM,EAAG5B,KAAKoO,QAAQ,MAItBpO,KAAK2O,UAAY,GACjB3O,KAAK8O,uBAAwB,EAC7B9O,KAAK6O,iBAAkB,EACvB7O,KAAK+O,qBAAsB,EAC3B/O,KAAKqO,wBAAyB,GAGhC,IAAIT,EAAatK,GAGjB,GAAI,MAAQA,GAAKtD,KAAKqO,uBAEpBrO,KAAKqO,wBAAyB,OAIhC,GAAI,MAAQ/K,GAAK,MAAQA,GAAK,MAAQA,EAMtC,GAAIsL,EACF5O,KAAK2O,UAAYrL,EACjBtD,KAAK+O,qBAAsB,OAF7B,CAOA,GAAI,IAAM/O,KAAKoO,QAAQjN,OACrB,MAAM,IAAImN,YAAY,iCAAiC5O,OAEzD,IAAKM,KAAKqO,uBACR,MAAM,IAAIC,YACR,yBAAyBhL,gBAAe5D,mCAK5C,GAFAM,KAAKqO,wBAAyB,EAE1B,MAAQ/K,GAAK,MAAQA,EAQlB,GAAI,MAAQA,GAAK,MAAQA,EAC9BtD,KAAK0O,eAAiBpN,EAAYE,cAClCxB,KAAKkP,mBAAqB,MAAQ5L,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BtD,KAAK0O,eAAiBpN,EAAYK,aAClC3B,KAAKkP,mBAAqB,MAAQ5L,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BtD,KAAK0O,eAAiBpN,EAAYO,QAClC7B,KAAKkP,mBAAqB,MAAQ5L,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BtD,KAAK0O,eAAiBpN,EAAYQ,QAClC9B,KAAKkP,mBAAqB,MAAQ5L,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BtD,KAAK0O,eAAiBpN,EAAYS,SAClC/B,KAAKkP,mBAAqB,MAAQ5L,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BtD,KAAK0O,eAAiBpN,EAAYc,gBAClCpC,KAAKkP,mBAAqB,MAAQ5L,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BtD,KAAK0O,eAAiBpN,EAAYe,QAClCrC,KAAKkP,mBAAqB,MAAQ5L,OAE7B,GAAI,MAAQA,GAAK,MAAQA,EAC9BtD,KAAK0O,eAAiBpN,EAAYgB,eAClCtC,KAAKkP,mBAAqB,MAAQ5L,OAE7B,CAAA,GAAI,MAAQA,GAAK,MAAQA,EAI9B,MAAM,IAAIgL,YAAY,yBAAyBhL,gBAAe5D,OAH9DM,KAAK0O,eAAiBpN,EAAYiB,IAClCvC,KAAKkP,mBAAqB,MAAQ5L,QAzClCvC,EAASyN,KAAK,CACZnN,KAAMC,EAAYC,aAEpBvB,KAAKqO,wBAAyB,EAC9BrO,KAAK0O,gBAAkB,QA3BvB1O,KAAK2O,UAAYrL,EACjBtD,KAAK+O,oBAAsB,MAAQzL,QArHnCtD,KAAK2O,WAAarL,EAClBtD,KAAK+O,qBAAsB,OAN3B/O,KAAK2O,WAAarL,OATlBtD,KAAK2O,WAAarL,EAClBtD,KAAK6O,iBAAkB,OANvB7O,KAAK2O,WAAarL,EAClBtD,KAAK8O,sBAAwB9O,KAAK6O,iBA2MtC,OAAO9N,GAKTmN,sBAAA,SAAUzD,GAoBR,OAnBe0E,OAAOC,OAAOpP,KAAM,CACjCmO,MAAO,CACLkB,MAAA,SAAMC,EAAevO,gBAAAA,MAKnB,IAJA,QAIgBwO,EAJOJ,OAAOK,eAAexP,MAAMmO,MAAMsB,KACvDzP,KACAsP,GAEcnM,WAAAA,IAAgB,CAA3B,IAAMG,OACHoM,EAAKjF,EAAUnH,GACjBrC,MAAMC,QAAQwO,GAChB3O,EAASyN,WAATzN,EAAiB2O,GAEjB3O,EAASyN,KAAKkB,IAGlB,OAAO3O,UA/QsB8L,iBCJrC,WAAY8C,GAAZ,MACE5B,0BAEEC,EAAKjN,SADH,iBAAoB4O,EACNrO,EAAY6M,MAAMwB,GAElBA,IA2DtB,OAlEiC1B,OAW/B3M,mBAAA,WACE,OAAOA,EAAYsO,OAAO5P,KAAKe,WAGjCO,sBAAA,WACE,IAAMuO,EAAkBpL,EAAuBqL,mBAG/C,OADA9P,KAAKyK,UAAUoF,GACRA,GAGTvO,sBAAA,SACEyO,GAIA,IAFA,IAAMC,EAAc,OAEEjN,EAAA/C,KAAKe,SAALoC,WAAAA,IAAe,CAAhC,IACG8M,EAAqBF,QAEvB9O,MAAMC,QAAQ+O,GAChBD,EAAYxB,WAAZwB,EAAoBC,GAEpBD,EAAYxB,KAAKyB,IAIrB,OADAjQ,KAAKe,SAAWiP,EACThQ,MAGFsB,SAAP,SAAcP,GACZ,OAAOD,EAAcC,IAGhBO,QAAP,SAAa4O,GACX,IAAMC,EAAS,IAAIjC,EACbnN,EAAyB,GAG/B,OAFAoP,EAAOhC,MAAM+B,EAAMnP,GACnBoP,EAAOC,OAAOrP,GACPA,GAGOO,aAAgB,EAChBA,UAAa,EACbA,gBAAmB,EACnBA,eAAkB,EAClBA,UAAc,GACdA,WAAe,GACfA,kBAAsB,GACtBA,UAAe,IACfA,iBAAsB,IACtBA,MAAW,IACXA,gBAAgBA,EAAYQ,QAAUR,EAAYE,cAAgBF,EAAYK,aAC9EL,mBAAmBA,EAAYE,cAAgBF,EAAYK,aAAeL,EAAYQ,QACtGR,EAAYS,SAAWT,EAAYc,gBAAkBd,EAAYe,QACjEf,EAAYgB,eAAiBhB,EAAYiB,OAjEVsK,GAoEpBoC,UACR3N,EAAYO,SAAU,EACvBkB,EAACzB,EAAYQ,SAAU,EACvBiB,EAACzB,EAAYE,eAAgB,EAC7BuB,EAACzB,EAAYK,cAAe,EAC5BoB,EAACzB,EAAYC,YAAa,EAC1BwB,EAACzB,EAAYe,SAAU,EACvBU,EAACzB,EAAYgB,gBAAiB,EAC9BS,EAACzB,EAAYS,UAAW,EACxBgB,EAACzB,EAAYc,iBAAkB,EAC/BW,EAACzB,EAAYiB,KAAM;;aCpDP,eAAe,CAAC,UAAkB;QAChD,IAAI,UAAU,GAAO,SAAU,CAAA;QAC/B,MAAM,MAAM,GAAU,IAAIjB,CAAW,CAAC,UAAU,CAAC;aAC9C,KAAK,EAAE;aACP,YAAY,EAAE;aACd,QAAQ,CAAC,aAAa,CAAC;aACvB,YAAY,EAAE,CAAC,QAAQ,CAAA;QAC1B,MAAM,IAAI,GAAW,EAAE,CAAA;QACvB,KAAK,MAAM,CAAC,IAAI,MAAM,EAAE;YACtB,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAA;YAC5B,MAAM,MAAM,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAClC,QAAQ,CAAC,CAAC,IAAI;gBACZ,KAAKA,CAAW,CAAC,OAAO;oBACtB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAA;oBACzD,MAAK;gBACP,KAAKA,CAAW,CAAC,QAAQ,EAAE;oBACzB,MAAM,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;oBAChC,MAAM,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;oBAChC,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;oBAC/D,MAAM,IAAI,GAAG,IAAI,UAAU,CACzB,KAAK,EACL,UAAU,EACV,MAAM,EACN,CAAC,EACD,CAAC,EACD,SAAS,EACT,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAClB,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CACnB,CAAA;oBACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;oBACf,MAAK;iBACN;gBACD,KAAKA,CAAW,CAAC,OAAO,EAAE;oBACxB,MAAM,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;oBAChC,MAAM,KAAK,GAAG,aAAa,CAAC,SAAS,CACnC,UAAU,EACV,EAAE,EACF,MAAM,CACP,CAAC,WAAW,EAAE,CAAA;oBACf,MAAM,IAAI,GAAG,IAAI,UAAU,CACzB,KAAK,EACL,UAAU,EACV,MAAM,EACN,KAAK,CAAC,IAAI,EACV,KAAK,CAAC,IAAI,EACV,SAAS,EACT,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAC3B,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAC5B,CAAA;oBACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;oBACf,MAAK;iBACN;gBACD,KAAKA,CAAW,CAAC,GAAG,EAAE;oBACpB,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,EACvB,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,EACnB,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;oBAC7C,MAAM,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;yBAC/B,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAGzD,IAAE,CAAC;yBAClB,MAAM,CAAC,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,CAAC,CAAA;oBACrD,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAA;oBAC5B,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAA;oBACvC,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA;oBACrD,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC;wBAC7D,MAAM,MAAM,GAAG,EAAE,GAAG,EAAE,CAAA;wBACtB,MAAM,GAAG,GAAG,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAA;wBACxB,MAAM,GAAG,GAAG,GAAG,GAAG,MAAM,CAAA;wBACxB,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAA;wBAC5B,MAAM,IAAI,GAAG,GAAG,GAAGA,IAAE,IAAI,GAAG,GAAGA,IAAE,CAAA;wBACjC,MAAM,EAAE,GAAG,IAAI,GAAG,GAAG,GAAGA,IAAE,GAAG,GAAG,CAAA;wBAChC,MAAM,EAAE,GAAG,IAAI,GAAG,GAAG,GAAGA,IAAE,GAAG,GAAG,CAAA;wBAChC,MAAM,KAAK,GAAG,IAAI,YAAY,CAC5B,MAAM,EACN,IAAI,GAAG,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,EACxB,IAAI,GAAG,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE,CACzB,CAAA;wBACD,MAAM,CAAC,GAAG,IAAI,IAAI,EAAE,GAAG,UAAU,GAAG,IAAI,IAAI,EAAE,GAAG,MAAM,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;wBACtE,MAAM,CAAC,GAAG,IAAI,IAAI,EAAE,GAAG,UAAU,GAAG,IAAI,IAAI,EAAE,GAAG,MAAM,GAAG,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;wBACtE,OAAO,IAAI,UAAU,CACnB,KAAK,EACL,CAAC,EACD,CAAC,EACD,EAAE,EACF,EAAE,EACF,SAAS,EACT,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,EACnB,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CACpB,CAAA;qBACF,CAAC,CAAA;oBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;oBAChE,MAAK;iBACN;aACF;YACD,UAAU,GAAG,MAAM,CAAA;SACpB;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IAED;;;;;aAKgB,QAAQ,CAAC,QAAgB,CAAC,EAAE,SAAiB,KAAK;QAChE,MAAM,QAAQ,GAAG;YACf,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;YACf,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;YACnB,IAAI,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;YACxB,IAAI,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;SACrB,CAAA;QACD,OAAO,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;IACrC,CAAC;aAEe,QAAQ,CAAC,IAAS,CAAC,EAAE,SAAiB,CAAC;QACrD,OAAO,YAAY,CAAC,KAAK,CACvB,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAC7D,CAAA;IACH,CAAC;aAEe,QAAQ,CACtB,aAAkB,CAAC,EACnB,KAAa,CAAC,EACd,KAAa,GAAG;QAEhB,MAAM,QAAQ,GAAG,iBAAiB,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,KACnD,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,CAAC,CAC3D,CAAA;QACD,OAAO,YAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAA;IACrC,CAAC;aAEe,UAAU,CACxB,KAAY,EACZ,CAAK,EACL,CAAK,EACL,EAAU,EACV,EAAU,EACV,SAA2B,EAC3B,IAAQ,EACR,IAAQ,EACR,IAAa;QAEb,IAAI,KAAK,YAAY,EAAE,EAAE;YACvB,OAAO,IAAI,YAAY,CACrB,KAAK,EACL,CAAC,EACD,CAAC,EACD,EAAE,EACF,EAAE,EACF,SAAyB,EACzB,IAAI,CACL,CAAA;SACF;aAAM;YACL,OAAO,IAAI,UAAU,CACnB,KAAK,EACL,CAAC,EACD,CAAC,EACD,EAAE,EACF,EAAE,EACF,SAAuB,EACvB,IAAI,EACJ,IAAI,EACJ,IAAI,CACL,CAAA;SACF;IACH,CAAC;aAEe,iBAAiB,CAC/B,KAAY,EACZ,KAAa,KAAK,CAAC,IAAI,EACvB,KAAa,KAAK,CAAC,IAAI;QAEvB,OAAO,UAAU,CACf,KAAK,EACL,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EACZ,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EACZ,EAAE,EACF,EAAE,EACF,SAAS,EACT,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,EAC7D,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAC9D,CAAA;IACH,CAAC;aAEe,QAAQ,CAAC,IAAS,CAAC,EAAE,SAAiB,CAAC;QACrD,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;QACd,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;QAClB,MAAM,OAAO,GAAG,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QAC5E,OAAO,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;YAC5B,MAAM,EAAE,GAAG,CAAC,CAAC,GAAGoB,OAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAC/B,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA;YAC5B,MAAM,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,EACnB,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,CAAA;YACjB,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;YACzB,MAAM,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,EACrB,KAAK,GAAG,IAAI,YAAY,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAA;YACtD,OAAO,UAAU,CACf,KAAK,EACL,CAAC,EACD,CAAC,EACD,CAAC,EACD,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EACf,SAAS,EACT,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,EACd,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACzB,CAAA;SACF,CAAC,CAAA;IACJ,CAAC;aAEeG,OAAK,CAAC,KAAa,EAAE,MAAc;QACjD,IAAI,GAAG,CAAC,MAAM,CAAC,EAAE;YACf,OAAO,KAAK,CAAA;SACb;QACD,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;YAChC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,EAC9B,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;YACrB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAAE,OAAO,SAAS,CAAA;YAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;YACpD,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,EACnB,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAA;YACrB,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE,EAAE;gBACxC,MAAM,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAA;gBACrC,IAAI,GAAG,CAAC,WAAW,CAAC;oBAAE,OAAO,SAAS,CAAA;gBAEtC,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,EACpC,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,CAAA;gBAClC,MAAM,QAAQ,GAAG,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;gBACtE,MAAM,QAAQ,GAAG,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;gBACtE,MAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAA;gBAChD,IAAI,CAAC,MAAM;oBAAE,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAA;gBACjD,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;gBACvD,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;gBACvD,MAAM,EAAE,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAA;gBACrC,MAAM,KAAK,GAAG,IAAI,YAAY,CAC5B,MAAM,EACN,EAAE,EACF,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAClC,CAAA;gBACD,MAAM,UAAU,GAAG,UAAU,CAC3B,KAAK,EACL,OAAO,EACP,OAAO,EACP,CAAC,EACD,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EACrB,SAAS,EACT,EAAE,CAAC,IAAI,EACP,EAAE,CAAC,IAAI,CACR,CAAA;gBACD,OAAO,UAAU,CAAA;aAClB;iBAAM;gBACL,OAAO,eAAe,CAAC,IAAI,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAA;aAC/C;SACF,CAAC,CAAA;QACF,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;YACnC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,CAAA;YAC/C,MAAM,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,EAC3B,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAA;YACzB,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,EAAE;gBAC9B,OAAO,IAAI,CAAA;aACZ;YACD,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU;kBAC7B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;kBAC5B,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,CAAA;YACpE,MAAM,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,UAAU;kBAC7B,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC;kBAC5B,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,CAAA;YACpE,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;YAC3E,OAAO,CAAC,UAAU,GAAG,OAAO,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAA;SACrD,CAAC,CAAA;QACF,OAAO,MAAM,CAAA;IACf,CAAC;aAEe,eAAe,CAAC,EAAQ,EAAE,EAAQ,EAAE,MAAc;QAChE,MAAM,EAAE,GAAG,EAAE,CAAC,KAAK,EACjB,EAAE,GAAG,EAAE,CAAC,KAAK,CAAA;QAEf,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAW;YAC3B,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAClB,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;YAChB,MAAM,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAC1B,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;YACxB,MAAM,kBAAkB,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;YACzC,MAAM,OAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAClD,OAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAA;YAChD,MAAM,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;YACvC,IAAI,kBAAkB,CAAC,KAAK,EAAE,EAAE;gBAC9B,MAAM,CAAC,KAAK,CAAC,CAAA;aACd;YACD,MAAM,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;;YAEtB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,EAAE;gBACtC,MAAM,CAAC,KAAK,CAAC,CAAA;aACd;YACD,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAA;YACpE,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAA;YACpE,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;YACxC,MAAM,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;YACxC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAA;YACnB,OAAO,CAACd,KAAG,CAAC,KAAK,CAAC,GAAG,MAAM,EAAEA,KAAG,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,CAAA;SAClD;QAED,MAAM,OAAO,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,GAAGe,MAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAA;QACvE,MAAM,OAAO,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,MAAM,GAAGA,MAAI,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAA;QACvE,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,aAAa,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAA;QACrD,MAAM,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;QAC/B,MAAM,OAAO,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAA;QAC/B,MAAM,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAC1B,GAAG,GAAG,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,CAAA;QACxB,MAAM,kBAAkB,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACzC,MAAM,OAAO,GAAG,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAA;QACpD,MAAM,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAA;QACpC,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;QAChC,MAAM,KAAK,GAAG,IAAI,YAAY,CAC5B,MAAM,EACN,EAAE,EACF,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAC9C,CAAA;QACD,MAAM,UAAU,GAAG,UAAU,CAC3B,KAAK,EACL,OAAO,EACP,OAAO,EACP,CAAC,EACD,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,EACrB,SAAS,EACT,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,EAChB,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,CACjB,CAAA;QACD,OAAO,UAAU,CAAA;IACnB;;IClWA;;;UAGsB,eAAe;QACnC,OAAO,UAAU,CAAI,UAAa;YAChC,OAAO,KAAK,cAAc,eAAkB;gBAC1C;oBACE,KAAK,EAAE,CAAA;iBACR;gBAED,IAAI,CAAC,OAAgB,EAAE,OAAe,EAAE,KAAe;oBACrD,OAAO,UAAU,CAAA;iBAClB;aACF,GAAG,CAAA;SACL;QAED,IAAI,CAAC,OAAgB,EAAE,OAAe,EAAE,KAAe;YACrD,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAA;SAC7C;QAED,aAAa,CAAC,OAAgB,EAAE,OAAe,EAAE,QAAkB,EAAE;YACnE,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAA;SAC1C;QAED,UAAU,CAAC,OAAgB,EAAE,OAAe,EAAE,QAAkB,EAAE;YAChE,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAA;SAC1C;QAED,WAAW,CACT,KAAU,EACV,OAAgB,EAChB,OAAe,EACf,QAAkB,EAAE;YAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAA;SAC1C;QAED,YAAY,CACV,KAAU,EACV,OAAgB,EAChB,OAAe,EACf,QAAkB,EAAE;YAEpB,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAA;SAC1C;QAED,aAAa,CAAC,OAAgB,EAAE,OAAe,EAAE,QAAkB,EAAE;YACnE,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAA;SAC1C;QAED,WAAW,CAAC,OAAgB,EAAE,OAAe,EAAE,QAAkB,EAAE;YACjE,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC,CAAA;SAC1C;QAED,UAAU,CACR,QAAc,EACd,OAAgB,EAChB,OAAe,EACf,QAAkB,EAAE;YAEpB,OAAO,QAAQ,CAAC,IAAI,CAAA;SACrB;QAED,SAAS,CACP,QAAc,EACd,EAAM,EACN,IAAY,EACZ,OAAgB,EAChB,OAAe,EACf,QAAkB,EAAE;YAEpB,OAAO,QAAQ,CAAC,IAAI,CAAA;SACrB;;;IC1EH;;;UAGagR,SAAO;QA8ClB;YA1CA,KAAC,MAAM,CAAC,WAAW,CAAC,GAAU,KAAK,CAAA;YA2CjC,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAA;YACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;SACf;QA3CD,QAAQ;YACN,QACE,GAAG;gBACH,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;qBACxB,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC;qBAC1C,IAAI,CAAC,IAAI,CAAC;gBACb,GAAG,EACJ;SACF;QAED,OAAO,CACL,UAAwD,EACxD,OAAa;YAEb,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;gBACvC,KAAK,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,MAAM,EAAE;oBACnC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,CAAA;iBAC3C;aACF;SACF;QAED,CAAC,IAAI;YACH,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;gBACvC,KAAK,MAAM,EAAE,GAAG,EAAE,IAAI,MAAM,EAAE;oBAC5B,MAAM,GAAG,CAAA;iBACV;aACF;SACF;QAED,CAAC,MAAM;YACL,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;gBACvC,KAAK,MAAM,EAAE,KAAK,EAAE,IAAI,MAAM,EAAE;oBAC9B,MAAM,KAAK,CAAA;iBACZ;aACF;SACF;QAUD,CAAC,MAAM,CAAC,QAAQ,CAAC;YACf,OAAO,IAAI,CAAC,OAAO,EAAE,CAAA;SACtB;QAED,GAAG,CAAC,GAAM,EAAE,KAAQ;YAClB,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;YACrB,OAAO,IAAI,CAAA;SACZ;;;;;QAMD,IAAI,CAAC,GAAM,EAAE,GAAM;YACjB,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAC7B,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;;YAElC,IAAI,MAAM,EAAE;gBACV,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;gBAClE,IAAI,CAAC,CAAC,IAAI,SAAS,EAAE;oBACnB,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAA;iBACtC;qBAAM;oBACL,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,GAAG,GAAG,CAAA;oBAC7B,OAAO,KAAK,CAAA;iBACb;aACF;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAA;aACpD;YACD,IAAI,CAAC,KAAK,EAAE,CAAA;YACZ,OAAO,IAAI,CAAA;SACZ;QAED,GAAG,CAAC,GAAM;YACR,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAC7B,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;;YAElC,OAAO,SAAS,KAAK,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;SAC3E;QAED,GAAG,CAAC,GAAM;YACR,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAC7B,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAChC,IAAI,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;YAC9D,OAAO,IAAI,IAAI,IAAI,CAAC,KAAK,CAAA;SAC1B;QAED,OAAO,CAAC,GAAM;YACZ,KAAK,MAAM,QAAQ,IAAI,GAAG,CAAC,SAAU,EAAE,EAAE;gBACvC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;gBACtC,MAAM,QAAQ,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC,CAAA;gBAC/D,IAAI,QAAQ;oBAAE,OAAO,QAAQ,CAAA;aAC9B;SACF;QAED,OAAO,CAAC,GAAM,EAAE,GAAM;YACpB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;SAChD;QAED,MAAM,CAAC,GAAM;YACX,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAC7B,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAClC,IAAI,MAAM,EAAE;gBACV,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;gBACxD,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE;oBACf,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;wBACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;qBAC3B;yBAAM;wBACL,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;qBACxB;oBACD,IAAI,CAAC,KAAK,EAAE,CAAA;oBACZ,OAAO,IAAI,CAAA;iBACZ;aACF;YACD,OAAO,KAAK,CAAA;SACb;QAED,UAAU,CAAC,GAAM;YACf,KAAK,MAAM,QAAQ,IAAI,GAAG,CAAC,SAAU,EAAE,EAAE;gBACvC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;gBACtC,IAAI,MAAM,EAAE;oBACV,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC,CAAA;oBACvD,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE;wBACf,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;wBAC7B,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;4BACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;yBAC3B;6BAAM;4BACL,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;yBACxB;wBACD,IAAI,CAAC,KAAK,EAAE,CAAA;wBACZ,OAAO,OAAO,CAAA;qBACf;iBACF;aACF;SACF;QAED,CAAC,QAAQ;YACP,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;gBACvC,OAAO,MAAM,CAAA;aACd;SACF;QAED,CAAC,OAAO;YACN,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;gBACvC,KAAK,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,MAAM,EAAE;oBACnC,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;iBACnB;aACF;SACF;QAED,KAAK;YACH,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA;YACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;SACf;QAED,IAAI,IAAI;YACN,OAAO,IAAI,CAAC,KAAK,CAAA;SAClB;;;UC1KU,OAAO;QAgBlB,YAAY,QAAsB;YAblC,KAAC,MAAM,CAAC,WAAW,CAAC,GAAU,KAAK,CAAA;YAwJnC,KAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAA;YAC5C,SAAI,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAA;YA3I7B,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAA;YACrB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;YACd,IAAI,QAAQ,EAAE;gBACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;aACtB;SACF;QAjBD,OAAO,CACL,UAAsD,EACtD,OAAa;YAEb,KAAK,MAAM,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;gBACpC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAA;aAC7C;SACF;QAYD,GAAG,CAAC,GAAM;YACR,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;YACd,OAAO,IAAI,CAAA;SACZ;QAED,IAAI,CAAC,GAAM;;;YAGT,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAC7B,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAClC,IAAI,MAAM,EAAE;gBACV,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;oBACrC,OAAO,KAAK,CAAA;iBACb;gBACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aACjB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;aAC/B;YACD,IAAI,CAAC,KAAK,EAAE,CAAA;YACZ,OAAO,IAAI,CAAA;SACZ;QAED,MAAM,CAAC,QAAqB;YAC1B,KAAK,MAAM,GAAG,IAAI,QAAQ,EAAE;gBAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;aACd;YACD,OAAO,IAAI,CAAA;SACZ;QAED,YAAY,CAAC,GAAM;YACjB,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAC7B,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAClC,IAAI,MAAM,EAAE;gBACV,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;gBAClD,IAAI,QAAQ,EAAE;oBACZ,OAAO,QAAQ,CAAA;iBAChB;gBACD,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;aACjB;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;aAC/B;YACD,IAAI,CAAC,KAAK,EAAE,CAAA;YACZ,OAAO,GAAG,CAAA;SACX;QAED,GAAG,CAAC,GAAM;YACR,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAC7B,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAClC,OAAO,SAAS,KAAK,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;SACjE;QAED,OAAO,CAAC,GAAM;YACZ,KAAK,MAAM,QAAQ,IAAI,GAAG,CAAC,SAAU,EAAE,EAAE;gBACvC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;gBACtC,MAAM,QAAQ,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC,CAAA;gBAC3D,IAAI,QAAQ;oBAAE,OAAO,QAAQ,CAAA;aAC9B;SACF;QAED,gBAAgB,CAAC,GAAM;;YAErB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAA;SACnD;QAED,OAAO,CAAC,GAAM;YACZ,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;SAC3C;QAED,MAAM,CAAC,GAAM;YACX,MAAM,QAAQ,GAAG,GAAG,CAAC,QAAQ,EAAE,EAC7B,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;YAClC,IAAI,MAAM,EAAE;gBACV,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAA;gBACpD,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE;oBACf,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;wBACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;qBAC3B;yBAAM;wBACL,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;qBACxB;oBACD,IAAI,CAAC,KAAK,EAAE,CAAA;oBACZ,OAAO,IAAI,CAAA;iBACZ;aACF;YACD,OAAO,KAAK,CAAA;SACb;QAED,UAAU,CAAC,GAAM;YACf,KAAK,MAAM,QAAQ,IAAI,GAAG,CAAC,SAAU,EAAE,EAAE;gBACvC,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;gBACtC,IAAI,MAAM,EAAE;oBACV,MAAM,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAK,CAAC,GAAG,CAAC,CAAC,CAAA;oBACnD,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE;wBACf,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,CAAA;wBAC7B,IAAI,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE;4BACtB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA;yBAC3B;6BAAM;4BACL,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;yBACxB;wBACD,IAAI,CAAC,KAAK,EAAE,CAAA;wBACZ,OAAO,OAAO,CAAA;qBACf;iBACF;aACF;SACF;QAED,CAAC,MAAM;YACL,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;gBACvC,OAAO,MAAM,CAAA;aACd;SACF;QACD,CAAC,OAAO;YACN,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE;gBACvC,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;oBAC1B,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;iBACrB;aACF;SACF;QAED,KAAK;YACH,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAA;YACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;SACf;QAED,IAAI,IAAI;YACN,OAAO,IAAI,CAAC,KAAK,CAAA;SAClB;QAED,QAAQ;YACN,OAAO,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAA;SACxD;KAIF;UAEY,IAAI;QAEf,YAAmB,IAAO,EAAS,KAAQ;YAAxB,SAAI,GAAJ,IAAI,CAAG;YAAS,UAAK,GAAL,KAAK,CAAG;SAAI;QAE/C,QAAQ;YACN,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA;SACzD;QAED,MAAM,CAAC,KAAU;YACf,QACE,IAAI,IAAI,KAAK;iBACZ,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,SAAS;oBAC7C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;oBAC5B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAClC;SACF;QAED,QAAQ;YACN,OAAO,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAA;SACvE;QAED,QAAQ;YACN,QACE,WAAW;gBACV,IAAI,CAAC,IAAY,CAAC,QAAQ,EAAE;gBAC7B,IAAI;gBACH,IAAI,CAAC,KAAa,CAAC,QAAQ,EAAE;gBAC9B,GAAG,EACJ;SACF;;;UCrHmB,IAAK,SAAQ,aAAa;QAW9C,YACW,OAAgB,EAChB,OAAe,EACf,QAAkB,EAAE,EACpB,IAAa,EACb,IAAU;YAEnB,KAAK,EAAE,CAAA;YANE,YAAO,GAAP,OAAO,CAAS;YAChB,YAAO,GAAP,OAAO,CAAQ;YACf,UAAK,GAAL,KAAK,CAAe;YACpB,SAAI,GAAJ,IAAI,CAAS;YACb,SAAI,GAAJ,IAAI,CAAM;YAPX,SAAI,GAAqB,SAAS,CAAA;;YAW1C,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;YACxB,MAAM,CACJ,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,YAAY,IAAI,CAAC,EACvC,MAAM,uCAAuC,GAAG,OAAO,CACxD,CAAA;;;;;;;YAOD,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAA;YACvD,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACpE,MAAM,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,WAAW,IAAI,KAAK,EAAE,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAA;YACvE,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAA;SACvE;QAED,OAAO,sBAAsB,CAC3B,KAAe,EACf,OAAgB,EAChB,eAAkD;YAIlD,SAAS,gBAAgB,CAAC,WAAqB,EAAE,SAAqB;gBACpE,IAAI,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;oBACzB,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;iBAC5B;qBAAM;oBACL,MAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,KAC1C,IAAI,CAAC,kBAAkB,CACrB,QAAQ,CAAC,IAAI,EACb,QAAQ,CAAC,GAAG,EACZ,WAAW,CAAC,IAAI,EAChB,WAAW,CAAC,GAAG,EACf,OAAO,CACR,CACF,CAAA;oBACD,IAAI,WAAW,EAAE;wBACf,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAA;qBACpD;yBAAM;;wBAEL,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,GAAI;4BACzC,MAAM,WAAW,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;;;4BAGhC,IACE,IAAI,CAAC,kBAAkB,CACrB,WAAW,CAAC,IAAI,EAChB,WAAW,CAAC,GAAG,EACf,WAAW,CAAC,IAAI,EAChB,WAAW,CAAC,GAAG,EACf,OAAO,CACR,EACD;gCACA,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;gCACtC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;6BACvB;yBACF;wBACD,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;qBAC5B;iBACF;aACF;YAED,SAAS,iBAAiB,CAAC,QAAkB;gBAC3C,QAAQ,CAAC,IAAI,CACX,IAAI,eAAe,CACjB,OAAO,EACP,QAAQ,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC9D,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,KACvB,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAC7C,CACF,CACF,CAAA;gBACD,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,KAC3B,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,iBAAiB,CAAC,GAAG,CAAC,CAAC,CACrD,CAAA;aACF;YAED,MAAM,QAAQ,GAAW,EAAE,CAAA;YAC3B,MAAM,aAAa,GAAe,EAAE,CAAA;YACpC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KACjB,gBAAgB,CACd;gBACE,IAAI,EAAE,IAAI;gBACV,GAAG,EAAE,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC;gBAC9B,QAAQ,EAAE,EAAE;aACb,EACD,aAAa,CACd,CACF,CAAA;YACD,aAAa,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAA;YACtD,OAAO,QAAQ,CAAA;SAChB;;;;;;;;;;;;;;;;;;;;;;QAwBD,OAAO,MAAM,CACX,OAAgB,EAChB,SAAiB,EACjB,KAAgB,EAChB,QAAiB,EACjB,IAAU;YAEV,OAAO,OAAO,YAAY,YAAY;kBAClC,IAAI,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC;kBACxD,IAAI,YAAY,CAAC,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAA;SAChE;QAED,aAAa,CACX,KAAW,EACX,QAAc,EACd,SAAe,EACf,OAA0B,EAC1B,cAAkD,EAClD,eAAmD,EACnD,YAAiC;;;;;;;;;;YAWjC,SAAS,OAAO,CAAC,CAAY,EAAE,CAAY;gBACzC,OAAO,YAAY,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;aACxC;YAED,SAAS,OAAO,CAAC,CAAY,EAAE,CAAY;gBACzC,OAAO,YAAY,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;aACxC;;;;;;;YAQD,SAAS,aAAa,CACpB,OAAa,EACb,IAAsB,EACtB,IAAsB;gBAEtB,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE;oBAClB,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO;yBAC1B,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;yBAClB,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;oBAC1C,IAAI,UAAU,CAAC,KAAK,EAAE,EAAE;wBACtB,MAAM,CAAC,GAAGvS,MAAI,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,GAAG,YAAY,CAAC,EACtD,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;wBACzB,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;qBACrE;oBACD,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE;wBACvB,IAAI,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;4BACpC,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAA;yBAC5B;wBACD,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;wBAC/B,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAA;qBAC3C;yBAAM;wBACL,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAA;wBACnB,MAAM,KAAK,GAAG,EAAE,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;wBAChD,MAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;wBAClC,MAAM,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;wBACpD,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;wBACxC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACpD,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EACxB,QAAQ,GAAGuB,MAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;wBACxD,MAAM,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACtD,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAC1B,SAAS,GAAGA,MAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;wBAC1D,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;wBACtD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;wBAC1D,IAAI,IAAI,GAAG,GAAG,EAAE;4BACd,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,GAAG,OAAO,CAAC,CAAA;yBAC/D;wBACD,IAAI,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE;4BACtD,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAA;yBAC1C;wBACD,MAAM,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;wBACtD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;wBAC1D,IAAI,IAAI,GAAG,GAAG,EAAE;4BACd,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,GAAG,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC,CAAA;yBAC/D;wBACD,IAAI,OAAO,IAAI,IAAI,GAAG,GAAG,EAAE;4BACzB,OAAO,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;yBAChC;qBACF;oBACD,OAAO,IAAI,CAAA;iBACZ;gBAED,SAAS,gBAAgB,CACvB,IAAsB,EACtB,IAAsB,EACtB,IAAU,EACV,KAAW,EACX,QAAc,EACd,SAAe,EACf,oBAA6B,EAC7B,GAAmB,EACnB,GAAmB;oBAEnB,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;wBACjB,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC;4BAAE,OAAO,KAAK,CAAA;;wBAGjD,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAA;;;;wBAK9B,QAAQ,CAAC,SAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAE,CAAC,OAAO,CAAC,CAAC,QAAQ;;;4BAGzD,MAAM,gBAAgB,GAAG,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;4BACrD,MAAM,UAAU,GACd,gBAAgB,IAAI,MAAM;iCACzB,CAAC,oBAAoB,IAAI,gBAAgB,IAAI,aAAa,CAAC,CAAA;4BAC9D,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI;iCAC3B,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iCAChD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;kCACjB,OAAO;kCACP,OAAO,CAAC,OAAO,EAAE,CAAA;4BACrB,MAAM,CACJ,QAAQ,CAAC,IAAI;iCACV,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;iCACjD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CACvB,CAAA;4BACD,UAAU,IAAI,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;yBACxD,CAAC,CAAA;wBAEF,MAAM,wBAAwB,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;wBAC5D,MAAM,aAAa,GAAG,wBAAwB,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;wBAClE,MAAM,KAAK,GAAG,2BAA2B,CACvC,QAAQ,EACR,IAAI,CAAC,QAAQ,EAAE,EACf,OAAO,CAAC,CAAC,EACT,aAAa,EACb,wBAAwB,CACzB,CAAA;wBACD,IAAI,UAAU,EAAE,iBAAiB,CAAA;wBACjC,KACG,UAAU;4BACT,KAAK,IAAI,MAAM;iCACd,oBAAoB,IAAI,KAAK,IAAI,aAAa,CAAC,GAClD;4BACA,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;yBACjC;wBACD,MAAM,KAAK,GAAG,2BAA2B,CACvC,QAAQ,EACR,IAAI,CAAC,QAAQ,EAAE,EACf,OAAO,CAAC,CAAC,EACT,aAAa,CAAC,OAAO,EAAE,EACvB,wBAAwB,CACzB,CAAA;wBACD,KACG,iBAAiB;4BAChB,KAAK,IAAI,MAAM;iCACd,oBAAoB,IAAI,KAAK,IAAI,aAAa,CAAC,GAClD;4BACA,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAA;yBAC3C;wBACD,IACE,UAAU;4BACV,iBAAiB;6BAChB,KAAK,IAAI,aAAa,IAAI,KAAK,IAAI,MAAM,CAAC;6BAC1C,KAAK,IAAI,aAAa,IAAI,KAAK,IAAI,MAAM,CAAC,EAC3C;4BACA,OAAO,IAAI,CAAA;yBACZ;qBACF;oBACD,OAAO,KAAK,CAAA;iBACb;gBAED,MAAM,EAAE,GAAG,gBAAgB,CACzB,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,SAAS,EACT,KAEO,CACR,CAAA;gBACD,MAAM,EAAE,GAAG,gBAAgB,CACzB,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,IAAI,EACJ,SAAS,EACT,QAAQ,EACR,IAEuB,CACxB,CAAA;gBACD,IAAI,EAAE,IAAI,EAAE;oBAAE,OAAO,IAAI,CAAA;gBAEzB,IAAI,IAAI,IAAI,IAAI,EAAE;oBAChB,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;wBAAE,OAAO,KAAK,CAAA;oBAE3D,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;oBAEzC,SAAS,uBAAuB,CAC9B,IAAU,EACV,IAAU,EACV,QAAc,EACd,SAAe,EACf,oBAA6B,EAC7B,cAAkD,EAClD,GAAmB,EACnB,GAAmB;;;;;;wBAOnB,KAAK,MAAM,QAAQ,IAAI,QAAQ,CAAC,SAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAE,EAAE;4BAChE,MAAM,IAAI,GAAG,0BAA0B,CACrC,SAAS,EACT,IAAI,CAAC,QAAQ,EAAE,EACf,QAAQ,CAAC,MAAM,EACf,QAAQ,CAAC,cAAc,CACxB,CAAA;4BACD,MAAM,UAAU,GACd,IAAI,IAAI,MAAM,KAAK,oBAAoB,IAAI,IAAI,IAAI,aAAa,CAAC,CAAA;4BACnE,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;kCAClD,OAAO;kCACP,OAAO,CAAC,OAAO,EAAE,CAAA;4BACrB,IAAI,UAAU,EAAE;gCACd,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;gCACzC,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;gCAClD,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE;;oCAExC,IACE,0BAA0B,CACxB,SAAS,EACT,OAAO,CAAC,CAAC,EACT,OAAO,CAAC,KAAK,EACb,OAAO,CAAC,EAAE,EACV,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAW,CACvC,IAAI,MAAM,EACX;wCACA,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE;4CACvC,CAAC,EAAE,OAAO,CAAC,CAAC;4CACZ,KAAK,EAAE,EAAE;yCACV,CAAC,CAAA;qCACH;iCACF;gCACD,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;gCAClD,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,EAAE;oCACxC,IACE,0BAA0B,CACxB,SAAS,EACT,OAAO,CAAC,CAAC,EACT,OAAO,CAAC,KAAK,EACb,OAAO,CAAC,EAAE,EACV,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAW,CACtC,IAAI,MAAM,EACX;wCACA,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE;4CACvC,CAAC,EAAE,OAAO,CAAC,CAAC;4CACZ,KAAK,EAAE,EAAE;yCACV,CAAC,CAAA;qCACH;iCACF;6BACF;yBACF;qBACF;oBAED,uBAAuB,CACrB,IAAI,EACJ,IAAI,EACJ,QAAQ,EACR,SAAS,EACT,IAAI,EACJ,cAEO,CACR,CAAA;oBACD,uBAAuB,CACrB,IAAI,EACJ,IAAI,EACJ,SAAS,EACT,QAAQ,EACR,KAAK,EACL,eAEuB,CACxB,CAAA;oBACD,OAAO,KAAK,CAAA;iBACb;gBACD,OAAO,KAAK,CAAA;aACb;;;;;;YAOD,SAAS,cAAc,CACrB,CAAoC,EACpC,CAAoC,EACpC,OAAa;;gBAGb,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;oBACX,IAAI,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE;wBAC/D,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAA;wBAC7C,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;qBACjC;;iBAEF;;gBAED,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;oBACX,IAAI,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE;wBAC/D,OAAO,CAAC,eAAe,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAA;wBAC9C,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;qBACjC;;iBAEF;gBACD,IAAI,CAAC,IAAI,CAAC,EAAE;oBACV,MAAM,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,QAAQ,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;;;oBAGhD,SAAS,QAAQ,CACf,CAAwB,EACxB,CAAwB,EACxB,IAAU,EACV,KAAW,EACX,SAAkB,EAClB,UAAmB,EACnB,QAAc,EACd,SAAe,EACf,KAAc,EACd,cAAkD;wBAElD,IAAI,CAAC,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,EAAE;;4BAE/D,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAA;;;4BAG7C,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gCAC5C,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;;gCAEvD,MAAM,KAAK,GAAG,0BAA0B,CACtC,SAAS,EACT,MAAM,EACN,CAAC,CAAC,IAAI,CAAC,KAAK,EACZ,CAAC,CAAC,KAAK,EACP,CAAC,CACF,CAAA;gCACD,MAAM,KAAK,GAAG,0BAA0B,CACtC,SAAS,EACT,MAAM,EACN,CAAC,CAAC,IAAI,CAAC,KAAK,EACZ,CAAC,CAAC,KAAK,EACP,CAAC,CAAC,CACH,CAAA;;gCAGD,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,IAAI,KAAK,EAAE;oCACtC,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAA;oCAC7C,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;iCACjC;6BACF;iCAAM;;;;;;gCAML,MAAM,KAAK,GAAG,4BAA4B,CACxC,SAAS,EACT,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,EACjB,CAAC,CAAC,CAAC,EACH,CAAC,CAAC,IAAI,CAAC,KAAK,EACZ,CAAC,CAAC,KAAK,EACP,CAAC,EACD,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CACvB,CAAA;gCACD,MAAM,KAAK,GAAG,4BAA4B,CACxC,SAAS,EACT,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,EACjB,CAAC,CAAC,CAAC,EACH,CAAC,CAAC,IAAI,CAAC,KAAK,EACZ,CAAC,CAAC,KAAK,EACP,CAAC,CAAC,EACF,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CACvB,CAAA;gCACD,IACE,MAAM,IAAI,KAAK;qCACd,KAAK,IAAI,aAAa,IAAI,KAAK,CAAC;oCACjC,MAAM,IAAI,KAAK;qCACd,KAAK,IAAI,aAAa,IAAI,KAAK,CAAC,EACjC;oCACA,OAAO,CAAC,cAAc,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAA;oCAC7C,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA;iCACjC;6BACF;;yBAEF;qBACF;oBAED,QAAQ,CACN,CAAC,EACD,CAAC,EACD,IAAI,EACJ,KAAK,EACL,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,SAAS,EACT,IAAI,EACJ,cAAc,CACf,CAAA;oBACD,QAAQ,CACN,CAAC,EACD,CAAC,EACD,KAAK,EACL,IAAI,EACJ,QAAQ,EACR,OAAO,EACP,SAAS,EACT,QAAQ,EACR,KAAK,EACL,eAAe,CAChB,CAAA;iBACF;aACF;YAED,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;YAEvB,MAAM,IAAI,GAAG,IAAI,CAAA;YACjB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,EAC1B,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAA;YAC1B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE;gBACrD,OAAM;aACP;YACD,IAAI,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE;gBAClC,OAAM;aACP;YACD,MAAM,QAAQ,GAAG,OAAO,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAA;YACtD,IAAI,CAAC,IAAI,QAAQ,CAAC,MAAM,EAAE;gBACxB,OAAM;aACP;YACD,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;gBAC9B,MAAM,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAA;gBACtC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAA;aACxC;YAED,KAAK,IAAI,YAAY,GAAG,CAAC,EAAE,YAAY,GAAG,QAAQ,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE;;gBAEzE,MAAM,OAAO,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAA;gBACtC,MAAM,GAAG,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC,CAAA;gBAC5D,MAAM,GAAG,GAAG,KAAK,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;;;;;;;gBAO5D,OAAO,CACL,MACE,CAAC,IAAI,GAAG,CAAC,MAAM;oBACf,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACzD,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACxD,CAAA;gBACD,OAAO,CACL,MACE,CAAC,IAAI,GAAG,CAAC,MAAM;oBACf,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EACzD,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACxD,CAAA;gBAED,SAAS,YAAY,CAAC,EAA2B,EAAE,IAAU;oBAC3D,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE;wBAClB,QACE,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC;4BACtB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,WAAW,CAAC,MAAM,EACpE;qBACF;yBAAM;wBACL,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;qBAC3D;iBACF;;;gBAID,IAAI,GAAG,GAAG,YAAY,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;gBACjC,IAAI,GAAG,GAAG,YAAY,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;gBAClC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;oBAC1D,SAAQ;iBACT;;gBAED,IAAI,IAAuC,EACzC,IAAuC,CAAA;gBACzC,IAAI,CAAC,GAAG,CAAC,EACP,CAAC,GAAG,CAAC,EACL,IAAI,CAAA;gBACN,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,SAAS,EAC5D,QAAQ,EACR,MAAM,GAAG,OAAO,CAAC,IAAI,EACrB,MAAyC,EACzC,MAAyC,CAAA;gBAC3C,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE;oBACvC,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAA;oBACvB,MAAM,CAAC,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAA;oBACvB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,EACd,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;oBACZ,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;oBACd,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;wBACvD,IAAI,GAAG,CAAC,CAAA;wBACR,GAAG,GAAG,CAAC,GAAG,CAAA;wBACV,CAAC,CAAC,IAAI,GAAG,IAAI,CAAA;wBACb,IAAI,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAA;wBACjC,CAAC,EAAE,CAAA;qBACJ;yBAAM,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;wBAC1C,IAAI,GAAG,CAAC,CAAA;wBACR,CAAC,CAAC,IAAI,GAAG,IAAI,CAAA;wBACb,GAAG,GAAG,CAAC,GAAG,CAAA;wBACV,IAAI,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAA;wBACjC,CAAC,EAAE,CAAA;qBACJ;yBAAM;wBACL,IAAI,GAAG,CAAC,CAAA;wBACR,CAAC,CAAC,IAAI,GAAG,IAAI,CAAA;wBACb,CAAC,CAAC,IAAI,GAAG,IAAI,CAAA;wBACb,GAAG,GAAG,CAAC,GAAG,CAAA;wBACV,GAAG,GAAG,CAAC,GAAG,CAAA;;wBAEV,IAAI,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAA;wBACjC,IAAI,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,GAAG,SAAS,CAAA;;wBAEjC,CAAC,EAAE,CAAA;wBACH,CAAC,EAAE,CAAA;qBACJ;oBACD,IAAI,MAAM,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,EAAE;;wBAE3B,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;wBACpC,IAAI,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE;4BACtB,MAAM,GAAG,SAAS,CAAA;4BAClB,SAAQ;yBACT;wBACD,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;wBAC1B,MAAM,GAAG,IAAI,CAAC,CAAC,KAAK,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAA;wBAClD,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;wBACtC,MAAM,GAAG,IAAI,CAAC,CAAC,KAAK,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,CAAA;wBAC9C,MAAM,OAAO,GAAG,UAAU,CACxB,OAAO,EACP,MAAM,EACN,IAAI,CAAC,CAAC,EACN,MAAM,EACN,IAAI,CAAC,CAAC,EACN,SAAS,EACT,QAAQ,EACR,MAAM,EACN,QAAQ,GAAG,WAAW,EAAE,CACzB,CAAA;wBACD,MAAM,GAAG,SAAS,CAAA;wBAClB,IAAI,aAAa,CAAC,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;4BAChE,cAAc,CAAC,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI,IAAa,CAAC,CAAA;4BACvD,cAAc,CACZ,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,EAC1B,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,IACf,CACR,CAAA;yBACF;qBACF;yBAAM,IAAI,GAAG,IAAI,GAAG,EAAE;;wBAErB,MAAM,GAAG,IAAI,CAAC,CAAC,CAAA;wBACf,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAA;wBACzB,MAAM,GAAG,IAAI,CAAC,CAAC,CAAA;wBACf,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,SAAS,CAAA;wBACpC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,GAAG,SAAS,CAAA;qBACrC;iBACF;gBACD,IAAI,GAAG,IAAI,GAAG,IAAI,MAAM,KAAK,OAAO,CAAC,IAAI,EAAE;oBACzC,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAA;oBACzB,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;oBACpC,MAAM,GAAG,IAAI,KAAK,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAA;oBAChD,IAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;oBACpC,MAAM,GAAG,IAAI,KAAK,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,CAAA;oBAC5C,MAAM,OAAO,GAAG,UAAU,CACxB,OAAO,EACP,MAAO,EACP,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,EAChB,MAAM,EACN,IAAI,EACJ,SAAS,EACT,QAAQ,EACR,MAAM,EACN,QAAQ,GAAG,WAAW,EAAE,CACzB,CAAA;oBACD,IAAI,aAAa,CAAC,OAAO,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,EAAE;wBAChE,cAAc,CAAC,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI,IAAa,CAAC,CAAA;qBACxD;iBACF;aACF;YACD,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI;gBAC9B,YAAY,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC,CAAA;aACnD,CAAC,CAAA;YACF,KAAK,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI;gBAC/B,YAAY,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC,CAAA;aAClD,CAAC,CAAA;SACH;QAED,mBAAmB,CACjB,OAAc,EACd,QAAiB;YAEjB,MAAM,IAAI,GAAG,IAAI,CAAA;YACjB,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAA;YAC5B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAA;YAC/C,MAAM,EAAE,GAAG,EAAE,CAAA;YACb,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;gBACxB,MAAM,aAAa,GAAc,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAC7C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,CACjC,CAAA;;;gBAGD,KAAK,IAAI,SAAS,GAAG,CAAC,EAAE,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,EAAE;oBAC5D,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAA;oBAC5B,MAAM,aAAa,GAAG,CAAC,SAAS,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,EACjD,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,CAAA;;oBAEhC,IAAI,aAAa,CAAC,SAAS,CAAC,EAAE;wBAC5B,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;4BACjC,MAAM,aAAa,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,EAC/D,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,CAAA;4BAChC,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;4BACtC,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;4BAC7D,IACE,CAAC,aAAa,CAAC,aAAa,CAAC;gCAC7B,SAAS,CACP,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,EAAE,EACX,YAAY,EACZ,CAACA,MAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CACzB,GAAG,CAAC,EACL;gCACA,EAAE,CAAC,IAAI,CAAC;oCACN,CAAC,EAAE,QAAQ,CAAC,CAAC;oCACb,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;oCAC9B,CAAC,EAAE,OAAO;oCACV,IAAI,EAAE,QAAQ;oCACd,KAAK,EAAE,QAAQ,CAAC,EAAE;oCAClB,QAAQ,EAAE,KAAK;iCAChB,CAAC,CAAA;6BACH;4BACD,EAAE,CAAC,IAAI,CAAC;gCACN,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,SAAS,EAAE,IAAI,CAAC,IAAI;gCACpB,CAAC,EAAE,OAAO;gCACV,IAAI,EAAE,IAAI;gCACV,KAAK,EAAE,IAAI,CAAC,EAAE;gCACd,QAAQ,EAAE,IAAI;6BACf,CAAC,CAAA;yBACH;wBACD,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;4BACjC,MAAM,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;4BACtC,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;4BAC7D,IACE,CAAC,aAAa,CAAC,aAAa,CAAC;gCAC7B,SAAS,CACP,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,EAAE,EACX,YAAY,EACZA,MAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CACxB,GAAG,CAAC,EACL;gCACA,EAAE,CAAC,IAAI,CAAC;oCACN,CAAC,EAAE,IAAI,CAAC,CAAC;oCACT,SAAS,EAAE,IAAI,CAAC,IAAI;oCACpB,CAAC,EAAE,OAAO;oCACV,IAAI,EAAE,QAAQ;oCACd,KAAK,EAAE,QAAQ,CAAC,EAAE;oCAClB,QAAQ,EAAE,KAAK;iCAChB,CAAC,CAAA;6BACH;4BACD,EAAE,CAAC,IAAI,CAAC;gCACN,CAAC,EAAE,IAAI,CAAC,CAAC;gCACT,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gCAC9B,CAAC,EAAE,OAAO;gCACV,IAAI,EAAE,IAAI;gCACV,KAAK,EAAE,IAAI,CAAC,EAAE;gCACd,QAAQ,EAAE,IAAI;6BACf,CAAC,CAAA;yBACH;qBACF;yBAAM;wBACL,MAAM,MAAM,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAA;wBACjD,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;4BAC1B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAA;4BAC9B,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;gCAAE,SAAQ;4BACvC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;4BAChC,MAAM,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAA;4BACtB,MAAM,SAAS,GAAG,IAAI;iCACnB,SAAS,CAAC,KAAK,CAAC;iCAChB,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;iCACzB,OAAO,EAAE,CAAA;4BAEZ,MAAM,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;;;4BAG3C,IAAI,KAAK,IAAI,IAAI,CAAC,EAAE,EAAE;;gCAEpB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE;oCACjC,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;wCAC7B,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CACzC,IAAI,CAAC,CAAC,EACN,OAAO,EACP,MAAM,EACN,CAAC,CACF,CAAA;wCACD,MAAM,CAAC,cAAc,IAAI,WAAW,CAAC,OAAO,CAAC,CAAA;wCAC7C,IAAI,WAAW,CAAC,MAAM,IAAI,cAAc,EAAE;4CACxC,EAAE,CAAC,IAAI,CAAC;gDACN,CAAC,EAAE,IAAI,CAAC,CAAC;gDACT,SAAS,EAAE,SAAS;gDACpB,CAAC,EAAE,MAAM;gDACT,IAAI,EAAE,IAAI;gDACV,KAAK,EAAE,IAAI,CAAC,EAAE;gDACd,QAAQ,EAAE,KAAK;6CAChB,CAAC,CAAA;yCACH;qCACF;oCACD,IAAI,CAAC,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,EAAE;wCAC7B,MAAM,cAAc,GAAG,IAAI,CAAC,eAAe,CACzC,IAAI,CAAC,CAAC,EACN,OAAO,EACP,MAAM,EACN,CAAC,CAAC,CACH,CAAA;wCACD,MAAM,CAAC,cAAc,IAAI,WAAW,CAAC,OAAO,CAAC,CAAA;wCAC7C,IAAI,WAAW,CAAC,MAAM,IAAI,cAAc,EAAE;4CACxC,EAAE,CAAC,IAAI,CAAC;gDACN,CAAC,EAAE,IAAI,CAAC,CAAC;gDACT,SAAS,EAAE,SAAS,CAAC,OAAO,EAAE;gDAC9B,CAAC,EAAE,MAAM;gDACT,IAAI,EAAE,IAAI;gDACV,KAAK,EAAE,IAAI,CAAC,EAAE;gDACd,QAAQ,EAAE,KAAK;6CAChB,CAAC,CAAA;yCACH;qCACF;;;;;;;;;;;;;;;;;iCAiBF;6BACF;iCAAM,IAAI,KAAK,IAAI,IAAI,CAAC,EAAE,EAAE;;gCAE3B,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE;oCACjC,MAAM,SAAS,GAAGA,MAAI,CACpB,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAC3C,CAAA;oCACD,MAAM,GAAG,GAAG,IAAI,CAAA;oCAChB,KAAK,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;wCACzB,IACE,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,SAAS,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI;6CAC3C,CAAC,IAAI,GAAG,GAAG,SAAS,IAAI,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;6CAC3C,CAAC,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC;6CACpC,CAAC,IAAI,GAAG,IAAI,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC;4CAEpC,SAAQ;wCACV,MAAM,IAAI,GAAG,OAAO;6CACjB,EAAE,CAAC,MAAM,CAAC;6CACV,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;6CAClC,GAAG,CAAC,SAAS,CAAC,CAAA;wCACjB,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK;6CACnB,EAAE,CAAC,KAAK,CAAC;6CACT,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,GAAG,GAAG,GAAG,SAAS,GAAG,GAAG,CAAC,CAAC;6CAChD,GAAG,CAAC,SAAS,CAAC,CAAA;wCACjB,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE;4CAClB,EAAE,CAAC,IAAI,CAAC;gDACN,CAAC;gDACD,SAAS,EAAE,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC;gDAC/B,CAAC,EAAE,MAAM;gDACT,IAAI,EAAE,IAAI;gDACV,KAAK,EAAE,KAAK;gDACZ,QAAQ,EAAE,KAAK;6CAChB,CAAC,CAAA;yCACH;qCACF;iCACF;qCAAM;oCACL,EAAE,CAAC,IAAI,CAAC;wCACN,CAAC,EAAE,CAAC;wCACJ,SAAS,EAAE,SAAS;wCACpB,CAAC,EAAE,MAAM;wCACT,IAAI,EAAE,IAAI;wCACV,KAAK,EAAE,KAAK;wCACZ,QAAQ,EAAE,KAAK;qCAChB,CAAC,CAAA;iCACH;6BACF;;;;;;;;;;;;;;;;yBAgBF;qBACF;iBACF;aACF;;;YAGD,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YACvE,OAAO,EAAE,CAAA;SACV;QAED,SAAS,CAAC,EAAM;YACd,MAAM,SAAS,GAAG,EAAE,CAAC,WAAW,EAAE,CAAA;YAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EACxC,SAAS,CACV,CAAA;YACD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KACnC,IAAI,CAAC,WAAW,CACd,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,EAChC,SAAS,CACV,CACF,CAAA;YACD,OAAO,IAAI,IAAI,CAAC,WAAW,CACzB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC,EAC1B,QAAQ,EACR,QAAQ,EACR,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,CACF,CAAA;SACV;QAED,UAAU,CAAC,EAAM;YACf,MAAM,SAAS,GAAG,EAAE,CAAC,WAAW,EAAE,CAAA;YAClC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EACzC,SAAS,CACV,CAAA;YACD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KACnC,IAAI,CAAC,WAAW,CACd,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EACjC,SAAS,CACV,CACF,CAAA;YACD,OAAO,IAAI,IAAI,CAAC,WAAW,CACzB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,EAC3B,QAAQ,EACR,QAAQ,EACR,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,CACF,CAAA;SACV;QAED,OAAO;YACL,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,CAAA;YAC/D,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KACnC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,OAAO,EAAE,CACvC,CAAA;YACD,OAAO,IAAI,IAAI,CAAC,WAAW,CACzB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EACtB,QAAQ,EACR,QAAQ,EACR,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,CACV,CAAA;SACF;QAED,QAAQ;YACN,QACE,MAAM;gBACN,IAAI,CAAC,WAAW,CAAC,IAAI;gBACrB,GAAG;gBACH,IAAI,CAAC,OAAO;gBACZ,KAAK;gBACL,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE;gBAC1C,GAAG;gBACH,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,cAAc,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;gBACtD,GAAG,EACJ;SACF;QAED,QAAQ;YACN,QACE,MAAM;gBACN,IAAI,CAAC,WAAW,CAAC,IAAI;gBACrB,GAAG;gBACH,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;gBACvB,KAAK;gBACL,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC7D,MAAM;gBACN,IAAI,CAAC,KAAK;qBACP,GAAG,CACF,CAAC,IAAI,KACH,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,MAAM,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,CACpE;qBACA,IAAI,CAAC,GAAG,CAAC;gBACZ,IAAI,EACL;SACF;QAED,MAAM,CAAC,GAAQ;YACb,QACE,IAAI,IAAI,GAAG;iBACV,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC;oBACxD,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM;oBACrC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC;oBAC1C,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,KACnB,GAAY,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAClE,CAAC,EACL;SACF;QAED,QAAQ;YACN,SAAS,aAAa,CAAC,KAAe;gBACpC,IAAI,QAAQ,GAAG,CAAC,CAAA;gBAChB,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;oBACvB,QAAQ,GAAG,CAAC,QAAQ,GAAG,EAAE,GAAG,GAAG,IAAI,CAAC,CAAA;iBACrC;gBACD,OAAO,QAAQ,CAAA;aAChB;YAED,SAAS,YAAY,CAAC,IAAY;gBAChC,OAAO,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;aACtE;YAED,IAAI,QAAQ,GAAG,CAAC,CAAA;YAChB,QAAQ;gBACN,CAAC,QAAQ,GAAG,EAAE;oBACZ,aAAa,CACX,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CACzD;oBACH,CAAC,CAAA;YACH,QAAQ,GAAG,CAAC,QAAQ,GAAG,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;YAC3D,QAAQ,GAAG,CAAC,QAAQ,GAAG,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;YACxD,OAAO,QAAQ,CAAA;SAChB;QAED,QAAQ,CAAC,KAAW;YAClB,SAAS,SAAS,CAAC,CAAS,EAAE,CAAS;gBACrC,QACE,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM;oBACpB,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KACrC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAC5D,EACF;aACF;YAED,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;YACvB,QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;gBAChC,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,MAAM;gBACvC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAC;gBACtC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,KACpB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CACpD,EACF;SACF;QAED,WAAW;YACT,OAAO,IAAI,CAAC,QAAQ,CAAA;SACrB;QAED,YAAY,CAAC,IAA6C;YACxD,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,CAAA;YAC3B,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC,EACpE,GAAG,GAAG,IAAI,CAAC,QAAS,CAAC,MAAM,CAAA;YAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAI,CAAC,QAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;gBAChC,IAAI,CAAC,KAAM,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAA;aAC7D;SACF;QAED,aAAa,CAAC,CAAK;YACjB,aAAa,CAAC,CAAC,CAAC,CAAA;YAChB,QACE,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,IAAI,WAAW,CAAC,OAAO;gBACtE,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CACd,CAAC,IAAI,KACH,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,WAAW,CAAC,OAAO,CACjE,EACF;SACF;QAED,cAAc,CAAC,CAAK;YAClB,aAAa,CAAC,CAAC,CAAC,CAAA;YAChB,MAAM,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;YAC5E,IAAI,oBAAoB,IAAI,WAAW,CAAC,MAAM;gBAAE,OAAO,oBAAoB,CAAA;YAC3E,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAC7B,MAAM,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;gBACjE,IAAI,iBAAiB,IAAI,WAAW,CAAC,OAAO,EAAE;oBAC5C,OAAO,iBAAiB,IAAI,WAAW,CAAC,OAAO;0BAC3C,WAAW,CAAC,OAAO;0BACnB,WAAW,CAAC,OAAO,CAAA;iBACxB;aACF;YACD,OAAO,WAAW,CAAC,MAAM,CAAA;SAC1B;;;;;;QAOD,cAAc,CAAC,IAAQ;YACrB,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;YACpB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC;gBAAE,OAAO,GAAG,CAAA;YACpD,MAAM,wBAAwB,GAAG,IAAI,CAAC,OAAO;iBAC1C,WAAW,CAAC,IAAI,CAAC;iBACjB,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAChD,MAAM,aAAa,GAAGiR,KAAQ,CAAC,wBAAwB,CAAC,CAAA;YAExD,OAAO,SAAS,IAAI,aAAa,GAAG,aAAa,GAAG,GAAG,CAAA;SACxD;QAED,MAAM;YACJ,MAAM,IAAI,GAAG,IAAI,IAAI,EAAE;iBACpB,cAAc,CAAC,WAAW,CAAC;iBAC3B,cAAc,CAAC,OAAO,CAAC;iBACvB,eAAe,CAAC,SAAS,EAAE,WAAW,CAAC,CAAA;YAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;;YAEpB,OAAO,IAAI,CAAA;SACZ;QAID,UAAU;YACR,OAAO,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAA;SACnD;QAED,QAAQ;YACN,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAA;SACtD;QAED,QAAQ;YACN,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAA;SACrC;QAED,OAAO;YACL,QACE,IAAI,CAAC,IAAI;iBACR,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAClE;SACF;QAED,eAAe,CACb,CAAK,EACL,KAAY,EACZ,MAAc,EACd,GAAW;YAEX,MAAM,GAAG,GAAG,IAAI,CAAA;YAChB,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;YACtC,MAAM,YAAY,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;YACvD,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,CAAA;YACrC,MAAM,GAAG,GAAG,KAAK;iBACd,EAAE,CAAC,MAAM,CAAC;iBACV,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;iBAChC,GAAG,CAAC,EAAE,CAAC,CAAA;YACV,IAAI,QAAQ,GAAG,QAAQ,EACrB,MAAM,EACN,QAAQ,GAAG,KAAK,CAAA;YAClB,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;gBACrC,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EACzB,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;gBACvB,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;gBAC9B,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;gBAC9B,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI;oBAAE,SAAQ;gBAC5B,MAAM,WAAW,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAA;gBAC1D,MAAM,KAAK,GAAG,YAAY,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAA;gBACnE,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE;oBACd,IAAI,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;wBAClC,OAAO,WAAW,CAAC,OAAO,CAAA;qBAC3B;oBACD,MAAM,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAA;oBACtC,MAAM,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,IAAIjR,MAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAA;oBACrD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;;oBAE1D,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,CAAA;oBACvB,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,GAAG,QAAQ,CAAC,EAAE;wBAC9C,QAAQ,GAAG,IAAI,CAAA;wBACf,QAAQ,GAAG,IAAI,CAAA;wBACf,MAAM,GAAG,IAAI,GAAG,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,MAAM,CAAA;qBACzD;iBACF;qBAAM,IAAI,CAAC,QAAQ,EAAE;oBACpB,MAAM,MAAM,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,GAAG,CAAA;oBAClC,IAAI,MAAM,GAAG,QAAQ,EAAE;wBACrB,QAAQ,GAAG,MAAM,CAAA;wBACjB,MAAM,GAAG,IAAI,GAAG,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,MAAM,CAAA;qBACzD;iBACF;aACF;YACD,IAAI,MAAM,IAAI,SAAS;gBAAE,MAAM,IAAI,KAAK,EAAE,CAAA;YAC1C,OAAO,MAAM,CAAA;SACd;QAED,eAAe,CAAC,CAAK,EAAE,GAAO;YAC5B,OAAO,IAAI,CAAC,eAAe,CAAC,CAAC,EAAE,EAAE,CAAC,eAAe,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;SAoBjE;KACF;UAEY,SAAU,SAAQ,IAAI;QAGjC,YACE,CAAoB,EACpB,OAAe,EACf,KAAgB,EAChB,IAAa,EACb,IAAU;YAEV,MAAM,CAAC,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,YAAY,CAAC,CAAA;YACpD,KAAK,CAAC,CAAC,YAAY,EAAE,GAAG,IAAI,YAAY,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;SAC7E;QAED,OAAO,WAAW,CAChB,YAA+B,EAC/B,EAAQ,EACR,GAAG,OAAe;YAElB,MAAM,aAAa,GACjB,YAAY,YAAY,EAAE,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,GAAG,YAAY,CAAA;YAC5E,MAAM,CACJ,KAAK,CAAC,EAAE,EAAE,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,EACtC,uCAAuC,CACxC,CAAA;YACD,MAAM,KAAK,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;YACpC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,KACjB,MAAM,CACJ,gBAAgB,CAAC,EAAE,EAAE,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EACtD,uDAAuD,CACxD,CACF,CAAA;YACD,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAA;YAC3D,OAAO,IAAI,SAAS,CAAC,YAAY,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;SACjD;QAED,SAAS,CAAC,IAAc;YACtB,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAA;YAChC,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAA;YACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC,CAAA;YACtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAA;aAC5D;YACD,MAAM,UAAU,GAAa,EAAE,CAAA;YAC/B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;gBACtB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;gBAChC,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAA;aAChE,CAAC,CAAA;YACF,MAAM,SAAS,GAAG,mBAAmB,CAAC,MAAM,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,GAAG,CACrE,CAAC,KAAK,KAAK,KAAK,GAAG,GAAG,CACvB,CAAA;YACD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;YACnD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;YACrD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CACxB,IAAI,CAAC,OAAO,EACZ,iBAAiB,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,MAAM,CAAC,CACjD,CAAA;SACF;QAED,cAAc,CAAC,IAAQ;YACrB,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,CAAA;YACpB,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;YACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;gBAC5B,OAAO,GAAG,CAAA;aACX;YACD,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAA;YAClD,OAAO,MAAM,GAAG,MAAM,GAAG,GAAG,CAAA;SAC7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA4GD,QAAQ,CAAC,SAAiB;YACxB,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC,CAAA;SAC9D;QAED,cAAc,CAAC,CAAK,EAAE,GAAO;YAC3B,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SACjE;QAED,iBAAiB,CAAC,MAAU,EAAE,MAAU;YACtC,MAAM,IAAI,GAAG,IAAI,CAAA;YACjB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAA;YAC/C,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAA;YACnC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAA;YAChC,MAAM,EAAE,GAA4B,EAAE,CAAA;YACtC,MAAM,KAAK,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAC/C,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI;gBACjB,MAAM,aAAa,GAAG,IAAI,CAAC,GAAG,CAC5B,CAAC,IAAI,KACH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAACA,MAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CACnE,CAAA;gBACD,MAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;gBAElD,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK;oBAClC,MAAM,aAAa,GAAG,CAAC,SAAS,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,EAClD,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,EAC/B,YAAY,GAAG,aAAa,CAAC,SAAS,CAAC,CAAA;;oBAEzC,IAAI,YAAY,EAAE;;wBAEhB,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EACnC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;;wBAEjC,EAAE,CAAC,IAAI,CACL;4BACE,CAAC,EAAE,IAAI,CAAC,CAAC;4BACT,SAAS,EAAE,IAAI,CAAC,IAAI;4BACpB,CAAC,EAAE,OAAO;4BACV,IAAI,EAAE,IAAI;4BACV,KAAK,EAAE,IAAI,CAAC,EAAE;4BACd,QAAQ,EAAE,IAAI;yBACf,EACD;4BACE,CAAC,EAAE,IAAI,CAAC,CAAC;4BACT,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;4BAC9B,CAAC,EAAE,OAAO;4BACV,IAAI,EAAE,IAAI;4BACV,KAAK,EAAE,IAAI,CAAC,EAAE;4BACd,QAAQ,EAAE,IAAI;yBACf,CACF,CAAA;;wBAED,MAAM,QAAQ,GACZ,aAAa,CAAC,aAAa,CAAC;4BAC5B,SAAS,CACP,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,EAAE,EACX,SAAS,EACT,QAAQ,CAAC,UAAU,EAAE,CACtB,CAAA;wBACH,IAAI,YAAY,GAAG,QAAQ,GAAG,CAAC,EAAE;;4BAE/B,EAAE,CAAC,IAAI,CAAC;gCACN,CAAC,EAAE,QAAQ,CAAC,CAAC;gCACb,SAAS,EAAE,IAAI,CAAC,IAAI;gCACpB,CAAC,EAAE,OAAO;gCACV,IAAI,EAAE,QAAQ;gCACd,KAAK,EAAE,QAAQ,CAAC,EAAE;gCAClB,QAAQ,EAAE,KAAK;6BAChB,CAAC,CAAA;yBACH;qBACF;yBAAM;;wBAEL,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAA;wBAC7C,MAAM,CACJ,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAC3D,MAAM,CACP,CAAA;wBACD,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;4BAC1B,IAAI,KAAK,IAAI,IAAI,CAAC,EAAE,EAAE;;gCAEpB,MAAM,IAAI,GAAG,SAAS,CACpB,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,EAAE,EACP,SAAS,EACT,CAAC,IAAI,CAAC,UAAU,EAAE,CACnB,CAAA;gCACD,MAAM,QAAQ,GACZ,aAAa,CAAC,aAAa,CAAC;oCAC5B,SAAS,CACP,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,EAAE,EACX,SAAS,EACT,QAAQ,CAAC,UAAU,EAAE,CACtB,CAAA;gCACH,IAAI,IAAI,GAAG,QAAQ,GAAG,CAAC,EAAE;;oCAEvB,EAAE,CAAC,IAAI,CAAC;wCACN,CAAC,EAAE,IAAI,CAAC,CAAC;wCACT,SAAS,EAAE,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE;wCACnC,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;wCACxB,IAAI,EAAE,IAAI;wCACV,KAAK,EAAE,IAAI,CAAC,EAAE;wCACd,QAAQ,EAAE,KAAK;qCAChB,CAAC,CAAA;iCACH;6BACF;iCAAM,IAAI,KAAK,IAAI,IAAI,CAAC,EAAE,EAAE;;gCAE3B,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAA;gCAC9B,MAAM,CACJ,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,EACvB,IAAI,CAAC,QAAQ,EAAE,EACf,CAAC,EACD,KAAK,EACL,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAC1B,CAAA;gCACD,MAAM,CACJ,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,EACvB,IAAI,CAAC,QAAQ,EAAE,EACf,CAAC,EACD,KAAK,EACL,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CAC1B,CAAA;gCACD,MAAM,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;gCAC1C,EAAE,CAAC,IAAI,CAAC;oCACN,CAAC,EAAE,CAAC;oCACJ,SAAS,EAAE,SAAS;oCACpB,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;oCACnB,IAAI,EAAE,IAAI;oCACV,KAAK,EAAE,KAAK;oCACZ,QAAQ,EAAE,KAAK;iCAChB,CAAC,CAAA;6BACH;yBACF;qBACF;iBACF,CAAC,CAAA;aACH,CAAC,CAAA;;;YAGF,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAA;YAC5D,OAAO,EAAE,CAAA;SACV;KACF;UAEY,YAAa,SAAQ,IAAI;QACpC,YACE,GAAY,EACZ,OAAe,EACf,KAAgB,EAChB,IAAa,EACb,IAAU;YAEV,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;SACvC;QAED,OAAO,qBAAqB,CAAC,IAAY,EAAE,SAAa;YACtD,IAAI,IAAI,GAAG,CAAC,CAAA;;YAGZ,SAAS,SAAS,CAAC,CAAS;gBAC1B,IAAI,IAAI,IAAI,CAAC,EAAE;oBACb,IAAI,GAAG,CAAC,CAAA;iBACT;qBAAM;oBACL,OAAO,CAAC,IAAI,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,CAAA;iBAC7B;gBACD,OAAO,KAAK,CAAA;aACb;YAED,KAAK,MAAM,IAAI,IAAI,IAAI,EAAE;gBACvB,MAAM,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAA;gBAC5C,IAAI,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE;oBAClB,IACE,EAAE,IAAI,CAAC,KAAK,YAAY,EAAE,CAAC;wBAC3B,SAAS,CAAC,SAAS,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAElD,OAAO,KAAK,CAAA;iBACf;qBAAM;oBACL,KAAK,MAAM,CAAC,IAAI,EAAE,EAAE;;;wBAGlB,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE;4BAChB,IACE,SAAS,CACP,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAChE;gCAED,OAAO,KAAK,CAAA;yBACf;wBACD,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE;4BAChB,IACE,SAAS,CACP,SAAS,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAC/D;gCAED,OAAO,KAAK,CAAA;yBACf;qBACF;iBACF;aACF;YACD,OAAO,IAAI,CAAA;SACZ;QAED,OAAO;YACL,IAAI,IAAI,CAAC,IAAI;gBAAE,OAAO,IAAI,CAAC,IAAI,CAAA;YAC/B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;YAC/D,IAAI,CAAC,IAAI,CAAC,SAAS,CACjB,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CACrE,CAAA;YACD,OAAO,IAAI,CAAC,IAAI,CAAA;SACjB;QAED,UAAU,CAA8C,QAAgB;YACtE,MAAM,EAAE,GAAS,EAAE,CAAA;YACnB,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;YAClC,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC,CAAA;YAClE,MAAM,cAAc,GAAG,YAAY,CAAC,SAAS,CAC3C,CAAC,YAAY,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CACvD,CAAA;YACD,MAAM,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,CAAA;;YAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACxC,MAAM,SAAS,GAAG,CAAC,CAAC,GAAG,cAAc,IAAI,QAAQ,CAAC,MAAM,CAAA;gBACxD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACvD,MAAM,CAAC,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;oBACpC,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;;oBAErB,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;iBAChB;aACF;YACD,QAAQ,CAAC,OAAO,CAAC,CAAC,IAAI;gBACpB,IAAI,CAAC,cAAc,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC9B,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;iBAChB,CAAC,CAAA;aACH,CAAC,CAAA;YACF,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAA;YAC7C,OAAO,EAAE,CAAA;SACV;;;;;;;;QASD,oBAAoB,CAAC,SAAmB;YACtC,MAAM,UAAU,GAAS,EAAE,EACzB,QAAQ,GAAS,EAAE,EACnB,UAAU,GAAG,EAAE,CAAA;YACjB,MAAM,SAAS,GAAqB,IAAI,CAAC,OAA2B,CAAA;YACpE,MAAM,IAAI,GAAG,SAAS,CAAC,OAAO,EAAE,CAAA;YAChC,MAAM,mBAAmB,GACvB,SAAS,YAAY,gBAAgB;kBACjC,CAAC,SAAa,KACZ,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;oBACnD,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;kBACtD,CAAC,SAAa,KACZ,SAAS,CAAC,IAAI,CAAE,IAAI,CAAC,OAAwB,CAAC,MAAM,CAAC,CAAA;YAC7D,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;gBAChC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;;gBAElC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAA;oBACrC,MAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc,EAAE,CAAA;oBAChD,QAAQ,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAA;oBAC7B,UAAU,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;oBACnD,MAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;;oBAGjC,IAAI,mBAAmB,CAAC,SAAS,CAAC,EAAE;wBAClC,MAAM,MAAM,GAAG,SAAS,CAAC,aAAa,CAAC,eAAe,CAClD,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CACjB,EACD,MAAM,GAAG,SAAS,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAA;wBACtE,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;wBAChD,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAA;wBAE/C,MAAM,MAAM,GAAG,UAAU,CAAC,GAAG,EAAG,CAAA;wBAChC,UAAU,CAAC,IAAI,CACb,IAAI,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,EAC5B,IAAI,EAAE,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAC9B,CAAA;wBACD,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAA;qBACjC;oBACD,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;wBAC1B,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;wBACnB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;qBACpB,CAAC,CAAA;iBACH;aACF;YACD,IAAI,OAAO,CAAA;YACX,IAAI,IAAI,CAAC,OAAO,YAAY,gBAAgB,EAAE;gBAC5C,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;aACpD;iBAAM;gBACL,MAAM,QAAQ,GAAG,SAAS,CAAC,YAAY,EAAE,CAAA;gBACzC,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;aACvD;YACD,MAAM,CAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAA;;YAE1C,OAAO;gBACL,UAAU,EAAE,UAAU;gBACtB,QAAQ,EAAE,QAAQ;gBAClB,OAAO,EAAE,OAAO;gBAChB,UAAU,EAAE,UAAU;aACvB,CAAA;SACF;QAED,mBAAmB,CAAC,KAAe;YACjC,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,KACjC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,cAAc,EAAE,CAAC,CAC9C,CAAA;YACD,MAAM,OAAO,GAAG,IAAI,CAAC,OAA4B,CAAA;YACjD,MAAM,QAAQ,GAAS,YAAY,CAAC,WAAW,CAAC,CAAA;;YAEhD,MAAM,UAAU,GAAG,WAAW,CAAC,MAAM,CACnC,CAAC,GAAG,EAAE,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,EAC1D,CAAC,CAAC,CAAC,CACJ,CAAA;YACD,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,EAAE,CAAA;YACjC,MAAM,UAAU,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;YAClD,MAAM,GAAG,GAAG,OAAO,CAAC,YAAY,EAAE,CAAA;YAClC,MAAM,OAAO,GAAS,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;YAC7D,OAAO;gBACL,UAAU,EAAE,UAAU;gBACtB,QAAQ,EAAE,QAAQ;gBAClB,OAAO,EAAE,OAAO;gBAChB,UAAU,EAAE,UAAU;aACvB,CAAA;SACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAiCD,SAAS,CAEP,IAAc,EACd,QAAgB,IAAI,CAAC,OAAO,CAAC,KAAK,EAClC,QAAgB,IAAI,CAAC,OAAO,CAAC,KAAK;YAElC,OAAO,CACL,MAAM,KAAK,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,EAC5B,KAAK,EACL,KAAK,EACL,WAAW,GAAG,IAAI,CAAC,OAAO,CAC3B,CAAA;YACD,MAAM,SAAS,GAAU,EAAE,CAAA;YAC3B,MAAM,GAAG,GAAG,CAAC,CAAS,EAAE,CAAS,KAC/B,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC,CAAA;YAC9C,MAAM,QAAQ,GAAG,CAAC,CAAS,EAAE,CAAS,KACpC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,CAAC,CAAA;YACnD,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAA;YAC7B,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE,GACjD,IAAI,CAAC,OAAO,YAAY,gBAAgB;gBACxC,IAAI,CAAC,OAAO,YAAY,YAAY;kBAChC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;kBAChC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAA;YACrC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;YAChC,MAAM,UAAU,GAAG,UAAU,CAAC,GAAG,CAC/B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,IAAI,EAAE,CAAC,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,CAAC,CAC9C,CAAA;YAED,KACE,IAAI,eAAe,GAAG,CAAC,EACvB,eAAe,GAAG,KAAK,CAAC,MAAM,EAC9B,eAAe,EAAE,EACjB;gBACA,MAAM,eAAe,GAAG,UAAU,CAAC,eAAe,CAAC,CAAA;gBACnD,MAAM,gBAAgB,GAAG,UAAU,CAAC,eAAe,GAAG,CAAC,CAAC,GAAG,eAAe,CAAA;gBAC1E,MAAM,IAAI,GAAG,IAAI,CAAC,QAAS,CAAC,MAAM,GAAG,UAAU,CAAC,eAAe,CAAC,CAAA;gBAChE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,EAAE,CAAC,EAAE,EAAE;oBACzC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,gBAAgB,CAAC,CAAC,CAAA;iBAC/D;aACF;YAED,cAAc,EAAE,CAAA;YAChB,IAAI,IAAI,GAAG,QAAQ,EACjB,IAAI,GAAG,CAAC,QAAQ,EAChB,IAAI,GAAG,QAAQ,EACf,IAAI,GAAG,CAAC,QAAQ,CAAA;;;;;YAKlB,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;gBACxB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;gBACnB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;gBACnB,IAAI,GAAGlB,KAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;gBACnB,IAAI,GAAGC,KAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;gBACnB,IAAI,GAAGD,KAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;gBACnB,IAAI,GAAGC,KAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;aACpB,CAAC,CAAA;YACF,IAAI,iBAAiB,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAGvC;YACD,MAAM,OAAO,GAAGa,OAAK,CAAC,IAAI,GAAG,aAAa,CAAC,EACzC,OAAO,GAAGA,OAAK,CAAC,IAAI,GAAG,aAAa,CAAC,CAAA;YACvC,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,GAAG,OAAO,EAC/C,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,GAAG,OAAO,CAAA;YAC7C,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;YACrC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE;;gBAE1B,MAAM,aAAa,GAAG,mBAAmB,CACvC,EAAE,CAAC,CAAC,EACJ,UAAU,EACV,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAC3C,CAAA;gBACD,SAAS,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAA;aACjC;iBAAM;gBACL,MAAM,MAAM,GAAc,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,CAAA;gBAEhD,SAAS,SAAS,CAAC,IAAc,EAAE,KAAU,EAAE,KAAU;oBACvD,MAAM,CACJ,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,EAC5B,GAAG,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,EAAE,CACvC,CAAA;oBACD,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;;oBAEhD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;oBACnB,MAAM,KAAK,GAAG,KAAK,GAAG,OAAO,EAC3B,KAAK,GAAG,KAAK,GAAG,OAAO,CAAA;oBACzB,KAAK,MAAM,KAAK,IAAI,IAAI,EAAE;wBACxB,MAAM,CACJ,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC5B,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,EACpC,GAAG,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,KAAK,IAAI,KAAK,EAAE,CACtD,CAAA;wBACD,MAAM,CACJ,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC5B,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CACrC,CAAA;qBACF;oBACD,MAAM,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,CAC/B;oBAAA,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;;;iBAGhD;;;gBAID,KACE,IAAI,eAAe,GAAG,CAAC,EACvB,eAAe,GAAG,KAAK,CAAC,MAAM,EAC9B,eAAe,EAAE,EACjB;oBACA,IAAI,IAAI,GAAsB,SAAS,CAAA;oBACvC,IAAI,SAAS,GAAsB,SAAS,CAAA;oBAC5C,IAAI,cAAc,GAAQ,CAAC,CAAC,CAAA;oBAC5B,IAAI,cAAc,GAAQ,CAAC,CAAC,CAAA;oBAC5B,IAAI,SAAS,GAAG,CAAC,CAAC,EAChB,SAAS,GAAG,CAAC,CAAC,CAAA;oBAChB,IAAI,SAAS,GAAG,CAAC,CAAA;oBACjB,MAAM,eAAe,GAAG,UAAU,CAAC,eAAe,CAAC,CAAA;oBACnD,MAAM,gBAAgB,GACpB,UAAU,CAAC,eAAe,GAAG,CAAC,CAAC,GAAG,eAAe,CAAA;oBACnD,KAAK,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,gBAAgB,EAAE,IAAI,EAAE,EAAE;wBAClD,MAAM,QAAQ,GAAG,eAAe,GAAG,IAAI,EACrC,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAA;wBAC5B,MAAM,QAAQ,GAAG,eAAe,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,gBAAgB,CAAC,EAChE,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAA;;wBAE5B,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA;wBACxB,MAAM,CAAC,GAAG,CAAC,CAAA;wBACX,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,EACf,EAAE,GAAG,IAAI,CAAC,CAAC,CAAA;wBACb,IAAI,OAAO,GAAG,QAAQ,EACpB,EAAE,GAAG,GAAG,EACR,QAAQ,GAAG,CAAC,CAAA;wBACd,IAAI,UAAU,GAAG,GAAG,CAAA;wBACpB,OAAO,EAAE,UAAU,EAAE;;;;4BAInB,MAAM,KAAK,GACTA,OAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAGI,MAAI,CAAC,EAAE,CAAC,GAAG,CAACA,MAAI,CAAC,EAAE,CAAC,IAAI,aAAa,CAAC;gCAC/D,OAAO,CAAA;4BACT,MAAM,KAAK,GACTJ,OAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAGI,MAAI,CAAC,EAAE,CAAC,GAAGA,MAAI,CAAC,EAAE,CAAC,IAAI,aAAa,CAAC;gCAC9D,OAAO,CAAA;4BACT,MAAM,CACJ,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,EAC5B,GAAG,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,IAAI,EAAE,CACvC,CAAA;;;4BAGD,MAAM,KAAK,GACT,IAAI,CAACA,MAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,aAAa,CAAC,GAAGA,MAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;4BACzD,MAAM,KAAK,GACT,IAAI,CAACA,MAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,aAAa,CAAC,GAAGA,MAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;4BACzD,MAAM,MAAM,GAAG,QAAQ,GAAG,KAAK,GAAGf,KAAG,CAAC,EAAE,CAAC,CAAA;4BACzC,MAAM,MAAM,GAAG,QAAQ,GAAG,KAAK,GAAGA,KAAG,CAAC,EAAE,CAAC,CAAA;;;4BAGzC,IAAI,SAAS,IAAI,KAAK,IAAI,SAAS,IAAI,KAAK,EAAE;gCAC5C,IAAI,IAAI,EAAE;oCACR,IAAI,CAAC,SAAS,EAAE;wCACd,SAAS,GAAG,IAAI,CAAA;wCAChB,cAAc,GAAG,SAAS,CAAA;wCAC1B,cAAc,GAAG,SAAS,CAAA;qCAC3B;yCAAM;wCACL,SAAS,EAAE,CAAA;wCACX,SAAS,CAAC,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC,CAAA;qCACtC;iCACF;gCACD,IAAI,GAAG,CAAC,OAAO,CAAC,CAAA;6BACjB;4BACD,SAAS,GAAG,KAAK,CAAA;4BACjB,SAAS,GAAG,KAAK,CAAA;4BACjB,QAAQ,GAAGH,KAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;4BAC9B,IAAI,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;;gCAEnB,IAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;gCACpB,MAAK;6BACN;iCAAM;gCACL,MAAM,SAAS,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAA;gCACzC,MAAM,cAAc,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAA;;gCAG1D,IAAK,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;gCAC1B,EAAE,GAAG,SAAS,CAAA;gCACd,OAAO,GAAG,cAAc,CAAA;6BACzB;yBACF;wBACD,MAAM,CAAC,UAAU,EAAE,YAAY,CAAC,CAAA;qBACjC;oBACD,IAAI,CAAC,IAAI,SAAS,EAAE;;wBAElB,MAAM,CAAC,KAAK,EAAE,yCAAyC,CAAC,CAAA;qBACzD;;;oBAGD,IAAI,cAAc,IAAI,SAAS,IAAI,cAAc,IAAI,SAAS,EAAE;wBAC9D,IAAK,CAAC,GAAG,EAAE,CAAA;wBACX,SAAS,CAAC,IAAK,CAAC,MAAM,CAAC,SAAU,CAAC,EAAE,SAAS,EAAE,SAAS,CAAC,CAAA;qBAC1D;yBAAM;wBACL,SAAS,CAAC,SAAU,EAAE,cAAe,EAAE,cAAe,CAAC,CAAA;wBACvD,SAAS,CAAC,IAAK,EAAE,SAAS,EAAE,SAAS,CAAC,CAAA;qBACvC;oBACD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAA;iBACpC;gBACD,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAA;gBACvC,MAAM,kBAAkB,GAAG,IAAI,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC,CAAA;gBAE7D,SAAS,SAAS,CAAC,CAAS,EAAE,CAAS;oBACrC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBAChC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBAC5B,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;iBACpC;gBAED,SAAS,kBAAkB,CAAC,CAAM,EAAE,CAAM;oBACxC,MAAM,KAAK,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;oBAChC,QACE,kBAAkB,CAAC,KAAK,CAAC;yBACxB,kBAAkB,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,OAAO,EAAE,CAAC,GAAG,OAAO,CAAC,CAAC,EAClE;iBACF;gBAED,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE;oBACnC,IAAI,MAAM,GAAG,KAAK,CAAA;oBAClB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,IAAI,EAAE,GAAG,EAAE,EAAE;wBACnC,MAAM,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,CAAA;wBAC5B,MAAM,MAAM,GAAG,OAAO,GAAG,GAAG,EAC1B,MAAM,GAAG,OAAO,GAAG,GAAG,CAAA;wBACxB,MAAM,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;wBACzB,IAAI,CAAC,KAAK,EAAE;4BACV,IAAI,MAAM,EAAE;gCACV,QAAQ,CACN,SAAS,EACT,KAAK,EACL,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,EAC5B,kBAAkB,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAChC,kBAAkB,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,EAChC,kBAAkB,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CACrC,CAAA;6BACF;yBACF;6BAAM;;4BAEL,SAAS,IAAI,CAAC,KAAU;gCACtB,MAAM,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,EACzB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,EACjB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,MAAM,CAAA;gCACnB,MAAM,CACJ,CAAC,aAAa,GAAG,EAAE;oCACjB,EAAE,GAAG,CAAC,GAAG,aAAa;oCACtB,CAAC,aAAa,GAAG,EAAE;oCACnB,EAAE,GAAG,CAAC,GAAG,aAAa,EACxB,YAAY;oCACV,EAAE;oCACF,GAAG;oCACH,EAAE;oCACF,GAAG;oCACH,KAAK;oCACL,GAAG;oCACH,CAAC,CAAC,GAAG;oCACL,2CAA2C,CAC9C,CAAA;gCACD,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAA;6BACvC;4BAED,OAAO,KAAK,CAAC,MAAM,EAAE;gCACnB,MAAM,OAAO,GAAU,EAAE,CAAA;gCACzB,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;gCAC1B,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;gCAC5B,IAAI,WAAW,GAAG,SAAS,CAAA;gCAC3B,GAAG;oCACD,OAAO,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,CAAA;oCAC5B,MAAM,kBAAkB,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAA;oCACrD,MAAM,aAAa,GAAG,YAAY,CAChC,KAAK,EACL,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,kBAAkB,EAAE,CAAC,CAAC,CACtD,CAAA;oCACD,MAAM,QAAQ,GAAG,cAAc,CAAC,KAAK,EAAE,aAAa,CAAC,CAAA;oCACrD,IAAI,WAAW,GAAG,kBAAkB,CAAA;oCACpC,MAAM,iBAAiB,GACrB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW;0CAC3B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;0CACjB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;oCAC3B,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,CAAA;oCAChD,IAAI,QAAQ,GAAG,GAAG,CAChB,CAAC,CAAC,WAAW,GAAG,aAAa,IAAI,CAAC,IAAI,aAAa,CACpD,CAAA;;oCAED,OAAO,EAAE,CAAC,QAAQ,EAAE,iBAAiB,CAAC,EAAE;wCACtC,QAAQ,QAAQ,GAAG,CAAC;4CAClB,KAAK,CAAC;gDACJ,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;gDAC1C,MAAK;4CACP,KAAK,CAAC;gDACJ,MAAM,GAAG,MAAM,IAAI,QAAQ,CAAA;gDAC3B,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAA;gDAC9C,MAAK;4CACP,KAAK,CAAC;gDACJ,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;gDAClD,MAAK;4CACP,KAAK,CAAC;gDACJ,MAAM,GAAG,MAAM,IAAI,QAAQ,CAAA;gDAC3B,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAA;gDAC9C,MAAK;yCACR;wCACD,QAAQ,GAAG,IAAI,CAAA;wCACf,QAAQ,EAAE,CAAA;qCACX;;oCAED,MAAM;wCACJ,MAAM;6CACL,QAAQ;gDACP,QAAQ,GAAG,CAAC,IAAI,CAAC;gDACjB,EAAE,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC,CAAA;oCACpC,WAAW,GAAG,QAAQ,CAAA;oCACtB,WAAW,GAAG,QAAQ,CAAA;iCACvB,QAAQ,WAAW,IAAI,SAAS,EAAC;;gCAElC,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;;oCAEvB,SAAS,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,CAAA;iCAC3B;qCAAM;oCACL,MAAM,aAAa,GAAG,mBAAmB,CACvC,EAAE,CAAC,CAAC,EACJ,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,EACjC,EAAE,CACH,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;oCACxB,SAAS,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAA;iCACjC;;6BAEF;yBACF;qBACF;iBACF;aACF;;;;YAID,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CACxB,IAAI,CAAC,SAAS,EACd,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,GAAG,IAAI,CAAC,QAAS,CAAC,MAAM,CAAC,CACxD,CAAA;YACD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;YACnD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;;YAEjD,aAAa,EAAE,CAAA;SAChB;QAED,UAAU,CAER,IAA2B;YAG3B,MAAM,MAAM,GAAG,CAAC,CAAA;YAChB,MAAM,IAAI,GAAyD,EAAE,CAAA;YACrE,IAAI,IAAI,GAAG,QAAQ,EACjB,IAAI,GAAG,CAAC,QAAQ,CAAA;;YAElB,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAA;YAChC,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAA;YAC3C,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK;iBAC3B,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACtB,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAA;YACvC,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU;gBAC7B,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;oBAChC,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBACrE,IAAI,MAAM,GAAG,CAAC,EAAE;wBACd,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAAA;qBAC/D;oBACD,IAAI,GAAGA,KAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;oBACnB,IAAI,GAAGC,KAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;iBACpB,CAAC,CAAA;aACH,CAAC,CAAA;YACF,OAAO,CAAC,GAAG,CACT,MAAM,EACN,IAAI,EACJ,IAAI,EACJ,WAAW,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAClD,CAAA;YACD,MAAM,UAAU,GAAG,CAAC,CAAA;YACpB,WAAW,CAAC,OAAO,CAAC,CAAC,UAAU;gBAC7B,UAAU,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;oBAC3B,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,EAC9B,KAAK,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;;oBAErB,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE;wBACd,OAAM;qBACP;oBACD,IAAI,KAAK,GAAG,CAAC,EAAE;wBACZ,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAA;wBACpB,KAAK,GAAG,CAAC,KAAK,CAAA;qBACf;oBACD,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBACxE,MAAM,MAAM,GAAG,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;oBACxE,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;oBACtC,KACE,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,UAAU,IAAI,IAAI,CAAC,MAAM,EAC3C,CAAC,IAAI,MAAM,EACX,CAAC,GAAG,CAAC,CAAC,GAAG,UAAU,IAAI,IAAI,CAAC,MAAM,EAClC;wBACA,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAA;wBACvB,MAAM,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,KAAK,CAAA;wBAC/B,MAAM,YAAY,GAAG,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAA;wBACpD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,YAAY,CAAC,CAAA;wBACxC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,YAAY,CAAC,CAAA;qBAC1C;oBACD,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;;iBAEtC,CAAC,CAAA;aACH,CAAC,CAAA;YACF,MAAM,QAAQ,GAAG,EAAE,EACjB,UAAU,GAAU,EAAE,EACtB,OAAO,GAAG,EAAE,CAAA;YACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,EACrB,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAA;gBACxC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;gBACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC7C,QAAQ,CAAC,IAAI,CACX,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAClC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CACpC,CAAA;oBACD,OAAO,CAAC,IAAI,CACV,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EACxC,OAAO,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAC1C,CAAA;iBACF;aACF;;YAED,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,EACzB,mBAAmB,GAAG,GAAG,CAAA;YAC3B,MAAM,SAAS,GAAG,IAAI,GAAG,IAAI,EAC3B,KAAK,GAAG,SAAS,GAAG,MAAM,CAAA;YAC5B,MAAM,QAAQ,GAAG,iBAAiB,CAChC,MAAM,GAAG,CAAC,EACV,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAC9B,CAAA;YACD,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAA;YAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAA;gBACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACxC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;oBAChC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;iBACtC;aACF;;;YAGD,IAAI,OAAO,GAAG,CAAC,CAAA;YACf,MAAM,QAAQ,GAAG,IAAI,CAAA;;YAErB,MAAM,GAAG,GAAyB,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;YAClD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;gBAC5B,MAAM,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAA;gBACjC,IAAI,MAAM,GAAG,KAAK,EAChB,MAAM,GAAG,CAAC,CAAA;gBACZ,MAAM,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,EACrB,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAA;gBACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;oBAC5C,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,MAAM,CAAA;oBACrC,IAAI,CAAC,MAAM,EAAE;wBACX,IACE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,OAAO;4BAC/B,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,EAC/B;4BACA,IACE,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,OAAO;gCACnC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,OAAO,EACnC;gCACA,QAAQ,CACN,UAAU,EACV,QAAQ,EACR,OAAO,GAAG,MAAM,GAAG,CAAC,EACpB,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAC1B,OAAO,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,EACxB,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAC/B,CAAA;gCACD,MAAM,IAAI,CAAC,CAAA;gCACX,IACE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,OAAO;oCAC/B,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,EAC/B;oCACA,CAAC,EAAE,CAAA;iCACJ;6BACF;iCAAM;gCACL,QAAQ,CACN,UAAU,EACV,QAAQ,EACR,OAAO,GAAG,MAAM,GAAG,CAAC,EACpB,OAAO,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,EACxB,mBAAmB,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAC7C,mBAAmB,GAAG,GAAG,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,CAChD,CAAA;gCACD,MAAM,GAAG,IAAI,CAAA;gCACb,MAAM,EAAE,CAAA;6BACT;yBACF;qBACF;yBAAM;wBACL,IACE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,OAAO;4BAC/B,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,EAC/B;4BACA,QAAQ,CACN,UAAU,EACV,QAAQ,EACR,mBAAmB,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,EACjD,mBAAmB,GAAG,GAAG,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,EACnD,OAAO,GAAG,MAAM,GAAG,CAAC,EACpB,OAAO,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CACzB,CAAA;4BACD,MAAM,GAAG,KAAK,CAAA;4BACd,MAAM,EAAE,CAAA;4BACR,IACE,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,OAAO;gCAC/B,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,EAC/B;gCACA,CAAC,EAAE,CAAA;6BACJ;yBACF;6BAAM;4BACL,QAAQ,CACN,UAAU,EACV,QAAQ,EACR,mBAAmB,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAC7C,mBAAmB,GAAG,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,EACjD,mBAAmB,GAAG,GAAG,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAC/C,mBAAmB,GAAG,GAAG,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CACpD,CAAA;yBACF;qBACF;iBACF;gBACD,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAA;aACpC;;;YAGD,MAAM,SAAS,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,GAAG,IAAI,CAAC,QAAS,CAAC,MAAM,CAAC,CAAA;;;YAG1E,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAA;YACnD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAA;YACrD,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;;SAElD;;;IC33EH,YAAc,GAAG,MAAM,CAAC;IACxB,aAAsB,GAAG,MAAM,CAAC;AAChC;IACA,SAAS,MAAM,CAAC,IAAI,EAAE,WAAW,EAAE,GAAG,EAAE;AACxC;IACA,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;AACnB;IACA,IAAI,IAAI,QAAQ,GAAG,WAAW,IAAI,WAAW,CAAC,MAAM;IACpD,QAAQ,QAAQ,GAAG,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM;IAChE,QAAQ,SAAS,GAAG,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,IAAI,CAAC;IAC5D,QAAQ,SAAS,GAAG,EAAE,CAAC;AACvB;IACA,IAAI,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,EAAE,OAAO,SAAS,CAAC;AAC1E;IACA,IAAI,IAAI,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC;AAC9C;IACA,IAAI,IAAI,QAAQ,EAAE,SAAS,GAAG,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;AAChF;IACA;IACA,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,GAAG,EAAE;IAChC,QAAQ,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,QAAQ,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9B;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,IAAI,GAAG,EAAE;IAClD,YAAY,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACxB,YAAY,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5B,YAAY,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC;IACnC,YAAY,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC;IACnC,YAAY,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC;IACnC,YAAY,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC;IACnC,SAAS;AACT;IACA;IACA,QAAQ,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,IAAI,CAAC,CAAC;IACrD,QAAQ,OAAO,GAAG,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;IAClD,KAAK;AACL;IACA,IAAI,YAAY,CAAC,SAAS,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACjE;IACA,IAAI,OAAO,SAAS,CAAC;IACrB,CAAC;AACD;IACA;IACA,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,EAAE;IACtD,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC;AAChB;IACA,IAAI,IAAI,SAAS,MAAM,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IAC/D,QAAQ,KAAK,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE,IAAI,GAAG,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5F,KAAK,MAAM;IACX,QAAQ,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,GAAG,EAAE,IAAI,GAAG,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACnG,KAAK;AACL;IACA,IAAI,IAAI,IAAI,IAAIwB,QAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,QAAQ,UAAU,CAAC,IAAI,CAAC,CAAC;IACzB,QAAQ,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACzB,KAAK;AACL;IACA,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;AACD;IACA;IACA,SAAS,YAAY,CAAC,KAAK,EAAE,GAAG,EAAE;IAClC,IAAI,IAAI,CAAC,KAAK,EAAE,OAAO,KAAK,CAAC;IAC7B,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC;AAC1B;IACA,IAAI,IAAI,CAAC,GAAG,KAAK;IACjB,QAAQ,KAAK,CAAC;IACd,IAAI,GAAG;IACP,QAAQ,KAAK,GAAG,KAAK,CAAC;AACtB;IACA,QAAQ,IAAI,CAAC,CAAC,CAAC,OAAO,KAAKA,QAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IAChF,YAAY,UAAU,CAAC,CAAC,CAAC,CAAC;IAC1B,YAAY,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC;IAC7B,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,MAAM;IACpC,YAAY,KAAK,GAAG,IAAI,CAAC;AACzB;IACA,SAAS,MAAM;IACf,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACvB,SAAS;IACT,KAAK,QAAQ,KAAK,IAAI,CAAC,KAAK,GAAG,EAAE;AACjC;IACA,IAAI,OAAO,GAAG,CAAC;IACf,CAAC;AACD;IACA;IACA,SAAS,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE;IACtE,IAAI,IAAI,CAAC,GAAG,EAAE,OAAO;AACrB;IACA;IACA,IAAI,IAAI,CAAC,IAAI,IAAI,OAAO,EAAE,UAAU,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AAC/D;IACA,IAAI,IAAI,IAAI,GAAG,GAAG;IAClB,QAAQ,IAAI,EAAE,IAAI,CAAC;AACnB;IACA;IACA,IAAI,OAAO,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,EAAE;IAClC,QAAQ,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;IACxB,QAAQ,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;AACxB;IACA,QAAQ,IAAI,OAAO,GAAG,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE;IAC1E;IACA,YAAY,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACzC,YAAY,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACxC,YAAY,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;AACzC;IACA,YAAY,UAAU,CAAC,GAAG,CAAC,CAAC;AAC5B;IACA;IACA,YAAY,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;IAC5B,YAAY,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AAC7B;IACA,YAAY,SAAS;IACrB,SAAS;AACT;IACA,QAAQ,GAAG,GAAG,IAAI,CAAC;AACnB;IACA;IACA,QAAQ,IAAI,GAAG,KAAK,IAAI,EAAE;IAC1B;IACA,YAAY,IAAI,CAAC,IAAI,EAAE;IACvB,gBAAgB,YAAY,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AACxF;IACA;IACA,aAAa,MAAM,IAAI,IAAI,KAAK,CAAC,EAAE;IACnC,gBAAgB,GAAG,GAAG,sBAAsB,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IAChF,gBAAgB,YAAY,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC;AAC1E;IACA;IACA,aAAa,MAAM,IAAI,IAAI,KAAK,CAAC,EAAE;IACnC,gBAAgB,WAAW,CAAC,GAAG,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACtE,aAAa;AACb;IACA,YAAY,MAAM;IAClB,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA;IACA,SAAS,KAAK,CAAC,GAAG,EAAE;IACpB,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI;IACpB,QAAQ,CAAC,GAAG,GAAG;IACf,QAAQ,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;AACrB;IACA,IAAI,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;AACzC;IACA;IACA,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1B;IACA,IAAI,OAAO,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE;IAC3B,QAAQ,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnE,YAAY,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;IACvD,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACnB,KAAK;AACL;IACA,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;AACD;IACA,SAAS,WAAW,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;IAC/C,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI;IACpB,QAAQ,CAAC,GAAG,GAAG;IACf,QAAQ,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC;AACrB;IACA,IAAI,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;AACzC;IACA;IACA,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7E,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7E,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7E,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9E;IACA;IACA,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC;IACxD,QAAQ,IAAI,GAAG,MAAM,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACzD;IACA,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK;IACrB,QAAQ,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC;AACtB;IACA;IACA,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IACjD,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI;IAC5C,YAAY,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnE,YAAY,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;IACvD,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AACpB;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI;IAC5C,YAAY,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnE,YAAY,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;IACvD,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;IACpB,KAAK;AACL;IACA;IACA,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IAC7B,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI;IAC5C,YAAY,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnE,YAAY,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;IACvD,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;IACpB,KAAK;AACL;IACA;IACA,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IAC7B,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI;IAC5C,YAAY,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnE,YAAY,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;IACvD,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;IACpB,KAAK;AACL;IACA,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;AACD;IACA;IACA,SAAS,sBAAsB,CAAC,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE;IACvD,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC;IAClB,IAAI,GAAG;IACP,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI;IACtB,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AAC5B;IACA,QAAQ,IAAI,CAACA,QAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;AACxG;IACA,YAAY,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACtC,YAAY,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACtC,YAAY,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;AACtC;IACA;IACA,YAAY,UAAU,CAAC,CAAC,CAAC,CAAC;IAC1B,YAAY,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC/B;IACA,YAAY,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IAC1B,SAAS;IACT,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACnB,KAAK,QAAQ,CAAC,KAAK,KAAK,EAAE;AAC1B;IACA,IAAI,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC;AACD;IACA;IACA,SAAS,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;IACjE;IACA,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC;IAClB,IAAI,GAAG;IACP,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;IAC5B,QAAQ,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE;IAC7B,YAAY,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;IACtD;IACA,gBAAgB,IAAI,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAC3C;IACA;IACA,gBAAgB,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;IAC5C,gBAAgB,CAAC,GAAG,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;AAC5C;IACA;IACA,gBAAgB,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACrE,gBAAgB,YAAY,CAAC,CAAC,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACrE,gBAAgB,OAAO;IACvB,aAAa;IACb,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACvB,SAAS;IACT,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACnB,KAAK,QAAQ,CAAC,KAAK,KAAK,EAAE;IAC1B,CAAC;AACD;IACA;IACA,SAAS,cAAc,CAAC,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,EAAE;IAC3D,IAAI,IAAI,KAAK,GAAG,EAAE;IAClB,QAAQ,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC;AACjC;IACA,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IACxD,QAAQ,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACrC,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;IACnE,QAAQ,IAAI,GAAG,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IACxD,QAAQ,IAAI,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACpD,QAAQ,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACtC,KAAK;AACL;IACA,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzB;IACA;IACA,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACvC,QAAQ,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;IAC3C,QAAQ,SAAS,GAAG,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;IAC5D,KAAK;AACL;IACA,IAAI,OAAO,SAAS,CAAC;IACrB,CAAC;AACD;IACA,SAAS,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE;IACxB,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;AACD;IACA;IACA,SAAS,aAAa,CAAC,IAAI,EAAE,SAAS,EAAE;IACxC,IAAI,SAAS,GAAG,cAAc,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAChD,IAAI,IAAI,SAAS,EAAE;IACnB,QAAQ,IAAI,CAAC,GAAG,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC9C;IACA;IACA,QAAQ,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;IAChD,QAAQ,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC;IAChC,KAAK;IACL,CAAC;AACD;IACA;IACA,SAAS,cAAc,CAAC,IAAI,EAAE,SAAS,EAAE;IACzC,IAAI,IAAI,CAAC,GAAG,SAAS;IACrB,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;IACnB,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;IACnB,QAAQ,EAAE,GAAG,CAAC,QAAQ;IACtB,QAAQ,CAAC,CAAC;AACV;IACA;IACA;IACA,IAAI,GAAG;IACP,QAAQ,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;IAC7D,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,YAAY,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,EAAE;IACnC,gBAAgB,EAAE,GAAG,CAAC,CAAC;IACvB,gBAAgB,IAAI,CAAC,KAAK,EAAE,EAAE;IAC9B,oBAAoB,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IAC7C,oBAAoB,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC;IACvD,iBAAiB;IACjB,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IAChD,aAAa;IACb,SAAS;IACT,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACnB,KAAK,QAAQ,CAAC,KAAK,SAAS,EAAE;AAC9B;IACA,IAAI,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;AACxB;IACA,IAAI,IAAI,EAAE,KAAK,EAAE,EAAE,OAAO,CAAC,CAAC;AAC5B;IACA;IACA;IACA;AACA;IACA,IAAI,IAAI,IAAI,GAAG,CAAC;IAChB,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAChB,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAChB,QAAQ,MAAM,GAAG,QAAQ;IACzB,QAAQ,GAAG,CAAC;AACZ;IACA,IAAI,CAAC,GAAG,CAAC,CAAC;AACV;IACA,IAAI,GAAG;IACP,QAAQ,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAChD,gBAAgB,eAAe,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;AACjG;IACA,YAAY,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD;IACA,YAAY,IAAI,aAAa,CAAC,CAAC,EAAE,IAAI,CAAC;IACtC,iBAAiB,GAAG,GAAG,MAAM,KAAK,GAAG,KAAK,MAAM,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,oBAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAClH,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,gBAAgB,MAAM,GAAG,GAAG,CAAC;IAC7B,aAAa;IACb,SAAS;AACT;IACA,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACnB,KAAK,QAAQ,CAAC,KAAK,IAAI,EAAE;AACzB;IACA,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;AACD;IACA;IACA,SAAS,oBAAoB,CAAC,CAAC,EAAE,CAAC,EAAE;IACpC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACtE,CAAC;AACD;IACA;IACA,SAAS,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;IAChD,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC;IAClB,IAAI,GAAG;IACP,QAAQ,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;IACtE,QAAQ,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;IACzB,QAAQ,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,CAAC;IACzB,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACnB,KAAK,QAAQ,CAAC,KAAK,KAAK,EAAE;AAC1B;IACA,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;IACzB,IAAI,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;AACnB;IACA,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC;AACD;IACA;IACA;IACA,SAAS,UAAU,CAAC,IAAI,EAAE;IAC1B,IAAI,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK;IACjD,QAAQ,MAAM,GAAG,CAAC,CAAC;AACnB;IACA,IAAI,GAAG;IACP,QAAQ,CAAC,GAAG,IAAI,CAAC;IACjB,QAAQ,IAAI,GAAG,IAAI,CAAC;IACpB,QAAQ,IAAI,GAAG,IAAI,CAAC;IACpB,QAAQ,SAAS,GAAG,CAAC,CAAC;AACtB;IACA,QAAQ,OAAO,CAAC,EAAE;IAClB,YAAY,SAAS,EAAE,CAAC;IACxB,YAAY,CAAC,GAAG,CAAC,CAAC;IAClB,YAAY,KAAK,GAAG,CAAC,CAAC;IACtB,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IACzC,gBAAgB,KAAK,EAAE,CAAC;IACxB,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;IAC5B,gBAAgB,IAAI,CAAC,CAAC,EAAE,MAAM;IAC9B,aAAa;IACb,YAAY,KAAK,GAAG,MAAM,CAAC;AAC3B;IACA,YAAY,OAAO,KAAK,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,EAAE;AAClD;IACA,gBAAgB,IAAI,KAAK,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACtE,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;IAChC,oBAAoB,KAAK,EAAE,CAAC;IAC5B,iBAAiB,MAAM;IACvB,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;IAChC,oBAAoB,KAAK,EAAE,CAAC;IAC5B,iBAAiB;AACjB;IACA,gBAAgB,IAAI,IAAI,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACzC,qBAAqB,IAAI,GAAG,CAAC,CAAC;AAC9B;IACA,gBAAgB,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;IAC/B,gBAAgB,IAAI,GAAG,CAAC,CAAC;IACzB,aAAa;AACb;IACA,YAAY,CAAC,GAAG,CAAC,CAAC;IAClB,SAAS;AACT;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAC1B,QAAQ,MAAM,IAAI,CAAC,CAAC;AACpB;IACA,KAAK,QAAQ,SAAS,GAAG,CAAC,EAAE;AAC5B;IACA,IAAI,OAAO,IAAI,CAAC;IAChB,CAAC;AACD;IACA;IACA,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE;IAC3C;IACA,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC;IACrC,IAAI,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,OAAO,CAAC;AACrC;IACA,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;IACpC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;IACpC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;IACpC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;AACpC;IACA,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;IACpC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;IACpC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;IACpC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,UAAU,CAAC;AACpC;IACA,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACxB,CAAC;AACD;IACA;IACA,SAAS,WAAW,CAAC,KAAK,EAAE;IAC5B,IAAI,IAAI,CAAC,GAAG,KAAK;IACjB,QAAQ,QAAQ,GAAG,KAAK,CAAC;IACzB,IAAI,GAAG;IACP,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;IACvF,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACnB,KAAK,QAAQ,CAAC,KAAK,KAAK,EAAE;AAC1B;IACA,IAAI,OAAO,QAAQ,CAAC;IACpB,CAAC;AACD;IACA;IACA,SAAS,eAAe,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACzD,IAAI,OAAO,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;IAC7D,WAAW,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;IAC7D,WAAW,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC;IAC9D,CAAC;AACD;IACA;IACA,SAAS,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE;IAC/B,IAAI,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3E,YAAY,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;IAC5E,aAAa,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC3D,YAAYA,QAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACxF,CAAC;AACD;IACA;IACA,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACvB,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,CAAC;AACD;IACA;IACA,SAASA,QAAM,CAAC,EAAE,EAAE,EAAE,EAAE;IACxB,IAAI,OAAO,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC1C,CAAC;AACD;IACA;IACA,SAAS,UAAU,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACpC,IAAI,IAAI,EAAE,GAAGP,MAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACpC,IAAI,IAAI,EAAE,GAAGA,MAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACpC,IAAI,IAAI,EAAE,GAAGA,MAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACpC,IAAI,IAAI,EAAE,GAAGA,MAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;AACpC;IACA,IAAI,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC;AAC5C;IACA,IAAI,IAAI,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC;IACvD,IAAI,IAAI,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC;IACvD,IAAI,IAAI,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC;IACvD,IAAI,IAAI,EAAE,KAAK,CAAC,IAAI,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,OAAO,IAAI,CAAC;AACvD;IACA,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC;AACD;IACA;IACA,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAC5B,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5H,CAAC;AACD;IACA,SAASA,MAAI,CAAC,GAAG,EAAE;IACnB,IAAI,OAAO,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1C,CAAC;AACD;IACA;IACA,SAAS,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAE;IACjC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IACd,IAAI,GAAG;IACP,QAAQ,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9E,gBAAgB,UAAU,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC;IACzD,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACnB,KAAK,QAAQ,CAAC,KAAK,CAAC,EAAE;AACtB;IACA,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC;AACD;IACA;IACA,SAAS,aAAa,CAAC,CAAC,EAAE,CAAC,EAAE;IAC7B,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;IACtC,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC;IAC1D,QAAQ,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IACzD,CAAC;AACD;IACA;IACA,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;IAC5B,IAAI,IAAI,CAAC,GAAG,CAAC;IACb,QAAQ,MAAM,GAAG,KAAK;IACtB,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;IAC5B,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC7B,IAAI,GAAG;IACP,QAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;IAChE,iBAAiB,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7E,YAAY,MAAM,GAAG,CAAC,MAAM,CAAC;IAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;IACnB,KAAK,QAAQ,CAAC,KAAK,CAAC,EAAE;AACtB;IACA,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;AACD;IACA;IACA;IACA,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;IAC5B,IAAI,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpC,QAAQ,EAAE,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpC,QAAQ,EAAE,GAAG,CAAC,CAAC,IAAI;IACnB,QAAQ,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;AACpB;IACA,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IACf,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;AACf;IACA,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;AACjB;IACA,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;AACjB;IACA,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IACjB,IAAI,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;AACjB;IACA,IAAI,OAAO,EAAE,CAAC;IACd,CAAC;AACD;IACA;IACA,SAAS,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;IACnC,IAAI,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC9B;IACA,IAAI,IAAI,CAAC,IAAI,EAAE;IACf,QAAQ,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IACnB,QAAQ,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;AACnB;IACA,KAAK,MAAM;IACX,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC3B,QAAQ,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;IACtB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IACtB,KAAK;IACL,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;AACD;IACA,SAAS,UAAU,CAAC,CAAC,EAAE;IACvB,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;IACzB,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;AACzB;IACA,IAAI,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACzC,IAAI,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACzC,CAAC;AACD;IACA,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACvB;IACA,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACf;IACA;IACA,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACf,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACf;IACA;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrB;IACA;IACA,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC;AAClB;IACA;IACA,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACtB,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB;IACA;IACA,IAAI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACzB,CAAC;AACD;IACA;IACA;IACA,MAAM,CAAC,SAAS,GAAG,UAAU,IAAI,EAAE,WAAW,EAAE,GAAG,EAAE,SAAS,EAAE;IAChE,IAAI,IAAI,QAAQ,GAAG,WAAW,IAAI,WAAW,CAAC,MAAM,CAAC;IACrD,IAAI,IAAI,QAAQ,GAAG,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;AACjE;IACA,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IACnE,IAAI,IAAI,QAAQ,EAAE;IAClB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IAChE,YAAY,IAAI,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC7C,YAAY,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;IAC3E,YAAY,WAAW,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACvE,SAAS;IACT,KAAK;AACL;IACA,IAAI,IAAI,aAAa,GAAG,CAAC,CAAC;IAC1B,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC9C,QAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACnC,QAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IACvC,QAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;IACvC,QAAQ,aAAa,IAAI,IAAI,CAAC,GAAG;IACjC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7D,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,KAAK;AACL;IACA,IAAI,OAAO,WAAW,KAAK,CAAC,IAAI,aAAa,KAAK,CAAC,GAAG,CAAC;IACvD,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,aAAa,GAAG,WAAW,IAAI,WAAW,CAAC,CAAC;IAC9D,CAAC,CAAC;AACF;IACA,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;IAC3C,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC;IAChB,IAAI,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,GAAG,EAAE;IAC1D,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjE,QAAQ,CAAC,GAAG,CAAC,CAAC;IACd,KAAK;IACL,IAAI,OAAO,GAAG,CAAC;IACf,CAAC;AACD;IACA;IACA,MAAM,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE;IACjC,IAAI,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;IAC/B,QAAQ,MAAM,GAAG,CAAC,QAAQ,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,EAAE,UAAU,EAAE,GAAG,CAAC;IAC3D,QAAQ,SAAS,GAAG,CAAC,CAAC;AACtB;IACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC1C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,SAAS;IACT,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;IACnB,YAAY,SAAS,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;IAC5C,YAAY,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,SAAS;IACT,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;;;;;;;;ICtqBD;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,QAAQ,GAAG,CAAC,UAAU,OAAO,EAAE;AAEnC;IACA;IACA,IAAI,IAAI,OAAO,GAAG,OAAO,CAAC;AAC1B;IACA;IACA,IAAI,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;AACzB;IACA;IACA,IAAI,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IAChC,IAAI,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;IAChC;IACA,IAAI,MAAM,CAAC,GAAG,CAAC;IACf,QAAQ,SAAS,EAAE,GAAG;IACtB,KAAK,CAAC,CAAC;AACP;IACA,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;AACpB;IACA;IACA,IAAI,IAAI,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACzI,kBAAkB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACxpI,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AAChI;IACA;IACA,IAAI,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC9B;IACA,IAAI,IAAI,QAAQ,GAAG;IACnB;IACA,EAAE,WAAW,EAAE,KAAK;IACpB;IACA;IACA;IACA,QAAQ,WAAW,EAAE,IAAI;AACzB;IACA,QAAQ,OAAO,EAAE,EAAE;IACnB;IACA;IACA,QAAQ,eAAe,EAAE,KAAK;IAC9B;IACA;IACA,QAAQ,YAAY,EAAE,KAAK;IAC3B;IACA,QAAQ,IAAI,EAAE,KAAK;IACnB;IACA,QAAQ,SAAS,EAAE,GAAG;IACtB;IACA,QAAQ,gBAAgB,EAAE,CAAC,IAAI,CAAC;IAChC;IACA,QAAQ,WAAW,EAAE,CAAC,GAAG,CAAC;IAC1B;IACA,QAAQ,uBAAuB,EAAE,IAAI;IACrC;IACA,QAAQ,cAAc,EAAE,GAAG;IAC3B;IACA;IACA,QAAQ,gBAAgB,EAAE,sHAAsH;IAChJ;IACA,QAAQ,OAAO,EAAE;IACjB,YAAY,GAAG,EAAE,IAAI;IACrB,YAAY,GAAG,EAAE,UAAU;IAC3B,SAAS;IACT,QAAQ,oBAAoB,EAAE,KAAK;IACnC;IACA,QAAQ,KAAK,EAAE,EAAE;IACjB;IACA,QAAQ,gBAAgB,EAAE,KAAK;IAC/B;IACA,QAAQ,SAAS,EAAE,EAAE;IACrB;IACA,QAAQ,MAAM,EAAE,QAAQ;IACxB,QAAQ,WAAW,EAAE,QAAQ;IAC7B,QAAQ,IAAI,EAAE,MAAM;IACpB,QAAQ,GAAG,EAAE,KAAK;IAClB,QAAQ,SAAS,EAAE,WAAW;IAC9B,QAAQ,eAAe,EAAE,YAAY;IACrC;IACA,QAAQ,OAAO,EAAE,4GAA4G;IAC7H,gBAAgB,kGAAkG;IAClH,QAAQ,MAAM,EAAE,6GAA6G;IAC7H,gBAAgB,iGAAiG;IACjH,QAAQ,EAAE,EAAE,IAAI,CAAC,EAAE;IACnB,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;IACjB,QAAQ,GAAG,EAAE,KAAK;IAClB,QAAQ,KAAK,EAAE,OAAO;IACtB,QAAQ,WAAW,EAAE,UAAU;IAC/B,QAAQ,OAAO,EAAE,MAAM;IACvB;IACA,QAAQ,6BAA6B,EAAE,EAAE;IACzC;IACA,QAAQ,gCAAgC,EAAE,IAAI;IAC9C,KAAK,CAAC;AACN;IACA,IAAI,CAAC,YAAY;IACjB,QAAQ,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;IAClC,QAAQ,IAAI,CAAC,GAAG,EAAE;IAClB,gBAAgB,CAAC,GAAG,EAAE,CAAC;IACvB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACrC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACzC,gBAAgB,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9C,gBAAgB,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3D,aAAa;IACb,SAAS;IACT,KAAK,GAAG,CAAC;IACT;IACA;IACA;IACA;IACA,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC;IACxB,YAAY,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC;IAC5B,YAAY,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC;IAC5B,YAAY,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,CAAC;IAC9B,YAAY,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,CAAC;IAC9B,YAAY,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,CAAC;IAC9B,YAAY,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,CAAC;IAC9B,YAAY,EAAE,GAAG,MAAM,CAAC,EAAE,GAAG,CAAC,CAAC;AAC/B;IACA,IAAI,IAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,GAAG,GAAG,CAAC;AAC/C;IACA,IAAI,IAAI,WAAW,GAAG,QAAQ,CAAC,WAAW,CAAC;AAC3C;IACA,IAAI,IAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC7B;IACA,IAAI,IAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;AAC3B;IACA,IAAI,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;AACvC;IACA,IAAI,IAAI,eAAe,GAAG,QAAQ,CAAC,eAAe,CAAC;AACnD;IACA;IACA,IAAI,IAAI,WAAW,GAAG,EAAE,CAAC;AACzB;IACA;IACA,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB;IACA;IACA,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC;AACtB;IACA,IAAI,IAAI,QAAQ,GAAG,EAAE,CAAC;AACtB;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,GAAG,GAAG,UAAU,GAAG,EAAE,QAAQ,EAAE;IACvC,QAAQ,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;IACvC,YAAY,IAAI,QAAQ;IACxB,gBAAgB,MAAM,IAAI,QAAQ,CAAC,GAAG,CAAC,CAAC;IACxC;IACA,gBAAgB,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IACrC,SAAS;IACT,KAAK,CAAC;AACN;IACA;IACA,IAAI,IAAI,WAAW,GAAG,UAAU,IAAI,EAAE;IACtC,QAAQ,IAAI,CAAC,GAAG,UAAU,OAAO,EAAE;IACnC,YAAY,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IAC7B,YAAY,IAAI,CAAC,OAAO,GAAG,OAAO,KAAK,SAAS,GAAG,OAAO,GAAG,EAAE,CAAC;IAChE,YAAY,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAChD,YAAY,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACrC,SAAS,CAAC;IACV,QAAQ,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACrD,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG,UAAU,KAAK,EAAE;IACtC,QAAQ,OAAO,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9C,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,OAAO,GAAG,UAAU,GAAG,EAAE;IACjC,QAAQ,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAClD,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;IACpC,gBAAgB,OAAO,KAAK,CAAC;IAC7B,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,IAAI,GAAG,UAAU,GAAG,EAAE;IAC9B,QAAQ,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3B,QAAQ,IAAI,QAAQ,CAAC,aAAa,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE;IAC/D,YAAY,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,SAAS;IACT,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,YAAY,GAAG,UAAU,IAAI,EAAE,GAAG,EAAE;IAC5C,QAAQ,GAAG,GAAG,GAAG,IAAI,UAAU,CAAC;IAChC,QAAQ,IAAI,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrD,YAAY,OAAO;IACnB,QAAQ,IAAI,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC;IAC9C,QAAQ,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;IACjC,YAAY,MAAM,IAAI,wBAAwB,CAAC,IAAI,GAAG,kBAAkB,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;IAC1F,SAAS;IACT,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,mBAAmB,GAAG,UAAU,GAAG,EAAE;IAC7C,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACnC;IACA,QAAQ,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5B;IACA,QAAQ,IAAI,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IAC/C,YAAY,IAAI,IAAI,GAAG,GAAG;IAC1B,oBAAoB,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;IAChE,oBAAoB,CAAC,GAAG,KAAK,CAAC,GAAG,EAAE;IACnC,oBAAoB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACnC,oBAAoB,IAAI,GAAG,CAAC,GAAG,CAAC;IAChC,oBAAoB,WAAW,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACtD,YAAY,IAAI,IAAI,KAAK,CAAC,CAAC,EAAE;IAC7B,gBAAgB,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC9C,gBAAgB,IAAI,CAAC,GAAG,CAAC,EAAE;IAC3B,kBAAkB,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,MAAM,KAAK,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IACtI,iBAAiB;IACjB,qBAAqB;IACrB,kBAAkB,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxF,iBAAiB;IACjB,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;IACzC,gBAAgB,IAAI,GAAG;IACvB,oBAAoB,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;IACvC,gBAAgB,IAAI,CAAC,GAAG,CAAC,EAAE;IAC3B,kBAAkB,GAAG,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9E,iBAAiB,MAAM;IACvB,kBAAkB,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3E,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;IACzC,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA,IAAI,IAAI,OAAO,GAAG,UAAU,CAAC,EAAE;IAC/B,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACrC,YAAY,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3B,gBAAgB,OAAO,KAAK,CAAC;IAC7B,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,EAAE;IAC/B,QAAQ,OAAO,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG,SAAS,GAAG,EAAE;IACnC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;IACtC,YAAY,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,OAAO,KAAK,CAAC;IAC7B,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG,UAAU,GAAG,EAAE;IACpC,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC;IACzB,YAAY,OAAO,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC;IAC1D,QAAQ,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;IAC/B,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,QAAQ,GAAG,UAAU,GAAG,EAAE;IAClC,QAAQ,QAAQ,GAAG,YAAY,MAAM,EAAE;IACvC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,YAAY,GAAG,UAAU,GAAG,EAAE;IACtC,QAAQ,QAAQ,GAAG,YAAY,UAAU,EAAE;IAC3C,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,SAAS,GAAG,UAAU,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;IAC/C,QAAQ,IAAI,GAAG,IAAI,IAAI;IACvB,YAAY,CAAC,EAAE,EAAE;IACjB,YAAY,GAAG,EAAE,UAAU,KAAK,EAAE;IAClC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC;IAChE,oBAAoB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvC,aAAa;IACb,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC3B,YAAY,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK;IACjC,oBAAoB,SAAS,GAAG,GAAG,CAAC,aAAa,CAAC;IAClD,YAAY,IAAI,KAAK,KAAK,EAAE;IAC5B,gBAAgB,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACjD;IACA,YAAY,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,EAAE,IAAI,SAAS,KAAK,EAAE,IAAI,SAAS,KAAK,EAAE,EAAE;IACtF,gBAAgB,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE;IAC3C,oBAAoB,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1D,iBAAiB;IACjB,aAAa;IACb,iBAAiB,IAAI,KAAK,KAAK,CAAC,IAAI,SAAS,KAAK,CAAC,EAAE;IACrD;IACA,gBAAgB,IAAI,EAAE,GAAG,CAAC,KAAK,KAAK,GAAG,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,IAAI,GAAG,CAAC,KAAK,KAAK,QAAQ,CAAC,SAAS,CAAC;IAClG,oBAAoB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACxC,aAAa;IACb,iBAAiB,IAAI,KAAK,KAAK,EAAE,IAAI,SAAS,KAAK,EAAE,EAAE;IACvD,gBAAgB,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAChE,aAAa;IACb,iBAAiB,IAAI,KAAK,KAAK,EAAE,EAAE;IACnC,gBAAgB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC;IACrC,oBAAoB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACxC,gBAAgB,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACjD,aAAa;IACb,iBAAiB,IAAI,KAAK,KAAK,EAAE,IAAI,CAAC,IAAI,EAAE;IAC5C,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC1D,oBAAoB,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACvD,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7B,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,QAAQ,GAAG,SAAS,GAAG,EAAE;IACjC,QAAQ,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAChC,QAAQ,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IAC5B,YAAY,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAChC,SAAS,CAAC,CAAC;IACX,QAAQ,OAAO,GAAG,CAAC;IACnB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,QAAQ,GAAG,UAAU,MAAM,EAAE,CAAC,EAAE;IACxC,QAAQ,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAClC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IACpB,QAAQ,IAAI,MAAM,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE;IACzC,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;IACvB,gBAAgB,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC;IAChD,SAAS,CAAC;IACV,QAAQ,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACjC,YAAY,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC;IACnC,gBAAgB,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;IACvC,iBAAiB,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;IACpC,gBAAgB,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACnC,aAAa;IACb,iBAAiB,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,KAAK,CAAC,CAAC,KAAK,KAAK,GAAG,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,EAAE;IAC5E,gBAAgB,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,aAAa;IACb,iBAAiB,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,EAAE;IACvD,gBAAgB,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;IAClF,aAAa;IACb,iBAAiB;IACjB,gBAAgB,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,aAAa;IACb,SAAS,CAAC,CAAC;AACX;IACA,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,SAAS,GAAG,UAAU,GAAG,EAAE,CAAC,EAAE;IACtC,QAAQ,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC;IAC5B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,YAAY,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7B,YAAY,IAAI,CAAC,GAAG;IACpB,gBAAgB,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,SAAS;IACT,QAAQ,OAAO,GAAG,CAAC;IACnB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,QAAQ,GAAG,UAAU,GAAG,EAAE;IAClC,QAAQ,QAAQ,GAAG,YAAY,MAAM,EAAE;IACvC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,QAAQ,GAAG,UAAU,GAAG,EAAE;IAClC,QAAQ,QAAQ,GAAG,YAAY,MAAM,EAAE;IACvC,KAAK,CAAC;IACN;IACA,IAAI,IAAI,KAAK,GAAG,SAAS,GAAG,EAAE;IAC9B,QAAQ,QAAQ,GAAG,YAAY,GAAG,EAAE;IACpC,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,eAAe,GAAG,UAAU,MAAM,EAAE;IAC5C,QAAQ,OAAO,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,CAAC;IACxD,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,gBAAgB,GAAG,UAAU,MAAM,EAAE;IAC7C,QAAQ,OAAO,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3F,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,OAAO,GAAG,UAAU,GAAG,EAAE;IACjC,QAAQ,OAAO,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAClC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,KAAK,GAAG,UAAU,GAAG,EAAE;IAC/B,QAAQ,OAAO,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC5D,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG,UAAU,GAAG,EAAE;IACpC,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC3B,YAAY,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC;IACjC,SAAS;IACT,QAAQ,OAAO,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC/B,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA,IAAI,IAAI,SAAS,GAAG,SAAS,CAAC,EAAE;IAChC,QAAQ,GAAG,CAAC,CAAC;IACb,YAAY,OAAO,CAAC,CAAC;IACrB,QAAQ,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;IACzB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG,UAAU,GAAG,EAAE;IACpC,QAAQ,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC/B,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,aAAa,GAAG,UAAU,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE;IAC3D,QAAQ,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;IAC3E,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG,UAAU,GAAG,EAAE;IACpC,QAAQ,OAAO,GAAG,KAAK,SAAS,IAAI,GAAG,CAAC,MAAM,CAAC;IAC/C,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,QAAQ,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IACnC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,MAAM,GAAG,YAAY;IAC7B,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;IAC3C,gBAAgB,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IACnC,QAAQ,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,KAAK,EAAE,KAAK,EAAE;IACtE,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,YAAY,OAAO,OAAO,GAAG,KAAK,UAAU,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;IAC3D,SAAS,CAAC,CAAC;AACX;IACA,QAAQ,OAAO,OAAO,CAAC;IACvB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE;IAC3C,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC;IACrB,QAAQ,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC;IACzB,QAAQ,IAAI,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE;IACpC,YAAY,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC7B,QAAQ,OAAO,GAAG,CAAC;IACnB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAC3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,WAAW,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;IAChD,QAAQ,KAAK,IAAI,CAAC,IAAI,GAAG;IACzB,YAAY,MAAM;IAClB,QAAQ,IAAI,GAAG;IACf,YAAY,OAAO,CAAC,CAAC;IACrB,QAAQ,GAAG,IAAI;IACf,YAAY,OAAO;IACnB,gBAAgB,GAAG,EAAE,CAAC;IACtB,gBAAgB,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3B,aAAa,CAAC;IACd,QAAQ,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,OAAO,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC9C,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;IAClB,QAAQ,IAAI,KAAK,GAAG,EAAE,CAAC;IACvB,QAAQ,IAAI,UAAU,CAAC;IACvB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;IAC5C,YAAY,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3E,QAAQ,KAAK,CAAC,cAAc,EAAE,YAAY;IAC1C,YAAY,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;IAC3E,SAAS,CAAC,CAAC;IACX,QAAQ,OAAO,UAAU,CAAC;IAC1B,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,WAAW,GAAG,UAAU,IAAI,EAAE,YAAY,EAAE,IAAI,EAAE;IAC1D,QAAQ,YAAY,CAAC,IAAI,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;IAC/B,YAAY,YAAY,GAAG,YAAY,IAAI,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;IACpE,YAAY,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,EAAE,YAAY,CAAC,MAAM,EAAE;IACzE,oBAAoB,IAAI,EAAE,IAAI;IAC9B,oBAAoB,MAAM,EAAE,YAAY;IACxC,oBAAoB,IAAI,EAAE,IAAI;IAC9B,iBAAiB,CAAC,CAAC;IACnB,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,QAAQ,GAAG,UAAU,GAAG,EAAE;IAClC,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC9C,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,QAAQ,GAAG,UAAU,GAAG,EAAE;IAClC,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IAC9C,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG,UAAU,GAAG,EAAE;IACpC,QAAQ,IAAI,SAAS,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;IAC3C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAClC,YAAY,SAAS,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC1C,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,cAAc,GAAG,SAAS,GAAG,EAAE,MAAM,EAAE;IAC/C,QAAQ,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IAC9B,QAAQ,IAAI,MAAM,GAAG,EAAE,CAAC;IACxB,QAAQ,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IACxB,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1C,YAAY,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,YAAY,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,YAAY,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC;IAC7B,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACvB,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,MAAM,GAAG,SAAS,MAAM,EAAE;IAClC,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC;AACjB;IACA,QAAQ,GAAG,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;IACvD,YAAY,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAChE,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACtC,SAAS;IACT,aAAa,GAAG,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;IACpC,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACtC,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACtC,SAAS;AACT;IACA,QAAQ,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE;IACpF,YAAY,IAAI,MAAM,GAAG,EAAE,CAAC;IAC5B;IACA,YAAY,IAAI,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;IAClE,YAAY,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7B;IACA;AACA;IACA;IACA,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7B,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAChD,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;AAChD;IACA,YAAY,IAAI,OAAO,GAAG,+CAA+C,CAAC;AAC1E;IACA,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IACnC,gBAAgB,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,0BAA0B,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IAC9G,gBAAgB,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChG,aAAa;IACb,YAAY,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC5C,SAAS;IACT,aAAa,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;IAC/C,YAAY,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;IACrC,YAAY,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;IAC3C,YAAY,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjC;IACA,YAAY,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACvD;IACA,YAAY,GAAG,IAAI,GAAG,CAAC;IACvB,gBAAgB,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IAChD,oBAAoB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IAC7D,iBAAiB,CAAC,CAAC;IACnB;IACA,SAAS;IACT,aAAa;IACb,YAAY,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IACvC,SAAS;AACT;IACA,QAAQ,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACxC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,SAAS,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACpC,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM;IACxB,gBAAgB,QAAQ,GAAG,EAAE,CAAC;IAC9B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC3C,YAAY,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,SAAS;AACT;IACA,QAAQ,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IACtC,YAAY,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,SAAS,CAAC,CAAC;AACX;IACA,QAAQ,IAAI,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC;AAC7B;IACA,QAAQ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChC,YAAY,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,YAAY,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,SAAS;AACT;IACA,QAAQ,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACxB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,YAAY,GAAG,UAAU,EAAE,EAAE,GAAG,EAAE,MAAM,EAAE;IAClD,QAAQ,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC1B,QAAQ,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxB,QAAQ,IAAI,EAAE,CAAC,KAAK,KAAK,EAAE,EAAE;IAC7B,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IACvD,YAAY,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACnD,YAAY,CAAC,GAAG,CAAC,CAAC;IAClB,SAAS;IACT;IACA,YAAY,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC;IAC5B,QAAQ,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC7B,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC5C,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/B,QAAQ,IAAI,MAAM;IAClB,YAAY,OAAO;IACnB,gBAAgB,CAAC,EAAE,CAAC;IACpB,gBAAgB,CAAC,EAAE,CAAC;IACpB,gBAAgB,EAAE,EAAE,EAAE;IACtB,gBAAgB,CAAC,EAAE,CAAC;IACpB,aAAa,CAAC;IACd,QAAQ,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC7B,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACjC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE;IACrB,YAAY,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS;IACpC,gBAAgB,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;IACpC,YAAY,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7B,SAAS;IACT;IACA,QAAQ,CAAC,GAAG,OAAO,CAAC,KAAK,WAAW,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9C,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACjE,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,IAAI,GAAG,UAAU,MAAM,EAAE;IACjC;IACA,QAAQ,IAAI,CAAC,GAAG,GAAG;IACnB,gBAAgB,CAAC,GAAG,CAAC;IACrB,gBAAgB,CAAC,GAAG,CAAC;IACrB,gBAAgB,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;IACzC;IACA,QAAQ,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACxE,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;IACxB;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;IACxD;IACA,YAAY,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC9B,gBAAgB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAChC,gBAAgB,MAAM;IACtB,aAAa;IACb,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,MAAM,GAAG,UAAU,CAAC,EAAE;IAC9B,QAAQ,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACvC,QAAQ,IAAI,IAAI,KAAK,CAAC,CAAC;IACvB,YAAY,QAAQ,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;IACvC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,IAAI,GAAG,UAAU,GAAG,EAAE,EAAE,EAAE;IAClC,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;IAC1B,YAAY,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;IAC/B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IACtC,gBAAgB,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAChC,SAAS;IACT,aAAa;IACb,YAAY,KAAK,IAAI,CAAC,IAAI,GAAG;IAC7B,gBAAgB,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;IACzC,oBAAoB,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACpC,SAAS;IACT,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,IAAI,GAAG,UAAU,GAAG,EAAE;IAC9B,QAAQ,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;IAC7B,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,YAAY,GAAG,UAAU,GAAG,EAAE;IACtC,QAAQ,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACvC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,WAAW,GAAG,UAAU,GAAG,EAAE;IACrC,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAC;IACnC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,YAAY,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9B,YAAY,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,gBAAgB,GAAG,SAAS,GAAG,EAAE,SAAS,EAAE;IACpD,QAAQ,IAAI,aAAa,GAAG,OAAO,SAAS,CAAC;AAC7C;IACA,QAAQ,GAAG,aAAa,KAAK,UAAU,IAAI,aAAa,KAAK,WAAW,EAAE;IAC1E,YAAY,SAAS,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACvC,gBAAgB,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/B,aAAa,CAAC;IACd,SAAS;AACT;IACA,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;AACtB;IACA,QAAQ,MAAM,GAAG,CAAC,MAAM,EAAE;IAC1B,YAAY,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3B;IACA,YAAY,GAAG,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;IACjC,gBAAgB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7B,gBAAgB,MAAM;IACtB,aAAa;IACb,YAAY,IAAI,IAAI,GAAG,EAAE,CAAC;IAC1B,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzB,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC5C,gBAAgB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B;IACA,gBAAgB,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;IACnC,oBAAoB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,aAAa;IACb;IACA,YAAY,GAAG,GAAG,IAAI,CAAC;IACvB,SAAS;AACT;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,YAAY,GAAG,UAAU,GAAG,EAAE;IACtC,QAAQ,IAAI,GAAG,GAAG,UAAU,IAAI,EAAE;IAClC,YAAY,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,gBAAgB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,OAAO,GAAG,KAAK,QAAQ;IACnC,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC;IACrB,aAAa;IACb,YAAY,IAAI,CAAC,GAAG,EAAE,UAAU,CAAC,EAAE;IACnC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC;IACvB,aAAa,CAAC,CAAC;IACf,SAAS;IACT,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,MAAM,GAAG,UAAU,GAAG,EAAE,UAAU,EAAE;IAC5C,QAAQ,IAAI,MAAM,CAAC;IACnB,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;IAC1B,YAAY,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,SAAS;IACT,aAAa;IACb,YAAY,MAAM,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;IACrC,YAAY,OAAO,GAAG,CAAC,UAAU,CAAC,CAAC;IACnC,SAAS;IACT,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,KAAK,GAAG,UAAU,OAAO,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;IAChD,QAAQ,IAAI,eAAe,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC;IAChD,QAAQ,QAAQ,CAAC,OAAO,CAAC,GAAG,GAAG,KAAK,SAAS,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;IAC7D,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,QAAQ,QAAQ,CAAC,OAAO,CAAC,GAAG,eAAe,CAAC;IAC5C,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,eAAe,GAAG,YAAY;IACtC,QAAQ,IAAI,CAAC,GAAG,EAAE,CAAC;IACnB,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS;IACjC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,eAAe,GAAG,UAAU,GAAG,EAAE;IACzC,QAAQ,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,SAAS,GAAG,UAAU,MAAM,EAAE,GAAG,EAAE;IAC3C,QAAQ,IAAI,MAAM,GAAG,EAAE,CAAC;IACxB;IACA;IACA,QAAQ,MAAM,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE;IACpC,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;IACpC;IACA;IACA,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;IAC9C,wBAAwB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,KAAK,EAAE,CAAC;IACjE,wBAAwB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAChD,aAAa;IACb,iBAAiB;IACjB,gBAAgB,KAAK,GAAG,IAAI,CAAC;IAC7B,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,aAAa;IACb,YAAY,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B;IACA,YAAY,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;AACpD;IACA,SAAS,EAAE,IAAI,CAAC,CAAC;AACjB;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;IAC9C,YAAY,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1B,gBAAgB,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C;IACA,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,QAAQ,GAAG,UAAU,MAAM,EAAE,CAAC,EAAE;IACxC,QAAQ,OAAO,KAAK,CAAC,cAAc,EAAE,YAAY;IACjD,YAAY,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACtC,SAAS,EAAE,IAAI,CAAC,CAAC;IACjB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,eAAe,GAAG,UAAU,CAAC,EAAE;IACvC,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;IACxB,YAAY,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;IACxC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE;IAC7C,gBAAgB,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT;IACA,QAAQ,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxB,YAAY,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,cAAc,GAAG,UAAU,IAAI,EAAE;IACzC;IACA,QAAQ,IAAI,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IACxD;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IAChD,YAAY,IAAI,OAAO,CAAC,CAAC,CAAC;IAC1B,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,SAAS;IACT,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG,UAAU,IAAI,EAAE;IACrC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;IAC5C,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC;IACnC,gBAAgB,OAAO,KAAK,CAAC;IAC7B,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,YAAY,GAAG,UAAU,IAAI,EAAE;IACvC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC9C,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;IAC/C,gBAAgB,SAAS;IACzB,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;IACzC,gBAAgB,OAAO,KAAK,CAAC;IAC7B,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;AACN;AACA;IACA;IACA;IACA,IAAI,IAAI,cAAc,GAAG,WAAW,CAAC,gBAAgB,CAAC,CAAC;IACvD;IACA,IAAI,IAAI,UAAU,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;IAC/C;IACA,IAAI,IAAI,cAAc,GAAG,WAAW,CAAC,gBAAgB,CAAC,CAAC;IACvD;IACA,IAAI,IAAI,wBAAwB,GAAG,WAAW,CAAC,0BAA0B,CAAC,CAAC;IAC3E;IACA,IAAI,IAAI,iBAAiB,GAAG,WAAW,CAAC,mBAAmB,CAAC,CAAC;IAC7D;IACA,IAAI,IAAI,WAAW,GAAG,WAAW,CAAC,aAAa,CAAC,CAAC;IACjD;IACA,IAAI,IAAI,aAAa,GAAG,WAAW,CAAC,eAAe,CAAC,CAAC;IACrD;IACA,IAAI,IAAI,eAAe,GAAG,WAAW,CAAC,iBAAiB,CAAC,CAAC;IACzD;IACA,IAAI,IAAI,cAAc,GAAG,WAAW,CAAC,gBAAgB,CAAC,CAAC;IACvD;IACA,IAAI,IAAI,wBAAwB,GAAG,WAAW,CAAC,0BAA0B,CAAC,CAAC;IAC3E;IACA;IACA,IAAI,IAAI,uBAAuB,GAAG,WAAW,CAAC,yBAAyB,CAAC,CAAC;IACzE;IACA,IAAI,IAAI,kBAAkB,GAAG,WAAW,CAAC,oBAAoB,CAAC,CAAC;IAC/D;IACA,IAAI,IAAI,UAAU,GAAG,WAAW,CAAC,YAAY,CAAC,CAAC;AAC/C;IACA,IAAI,IAAI,UAAU,GAAG;IACrB,QAAQ,cAAc,EAAE,cAAc;IACtC,QAAQ,UAAU,EAAE,UAAU;IAC9B,QAAQ,cAAc,EAAE,cAAc;IACtC,QAAQ,wBAAwB,EAAE,wBAAwB;IAC1D,QAAQ,iBAAiB,EAAE,iBAAiB;IAC5C,QAAQ,WAAW,EAAE,WAAW;IAChC,QAAQ,aAAa,EAAE,aAAa;IACpC,QAAQ,eAAe,EAAE,eAAe;IACxC,QAAQ,cAAc,EAAE,cAAc;IACtC,QAAQ,wBAAwB,EAAE,wBAAwB;IAC1D,QAAQ,uBAAuB,EAAE,uBAAuB;IACxD,QAAQ,kBAAkB,EAAE,kBAAkB;IAC9C,QAAQ,UAAU,EAAE,UAAU;IAC9B,KAAK,CAAC;IACN;IACA,IAAI,IAAI,GAAG,GAAG;IACd,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACpE,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACpE,SAAS;IACT,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,KAAK,GAAG;IAChB,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnC,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnC,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnC,SAAS;IACT,EAAE,IAAI,EAAE,SAAS,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAC9C,QAAQ,IAAI,EAAE,SAAS,CAAC,EAAE;IAC1B,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,SAAS;IACT,QAAQ,IAAI,EAAE,SAAS,CAAC,EAAE;IAC1B,YAAY,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChD,SAAS;IACT;IACA,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,YAAY,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,UAAU;IAC7D,oBAAoB,CAAC,IAAI,UAAU;IACnC,4BAA4B,CAAC,IAAI,UAAU;IAC3C,oCAAoC,CAAC,IAAI,UAAU;IACnD,4CAA4C,CAAC,IAAI,CAAC,UAAU;IAC5D,oDAAoD,CAAC,IAAI,UAAU;IACnE,4DAA4D,CAAC,IAAI,CAAC,UAAU;IAC5E,oEAAoE,CAAC,IAAI,UAAU;IACnF,4EAA4E,CAAC,IAAI,CAAC,UAAU;IAC5F,oFAAoF,CAAC,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5G,qBAAqB,CAAC;IACtB,YAAY,OAAO,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC;IAC7C,SAAS;IACT,QAAQ,IAAI,EAAE,SAAS,CAAC,EAAE;IAC1B,YAAY,IAAI,CAAC,GAAG,KAAK,CAAC;IAC1B;IACA,YAAY,IAAI,UAAU,GAAG,SAAS,CAAC,EAAE;IACzC,gBAAgB,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACvD,aAAa,CAAC;IACd;IACA,YAAY,OAAO,UAAU,CAAC;IAC9B,SAAS;IACT,QAAQ,MAAM,EAAE,UAAU,GAAG,MAAM,EAAE;IACrC,YAAY,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IACxC,gBAAgB,OAAO,CAAC,GAAG,CAAC,CAAC;IAC7B,aAAa,CAAC,CAAC;AACf;IACA,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AACrD;IACA,YAAY,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC;IACjC,gBAAgB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;AACpC;IACA,YAAY,OAAO,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC;IAC3D,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,aAAa,EAAE,UAAU,KAAK,EAAE;IACxC,YAAY,IAAI,GAAG,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC9C,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC;IAClC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxD,gBAAgB,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IACxC,aAAa;IACb,YAAY,OAAO,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IAClD,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,iBAAiB,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAC3C,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IACxB,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnC,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACzC,YAAY,IAAI,EAAE,GAAG,IAAI,GAAG,KAAK,CAAC;IAClC,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC;IACtB,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC;IAC7B,YAAY,IAAI,OAAO,GAAG,KAAK,CAAC;IAChC,YAAY,IAAI,GAAG,GAAG,GAAG,CAAC;IAC1B,YAAY,IAAI,CAAC,EAAE,CAAC,CAAC;IACrB,YAAY,IAAI,MAAM,GAAG;IACzB,gBAAgB,KAAK,EAAE,KAAK;IAC5B,gBAAgB,IAAI,EAAE,IAAI;IAC1B,gBAAgB,SAAS,EAAE,EAAE;IAC7B,aAAa,CAAC;IACd;IACA,YAAY,OAAO,CAAC,IAAI,IAAI,EAAE,KAAK,CAAC,EAAE;IACtC;IACA,gBAAgB,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IAC3B,gBAAgB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,gBAAgB,IAAI,CAAC,GAAG,GAAG,EAAE;IAC7B;IACA,oBAAoB,IAAI,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC5D,oBAAoB,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO;IAC3C,wBAAwB,MAAM;IAC9B,iBAAiB;IACjB;IACA,gBAAgB,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACzC;IACA,gBAAgB,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3B;IACA,gBAAgB,IAAI,EAAE,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;IAC/C,oBAAoB,IAAI,GAAG,IAAI,CAAC;IAChC,gBAAgB,CAAC,EAAE,CAAC;IACpB,aAAa;IACb;IACA,YAAY,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;IAClD,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IAC7C,gBAAgB,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;IACvC;IACA,gBAAgB,MAAM,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,CAAC;IAC1C,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,QAAQ,MAAM,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAChC,YAAY,IAAI,EAAE,CAAC,YAAY,IAAI,CAAC;IACpC,gBAAgB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnC,YAAY,IAAI,EAAE,CAAC,YAAY,IAAI,CAAC;IACpC,gBAAgB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnC,YAAY,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,YAAY,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE;IAC/B,gBAAgB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrD,gBAAgB,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrD,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9D,gBAAgB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC9D;IACA,gBAAgB,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClE,gBAAgB,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IACvD,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT;IACA,QAAQ,KAAK,EAAE,UAAU,CAAC,EAAE;IAC5B,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC;IACtB,YAAY,IAAI,CAAC,GAAG;IACpB,gBAAgB,mBAAmB;IACnC,gBAAgB,iBAAiB;IACjC,gBAAgB,CAAC,kBAAkB;IACnC,gBAAgB,kBAAkB;IAClC,gBAAgB,CAAC,kBAAkB;IACnC,gBAAgB,kBAAkB;IAClC,gBAAgB,CAAC,mBAAmB;IACpC,gBAAgB,qBAAqB;IACrC,gBAAgB,qBAAqB,CAAC;IACtC,qBAAqB;AACrB;IACA,YAAY,IAAI,CAAC,GAAG,GAAG;IACvB,gBAAgB,OAAO,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9E,iBAAiB;IACjB,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACvB;IACA,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC9C,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACxC;IACA,gBAAgB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACpC,gBAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1F,aAAa;IACb,SAAS;IACT;IACA,QAAQ,YAAY,EAAE,UAAU,CAAC,EAAE;IACnC,YAAY,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;IACvC,gBAAgB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC,YAAY,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;IACpC,SAAS;IACT;IACA,QAAQ,MAAM,EAAE,UAAU,CAAC,EAAE;IAC7B,YAAY,IAAI,KAAK,GAAG,CAAC,uIAAuI,EAAE,GAAG,EAAE,2RAA2R,EAAE,uOAAuO,EAAE,6VAA6V,EAAE,6RAA6R,EAAE,0YAA0Y,EAAE,mUAAmU,EAAE,ibAAib,EAAE,iWAAiW,EAAE,wcAAwc,EAAE,oXAAoX,EAAE,oeAAoe,EAAE,8YAA8Y,EAAE,gfAAgf,EAAE,maAAma,EAAE,mgBAAmgB,EAAE,qbAAqb,EAAE,whBAAwhB,EAAE,8bAA8b,EAAE,iiBAAiiB,EAAE,2cAA2c,EAAE,gjBAAgjB,EAAE,odAAod,EAAE,8jBAA8jB,EAAE,meAAme,EAAE,qkBAAqkB,EAAE,+eAA+e,EAAE,glBAAglB,EAAE,ofAAof,EAAE,2lBAA2lB,EAAE,4fAA4f,EAAE,gmBAAgmB,EAAE,6gBAA6gB,EAAE,omBAAomB,EAAE,khBAAkhB,EAAE,6mBAA6mB,EAAE,uhBAAuhB,EAAE,0nBAA0nB,EAAE,6hBAA6hB,EAAE,goBAAgoB,EAAE,kiBAAkiB,EAAE,0oBAA0oB,EAAE,wiBAAwiB,EAAE,0oBAA0oB,EAAE,6iBAA6iB,EAAE,4oBAA4oB,EAAE,sjBAAsjB,EAAE,ypBAAypB,EAAE,0jBAA0jB,EAAE,+pBAA+pB,EAAE,+jBAA+jB,EAAE,sqBAAsqB,EAAE,ykBAAykB,EAAE,sqBAAsqB,EAAE,6kBAA6kB,EAAE,yqBAAyqB,EAAE,mlBAAmlB,EAAE,grBAAgrB,EAAE,olBAAolB,EAAE,wrBAAwrB,EAAE,wlBAAwlB,EAAE,wrBAAwrB,EAAE,gmBAAgmB,EAAE,4rBAA4rB,EAAE,gmBAAgmB,EAAE,msBAAmsB,EAAE,mmBAAmmB,EAAE,wsBAAwsB,EAAE,umBAAumB,EAAE,2sBAA2sB,EAAE,4mBAA4mB,EAAE,gtBAAgtB,EAAE,onBAAonB,EAAE,gtBAAgtB,EAAE,ynBAAynB,EAAE,8sBAA8sB,EAAE,2nBAA2nB,EAAE,ytBAAytB,EAAE,onBAAonB,EAAE,iuBAAiuB,EAAE,goBAAgoB,EAAE,8tBAA8tB,EAAE,moBAAmoB,EAAE,guBAAguB,EAAE,soBAAsoB,EAAE,muBAAmuB,EAAE,2oBAA2oB,EAAE,wuBAAwuB,EAAE,2oBAA2oB,EAAE,8uBAA8uB,EAAE,8oBAA8oB,EAAE,yuBAAyuB,EAAE,opBAAopB,EAAE,gvBAAgvB,EAAE,upBAAupB,EAAE,mvBAAmvB,EAAE,2pBAA2pB,EAAE,wvBAAwvB,EAAE,0pBAA0pB,EAAE,qvBAAqvB,EAAE,8pBAA8pB,EAAE,+vBAA+vB,EAAE,iqBAAiqB,EAAE,6vBAA6vB,EAAE,2qBAA2qB,EAAE,8vBAA8vB,EAAE,oqBAAoqB,EAAE,wwBAAwwB,EAAE,oqBAAoqB,EAAE,ywBAAywB,EAAE,wqBAAwqB,EAAE,0wBAA0wB,EAAE,yqBAAyqB,EAAE,2wBAA2wB,EAAE,6qBAA6qB,EAAE,0wBAA0wB,EAAE,qrBAAqrB,EAAE,ixBAAixB,EAAE,mrBAAmrB,EAAE,qxBAAqxB,EAAE,grBAAgrB,EAAE,oxBAAoxB,EAAE,0rBAA0rB,EAAE,wxBAAwxB,EAAE,4rBAA4rB,EAAE,6xBAA6xB,EAAE,+rBAA+rB,EAAE,4xBAA4xB,EAAE,msBAAmsB,EAAE,0xBAA0xB,EAAE,6rBAA6rB,EAAE,kyBAAkyB,EAAE,+rBAA+rB,EAAE,iyBAAiyB,EAAE,osBAAosB,EAAE,oyBAAoyB,EAAE,osBAAosB,EAAE,oyBAAoyB,EAAE,osBAAosB,EAAE,0yBAA0yB,EAAE,0sBAA0sB,EAAE,uyBAAuyB,EAAE,gtBAAgtB,EAAE,syBAAsyB,EAAE,ktBAAktB,EAAE,4yBAA4yB,EAAE,itBAAitB,EAAE,gzBAAgzB,EAAE,itBAAitB,EAAE,kzBAAkzB,EAAE,ktBAAktB,EAAE,szBAAszB,EAAE,stBAAstB,EAAE,ozBAAozB,EAAE,qtBAAqtB,EAAE,szBAAszB,EAAE,0tBAA0tB,EAAE,wzBAAwzB,EAAE,6tBAA6tB,EAAE,yzBAAyzB,EAAE,8tBAA8tB,EAAE,k0BAAk0B,EAAE,guBAAguB,EAAE,4zBAA4zB,EAAE,+tBAA+tB,EAAE,+zBAA+zB,EAAE,guBAAguB,EAAE,20BAA20B,EAAE,8tBAA8tB,EAAE,s0BAAs0B,EAAE,quBAAquB,EAAE,w0BAAw0B,EAAE,wuBAAwuB,EAAE,u0BAAu0B,EAAE,ouBAAouB,EAAE,s0BAAs0B,EAAE,2uBAA2uB,EAAE,00BAA00B,EAAE,yuBAAyuB,EAAE,s1BAAs1B,EAAE,wuBAAwuB,EAAE,k1BAAk1B,EAAE,gvBAAgvB,EAAE,o0BAAo0B,EAAE,kvBAAkvB,EAAE,40BAA40B,EAAE,kvBAAkvB,EAAE,g1BAAg1B,EAAE,ovBAAovB,EAAE,u1BAAu1B,EAAE,mvBAAmvB,EAAE,g2BAAg2B,EAAE,uvBAAuvB,EAAE,w1BAAw1B,EAAE,uvBAAuvB,EAAE,w1BAAw1B,EAAE,yvBAAyvB,EAAE,g2BAAg2B,EAAE,wvBAAwvB,CAAC,CAAC;IACpgoI,YAAY,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAC1B,gBAAgB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACnE,aAAa;IACb,YAAY,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,YAAY,IAAI,CAAC,GAAG,EAAE,CAAC;IACvB,YAAY,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,gBAAgB,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACvD,gBAAgB,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACvC;IACA,aAAa;IACb,YAAY,OAAO,MAAM,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,SAAS;IACT;IACA,QAAQ,SAAS,EAAE,UAAU,CAAC,EAAE;IAChC,YAAY,IAAI,MAAM,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrC;IACA;IACA,YAAY,IAAI,MAAM,IAAI,CAAC,GAAG,CAAC;IAC/B,gBAAgB,OAAO,GAAG,CAAC;IAC3B;IACA,YAAY,GAAG,CAAC,MAAM;IACtB,gBAAgB,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC;IACA,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC;IAC3B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;IACvC,gBAAgB,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;IACpC,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT;IACA;IACA,QAAQ,UAAU,EAAE,UAAU,CAAC,EAAE;IACjC,YAAY,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAC1B,gBAAgB,IAAI,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACvC;IACA,gBAAgB,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnD;IACA,gBAAgB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC;IACA,gBAAgB,IAAI,IAAI;IACxB,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;IAC/C,wBAAwB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E;IACA,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;IAC/C,wBAAwB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChG,aAAa;IACb,iBAAiB;IACjB;IACA,gBAAgB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvJ,aAAa;AACb;IACA;IACA,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,GAAG,EAAE,YAAY;IACzB,YAAY,IAAI,IAAI,GAAG,WAAW,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC;IAC3D,qBAAqB,GAAG,CAAC,UAAU,CAAC,EAAE;IACtC,wBAAwB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,qBAAqB,CAAC,CAAC,CAAC,IAAI,EAAE;IAC9B,oBAAoB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IAC9C,oBAAoB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;AACpC;IACA,YAAY,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE;IAC5B,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IAC/C,gBAAgB,OAAO,IAAI,EAAE;IAC7B,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC3B,oBAAoB,IAAI,CAAC,KAAK,CAAC,EAAE;IACjC,wBAAwB,CAAC,GAAG,CAAC,CAAC;IAC9B,wBAAwB,MAAM;IAC9B,qBAAqB;IACrB,oBAAoB,CAAC,IAAI,CAAC,CAAC;IAC3B,oBAAoB,IAAI,CAAC,KAAK,CAAC;IAC/B,wBAAwB,MAAM;IAE9B,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,IAAI,EAAE,YAAY;IAC1B,YAAY,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChD,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAClD,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,IAAI,IAAI,GAAG,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACrE,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7B,gBAAgB,IAAI,IAAI,GAAG,CAAC;IAC5B,oBAAoB,CAAC,CAAC,MAAM,EAAE,CAAC;IAC/B,aAAa;IACb,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAC7B,YAAY,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7C,SAAS;IACT;IACA;IACA,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAC7B,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE;IACvB,gBAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;IACrC;IACA,oBAAoB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC;IACvC,wBAAwB,OAAO,GAAG,CAAC;IACnC,oBAAoB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,SAAS;IACT,QAAQ,MAAM,EAAE,UAAU,CAAC,EAAE;IAC7B,YAAY,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC;IACA,YAAY,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,YAAY,IAAI,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5C,YAAY,IAAI,OAAO,GAAG,IAAI,MAAM,EAAE,CAAC;IACvC,YAAY,OAAO,CAAC,OAAO,GAAG,EAAE,CAAC;IACjC,YAAY,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC;IAC/B,YAAY,KAAK,IAAI,CAAC,IAAI,QAAQ,EAAE;IACpC,gBAAgB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;IACjC,gBAAgB,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;IACjC,gBAAgB,MAAM,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,gBAAgB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;IAC5C,aAAa;IACb,YAAY,OAAO,CAAC,UAAU,EAAE,CAAC;IACjC;IACA,YAAY,GAAG,CAAC,KAAK,CAAC,EAAE;IACxB,gBAAgB,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACxC,aAAa;IACb;IACA;IACA,YAAY,GAAG,IAAI,GAAG,CAAC;IACvB,gBAAgB,OAAO,CAAC,MAAM,EAAE,CAAC;IACjC;IACA,YAAY,OAAO,OAAO,CAAC;IAC3B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,EAAE,UAAU,CAAC,EAAE,OAAO,EAAE;IACvC,YAAY,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;IACpC,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,YAAY,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACpD;IACA;IACA,YAAY,IAAI,CAAC,GAAG,OAAO,IAAI,CAAC,GAAG,GAAG;IACtC,gBAAgB,cAAc,CAAC,CAAC,CAAC,CAAC;IAClC,YAAY,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;IAClC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtC;IACA,gBAAgB,OAAO,CAAC,GAAG,KAAK,KAAK,CAAC,EAAE;IACxC,oBAAoB,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAClC,oBAAoB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/D,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,CAAC,GAAG,CAAC;IACrB,gBAAgB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC/B,YAAY,OAAO,OAAO,CAAC;IAC3B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,EAAE,UAAU,CAAC,EAAE;IAC9B,YAAY,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1B;IACA,YAAY,IAAI,CAAC,KAAK,GAAG;IACzB,gBAAgB,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAChC,YAAY,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B,YAAY,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACvC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACxB,YAAY,IAAI,OAAO,GAAG,EAAE,CAAC;IAC7B,YAAY,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;IAC/B,gBAAgB,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IACpD,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,GAAG,GAAG,UAAU,CAAC,EAAE;IACvC,oBAAoB,IAAI,CAAC,CAAC,CAAC,OAAO,EAAE,EAAE;IACtC,wBAAwB,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;IAC5D,qBAAqB;IACrB;IACA,wBAAwB,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3D,iBAAiB,CAAC;IAClB;IACA,gBAAgB,IAAI;IACpB;IACA,oBAAoB,IAAI,GAAG,GAAG,GAAG,CAAC;IAClC,oBAAoB,IAAI,MAAM,GAAG,CAAC,CAAC;IACnC;IACA,oBAAoB,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAC/C,wBAAwB,IAAI,CAAC,CAAC,OAAO,EAAE,EAAE;IACzC,4BAA4B,GAAG,CAAC,CAAC,CAAC,CAAC;IACnC,4BAA4B,MAAM;IAClC,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,SAAS,GAAG,CAAC,CAAC,EAAE;IAC5C,gCAAgC,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;IACtD,wCAAwC,EAAE,GAAG,CAAC;IAC9C,wCAAwC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;IACzD,wCAAwC,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AAC/D;IACA,gCAAgC,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACzD,oCAAoC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IACtF;IACA,wCAAwC,GAAG,MAAM,EAAE,GAAG,GAAG;IACzD,4CAA4C,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;IACxE;IACA,wCAAwC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnE,wCAAwC,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;IAClF,qCAAqC;AACrC;IACA,oCAAoC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAChD,oCAAoC,EAAE,GAAG,CAAC,CAAC;IAC3C,iCAAiC;IACjC,gCAAgC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACtD,oCAAoC,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,iCAAiC;IACjC,gCAAgC,OAAO,MAAM,CAAC;IAC9C,6BAA6B;IAC7B,4BAA4B,IAAI,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAChD,4BAA4B,GAAG,CAAC,MAAM,CAAC,CAAC;IACxC;IACA,4BAA4B,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACjD,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,MAAM,CAAC,EAAE;IACzB;IACA,oBAAoB,OAAO,GAAG,EAAE,CAAC;IACjC,oBAAoB,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3B,iBAAiB;IACjB;IACA,aAAa;AACb;IACA;IACA,YAAY,IAAI,IAAI,KAAK,CAAC,CAAC,EAAE;IAC7B,gBAAgB,IAAI,EAAE,GAAG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACjD,gBAAgB,OAAO,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,CAAC;IAChD,gBAAgB,OAAO,OAAO,CAAC,EAAE,CAAC,CAAC;IACnC,aAAa;AACb;IACA,YAAY,OAAO,OAAO,CAAC;IAC3B,SAAS;IACT;IACA;IACA,QAAQ,SAAS,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE;IACrC,YAAY,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;IAC7B,YAAY,IAAI,CAAC,EAAE,CAAC;IACpB,oBAAoB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAChD,oBAAoB,CAAC,GAAG,CAAC;IACzB,oBAAoB,MAAM,GAAG,KAAK,CAAC;IACnC,YAAY,OAAO,IAAI,EAAE;IACzB,gBAAgB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,gBAAgB,IAAI,CAAC,KAAK,CAAC;IAC3B,oBAAoB,MAAM;IAC1B,gBAAgB,IAAI,MAAM;IAC1B,oBAAoB,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,gBAAgB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,gBAAgB,CAAC,EAAE,CAAC;IACpB,gBAAgB,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC;IACjC,aAAa;IACb,YAAY,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,YAAY,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,YAAY,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACnD,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IACpC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACzC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB,aAAa;IACb,YAAY,OAAO,CAAC,GAAG,IAAI,CAAC;IAC5B,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAC7B,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC;IACzB,SAAS;IACT;IACA,QAAQ,YAAY,EAAE,UAAU,CAAC,EAAE;IACnC,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,YAAY,OAAO,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,SAAS;IACT,QAAQ,OAAO,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;IAC1C,YAAY,IAAI,SAAS,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;IAClD,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,gBAAgB,IAAI,CAAC,GAAG,cAAc,CAAC;IACvC,gBAAgB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAC9B,oBAAoB,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa,CAAC;AACd;IACA,YAAY,IAAI,GAAG,IAAI,IAAI,MAAM,CAAC;IAClC;IACA,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;IACzD;IACA,YAAY,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3B,gBAAgB,CAAC,EAAE,CAAC;IACpB;IACA,YAAY,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACjC;IACA,YAAY,IAAI,MAAM,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5C;IACA;IACA;IACA;IACA,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC;IAC7B;IACA,YAAY,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IAC5B;IACA,YAAY,IAAI,CAAC,EAAE,CAAC,CAAC;IACrB;IACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;IACjC,gBAAgB,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC5C,gBAAgB,MAAM,IAAI,CAAC,CAAC;IAC5B;IACA,gBAAgB,IAAI,GAAG,CAAC,IAAI,CAAC;IAC7B;IACA,gBAAgB,EAAE,IAAI,EAAE,CAAC;IACzB,aAAa;AACb;IACA;IACA,YAAY,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;AAC7D;IACA,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,aAAa,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE;IACzD,YAAY,IAAI,QAAQ,GAAG,CAAC;IAC5B,gBAAgB,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AAChE;IACA;IACA;IACA,YAAY,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;IAClF,gBAAgB,IAAI,KAAK,CAAC,cAAc,EAAE;IAC1C,oBAAoB,OAAO,GAAG,CAAC;IAC/B,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC;IAC1D,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,gBAAgB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IACrC,gBAAgB,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;IACrC;IACA,gBAAgB,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE;IAC/B,oBAAoB,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;IAChD,oBAAoB,OAAO;IAC3B,iBAAiB;IACjB;IACA,gBAAgB,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE;IAC/B,oBAAoB,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;IAChD,oBAAoB,OAAO;IAC3B,iBAAiB;AACjB;IACA,gBAAgB,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IACjD,gBAAgB,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;IACjD,gBAAgB,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC7B,gBAAgB,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC;AACrC;IACA,gBAAgB,IAAI,KAAK,CAAC,aAAa,GAAG,IAAI,GAAG,QAAQ,EAAE;IAC3D,oBAAoB,OAAO;IAC3B,iBAAiB;AACjB;AACA;IACA,gBAAgB,IAAI,KAAK,GAAG,QAAQ,EAAE;IACtC,oBAAoB,KAAK,CAAC,aAAa,EAAE,CAAC;IAC1C,oBAAoB,OAAO,EAAE,GAAG,GAAG,CAAC;IACpC,iBAAiB;IACjB,qBAAqB,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;IAC9C,oBAAoB,OAAO,EAAE,GAAG,GAAG,CAAC;IACpC,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACpC,oBAAoB,EAAE,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,QAAQ,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;IAChG,oBAAoB,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE;IACnC,wBAAwB,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;IACpD,wBAAwB,OAAO,GAAG,CAAC;IACnC,qBAAqB;IACrB,oBAAoB,EAAE,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,EAAE,QAAQ,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;AAChG;IACA,oBAAoB,IAAI,KAAK,CAAC,EAAE,CAAC,EAAE;IACnC,wBAAwB,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC;IACpD,wBAAwB,OAAO,GAAG,CAAC;IACnC,qBAAqB;AACrB;IACA,oBAAoB,OAAO,EAAE,GAAG,EAAE,CAAC;IACnC,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE;IACvD,gBAAgB,IAAI,KAAK,GAAG;IAC5B,oBAAoB,aAAa,EAAE,CAAC;IACpC,oBAAoB,cAAc,EAAE,KAAK;IACzC,iBAAiB,CAAC;AAClB;IACA,gBAAgB,IAAI,GAAG,KAAK,SAAS,EAAE;IACvC,oBAAoB,GAAG,GAAG,IAAI,CAAC;IAC/B,iBAAiB;IACjB,gBAAgB,IAAI,QAAQ,KAAK,SAAS,EAAE;IAC5C;IACA;IACA,oBAAoB,QAAQ,GAAG,EAAE,CAAC;IAClC,iBAAiB;AACjB;IACA,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1C,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B;IACA,gBAAgB,IAAI,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1D;IACA,gBAAgB,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AACtF;IACA,gBAAgB,IAAI,KAAK,CAAC,aAAa,GAAG,CAAC,EAAE;IAC7C,oBAAoB,IAAI,CAAC,gEAAgE,GAAG,QAAQ,GAAG,YAAY,GAAG,KAAK,CAAC,aAAa,GAAG,QAAQ,CAAC,CAAC;IACtJ,iBAAiB;AACjB;IACA,gBAAgB,IAAI,KAAK,CAAC,cAAc,EAAE;IAC1C,oBAAoB,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;IACjF,iBAAiB;AACjB;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,IAAI,MAAM,CAAC;AACvB;IACA,YAAY,IAAI;IAChB,gBAAgB,MAAM,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;IAC3D,aAAa;IACb,YAAY,OAAO,CAAC,EAAE;IACtB;IACA,gBAAgB,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9C,aAAa;IACb,YAAY,OAAO,MAAM,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;IACtC,SAAS;IACT;IACA;IACA,QAAQ,EAAE,EAAE,UAAU,CAAC,EAAE;IACzB,YAAY,IAAI,CAAC,GAAG,EAAE;IACtB;IACA,oBAAoB,CAAC,GAAG,kBAAkB;IAC1C,oBAAoB,GAAG,GAAG,CAAC,CAAC;IAC5B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC;IACA,gBAAgB,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACxF,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IACzC,SAAS;IACT;IACA,QAAQ,EAAE,EAAE,UAAU,CAAC,EAAE;IACzB,YAAY,IAAI,CAAC,GAAG,EAAE;IACtB,oBAAoB,GAAG,GAAG,CAAC,CAAC;IAC5B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IACtG,aAAa;IACb,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT;IACA,QAAQ,EAAE,EAAE,UAAU,CAAC,EAAE;IACzB,YAAY,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;IAC/B,gBAAgB,OAAO,CAAC,QAAQ,CAAC;IACjC,YAAY,IAAI,CAAC,GAAG,EAAE;IACtB,oBAAoB,CAAC,GAAG,qBAAqB;IAC7C,oBAAoB,GAAG,GAAG,CAAC,CAAC;IAC5B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,aAAa;IACb,YAAY,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACnD,SAAS;IACT;IACA;IACA,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,IAAI,CAAC,GAAG,EAAE;IACtB,oBAAoB,GAAG,GAAG,CAAC;IAC3B,oBAAoB,CAAC,EAAE,CAAC,CAAC;IACzB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,gBAAgB,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,aAAa;IACb,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT;IACA,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACzB,YAAY,EAAE,GAAG,KAAK,CAAC;IACvB,YAAY,CAAC,GAAG,qBAAqB,CAAC;IACtC,YAAY,CAAC,GAAG,UAAU,CAAC,EAAE;IAC7B,gBAAgB,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9C,aAAa,CAAC;IACd,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1E,SAAS;IACT;IACA,QAAQ,EAAE,EAAE,UAAU,CAAC,EAAE;IACzB,YAAY,OAAO,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,SAAS;IACT;IACA,QAAQ,gBAAgB,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAC1C,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;IACzB,oBAAoB,GAAG,GAAG,CAAC;IAC3B,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3D,aAAa;IACb,YAAY,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC3D,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,EAAE,UAAU,CAAC,EAAE;IAC3B,YAAY,IAAI,CAAC,GAAG,CAAC;IACrB,gBAAgB,OAAO,CAAC,CAAC;IACzB,YAAY,IAAI,CAAC,GAAG,CAAC;IACrB,gBAAgB,OAAO,CAAC,CAAC;IACzB,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,EAAE,UAAU,CAAC,EAAE;IAC3B,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChC,YAAY,IAAI,CAAC,KAAK,GAAG;IACzB,gBAAgB,OAAO,CAAC,CAAC;IACzB,YAAY,IAAI,CAAC,GAAG,GAAG;IACvB,gBAAgB,OAAO,CAAC,CAAC;IACzB,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,EAAE,UAAU,CAAC,EAAE;IAC3B,YAAY,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3B,gBAAgB,OAAO,CAAC,CAAC;IACzB,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACnC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,YAAY,IAAI,CAAC,IAAI,CAAC;IACtB,gBAAgB,OAAO,CAAC,CAAC;IACzB,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC;IACzB,SAAS;IACT;IACA,QAAQ,OAAO,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACjC;IACA,YAAY,IAAI,EAAE,CAAC,YAAY,IAAI,CAAC;IACpC,gBAAgB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC3C,YAAY,IAAI,EAAE,CAAC,YAAY,IAAI,CAAC;IACpC,gBAAgB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC3C,YAAY,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3B,gBAAgB,OAAO,CAAC,CAAC;IACzB;IACA,YAAY,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,YAAY,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;IACpC,YAAY,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC;IAC5B,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE;IACtC,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,YAAY,GAAG;IACf,gBAAgB,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/C,gBAAgB,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACnF,gBAAgB,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACzC,gBAAgB,IAAI,EAAE;IACtB,oBAAoB,MAAM;AAC1B;IACA,gBAAgB,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAChC;IACA,gBAAgB,IAAI,MAAM,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC;IAC5C,gBAAgB,EAAE,GAAG,GAAG,GAAG,GAAG,KAAK,MAAM,GAAG,KAAK,CAAC;IAClD,gBAAgB,GAAG,GAAG,MAAM,CAAC;IAC7B,aAAa;IACb,mBAAmB,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC;IACA,YAAY,OAAO,EAAE,CAAC;IACtB,SAAS;IACT;IACA;IACA,QAAQ,IAAI,EAAE,UAAU,CAAC,EAAE;IAC3B,YAAY,IAAI,EAAE,CAAC,YAAY,IAAI,CAAC;IACpC,gBAAgB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,YAAY,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,UAAU,CAAC;IACtC,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC;IACtB,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC;IAC7B,YAAY,IAAI,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,YAAY,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC;IAC9B,YAAY,GAAG;IACf;IACA,gBAAgB,IAAI,CAAC,GAAG,MAAM;IAC9B,oBAAoB,MAAM,IAAI,KAAK,CAAC,sCAAsC,GAAG,CAAC,CAAC,CAAC;IAChF,gBAAgB,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,gBAAgB,EAAE,GAAG,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9C;IACA,gBAAgB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD;IACA;IACA;IACA,gBAAgB,UAAU,GAAG,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACvD,gBAAgB,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,UAAU;IACjE,oBAAoB,IAAI,GAAG,IAAI,CAAC;IAChC;IACA,gBAAgB,EAAE,GAAG,CAAC,CAAC;IACvB,gBAAgB,CAAC,EAAE,CAAC;IACpB,aAAa;IACb,mBAAmB,CAAC,IAAI,CAAC;AACzB;IACA,YAAY,OAAO,EAAE,CAAC;IACtB,SAAS;IACT,KAAK,CAAC;IACN;IACA,IAAI,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC1C,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;AACxB;AACA;IACA;IACA;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,EAAE;IAC1C,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACf,QAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IACjC,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,KAAK,CAAC;AACN;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,EAAE;IAC1C,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAQ,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/B,KAAK,CAAC;AACN;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,EAAE;IAC1C,QAAQ,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,KAAK,CAAC;AACN;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,EAAE;IAC1C,QAAQ,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,KAAK,CAAC;AACN;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,EAAE;IAC1C,QAAQ,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,KAAK,CAAC;AACN;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,EAAE;IAC1C,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAQ,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/B,KAAK,CAAC;AACN;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC,EAAE;IAC1C,QAAQ,IAAI,CAAC,KAAK,QAAQ,EAAE;IAC5B,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,aAAa,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;IAClC,YAAY,OAAO,CAAC,CAAC,CAAC;IACtB,SAAS;IACT,aAAa;IACb,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACpC,YAAY,OAAO,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACrC,SAAS;IACT,KAAK,CAAC;AACN;IACA,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,EAAE;IAC5C,QAAQ,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;IAC7B,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtD,SAAS;IACT,KAAK,CAAC;AACN;IACA,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,EAAE;IAC5C,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,KAAK,CAAC;AACN;IACA,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,EAAE;IAC5C,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC/C,KAAK,CAAC;AACN;IACA,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,EAAE;IAC5C,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;IACzC,KAAK,CAAC;AACN;IACA,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,UAAU,CAAC,EAAE;IAC5C,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IACtB,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;IACnB,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACjC,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC/C,QAAQ,IAAI,MAAM,GAAG,MAAM,KAAK,MAAM;IACtC;IACA,YAAY,aAAa,GAAG,SAAS;IACrC,YAAY,GAAG,GAAG,MAAM,GAAG,SAAS,GAAG,MAAM;IAC7C,YAAY,SAAS,GAAG,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,UAAU,CAAC;IAChE;IACA,QAAQ,GAAG,SAAS,IAAI,OAAO,IAAI,KAAK,WAAW;IACnD,YAAY,IAAI,GAAG,EAAE,CAAC;IACtB;IACA,QAAQ,SAAS,QAAQ,CAAC,GAAG,EAAE;IAC/B,YAAY,QAAQ,MAAM;IAC1B;IACA,gBAAgB,KAAK,UAAU,CAAC;IAChC,gBAAgB,KAAK,SAAS;IAC9B,oBAAoB,aAAa,GAAG,aAAa,IAAI,UAAU,GAAG,EAAE;IACpE,wBAAwB,OAAO,KAAK,CAAC;IACrC,qBAAqB,CAAC;IACtB,oBAAoB,OAAO,GAAG,CAAC,OAAO,EAAE,CAAC;IACzC,gBAAgB,KAAK,WAAW;IAChC,oBAAoB,aAAa,GAAG,aAAa,IAAI,UAAU,GAAG,EAAE;IACpE,wBAAwB,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACvD,qBAAqB,CAAC;AACtB;IACA,oBAAoB,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC7C;IACA,oBAAoB,IAAI,IAAI,GAAG,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7D,oBAAoB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;IACzC,wBAAwB,OAAO,GAAG,CAAC;AACnC;IACA;IACA,oBAAoB,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnD,oBAAoB,IAAI,QAAQ,GAAG,KAAK,CAAC;IACzC,oBAAoB,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,oBAAoB,IAAI,CAAC,GAAG,CAAC,EAAE;IAC/B,wBAAwB,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/B,wBAAwB,QAAQ,GAAG,IAAI,CAAC;IACxC,qBAAqB;IACrB,oBAAoB,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,oBAAoB,IAAI,CAAC,CAAC;IAC1B,wBAAwB,CAAC,GAAG,CAAC,CAAC;AAC9B;IACA;IACA,oBAAoB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,CAAC;IAClF,oBAAoB,QAAQ,GAAG,QAAQ,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;IACzD,oBAAoB,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IACvC,wBAAwB,CAAC,IAAI,EAAE,CAAC;IAChC,wBAAwB,QAAQ,IAAI,GAAG,CAAC;IACxC,qBAAqB;IACrB,oBAAoB,IAAI,MAAM,GAAG,EAAE,EAAE,MAAM,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IACxD,oBAAoB,OAAO,IAAI,EAAE;IACjC,wBAAwB,IAAI,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;IAC9D,4BAA4B,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IACnE,oCAAoC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnE,oCAAoC,MAAM,GAAG,QAAQ,GAAG,MAAM,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC;IACnF,4BAA4B,OAAO,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IACxG,yBAAyB;IACzB,wBAAwB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjE,wBAAwB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACtC,wBAAwB,MAAM,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC/C,wBAAwB,CAAC,IAAI,CAAC,CAAC;IAC/B,wBAAwB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACnC,qBAAqB;IACrB,gBAAgB,KAAK,OAAO;IAC5B,oBAAoB,aAAa,GAAG,aAAa,IAAI,UAAU,GAAG,EAAE;IACpE,wBAAwB,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACvD,qBAAqB,CAAC;AACtB;IACA,oBAAoB,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC7C;IACA,oBAAoB,IAAI,IAAI,GAAG,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7D,oBAAoB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;IACzC,wBAAwB,OAAO,GAAG,CAAC;AACnC;IACA;IACA,oBAAoB,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnD,oBAAoB,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,oBAAoB,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,oBAAoB,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IACvC,wBAAwB,KAAK,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AAC9C;IACA;IACA,oBAAoB,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACrD,oBAAoB,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;IACnD,oBAAoB,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;IACrD,oBAAoB,IAAI,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;IAC/G,oBAAoB,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,QAAQ,CAAC,QAAQ,EAAE,IAAI,QAAQ,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,SAAS,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7J,gBAAgB,KAAK,YAAY;IACjC,oBAAoB,aAAa,GAAG,aAAa,IAAI,SAAS,GAAG,EAAE;IACnE,wBAAwB,OAAO,KAAK,CAAC;IACrC,sBAAqB;IACrB,oBAAoB,OAAO,IAAI,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,6BAA6B,CAAC,CAAC;IAC1G,gBAAgB;IAChB,oBAAoB,aAAa,GAAG,aAAa,IAAI,UAAU,GAAG,EAAE;IACpE,wBAAwB,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IACvD,qBAAqB,CAAC;IACtB;IACA,oBAAoB,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC1C,aAAa;IACb,SAAS;AACT;IACA;IACA,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC3B,YAAY,IAAI,UAAU,GAAG,EAAE;IAC/B,oBAAoB,KAAK,GAAG,EAAE;IAC9B,oBAAoB,IAAI,GAAG,EAAE;IAC7B,oBAAoB,KAAK,GAAG,GAAG,CAAC,KAAK,IAAI,QAAQ;IACjD,oBAAoB,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;IACtC;IACA;IACA,YAAY,IAAI,CAAC,MAAM,EAAE;IACzB;IACA,gBAAgB,IAAI,EAAE,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAClD,gBAAgB,IAAI,EAAE,IAAI,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,KAAK,IAAI,EAAE;IACnE,oBAAoB,IAAI,GAAG,GAAG,CAAC;IAC/B,oBAAoB,EAAE,GAAG,GAAG,CAAC;IAC7B,iBAAiB;IACjB;IACA,gBAAgB,IAAI,EAAE,IAAI,GAAG;IAC7B,oBAAoB,UAAU,GAAG,EAAE,CAAC;IACpC;IACA,gBAAgB,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC7D;IACA,gBAAgB,IAAI,CAAC,IAAI,GAAG,EAAE;IAC9B;IACA,oBAAoB,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACrC,wBAAwB,KAAK,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC7C,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,KAAK,GAAG,CAAC,CAAC;IAClC,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,QAAQ,KAAK;IACzB,gBAAgB,KAAK,CAAC;IACtB,oBAAoB,UAAU,GAAG,EAAE,CAAC;IACpC;IACA,oBAAoB,IAAI,CAAC,GAAG,IAAI,IAAI,SAAS,GAAG,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAC1G;IACA,oBAAoB,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IACrE,oBAAoB,KAAK,GAAG,EAAE,CAAC;IAC/B,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,EAAE;IACvB,oBAAoB,KAAK,GAAG,GAAG,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IACjE,wBAAwB,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC/D,wBAAwB,GAAG,GAAG,IAAI,GAAG;IACrC,4BAA4B,GAAG,GAAG,EAAE,CAAC;IACrC,wBAAwB,OAAO,GAAG,CAAC;IACnC,qBAAqB,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAC9D,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,EAAE;IACvB,oBAAoB,KAAK,GAAG,GAAG,CAAC,cAAc,EAAE,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IACjE,wBAAwB,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC/D,wBAAwB,GAAG,GAAG,IAAI,GAAG;IACrC,4BAA4B,GAAG,GAAG,EAAE,CAAC;IACrC,wBAAwB,OAAO,GAAG,CAAC;IACnC,qBAAqB,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IAC9D,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,EAAE;IACvB,oBAAoB,KAAK,GAAG,GAAG,CAAC,cAAc,CAAC,UAAU,MAAM,EAAE;IACjE,wBAAwB,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;IAC7C;IACA;IACA,wBAAwB,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;IAC/G,4BAA4B,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC;IACjE,yBAAyB;IACzB,wBAAwB,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IACjD,qBAAqB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,EAAE;IACvB,oBAAoB,IAAI,EAAE,GAAG,GAAG,CAAC,aAAa;IAC9C,4BAA4B,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;AAClD;IACA;IACA,oBAAoB,IAAI,EAAE,KAAK,EAAE;IACjC,wBAAwB,KAAK,GAAG,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAC3F,oBAAoB,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE;IACzE,wBAAwB,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAClD,qBAAqB;AACrB;IACA,oBAAoB,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,IAAI,GAAG,KAAK,KAAK,EAAE;IACrH,wBAAwB,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAClD,qBAAqB;IACrB,oBAAoB,MAAM;IAC1B,aAAa;AACb;IACA,YAAY,IAAI,KAAK,KAAK,EAAE,EAAE;IAC9B,gBAAgB,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,MAAM,EAAE;IAC9E,oBAAoB,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAC7C,iBAAiB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,aAAa;IACb;IACA,YAAY,IAAI,KAAK,KAAK,EAAE,IAAI,GAAG,CAAC,KAAK,IAAI,gBAAgB,EAAE;IAC/D,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,gBAAgB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;IAC7C,oBAAoB,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,gBAAgB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;IAC7C,oBAAoB,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,gBAAgB,KAAK,GAAG,CAAC,GAAG,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC5D,aAAa;IACb;IACA;IACA,YAAY,IAAI,KAAK,IAAI,KAAK,KAAK,EAAE,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;IAC/D,gBAAgB,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAC1C,aAAa;AACb;IACA;IACA;IACA,YAAY,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,EAAE,MAAM,UAAU,IAAI,UAAU,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,CAAC;IACpG,wBAAwB,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,KAAK,EAAE,MAAM,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,CAAC;IAClG,uBAAuB,CAAC,MAAM,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;IAC5D,uBAAuB,GAAG,CAAC,KAAK,KAAK,WAAW,EAAE;AAClD;IACA,gBAAgB,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAC1C,aAAa;IACb;IACA,YAAY,GAAG,IAAI,KAAK,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,UAAU,IAAI,UAAU,CAAC,EAAE;IACtF,gBAAgB,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACtD,aAAa;IACb;IACA;IACA,YAAY,IAAI,CAAC,GAAG,IAAI,GAAG,UAAU,CAAC;IACtC;IACA,YAAY,IAAI,UAAU,IAAI,aAAa,CAAC,UAAU,CAAC;IACvD,gBAAgB,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAClC;IACA,YAAY,IAAI,KAAK,GAAG,CAAC;IACzB,gBAAgB,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;IAC1C;IACA;IACA,YAAY,IAAI,UAAU;IAC1B,gBAAgB,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAC5B;IACA,YAAY,IAAI,KAAK;IACrB,gBAAgB,KAAK,GAAG,QAAQ,CAAC,cAAc,GAAG,KAAK,CAAC;AACxD;IACA;IACA,YAAY,IAAI,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;IACvD,gBAAgB,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC;AAC1C;IACA,YAAY,IAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;AAC/B;IACA,YAAY,IAAI,GAAG,CAAC,MAAM;IAC1B,gBAAgB,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;AACpC;IACA,YAAY,OAAO,EAAE,GAAG,KAAK,CAAC;IAC9B,SAAS;IACT,aAAa,IAAI,QAAQ,CAAC,GAAG,CAAC,EAAE;IAChC,YAAY,IAAI,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,MAAM;IACvC,oBAAoB,CAAC,GAAG,EAAE,CAAC;IAC3B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IACtC,gBAAgB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACrD,YAAY,OAAO,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;IAC3C,SAAS;IACT,aAAa;IACb,YAAY,IAAI;IAChB,gBAAgB,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC;IACtC,aAAa;IACb,YAAY,OAAO,CAAC,EAAE;IACtB,gBAAgB,OAAO,EAAE,CAAC;IAC1B,aAAa;IACb,SAAS;IACT,KAAK;IACL;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,SAAS,YAAY,CAAC,GAAG,EAAE;IAC/B,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC;IACxB,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC;IACzB,QAAQ,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,OAAO,GAAG,EAAE;IACxC,gBAAgB,OAAO,GAAG,qCAAqC,CAAC;IAChE,QAAQ,OAAO,CAAC,GAAG,CAAC,EAAE;IACtB,YAAY,IAAI,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;IACnC,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC7C,YAAY,IAAI,SAAS,GAAG,QAAQ,GAAG,KAAK,CAAC;IAC7C,YAAY,IAAI,SAAS,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE;IAC/C,gBAAgB,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC5C,oBAAoB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,gBAAgB,CAAC,GAAG,KAAK,CAAC;IAC1B,aAAa;IACb,YAAY,CAAC,EAAE,CAAC;IAChB,SAAS;IACT;IACA,QAAQ,OAAO,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAC5C,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC;IACzB,SAAS,CAAC,CAAC;IACX,KACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,UAAU,CAAC,MAAM,EAAE;IAChC;IACA,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7B,KAAK;IACL;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,aAAa,GAAG,UAAU,iBAAiB,EAAE,MAAM,EAAE;IACpE,QAAQ,IAAI,iBAAiB,KAAK,MAAM,IAAI,CAAC,iBAAiB;IAC9D,YAAY,iBAAiB,GAAG,WAAW,CAAC,MAAM,CAAC;IACnD,QAAQ,IAAI,iBAAiB,KAAK,OAAO;IACzC,YAAY,iBAAiB,GAAG,CAAC,CAAC;IAClC,QAAQ,IAAI,KAAK,GAAG,iBAAiB,GAAG,CAAC;IACzC,gBAAgB,UAAU,GAAG,WAAW,CAAC,KAAK,CAAC;IAC/C,gBAAgB,MAAM,GAAG,UAAU,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,GAAG,UAAU,CAAC;IAC9E,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;IACN,IAAI,UAAU,CAAC,SAAS,GAAG;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,EAAE,UAAU,GAAG,EAAE,CAAC,EAAE;IAChC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IACxB,YAAY,GAAG,GAAG,GAAG,IAAI,UAAU,CAAC;IACpC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK;IACjC,gBAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9C;IACA,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;IACxD,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,KAAK,EAAE,UAAU,MAAM,EAAE;IACjC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK;IACjC,gBAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACjD,YAAY,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACpD,SAAS;IACT,QAAQ,OAAO,EAAE,YAAY;IAC7B,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;IACzC,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,QAAQ,EAAE,YAAY;AAC9B;IACA,YAAY,IAAI,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC,CAAC;AAC9D;IACA;IACA,YAAY,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;IAC/C,gBAAgB,UAAU,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,SAAS,CAAC;IAC9H,aAAa;IACb,iBAAiB,IAAI,SAAS,YAAY,UAAU,IAAI,QAAQ,CAAC,SAAS,CAAC,EAAE;IAC7E,gBAAgB,UAAU,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;IAC9C,aAAa;IACb,iBAAiB;IACjB,gBAAgB,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;IAChD,gBAAgB,GAAG,EAAE,CAAC;IACtB,aAAa;AACb;IACA,YAAY,IAAI,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAC5C;IACA,YAAY,IAAI,MAAM,GAAG,IAAI,UAAU,CAAC,KAAK,CAAC,cAAc,EAAE,YAAY;IAC1E,gBAAgB,OAAO,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IACjD,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC;IACtB;IACA,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,aAAa,EAAE,UAAU,IAAI,EAAE;IACvC,YAAY,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAClD,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,OAAO,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChD,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,UAAU,EAAE,YAAY;IAChC,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,QAAQ,CAAC;IACjE,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,SAAS,EAAE,YAAY;IAC/B,YAAY,OAAO,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,SAAS;AACT;IACA,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,IAAI;IAChB,gBAAgB,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;IACxC,oBAAoB,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;IAC9D,gBAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC9C,aAAa;IACb,YAAY,OAAO,CAAC,EAAE;IACtB,gBAAgB,OAAO,EAAE,CAAC;IAC1B,aAAa;IACb,SAAS;IACT;IACA,QAAQ,SAAS,EAAE,UAAU,IAAI,EAAE;IACnC,YAAY,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC;IACtC,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IACpD,YAAY,QAAQ,CAAC,SAAS,GAAG,SAAS,CAAC;IAC3C,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT;IACA,QAAQ,UAAU,EAAE,YAAY;IAChC,YAAY,OAAO,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,SAAS;IACT;IACA,QAAQ,YAAY,EAAE,YAAY;IAClC,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;IACxC,SAAS;IACT;IACA,QAAQ,GAAG,EAAE,UAAU,MAAM,EAAE,UAAU,EAAE;IAC3C,YAAY,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACzF,SAAS;IACT,QAAQ,SAAS,EAAE,UAAU,KAAK,EAAE,MAAM,EAAE;IAC5C,YAAY,IAAI,YAAY,CAAC,MAAM,CAAC;IACpC,gBAAgB,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IACvC,iBAAiB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACtC,gBAAgB,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACzC,YAAY,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACjF,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,MAAM,EAAE;IAC/B,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACjD,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,MAAM,EAAE;IACpC,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACtD,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,MAAM,EAAE;IACpC,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACtD,SAAS;IACT,QAAQ,MAAM,EAAE,UAAU,MAAM,EAAE;IAClC,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACpD,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,MAAM,EAAE;IAC/B,YAAY,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACjD,SAAS;IACT,QAAQ,MAAM,EAAE,YAAY;IAC5B,YAAY,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,SAAS;IACT,QAAQ,IAAI,EAAE,UAAU,QAAQ,EAAE,CAAC,EAAE;IACrC,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI;IAChC,gBAAgB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC9C,iBAAiB,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;IAC3C,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;IAC3D,oBAAoB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClE,aAAa;IACb;IACA,gBAAgB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3C,SAAS;IACT,QAAQ,EAAE,EAAE,UAAU,KAAK,EAAE;IAC7B,YAAY,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAChC,gBAAgB,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACvC,YAAY,IAAI;IAChB,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC;IAC/D,gBAAgB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACnC,aAAa;IACb,YAAY,OAAO,CAAC,EAAE;IACtB,gBAAgB,OAAO,KAAK,CAAC;IAC7B,aAAa;IAEb,SAAS;IACT,QAAQ,EAAE,EAAE,UAAU,KAAK,EAAE;IAC7B,YAAY,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAChC,gBAAgB,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACvC,YAAY,IAAI;IAChB,gBAAgB,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;IACzE,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrC,aAAa;IACb,YAAY,OAAO,CAAC,EAAE;IACtB,gBAAgB,OAAO,KAAK,CAAC;IAC7B,aAAa;IAEb,SAAS;IACT,QAAQ,EAAE,EAAE,UAAU,KAAK,EAAE;IAC7B,YAAY,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAChC,gBAAgB,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACvC,YAAY,IAAI;IAChB,gBAAgB,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC;IACzE,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACxC,aAAa;IACb,YAAY,OAAO,CAAC,EAAE;IACtB,gBAAgB,OAAO,KAAK,CAAC;IAC7B,aAAa;IAEb,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,KAAK,EAAE;IAC9B,YAAY,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IACpD,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,KAAK,EAAE;IAC9B,YAAY,OAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IACpD,SAAS;AACT;IACA,QAAQ,SAAS,EAAE,YAAY;IAC/B,YAAY,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;IACxD,SAAS;IACT,QAAQ,WAAW,EAAE,YAAY;IACjC,YAAY,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC1D,SAAS;IACT,QAAQ,WAAW,EAAE,SAAS,CAAC,EAAE;IACjC,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACnD,SAAS;IACT,QAAQ,QAAQ,EAAE,SAAS,QAAQ,EAAE;IACrC,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAClD,SAAS;IACT,KAAK,CAAC;IACN;IACA,IAAI,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;AAC5D;IACA;IACA,IAAI,SAAS,UAAU,CAAC,GAAG,EAAE;IAC7B,QAAQ,IAAI,EAAE,IAAI,YAAY,UAAU,CAAC;IACzC,YAAY,OAAO,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;AACvC;IACA,QAAQ,GAAG,GAAG,MAAM,CAAC,OAAO,GAAG,KAAK,WAAW,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AAC3D;IACA;IACA,QAAQ,IAAI,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;IACjC,YAAY,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAC3B;IACA,YAAY,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;IAC5C,SAAS,MAAM;IACf,YAAY,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAC1B,SAAS;AACT;IACA,QAAQ,IAAI,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;IAC1C,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IACrC,SAAS,MAAM;IACf,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC9B,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,UAAU,CAAC,SAAS,GAAG;IAC3B,QAAQ,cAAc,EAAE,UAAU,GAAG,EAAE;IACvC,YAAY,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7D,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,YAAY,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACrC;IACA,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,OAAO,EAAE,UAAU,GAAG,EAAE;IAChC;IACA,YAAY,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvC;IACA,YAAY,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IACnC,YAAY,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IACnC;IACA,YAAY,CAAC,GAAG,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAClD,YAAY,CAAC,GAAG,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;IACnD;IACA,YAAY,IAAI,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC;IACxC;IACA,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B;IACA,YAAY,IAAI,MAAM,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC5D;IACA,YAAY,IAAI,CAAC,QAAQ,GAAG,YAAY,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC;IACxD;IACA,YAAY,IAAI,KAAK,GAAG,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAC1D,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;AACxF;IACA,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,KAAK,EAAE,UAAU,GAAG,EAAE;IAC9B,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AAChC;IACA,YAAY,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC9B;IACA;IACA,YAAY,IAAI,GAAG,KAAK,CAAC;IACzB,gBAAgB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5C,iBAAiB;IACjB;IACA,gBAAgB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IAC/D;IACA,gBAAgB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IACtE;IACA,gBAAgB,IAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5C;IACA,gBAAgB,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;IAC1C,oBAAoB,EAAE,EAAE,CAAC;AACzB;IACA,gBAAgB,CAAC,CAAC,KAAK,GAAG,OAAO,GAAG,EAAE,CAAC;IACvC,aAAa;AACb;IACA,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,IAAI,EAAE,YAAY;IAC1B,YAAY,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,YAAY,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACjC,YAAY,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACvC,YAAY,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC/B,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,CAAC,EAAE;IAC/B,YAAY,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAChG;IACA,YAAY,IAAI,CAAC,CAAC;IAClB,YAAY,GAAG,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,QAAQ,CAAC,sBAAsB,EAAE;IACvE,gBAAgB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IAC/B,aAAa;IACb,kBAAkB;IAClB,gBAAgB,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC;IAChD,aAAa;IACb,YAAY,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,IAAI,CAAC,CAAC;IACrD,SAAS;IACT,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,YAAY,GAAG,UAAU,GAAG,EAAE;IAC7C,QAAQ,OAAO,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjD,KAAK,CAAC;IACN,IAAI,UAAU,CAAC,aAAa,GAAG,UAAU,GAAG,EAAE;IAC9C,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAC1C,QAAQ,OAAO,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACrC,KAAK,CAAC;IACN,IAAI,UAAU,CAAC,mBAAmB,GAAG,UAAU,GAAG,EAAE;IACpD,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAC1C,QAAQ,OAAO,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACrC,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,oBAAoB,GAAG,UAAU,GAAG,EAAE;IACrD,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACrC,QAAQ,OAAO,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;IAC3E,KAAK,CAAC;IACN,IAAI,UAAU,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACvC,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,QAAQ,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAC/C,QAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IAC7B;IACA,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE;IACnB,YAAY,KAAK,GAAG,KAAK,IAAI,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,SAAS,UAAU,CAAC,GAAG,EAAE;IAC7B,QAAQ,GAAG,EAAE,IAAI,YAAY,UAAU,CAAC;IACxC,YAAY,OAAO,IAAI,UAAU,CAAC,GAAG,CAAC,CAAC;AACvC;IACA,QAAQ,GAAG,GAAG,MAAM,CAAC,OAAO,GAAG,KAAK,WAAW,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;AAC3D;IACA;IACA,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;IAChC,YAAY,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;IAC3B;IACA,YAAY,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;IAC5C,SAAS;IACT,aAAa;IACb,YAAY,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;IAC1B,SAAS;AACT;IACA,QAAQ,GAAG,UAAU,CAAC,YAAY,CAAC,GAAG,CAAC,EAAE;IACzC,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;IACrC,SAAS;IACT,aAAa;IACb,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC9B,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,UAAU,CAAC,SAAS,GAAG;IAC3B,QAAQ,cAAc,EAAE,SAAS,GAAG,EAAE;IACtC,YAAY,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7D,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAClC,YAAY,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACrC;IACA,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,OAAO,EAAE,SAAS,GAAG,EAAE;IAC/B;IACA,YAAY,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvC;IACA,YAAY,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IACnC,YAAY,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IACnC;IACA,YAAY,CAAC,GAAG,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAClD,YAAY,CAAC,GAAG,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;IACnD;IACA,YAAY,IAAI,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC;IACxC;IACA,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxB;IACA,YAAY,IAAI,MAAM,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC5D;IACA,YAAY,IAAI,CAAC,QAAQ,GAAG,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IACpD;IACA,YAAY,IAAI,KAAK,GAAG,UAAU,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAC1D,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,CAAC,CAAC;IACpF;IACA;IACA,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;AACrD;IACA,YAAY,IAAI,CAAC,IAAI,GAAG,GAAG,KAAK,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;IACrD;IACA,YAAY,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;IACzB;IACA,YAAY,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5B;IACA,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,KAAK,EAAE,SAAS,GAAG,EAAE;IAC7B,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AAChC;IACA,YAAY,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;IAC9B;IACA;IACA,YAAY,GAAG,GAAG,KAAK,CAAC;IACxB,gBAAgB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5C,iBAAiB;IACjB;IACA,gBAAgB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7D;IACA,gBAAgB,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;IAClE;IACA,gBAAgB,IAAI,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5C;IACA,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;IACzC,oBAAoB,EAAE,EAAE,CAAC;AACzB;IACA,gBAAgB,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,EAAE,CAAC;IACrC,aAAa;AACb;IACA,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,IAAI,EAAE,WAAW;IACzB,YAAY,IAAI,CAAC,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,YAAY,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACjC,YAAY,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACvC,YAAY,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC/B,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,QAAQ,EAAE,SAAS,CAAC,EAAE;IAC9B,YAAY,IAAI,MAAM,CAAC;IACvB;IACA,YAAY,GAAG,QAAQ,CAAC,gCAAgC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE;IAClG,gBAAgB,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC;IAClC,oBAAoB,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACzC;IACA,oBAAoB,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC;IACxC,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,WAAW,GAAG,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9H,gBAAgB,MAAM,GAAG,IAAI,CAAC,QAAQ,KAAK,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC/E,aAAa;IACb;IACA,YAAY,OAAO,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;IACzD,SAAS;IACT,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,YAAY,GAAG,SAAS,GAAG,EAAE;IAC5C,QAAQ,OAAO,uBAAuB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjD,KAAK,CAAC;IACN,IAAI,UAAU,CAAC,aAAa,GAAG,SAAS,GAAG,EAAE;IAC7C,QAAQ,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAC1C,QAAQ,OAAO,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACrC,KAAK,CAAC;IACN,IAAI,UAAU,CAAC,mBAAmB,GAAG,SAAS,GAAG,EAAE;IACnD,MAAM,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IACxC,MAAM,OAAO,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACnC,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,oBAAoB,GAAG,SAAS,GAAG,EAAE;IACpD,MAAM,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACnC,MAAM,OAAO,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;IACvE,KAAK,CAAC;AACN;AACA;IACA;IACA,IAAI,SAAS,IAAI,CAAC,CAAC,EAAE;IACrB,QAAQ,IAAI,CAAC,YAAY,IAAI;IAC7B,YAAY,OAAO,CAAC,CAAC;IACrB,QAAQ,IAAI,CAAC,KAAK,SAAS;IAC3B,YAAY,OAAO,IAAI,CAAC;IACxB,QAAQ,IAAI;IACZ,YAAY,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAC1B,gBAAgB,IAAI;IACpB,oBAAoB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACzC,oBAAoB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACzC,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,EAAE;IAC1B,oBAAoB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,iBAAiB;IACjB,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,CAAC,EAAE;IAClB,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,SAAS;AACT;IACA,KAAK;IACL;IACA,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;IAC/B,QAAQ,IAAI,CAAC,YAAY,IAAI;IAC7B,YAAY,OAAO,CAAC,CAAC;IACrB,QAAQ,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACzB,QAAQ,IAAI,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;IACzC,QAAQ,IAAI,MAAM;IAClB,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC1C,QAAQ,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B;IACA,QAAQ,IAAI,MAAM;IAClB,YAAY,IAAI,CAAC,MAAM,EAAE,CAAC;IAC1B,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;IACN,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;IAC/B,QAAQ,QAAQ,CAAC,YAAY,IAAI,EAAE;IACnC,KAAK,CAAC;IACN,IAAI,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACjC,QAAQ,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IAC9B,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACjC,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACjC,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;IACN,IAAI,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;IAC/B,QAAQ,IAAI,IAAI,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;IACjD,gBAAgB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IACtC,gBAAgB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;IACnC,gBAAgB,GAAG,GAAG,CAAC;IACvB,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,EAAE,MAAM,CAAC;IAC3C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAClC,YAAY,GAAG,IAAI,GAAG,CAAC;IACvB,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC/B,KAAK,CAAC;IACN,IAAI,IAAI,CAAC,SAAS,GAAG;IACrB,QAAQ,QAAQ,EAAE,UAAU,CAAC,EAAE;IAC/B,YAAY,IAAI,IAAI,CAAC,KAAK,EAAE,EAAE;IAC9B,gBAAgB,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;IACjC,aAAa;IACb,YAAY,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC3B,gBAAgB,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IACpC,aAAa;AACb;IACA,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IACjC,YAAY,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1C,YAAY,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AAC1C;IACA,YAAY,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;IAChC,SAAS;IACT,QAAQ,MAAM,EAAE,UAAU,CAAC,EAAE;IAC7B,YAAY,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3B,gBAAgB,MAAM,IAAI,cAAc,CAAC,+BAA+B,CAAC,CAAC;IAC1E,YAAY,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC;IACxE,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,CAAC,EAAE;IAC/B,YAAY,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;IACrD,SAAS;IACT,QAAQ,GAAG,EAAE,YAAY;IACzB,YAAY,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IAC5D,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACrC,YAAY,IAAI,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE;IAC/B,gBAAgB,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC,aAAa;IACb,iBAAiB;IACjB,gBAAgB,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3D,gBAAgB,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACxC,aAAa;AACb;IACA,YAAY,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;IAChC,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE;IAChC,oBAAoB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IAClC;IACA,YAAY,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1C,YAAY,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1C,YAAY,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7C,YAAY,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7C,YAAY,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACrC,YAAY,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;IAChC,SAAS;IACT,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AACrD;IACA,YAAY,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC5C,YAAY,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC5C,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,KAAK,EAAE,YAAY;IAC3B,YAAY,IAAI,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC;IAC/B,YAAY,CAAC,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzC,YAAY,CAAC,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzC,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,OAAO,EAAE,UAAU,IAAI,EAAE;IACjC,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;IACxD,YAAY,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IAC3C,gBAAgB,OAAO,GAAG,CAAC;IAC3B,aAAa;IACb;IACA,YAAY,IAAI,GAAG,IAAI,IAAI,QAAQ,CAAC,SAAS,CAAC;IAC9C,YAAY,IAAI,EAAE,CAAC;IACnB,YAAY,IAAI,IAAI,GAAG,EAAE;IACzB,oBAAoB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE;IACtC,oBAAoB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;IACjC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IAC3C,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACnC,wBAAwB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD;IACA,gBAAgB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7B,gBAAgB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/B,oBAAoB,MAAM;IAC1B,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAChC,aAAa;IACb,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IACrC,YAAY,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;IACnC,gBAAgB,OAAO,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC/C,aAAa;AACb;IACA,YAAY,IAAI,CAAC,KAAK,IAAI,EAAE;IAC5B,gBAAgB,IAAI,EAAE,GAAG,EAAE,CAAC;IAC5B;IACA,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAC1C,oBAAoB,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC3C;IACA,gBAAgB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpD,aAAa;AACb;IACA,YAAY,IAAI,GAAG,GAAG,KAAK,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7D,YAAY,OAAO,IAAI,GAAG,GAAG,CAAC;IAC9B,SAAS;IACT,QAAQ,SAAS,EAAE,UAAU,IAAI,EAAE;IACnC,YAAY,IAAI,IAAI,IAAI,QAAQ,CAAC,SAAS,EAAE;IAC5C,gBAAgB,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC1C,aAAa;IACb;IACA,gBAAgB,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IAC3C,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,CAAC,EAAE;IAC/B,YAAY,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACxE,SAAS;IACT,QAAQ,MAAM,EAAE,UAAU,CAAC,EAAE;IAC7B,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB,gBAAgB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACrC;IACA,YAAY,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,SAAS;IACT,QAAQ,SAAS,EAAE,UAAU,CAAC,EAAE;IAChC,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB,gBAAgB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACrC;IACA,YAAY,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,SAAS;IACT;IACA,QAAQ,WAAW,EAAE,UAAU,CAAC,EAAE;IAClC,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB,gBAAgB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACrC;IACA,YAAY,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACzD,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtD,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,CAAC,EAAE;IAC/B,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACzB,gBAAgB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACrC;IACA,YAAY,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjC,SAAS;IACT,QAAQ,SAAS,EAAE,YAAY;IAC/B,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtC,SAAS;IACT,QAAQ,MAAM,EAAE,YAAY;IAC5B,YAAY,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,MAAM,EAAE,YAAY;IAC5B,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC;IAC7B;IACA,YAAY,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACrC,gBAAgB,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;IACvD,gBAAgB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IAC1C,gBAAgB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;IAC7B,gBAAgB,IAAI,UAAU;IAC9B,oBAAoB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,aAAa;AACb;IACA,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,KAAK,EAAE,YAAY;IAC3B,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5D,SAAS;IACT,QAAQ,IAAI,EAAE,YAAY;IAC1B,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAClD,SAAS;IACT,QAAQ,GAAG,EAAE,YAAY;IACzB,YAAY,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IACtC,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACxF,SAAS;IACT,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IAC/G,SAAS;IACT,QAAQ,OAAO,EAAE,YAAY;IAC7B;IACA,YAAY,IAAI,QAAQ,CAAC,OAAO;IAChC,gBAAgB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC5F,YAAY,OAAO,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;IACvC,SAAS;IACT,QAAQ,UAAU,EAAE,YAAY;IAChC,YAAY,OAAO,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;IACxC,SAAS;IACT,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,MAAM,CAAC,GAAG,EAAE;IACzB,QAAQ,IAAI,UAAU,GAAG,GAAG,KAAK,UAAU,CAAC;IAC5C;IACA,QAAQ,IAAI,EAAE,IAAI,YAAY,MAAM,CAAC,EAAE;IACvC,YAAY,OAAO,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;IACnC,SAAS;IAET;IACA,QAAQ,IAAI,gCAAgC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;IACxD,YAAY,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC3B,YAAY,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;IACpC,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5C,SAAS;IACT;IACA,aAAa;IACb,YAAY,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC3B,YAAY,YAAY,CAAC,GAAG,CAAC,CAAC;IAC9B,YAAY,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IAC7B,YAAY,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1C,YAAY,IAAI,CAAC,SAAS,GAAG,GAAG,KAAK,QAAQ,CAAC,SAAS,CAAC;IACxD,YAAY,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IACzC,SAAS;AACT;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACjC;IACA;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL;IACA;IACA;IACA;IACA,IAAI,MAAM,CAAC,SAAS,GAAG,YAAY;IACnC,QAAQ,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC/C,QAAQ,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC;IAC3B,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,CAAC,QAAQ,GAAG,UAAU,QAAQ,EAAE;IAC1C,QAAQ,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACvC,QAAQ,IAAI,QAAQ,KAAK,CAAC,CAAC;IAC3B,YAAY,CAAC,CAAC,MAAM,EAAE,CAAC;IACvB,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;IACN,IAAI,MAAM,CAAC,KAAK,GAAG,UAAU,KAAK,EAAE,KAAK,EAAE;IAC3C,QAAQ,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;IACvC,QAAQ,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;IAC7B,QAAQ,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;IAC5B,QAAQ,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;IACN;IACA,IAAI,MAAM,CAAC,UAAU,GAAG,UAAU,MAAM,EAAE,GAAG,EAAE;IAC/C,QAAQ,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;IAC7B,QAAQ,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,KAAK,MAAM,CAAC,QAAQ,EAAE,IAAI,GAAG,CAAC,EAAE;IACjE,YAAY,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC3C,YAAY,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxD,YAAY,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACpE,YAAY,MAAM,GAAG,CAAC,CAAC;IACvB,YAAY,IAAI,GAAG;IACnB,gBAAgB,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3D,SAAS;AACT;IACA,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;IACN,IAAI,MAAM,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACjC,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/B,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/B,QAAQ,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/F,KAAK,CAAC;IACN;IACA,IAAI,MAAM,CAAC,gBAAgB,GAAG,UAAU,MAAM,EAAE;IAChD,QAAQ,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,CAAC;IAC7B,QAAQ,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC/B,QAAQ,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC/B,QAAQ,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAC/B,QAAQ,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/E,QAAQ,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAC1B,KAAK,CAAC;IACN;IACA,IAAI,MAAM,CAAC,YAAY,GAAG,UAAU,MAAM,EAAE;IAC5C,QAAQ,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;IACjC,YAAY,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,YAAY,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACrD,YAAY,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IACpE,YAAY,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE;IACnC,gBAAgB,OAAO,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAC9C,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;IACN;IACA,IAAI,MAAM,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE,KAAK,EAAE;IAC5C,QAAQ,KAAK,GAAG,KAAK,KAAK,SAAS,GAAG,CAAC,GAAG,KAAK,CAAC;IAChD,QAAQ,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC,CAAC;IAC1D,KAAK,CAAC;IACN,IAAI,MAAM,CAAC,SAAS,GAAG;IACvB,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrE,SAAS;IACT;IACA,QAAQ,OAAO,EAAE,YAAY;IAC7B,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;IACnC,gBAAgB,IAAI,MAAM,GAAG,EAAE;IAC/B,wBAAwB,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IACtD,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACvC,oBAAoB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;IACpC;IACA,oBAAoB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAClD,wBAAwB,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IAC5C,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,iBAAiB,CAAC,CAAC;IACnB,gBAAgB,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;AACrD;IACA;IACA;IACA,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE;IACjD,wBAAwB,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE;IACzD,wBAAwB,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACpD;IACA;IACA,gBAAgB,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,gBAAgB,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;AACtC;IACA,gBAAgB,KAAK,IAAI,CAAC,IAAI,QAAQ,EAAE;IACxC,oBAAoB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,oBAAoB,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC1C,wBAAwB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChE,wBAAwB,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,qBAAqB;AACrB;IACA,oBAAoB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;IAClG,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;IACxC,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACvC,oBAAoB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IAClC,oBAAoB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAClD,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,iBAAiB,CAAC,CAAC;AACnB;IACA,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,gBAAgB,EAAE,CAAC,KAAK,GAAG,GAAG,CAAC;IAC/B,gBAAgB,EAAE,CAAC,UAAU,GAAG,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;AAChE;IACA,gBAAgB,OAAO,EAAE,CAAC;IAC1B,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IAChC,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,MAAM,EAAE,UAAU,MAAM,EAAE;IAClC,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACjC,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;IAC5C,YAAY,OAAO,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IACjF,uBAAuB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC;IAChE,uBAAuB,IAAI,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC;IACnD,SAAS;IACT,QAAQ,GAAG,EAAE,WAAW;IACxB,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IACjC,YAAY,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;IAC/B,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT;IACA,QAAQ,EAAE,EAAE,UAAU,MAAM,EAAE;IAC9B,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACjC,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;IAC5C,YAAY,OAAO,IAAI,CAAC,UAAU,EAAE,IAAI,MAAM,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC9G,SAAS;IACT;IACA,QAAQ,GAAG,EAAE,UAAU,MAAM,EAAE;IAC/B,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACjC,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;IAC5C,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACtC,oBAAoB,IAAI,CAAC,UAAU,EAAE,IAAI,MAAM,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC/G,SAAS;IACT;IACA,QAAQ,EAAE,EAAE,UAAU,MAAM,EAAE;IAC9B,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACjC,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;IAC5C,YAAY,OAAO,IAAI,CAAC,UAAU,EAAE,IAAI,MAAM,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC3G,SAAS;IACT;IACA,QAAQ,GAAG,EAAE,UAAU,MAAM,EAAE;IAC/B,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACjC,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC;IAC5C,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACtC,oBAAoB,IAAI,CAAC,UAAU,EAAE,IAAI,MAAM,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC5G,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,MAAM,EAAE,UAAU,YAAY,EAAE;IACxC,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK;IAC9B,oBAAoB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IACnC;IACA,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;IAClC,gBAAgB,OAAO,KAAK,CAAC;IAC7B;IACA,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;IAC3D,gBAAgB,OAAO,IAAI,CAAC;IAC5B,YAAY,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IACvC,YAAY,IAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;IAC/C;IACA,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC;IACA,gBAAgB,IAAI,CAAC,CAAC;IACtB,oBAAoB,OAAO,IAAI,CAAC;IAChC,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC5C,oBAAoB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9C;IACA,oBAAoB,IAAI,GAAG,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE;IACrE,wBAAwB,OAAO,KAAK,CAAC;IACrC,oBAAoB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC;IACjE,wBAAwB,OAAO,KAAK,CAAC;IACrC,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb;IACA;IACA,YAAY,IAAI,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,YAAY,EAAE;IAChE;IACA,gBAAgB,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC;IACpD,oBAAoB,OAAO,KAAK,CAAC;IACjC;IACA,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC5C;IACA;IACA,oBAAoB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC;IAC7D,wBAAwB,OAAO,KAAK,CAAC;IACrC,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb;IACA,gBAAgB,OAAO,KAAK,CAAC;AAC7B;IACA;IACA;IACA;IACA;IACA,SAAS;IACT;IACA,QAAQ,QAAQ,EAAE,UAAU,CAAC,EAAE,SAAS,EAAE;IAC1C,YAAY,IAAI,MAAM,CAAC;IACvB,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC;IAC3E,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IACrE,iBAAiB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;IAC3D,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACvC,oBAAoB,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC;IAC5C,wBAAwB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC/D,iBAAiB,CAAC,CAAC;IACnB,gBAAgB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAChF,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;IAC5D,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACrD,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;IAC3D,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACvC,oBAAoB,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IACxC,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IAC1C,wBAAwB,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9E,wBAAwB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAClD,qBAAqB;IACrB,iBAAiB,CAAC,CAAC;IACnB;IACA,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACpC,oBAAoB,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzD,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE;IACxE,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACrD,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC5D,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACrD,aAAa;IACb;IACA;IACA;IACA;IACA;IACA;IACA,gBAAgB,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AACtC;AACA;IACA,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT;IACA,QAAQ,OAAO,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE;IACnC,YAAY,GAAG,GAAG,GAAG,IAAI;IACzB,gBAAgB,GAAG,EAAE,EAAE;IACvB,gBAAgB,GAAG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE;IACvC,oBAAoB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1C,oBAAoB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;IACxD,iBAAiB;IACjB,aAAa,CAAC;IACd,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAC/B;IACA,YAAY,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC7C,gBAAgB,GAAG,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACjE,aAAa;IACb,iBAAiB,IAAI,CAAC,KAAK,EAAE,EAAE;IAC/B,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxC,wBAAwB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC9D,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;IACrD,gBAAgB,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,aAAa;IACb,iBAAiB,IAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;IACnD,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAC1C,oBAAoB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9C,iBAAiB,CAAC,CAAC;IACnB,aAAa;IACb,iBAAiB,IAAI,CAAC,KAAK,EAAE,EAAE;IAC/B;IACA;IACA,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACvC,oBAAoB,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IACtC,iBAAiB,CAAC,CAAC;IACnB,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IACvC,gBAAgB,MAAM,IAAI,iBAAiB,CAAC,kCAAkC,CAAC,CAAC;IAChF,aAAa;IACb,iBAAiB;IACjB,gBAAgB,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IACzC,aAAa;IACb;IACA,YAAY,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;IAC1B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;IAC/C,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3B,oBAAoB,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT;IACA,QAAQ,OAAO,EAAE,UAAU,CAAC,EAAE;IAC9B,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC;IAClE,YAAY,IAAI,QAAQ,IAAI,CAAC,CAAC,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC9D,gBAAgB,OAAO,IAAI,CAAC;IAC5B,YAAY,IAAI,IAAI,CAAC,OAAO,EAAE;IAC9B,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC5C,oBAAoB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClD,wBAAwB,OAAO,IAAI,CAAC;IACpC,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAC7B,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACtD,YAAY,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACtD,YAAY,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC;IAC9C,gBAAgB,GAAG,CAAC,gDAAgD,CAAC,CAAC;IACtE,YAAY,IAAI,QAAQ,GAAG,KAAK;IAChC,oBAAoB,oBAAoB,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACjE,oBAAoB,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;IAC/C,oBAAoB,MAAM,CAAC;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC,EAAE;IACxH;IACA,gBAAgB,IAAI,oBAAoB,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IAClF,oBAAoB,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;IACtC,wBAAwB,MAAM,GAAG,CAAC,CAAC;IACnC,qBAAqB;IACrB,yBAAyB,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACzD,wBAAwB,MAAM,GAAG,CAAC,CAAC;IACnC,wBAAwB,QAAQ,GAAG,IAAI,CAAC;IACxC,qBAAqB;IACrB,oBAAoB,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAC5D,wBAAwB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,iBAAiB;IACjB,aAAa;IACb;IACA,iBAAiB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,aAAa,KAAK,EAAE,EAAE;IACrE,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACvC,oBAAoB,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACxD;IACA,iBAAiB,CAAC,CAAC;IACnB,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;IACzC,gBAAgB,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;IAC9F,oBAAoB,IAAI,IAAI,GAAG,UAAU,KAAK,EAAE,MAAM,EAAE;IACxD,wBAAwB,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE;IACrD,4BAA4B,IAAI,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACvD;IACA,4BAA4B,IAAI,GAAG,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;IAC5F,gCAAgC,OAAO,IAAI,CAAC;IAC5C,yBAAyB;IACzB,wBAAwB,OAAO,KAAK,CAAC;IACrC,qBAAqB,CAAC;IACtB;IACA,oBAAoB,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;IAC7C,wBAAwB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACrD,4BAA4B,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IAChD,qBAAqB;IACrB,oBAAoB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnE,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,oBAAoB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IAC3C,wBAAwB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5D,qBAAqB,CAAC,CAAC;IACvB,iBAAiB;IACjB,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;IACxC;IACA,gBAAgB,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvD,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;IACxC,gBAAgB,IAAI,KAAK,GAAG,EAAE,CAAC;IAC/B,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC3D,oBAAoB,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3C,oBAAoB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;IACtC,wBAAwB,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3C,oBAAoB,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9C,iBAAiB;IACjB,gBAAgB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAC1D,aAAa;IACb;IACA,YAAY,IAAI,MAAM,EAAE;IACxB,gBAAgB,IAAI,CAAC,QAAQ,EAAE;IAC/B;IACA,oBAAoB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3F;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC9C,iBAAiB;AACjB;IACA;IACA,gBAAgB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClE;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb;IACA,YAAY,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IAChC,SAAS;IACT,QAAQ,UAAU,EAAE,YAAY;IAChC,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC;IAChC,gBAAgB,OAAO,IAAI,CAAC;IAC5B,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;IACnC,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO;IAC1C,oBAAoB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC;IACnD,wBAAwB,OAAO,KAAK,CAAC;IACrC,aAAa;IACb;IACA,gBAAgB,OAAO,KAAK,CAAC;IAC7B,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,IAAI,EAAE,YAAY;IAC1B,YAAY,OAAO,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC;IAC3D,SAAS;IACT,QAAQ,IAAI,EAAE,YAAY;IAC1B,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;IAC1C,SAAS;IACT,QAAQ,GAAG,EAAE,YAAY;IACzB,YAAY,OAAO,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC;IACtC,SAAS;IACT,QAAQ,MAAM,EAAE,YAAY;IAC5B,YAAY,OAAO,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC;IACvC,SAAS;IACT,QAAQ,UAAU,EAAE,UAAU,SAAS,EAAE,aAAa,EAAE;IACxD,YAAY,GAAG,aAAa,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;IACnD,gBAAgB,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC3C,oBAAoB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;IACvD,wBAAwB,OAAO,IAAI,CAAC;IACpC,iBAAiB;IACjB,aAAa;IACb;IACA,YAAY,IAAI,SAAS,KAAK,KAAK,KAAK,IAAI,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC;IAClE,gBAAgB,OAAO,IAAI,CAAC;IAC5B;IACA,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;IAChD,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC3D,oBAAoB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC;IAC3D,wBAAwB,OAAO,KAAK,CAAC;IACrC,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb;IACA,YAAY,GAAG,SAAS;IACxB,gBAAgB,OAAO,eAAe,CAAC,IAAI,CAAC,CAAC;IAC7C,YAAY,OAAO,IAAI,CAAC,KAAK,KAAK,UAAU,CAAC;IAC7C,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,WAAW,EAAE,YAAY;IACjC,YAAY,IAAI,IAAI,CAAC,SAAS;IAC9B,gBAAgB,OAAO,IAAI,CAAC;IAC5B,iBAAiB,IAAI,IAAI,CAAC,OAAO,EAAE;IACnC,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO;IAC1C,oBAAoB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE;IACrD,wBAAwB,OAAO,IAAI,CAAC;IACpC,aAAa;IACb,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;IACnC,gBAAgB,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IACpC,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,SAAS;IACnC,gBAAgB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACrC,iBAAiB,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;IACzC,gBAAgB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACvC,oBAAoB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IACzD,iBAAiB,CAAC,CAAC;IACnB,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,WAAW,EAAE;IACvC,gBAAgB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACrC,YAAY,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IAChC,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,WAAW,EAAE;IACtD,gBAAgB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnD,YAAY,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;IACpC,gBAAgB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACvC,oBAAoB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IACzD,iBAAiB,CAAC,CAAC;IACnB,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE;IACjC,gBAAgB,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACzD,YAAY,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACjC,SAAS;IACT,QAAQ,SAAS,EAAE,YAAY;IAC/B,YAAY,OAAO,IAAI,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IACpE,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,GAAG,EAAE;IACjC,YAAY,IAAI,GAAG,EAAE;IACrB,gBAAgB,IAAI,IAAI,CAAC,UAAU,EAAE;IACrC,oBAAoB,OAAO,IAAI,CAAC;IAChC,gBAAgB,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;IACtC,oBAAoB,IAAI,IAAI,CAAC,KAAK,KAAK,GAAG;IAC1C,wBAAwB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpD;IACA,wBAAwB,OAAO,IAAI,CAAC;IACpC,iBAAiB;AACjB;IACA,gBAAgB,IAAI,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAChE,oBAAoB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAChD,wBAAwB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;IAC1D,4BAA4B,OAAO,KAAK,CAAC;IACzC,qBAAqB;IACrB,oBAAoB,OAAO,IAAI,CAAC;IAChC,iBAAiB;AACjB;IACA,gBAAgB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;IAC1D,oBAAoB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC3D,gBAAgB,OAAO,KAAK,CAAC;IAC7B,aAAa;IACb;IACA,gBAAgB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5C,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,gBAAgB,EAAE,UAAU,KAAK,EAAE;IAC3C,YAAY,IAAI,OAAO,KAAK,KAAK,QAAQ;IACzC,gBAAgB,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;IAChC,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACrE,gBAAgB,OAAO,IAAI,CAAC;IAC5B,YAAY,IAAI,IAAI,CAAC,OAAO,EAAE;IAC9B,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC5C,oBAAoB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,KAAK,CAAC;IAC/D,wBAAwB,OAAO,IAAI,CAAC;IACpC,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT,QAAQ,aAAa,EAAE,UAAU,EAAE,EAAE;IACrC;IACA,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7D,gBAAgB,OAAO,IAAI,CAAC;AAC5B;IACA,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;AAChC;IACA,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE;IACrD,gBAAgB,IAAI,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC;IACtC,gBAAgB,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,EAAE;IACxD,oBAAoB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACpC,iBAAiB;AACjB;IACA,gBAAgB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvE;IACA,gBAAgB,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IAC3D;IACA,oBAAoB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAClE,oBAAoB,IAAI,CAAC,QAAQ,EAAE,CAAC;IACpC,oBAAoB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACpC,iBAAiB;IACjB,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;IACvC,oBAAoB,EAAE,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;IACxC,oBAAoB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IACrC,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChD,aAAa;AACb;IACA,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,CAAC,EAAE,UAAU,EAAE;IAC3C;IACA,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7D,gBAAgB,OAAO,IAAI,CAAC;IAC5B,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IACnD,gBAAgB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC;IAChD,gBAAgB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC1C,gBAAgB,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;IACtC,oBAAoB,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3D,oBAAoB,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC;IAC5C,iBAAiB;IACjB;IACA,oBAAoB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACnC,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,UAAU,GAAG,KAAK,CAAC;IACvC,gBAAgB,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACjC,oBAAoB,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;IACvC;IACA,wBAAwB,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC;AACzC;IACA,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,UAAU,GAAG,IAAI,CAAC;IAC1C,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,IAAI,KAAK,GAAG,UAAU,GAAG,EAAE,GAAG,CAAC,CAAC;IAChD,gBAAgB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC/B,gBAAgB,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK;IAC7C,oBAAoB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;IACpD,aAAa;AACb;IACA,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,SAAS,EAAE,YAAY;IAC/B,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE;IACjC,gBAAgB,QAAQ,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC3D,YAAY,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAClC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,KAAK,EAAE,UAAU,CAAC,EAAE;IAC5B,YAAY,IAAI,KAAK,GAAG,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;IAC1C;IACA,oBAAoB,UAAU,GAAG;IACjC,wBAAwB,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC;IAC9H,oBAAoB,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC;IAC7C,YAAY,IAAI,IAAI,CAAC,OAAO,EAAE;IAC9B,gBAAgB,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;IACnC,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC5C,oBAAoB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC/D,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,gBAAgB,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;IACvD,oBAAoB,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;IAC7C,YAAY,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IACvD;IACA,YAAY,IAAI,IAAI,CAAC,YAAY;IACjC,gBAAgB,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;AACvD;IACA,YAAY,IAAI,IAAI,CAAC,MAAM;IAC3B,gBAAgB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC3C;IACA,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,gBAAgB,EAAE,UAAU,QAAQ,EAAE;IAC9C,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACpG,YAAY,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAChD,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE;IAClC,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;IAC/B,gBAAgB,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAChD,aAAa;IACb,iBAAiB;IACjB,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC5C,oBAAoB,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9C,oBAAoB,IAAI,GAAG,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE;IAClD,wBAAwB,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE;IACnD,4BAA4B,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1D,yBAAyB;IACzB,qBAAqB;IACrB;IACA,wBAAwB,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC9C,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,EAAE,YAAY;IAC7B,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC;IAChC,gBAAgB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;IACjD,iBAAiB,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;IACvC,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,UAAU,KAAK,CAAC,EAAE;IAC5C,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IAC9C,aAAa;IACb,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,QAAQ,EAAE,UAAU,QAAQ,EAAE,GAAG,EAAE;IAC3C;IACA,YAAY,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;IACxC,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IAC/B,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ;IACvC,gBAAgB,OAAO,IAAI,CAAC;IAC5B,YAAY,IAAI,IAAI,CAAC,OAAO,EAAE;IAC9B,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC5C,oBAAoB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC/D,wBAAwB,OAAO,IAAI,CAAC;IACpC,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,aAAa,KAAK,EAAE,EAAE;IACvD,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC3D,oBAAoB,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC;IAC5D,wBAAwB,OAAO,IAAI,CAAC;IACpC,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,IAAI,CAAC,KAAK,EAAE,EAAE;IAC1B;IACA,gBAAgB,IAAI,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE;IAC/D,oBAAoB,OAAO,IAAI,CAAC;IAChC,iBAAiB;IACjB,gBAAgB,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ;IAC3C,oBAAoB,OAAO,IAAI,CAAC;AAChC;IACA,aAAa;AACb;IACA,YAAY,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC;IAC3C,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,MAAM,EAAE,YAAY;IAC5B,YAAY,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;IACrC,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE;IACtD,gBAAgB,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC5C,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,MAAM,EAAE,UAAU,UAAU,EAAE,GAAG,EAAE;IAC3C;IACA,YAAY,IAAI,CAAC,UAAU;IAC3B,gBAAgB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;IAC3D;IACA,YAAY,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACtC,gBAAgB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACpC,aAAa;IACb,iBAAiB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,GAAG,EAAE;IAC/C,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACvC,oBAAoB,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;IACtC,iBAAiB,CAAC,CAAC;IACnB,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC;IAClD,oBAAoB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACxC,aAAa;IACb,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,oBAAoB,EAAE,UAAU,GAAG,EAAE;IAC7C,YAAY,IAAI,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9E,YAAY,IAAI,IAAI,CAAC,OAAO,IAAI,MAAM,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAC3F,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC5C,oBAAoB,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5C,oBAAoB,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC1E,oBAAoB,CAAC,CAAC,oBAAoB,EAAE,CAAC;IAC7C,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACxC,aAAa;AACb;IACA,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,kBAAkB,EAAE,YAAY;IACxC,YAAY,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACvC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IACnC,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC5C,oBAAoB,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC5C,oBAAoB,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,EAAE;IACxC,wBAAwB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClF,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAChC,aAAa;IACb,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE;IAC7C,YAAY,IAAI,KAAK,GAAG,EAAE,EAAE;IAC5B;IACA,gBAAgB,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AACtC;IACA;IACA,gBAAgB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AAClC;IACA,gBAAgB,IAAI,KAAK,KAAK,EAAE,EAAE;IAClC;IACA;IACA;IACA,oBAAoB,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC1C,iBAAiB;IACjB,qBAAqB;IACrB;IACA,oBAAoB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5C,iBAAiB;AACjB;IACA,gBAAgB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;IACvC,oBAAoB,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACxC,oBAAoB,OAAO,IAAI,CAAC,IAAI,CAAC;IACrC,oBAAoB,OAAO,IAAI,CAAC,KAAK,CAAC;IACtC,iBAAiB;AACjB;IACA;IACA;IACA,gBAAgB,IAAI,IAAI,CAAC,WAAW;IACpC,oBAAoB,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5C;IACA,gBAAgB,IAAI,CAAC,QAAQ,EAAE,CAAC;IAChC;IACA,gBAAgB,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;IACzD,gBAAgB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACnC;IACA;IACA,gBAAgB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;IAChC,aAAa;IACb,iBAAiB,IAAI,KAAK,KAAK,EAAE,EAAE;IACnC;IACA,gBAAgB,IAAI,EAAE,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;IACtE,oBAAoB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE;IACzC,wBAAwB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;IACxD,oBAAoB,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;IAC1C,wBAAwB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IACpE,wBAAwB,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAChD,qBAAqB;IACrB;IACA;IACA,wBAAwB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;AACxD;IACA,oBAAoB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACpC,iBAAiB;IACjB,aAAa;IACb,iBAAiB,IAAI,KAAK,KAAK,CAAC,EAAE;IAClC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IACpD,gBAAgB,IAAI,IAAI,CAAC,OAAO;IAChC,oBAAoB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;IAC7C,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACpG,aAAa;IACb,iBAAiB,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,EAAE;IACtD,gBAAgB,IAAI,CAAC,KAAK,GAAG,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;IACnH,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAAC;IAClD,gBAAgB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC/B,aAAa;IACb,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,MAAM,EAAE,UAAU,MAAM,EAAE,MAAM,EAAE;IAC1C;IACA;IACA,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACjC,gBAAgB,GAAG,CAAC,SAAS,GAAG,MAAM,GAAG,yBAAyB,CAAC,CAAC;IACpE,YAAY,IAAI,IAAI,CAAC,OAAO,EAAE;IAC9B,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IACvC,gBAAgB,IAAI,KAAK,GAAG,EAAE,EAAE;IAChC,oBAAoB,IAAI,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACxD,oBAAoB,IAAI,QAAQ,GAAG,GAAG,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACnF,oBAAoB,IAAI,MAAM,KAAK,KAAK,EAAE;IAC1C,wBAAwB,IAAI,IAAI,GAAG,GAAG,CAAC;IACvC,wBAAwB,IAAI,QAAQ,EAAE;IACtC;IACA,4BAA4B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACzE;IACA,4BAA4B,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACzE,gCAAgC,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAC1D,gCAAgC,IAAI,CAAC,MAAM,EAAE,CAAC;AAC9C;IACA,gCAAgC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;IACvD,oCAAoC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACpD,oCAAoC,IAAI,CAAC,UAAU,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IAClE,iCAAiC;IACjC,6BAA6B;IAC7B,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;IACvD,4BAA4B,IAAI,CAAC,MAAM,EAAE,CAAC;IAC1C,yBAAyB;IACzB,qBAAqB;IACrB,yBAAyB;IACzB;IACA,wBAAwB,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;IACvE,4BAA4B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9C,yBAAyB;AACzB;IACA;IACA,wBAAwB,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;IACjD,4BAA4B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC1F,4BAA4B,MAAM,CAAC,gBAAgB,EAAE,CAAC;IACtD,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1E,4BAA4B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;IACxG,4BAA4B,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IAC1D,yBAAyB;AACzB;IACA,wBAAwB,IAAI,QAAQ,EAAE;IACtC;IACA,4BAA4B,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE,MAAM,CAAC,CAAC;IACnF,4BAA4B,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;IACrD,gCAAgC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC9F,gCAAgC,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACvD,6BAA6B;AAC7B;IACA,4BAA4B,IAAI,CAAC,MAAM,EAAE,CAAC;IAC1C;IACA,yBAAyB;AACzB;IACA;IACA,wBAAwB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IACjD,4BAA4B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC;IACvD,4BAA4B,IAAI,CAAC,MAAM,EAAE,CAAC;IAC1C,yBAAyB;IACzB,6BAA6B,IAAI,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAChE,4BAA4B,IAAI,CAAC,MAAM,EAAE,CAAC;IAC1C,yBAAyB;IACzB,qBAAqB;AACrB;IACA;IACA,oBAAoB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;IACzC,wBAAwB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACxC;IACA,oBAAoB,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;IAChE,wBAAwB,IAAI,CAAC,UAAU,EAAE,CAAC;IAC1C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT;IACA,QAAQ,MAAM,EAAE,UAAU,MAAM,EAAE;IAClC,YAAY,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;IACjC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;IACtD,oBAAoB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAClD,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC9C,SAAS;IACT;IACA,QAAQ,OAAO,EAAE,UAAU,MAAM,EAAE;IACnC,YAAY,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;IACjC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;IACtD,oBAAoB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;IACvD,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb,YAAY,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;IACnD,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,UAAU,EAAE,YAAY;IAChC,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC;IAChC,gBAAgB,OAAO;AACvB;IACA,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,EAAE;IACnC,gBAAgB,IAAI,QAAQ,GAAG,EAAE;IACjC,wBAAwB,IAAI,GAAG,IAAI,CAAC,IAAI;IACxC,wBAAwB,SAAS,GAAG,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC;IAC/D,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;IACpD,oBAAoB,QAAQ,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,gBAAgB,IAAI,OAAO,GAAG,SAAS,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;IAC1D,gBAAgB,IAAI,CAAC,KAAK,GAAG,OAAO,IAAI,SAAS,GAAG,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrF,aAAa;IACb,iBAAiB,IAAI,EAAE,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAE;IAC/D,gBAAgB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAChD,aAAa;IACb,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,WAAW,EAAE,UAAU,KAAK,EAAE;IACtC,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;IAC/B,YAAY,IAAI,GAAG,CAAC;AACpB;IACA,YAAY,IAAI,CAAC,KAAK,CAAC,EAAE;IACzB,gBAAgB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;IACjC,aAAa;IACb,iBAAiB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACzC,gBAAgB,IAAI,KAAK,KAAK,EAAE;IAChC,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACjD;IACA,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC,aAAa;IACb,iBAAiB,IAAI,CAAC,KAAK,EAAE,EAAE;IAC/B,gBAAgB,IAAI,KAAK,KAAK,EAAE;IAChC,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACjD;IACA,oBAAoB,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC7C,aAAa;IACb,iBAAiB,IAAI,CAAC,KAAK,EAAE,EAAE;IAC/B;IACA;IACA,gBAAgB,IAAI,KAAK,KAAK,EAAE;IAChC,oBAAoB,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC7C,qBAAqB,IAAI,KAAK,KAAK,EAAE,EAAE;IACvC,oBAAoB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAC5C,wBAAwB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;IACzC;IACA,wBAAwB,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IAChH,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,EAAE;IACrC,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IAChD;IACA,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC,gBAAgB,OAAO,GAAG,CAAC;IAC3B,aAAa;IACb,iBAAiB,IAAI,CAAC,KAAK,EAAE,EAAE;IAC/B,gBAAgB,IAAI,KAAK,KAAK,EAAE,EAAE;IAClC,oBAAoB,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC7C,iBAAiB;IACjB,gBAAgB,IAAI,KAAK,KAAK,EAAE;IAChC,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACjD;IACA,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;IACrC,aAAa;IACb,iBAAiB,IAAI,CAAC,KAAK,EAAE,EAAE;IAC/B,gBAAgB,IAAI,KAAK,KAAK,EAAE;IAChC,oBAAoB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACjD;IACA,oBAAoB,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC7C,aAAa;IACb,iBAAiB,IAAI,CAAC,KAAK,EAAE,EAAE;IAC/B,gBAAgB,IAAI,KAAK,KAAK,EAAE;IAChC,oBAAoB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3C;IACA,oBAAoB,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC7C,aAAa;AACb;IACA,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,cAAc,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,aAAa,EAAE;IACnE,YAAY,IAAI,SAAS,GAAG,EAAE,CAAC;IAC/B,YAAY,IAAI,CAAC,IAAI,CAAC,OAAO;IAC7B,gBAAgB,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,iBAAiB;IACjB,gBAAgB,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;IAC5C,oBAAoB,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACjD,oBAAoB,IAAI,aAAa,KAAK,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,CAAC,EAAE;IACvF,wBAAwB,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC;IAC9E,qBAAqB;IACrB;IACA,wBAAwB,SAAS,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC;IACtE,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,OAAO,KAAK,IAAI;IAChC,gBAAgB,OAAO,GAAG,SAAS,CAAC;AACpC;IACA,YAAY,OAAO,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3C,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,KAAK,EAAE,UAAU,MAAM,EAAE;IACjC,YAAY,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC7C,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,EAAE,UAAU,MAAM,EAAE;IAChC,YAAY,OAAO,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACtC,SAAS;IACT;IACA;IACA;IACA;IACA,QAAQ,KAAK,EAAE,UAAU,GAAG,EAAE;IAC9B,YAAY,IAAI,CAAC,GAAG,GAAG,GAAG,WAAW,GAAG,QAAQ,CAAC;IACjD,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC;IAChC,gBAAgB,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C;IACA,gBAAgB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5C,SAAS;IACT,QAAQ,WAAW,EAAE,YAAY;IACjC,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK;IAC9B,oBAAoB,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;IAC5C,YAAY,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IAClE,SAAS;IACT,QAAQ,aAAa,EAAE,YAAY;IACnC,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK;IAC9B,oBAAoB,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;IAC5C,YAAY,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IACzC,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,CAAC,EAAE;IAC/B,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC/C,SAAS;IACT,QAAQ,WAAW,EAAE,UAAU,CAAC,EAAE;IAClC,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAClD,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,IAAI,MAAM,EAAE,MAAM,CAAC;IAC/B,YAAY,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IAClC;IACA,YAAY,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3D,gBAAgB,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC1C;IACA;IACA,YAAY,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC1C,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACvD,gBAAgB,MAAM,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC;IACnD,gBAAgB,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtC,gBAAgB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IAC/C,aAAa;IACb,iBAAiB,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;IAC1C,gBAAgB,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACxD,gBAAgB,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO;IAC5C,oBAAoB,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC;IACnD,wBAAwB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC;IACxF,aAAa;IACb;IACA,gBAAgB,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACxD,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,QAAQ,MAAM,EAAE,YAAY;IAC5B,YAAY,IAAI,MAAM,EAAE,MAAM,CAAC;IAC/B,YAAY,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IAClC;IACA,YAAY,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC/D,gBAAgB,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1C;IACA,YAAY,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;IACpE,gBAAgB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC;IAC/F,aAAa;IACb,iBAAiB,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;IAC1C,gBAAgB,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACxD,gBAAgB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACzC,oBAAoB,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,EAAE;IACjF,wBAAwB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC/D,qBAAqB;IACrB,iBAAiB,CAAC,CAAC;IACnB,aAAa;IACb,iBAAiB;IACjB,gBAAgB,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACxD,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;IAC/B,SAAS;IACT,KAAK,CAAC;AACN;IACA;IACA;IACA,IAAI,SAAS,MAAM,GAAG;IACtB;IACA,QAAQ,IAAI,CAAC,GAAG,IAAI,CAAC;IACrB,QAAQ,IAAI,GAAG,GAAG,EAAE,CAAC;IACrB,QAAQ,IAAI,aAAa,GAAG,CAAC,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;AACrD;IACA;IACA,QAAQ,SAAS,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE;IACrC,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/B,YAAY,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;IAC7B,SAAS;IAET,QAAQ,KAAK,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;IACjD,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;IACpE,SAAS,CAAC;IACV,QAAQ,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,YAAY;IAC3C,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC3D,SAAS,CAAC;AACV;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,UAAU,GAAG;IAC9B,YAAY,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IAC/B,SAAS;IACT,QAAQ,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;IACnD,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,SAAS,CAAC;IACV,QAAQ,UAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;IACpD,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC;IACjC,SAAS,CAAC;IACV,QAAQ,UAAU,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;IACpD,YAAY,OAAO,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjD,SAAS,CAAC;IACV,QAAQ,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;IACzC,YAAY,IAAI,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;IAC9C,YAAY,IAAI,CAAC;IACjB,gBAAgB,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrC,YAAY,OAAO,UAAU,CAAC;IAC9B,SAAS,CAAC;AACV;IACA,QAAQ,SAAS,KAAK,CAAC,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE;IAChD,YAAY,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;IAClC,YAAY,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAC9B,YAAY,IAAI,MAAM,KAAK,SAAS;IACpC,gBAAgB,IAAI,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC;IACzC,YAAY,IAAI,SAAS,KAAK,KAAK,CAAC,QAAQ,EAAE;IAC9C;IACA,gBAAgB,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/C,gBAAgB,KAAK,IAAI,CAAC,IAAI,QAAQ;IACtC,oBAAoB,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC1C;IACA,aAAa;IACb,iBAAiB,IAAI,SAAS,KAAK,KAAK,CAAC,QAAQ,EAAE;IACnD,gBAAgB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,cAAc,CAAC;IACvD,gBAAgB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACvC,aAAa;IACb,SAAS;IACT,QAAQ,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;IAC/C,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC;IAC9B,SAAS,CAAC;IACV,QAAQ,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;IAC/C,YAAY,IAAI,IAAI,CAAC,SAAS;IAC9B,gBAAgB,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC;IACxC,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC;IAC9B,SAAS,CAAC;IACV;IACA,QAAQ,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;IACpC,QAAQ,KAAK,CAAC,mBAAmB,GAAG,qBAAqB,CAAC;IAC1D,QAAQ,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;IACpC,QAAQ,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;IAC5B,QAAQ,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC;IAClC,QAAQ,KAAK,CAAC,cAAc,GAAG,GAAG,CAAC;IACnC;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG;IACvB,YAAY,UAAU,EAAE,UAAU;IAClC,YAAY,KAAK,EAAE,KAAK;IACxB,YAAY,KAAK,EAAE,KAAK;IACxB,SAAS,CAAC;IACV;IACA;IACA,QAAQ,IAAI,OAAO,GAAG;IACtB,YAAY,IAAI,EAAE,SAAS;IAC3B,YAAY,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACjC,gBAAgB,IAAI,EAAE,EAAE,EAAE,CAAC;IAC3B,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC1E,aAAa;IACb,YAAY,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACjC,gBAAgB,IAAI,EAAE,EAAE,EAAE,CAAC;IAC3B,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC1E,aAAa;IACb,YAAY,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACjC,gBAAgB,IAAI,EAAE,EAAE,EAAE,CAAC;IAC3B,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrF,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACtF,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACrE,aAAa;IACb,YAAY,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACjC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACvD,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC9E,aAAa;IACb,YAAY,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACjC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACvD,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACzE,aAAa;IACb,YAAY,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACjC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACvD,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC9E,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,IAAI,MAAM,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxC,gBAAgB,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAChD,gBAAgB,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,gBAAgB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IACxF,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACvD,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3B,gBAAgB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC5E,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACpE,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC;IACpC,gBAAgB,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnD,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC7E,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IACxE,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IACnE,gBAAgB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3G,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;IAC9B,gBAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAChD,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;IAC9B,gBAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAChD,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;IAC9B,gBAAgB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAChD,aAAa;IACb;IACA,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,IAAI,EAAE,EAAE,EAAE,CAAC;IAC3B,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACrE,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,IAAI,EAAE,EAAE,EAAE,CAAC;IAC3B,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACrE,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,IAAI,EAAE,EAAE,EAAE,CAAC;IAC3B,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACtF,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrF,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC1E,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC9E,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC9E,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACzE,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,gBAAgB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5B,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,gBAAgB,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,gBAAgB,IAAI,CAAC,EAAE,CAAC,CAAC;IACzB,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1F,gBAAgB,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,gBAAgB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5B,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,gBAAgB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD,gBAAgB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;IAC9B,gBAAgB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACjD,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;IAC9B,gBAAgB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACjD,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;IAC9B,gBAAgB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACjD,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC,gBAAgB,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,gBAAgB,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,gBAAgB,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACvC,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IACzC,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/D,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC9G,aAAa;IACb,YAAY,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACjC,gBAAgB,IAAI,EAAE,EAAE,EAAE,CAAC;IAC3B,gBAAgB,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACrE,aAAa;IACb,YAAY,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE;IAC3B;IACA,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAyBtD,aAAa;IACb,YAAY,SAAS,EAAE,UAAU,MAAM,EAAE;IACzC,gBAAgB,IAAI,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IACtC,gBAAgB,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;IACrC,oBAAoB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,oBAAoB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,CAAC,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC1C,oBAAoB,CAAC,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC1C,iBAAiB;AACjB;IACA,gBAAgB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtD,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACtC,gBAAgB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IACtC,gBAAgB,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IAChC,aAAa;IACb,YAAY,SAAS,EAAE,UAAU,GAAG,EAAE;IACtC,gBAAgB,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,aAAa;IACb,YAAY,QAAQ,EAAE,UAAU,MAAM,EAAE,CAAC,EAAE;IAC3C,gBAAgB,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;AACjC;IACA,gBAAgB,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAC3C;IACA,gBAAgB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAClD;IACA,gBAAgB,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/C,oBAAoB,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9C;IACA,gBAAgB,IAAI,IAAI,GAAG,CAAC,EAAE;IAC9B,oBAAoB,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACnD,oBAAoB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,oBAAoB,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC3C,oBAAoB,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC3C,iBAAiB;AACjB;IACA,gBAAgB,IAAI,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;IAChE,oBAAoB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACtD,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAClD,aAAa;IACb,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG;IAC/B;IACA,YAAY,GAAG,EAAE,UAAU,MAAM,EAAE;IACnC,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1E,oBAAoB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AACzC;IACA,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;IAClE,wBAAwB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;IAC7C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACtE,qBAAqB;IACrB,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IAC9C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC/D,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACpC,oBAAoB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AACzC;IACA,gBAAgB,IAAI,MAAM;IAC1B,wBAAwB,CAAC,GAAG,KAAK;IACjC,wBAAwB,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IACtE,wBAAwB,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;IACpD,gBAAgB,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;AACtC;IACA,gBAAgB,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;IACxD;IACA,oBAAoB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAClC,wBAAwB,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IACjE,wBAAwB,IAAI,CAAC,KAAK,CAAC;IACnC,4BAA4B,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,6BAA6B,IAAI,CAAC,KAAK,CAAC,EAAE;IAC1C,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACpD,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,KAAK,CAAC,EAAE;IAC1C,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC1D,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,KAAK,CAAC,EAAE;IAC1C,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC1D,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB;IACA,4BAA4B,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACpE,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,oBAAoB,MAAM,CAAC,MAAM,EAAE,CAAC;AACpC;IACA,gBAAgB,IAAI,CAAC,MAAM;IAC3B,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5D;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,GAAG,EAAE,UAAU,MAAM,EAAE;IACnC,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;IAC7C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACtE,qBAAqB;IACrB,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE;IAC5C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC/D,iBAAiB;AACjB;IACA,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACpC,oBAAoB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AACzC;IACA,gBAAgB,IAAI,MAAM;IAC1B,wBAAwB,CAAC,GAAG,KAAK;IACjC,wBAAwB,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IACtE,wBAAwB,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE;IACvD,wBAAwB,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;IACpD,gBAAgB,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;IACtC,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC;IACvC,oBAAoB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,qBAAqB,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;IAC7D;IACA,oBAAoB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAClC,wBAAwB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/C,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACjD,wBAAwB,IAAI,CAAC,IAAI,CAAC,EAAE;IACpC,4BAA4B,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC1D,4BAA4B,CAAC,GAAG,KAAI;IACpC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC1D,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACpD,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB;IACA,4BAA4B,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClG,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,IAAI,CAAC,MAAM;IAC3B,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC1F;IACA,gBAAgB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,oBAAoB,MAAM,CAAC,MAAM,EAAE,CAAC;AACpC;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,GAAG,EAAE,UAAU,MAAM,EAAE;IACnC,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACtE,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE;IAC5C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC/D,iBAAiB;IACjB,gBAAgB,IAAI,MAAM;IAC1B,wBAAwB,CAAC,GAAG,KAAK;IACjC,wBAAwB,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IACtE,wBAAwB,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC;AAC9C;IACA,gBAAgB,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;AACtC;IACA,gBAAgB,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;IACxD;IACA,oBAAoB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAClC,wBAAwB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/C,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACjD,wBAAwB,IAAI,CAAC,IAAI,CAAC;IAClC,4BAA4B,MAAM,IAAI,cAAc,CAAC,uBAAuB,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClG,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACxD,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC1D,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB;IACA,4BAA4B,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACpE,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,IAAI,CAAC,MAAM;IAC3B,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5D;IACA,gBAAgB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,oBAAoB,MAAM,CAAC,MAAM,EAAE,CAAC;AACpC;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,GAAG,EAAE,UAAU,MAAM,EAAE;IACnC,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE;IAC5C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC/D,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC;IACjE,iBAAiB;AACjB;IACA,gBAAgB,IAAI,MAAM;IAC1B,wBAAwB,CAAC,GAAG,KAAK;IACjC,wBAAwB,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IACtE,wBAAwB,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;IACpD,gBAAgB,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;AACtC;IACA,gBAAgB,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;IACxD;IACA,oBAAoB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAClC,wBAAwB,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9D,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACjD,wBAAwB,IAAI,CAAC,IAAI,CAAC;IAClC,4BAA4B,MAAM,IAAI,cAAc,CAAC,uBAAuB,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClG,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACxD,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC1D,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB;IACA,4BAA4B,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACpE,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,oBAAoB,MAAM,CAAC,MAAM,EAAE,CAAC;AACpC;IACA,gBAAgB,IAAI,CAAC,MAAM;IAC3B,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5D;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,GAAG,EAAE,SAAS,MAAM,EAAE;IAClC,gBAAgB,GAAG,QAAQ,CAAC,YAAY,EAAE;IAC1C,oBAAoB,GAAG,MAAM,CAAC,UAAU,EAAE;IAC1C,wBAAwB,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,oBAAoB,GAAG,MAAM,CAAC,WAAW,EAAE;IAC3C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC/D,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC;IACjE,iBAAiB;AACjB;IACA,gBAAgB,IAAI,MAAM;IAC1B,oBAAoB,CAAC,GAAG,KAAK;IAC7B,oBAAoB,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IAClE,oBAAoB,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE;IACnD,oBAAoB,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;AAChD;IACA,gBAAgB,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;AACtC;IACA,gBAAgB,GAAG,MAAM,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;IACvD;IACA,oBAAoB,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE;IACjC,wBAAwB,MAAM,IAAI,cAAc,CAAC,uBAAuB,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC5F,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACjD,wBAAwB,GAAG,CAAC,IAAI,CAAC,EAAE;IACnC,4BAA4B,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7D,yBAAyB;IACzB,6BAA6B,GAAG,CAAC,IAAI,CAAC,EAAE;IACxC,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,GAAG,KAAI;IACnE,yBAAyB;IACzB,6BAA6B,GAAG,CAAC,IAAI,CAAC,EAAE;IACxC,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAClE,yBAAyB;IACzB,6BAA6B,GAAG,CAAC,IAAI,CAAC,EAAE;IACxC,4BAA4B,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC7D,yBAAyB;IACzB;IACA,4BAA4B,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAClG,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,GAAG,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAClG;IACA,gBAAgB,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC;AAC9D;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,GAAG,EAAE,UAAU,MAAM,EAAE;IACnC,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE;IAC5C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC/D,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC,CAAC;IACjE,iBAAiB;IACjB,gBAAgB,IAAI,MAAM;IAC1B,wBAAwB,CAAC,GAAG,KAAK;IACjC,wBAAwB,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IACtE,wBAAwB,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC;AAC9C;IACA,gBAAgB,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;AACtC;IACA,gBAAgB,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;IACxD;IACA,oBAAoB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAClC,wBAAwB,MAAM,IAAI,cAAc,CAAC,uBAAuB,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9F,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACjD,wBAAwB,IAAI,CAAC,IAAI,CAAC;IAClC,4BAA4B,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IAC1D,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACnD,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,IAAI,CAAC,EAAE;IACzC,4BAA4B,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACxD,4BAA4B,CAAC,GAAG,IAAI,CAAC;IACrC,yBAAyB;IACzB;IACA,4BAA4B,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACpE,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,IAAI,CAAC,MAAM;IAC3B,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AAC5D;IACA,gBAAgB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC7C,oBAAoB,MAAM,CAAC,MAAM,EAAE,CAAC;AACpC;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE;IAC5C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACxD,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE;IAC5C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACxD,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACpC,oBAAoB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,qBAAqB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAChD,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE;IAC5C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,oBAAoB,OAAO,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC5D,iBAAiB;IACjB,qBAAqB,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,oBAAoB,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAC9C;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC9D,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAChF,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE;IAC5C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACxD,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAChF,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE;IAC5C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACxD,aAAa;IACb,YAAY,IAAI,EAAE,SAAS,MAAM,EAAE;IACnC,gBAAgB,GAAG,QAAQ,CAAC,YAAY,EAAE;IAC1C,oBAAoB,GAAG,MAAM,CAAC,UAAU,EAAE,EAAE;IAC5C,wBAAwB,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IACtF,qBAAqB;AACrB;IACA,oBAAoB,GAAG,MAAM,CAAC,WAAW,EAAE;IAC3C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACxD,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,gBAAgB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9C,oBAAoB,MAAM,IAAI,cAAc,CAAC,6BAA6B,CAAC,CAAC;AAC5E;IACA,gBAAgB,IAAI,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,UAAU,EAAE,EAAE;IAC/E,oBAAoB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxD,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IACzD,aAAa;IACb,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG;IACjC;IACA,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IAC9C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,OAAO,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACjE,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IAC9C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,OAAO,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACjE,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IAC9C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,OAAO,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACjE,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;IAC7C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,qBAAqB;IACrB,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IAC9C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,qBAAqB;IACrB,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;IAClE,iBAAiB;AACjB;IACA,gBAAgB,OAAO,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACjE,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IAC9C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,qBAAqB;IACrB,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;IAClE,iBAAiB;AACjB;IACA,gBAAgB,OAAO,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACjE,aAAa;IACb,YAAY,IAAI,EAAE,UAAU,MAAM,EAAE;IACpC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C,oBAAoB,IAAI,MAAM,CAAC,UAAU,EAAE;IAC3C,wBAAwB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvE,oBAAoB,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IAC9C,wBAAwB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,qBAAqB;IACrB,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAC;IAClE,iBAAiB;AACjB;IACA,gBAAgB,OAAO,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACjE,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,MAAM,EAAE;IACrC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,IAAI,MAAM,CAAC,WAAW,EAAE;IACjE,oBAAoB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/D,qBAAqB,IAAI,QAAQ,CAAC,YAAY;IAC9C,oBAAoB,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,yBAAyB,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IAClH;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAC/D,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,MAAM,EAAE;IACrC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,IAAI,MAAM,CAAC,WAAW,EAAE;IACjE,oBAAoB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/D,qBAAqB,IAAI,QAAQ,CAAC,YAAY;IAC9C,oBAAoB,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,yBAAyB,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IAClH;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAC/D,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,MAAM,EAAE;IACrC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,IAAI,MAAM,CAAC,WAAW,EAAE;IACjE,oBAAoB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/D,qBAAqB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAChD,oBAAoB,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,uBAAuB,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IACzH,iBAAiB;IACjB;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAC/D,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,MAAM,EAAE;IACrC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,IAAI,MAAM,CAAC,WAAW,EAAE;IACjE,oBAAoB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/D,qBAAqB,IAAI,QAAQ,CAAC,YAAY;IAC9C,oBAAoB,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3I;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAC/D,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,MAAM,EAAE;IACrC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,IAAI,MAAM,CAAC,WAAW,EAAE;IACjE,oBAAoB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/D,qBAAqB,IAAI,QAAQ,CAAC,YAAY;IAC9C,oBAAoB,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,6BAA6B,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IACtH;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAC/D,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,KAAK,EAAE,UAAU,MAAM,EAAE;IACrC,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,YAAY,IAAI,MAAM,CAAC,WAAW,EAAE;IACjE,oBAAoB,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IAC/D,qBAAqB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAChD,oBAAoB,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;IACxC,wBAAwB,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACnD;IACA,wBAAwB,MAAM,GAAG,QAAQ;IACzC,gCAAgC,CAAC,CAAC,MAAM;IACxC,wCAAwC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtI,wCAAwC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,iBAAiB;IACjB;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAC/D,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IACxB;IACA,QAAQ,IAAI,SAAS,GAAG;IACxB,YAAY,IAAI,EAAE;IAClB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,IAAI;IAC9B,gBAAgB,MAAM,EAAE,OAAO;IAC/B,gBAAgB,MAAM,EAAE,IAAI;IAC5B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,IAAI;IAC/B,gBAAgB,SAAS,EAAE,UAAU,CAAC,EAAE;IACxC,oBAAoB,OAAO,CAAC,CAAC;IAC7B,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,EAAE;IAClB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,IAAI;IAC9B,gBAAgB,MAAM,EAAE,YAAY;IACpC,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,IAAI;IAC7B,gBAAgB,SAAS,EAAE,IAAI;IAC/B,gBAAgB,SAAS,EAAE,UAAU,CAAC,EAAE;IACxC,oBAAoB,OAAO,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,iBAAiB;IACjB,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,WAAW;IACnC,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,IAAI;IAC7B,gBAAgB,SAAS,EAAE,IAAI;IAC/B,gBAAgB,SAAS,EAAE,UAAU,CAAC,EAAE;IACxC,oBAAoB,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;IACxC,iBAAiB;IACjB,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,IAAI;IAC/B,aAAa;IACb,YAAY,IAAI,EAAE;IAClB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,IAAI;IAC9B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,IAAI;IAC/B,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,SAAS;IACjC,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,IAAI;IAC7B,gBAAgB,SAAS,EAAE,IAAI;IAC/B,gBAAgB,UAAU,EAAE,IAAI;IAChC,gBAAgB,cAAc,EAAE,KAAK;IACrC,EAAE,iBAAiB,EAAE,KAAK;IAC1B,gBAAgB,SAAS,EAAE,UAAU,CAAC,EAAE;IACxC,oBAAoB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACxD,iBAAiB;IACjB,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,UAAU;IAClC,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,QAAQ;IAChC,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,MAAM,EAAE,IAAI;IAC5B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,gBAAgB,SAAS,EAAE,UAAU,CAAC,EAAE;IACxC,oBAAoB,OAAO,CAAC,CAAC;IAC7B,iBAAiB;IACjB,aAAa;IACb,YAAY,MAAM,EAAE;IACpB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,MAAM;IAChC,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,MAAM,EAAE,IAAI;IAC5B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,gBAAgB,SAAS,EAAE,UAAU,CAAC,EAAE;IACxC,oBAAoB,OAAO,CAAC,CAAC;IAC7B,iBAAiB;IACjB,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,UAAU;IAClC,gBAAgB,MAAM,EAAE,IAAI;IAC5B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,gBAAgB,SAAS,EAAE,UAAU,CAAC,EAAE;IACxC,oBAAoB,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;IACtC,iBAAiB;IACjB,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,QAAQ;IAChC,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,aAAa;IACb,YAAY,IAAI,EAAE;IAClB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,IAAI;IAC9B,gBAAgB,MAAM,EAAE,IAAI;IAC5B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,IAAI;IAC5B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,aAAa;IACb,YAAY,IAAI,EAAE;IAClB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,IAAI;IAC9B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,IAAI;IAC5B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,aAAa;IACb,YAAY,IAAI,EAAE;IAClB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,IAAI;IAC9B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,OAAO;IAC/B,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,QAAQ;IAChC,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,KAAK;IAChC,gBAAgB,QAAQ,EAAE,OAAO;IACjC,aAAa;IACb,YAAY,IAAI,EAAE;IAClB,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,GAAG;IAC7B,gBAAgB,MAAM,EAAE,iBAAiB;IACzC,gBAAgB,MAAM,EAAE,KAAK;IAC7B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,IAAI;IAC/B,aAAa;IACb,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,QAAQ,GAAG;IACvB,YAAY,GAAG,EAAE;IACjB,gBAAgB,IAAI,EAAE,OAAO;IAC7B,gBAAgB,EAAE,EAAE,CAAC;IACrB,gBAAgB,OAAO,EAAE,IAAI;IAC7B,gBAAgB,QAAQ,EAAE,KAAK;IAC/B,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,IAAI,EAAE,OAAO;IAC7B,gBAAgB,EAAE,EAAE,CAAC;IACrB,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,QAAQ,EAAE,IAAI;IAC9B,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,IAAI,EAAE,QAAQ;IAC9B,gBAAgB,EAAE,EAAE,CAAC;IACrB,gBAAgB,OAAO,EAAE,IAAI;IAC7B,gBAAgB,QAAQ,EAAE,KAAK;IAC/B,gBAAgB,OAAO,EAAE,QAAQ;IACjC,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,IAAI,EAAE,QAAQ;IAC9B,gBAAgB,EAAE,EAAE,CAAC;IACrB,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,QAAQ,EAAE,IAAI;IAC9B,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,IAAI,EAAE,OAAO;IAC7B,gBAAgB,EAAE,EAAE,CAAC;IACrB,gBAAgB,OAAO,EAAE,IAAI;IAC7B,gBAAgB,QAAQ,EAAE,KAAK;IAC/B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,IAAI,EAAE,OAAO;IAC7B,gBAAgB,EAAE,EAAE,CAAC;IACrB,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,QAAQ,EAAE,IAAI;IAC9B,aAAa;IACb,SAAS,CAAC;IACV;IACA;IACA,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG;IACzC,YAAY,KAAK,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACjD,YAAY,KAAK,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACjD,YAAY,KAAK,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACjD,YAAY,KAAK,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACjD,YAAY,KAAK,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACjD,YAAY,KAAK,mBAAmB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACjD,YAAY,MAAM,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,YAAY,MAAM,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,YAAY,MAAM,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,YAAY,QAAQ,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,YAAY,QAAQ,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,YAAY,QAAQ,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,YAAY,MAAM,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,YAAY,MAAM,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,YAAY,MAAM,kBAAkB,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;IAClD,YAAY,OAAO,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;IACnD,YAAY,OAAO,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IACpD,YAAY,OAAO,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IACpD,YAAY,OAAO,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IACpD,YAAY,MAAM,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;IACnD,YAAY,MAAM,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;IACnD,YAAY,MAAM,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;IACnD,YAAY,OAAO,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IACpD,YAAY,MAAM,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;IACnD,YAAY,MAAM,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;IACnD,YAAY,MAAM,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;IACnD,YAAY,OAAO,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IACpD,YAAY,OAAO,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;IACpD,YAAY,OAAO,iBAAiB,GAAG,CAAC,CAAC;IACzC,YAAY,KAAK,mBAAmB,CAAC,GAAG,EAAE,CAAC,CAAC;IAC5C,YAAY,SAAS,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC;IAChD,YAAY,SAAS,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC;IAChD,YAAY,KAAK,mBAAmB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7C,YAAY,KAAK,mBAAmB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7C,YAAY,KAAK,mBAAmB,GAAG,CAAC,CAAC;IACzC,YAAY,OAAO,iBAAiB,GAAG,CAAC,CAAC;IACzC,YAAY,MAAM,kBAAkB,GAAG,CAAC,CAAC;IACzC,YAAY,OAAO,iBAAiB,GAAG,CAAC,CAAC;IACzC,YAAY,IAAI,oBAAoB,GAAG,CAAC,CAAC;IACzC,YAAY,MAAM,kBAAkB,GAAG,CAAC,CAAC;IACzC,YAAY,MAAM,kBAAkB,GAAG,CAAC,CAAC;IACzC,YAAY,MAAM,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7C,YAAY,KAAK,mBAAmB,GAAG,CAAC,CAAC;IACzC,YAAY,MAAM,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7C,YAAY,IAAI,oBAAoB,GAAG,CAAC,CAAC;IACzC,YAAY,IAAI,oBAAoB,GAAG,CAAC,CAAC;IACzC,YAAY,KAAK,mBAAmB,GAAG,CAAC,CAAC;IACzC,YAAY,KAAK,mBAAmB,GAAG,CAAC,CAAC;IACzC,YAAY,IAAI,oBAAoB,GAAG,CAAC,CAAC;IACzC,YAAY,KAAK,mBAAmB,GAAG,CAAC,CAAC;IACzC,YAAY,MAAM,kBAAkB,CAAC,SAAS,EAAE,CAAC,CAAC;IAClD,YAAY,WAAW,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC;IAClD,YAAY,oBAAoB,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChE,YAAY,YAAY,YAAY,GAAG,CAAC,CAAC;IACzC,YAAY,kBAAkB,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9C,YAAY,OAAO,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnD,YAAY,YAAY,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxD,YAAY,KAAK,mBAAmB,CAAC,GAAG,EAAE,CAAC,CAAC;IAC5C,YAAY,SAAS,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC;IAChD,YAAY,QAAQ,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAChD,YAAY,QAAQ,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAChD,YAAY,KAAK,mBAAmB,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7C,YAAY,SAAS,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACjD,YAAY,QAAQ,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAChD,YAAY,MAAM,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7C,YAAY,MAAM,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7C,YAAY,SAAS,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC;IAChD,YAAY,KAAK,mBAAmB,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,YAAY,QAAQ,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC;IAC/C,YAAY,KAAK,mBAAmB,CAAC,GAAG,EAAE,CAAC,CAAC;IAC5C,YAAY,QAAQ,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC;IAC/C,YAAY,aAAa,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,YAAY,MAAM,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7C,YAAY,WAAW,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC;IAClD,YAAY,KAAK,mBAAmB,CAAC,GAAG,EAAE,CAAC,CAAC;IAC5C,YAAY,OAAO,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC;IAC9C,YAAY,QAAQ,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC;IAC/C,YAAY,QAAQ,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC;IAC/C,YAAY,SAAS,eAAe,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,YAAY,QAAQ,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC;IAC/C,YAAY,QAAQ,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC;IAC/C,YAAY,WAAW,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC;IAClD,YAAY,WAAW,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC;IAClD,YAAY,WAAW,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC;IAClD,YAAY,WAAW,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC;IAClD,YAAY,aAAa,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;IACpD,YAAY,IAAI,oBAAoB,CAAC,EAAE,EAAE,CAAC,CAAC;IAC3C,YAAY,OAAO,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC;IAC9C;IACA,YAAY,UAAU,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjD,YAAY,UAAU,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjD,YAAY,WAAW,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC;IAClD,YAAY,KAAK,mBAAmB,CAAC,GAAG,EAAE,CAAC,CAAC;IAC5C,YAAY,WAAW,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC;IAClD,YAAY,UAAU,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjD,YAAY,MAAM,kBAAkB,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAClD,YAAY,cAAc,UAAU,GAAG,CAAC,CAAC;IACzC,YAAY,OAAO,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC;IAC9C,YAAY,UAAU,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC;IACjD,YAAY,cAAc,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC;IACrD,YAAY,YAAY,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC;IACnD,YAAY,YAAY,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC;IACnD,YAAY,WAAW,aAAa,CAAC,SAAS,EAAE,CAAC,CAAC;IAClD;IACA,YAAY,OAAO,iBAAiB,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/C,SAAS,CAAC;AACV;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IACzB;IACA,QAAQ,IAAI,YAAY,GAAG,UAAU,KAAK,EAAE;IAC5C,YAAY,IAAI,QAAQ,GAAG,QAAQ,CAAC,gBAAgB;IACpD,oBAAoB,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;IACxC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,IAAI,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1C,gBAAgB,IAAI,KAAK,IAAI,OAAO;IACpC,oBAAoB,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;IAC1C,aAAa;IACb,YAAY,GAAG,CAAC,eAAe,GAAG,KAAK,GAAG,gBAAgB,CAAC,CAAC;IAC5D,SAAS,CAAC;AACV;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,UAAU,KAAK,EAAE,SAAS,EAAE;IACpD,YAAY,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3B,gBAAgB,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAChC,YAAY,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACzC,YAAY,IAAI,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;IACpC,SAAS,CAAC;AACV;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,UAAU,IAAI,EAAE;IACvC,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC;IAC1B,gBAAgB,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;IAC7C,SAAS,CAAC;AACV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,MAAM,GAAG,UAAU,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE;IAC7D,YAAY,IAAI,CAAC,GAAG,IAAI;IACxB,oBAAoB,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1C,YAAY,IAAI,OAAO,QAAQ,KAAK,UAAU,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE;IACnF,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,gBAAgB,IAAI,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IAC7C,oBAAoB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU;IACjE,wBAAwB,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C;IACA,wBAAwB,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1D,iBAAiB,CAAC;IAClB,aAAa;IACb,SAAS,CAAC;AACV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,WAAW,GAAG,UAAU,OAAO,EAAE,MAAM,EAAE;IACtD;IACA,YAAY,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;IACxC,YAAY,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;IACzB,YAAY,IAAI,OAAO,MAAM,KAAK,QAAQ;IAC1C,gBAAgB,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC/C,YAAY,CAAC,CAAC,IAAI,GAAG,MAAM,CAAC;IAC5B,YAAY,CAAC,CAAC,KAAK,GAAG,OAAO,KAAK,WAAW,GAAG,EAAE,GAAG,OAAO,CAAC;IAC7D,YAAY,CAAC,CAAC,UAAU,EAAE,CAAC;IAC3B,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS,CAAC;AACV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,YAAY,GAAG,UAAU,OAAO,EAAE,IAAI,EAAE,YAAY,EAAE;IACnE,YAAY,IAAI,WAAW,GAAG,SAAS,CAAC,OAAO,CAAC,CAAC;AACjD;IACA,YAAY,IAAI,CAAC,WAAW;IAC5B,gBAAgB,GAAG,CAAC,mDAAmD,GAAG,OAAO,CAAC,CAAC;AACnF;IACA,YAAY,IAAI,gBAAgB,GAAG,WAAW,CAAC,CAAC,CAAC,IAAI,YAAY;IACjE,oBAAoB,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC;IACvC,oBAAoB,MAAM,CAAC;IAC3B;IACA;IACA,YAAY,IAAI,EAAE,IAAI,YAAY,KAAK,CAAC;IACxC,gBAAgB,IAAI,GAAG,IAAI,KAAK,SAAS,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AACxD;IACA,YAAY,IAAI,gBAAgB,KAAK,CAAC,CAAC,EAAE;IACzC,gBAAgB,IAAI,QAAQ,GAAG,OAAO,CAAC,gBAAgB,CAAC;IACxD,wBAAwB,QAAQ,GAAG,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,GAAG,gBAAgB;IACpF,wBAAwB,QAAQ,GAAG,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,GAAG,gBAAgB;IACpF,wBAAwB,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;AAC/C;IACA,gBAAgB,IAAI,SAAS,GAAG,OAAO,GAAG,iDAAiD,CAAC;AAC5F;IACA,gBAAgB,IAAI,QAAQ,GAAG,QAAQ;IACvC,oBAAoB,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC1E,gBAAgB,IAAI,QAAQ,GAAG,QAAQ;IACvC,oBAAoB,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC1E,aAAa;AACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,YAAY,IAAI,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAC/C;IACA,YAAY,IAAI,QAAQ,CAAC,OAAO,IAAI,WAAW,EAAE;IACjD,gBAAgB,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC7D,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,EAAE,EAAE;IACzB;IACA,oBAAoB,EAAE,GAAG,YAAY,CAAC,OAAO,CAAC,CAAC;IAC/C,oBAAoB,IAAI,QAAQ,CAAC,YAAY,IAAI,WAAW;IAC5D,wBAAwB,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC;IAChE;IACA,wBAAwB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAC9D,iBAAiB;IACjB,qBAAqB;IACrB;IACA,oBAAoB,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5D,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,qBAAqB,GAAG,CAAC,YAAY;IAClD;IACA;IACA,YAAY,IAAI,IAAI,GAAG,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE;IAC1E,gBAAgB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC;IAClC,oBAAoB,OAAO,CAAC,CAAC;IAC7B,aAAa,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B;IACA;IACA,YAAY,OAAO,IAAI,MAAM,CAAC,IAAI,GAAG,IAAI,GAAG,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;IACtE,SAAS,GAAG,CAAC;AACb;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,WAAW,GAAG,UAAU,QAAQ,EAAE,MAAM,EAAE,KAAK,EAAE;IAC9D,YAAY,IAAI,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;IACzC,YAAY,SAAS,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;IACvC,YAAY,GAAG,MAAM;IACrB,gBAAgB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;IAC/C;IACA,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC;IACzC;IACA,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,EAAE,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC1E,gBAAgB,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;IACvC,aAAa;IACb;IACA,YAAY,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,OAAO,EAAE;IACvD,gBAAgB,IAAI,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;AACrD;IACA,gBAAgB,KAAK,IAAI,CAAC,IAAI,SAAS,EAAE;IACzC,oBAAoB,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IACzC,oBAAoB,IAAI,SAAS,GAAG,KAAK,KAAK,MAAM,GAAG,CAAC,CAAC,UAAU,IAAI,UAAU,GAAG,CAAC,CAAC,UAAU,GAAG,UAAU,CAAC;IAC9G,oBAAoB,IAAI,SAAS;IACjC,wBAAwB,CAAC,CAAC,UAAU,EAAE,CAAC;IACvC,iBAAiB;IAEjB,aAAa;IACb,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,WAAW,GAAG,SAAS,QAAQ,EAAE;IAC9C,YAAY,OAAO,SAAS,CAAC,QAAQ,CAAC,CAAC;IACvC,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IAC5C,YAAY,IAAI,CAAC,GAAG,EAAE,CAAC;IACvB,YAAY,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IACxC;IACA,YAAY,IAAI,IAAI,CAAC,IAAI,QAAQ,EAAE;IACnC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnC,aAAa;IACb;IACA,YAAY,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;IAC3B;IACA,YAAY,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAChC,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,YAAY,GAAG,YAAY;IACxC;IACA,YAAY,OAAO,SAAS,CAAC;IAC7B,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,CAAC,WAAW,GAAG,YAAY;IACvC,YAAY,OAAO,QAAQ,CAAC;IAC5B,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,kBAAkB,GAAG,UAAU,CAAC,EAAE;IAC9C;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B;IACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;IACjE,gBAAgB,CAAC,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAC3D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IACvC;IACA;IACA,YAAY,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;IAC9B,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,0BAA0B,EAAE,UAAU,CAAC,EAAE;IACvE,oBAAoB,OAAO,mBAAmB,CAAC,CAAC,CAAC,CAAC;IAClD,iBAAiB,CAAC,CAAC;IACnB,aAAa;IACb;IACA;IACA;IACA,YAAY,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,2FAA2F,EAAE,YAAY;IACnI,gBAAgB,IAAI,GAAG,GAAG,SAAS,CAAC,CAAC,CAAC;IACtC,wBAAwB,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC;IAC7C,wBAAwB,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC;IAC7C,wBAAwB,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC;IAC5C,wBAAwB,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;IACjD,wBAAwB,MAAM,GAAG,EAAE;IACnC,wBAAwB,CAAC,GAAG,GAAG,CAAC;IAChC,gBAAgB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC;IAC9C,oBAAoB,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IACnD,gBAAgB,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;IAC1C,oBAAoB,CAAC,GAAG,EAAE,CAAC;IAC3B,gBAAgB,OAAO,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC;IAC3C,aAAa,CAAC;IACd,aAAa,OAAO,CAAC,gBAAgB,EAAE,UAAU,KAAK,EAAE,CAAC,EAAE;IAC3D,gBAAgB,IAAI,QAAQ,CAAC,uBAAuB,KAAK,KAAK,IAAI,EAAE,CAAC,IAAI,SAAS,CAAC,EAAE;IACrF,oBAAoB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACjC,wBAAwB,OAAO,CAAC,CAAC;IACjC,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjD,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa,CAAC;IACd;IACA,aAAa,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC;IAC5C;IACA,YAAY,OAAO,IAAI,EAAE;IACzB,gBAAgB,IAAI,KAAK,GAAG,CAAC,CAAC;IAC9B,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,oCAAoC,EAAE,UAAU,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACjG,oBAAoB,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC;IACnC,4BAA4B,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;IACxC,oBAAoB,IAAI,EAAE,IAAI,SAAS;IACvC,wBAAwB,OAAO,EAAE,GAAG,EAAE,CAAC;IACvC,oBAAoB,OAAO,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;IACzC,iBAAiB,CAAC,CAAC;IACnB;IACA,gBAAgB,IAAI,KAAK,KAAK,CAAC;IAC/B,oBAAoB,MAAM;IAC1B,aAAa;IACb,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,aAAa,GAAG,YAAY;IACzC,YAAY,IAAI,CAAC,SAAS,GAAG;IAC7B,gBAAgB,CAAC,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzC,gBAAgB,EAAE,EAAE,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC;IAC3C,aAAa,CAAC;IACd,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,EAAE;IACzC,YAAY,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IAClC,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjE,gBAAgB,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ;IACvC,oBAAoB,OAAO,SAAS,GAAG,CAAC,GAAG,GAAG,CAAC;IAC/C,gBAAgB,OAAO,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACrC,aAAa;IACb,YAAY,OAAO,CAAC,CAAC,QAAQ,EAAE,CAAC;IAChC,SAAS,CAAC;IACV,QAAQ,IAAI,CAAC,OAAO,GAAG;IACvB,YAAY,YAAY,EAAE,EAAE;IAC5B,YAAY,aAAa,EAAE,EAAE;IAC7B,YAAY,YAAY,EAAE,EAAE;IAC5B,YAAY,aAAa,EAAE,EAAE;IAC7B,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,WAAW,GAAG,SAAS,IAAI,EAAE;IAC1C,GAAG,IAAI,QAAQ,CAAC,WAAW,EAAE;IAC7B,IAAI,IAAI,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrC;IACA,IAAI,IAAI,IAAI,GAAG,eAAe,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAClE;IACA,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxC,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAClC,KAAK;IACL,IAAI;IACJ,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE;IACrC;IACA,YAAY,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B;IACA,YAAY,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAC9C;IACA,YAAY,KAAK,IAAI,CAAC,IAAI,QAAQ,EAAE;IACpC,gBAAgB,IAAI,KAAK,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,QAAQ,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,MAAM,EAAE,GAAG,CAAC,CAAC;IACrG,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACxC,aAAa;AACb;IACA,YAAY,IAAI,GAAG,GAAG,CAAC,CAAC;IACxB,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IAC7B,YAAY,IAAI,IAAI,GAAG,CAAC,CAAC;IACzB,YAAY,IAAI,MAAM,GAAG,EAAE,CAAC;IAC5B,YAAY,IAAI,MAAM,GAAG,CAAC,MAAM,CAAC,CAAC;IAClC,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACnC,YAAY,IAAI,KAAK,GAAG,CAAC,CAAC;IAC1B,YAAY,IAAI,aAAa,GAAG,EAAE,CAAC;IACnC,YAAY,IAAI,SAAS,GAAG,KAAK,CAAC;IAClC,YAAY,IAAI,KAAK,GAAG,GAAG,CAAC;IAC5B,YAAY,IAAI,YAAY,GAAG,EAAE,CAAC;IAClC,YAAY,IAAI,KAAK,GAAG,GAAG,CAAC;IAC5B,YAAY,IAAI,KAAK,GAAG,GAAG,CAAC;IAC5B,YAAY,IAAI,IAAI,GAAG,GAAG,CAAC;IAC3B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,YAAY,IAAI,QAAQ,GAAG,UAAU,UAAU,EAAE,MAAM,EAAE;IACzD,gBAAgB,IAAI,SAAS,GAAG,EAAE,CAAC;IACnC,gBAAgB,IAAI,UAAU,KAAK,SAAS,EAAE;IAC9C,oBAAoB,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC;IAChD,iBAAiB;IACjB,gBAAgB,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;IAC1C,gBAAgB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,gBAAgB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,gBAAgB,MAAM,GAAG,SAAS,CAAC;IACnC,gBAAgB,KAAK,EAAE,CAAC;IACxB,aAAa,CAAC;IACd;IACA;IACA;IACA;IACA,YAAY,IAAI,IAAI,GAAG,YAAY;IACnC,gBAAgB,MAAM,CAAC,GAAG,EAAE,CAAC;IAC7B,gBAAgB,MAAM,GAAG,MAAM,CAAC,EAAE,KAAK,CAAC,CAAC;IACzC,aAAa,CAAC;IACd;IACA;IACA;IACA;IACA;IACA,YAAY,IAAI,gBAAgB,GAAG,UAAU,QAAQ,EAAE;IACvD,gBAAgB,QAAQ,GAAG,QAAQ,KAAK,SAAS,GAAG,QAAQ,GAAG,GAAG,CAAC;IACnE;IACA;IACA,gBAAgB,IAAI,GAAG,GAAG,QAAQ,GAAG,CAAC,CAAC;IACvC;IACA,gBAAgB,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,SAAS,EAAE;IACrD,iBAAiB;IACjB;IACA;IACA;IACA;IACA,gBAAgB,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC;IACtD,aAAa,CAAC;IACd;IACA;IACA;IACA;IACA;IACA,YAAY,IAAI,QAAQ,GAAG,UAAU,YAAY,EAAE;IACnD,gBAAgB,IAAI,KAAK,GAAG,GAAG,GAAG,YAAY,CAAC,MAAM,CAAC;IACtD,gBAAgB,IAAI,UAAU,GAAG,EAAE,CAAC;IACpC,gBAAgB,IAAI,QAAQ,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtD;IACA;AACA;IACA,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACrE,oBAAoB,IAAI,EAAE,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpD,oBAAoB,IAAI,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC;IAC1C;IACA;IACA,oBAAoB,IAAI,EAAE,CAAC,IAAI,SAAS,CAAC,EAAE;IAC3C,wBAAwB,UAAU,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;IACxF,wBAAwB,QAAQ,GAAG,EAAE,CAAC;IACtC,qBAAqB;IACrB;IACA,wBAAwB,QAAQ,GAAG,CAAC,CAAC;IACrC,iBAAiB;IACjB;IACA,gBAAgB,UAAU,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;IAChF,gBAAgB,OAAO,UAAU,CAAC;IAClC,aAAa,CAAC;AACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA,YAAY,IAAI,SAAS,GAAG,UAAU,EAAE,EAAE,KAAK,EAAE;IACjD;IACA,gBAAgB,IAAI,KAAK,KAAK,SAAS;IACvC,oBAAoB,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAClD;IACA,gBAAgB,IAAI,KAAK,IAAI,CAAC,CAAC,KAAK;IACpC,oBAAoB,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IACpE,qBAAqB,IAAI,KAAK,KAAK,EAAE;IACrC,oBAAoB,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,CAAC;IACnF,aAAa,CAAC;IACd;IACA;IACA;IACA;IACA;IACA,YAAY,IAAI,YAAY,GAAG,UAAU,CAAC,EAAE;IAC5C,gBAAgB,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;IAChE,aAAa,CAAC;IACd;IACA;IACA;IACA;IACA;IACA,YAAY,IAAI,iBAAiB,GAAG,UAAU,QAAQ,EAAE;IACxD,gBAAgB,IAAI,GAAG,QAAQ,GAAG,CAAC,CAAC;IACpC,aAAa,CAAC;IACd;IACA;IACA;IACA;IACA;IACA,YAAY,IAAI,sBAAsB,GAAG,YAAY;IACrD,gBAAgB,IAAI,GAAG,IAAI,GAAG,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;IACtD,gBAAgB,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;IAC/B,aAAa,CAAC;IACd,YAAY,OAAO,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;IACnC,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACvC,gBAAgB,IAAI,EAAE,IAAI,SAAS,EAAE;IACrC,oBAAoB,SAAS,CAAC,GAAG,CAAC,CAAC;IACnC;IACA,oBAAoB,IAAI,qBAAqB,GAAG,MAAM,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF;IACA,oBAAoB,IAAI,iBAAiB,GAAG,qBAAqB,IAAI,EAAE,KAAK,IAAI,CAAC;IACjF;IACA;IACA;IACA;IACA;IACA,oBAAoB,IAAI,SAAS,IAAI,IAAI,GAAG,GAAG,IAAI,EAAE,EAAE,KAAK,KAAK,IAAI,iBAAiB,CAAC,EAAE;IACzF,wBAAwB,SAAS,GAAG,KAAK,CAAC;IAC1C,wBAAwB,IAAI,EAAE,CAAC;IAC/B,qBAAqB;IACrB;IACA,oBAAoB,iBAAiB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAC/C,oBAAoB,IAAI,YAAY,GAAG,gBAAgB,CAAC,GAAG,CAAC,CAAC;AAC7D;IACA,oBAAoB,sBAAsB,EAAE,CAAC;IAC7C,oBAAoB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IACtE,iBAAiB;IACjB,qBAAqB,IAAI,EAAE,IAAI,QAAQ,EAAE;IACzC,oBAAoB,IAAI,OAAO,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC/C;IACA,oBAAoB,IAAI,OAAO,CAAC,OAAO,EAAE;IACzC;IACA,wBAAwB,aAAa,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;IAC5D,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACvD,wBAAwB,IAAI,CAAC,IAAI,SAAS,EAAE;IAC5C,4BAA4B,YAAY,CAAC,CAAC,CAAC,CAAC;IAC5C,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,KAAK,EAAE,EAAE;IAC3C;IACA;IACA,4BAA4B,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC,CAAC;IACvF,yBAAyB;IACzB;IACA,wBAAwB,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;IACvD,qBAAqB;IACrB,yBAAyB,IAAI,OAAO,CAAC,QAAQ,EAAE;IAC/C;IACA,wBAAwB,IAAI,IAAI,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC;IACvD;IACA;IACA,wBAAwB,IAAI,CAAC,IAAI;IACjC,4BAA4B,MAAM,IAAI,WAAW,CAAC,uCAAuC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACvG;IACA,6BAA6B,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,OAAO,CAAC,EAAE,GAAG,CAAC;IAC9D,4BAA4B,MAAM,IAAI,WAAW,CAAC,cAAc,CAAC,CAAC;AAClE;IACA,wBAAwB,SAAS,CAAC,GAAG,CAAC,CAAC;IACvC,wBAAwB,IAAI,EAAE,CAAC;IAC/B,qBAAqB;IACrB,oBAAoB,iBAAiB,CAAC,GAAG,CAAC,CAAC;IAC3C,iBAAiB;IACjB,qBAAqB,IAAI,EAAE,KAAK,KAAK,EAAE;IACvC,oBAAoB,IAAI,IAAI,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACtD,oBAAoB,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9C,oBAAoB,IAAI,SAAS,EAAE;AACnC;IACA,wBAAwB,IAAI,IAAI,IAAI,SAAS,EAAE;IAC/C,4BAA4B,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAC9E,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACvD;IACA,4BAA4B,IAAI,EAAE,CAAC;IACnC;IACA;IACA,4BAA4B,IAAI,WAAW,GAAG,GAAG,IAAI,SAAS,CAAC;AAC/D;IACA,4BAA4B,GAAG,CAAC,WAAW,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,KAAK,CAAC,WAAW,EAAE;IAChG,gCAAgC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAClF,6BAA6B;IAC7B,yBAAyB;IACzB,wBAAwB,SAAS,GAAG,KAAK,CAAC;IAC1C,qBAAqB;IACrB,yBAAyB;IACzB;IACA;IACA,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AACvD;IACA,wBAAwB,IAAI,CAAC,IAAI,SAAS,EAAE;IAC5C;IACA,4BAA4B,SAAS,GAAG,IAAI,CAAC;IAC7C,4BAA4B,YAAY,CAAC,CAAC,CAAC,CAAC;IAC5C,4BAA4B,QAAQ,EAAE,CAAC;IACvC,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,IAAI,SAAS,EAAE;IACjD,4BAA4B,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAC3E,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,SAAS,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACpD;IACA,4BAA4B,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AACtD;IACA;IACA;IACA;IACA,4BAA4B,GAAG,IAAI,KAAK,YAAY,IAAI,GAAG,KAAK,YAAY,IAAI,EAAE,IAAI,IAAI,SAAS,CAAC,IAAI,EAAE,GAAG,IAAI,SAAS,CAAC;IAC3H,gCAAgC,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC;IAClF,yBAAyB;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,qBAAqB;IACrB,oBAAoB,iBAAiB,CAAC,GAAG,CAAC,CAAC;IAC3C,iBAAiB;IACjB,aAAa;IACb;IACA,YAAY,IAAI,aAAa,CAAC,MAAM,EAAE;IACtC,gBAAgB,IAAI,CAAC,GAAG,aAAa,CAAC,GAAG,EAAE,CAAC;IAC5C,gBAAgB,MAAM,IAAI,WAAW,CAAC,wCAAwC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7F,aAAa;IACb;IACA,YAAY,SAAS,CAAC,GAAG,CAAC,CAAC;AAC3B;IACA,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,UAAU,MAAM,EAAE;IACvC,YAAY,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC;IACjC,YAAY,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;IACrC,YAAY,IAAI,MAAM,GAAG,EAAE,CAAC;IAC5B,YAAY,IAAI,KAAK,GAAG,EAAE,CAAC;IAC3B,YAAY,IAAI,QAAQ,GAAG,EAAE,CAAC;IAC9B,YAAY,IAAI,QAAQ,GAAG,UAAU,MAAM,EAAE,WAAW,EAAE;IAC1D,gBAAgB,OAAO,MAAM,CAAC,MAAM;IACpC,oBAAoB,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;IACnD,aAAa,CAAC;IACd;IACA,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,gBAAgB,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtC,gBAAgB,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ;IACjD,oBAAoB,MAAM;IAC1B,gBAAgB,IAAI,CAAC,KAAK,CAAC,MAAM;IACjC,oBAAoB,MAAM,IAAI,aAAa,CAAC,uBAAuB,CAAC,CAAC;IACrE,gBAAgB,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;IACvC,gBAAgB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClC,aAAa;IACb;IACA,YAAY,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC/B,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC,gBAAgB,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,EAAE;IAC/C,oBAAoB,IAAI,QAAQ,GAAG,CAAC,CAAC;IACrC;IACA;IACA,oBAAoB,IAAI,QAAQ,CAAC,UAAU,EAAE;IAC7C,wBAAwB,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACjD;IACA,wBAAwB,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,mBAAmB,EAAE;IAC7E,4BAA4B,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;IACrD;IACA,4BAA4B,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC;IACtE,OAAO,QAAQ,CAAC,SAAS,GAAG,QAAQ,CAAC,iBAAiB,CAAC;IACvD,yBAAyB;IACzB,qBAAqB;IACrB;IACA;IACA,oBAAoB,OAAO,KAAK,CAAC,MAAM,EAAE;IACzC,wBAAwB,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC3D;IACA;IACA;IACA,wBAAwB,IAAI,EAAE,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAC,UAAU,CAAC;IACtI,4BAA4B,MAAM;IAClC,wBAAwB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;IACjD,qBAAqB;IACrB;IACA;IACA,oBAAoB,IAAI,CAAC,EAAE,KAAK,QAAQ,IAAI,EAAE,KAAK,KAAK,KAAK,UAAU,IAAI,QAAQ;IACnF,wBAAwB,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC;AAC5D;AACA;IACA;IACA;IACA;IACA,oBAAoB,IAAI,QAAQ,CAAC,OAAO,EAAE;IAC1C,wBAAwB,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACrD,wBAAwB,IAAI,CAAC,QAAQ;IACrC,4BAA4B,MAAM,IAAI,aAAa,CAAC,8BAA8B,GAAG,CAAC,CAAC,KAAK,GAAG,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;IACpH,6BAA6B,IAAI,QAAQ,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,EAAE;IACnE;IACA,4BAA4B,IAAI,CAAC,QAAQ,CAAC,OAAO;IACjD,gCAAgC,MAAM,IAAI,aAAa,CAAC,8BAA8B,GAAG,QAAQ,CAAC,KAAK,GAAG,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;IACtI,yBAAyB;IACzB,qBAAqB;IACrB,yBAAyB;IACzB;IACA,wBAAwB,GAAG;IAC3B;IACA,4BAA4B,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACrD,4BAA4B,IAAI,gBAAgB,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC/F,4BAA4B,IAAI,gBAAgB,EAAE;IAClD;IACA,gCAAgC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;IAClD,oCAAoC,MAAM,IAAI,aAAa,CAAC,oCAAoC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;IAChH,iCAAiC;IACjC;IACA,gCAAgC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACtD;IACA,gCAAgC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpD,gCAAgC,CAAC,EAAE,CAAC;IACpC,6BAA6B;IAC7B,yBAAyB;IACzB,+BAA+B,gBAAgB,CAAC;IAChD,qBAAqB;AACrB;IACA;IACA;IACA;IACA;IACA;AACA;IACA,oBAAoB,IAAI,QAAQ,CAAC,SAAS;IAC1C,wBAAwB,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChD;IACA,wBAAwB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7C;IACA,oBAAoB,OAAO,QAAQ,CAAC,MAAM,EAAE;IAC5C,wBAAwB,IAAI,QAAQ,CAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU;IACxI,4BAA4B,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC;IACvD;IACA,4BAA4B,MAAM;IAClC,qBAAqB;IACrB,iBAAiB;IACjB,qBAAqB,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,mBAAmB,EAAE;IAC/D;IACA,oBAAoB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC;IAC3C,wBAAwB,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAClD;IACA,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,oBAAoB,IAAI,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAChE;IACA,oBAAoB,IAAI,CAAC,aAAa,IAAI,CAAC,aAAa,CAAC,SAAS;IAClE,wBAAwB,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACnD,iBAAiB;IACjB,qBAAqB,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,EAAE;IACpD,oBAAoB,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,iBAAiB;IACjB,qBAAqB,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,EAAE;IAChD;IACA,oBAAoB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,iBAAiB;IACjB;IACA,gBAAgB,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IACtC,oBAAoB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,oBAAoB,IAAI,CAAC,CAAC,IAAI;IAC9B,wBAAwB,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACjF;IACA,iBAAiB;IACjB,aAAa;IACb;IACA,YAAY,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACpC,YAAY,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AACvC;IACA,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE,aAAa,EAAE;IACtD,YAAY,IAAI;IAChB;IACA,gBAAgB,aAAa,GAAG,aAAa,IAAI,EAAE,CAAC;IACpD;IACA;IACA,gBAAgB,KAAK,IAAI,CAAC,IAAI,aAAa;IAC3C,oBAAoB,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACrE;IACA;IACA;IACA;IACA,gBAAgB,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC3C;IACA;IACA,oBAAoB,IAAI,EAAE,GAAG,IAAI,aAAa,CAAC;IAC/C,wBAAwB,aAAa,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjE,oBAAoB,KAAK,EAAE,IAAI,IAAI,aAAa,CAAC;IACjD,wBAAwB,aAAa,CAAC,EAAE,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACnE,iBAAiB;AACjB;IACA,gBAAgB,IAAI,CAAC,GAAG,EAAE,CAAC;IAC3B,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5D,oBAAoB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC;IACA;IACA,oBAAoB,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IAC1C,wBAAwB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC;IAC5D,qBAAqB;AACrB;IACA,oBAAoB,GAAG,CAAC,EAAE;IAC1B,wBAAwB,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,EAAE;IACvD,4BAA4B,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,OAAO;IACxD;IACA,gCAAgC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7D,iCAAiC;IACjC,gCAAgC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAChD,gCAAgC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAChD;IACA,gCAAgC,IAAI,OAAO,CAAC,KAAK,WAAW;IAC5D,oCAAoC,MAAM,IAAI,aAAa,CAAC,CAAC,GAAG,sCAAsC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;AACnH;IACA,gCAAgC,IAAI,QAAQ,GAAG,CAAC,CAAC,MAAM,KAAK,OAAO,CAAC;IACpE;IACA,gCAAgC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ;IAChE,oCAAoC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1D;IACA,gCAAgC,GAAG,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ;IAChE,oCAAoC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC1D;IACA;IACA,gCAAgC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1E;IACA,gCAAgC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5D;IACA;IACA,gCAAgC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAChF;IACA,gCAAgC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5C,6BAA6B;IAC7B,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,EAAE;IAC5D,4BAA4B,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAC/C,4BAA4B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACrD,4BAA4B,IAAI,EAAE,IAAI,YAAY,UAAU,CAAC;IAC7D,gCAAgC,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/D;IACA;IACA;IACA;AACA;IACA;IACA;IACA,4BAA4B,IAAI,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC;IAClD,4BAA4B,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC1D;IACA;IACA,4BAA4B,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC/E;IACA,4BAA4B,IAAI,GAAG,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACvE;IACA;IACA,4BAA4B,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACrF;IACA,4BAA4B,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACvD,4BAA4B,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,4BAA4B,IAAI,aAAa,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC;AAC3G;IACA,4BAA4B,IAAI,CAAC,aAAa,IAAI,GAAG,YAAY,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,QAAQ,IAAI,EAAE,IAAI,YAAY,UAAU,CAAC,EAAE;IACnI;IACA,gCAAgC,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AACnD;IACA,gCAAgC,IAAI,MAAM,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC7D;IACA,gCAAgC,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE,EAAE;IAC1D,oCAAoC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzD,oCAAoC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjD,oCAAoC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAChD,iCAAiC;IACjC,qCAAqC,IAAI,MAAM,YAAY,KAAK,EAAE;IAClE;IACA,oCAAoC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5G,iCAAiC;IACjC,qCAAqC;IACrC,oCAAoC,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC/D,oCAAoC,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAClE;IACA,oCAAoC,IAAI,KAAK,GAAG,CAAC;IACjD,wCAAwC,KAAK,GAAG,EAAE,GAAG,KAAK,CAAC;IAC3D;IACA,oCAAoC,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,IAAI,EAAE;IAChE;IACA,wCAAwC,MAAM,IAAI,eAAe,CAAC,qBAAqB,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1G;IACA,oCAAoC,IAAI,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACvE;IACA,oCAAoC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACxD,oCAAoC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;IAC1D;IACA,oCAAoC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACpD,iCAAiC;IACjC,6BAA6B;IAC7B,iCAAiC;IACjC;IACA,gCAAgC,GAAG,MAAM;IACzC,oCAAoC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;IACxD,gCAAgC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC5C,6BAA6B;AAC7B;IACA,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,IAAI,MAAM,CAAC;IACvC,4BAA4B,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;AAC5C;IACA,4BAA4B,IAAI,CAAC,IAAI,QAAQ,CAAC,OAAO;IACrD,gCAAgC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE;IACA,iCAAiC,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,mBAAmB;IACzE,gCAAgC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAClD,iCAAiC,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,EAAE;IAC5D,gCAAgC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAClD,gCAAgC,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC;IAChD,6BAA6B;AAC7B;IACA;IACA;IACA,4BAA4B,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE;IAClD,gCAAgC,MAAM,GAAG,CAAC,CAAC;IAC3C,gCAAgC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,6BAA6B;IAC7B;IACA;IACA;IACA,iCAAiC,IAAI,CAAC,IAAI,aAAa,IAAI,CAAC,KAAK,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE;IACzF,gCAAgC,MAAM,GAAG,CAAC,CAAC;IAC3C,gCAAgC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7D,6BAA6B;IAC7B;IACA,iCAAiC,IAAI,CAAC,IAAI,IAAI,EAAE;IAChD,gCAAgC,MAAM,GAAG,CAAC,CAAC;IAC3C,gCAAgC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IACpD,6BAA6B;IAC7B;IACA,4BAA4B,IAAI,MAAM;IACtC,gCAAgC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;AAClD;IACA,4BAA4B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,aAAa;IACb,YAAY,MAAM,KAAK,EAAE;IACzB,gBAAgB,MAAM,IAAI,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;IAClE,aAAa;IACb,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,QAAQ,SAAS,IAAI,CAAC,KAAK,EAAE;IAC7B,YAAY,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACnC,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACrC;IACA,YAAY,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;IACnC,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;IACrC,SAAS;AACT;IACA,QAAQ,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;IAC9C,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,KAAK,GAAG,EAAE,CAAC;IACrE,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC;IACxE,YAAY,OAAO,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC;IACzD,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE,MAAM,EAAE;IACzD,YAAY,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;IAC/B,YAAY,MAAM,GAAG,OAAO,MAAM,KAAK,WAAW,GAAG,CAAC,GAAG,MAAM,CAAC;IAChE,YAAY,IAAI,GAAG,GAAG,UAAU,CAAC,EAAE;IACnC,gBAAgB,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAC9C,aAAa,CAAC;IACd,YAAY,IAAI,IAAI,GAAG,EAAE,CAAC;IAC1B,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,UAAU,GAAG,EAAE,CAAC;IACtI,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,SAAS,GAAG,EAAE,CAAC;IACxI,YAAY,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,UAAU,GAAG,IAAI,CAAC,KAAK,GAAG,eAAe,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;IAC7I,YAAY,IAAI,IAAI,IAAI,KAAK,EAAE;IAC/B,gBAAgB,IAAI,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,QAAQ,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;IACtF,aAAa;IACb,YAAY,IAAI,IAAI,EAAE,CAAC;IACvB,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,UAAU,MAAM,EAAE;IACtC,YAAY,IAAI,CAAC,GAAG,EAAE,CAAC;IACvB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpD,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAClC;IACA,gBAAgB,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;IACtC,oBAAoB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC;IACA,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,oBAAoB,SAAS;IAC7B,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,EAAE;IAC/C,oBAAoB,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,OAAO,EAAE;IAClD;IACA,wBAAwB,IAAI,QAAQ,GAAG,CAAC,CAAC,SAAS,GAAG,MAAM,GAAG,OAAO,CAAC;IACtE,wBAAwB,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAC3C,wBAAwB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,wBAAwB,CAAC,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;IAC3C,wBAAwB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,wBAAwB,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAC1C,wBAAwB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACzC,wBAAwB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClC,qBAAqB;IACrB,iBAAiB;IACjB,qBAAqB,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,EAAE;IACpD,oBAAoB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,oBAAoB,IAAI,IAAI,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACvC,oBAAoB,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;IACnC,oBAAoB,IAAI,CAAC,CAAC,KAAK,KAAK,QAAQ,EAAE;IAC9C;IACA,wBAAwB,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACnD,wBAAwB,IAAI,IAAI,EAAE;IAClC,4BAA4B,OAAO,IAAI,CAAC,KAAK,EAAE;IAC/C,gCAAgC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IAClD,6BAA6B;IAC7B,4BAA4B,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IAC3C,4BAA4B,SAAS;IACrC,yBAAyB;IACzB,qBAAqB;AACrB;IACA,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC9B,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,SAAS,CAAC;IACV,QAAQ,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE,aAAa,EAAE;IACjD,YAAY,CAAC,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;IACtC,YAAY,aAAa,GAAG,aAAa,IAAI,EAAE,CAAC;IAChD;IACA,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1C,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACzC,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,aAAa,CAAC,CAAC;IACrD,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,UAAU,iBAAiB,EAAE;IACrD,YAAY,IAAI,SAAS,GAAG,UAAU,MAAM,EAAE;IAC9C,gBAAgB,IAAI,MAAM,GAAG,EAAE,CAAC;IAChC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC/D,oBAAoB,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,oBAAoB,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;IACxC,oBAAoB,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,mBAAmB,EAAE;IAClE,wBAAwB,MAAM,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,qBAAqB;IACrB,yBAAyB,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,EAAE;IAC5D;IACA,wBAAwB,CAAC,EAAE,CAAC;IAC5B;IACA,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,wBAAwB,CAAC,CAAC,YAAY,GAAG,IAAI,CAAC;IAC9C,wBAAwB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,qBAAqB;IACrB,yBAAyB,IAAI,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,QAAQ,EAAE;IAC5D,wBAAwB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACtD,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa,CAAC;IACd,YAAY,OAAO,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC5D,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,aAAa,GAAG,UAAU,GAAG,EAAE;IAC3C,YAAY,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;IACxC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxD,gBAAgB,IAAI,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACpC,oBAAoB,CAAC,EAAE,CAAC;IACxB,oBAAoB,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACnC,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,YAAY,GAAG,UAAU,GAAG,EAAE;IAC1C,YAAY,OAAO,GAAG,CAAC,OAAO,CAAC,0BAA0B,EAAE,UAAU,GAAG,EAAE,CAAC,EAAE;IAC7E,gBAAgB,IAAI,CAAC;IACrB,oBAAoB,OAAO,CAAC,CAAC;IAC7B,gBAAgB,OAAO,GAAG,CAAC;IAC3B,aAAa,CAAC,CAAC;IACf,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,UAAU,iBAAiB,EAAE,GAAG,EAAE;IACvD,YAAY,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;IAC5B,YAAY,IAAI,GAAG,GAAG,OAAO,iBAAiB,KAAK,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,iBAAiB;IAClH,oBAAoB,GAAG,GAAG,EAAE;IAC5B,oBAAoB,IAAI,GAAG,OAAO,GAAG,CAAC,IAAI,KAAK,WAAW,GAAG,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;AACjF;IACA,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;IAC9B,gBAAgB,IAAI,IAAI,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC;IACA,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACrD,oBAAoB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/B;IACA,oBAAoB,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;IAC5C,wBAAwB,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,wBAAwB,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvG,wBAAwB,CAAC,IAAI,CAAC,CAAC;IAC/B,qBAAqB;IACrB;IACA,wBAAwB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrC,iBAAiB;IACjB,gBAAgB,GAAG,GAAG,IAAI,CAAC;IAC3B,aAAa;AACb;IACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxD,gBAAgB,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B;IACA,gBAAgB,IAAI,CAAC,KAAK,GAAG,EAAE;IAC/B,oBAAoB,CAAC,GAAG,IAAI,CAAC;IAC7B,iBAAiB;AACjB;IACA,gBAAgB,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACjC,oBAAoB,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,EAAE;IACxC,wBAAwB,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;AAC/C;IACA,wBAAwB,IAAI,KAAK,KAAK,IAAI;IAC1C,4BAA4B,CAAC,GAAG,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5E,6BAA6B,IAAI,KAAK,KAAK,GAAG;IAC9C,4BAA4B,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;IAC1E,6BAA6B,IAAI,KAAK,KAAK,WAAW;IACtD,4BAA4B,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;IAC7E,6BAA6B,IAAI,KAAK,KAAK,QAAQ,CAAC,KAAK,EAAE;IAC3D,4BAA4B,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC;IACvG,yBAAyB;IACzB,6BAA6B,IAAI,KAAK,KAAK,WAAW,EAAE;IACxD;IACA,4BAA4B,IAAI,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC/D;IACA,4BAA4B,IAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,oCAAoC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,4BAA4B,CAAC,GAAG,QAAQ,GAAG,IAAI,GAAG,OAAO,GAAG,EAAE,CAAC;IAC/D,yBAAyB;IACzB,6BAA6B,IAAI,KAAK,KAAK,QAAQ,EAAE;IACrD,4BAA4B,IAAI,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC;IAC9D,oCAAoC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,oCAAoC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9D,oCAAoC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9D,oCAAoC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,4BAA4B,CAAC,GAAG,iBAAiB,GAAG,EAAE,GAAG,KAAK,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,EAAE,CAAC;AACjG;IACA,yBAAyB;IACzB,6BAA6B,IAAI,KAAK,KAAK,MAAM,EAAE;IACnD,4BAA4B,IAAI,MAAM,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC/D,4BAA4B,IAAI,EAAE,GAAG,EAAE,EAAE,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF;IACA,4BAA4B,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;IACrD,gCAAgC,IAAI,IAAI,GAAG,EAAE,CAAC;IAC9C,gCAAgC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACvE,oCAAoC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,EAAE;IAClE,wCAAwC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACtE,qCAAqC;IACrC,iCAAiC;IACjC,gCAAgC,IAAI,CAAC,IAAI,EAAE,CAAC;IAC5C,gCAAgC,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,cAAc,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,gBAAgB,CAAC;IAC3G,6BAA6B;IAC7B;IACA,iCAAiC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;IAC1D,gCAAgC,EAAE,GAAG,cAAc,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACtE,6BAA6B;IAC7B;IACA,iCAAiC;IACjC,gCAAgC,EAAE,GAAG,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC1H,6BAA6B;AAC7B;IACA,4BAA4B,CAAC,GAAG,EAAE,GAAG,SAAS,GAAG,IAAI,GAAG,UAAU,CAAC;AACnE;IACA,yBAAyB;IACzB,6BAA6B,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,SAAS,EAAE;IACzE;IACA,4BAA4B,IAAI,QAAQ,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACtE,4BAA4B,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChE,gCAAgC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;IACvD,oCAAoC,CAAC,EAAE,CAAC;IACxC,oCAAoC,SAAS;IAC7C,iCAAiC;IACjC,gCAAgC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,6BAA6B;IAC7B;IACA,4BAA4B,CAAC,GAAG,CAAC,KAAK,KAAK,KAAK,GAAG,QAAQ,GAAG,SAAS,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnJ,4BAA4B,CAAC,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrH,yBAAyB;IACzB,6BAA6B,IAAI,KAAK,KAAK,OAAO,EAAE;IACpD,4BAA4B,IAAI,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IAC9E,gCAAgC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;IACpD,oCAAoC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/D,gCAAgC,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,6BAA6B,CAAC,CAAC;IAC/B,4BAA4B,CAAC,GAAG,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnH,yBAAyB;IACzB,6BAA6B,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,eAAe;IACjF,4BAA4B,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,KAAK,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;IACxF,6BAA6B;IAC7B,4BAA4B,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/C;IACA,yBAAyB;AACzB;IACA,wBAAwB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,qBAAqB;IACrB;IACA,wBAAwB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD,iBAAiB;IACjB,qBAAqB,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;IACrC,oBAAoB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,CAAC,KAAK,GAAG;IACjC,wBAAwB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5G;IACA,wBAAwB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjC,SAAS,CAAC;AACV;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,MAAM,CAAC,MAAM,EAAE;IAChC,YAAY,IAAI,QAAQ,CAAC,YAAY,EAAE;IACvC,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACrD,SAAS;AACT;IACA,QAAQ,SAAS,GAAG,CAAC,MAAM,EAAE;IAC7B;IACA;IACA,YAAY,GAAG,MAAM,CAAC,UAAU,EAAE;IAClC,gBAAgB,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;IACzC,aAAa;IACb,YAAY,IAAI,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7C,gBAAgB,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;IAC3C;IACA,YAAY,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IACtC,gBAAgB,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC3C,gBAAgB,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC3C,gBAAgB,IAAI,EAAE,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,UAAU,EAAE;IACtD,oBAAoB,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3F,aAAa;IACb,iBAAiB,IAAI,eAAe,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;IACpE,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb;IACA,YAAY,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IACtC,gBAAgB,IAAI,EAAE,GAAG,EAAE,CAAC;IAC5B,gBAAgB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACzC,oBAAoB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;IAC1C,iBAAiB,CAAC,CAAC;IACnB,gBAAgB,IAAI,GAAG,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IACrD,gBAAgB,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IACrC,oBAAoB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,oBAAoB,MAAM,CAAC,oBAAoB,EAAE,CAAC;IAClD,iBAAiB;IACjB,aAAa;IACb;IACA;IACA,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC/C,YAAY,MAAM,CAAC,gBAAgB,EAAE,CAAC;IACtC;IACA,YAAY,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/D,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,SAAS,CAAC,MAAM,EAAE;IACnC,YAAY,IAAI,MAAM,CAAC;IACvB,YAAY,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;IAClC,gBAAgB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACrC,gBAAgB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAC5C;IACA,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,iBAAiB,CAAC,CAAC;IACnB,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,YAAY,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;IAClC,gBAAgB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACrC,gBAAgB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAC/C;IACA,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,iBAAiB,CAAC,CAAC;IACnB,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,YAAY,IAAI,QAAQ,CAAC,YAAY,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;IAC9D,gBAAgB,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;IACnC,oBAAoB,MAAM,GAAG,KAAK,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;IACxD,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC;IACzF,iBAAiB;AACjB;IACA,gBAAgB,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;IAC5C,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,iBAAiB,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;IAC1C,gBAAgB,IAAI,GAAG,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC5C,gBAAgB,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACnC,oBAAoB,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;IAC9C,oBAAoB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AACnC;IACA,oBAAoB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE;IACzD,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACrF,wBAAwB,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3G,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnG,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5G,wBAAwB,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACxE,qBAAqB;IACrB,oBAAoB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpC,oBAAoB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACtD,SAAS;IAET;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE;IAC/C,YAAY,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC3C,YAAY,IAAI,OAAO,CAAC,UAAU,EAAE,EAAE;IACtC,gBAAgB,IAAI,EAAE,GAAG,KAAK,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IAC7D;IACA,gBAAgB,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IAC/E,oBAAoB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACzC,iBAAiB,CAAC,CAAC,CAAC;IACpB,gBAAgB,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;IAChG,aAAa;IACb,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAC;IAClE,SAAS;IAkBT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE;IACvC,YAAY,IAAI,OAAO,CAAC,UAAU,EAAE,IAAI,OAAO,CAAC,UAAU,EAAE,EAAE;IAC9D,gBAAgB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3G,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb;IACA,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;IAC/D,YAAY,IAAI,KAAK,CAAC,CAAC,CAAC;IACxB,gBAAgB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACrC,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;IAC5D,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,CAAC,EAAE;IACrC,YAAY,IAAI,OAAO,SAAS,KAAK,SAAS;IAC9C,gBAAgB,IAAI,eAAe,CAAC,SAAS,CAAC;IAC9C,oBAAoB,SAAS,GAAG,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACpD,YAAY,IAAI,SAAS;IACzB,gBAAgB,OAAO,CAAC,CAAC;IACzB,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE;IAClC,YAAY,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE;IAC9B,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IACrD,oBAAoB,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE;IAC3D,wBAAwB,IAAI,OAAO,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD,wBAAwB,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;IAC/C,4BAA4B,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACjD,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,iBAAiB,GAAG,GAAG,CAAC,QAAQ,EAAE;IAClC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IAC9D,oBAAoB,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;IACnD,wBAAwB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7C,iBAAiB;IACjB,aAAa;IACb;IACA,YAAY,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACjC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,IAAI,CAAC,MAAM,EAAE;IAC9B,YAAY,IAAI,QAAQ,CAAC,YAAY,EAAE;IACvC,gBAAgB,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;IACzC,oBAAoB,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1D,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,gBAAgB,EAAE,MAAM,CAAC,CAAC,CAAC;IACjE,aAAa;IACb,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACnD,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,GAAG,CAAC,MAAM,EAAE;IAC7B,YAAY,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC,CAAC;IACtD,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,OAAO,CAAC,MAAM,EAAE;IACjC,YAAY,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;IAC3D,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,OAAO,CAAC,MAAM,EAAE;IACjC,YAAY,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC;IAC3D,SAAS;IA+CT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,WAAW,CAAC,MAAM,EAAE;IACrC,YAAY,GAAG,MAAM,CAAC,WAAW,EAAE,EAAE;IACrC,gBAAgB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,IAAI,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACzD,gBAAgB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;IACxC,oBAAoB,GAAG,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;IACrC,oBAAoB,GAAG,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACvC,oBAAoB,MAAM,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;IAC7C,oBAAoB,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC/C,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAChD,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAChD,oBAAoB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9C,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;IAChD,oBAAoB,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,iBAAiB,EAAE,IAAI,CAAC,CAAC;IACzB;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,IAAI,CAAC,MAAM,EAAE;IAC9B,YAAY,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAC7D,gBAAgB,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACxC;IACA,YAAY,IAAI,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;AAC3D;IACA,YAAY,IAAI,QAAQ,CAAC,YAAY,EAAE;IACvC,gBAAgB,IAAI,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE;IACzD,oBAAoB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAChF,iBAAiB;IACjB,qBAAqB,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IAC/C,oBAAoB,OAAO,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChD,iBAAiB;IACjB,qBAAqB,GAAG,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;IAC5C,oBAAoB,OAAO,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3D,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,IAAI,GAAG,EAAE,MAAM;IAC3B,oBAAoB,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;AACrD;IACA,YAAY,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;IAC1D,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;IACxD,gBAAgB,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE;IAC9C,oBAAoB,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9C,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,iBAAiB;AACjB;IACA,gBAAgB,MAAM,GAAG,CAAC,CAAC;IAC3B,aAAa;IACb;IACA,iBAAiB,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,EAAE;IAC5C,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,gBAAgB,IAAI,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC;IAC3C,gBAAgB,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClE,gBAAgB,MAAM,GAAG,CAAC,CAAC;IAC3B;IACA,gBAAgB,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACjC,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACnE,aAAa;IACb;IACA;IACA,iBAAiB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,EAAE;IAChD,gBAAgB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtE,gBAAgB,MAAM,GAAG,MAAM,CAAC;IAChC,aAAa;IACb,iBAAiB,GAAG,MAAM,CAAC,UAAU,GAAG,CAAC,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;IACjE,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,CAAC;IAC5D,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,gBAAgB,EAAE,CAAC,MAAM,EAAE,CAAC;IACpE,gBAAgB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,aAAa;IACb,iBAAiB;IACjB;IACA;IACA;IACA,gBAAgB,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAC/C;IACA,gBAAgB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;AAClD;IACA;IACA;IACA,gBAAgB,IAAI,UAAU,IAAI,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IACjE,oBAAoB,GAAG,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;IAC7C,oBAAoB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;IAChE,iBAAiB;AACjB;IACA,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE;IACrD,wBAAwB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,wBAAwB,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC1C;IACA,gBAAgB,IAAI,CAAC,CAAC;IACtB;IACA,gBAAgB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAC9B,oBAAoB,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACtC,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IACnC,oBAAoB,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACnD,oBAAoB,IAAI,EAAE,GAAG,CAAC,CAAC;IAC/B,oBAAoB,KAAK,IAAI,CAAC,IAAI,OAAO,EAAE;IAC3C,wBAAwB,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;IAC1C,gCAAgC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnD,wBAAwB,IAAI,EAAE,EAAE;IAChC,4BAA4B,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACpD,4BAA4B,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IACtD,4BAA4B,CAAC,IAAI,CAAC,CAAC;IACnC,yBAAyB;IACzB,qBAAqB;IACrB,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACzF,iBAAiB;IACjB,qBAAqB;IACrB;IACA,oBAAoB,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACnG,oBAAoB,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,oBAAoB,IAAI,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChD,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC;IACA,wBAAwB,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACrD,4BAA4B,CAAC,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IACvD,4BAA4B,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,CAAC;IACzD,4BAA4B,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACpD;IACA,4BAA4B,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAC5C,4BAA4B,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;IAClD,4BAA4B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7E,4BAA4B,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACvF,yBAAyB,CAAC,CAAC;IAC3B,qBAAqB;IACrB,oBAAoB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnF,iBAAiB;AACjB;AACA;IACA;IACA,gBAAgB,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACvD;IACA,gBAAgB,IAAI,MAAM,CAAC,KAAK,EAAE,EAAE;IACpC,oBAAoB,MAAM,GAAG,MAAM,CAAC;IACpC,iBAAiB;IACjB,qBAAqB,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE;IACxD;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACpE,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3D,iBAAiB;AACjB;IACA;IACA,gBAAgB,IAAI,IAAI,GAAG,CAAC;IAC5B,oBAAoB,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;AAC1C;IACA,gBAAgB,IAAI,CAAC;IACrB,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACnD;IACA,gBAAgB,IAAI,GAAG;IACvB,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACrD,aAAa;AACb;IACA,YAAY,IAAI,WAAW,IAAI,QAAQ,CAAC,YAAY;IACpD,gBAAgB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACvC;IACA,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,IAAI,CAAC,MAAM,EAAE;IAC9B,YAAY,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;IACzC,gBAAgB,IAAI,MAAM,CAAC;IAC3B;IACA,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACvC;IACA,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E;IACA,gBAAgB,IAAI,GAAG,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC;IACpD;IACA;IACA,gBAAgB,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE;IAC7B,oBAAoB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,GAAG,GAAG,CAAC,KAAK,KAAK,EAAE,EAAE;IACzC,wBAAwB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/C,wBAAwB,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;IAC7C,4BAA4B,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACjE,yBAAyB,CAAC,CAAC;IAC3B,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9D,qBAAqB;IACrB,iBAAiB;IACjB;IACA,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IAC7C,aAAa;IACb,YAAY,OAAO,OAAO,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAClD,SAAS;IACT;IACA,QAAQ,SAAS,UAAU,CAAC,MAAM,EAAE,OAAO,EAAE;IAC7C;IACA;IACA,YAAY,MAAM,CAAC,UAAU,GAAG,OAAO,IAAI,EAAE,CAAC;IAC9C,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,OAAO,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE;IAC9C;IACA,YAAY,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC;IACA;IACA,YAAY,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAC5B,gBAAgB,MAAM,IAAI,cAAc,CAAC,sCAAsC,CAAC,CAAC;IACjF,aAAa;IACb;IACA;IACA,YAAY,GAAG,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;IACjC,gBAAgB,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;IAC/F;IACA;IACA,YAAY,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;IACtC,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IAC3D,aAAa;IACb;IACA;IACA,YAAY,GAAG,GAAG,CAAC,KAAK,KAAK,CAAC,EAAE;IAChC,gBAAgB,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC;IACpC,aAAa;IACb;IACA;IACA,YAAY,IAAI,OAAO,KAAK,KAAK,WAAW;IAC5C,gBAAgB,KAAK,GAAG,IAAI,CAAC;IAC7B;IACA,YAAY,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IAC9B;IACA,YAAY,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;IAClC,YAAY,IAAI,MAAM,CAAC;IACvB,YAAY,IAAI,GAAG,CAAC;IACpB;IACA,YAAY,GAAG,IAAI,GAAG,CAAC,EAAE;IACzB,gBAAgB,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/B,aAAa;IACb;IACA,YAAY,IAAI,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,EAAE;AAC9C;IACA,gBAAgB,IAAI,GAAG,GAAG,oBAAoB,EAAE;IAChD;IACA,oBAAoB,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC5D,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,GAAG,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAChD,iBAAiB;AACjB;IACA,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,KAAK,EAAE;IAC3B,oBAAoB,MAAM,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;IAC9C,iBAAiB;IACjB,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AACzD;IACA,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,CAAC;IAC5D,aAAa;IACb,SAAS;AACT;IACA,QAAQ,SAAS,OAAO,CAAC,MAAM,EAAE;IACjC;IACA;IACA,YAAY,IAAI,MAAM,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9E,gBAAgB,OAAO,MAAM,CAAC;IAC9B;IACA,YAAY,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;IACtC,gBAAgB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC3C;IACA,YAAY,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC;AAC9C;AACA;IACA,YAAY,IAAI,MAAM,CAAC,UAAU,EAAE,EAAE;IACrC,gBAAgB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAC1C,gBAAgB,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAC9B,oBAAoB,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACnD,oBAAoB,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;IAChD,wBAAwB,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;IAChD,wBAAwB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzH,qBAAqB;IACrB,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACvE,oBAAoB,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACvE,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IAC7G,iBAAiB;IACjB,aAAa;IACb;IACA,gBAAgB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IAC7D,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,QAAQ,CAAC,MAAM,EAAE;IAClC,YAAY,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;IACrC,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,QAAQ,CAAC,MAAM,EAAE;IAClC,YAAY,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;IACrC,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,SAAS,CAAC,MAAM,EAAE;IACnC,YAAY,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,YAAY,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,YAAY,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC1E,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,GAAG,CAAC,MAAM,EAAE;IAC7B,YAAY,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,YAAY,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,YAAY,IAAI,EAAE,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,UAAU,EAAE;IAClD,gBAAgB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACtD,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACpD,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,GAAG,CAAC,MAAM,EAAE;IAC7B,YAAY,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,YAAY,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,YAAY,IAAI,EAAE,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,UAAU,EAAE,EAAE;IACpD,gBAAgB,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;IAClD,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACzC,iBAAiB;IACjB,qBAAqB,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACtD,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC3C,iBAAiB;IACjB,qBAAqB,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACtD,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC3C,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACtD,aAAa;IACb,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IACpD,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,SAAS,CAAC,MAAM,EAAE;IACnC,YAAY,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC;IAC/B,YAAY,CAAC,GAAG,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;IAChD,YAAY,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;IAC5E,YAAY,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,QAAQ,CAAC,MAAM,EAAE;IAClC;IACA,YAAY,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IAC1C,YAAY,IAAI;IAChB,gBAAgB,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACxC,gBAAgB,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;IACpD,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IAC5D,gBAAgB,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,gBAAgB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,gBAAgB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACrC,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;IAC/B,gBAAgB,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC;IACA,gBAAgB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACnC,oBAAoB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACvE,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,OAAO,QAAQ,CAAC;IACpC,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,CAAC,EAAE;IACtB,gBAAgB,OAAO,QAAQ,CAAC;IAChC,aAAa;IACb,SAAS;AACT;IACA,QAAQ,SAAS,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE;IACpC,YAAY,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IAClC,gBAAgB,CAAC,CAAC,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;IAClD,aAAa,CAAC,CAAC;IACf,gBAAgB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAe;IACtC,YAAY,OAAO,IAAI,EAAE;IACzB,gBAAgB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;IAChC,gBAAgB,IAAI,CAAC,GAAG,CAAC;IACzB,oBAAoB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,gBAAgB,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC/B,gBAAgB,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC,gBAAgB,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE;IAC7E,oBAAoB,IAAI,CAAC,GAAG,EAAE,CAAC;IAC/B,oBAAoB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjC,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,GAAG,GAAG;IACvB,YAAY,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChD,YAAY,IAAI,OAAO,CAAC,IAAI,CAAC;IAC7B,gBAAgB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,YAAY,IAAI,UAAU,CAAC,IAAI,CAAC;IAChC,gBAAgB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9D,YAAY,IAAI,QAAQ,CAAC,gBAAgB,IAAI,YAAY,CAAC,IAAI,CAAC;IAC/D,gBAAgB,OAAO,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC9C,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC9C,SAAS;AACT;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,GAAG,GAAG;IACvB,YAAY,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAChD,YAAY,IAAI,OAAO,CAAC,IAAI,CAAC;IAC7B,gBAAgB,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/B,YAAY,IAAI,UAAU,CAAC,IAAI,CAAC;IAChC,gBAAgB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IAC9D,YAAY,IAAI,QAAQ,CAAC,gBAAgB,IAAI,YAAY,CAAC,IAAI,CAAC;IAC/D,gBAAgB,OAAO,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC9C,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC9C,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,IAAI,CAAC,CAAC,EAAE;IACzB,YAAY,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC;IAClC,gBAAgB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACpD,SAAS;AACT;IACA,QAAQ,SAAS,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE;IACnC,YAAY,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,QAAQ,EAAE,GAAG,KAAK,CAAC;IAC/C,YAAY,IAAI,MAAM,GAAG,UAAU,CAAC,EAAE;IACtC,gBAAgB,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC;IACjC,oBAAoB,OAAO,CAAC,CAAC,UAAU,CAAC;IACxC,gBAAgB,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,EAAE;IACpC,oBAAoB,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;IACtC,wBAAwB,OAAO,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC;IACnC,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC;IACjC,oBAAoB,OAAO,CAAC,CAAC,KAAK,CAAC;AACnC;IACA,gBAAgB,OAAO,CAAC,CAAC,KAAK,CAAC;IAC/B,aAAa,CAAC;IACd,YAAY,IAAI,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;IACvF,YAAY,OAAO,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAC3D,gBAAgB,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC;IACpC,wBAAwB,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACzC,gBAAgB,IAAI,GAAG,KAAK,MAAM;IAClC,oBAAoB,OAAO,IAAI,GAAG,IAAI,CAAC;IACvC,gBAAgB,OAAO,IAAI,GAAG,IAAI,CAAC;IACnC,aAAa,CAAC,CAAC,CAAC;IAChB,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE;IACnC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACjC,gBAAgB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACrC,aAAa;IACb;IACA,YAAY,IAAI,MAAM,CAAC;IACvB,YAAY,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACtE,gBAAgB,OAAO,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACpE,aAAa;AACb;IACA;IACA,YAAY,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAClC,gBAAgB,MAAM,IAAI,cAAc,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;IAC3E,aAAa;AACb;IACA;IACA,YAAY,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IACtC,gBAAgB,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC9D;IACA;IACA;IACA;IACA;IACA;IACA,aAAa;AACb;IACA,YAAY,IAAI,MAAM,CAAC,UAAU,EAAE,IAAI,OAAO,IAAI,KAAK,WAAW,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;IACzF;IACA;IACA;IACA;IACA;IACA,gBAAgB,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC/C,gBAAgB,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC9C,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC;IACxD,aAAa;IACb,iBAAiB,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,IAAI,EAAE;IACrH,gBAAgB,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACtC;IACA,gBAAgB,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC;IAC9C,aAAa;IACb,iBAAiB,IAAI,MAAM,CAAC,KAAK,KAAK,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAC1E,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;IACrC,gBAAgB,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACzD,aAAa;IACb,iBAAiB,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,KAAK,KAAK,EAAE;IACpE,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,gBAAgB,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/C,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACrE;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACnE,aAAa;IACb,iBAAiB,IAAI,QAAQ,CAAC,YAAY,IAAI,eAAe,CAAC,MAAM,CAAC,EAAE;IACvE,gBAAgB,IAAI,QAAQ,CAAC;IAC7B,gBAAgB,IAAI,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IACnD,oBAAoB,MAAM,CAAC,MAAM,EAAE,CAAC;IACpC,oBAAoB,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAChF,iBAAiB;IACjB,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7E,gBAAgB,IAAI,QAAQ;IAC5B,oBAAoB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACrD,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,CAAC;IACtB,gBAAgB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAC7C,oBAAoB,CAAC,GAAG,MAAM,CAAC,KAAK,KAAK,EAAE,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACtF,oBAAoB,MAAM,CAAC,QAAQ,EAAE,CAAC;IACtC,iBAAiB;IACjB;IACA;IACA,gBAAgB,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC;IAC9D,oBAAoB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3C;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;AACpE;IACA,gBAAgB,IAAI,CAAC;IACrB,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACnD,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE;IAC7B,YAAY,IAAI,WAAW,GAAG,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,OAAO,CAAC,KAAK,WAAW,CAAC;IAC9E,YAAY,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,WAAW,EAAE;IAC/C,gBAAgB,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC;IACtC,gBAAgB,CAAC,GAAG,CAAC,CAAC;IACtB;IACA;IACA,gBAAgB,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IACxC,oBAAoB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B;IACA,oBAAoB,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACxE;IACA,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B;IACA,oBAAoB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,iBAAiB;IACjB;IACA,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/D;IACA,gBAAgB,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtF,aAAa;AACb;AACA;IACA,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IACrD,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,WAAW,CAAC,CAAC,EAAE;IAChC,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC;AACpC;IACA,YAAY,IAAI,CAAC,GAAG,CAAC;IACrB,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1B;IACA,YAAY,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG;IAClC,gBAAgB,QAAQ,GAAG,CAAC,CAAC;IAC7B,iBAAiB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;IACtC,gBAAgB,QAAQ,GAAG,CAAC,CAAC;IAC7B,iBAAiB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG;IACtC,gBAAgB,QAAQ,GAAG,CAAC,CAAC;IAC7B;IACA,gBAAgB,QAAQ,GAAG,CAAC,CAAC;IAC7B,YAAY,OAAO,QAAQ,CAAC;IAC5B,SAAS;AACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,UAAU,CAAC,CAAC,EAAE;IAC/B,YAAY,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC9B,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACxC,gBAAgB,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,gBAAgB,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACrE,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC;IAC3B,gBAAgB,OAAO,CAAC,CAAC;IACzB,YAAY,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;IACvC,gBAAgB,IAAI;IACpB,oBAAoB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,EAAE;IAC1B,oBAAoB,CAAC,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,iBAAiB;IACjB,aAAa;AACb;IACA,YAAY,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,YAAY,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC;IAClC,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AAET;IACA,QAAQ,SAAS,KAAK,CAAC,MAAM,EAAE;IAC/B;IACA;IACA;IACA,YAAY,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC;IACzC;IACA,YAAY,IAAI,CAAC,KAAK,EAAE,EAAE;IAC1B,gBAAgB,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,EAAE;IACzC,wBAAwB,GAAG,GAAG,MAAM,CAAC,QAAQ,EAAE,IAAI,IAAI,MAAM,CAAC,CAAC,CAAC;IAChE,wBAAwB,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;IAChD,wBAAwB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IACvC,oBAAoB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IAC1C,wBAAwB,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,EAAE;IAC5C,4BAA4B,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC7E,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IACtD,4BAA4B,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;IAC7F,yBAAyB;IACzB,qBAAqB,CAAC,CAAC;AACvB;IACA,oBAAoB,IAAI,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAChD;IACA,oBAAoB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IAC1C,wBAAwB,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;IAC9E,qBAAqB,CAAC,CAAC;AACvB;IACA,oBAAoB,MAAM,CAAC,MAAM,EAAE,CAAC;IACpC,oBAAoB,IAAI,OAAO,CAAC;IAChC,oBAAoB,IAAI,GAAG,CAAC,WAAW,EAAE,EAAE;IAC3C,wBAAwB,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAChD,wBAAwB,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IAC9C,4BAA4B,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;IAC3F,yBAAyB,CAAC,CAAC;IAC3B,qBAAqB;IACrB;IACA,wBAAwB,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAC1D;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACxD,iBAAiB;IACjB,aAAa;IACb,iBAAiB,IAAI,CAAC,KAAK,EAAE,EAAE;IAC/B,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,gBAAgB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACzC,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,iBAAiB,CAAC,CAAC;IACnB,aAAa;IACb,iBAAiB,IAAI,CAAC,KAAK,EAAE,EAAE;IAC/B,gBAAgB,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE;IAC3E,oBAAoB,MAAM,GAAG,KAAK,CAAC,cAAc,EAAE,YAAY;IAC/D,wBAAwB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC/C,qBAAqB,EAAE,IAAI,CAAC,CAAC;IAC7B,aAAa;AACb;IACA,YAAY,IAAI,CAAC,MAAM;IACvB,gBAAgB,MAAM,GAAG,MAAM,CAAC;AAChC;IACA,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AACT;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,MAAM,CAAC,MAAM,EAAE;IAChC;IACA,YAAY,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;IAC5D,gBAAgB,OAAO,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,aAAa;AACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,YAAY,IAAI,CAAC,MAAM,CAAC,OAAO;IAC/B,gBAAgB,OAAO,MAAM,CAAC;AAC9B;IACA,YAAY,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IAC1C,YAAY,IAAI;AAChB;IACA,gBAAgB,IAAI,CAAC,MAAM,CAAC,OAAO;IACnC,oBAAoB,OAAO,MAAM,CAAC;AAClC;IACA;IACA,gBAAgB,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE;IAC9C,oBAAoB,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9C,oBAAoB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAClD,iBAAiB;AACjB;IACA,gBAAgB,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;AACzC;IACA,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK;IACpC,wBAAwB,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,KAAK,EAAE;IACrD,wBAAwB,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACvC,gBAAgB,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IACjE,oBAAoB,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C;IACA,oBAAoB,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE;IAClD,wBAAwB,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACpD,wBAAwB,IAAI,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;IACpD,4BAA4B,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAChD,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC1C,qBAAqB;AACrB;IACA;IACA;IACA,oBAAoB,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IACnC;IACA;IACA,oBAAoB,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IAC3C;IACA;IACA,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChD,wBAAwB,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9C,wBAAwB,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;IACjD,4BAA4B,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACjD;IACA,4BAA4B,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE;IAC1D,gCAAgC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF;IACA,gCAAgC,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;IAClD,oCAAoC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpD,gCAAgC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD,6BAA6B;IAC7B,yBAAyB;IACzB,wBAAwB,CAAC;IACzB,wBAAwB,MAAM,GAAG,CAAC,CAAC;IACnC,qBAAqB;AACrB;IACA;IACA,oBAAoB,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACtC,wBAAwB,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE;IACtD,4BAA4B,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtD,4BAA4B,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpE,4BAA4B,IAAI,CAAC,CAAC,WAAW,EAAE;IAC/C,gCAAgC,CAAC,CAAC,oBAAoB,EAAE,CAAC;IACzD,4BAA4B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAClD,yBAAyB;IACzB,qBAAqB;AACrB;IACA,oBAAoB,OAAO,MAAM,CAAC;IAClC,iBAAiB;IACjB,qBAAqB,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;IAC9C;IACA,oBAAoB,IAAI,aAAa,GAAG,KAAK;IAC7C,4BAA4B,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE;IACrD,4BAA4B,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AACvD;IACA,oBAAoB,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE;IAClD,wBAAwB,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACpD,wBAAwB,IAAI,GAAG,CAAC,WAAW,EAAE,EAAE;IAC/C,4BAA4B,aAAa,GAAG,IAAI,CAAC;IACjD,4BAA4B,MAAM;IAClC,yBAAyB;AACzB;IACA,wBAAwB,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,EAAE,CAAC,EAAE;IACjE,4BAA4B,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1E,4BAA4B,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;IAC3C,yBAAyB;IACzB;IACA,4BAA4B,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC/D,qBAAqB;AACrB;IACA,oBAAoB,MAAM,CAAC,QAAQ,EAAE,CAAC;AACtC;IACA;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC;AACpD;IACA,oBAAoB,IAAI,CAAC,aAAa;IACtC,wBAAwB,OAAO,MAAM,CAAC;AACtC;IACA,oBAAoB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/C,oBAAoB,IAAI,UAAU,GAAG,EAAE;IACvC,4BAA4B,cAAc,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAC3E;IACA;IACA,oBAAoB,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE;IAClD,wBAAwB,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAClD;IACA,wBAAwB,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE;IAC1C,4BAA4B,SAAS;IACrC,wBAAwB,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;IAC7C,4BAA4B,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,OAAO,GAAG,KAAK,CAAC;IAC7D,4BAA4B,CAAC;IAC7B,4BAA4B,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IAC1C,gCAAgC,IAAI,CAAC,GAAG,CAAC,EAAE;IAC3C,oCAAoC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACrD,oCAAoC,OAAO,GAAG,IAAI,CAAC;IACnD,iCAAiC;IACjC,6BAA6B;AAC7B;IACA,4BAA4B,IAAI,OAAO,EAAE;IACzC,gCAAgC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;IACjD,gCAAgC,cAAc,GAAG,CAAC,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;IAC/E,6BAA6B;IAC7B;IACA,gCAAgC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnD,yBAAyB;IACzB;IACA,4BAA4B,cAAc,GAAG,CAAC,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;IAC3E,qBAAqB;AACrB;IACA;IACA,oBAAoB,MAAM,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC;AAC9C;IACA,oBAAoB,OAAO,UAAU,CAAC,MAAM,EAAE;IAC9C,wBAAwB,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC;IACjD,wBAAwB,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9C,wBAAwB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACjD,4BAA4B,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IAChD,gCAAgC,IAAI,IAAI,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC5E,gCAAgC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACnD,6BAA6B,CAAC,CAAC;IAC/B,yBAAyB,CAAC,CAAC;AAC3B;IACA,wBAAwB,MAAM,GAAG,CAAC,CAAC;IACnC,qBAAqB;AACrB;IACA,oBAAoB,IAAI,WAAW,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACpD;IACA,oBAAoB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IAC7C,wBAAwB,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAChG,qBAAqB,CAAC,CAAC;IACvB;IACA,oBAAoB,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC7E;IACA,oBAAoB,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AACnD;IACA,oBAAoB,IAAI,IAAI,GAAG,CAAC;IAChC,wBAAwB,MAAM,CAAC,MAAM,EAAE,CAAC;IACxC,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,CAAC,EAAE;IACtB,gBAAgB,OAAO,QAAQ,CAAC;IAChC,aAAa;AACb;IACA,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,OAAO,CAAC,CAAC,EAAE;IAC5B,YAAY,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtC,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE;IACvC,YAAY,IAAI,KAAK,CAAC,UAAU,EAAE,IAAI,KAAK,CAAC,KAAK,CAAC;IAClD,gBAAgB,OAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC9C,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IACtD,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,OAAO,CAAC,MAAM,EAAE,SAAS,EAAE;IAC5C,YAAY,SAAS,GAAG,OAAO,SAAS,KAAK,WAAW,GAAG,KAAK,GAAG,SAAS,CAAC;IAC7E;IACA,YAAY,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IACpC;IACA,YAAY,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IAC1C;IACA,YAAY,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE;IAChD,gBAAgB,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACzC,aAAa,CAAC,CAAC;IACf;IACA;IACA,YAAY,MAAM,CAAC,QAAQ,GAAG,gBAAgB,CAAC,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE;IAC/E,gBAAgB,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9E,gBAAgB,OAAO,IAAI,IAAI,SAAS,CAAC;IACzC,aAAa,CAAC,CAAC;IACf;IACA,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE;IAC9C,YAAY,IAAI,CAAC,KAAK,CAAC,UAAU;IACjC,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IAC1D,YAAY,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;IAC3C,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AACT;IACA,QAAQ,SAAS,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE;IACtC,YAAY,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,UAAU,EAAE;IAChD,gBAAgB,OAAO,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IACtD,SAAS;AACT;IACA,QAAQ,SAAS,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;IACtC,YAAY,IAAI,CAAC,CAAC,UAAU,EAAE;IAC9B,gBAAgB,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,YAAY,OAAO,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IACzD,SAAS;AACT;IACA,QAAQ,SAAS,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE;IACzC;IACA,YAAY,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE;IAC/B,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAC7D,YAAY,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM;IAC/D,gBAAgB,MAAM,IAAI,cAAc,CAAC,uCAAuC,CAAC,CAAC;IAClF,YAAY,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IACnC,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC;IAC/C,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;AACT;IACA,QAAQ,SAAS,SAAS,CAAC,MAAM,EAAE,SAAS,EAAE;IAC9C;IACA,YAAY,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;IACvC,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAC7D,YAAY,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IAC1C,YAAY,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACzC,YAAY,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAC3C,gBAAgB,IAAI,CAAC,KAAK,SAAS,EAAE;IACrC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACjD,iBAAiB;IACjB,aAAa,CAAC,CAAC;IACf,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;AACT;IACA,QAAQ,SAAS,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE;IAC3C;IACA,YAAY,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE;IAC/B,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAC7D,YAAY,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,YAAY,IAAI,MAAM,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,QAAQ,CAAC,MAAM;IACrD,gBAAgB,MAAM,IAAI,cAAc,CAAC,8CAA8C,CAAC,CAAC;IACzF,YAAY,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IACrC,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC5D,aAAa,CAAC,CAAC;IACf,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AACT;AACA;IACA,QAAQ,SAAS,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE;IAC7C,YAAY,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IAC1C,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AACT;IACA;IACA,QAAQ,SAAS,MAAM,GAAG;IAC1B,YAAY,OAAO,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACxD,SAAS;AACT;IACA;IACA,QAAQ,SAAS,MAAM,GAAG;IAC1B,YAAY,OAAO,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC/C,SAAS;IACT;IACA;IACA,QAAQ,SAAS,GAAG,GAAG;IACvB,YAAY,OAAO,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC5C,SAAS;AACT;IACA,QAAQ,SAAS,WAAW,CAAC,MAAM,EAAE;IACrC,YAAY,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;IAClC,gBAAgB,OAAO,MAAM,CAAC,WAAW,EAAE,CAAC;IAC5C,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AACT;IACA,QAAQ,SAAS,IAAI,CAAC,MAAM,EAAE;IAC9B,YAAY,IAAI,MAAM,CAAC;IACvB,YAAY,IAAI,QAAQ,CAAC,MAAM,CAAC;IAChC,gBAAgB,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAChF,iBAAiB,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC;IACrD,gBAAgB,MAAM,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC5D;IACA,gBAAgB,GAAG,CAAC,mCAAmC,CAAC,CAAC;IACzD,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AACT;IACA,QAAQ,SAAS,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE;IACjC,YAAY,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC;IAChD,gBAAgB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACtC,YAAY,GAAG,CAAC,gCAAgC,CAAC,CAAC;IAClD,SAAS;AACT;IACA,QAAQ,SAAS,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE;IACnC,YAAY,IAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC;IAChD,gBAAgB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACxC,YAAY,GAAG,CAAC,kCAAkC,CAAC,CAAC;IACpD,SAAS;AACT;IACA,QAAQ,SAAS,SAAS,CAAC,GAAG,EAAE;IAChC,YAAY,IAAI,QAAQ,CAAC,GAAG,CAAC;IAC7B,gBAAgB,OAAO,GAAG,CAAC,SAAS,EAAE,CAAC;IACvC,YAAY,GAAG,CAAC,qCAAqC,CAAC,CAAC;IACvD,SAAS;AACT;IACA,QAAQ,SAAS,MAAM,CAAC,GAAG,EAAE;IAC7B,YAAY,IAAI,QAAQ,CAAC,GAAG,CAAC;IAC7B,gBAAgB,OAAO,GAAG,CAAC,MAAM,EAAE,CAAC;IACpC,YAAY,GAAG,CAAC,yBAAyB,CAAC,CAAC;IAC3C,SAAS;IACT;IACA;IACA,QAAQ,SAAS,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE;IACnC,YAAY,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACpC,SAAS;IACT;IACA,QAAQ,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE;IAC1C,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAC3C,SAAS;IACT;IACA,QAAQ,SAAS,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAE;IACnC,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,SAAS;IACT;IACA,QAAQ,SAAS,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE;IACxC,YAAY,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACzC,SAAS;IACT;IACA,QAAQ,SAAS,UAAU,CAAC,IAAI,EAAE,IAAI,EAAE;IACxC,YAAY,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7D,SAAS;IACT;IACA,QAAQ,SAAS,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE;IACvC,YAAY,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5D,SAAS;IACT;IACA,QAAQ,SAAS,KAAK,GAAG;IACzB,YAAY,eAAe,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IACvD,gBAAgB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC1C,aAAa,CAAC,CAAC;IACf,SAAS;IACT;IACA,QAAQ,SAAS,QAAQ,CAAC,MAAM,EAAE;IAClC;IACA,YAAY,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;IACxE,gBAAgB,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IAC/C;IACA;IACA,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;IACrG;IACA,gBAAgB,IAAI,IAAI,GAAG,CAAC;IAC5B,oBAAoB,MAAM,CAAC,MAAM,EAAE,CAAC;IACpC,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AACT;IACA;IACA,QAAQ,SAAS,OAAO,CAAC,MAAM,EAAE;IACjC,YAAY,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;IACpC,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;IACrC;IACA,gBAAgB,IAAI,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C;IACA;IACA,gBAAgB,GAAG,CAAC,GAAG,EAAE;IACzB,oBAAoB,IAAI,CAAC,oFAAoF,CAAC,CAAC;IAC/G,oBAAoB,OAAO,MAAM,CAAC;IAClC,iBAAiB;IACjB;IACA,gBAAgB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7D,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACjD;IACA;IACA,gBAAgB,IAAI,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG;IAC5C,oBAAoB,OAAO,MAAM,CAAC;AAClC;IACA,gBAAgB,IAAI,KAAK,CAAC,CAAC,CAAC;IAC5B,oBAAoB,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IACtD;IACA,oBAAoB,MAAM,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzD,aAAa;AACb;IACA,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;AACT;IACA;IACA;IACA,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IAC7B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC3B,QAAQ,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC3B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACvB,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACvB,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACvC,QAAQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC/B,QAAQ,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACvB,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IACnC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACjC,QAAQ,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IACjC;IACA;IACA;IACA,QAAQ,IAAI,CAAC,WAAW,GAAG,SAAS,IAAI,EAAE;IAC1C,YAAY,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,SAAS,CAAC;AACV;IACA;IACA,QAAQ,IAAI,CAAC,eAAe,GAAG,UAAU,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE;IAC3E,YAAY,IAAI,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;IAC5C,YAAY,IAAI,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;IAChD,YAAY,KAAK,OAAO,MAAM,KAAK,UAAU;IAC7C,gBAAgB,MAAM,IAAI,iBAAiB,CAAC,0CAA0C,CAAC,CAAC;IACxF,YAAY,IAAI,CAAC,KAAK,EAAE;IACxB,gBAAgB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,gBAAgB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrC,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,WAAW,EAAE;IACjC,oBAAoB,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IACjD,oBAAoB,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IACrD,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;IACxC,oBAAoB,OAAO,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;IAC5C,iBAAiB;IACjB,aAAa;IACb,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,CAAC,gBAAgB,GAAG,YAAY;IAC5C,YAAY,IAAI,aAAa,GAAG,EAAE,CAAC;IACnC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxE,gBAAgB,IAAI,IAAI,GAAG,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClD,gBAAgB,aAAa,CAAC,IAAI,CAAC,GAAG;IACtC,oBAAoB,KAAK,EAAE,CAAC;IAC5B,oBAAoB,MAAM,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;IACpD,iBAAiB,CAAC;IAClB,aAAa;IACb,YAAY,OAAO,aAAa,CAAC;IACjC,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,CAAC,kBAAkB,GAAG,UAAU,IAAI,EAAE,WAAW,EAAE;IAC/D,YAAY,IAAI,CAAC,GAAG,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACtD,YAAY,IAAI,WAAW,EAAE;IAC7B,gBAAgB,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/C,gBAAgB,MAAM,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACjD,aAAa;IACb,iBAAiB;IACjB,gBAAgB,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IACnD,gBAAgB,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;IACrD,aAAa;IACb,SAAS,CAAC;AACV;IACA;IACA,QAAQ,IAAI,CAAC,eAAe,GAAG,YAAY;IAC3C,YAAY,IAAI,IAAI,GAAG,EAAE;IACzB,oBAAoB,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;IACzC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE;IAClD,gBAAgB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AAC/C;IACA,YAAY,OAAO,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5C,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC;IACvC,oBAAoB,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC5C;IACA,YAAY,IAAI,SAAS,IAAI,SAAS,EAAE;IACxC;IACA,gBAAgB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE;IACtC,oBAAoB,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,iBAAiB;IACjB;IACA;IACA,gBAAgB,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,EAAE;IAClD,oBAAoB,IAAI,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IACvD,4BAA4B,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5D;IACA,oBAAoB,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,IAAI,IAAI,KAAK,IAAI,EAAE;IACvE,wBAAwB,MAAM,IAAI,cAAc,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,mBAAmB,CAAC,CAAC;IAC5F,qBAAqB;AACrB;IACA,oBAAoB,IAAI,GAAG,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IAChD,oBAAoB,IAAI,IAAI;IAC5B,wBAAwB,GAAG,CAAC,MAAM,EAAE,CAAC;IACrC,oBAAoB,OAAO,GAAG,CAAC;IAC/B,iBAAiB;AACjB;IACA,gBAAgB,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;IACxF,oBAAoB,CAAC,CAAC,oBAAoB,EAAE,CAAC;IAC7C,oBAAoB,CAAC,CAAC,oBAAoB,EAAE,CAAC;IAC7C,iBAAiB;IACjB;IACA,gBAAgB,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1C,oBAAoB,OAAO,CAAC,CAAC;IAC7B,gBAAgB,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1C,oBAAoB,OAAO,CAAC,CAAC;AAC7B;IACA,gBAAgB,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC/E,oBAAoB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1G,oBAAoB,OAAO,MAAM,CAAC;IAClC,iBAAiB;AACjB;IACA,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK;IAChC,wBAAwB,EAAE,GAAG,CAAC,CAAC,KAAK;IACpC,wBAAwB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE;IAC/C,wBAAwB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;AAChD;IACA;IACA,gBAAgB,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,EAAE;IACjE,oBAAoB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,iBAAiB;AACjB;IACA;IACA;IACA;IACA,gBAAgB,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,EAAE;IACnE;IACA,oBAAoB,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;IACjC,oBAAoB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;IACjC,oBAAoB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC5C,oBAAoB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC5C,iBAAiB;AACjB;IACA,gBAAgB,IAAI,KAAK,GAAG,EAAE,KAAK,EAAE;IACrC,wBAAwB,EAAE,GAAG,CAAC,CAAC,KAAK;IACpC,wBAAwB,EAAE,GAAG,CAAC,CAAC,KAAK;IACpC,wBAAwB,YAAY,GAAG,CAAC,CAAC,WAAW,EAAE;IACtD,wBAAwB,YAAY,GAAG,CAAC,CAAC,WAAW,EAAE;IACtD,wBAAwB,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC;AACvC;IACA,gBAAgB,IAAI,YAAY;IAChC,oBAAoB,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACzC,gBAAgB,IAAI,YAAY;IAChC,oBAAoB,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACzC;IACA,gBAAgB,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC1F,oBAAoB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,iBAAiB;AACjB;IACA;IACA,gBAAgB,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5C,oBAAoB,EAAE,GAAG,EAAE,CAAC;IAC5B,oBAAoB,EAAE,GAAG,EAAE,CAAC;IAC5B,iBAAiB;AACjB;IACA,gBAAgB,IAAI,EAAE,GAAG,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;IAC7C,wBAAwB,IAAI,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,UAAU,CAAC,QAAQ,EAAE;IAClE,wBAAwB,KAAK,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,SAAS,KAAK,EAAE,IAAI,IAAI,CAAC,CAAC,CAAC;AAC7F;IACA;IACA,gBAAgB,IAAI,KAAK,IAAI,KAAK,IAAI,EAAE,KAAK,EAAE,EAAE;IACjD;IACA,oBAAoB,IAAI,EAAE;IAC1B,wBAAwB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACzC;IACA;IACA,oBAAoB,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE;IAC7D,wBAAwB,CAAC,CAAC,oBAAoB,EAAE,CAAC;IACjD,wBAAwB,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7C,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,MAAM,GAAG,CAAC,CAAC;IACnC,wBAAwB,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;IACvH,4BAA4B,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;IACrD,gCAAgC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACrD,gCAAgC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACjD,6BAA6B;IAC7B,yBAAyB;IACzB;IACA,4BAA4B,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;IACpF,qBAAqB;IACrB,iBAAiB;IACjB;IACA,qBAAqB,IAAI,KAAK,IAAI,EAAE,KAAK,EAAE,EAAE;IAC7C;IACA,oBAAoB,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAChD,wBAAwB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACpC,wBAAwB,MAAM,GAAG,CAAC,CAAC;IACnC,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE;IACA,wBAAwB,MAAM,CAAC,KAAK,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC3D,qBAAqB;IACrB,iBAAiB;IACjB,qBAAqB,IAAI,YAAY,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;IACvD,oBAAoB,IAAI,UAAU,GAAG,EAAE,KAAK,EAAE;IAC9C,4BAA4B,MAAM,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AAC5D;IACA;IACA,oBAAoB,IAAI,MAAM;IAC9B,wBAAwB,UAAU,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,CAAC;IACzD;IACA,oBAAoB,CAAC,CAAC,oBAAoB,EAAE,CAAC;AAC7C;IACA,oBAAoB,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,UAAU,EAAE;IACvE,wBAAwB,CAAC,CAAC,oBAAoB,EAAE,CAAC;IACjD;IACA,wBAAwB,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;IACjD,4BAA4B,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACjD,4BAA4B,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACxC,yBAAyB;IACzB,wBAAwB,MAAM,GAAG,CAAC,CAAC;IACnC,qBAAqB;IACrB;IACA,yBAAyB,IAAI,MAAM,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE;IAC9E,wBAAwB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,wBAAwB,MAAM,CAAC,UAAU,EAAE,CAAC;AAC5C;IACA,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7C,qBAAqB;IACrB,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;IAC3F,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IACrD,wBAAwB,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;IAClE,wBAAwB,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC;IACzC,qBAAqB;IACrB;IACA,oBAAoB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IAC5F,wBAAwB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACjE,wBAAwB,MAAM,CAAC,UAAU,EAAE,CAAC;IAC5C,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/C,oBAAoB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AAC3C;IACA;IACA,gBAAgB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;IACzC,oBAAoB,IAAI,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC;IAC9C,oBAAoB,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACzD,oBAAoB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtE,iBAAiB;AACjB;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,iBAAiB;IACjB;IACA,gBAAgB,IAAI,SAAS,IAAI,CAAC,SAAS,EAAE;IAC7C,oBAAoB,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,SAAS,CAAC;IAClC,oBAAoB,SAAS,GAAG,SAAS,CAAC;IAC1C,oBAAoB,SAAS,GAAG,CAAC,CAAC;IAClC,iBAAiB;AACjB;IACA,gBAAgB,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5C;IACA,gBAAgB,IAAI,SAAS,IAAI,SAAS,EAAE;IAC5C,oBAAoB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACzC,oBAAoB,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACrD,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzD,qBAAqB,CAAC,CAAC;IACvB;IACA,oBAAoB,CAAC,GAAG,EAAC;IACzB,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;IAClD,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrC,qBAAqB;IACrB,yBAAyB,IAAI,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACvD,wBAAwB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAC/C,4BAA4B,CAAC,EAAE,CAAC;IAChC,4BAA4B,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,yBAAyB,CAAC,CAAC;IAC3B,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACxD,4BAA4B,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IACnD,gCAAgC,CAAC,EAAE,CAAC;IACpC,gCAAgC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF,6BAA6B,CAAC,CAAC;IAC/B,yBAAyB;IACzB,6BAA6B,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC7D;IACA,4BAA4B,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C,yBAAyB;IACzB,6BAA6B,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC7D,4BAA4B,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE;IAChE,gCAAgC,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IACnE,gCAAgC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IACvD,oCAAoC,IAAI,GAAG,GAAG,EAAE,CAAC;IACjD,oCAAoC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChE,wCAAwC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACjG,qCAAqC;IACrC,oCAAoC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzD,iCAAiC,CAAC,CAAC;IACnC,gCAAgC,OAAO,CAAC,CAAC;IACzC,6BAA6B;IAC7B;IACA,gCAAgC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IAC9D,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;AACb;IACA,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACxC,gBAAgB,SAAS,GAAG,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC;IACnD,oBAAoB,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAI;AAC/C;IACA,YAAY,IAAI,SAAS,IAAI,SAAS,EAAE;IACxC,gBAAgB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE;IACtC,oBAAoB,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IAC/C,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC9C,oBAAoB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IAC3C,wBAAwB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACxD,qBAAqB,CAAC,CAAC;IACvB,iBAAiB;IACjB,qBAAqB,IAAI,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACnD,oBAAoB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IAC3C,wBAAwB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IACxD,qBAAqB,CAAC,CAAC;IACvB,iBAAiB;IACjB,qBAAqB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACrD,oBAAoB,IAAI,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,UAAU,EAAE;IACzD,wBAAwB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1C;IACA,wBAAwB,CAAC,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC;IACxF,iBAAiB;IACjB,qBAAqB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACrD,oBAAoB,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE;IACxD,wBAAwB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3D,wBAAwB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAC/C,4BAA4B,IAAI,GAAG,GAAG,EAAE,CAAC;IACzC,4BAA4B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxD,gCAAgC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC9F,6BAA6B;IAC7B,4BAA4B,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjD,yBAAyB,CAAC,CAAC;IAC3B,wBAAwB,OAAO,CAAC,CAAC;IACjC,qBAAqB;IACrB;IACA,wBAAwB,GAAG,CAAC,wBAAwB,CAAC,CAAC;IACtD,iBAAiB;IACjB,qBAAqB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACrD,oBAAoB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,MAAM,EAAE,CAAC;IAC/C,oBAAoB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvC,iBAAiB;IACjB,qBAAqB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACrD,oBAAoB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtC,iBAAiB;IACjB,qBAAqB,GAAG,QAAQ,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;IAClD,oBAAoB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACzC,oBAAoB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAC7C,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC9D,qBAAqB,CAAC,CAAC;IACvB,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,iBAAiB;IACjB,qBAAqB,GAAG,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IAClD,oBAAoB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACzC,oBAAoB,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAC7C,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9D,qBAAqB,CAAC,CAAC;IACvB,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACxC,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC;IACvC,oBAAoB,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC5C;IACA,YAAY,IAAI,SAAS,IAAI,CAAC,YAAY,UAAU,EAAE;IACtD,gBAAgB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,YAAY,IAAI,SAAS,IAAI,SAAS,EAAE;IACxC;IACA,gBAAgB,IAAI,CAAC,CAAC,MAAM,EAAE;IAC9B,oBAAoB,IAAI,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IAC3C,oBAAoB,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAC/B,oBAAoB,OAAO,MAAM,CAAC;IAClC,iBAAiB;IACjB;IACA,gBAAgB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE;IACtC,oBAAoB,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,iBAAiB;AACjB;IACA;IACA,gBAAgB,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,EAAE;IAClD,oBAAoB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAClD,wBAAwB,MAAM,IAAI,cAAc,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,gBAAgB,CAAC,CAAC;IACjF;IACA,oBAAoB,IAAI,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC7C,wBAAwB,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE;IAC3C,4BAA4B,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACjD,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,MAAM,IAAI,cAAc,CAAC,mCAAmC,CAAC,CAAC;IAC1F,yBAAyB;IACzB,qBAAqB;AACrB;IACA,oBAAoB,IAAI,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,EAAE;IACzE,4BAA4B,GAAG,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACpD,oBAAoB,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE;IAC5F,wBAAwB,IAAI,IAAI,GAAG,CAAC;IACpC,4BAA4B,GAAG,CAAC,MAAM,EAAE,CAAC;AACzC;IACA,wBAAwB,OAAO,GAAG,CAAC;IACnC,qBAAqB;IACrB,iBAAiB;IACjB;IACA,gBAAgB,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,QAAQ,CAAC,YAAY,EAAE;IAC/E,oBAAoB,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;IACvH,oBAAoB,IAAI,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/C,oBAAoB,OAAO,MAAM,CAAC;IAClC,iBAAiB;AACjB;IACA;IACA,gBAAgB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC/B,oBAAoB,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;IACrC,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC/B,oBAAoB,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;IACrC,iBAAiB;AACjB;IACA,gBAAgB,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACpE,oBAAoB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AACzC;IACA,gBAAgB,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE,CAAC;IAC1D,oBAAoB,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C;IACA,gBAAgB,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,EAAE;IAC7E,oBAAoB,IAAI,CAAC,GAAG,CAAC,CAAC;IAC9B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,iBAAiB;AACjB;IACA,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK;IAChC,wBAAwB,EAAE,GAAG,CAAC,CAAC,KAAK;IACpC,wBAAwB,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG;IAC/C,wBAAwB,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC;AAChD;IACA,gBAAgB,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC1I;IACA,oBAAoB,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACxC,oBAAoB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC1C,oBAAoB,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9D,oBAAoB,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC;IACjC,iBAAiB;IACjB;IACA,qBAAqB,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAChJ,oBAAoB,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACxD,oBAAoB,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACtC,iBACA;IACA,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK;IAChC,wBAAwB,EAAE,GAAG,CAAC,CAAC,KAAK;IACpC,wBAAwB,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IACjD;IACA,wBAAwB,GAAG,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACpF;IACA,wBAAwB,CAAC,GAAG,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAG,EAAE;IACtH,wBAAwB,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC9D,gBAAgB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AACrD;IACA;IACA,gBAAgB,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IAC5C,oBAAoB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC9C,oBAAoB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IAC9C,oBAAoB,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;AAC9F;IACA,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;IACxD,wBAAwB,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;IACjD;IACA,4BAA4B,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACpF,4BAA4B,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9C,yBAAyB;IACzB,qBAAqB;IACrB;IACA;IACA;IACA,yBAAyB,IAAI,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,CAAC,CAAC,KAAK,KAAK,SAAS,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,EAAE;IAClI;IACA,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACjE;IACA;IACA,wBAAwB,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,EAAE;IAC5C,4BAA4B,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9C,yBAAyB;IACzB,6BAA6B;IAC7B;IACA;IACA,4BAA4B,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9C,4BAA4B,GAAG,CAAC,GAAG,CAAC,EAAE;IACtC;IACA,gCAAgC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACzE,oCAAoC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,oCAAoC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,iCAAiC;IACjC;IACA,gCAAgC,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClH;IACA,gCAAgC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAClD,6BAA6B;IAC7B,iCAAiC;IACjC;IACA,gCAAgC,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACzE,oCAAoC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,oCAAoC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,iCAAiC;IACjC;IACA,gCAAgC,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClH;IACA,gCAAgC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAClD,6BAA6B;IAC7B,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;AACjB;AACA;IACA;IACA,gBAAgB,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACzD,oBAAoB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,oBAAoB,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxC,iBAAiB;AACjB;IACA;IACA;IACA;IACA,gBAAgB,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,aAAa,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;IACtE,oBAAoB,EAAE,GAAG,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;IAC7C,iBAAiB;AACjB;IACA,gBAAgB,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE;IAC5H,oBAAoB,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK;IACpC,4BAA4B,EAAE,GAAG,CAAC,CAAC,KAAK;IACxC,4BAA4B,UAAU,GAAG,QAAQ,CAAC,EAAE,CAAC;IACrD,4BAA4B,UAAU,GAAG,QAAQ,CAAC,EAAE,CAAC;IACrD,4BAA4B,IAAI,IAAI,UAAU,IAAI,UAAU,CAAC,CAAC;IAC9D;IACA,oBAAoB,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,aAAa,KAAK,EAAE,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IAC1F,wBAAwB,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/C,wBAAwB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IAC5C,4BAA4B,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC7E,yBAAyB,EAAE,IAAI,CAAC,CAAC;IACjC,qBAAqB;IACrB,yBAAyB;IACzB;IACA,wBAAwB,MAAM,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG;IACnD,gCAAgC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE;IACrE,gCAAgC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,GAAG,EAAE;IACrE,iCAAiC,IAAI,EAAE,KAAK,CAAC,8BAA8B,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AAC5F;IACA;IACA,wBAAwB,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAClD,4BAA4B,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AACvD;IACA;IACA,wBAAwB,IAAI,IAAI;IAChC,4BAA4B,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AAC/C;IACA;IACA,wBAAwB,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,SAAS,EAAE;IACxD,4BAA4B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;IAChE,4BAA4B,IAAI,MAAM,EAAE;IACxC,gCAAgC,MAAM,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACvD,gCAAgC,CAAC,CAAC,MAAM,EAAE,CAAC;IAC3C,6BAA6B;IAC7B,yBAAyB;AACzB;IACA;IACA,wBAAwB,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,aAAa;IACvE,4BAA4B,MAAM,CAAC,aAAa,GAAG,SAAS,CAAC;IAC7D;IACA;IACA,wBAAwB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;IACrF,qBAAqB;IACrB,iBAAiB;IACjB,qBAAqB,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;IACpD,oBAAoB,IAAI,EAAE,KAAK,EAAE;IACjC,wBAAwB,CAAC,CAAC,kBAAkB,EAAE,CAAC;IAC/C,oBAAoB,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;IACnD,wBAAwB,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE;IACjD,4BAA4B,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACjD,4BAA4B,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACvD,yBAAyB;IACzB,wBAAwB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;IACrF,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1C,qBAAqB;IACrB,iBAAiB;IACjB,qBAAqB;IACrB;IACA,oBAAoB,IAAI,EAAE,KAAK,CAAC,EAAE;IAClC,wBAAwB,IAAI,EAAE,KAAK,EAAE,EAAE;IACvC,4BAA4B,MAAM,CAAC,kBAAkB,EAAE,CAAC;IACxD,4BAA4B,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC9C,yBAAyB;IACzB,6BAA6B,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;IAC7C,4BAA4B,IAAI,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;IAC1D,4BAA4B,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACjD,4BAA4B,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3E;IACA,4BAA4B,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC/E,yBAAyB;IACzB,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAC9D,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,EAAE;IACxC,oBAAoB,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC;IACrD,4BAA4B,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI;IACtD,4BAA4B,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI;IACtD,4BAA4B,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI;IAC/C,4BAA4B,IAAI,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;IAChD;IACA,oBAAoB,IAAI,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;IAC9D,wBAAwB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACtE,wBAAwB,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC;IACtC,qBAAqB;IACrB,oBAAoB,IAAI,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;IAC9D,wBAAwB,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3E,wBAAwB,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC;IACtC,qBAAqB;IACrB,iBAAiB;AACjB;IACA;IACA,gBAAgB,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;IACzC,oBAAoB,IAAI,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC;IAC9C;IACA,oBAAoB,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACzD,oBAAoB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtE,iBAAiB;AACjB;IACA;IACA,gBAAgB,IAAI,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IACjD,gBAAgB,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,EAAE;IACvD;IACA,oBAAoB,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;IAChD,oBAAoB,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;IACzC,oBAAoB,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5C,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzG;IACA,oBAAoB,IAAI,IAAI,GAAG,CAAC;IAChC,wBAAwB,MAAM,CAAC,MAAM,GAAE;IACvC,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACrF,oBAAoB,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,WAAW,EAAE;IACnE,wBAAwB,MAAM,CAAC,oBAAoB,EAAE,CAAC;IACtD,iBAAiB;AACjB;IACA;IACA,gBAAgB,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACzE,oBAAoB,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;AAC/C;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,iBAAiB;IACjB;IACA,gBAAgB,IAAI,SAAS,IAAI,CAAC,SAAS,EAAE;IAC7C,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,oBAAoB,CAAC,GAAG,SAAS,CAAC;IAClC,oBAAoB,SAAS,GAAG,SAAS,CAAC;IAC1C,oBAAoB,SAAS,GAAG,CAAC,CAAC;IAClC,iBAAiB;AACjB;IACA,gBAAgB,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrE,gBAAgB,IAAI,SAAS,IAAI,SAAS,EAAE;IAC5C,oBAAoB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACzC,oBAAoB,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACrD,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC9D,qBAAqB,CAAC,CAAC;IACvB;IACA,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,SAAS,IAAI,SAAS,EAAE;IAChD,wBAAwB,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1C,qBAAqB;IACrB,yBAAyB,IAAI,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACvD,wBAAwB,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAC/C,4BAA4B,CAAC,EAAE,CAAC;IAChC,4BAA4B,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,yBAAyB,CAAC,CAAC;IAC3B,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACxD,4BAA4B,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IACnD,gCAAgC,CAAC,EAAE,CAAC;IACpC,gCAAgC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,6BAA6B,CAAC,CAAC;IAC/B,yBAAyB;IACzB,6BAA6B,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC7D;IACA,4BAA4B,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACvD,yBAAyB;IACzB,6BAA6B,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC7D,4BAA4B,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE;IAChE,gCAAgC,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IACnE,gCAAgC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IACvD,oCAAoC,IAAI,GAAG,GAAG,EAAE,CAAC;IACjD,oCAAoC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChE,wCAAwC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACtG,qCAAqC;IACrC,oCAAoC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzD,iCAAiC,CAAC,CAAC;IACnC,gCAAgC,OAAO,CAAC,CAAC;IACzC,6BAA6B;IAC7B;IACA,gCAAgC,GAAG,CAAC,wBAAwB,CAAC,CAAC;IAC9D,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACtC,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC;IACvC,oBAAoB,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC5C;IACA,YAAY,IAAI,SAAS,IAAI,SAAS,EAAE;IACxC;IACA,gBAAgB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE;IACtC,oBAAoB,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/C,iBAAiB;IACjB,gBAAgB,IAAI,MAAM,CAAC;IAC3B,gBAAgB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAC/B,oBAAoB,MAAM,IAAI,cAAc,CAAC,+BAA+B,CAAC,CAAC;AAC9E;IACA,gBAAgB,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,UAAU,EAAE,EAAE;IACtD,oBAAoB,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACvC,oBAAoB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;IAC/E,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,CAAC,CAAC,MAAM,EAAE,CAAC;IAC/B,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9C,iBAAiB;IACjB,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,iBAAiB;IACjB;IACA,gBAAgB,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACrE,gBAAgB,IAAI,SAAS,IAAI,SAAS,EAAE;IAC5C,oBAAoB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IAC3C,wBAAwB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;IACtD,qBAAqB,CAAC,CAAC;IACvB,iBAAiB;IACjB,qBAAqB,IAAI,SAAS,IAAI,SAAS,EAAE;IACjD,oBAAoB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IAC3C,wBAAwB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACtD,qBAAqB,CAAC,CAAC;IACvB,iBAAiB;IACjB,qBAAqB,IAAI,SAAS,IAAI,SAAS,EAAE;IACjD,oBAAoB,IAAI,CAAC,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,UAAU,EAAE,EAAE;IAC3D,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAClD,4BAA4B,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChE,yBAAyB,CAAC,CAAC;IAC3B,qBAAqB;IACrB;IACA,wBAAwB,CAAC,CAAC,KAAK,CAAC,iDAAiD,CAAC,CAAC;IACnF,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,EAAE,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzE,oBAAoB,IAAI,SAAS,IAAI,SAAS,EAAE;IAChD,wBAAwB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IAC7C,wBAAwB,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACzD,4BAA4B,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAChE,yBAAyB,CAAC,CAAC;IAC3B,wBAAwB,CAAC,GAAG,CAAC,CAAC;IAC9B,qBAAqB;IACrB,yBAAyB,GAAG,SAAS,IAAI,SAAS,EAAE;IACpD,wBAAwB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IAC7C,wBAAwB,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACzD,4BAA4B,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAChE,yBAAyB,CAAC,CAAC;IAC3B,wBAAwB,CAAC,GAAG,CAAC,CAAC;IAC9B,qBAAqB;IACrB,yBAAyB,IAAI,SAAS,IAAI,SAAS,EAAE;IACrD,wBAAwB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IAC7C,wBAAwB,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE;IAC5E,4BAA4B,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAC7D,gCAAgC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,6BAA6B,CAAC,CAAC;IAC/B,4BAA4B,CAAC,GAAG,CAAC,CAAC;IAClC,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,CAAC,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;IAChE,yBAAyB;IACzB,qBAAqB;IACrB,yBAAyB,IAAI,SAAS,IAAI,SAAS,EAAE;IACrD,wBAAwB,IAAI,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,UAAU,EAAE,EAAE;IACzD,4BAA4B,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACjD,4BAA4B,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IAC7D,gCAAgC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAChF,6BAA6B,CAAC,CAAC;IAC/B,4BAA4B,CAAC,GAAG,CAAC,CAAC;IAClC,yBAAyB;IACzB,6BAA6B;IAC7B,4BAA4B,CAAC,CAAC,KAAK,CAAC,oCAAoC,CAAC,CAAC;IAC1E,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,SAAS,CAAC;IACV;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,YAAY,IAAI,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC;IACvC,oBAAoB,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC5C,YAAY,IAAI,SAAS,IAAI,SAAS,EAAE;IACxC;IACA,gBAAgB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,EAAE;IACtC,oBAAoB,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,iBAAiB;IACjB;IACA,gBAAgB,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,EAAE;IAClD,oBAAoB,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU;IACpD,wBAAwB,MAAM,IAAI,cAAc,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,iBAAiB,CAAC,CAAC;AAC1F;IACA,oBAAoB,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,UAAU,EAAE;IACxD,wBAAwB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACzC,4BAA4B,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC7C,gCAAgC,MAAM,IAAI,cAAc,CAAC,0BAA0B,CAAC,CAAC;IACrF,4BAA4B,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACjD,yBAAyB;IACzB,wBAAwB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACvC,4BAA4B,MAAM,IAAI,cAAc,CAAC,IAAI,GAAG,CAAC,CAAC,QAAQ,EAAE,GAAG,gBAAgB,CAAC,CAAC;IAC7F;IACA,wBAAwB,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzC,4BAA4B,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACjD;IACA,wBAAwB,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC1C,4BAA4B,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;IACrD,qBAAqB;AACrB;IACA,oBAAoB,IAAI,CAAC,CAAC,UAAU,IAAI,CAAC,CAAC,UAAU,EAAE,EAAE;IACxD,wBAAwB,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IACvC,4BAA4B,MAAM,IAAI,cAAc,CAAC,CAAC,GAAG,kBAAkB,CAAC,CAAC;IAC7E,wBAAwB,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACzC,4BAA4B,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACjD,wBAAwB,OAAO,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACrG,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,IAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,gBAAgB,IAAI,OAAO,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,gBAAgB,IAAI,OAAO,IAAI,OAAO;IACtC,oBAAoB,MAAM,IAAI,cAAc,CAAC,mBAAmB,CAAC,CAAC;IAClE;IACA,gBAAgB,IAAI,OAAO,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5E,oBAAoB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AACzC;IACA,gBAAgB,IAAI,OAAO;IAC3B,oBAAoB,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;AACzC;IACA,gBAAgB,IAAI,WAAW,GAAG,CAAC,CAAC,UAAU,EAAE;IAChD,wBAAwB,WAAW,GAAG,CAAC,CAAC,UAAU,EAAE;IACpD,wBAAwB,MAAM,GAAG,CAAC,CAAC,SAAS,EAAE;IAC9C,wBAAwB,CAAC,GAAG,CAAC,CAAC,UAAU;IACxC,wBAAwB,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IAC3C,gBAAgB,IAAI,WAAW,IAAI,WAAW,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC9E,oBAAoB,MAAM,IAAI,cAAc,CAAC,kCAAkC,CAAC,CAAC;AACjF;IACA;IACA,gBAAgB,IAAI,QAAQ,CAAC,YAAY,IAAI,WAAW,IAAI,WAAW,IAAI,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE;IAC5G,oBAAoB,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAClC,oBAAoB,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACpC,oBAAoB,EAAE,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjD,oBAAoB,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,oBAAoB,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACzC,iBAAiB;AACjB;IACA;IACA,gBAAgB,IAAI,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,WAAW,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC3G,oBAAoB,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC;IACnD,oBAAoB,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtC,oBAAoB,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACtC,oBAAoB,IAAI,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;IACtE,wBAAwB,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACnE,wBAAwB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,wBAAwB,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/E,wBAAwB,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/D,wBAAwB,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IAC/E,qBAAqB;IACrB,iBAAiB;AACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA,gBAAgB,MAAM,CAAC,gBAAgB,EAAE,CAAC;IAC1C;IACA,gBAAgB,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,IAAI,CAAC,WAAW,EAAE;IAClF,oBAAoB,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3C,oBAAoB,CAAC,CAAC,aAAa,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACrD,oBAAoB,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;IAC7D,oBAAoB,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IACvC,oBAAoB,MAAM,GAAG,CAAC,CAAC;IAC/B,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IACxC;IACA,oBAAoB,IAAI,YAAY,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE;IACrD;IACA;IACA,wBAAwB,MAAM,CAAC,MAAM,EAAE,CAAC;IACxC;IACA,wBAAwB,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACtE;IACA,wBAAwB,MAAM,CAAC,MAAM,EAAE,CAAC;IACxC,qBAAqB;IACrB;IACA,oBAAoB,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IAC5C,iBAAiB;AACjB;IACA,gBAAgB,IAAI,WAAW,IAAI,WAAW,IAAI,QAAQ,CAAC,YAAY,EAAE;IACzE,wBAAwB,IAAI,CAAC,CAAC;IAC9B;IACA,wBAAwB,IAAI,IAAI,GAAG,CAAC,EAAE;IACtC,4BAA4B,CAAC,CAAC,MAAM,EAAE,CAAC;IACvC,4BAA4B,IAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1D;IACA,gCAAgC,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACnE,iCAAiC,IAAI,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE;IAC1D,gCAAgC,IAAI,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC;IACtD,oCAAoC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACtD;IACA,oCAAoC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,6BAA6B;IAC7B,iCAAiC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;IAC9D,gCAAgC,CAAC,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACjF,6BAA6B;IAC7B,iCAAiC;IACjC,gCAAgC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACrG,6BAA6B;IAC7B,yBAAyB;AACzB;IACA,wBAAwB,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC1G;IACA;IACA;IACA,wBAAwB,IAAI,CAAC;IAC7B,4BAA4B,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC3D,iBAAiB;IACjB,qBAAqB,IAAI,MAAM,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACjD,oBAAoB,IAAI,KAAK,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACxC;IACA,oBAAoB,GAAG,KAAK,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;IACnD,wBAAwB,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,CAAC;IACvC,4BAA4B,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACjD,wBAAwB,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC;IACjD,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;IACzD,wBAAwB,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC/C,wBAAwB,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACxC,wBAAwB,IAAI,UAAU,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,wBAAwB,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtD,wBAAwB,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtD,wBAAwB,IAAI,GAAG,GAAG,CAAC;IACnC,4BAA4B,UAAU,CAAC,MAAM,EAAE,CAAC;IAChD;IACA,wBAAwB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACnF,qBAAqB;IACrB,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,IAAI,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IACxC,oBAAoB,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,EAAE;IACrG;IACA,wBAAwB,IAAI,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACxD,4BAA4B,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IACnE,4BAA4B,CAAC,CAAC,MAAM,EAAE,CAAC;IACvC;IACA,4BAA4B,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC/C,gCAAgC,CAAC,CAAC,MAAM,EAAE,CAAC;IAC3C,gCAAgC,CAAC,CAAC,MAAM,EAAE,CAAC;IAC3C,6BAA6B;IAC7B;IACA,4BAA4B,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChE,yBAAyB;IACzB,6BAA6B;IAC7B;IACA;IACA;IACA;IACA;IACA,4BAA4B,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IAC/C,4BAA4B,EAAE,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC;IACnD,4BAA4B,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACtG,4BAA4B,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACrF,4BAA4B,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACrF,4BAA4B,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACrD,4BAA4B,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC3D;IACA,yBAAyB;IACzB,qBAAqB;IACrB,yBAAyB,IAAI,QAAQ,CAAC,YAAY,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;IACvE;IACA,wBAAwB,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACnD,wBAAwB,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,CAAC;IAClD,wBAAwB,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC1C,wBAAwB,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC1C,wBAAwB,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;IACnD,wBAAwB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/E,wBAAwB,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;IAC/F,wBAAwB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC/D,wBAAwB,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;IAC3D,qBAAqB;IACrB,yBAAyB;IACzB;IACA,wBAAwB,IAAI,OAAO,GAAG,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,GAAG,CAAC;IAC/D,gCAAgC,GAAG,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACjH,gCAAgC,GAAG,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;AAC/F;IACA;IACA,wBAAwB,IAAI,CAAC,CAAC,SAAS,EAAE;IACzC,4BAA4B,IAAI,MAAM,EAAE;IACxC,gCAAgC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5C,gCAAgC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjD,gCAAgC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3C,gCAAgC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1C,gCAAgC,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;IACvF,gCAAgC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;IACzF,oCAAoC,MAAM,CAAC,MAAM,EAAE,CAAC;IACpD,iCAAiC;IACjC,6BAA6B;IAC7B,iCAAiC;IACjC;IACA,gCAAgC,IAAI,EAAE,GAAG,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAChF;IACA,wCAAwC,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;IAClE,gCAAgC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;IAC3G,6BAA6B;IAC7B,yBAAyB;IACzB;IACA;IACA,wBAAwB,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO;IAChD,4BAA4B,MAAM,CAAC,MAAM,EAAE,CAAC;AAC5C;IACA;IACA,wBAAwB,IAAI,WAAW,IAAI,CAAC,CAAC,KAAK,KAAK,EAAE,EAAE;IAC3D,4BAA4B,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC;IAC9D,oCAAoC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACzD,oCAAoC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE;IAChE,oCAAoC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,4BAA4B,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,MAAM,EAAE;IAC3D,gCAAgC,IAAI,CAAC,KAAK,CAAC;IAC3C,oCAAoC,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IAC1E,qCAAqC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;IACpD,oCAAoC,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;IACzD,oCAAoC,MAAM,GAAG,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjG,iCAAiC;IACjC,qCAAqC;IACrC,oCAAoC,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvG,4CAA4C,MAAM,CAAC,KAAK,EAAE,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACtF,iCAAiC;IACjC;IACA,gCAAgC,IAAI,QAAQ,CAAC,oBAAoB,IAAI,MAAM,CAAC,KAAK,KAAK,GAAG;IACzF,oCAAoC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5D,6BAA6B;IAC7B,yBAAyB;IACzB;IACA,wBAAwB,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,EAAE;IAC/D,4BAA4B,IAAI,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACxD,4BAA4B,MAAM,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE;IACtD,gCAAgC,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7E,6BAA6B,CAAC,CAAC;IAC/B,4BAA4B,MAAM,GAAG,OAAO,CAAC;IAC7C,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC;AAC1C;IACA;IACA,gBAAgB,IAAI,GAAG,IAAI,GAAG;IAC9B,oBAAoB,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC/E;IACA;IACA,gBAAgB,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,EAAE;IAC3C,oBAAoB,IAAI,IAAI,GAAG,MAAM,CAAC,KAAK,KAAK,EAAE,CAAC;IACnD,oBAAoB,IAAI,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;IAChG,oBAAoB,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE;IACjC,wBAAwB,IAAI,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5H,gCAAgC,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC;IACtD,wBAAwB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC3D,wBAAwB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1E,qBAAqB;IACrB,iBAAiB;IACjB;IACA,qBAAqB,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,MAAM,CAAC,GAAG,EAAE,IAAI,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC;IACjH,2BAA2B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;IACtE,oBAAoB,IAAI,KAAK,GAAG,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC/D,oBAAoB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACrG;IACA;IACA;IACA;IACA;IACA,iBAAiB;IACjB;IACA,gBAAgB,OAAO,MAAM,CAAC;IAC9B,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;IAC9C,oBAAoB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IAC3C,wBAAwB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACnD,qBAAqB,CAAC,CAAC;IACvB,iBAAiB;IACjB,qBAAqB,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE;IACnD,oBAAoB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACzC,oBAAoB,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACrD,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACzD,qBAAqB,CAAC,CAAC;IACvB,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,iBAAiB;IACjB,qBAAqB,GAAG,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IAClD,oBAAoB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACzC,oBAAoB,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACrD,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IACzD,qBAAqB,CAAC,CAAC;IACvB,oBAAoB,CAAC,GAAG,CAAC,CAAC;IAC1B,iBAAiB;IACjB,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,SAAS,CAAC;IACV;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACrC,YAAY,IAAI,EAAE,CAAC,YAAY,UAAU,CAAC;IAC1C,gBAAgB,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACzC,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACxB,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,YAAY,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACrC,YAAY,OAAO,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACtC;IACA,YAAY,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,EAAE;IAC9C,gBAAgB,GAAG,CAAC,0BAA0B,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC/D,YAAY,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IACtC,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,EAAE;IACpC,YAAY,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IAChD,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACtC,YAAY,IAAI,CAAC,YAAY,UAAU,IAAI,CAAC,YAAY,UAAU,EAAE;IACpE,gBAAgB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAC/C,oBAAoB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,iBAAiB,CAAC,CAAC;IACnB,gBAAgB,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;IACpD,aAAa;IACb,YAAY,GAAG,CAAC,CAAC,MAAM,EAAE;IACzB;IACA,gBAAgB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;IACjC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACzC,gBAAgB,OAAO,CAAC,CAAC,MAAM,CAAC;IAChC,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb;IACA,YAAY,IAAI,CAAC,CAAC,KAAK,KAAK,CAAC;IAC7B,gBAAgB,MAAM,IAAI,kBAAkB,CAAC,oDAAoD,GAAG,CAAC,CAAC,CAAC;IACvG,YAAY,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9B,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS,CAAC;IACV,QAAQ,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IAC/C,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;IACrC,YAAY,OAAO,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IACjD,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,WAAW,GAAG,UAAU,CAAC,EAAE;IACvC,YAAY,OAAO,IAAI,MAAM,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,YAAY,OAAO,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,YAAY,OAAO,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,YAAY,OAAO,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IAClC,YAAY,OAAO,WAAW,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;IACnC,YAAY,OAAO,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzC,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC,EAAE;IACtC,YAAY,OAAO,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,SAAS,CAAC;IACV;IACA,QAAQ,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,EAAE;IACvC,YAAY,OAAO,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,SAAS,CAAC;IACV,KAAK;AAEL;IACA;IACA;IACA,IAAI,IAAI,QAAQ,GAAG;IACnB;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,OAAO,EAAE,UAAU,KAAK,EAAE,IAAI,EAAE;IACxC,YAAY,IAAI,IAAI,CAAC;IACrB,YAAY,IAAI,KAAK,KAAK,CAAC,EAAE;IAC7B,gBAAgB,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,EAAE;IAClD,oBAAoB,IAAI,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACjE,oBAAoB,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;IACvC,wBAAwB,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAClD,wBAAwB,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC;IAC/C,wBAAwB,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACzF,wBAAwB,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACjD,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,IAAI,GAAG,EAAE,CAAC;IAClC,qBAAqB;IACrB,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IACtD,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,eAAe,EAAE,UAAU,GAAG,EAAE;IACxC,YAAY,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,EAAE,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IAC1D,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD;IACA,YAAY,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1F,SAAS;IACT;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,QAAQ,cAAc,EAAE,UAAU,GAAG,EAAE;IACvC,YAAY,IAAI,IAAI,GAAG,KAAK,CAAC;IAC7B;IACA,YAAY,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,OAAO,GAAG,KAAK,CAAC;IAChF,YAAY,OAAO,CAAC,IAAI,EAAE;IAC1B,gBAAgB,CAAC,EAAE,CAAC;IACpB,gBAAgB,IAAI,CAAC,GAAG,KAAK,EAAE;IAC/B,oBAAoB,IAAI,GAAG,IAAI,CAAC;IAChC,iBAAiB;IACjB,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC,gBAAgB,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IACtC,gBAAgB,IAAI,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,EAAE,CAAC;IACtC,gBAAgB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAChC,gBAAgB,IAAI,CAAC,GAAG,OAAO,EAAE;IACjC,oBAAoB,IAAI,GAAG,IAAI,CAAC;IAChC,iBAAiB;IACjB,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,gBAAgB,EAAE,GAAG,EAAE,CAAC;IACxB,gBAAgB,EAAE,GAAG,EAAE,CAAC;IACxB,gBAAgB,EAAE,GAAG,GAAG,CAAC;IACzB,gBAAgB,EAAE,GAAG,GAAG,CAAC;IACzB,gBAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,OAAO,IAAI,CAAC,GAAG,EAAE,EAAE;IACnE,oBAAoB,IAAI,GAAG,IAAI,CAAC;IAChC,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC9B,SAAS;IACT,KAAK,CAAC;IACN;AACA;IACA;IACA,IAAI,IAAI,KAAK,GAAG;IAChB,QAAQ,MAAM,EAAE,CAAC,YAAY;IAC7B;IACA,YAAY,IAAI,IAAI,GAAG,CAAC,SAAS,EAAE,aAAa,EAAE,cAAc,EAAE,aAAa,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;IACvH,YAAY,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;IACtC,YAAY,KAAK,IAAI,CAAC,IAAI,MAAM,EAAE;IAClC,gBAAgB,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAC1C,oBAAoB,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;IACrC,aAAa;IACb;IACA,YAAY,MAAM,CAAC,WAAW,CAAC;IAC/B,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,IAAI;IAC9B,gBAAgB,MAAM,EAAE,OAAO;IAC/B,gBAAgB,MAAM,EAAE,IAAI;IAC5B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,IAAI;IAC/B,gBAAgB,SAAS,EAAE,UAAU,CAAC,EAAE;IACxC,oBAAoB,OAAO,CAAC,CAAC;IAC7B,iBAAiB;IACjB,aAAa,CAAC,CAAC;IACf,YAAY,MAAM,CAAC,WAAW,CAAC;IAC/B,gBAAgB,UAAU,EAAE,CAAC;IAC7B,gBAAgB,QAAQ,EAAE,KAAK;IAC/B,gBAAgB,MAAM,EAAE,aAAa;IACrC,gBAAgB,MAAM,EAAE,IAAI;IAC5B,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,SAAS,EAAE,IAAI;IAC/B,gBAAgB,SAAS,EAAE,UAAU,CAAC,EAAE;IACxC,oBAAoB,OAAO,CAAC,CAAC;IAC7B,iBAAiB;IACjB,aAAa,CAAC,CAAC;IACf;IACA,YAAY,IAAI,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;IAChD,YAAY,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,SAAS,CAAC;IAC9C,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS,GAAG;IACZ,QAAQ,KAAK,EAAE,GAAG;IAClB,QAAQ,GAAG,EAAE,UAAU;IACvB;AACA;IACA,QAAQ,KAAK,EAAE,UAAU,MAAM,EAAE,MAAM,EAAE;IACzC;IACA,YAAY,IAAI,MAAM,CAAC,KAAK,EAAE;IAC9B,gBAAgB,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IACxC,aAAa;IACb,YAAY,IAAI,MAAM,YAAY,CAAC,CAAC,OAAO,CAAC,UAAU;IACtD,gBAAgB,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC;AACzC;IACA,YAAY,IAAI,OAAO,CAAC,MAAM,CAAC,EAAE;IACjC,gBAAgB,IAAI,UAAU,GAAG,EAAE,CAAC;IACpC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxD,oBAAoB,IAAI,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACxC;IACA,oBAAoB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;IACtC,wBAAwB,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3C,oBAAoB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;IAC7D,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,CAAC;IACtE,aAAa;AACb;IACA,iBAAiB,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;IACvC,gBAAgB,IAAI,GAAG,GAAG,oBAAoB,CAAC;IAC/C,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjE,oBAAoB,IAAI,MAAM,GAAG,EAAE;IACnC,4BAA4B,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACnD,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACvD,wBAAwB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;IAC9D,qBAAqB;IACrB,oBAAoB,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9C,oBAAoB,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;IACxD,wBAAwB,GAAG,IAAI,QAAQ,CAAC;IACxC,qBAAqB;IACrB,iBAAiB;IACjB,gBAAgB,GAAG,IAAI,gBAAgB,CAAC;IACxC,gBAAgB,OAAO,GAAG,CAAC;IAC3B,aAAa;AACb;IACA,iBAAiB,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;IACvC,gBAAgB,IAAI,GAAG,GAAG,SAAS,CAAC;IACpC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjE,oBAAoB,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC,CAAC;IAC3H,iBAAiB;IACjB,gBAAgB,GAAG,IAAI,UAAU,CAAC;IAClC,gBAAgB,OAAO,GAAG,CAAC;IAC3B,aAAa;IACb;IACA,iBAAiB,GAAG,KAAK,CAAC,MAAM,CAAC,EAAE;IACnC,gBAAgB,IAAI,GAAG,GAAG,KAAK,CAAC;IAChC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjE,oBAAoB,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,EAAE,CAAC,CAAC;IAC3H,iBAAiB;IACjB,gBAAgB,GAAG,IAAI,KAAK,CAAC;IAC7B,gBAAgB,OAAO,GAAG,CAAC;IAC3B,aAAa;AACb;IACA,YAAY,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IACpC,YAAY,IAAI,OAAO,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,KAAK,UAAU,CAAC;IACzE,oBAAoB,KAAK,GAAG,MAAM,CAAC,KAAK;IACxC,oBAAoB,MAAM,GAAG,UAAU,CAAC,KAAK,CAAC;IAC9C,oBAAoB,QAAQ,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAC7D;IACA,YAAY,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,OAAO,EAAE;IAC/C,gBAAgB,OAAO,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAChH,aAAa;IACb,iBAAiB;IACjB,gBAAgB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,CAAC;AAC5D;IACA;IACA,gBAAgB,IAAI,OAAO,CAAC;AAC5B;IACA,gBAAgB,IAAI,OAAO,EAAE;IAC7B,oBAAoB,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC;IAClE;IACA,oBAAoB,OAAO,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACtC,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IAC7E,iBAAiB;IACjB;IACA,gBAAgB,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,CAAC;IAC1E,wBAAwB,CAAC,CAAC;IAC1B;IACA,gBAAgB,IAAI,MAAM;IAC1B,oBAAoB,KAAK,CAAC,MAAM,EAAE,CAAC;IACnC;IACA;IACA,gBAAgB,IAAI,OAAO,EAAE;IAC7B,oBAAoB,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IACjG,oBAAoB,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;IACzC,wBAAwB,CAAC,GAAG,EAAE,CAAC;IAC/B,iBAAiB;IACjB;IACA,qBAAqB,IAAI,QAAQ,CAAC,KAAK,CAAC;IACxC,oBAAoB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAClD;IACA;IACA,oBAAoB,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACrD;IACA,gBAAgB,IAAI,OAAO,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;IACtC;IACA,wBAAwB,KAAK,GAAG,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/C,gBAAgB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACnC;IACA;IACA,gBAAgB,IAAI,MAAM,GAAG,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC;AAC9G;IACA,gBAAgB,OAAO,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACrD,aAAa;AACb;IACA,SAAS;IACT;IACA,QAAQ,KAAK,EAAE;IACf,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,IAAI,EAAE,QAAQ;IAC1B,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,OAAO,EAAE,WAAW;IAChC,YAAY,IAAI,EAAE,QAAQ;IAC1B,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,IAAI,EAAE,QAAQ;IAC1B,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,MAAM,EAAE,UAAU;IAC9B,YAAY,EAAE,EAAE,MAAM;IACtB,YAAY,EAAE,EAAE,MAAM;IACtB,YAAY,EAAE,EAAE,MAAM;IACtB,YAAY,QAAQ,EAAE,YAAY;IAClC,YAAY,EAAE,EAAE,MAAM;IACtB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,OAAO,EAAE,WAAW;IAChC,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,OAAO,EAAE,WAAW;IAChC,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,MAAM,EAAE,UAAU;IAC9B,YAAY,EAAE,EAAE,MAAM;IACtB,YAAY,EAAE,EAAE,MAAM;IACtB,YAAY,KAAK,EAAE,SAAS;IAC5B,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,KAAK,EAAE,SAAS;IAC5B,SAAS;IACT,QAAQ,OAAO,EAAE;IACjB,YAAY,MAAM,EAAE,UAAU;IAC9B,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,MAAM,EAAE,UAAU;IAC9B,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,IAAI,EAAE,QAAQ;IAC1B,YAAY,MAAM,EAAE,UAAU;IAC9B,YAAY,IAAI,EAAE,QAAQ;IAC1B,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,EAAE,EAAE,MAAM;IACtB,YAAY,EAAE,EAAE,MAAM;IACtB,YAAY,EAAE,EAAE,MAAM;IACtB,YAAY,IAAI,EAAE,QAAQ;IAC1B,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,MAAM,EAAE,UAAU;IAC9B,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,EAAE,GAAG,MAAM;IACvB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,IAAI,EAAE,QAAQ;IAC1B,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,MAAM,EAAE,UAAU;IAC9B,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,GAAG,EAAE,OAAO;IACxB,YAAY,IAAI,EAAE,QAAQ;IAC1B,SAAS;IACT;IACA,QAAQ,KAAK,EAAE,UAAU,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE;IAC7D,YAAY,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK;IACpC,oBAAoB,aAAa,GAAG,MAAM,CAAC,aAAa;IACxD,oBAAoB,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC;IAChC,oBAAoB,KAAK,GAAG,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;IAC7C;IACA,YAAY,IAAI,MAAM,CAAC,UAAU,EAAE;IACnC,gBAAgB,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;IACrC,aAAa;IACb,iBAAiB,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC,IAAI,aAAa,KAAK,CAAC,IAAI,aAAa,KAAK,CAAC,IAAI,aAAa,KAAK,CAAC,EAAE;IACtH,gBAAgB,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IACzC,gBAAgB,IAAI,KAAK,CAAC,OAAO;IACjC,oBAAoB,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC7D;IACA,gBAAgB,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACxD,gBAAgB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,gBAAgB,IAAI,KAAK,EAAE;IAC3B,oBAAoB,QAAQ,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACxC,oBAAoB,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C,iBAAiB;IACjB,gBAAgB,IAAI,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,gBAAgB,IAAI,MAAM,EAAE;IAC5B,oBAAoB,QAAQ,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;IACzC,oBAAoB,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/C,iBAAiB;IACjB,gBAAgB,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC;IACjC,aAAa;IACb,iBAAiB,IAAI,KAAK,KAAK,EAAE,IAAI,aAAa,KAAK,EAAE,EAAE;IAC3D,gBAAgB,IAAI,IAAI;IACxB,wBAAwB,KAAK,GAAG,EAAE;IAClC,wBAAwB,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IAC7C;IACA,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC7D,oBAAoB,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;IACnD,oBAAoB,IAAI,OAAO,GAAG,KAAK,QAAQ;IAC/C,wBAAwB,IAAI,GAAG,GAAG,CAAC;IACnC,yBAAyB;IACzB,wBAAwB,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IACvD,qBAAqB;IACrB,oBAAoB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrC,iBAAiB;AACjB;IACA,gBAAgB,IAAI,KAAK,KAAK,IAAI,EAAE;IACpC,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACvE,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,GAAG,EAAE;IACxC,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;IACrE,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,WAAW,EAAE;IAChD,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;IACxE,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,OAAO,EAAE;IAC5C,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,kBAAkB,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACrG,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,WAAW,EAAE;IAChD,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7F,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,QAAQ,EAAE;IAC7C,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACzI,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,eAAe,EAAE;IAC3E,oBAAoB,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC7C,oBAAoB,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,WAAW,EAAE,IAAI,GAAG,CAAC,aAAa,EAAE,CAAC,EAAE;IAC3F,wBAAwB,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D,qBAAqB;IACrB,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,KAAK,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;IAC7E,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,OAAO,EAAE;IAC5C,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,kBAAkB,CAAC;IAC9F,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,MAAM,EAAE;IAC3C,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,iBAAiB,CAAC;IAC5F,iBAAiB;IACjB;IACA,qBAAqB,IAAI,KAAK,KAAK,QAAQ,CAAC,GAAG,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;IACrE,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9H,iBAAiB;IACjB;IACA,qBAAqB,IAAI,KAAK,KAAK,QAAQ,CAAC,KAAK,EAAE;IACnD,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACxH,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,KAAK,EAAE;IAC1C,oBAAoB,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACpC,4BAA4B,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACxC,4BAA4B,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACxC,4BAA4B,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,iBAAiB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC7I,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,SAAS,EAAE;IAC9C,oBAAoB,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACpC,4BAA4B,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACxC,4BAA4B,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACxC,4BAA4B,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACzC,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,kBAAkB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC9I,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,SAAS,EAAE;IAC9C,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAClF,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,KAAK,EAAE;IAC1C,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAChE,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,UAAU,EAAE;IAC/C,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,UAAU,EAAE;IAC/C,oBAAoB,CAAC,CAAC,KAAK,CAAC,GAAG,oBAAoB,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,IAAI,IAAI,GAAG,KAAK,KAAK,EAAE,GAAG,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC;IACxG,oBAAoB,IAAI,MAAM,CAAC,YAAY;IAC3C,wBAAwB,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;IAClF;IACA,wBAAwB,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,QAAQ,CAAC,CAAC;IACnF,iBAAiB;IACjB,aAAa;IACb,iBAAiB,IAAI,MAAM,CAAC,WAAW,EAAE,EAAE;IAC3C,gBAAgB,IAAI,SAAS,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC,IAAI;IAC5D,wBAAwB,KAAK,KAAK,EAAE,IAAI,aAAa,KAAK,EAAE;IAC5D,wBAAwB,UAAU,CAAC,EAAE,CAAC,EAAE;IACxC,4BAA4B,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC;IACrD,yBAAyB;IACzB,wBAAwB,UAAU,CAAC,EAAE,CAAC,EAAE;IACxC,4BAA4B,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;IACrE,4BAA4B,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC;IACrE,4BAA4B,OAAO,CAAC,GAAG,CAAC,CAAC;IACzC,yBAAyB;IACzB,iBAAiB;IACjB,wBAAwB,OAAO,GAAG,EAAE;IACpC,wBAAwB,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;IAC7C,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5C,oBAAoB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;IACpE,iBAAiB;IACjB,gBAAgB,IAAI,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAC9C;IACA,gBAAgB,CAAC,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,QAAQ,EAAE,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,KAAK,CAAC;IACpI,aAAa;IACb,iBAAiB,IAAI,KAAK,KAAK,EAAE,IAAI,aAAa,KAAK,EAAE,IAAI,aAAa,KAAK,EAAE,EAAE;IACnF,gBAAgB,IAAI,KAAK,KAAK,EAAE;IAChC,oBAAoB,MAAM,CAAC,kBAAkB,EAAE,CAAC;IAChD;IACA;IACA;IACA,gBAAgB,IAAI,WAAW,GAAG,EAAE;IACpC,wBAAwB,SAAS,GAAG,EAAE,CAAC;IACvC;IACA,gBAAgB,IAAI,OAAO,GAAG,EAAE,EAAE,OAAO,GAAG,EAAE,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC;IACrE,gBAAgB,IAAI,WAAW,GAAG,UAAU,SAAS,EAAE,GAAG,EAAE,OAAO,EAAE;IACrE,oBAAoB,IAAI,OAAO,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;IACvD,wBAAwB,IAAI,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC;IAC3C,wBAAwB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpD,4BAA4B,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;IACpE,4BAA4B,IAAI,EAAE,gCAAgC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE;IACvH,gCAAgC,SAAS,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAChF,6BAA6B;IAC7B,yBAAyB;IACzB,qBAAqB;IACrB,oBAAoB,OAAO,SAAS,CAAC;IACrC,iBAAiB,CAAC;AAClB;IACA;IACA,gBAAgB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACzC,oBAAoB,IAAI,OAAO,GAAG,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC;IACrD,4BAA4B,KAAK,CAAC;AAClC;IACA,oBAAoB,IAAI,OAAO,EAAE;IACjC,wBAAwB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,CAAC;IAChE,wBAAwB,KAAK,EAAE,CAAC;IAChC,wBAAwB,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;IAC7C,4BAA4B,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;IACpF,gCAAgC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACxE,4BAA4B,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC7D,yBAAyB;AACzB;IACA,wBAAwB,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAChD,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IACvD,wBAAwB,KAAK,EAAE,CAAC;IAChC,wBAAwB,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE;IAC7C,4BAA4B,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;IACpF,gCAAgC,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IACxE,4BAA4B,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAC3D,yBAAyB;IACzB,wBAAwB,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC9C,qBAAqB;IACrB,iBAAiB,CAAC,CAAC;AACnB;IACA;IACA,gBAAgB,WAAW,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;IACvD,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AAChD;IACA,gBAAgB,WAAW,CAAC,WAAW,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;IACzD,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAClD,aAAa;AACb;IACA,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,aAAa,EAAE;IAC/C,YAAY,IAAI,WAAW,GAAG,UAAU,CAAC,EAAE;IAC3C,gBAAgB,OAAO,uBAAuB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACvD,aAAa,CAAC;IACd;IACA,YAAY,IAAI,CAAC;IACjB,gBAAgB,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACpC;IACA,YAAY,IAAI,aAAa,EAAE;IAC/B;IACA;IACA;IACA,gBAAgB,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC1B,aAAa;AACb;IACA;IACA,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,YAAY,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D;IACA;IACA,YAAY,IAAI,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC;IACtC,gBAAgB,EAAE,GAAG,EAAE,CAAC;IACxB;IACA,YAAY,IAAI,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC;IAChC,gBAAgB,EAAE,GAAG,EAAE,CAAC;IACxB;IACA,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;AAC1E;IACA;IACA,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC;IAC7E;IACA;IACA,YAAY,IAAI,GAAG,IAAI,MAAM,EAAE;IAC/B,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAClD,gBAAgB,IAAI,aAAa,IAAI,EAAE;IACvC,oBAAoB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;IACpD,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb;IACA;IACA,gBAAgB,OAAO,GAAG,CAAC;IAC3B,SAAS;IACT,QAAQ,KAAK,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAC/B,YAAY,IAAI,CAAC,GAAG,EAAE,CAAC;IACvB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IACtC,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACnC,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT;IACA,QAAQ,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE;IACpC,YAAY,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;IACxB,gBAAgB,OAAO,EAAE,CAAC;IAC1B,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,gBAAgB,OAAO,CAAC,CAAC;IACzB,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC;IACvB,gBAAgB,OAAO,CAAC,CAAC;IACzB,YAAY,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;IAChC,SAAS;IACT,QAAQ,OAAO,EAAE,UAAU,OAAO,EAAE;IACpC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACnC,gBAAgB,IAAI,CAAC;IACrB,oBAAoB,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtD,aAAa;IACb,YAAY,OAAO,OAAO,CAAC;IAC3B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,UAAU,EAAE,UAAU,CAAC,EAAE,MAAM,EAAE;IACzC,YAAY,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE;IACpC,oBAAoB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;IACzC;IACA,YAAY,IAAI,MAAM,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG;IAChD,gBAAgB,OAAO,EAAE,CAAC;IAC1B;IACA,YAAY,IAAI,CAAC,KAAK,GAAG;IACzB,gBAAgB,OAAO,CAAC,CAAC;IACzB,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,SAAS;IACT,QAAQ,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,EAAE;IAC9B,YAAY,OAAO,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9D,SAAS;IACT,QAAQ,MAAM,EAAE,UAAU,CAAC,EAAE;IAC7B,YAAY,OAAO,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACjC,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE;IACpC,YAAY,GAAG,GAAG,GAAG,IAAI,QAAQ,CAAC;IAClC,YAAY,IAAI,YAAY,GAAG;IAC/B,gBAAgB,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IAClC,gBAAgB,MAAM,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IAClC,gBAAgB,KAAK,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IACjC,gBAAgB,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;IAC/B,gBAAgB,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC;IAC/C,aAAa,CAAC;IACd,YAAY,IAAI,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC;IAC5C,YAAY,OAAO,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IACtE,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,YAAY,EAAE,UAAU,MAAM,EAAE;IACxC,YAAY,IAAI,QAAQ,GAAG,EAAE,CAAC;IAC9B;IACA,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC5E,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC3D,gBAAgB,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtC,gBAAgB,IAAI,OAAO,CAAC,KAAK,CAAC;IAClC,oBAAoB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7D,qBAAqB,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACtD,oBAAoB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACzC,aAAa;IACb,YAAY,OAAO,QAAQ,CAAC;IAC5B,SAAS;IACT;IACA;IACA;IACA;IACA;IACA,QAAQ,KAAK,EAAE,UAAU,UAAU,EAAE;IACrC,YAAY,IAAI,CAAC,EAAE,CAAC,CAAC;IACrB,YAAY,IAAI,MAAM,GAAG,EAAE,CAAC;IAC5B,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IACvD,YAAY,IAAI,OAAO,GAAG;IAC1B,gBAAgB,MAAM,EAAE,EAAE;IAC1B,gBAAgB,OAAO,EAAE,EAAE;IAC3B,gBAAgB,OAAO,EAAE,UAAU;IACnC,aAAa,CAAC;IACd;IACA,YAAY,IAAI,IAAI,GAAG,YAAY;IACnC,gBAAgB,OAAO,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,aAAa,CAAC;IACd,YAAY,IAAI,UAAU,GAAG,YAAY;IACzC,gBAAgB,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;IAC3C,aAAa,CAAC;IACd,YAAY,IAAI,GAAG,GAAG,UAAU,KAAK,EAAE;IACvC,gBAAgB,IAAI,KAAK,IAAI,OAAO;IACpC,oBAAoB,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;IAC1C,gBAAgB,OAAO,KAAK,CAAC;IAC7B,aAAa,CAAC;AACd;IACA;IACA,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACvD,gBAAgB,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IACtC;IACA,gBAAgB,IAAI,KAAK,CAAC,KAAK,KAAK,MAAM,EAAE;IAC5C;IACA,oBAAoB,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC;IACzC,oBAAoB,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC;IACzC,oBAAoB,MAAM,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;IAC1C,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,EAAE;IACvD,oBAAoB,MAAM,IAAI,KAAK,CAAC,KAAK,GAAG,UAAU,EAAE,CAAC;IACzD,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,CAAC,KAAK,KAAK,KAAK,EAAE;IAChD,oBAAoB,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC;IACzC;IACA,oBAAoB,CAAC,EAAE,CAAC;IACxB;IACA,oBAAoB,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC,KAAK,CAAC;IAC1C,oBAAoB,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;IACzD,oBAAoB,MAAM,IAAI,WAAW,GAAG,UAAU,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC;IACrE,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,CAAC,KAAK,KAAK,QAAQ,EAAE;IACnD,oBAAoB,IAAI,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;IACjD,oBAAoB,MAAM,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC;IAC/C,iBAAiB;IACjB;IACA,qBAAqB,IAAI,KAAK,CAAC,KAAK,KAAK,MAAM,IAAI,KAAK,CAAC,KAAK,KAAK,OAAO,EAAE;IAC5E,oBAAoB,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,KAAK,MAAM,GAAG,KAAK,GAAG,SAAS,CAAC;IACxE,oBAAoB,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC;IACrC,oBAAoB,CAAC,EAAE,CAAC;IACxB,oBAAoB,IAAI,GAAG,GAAG,UAAU,EAAE,CAAC;IAC3C,oBAAoB,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC;IACzC,oBAAoB,MAAM,IAAI,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACjG,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,CAAC,KAAK,KAAK,MAAM,EAAE;IACjD,oBAAoB,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC;IACrC,oBAAoB,MAAM,IAAI,OAAO,GAAG,UAAU,CAAC,CAAC,UAAU,EAAE,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACvG,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;IAC7C,wBAAwB,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAC1D,qBAAqB;IACrB;IACA,wBAAwB,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;IAC9D,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC;IACtC,SAAS;IACT,KAAK,CAAC;IACN;IACA,IAAI,SAAS,MAAM,CAAC,CAAC,EAAE;IACvB,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC;IACvB,YAAY,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7C,aAAa,IAAI,OAAO,CAAC,CAAC,CAAC;IAC3B,YAAY,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACvC;IACA,YAAY,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrD,KAAK;IACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,CAAC,YAAY,GAAG,UAAU,CAAC,EAAE,GAAG,EAAE;IAC5C,QAAQ,IAAI,CAAC,GAAG,EAAE,CAAC;IACnB,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;IACvB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;IAClC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACvB,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,CAAC,SAAS,GAAG,UAAU,CAAC,EAAE;IACpC,QAAQ,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IAC7B,QAAQ,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;IACvB,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,CAAC,OAAO,GAAG,SAAS,GAAG,EAAE;IACnC,QAAQ,OAAO,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC9C,KAAK,CAAC;IACN;IACA;IACA,IAAI,MAAM,CAAC,SAAS,GAAG;IACvB,QAAQ,MAAM,EAAE,IAAI;IACpB;IACA,QAAQ,CAAC,EAAE,UAAU,CAAC,EAAE;IACxB,YAAY,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACrF,SAAS;AACT;IACA,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE,GAAG,EAAE;IAC/B,YAAY,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;IAC9B,gBAAgB,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;IACtC,YAAY,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACnC,SAAS;AACT;IACA;IACA,QAAQ,UAAU,EAAE,YAAY;IAChC,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACxC,SAAS;AACT;IACA;IACA,QAAQ,OAAO,EAAE,YAAY;IAC7B,YAAY,OAAO,KAAK,CAAC,MAAM,EAAE,YAAY;IAC7C,gBAAgB,OAAO,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACxE,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChC,SAAS;AACT;IACA;IACA,QAAQ,GAAG,EAAE,UAAU,MAAM,EAAE;IAC/B,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACzC,YAAY,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC;IAC9C,YAAY,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;IAChC,gBAAgB,OAAO,KAAK,CAAC;IAC7B,aAAa;IACb,YAAY,GAAG;IACf,gBAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,SAAS,EAAE;IAChG,oBAAoB,OAAO,KAAK,CAAC;IACjC,iBAAiB;IACjB,aAAa;IACb,mBAAmB,EAAE,CAAC,EAAE;IACxB,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;AACT;IACA;IACA,QAAQ,KAAK,EAAE,YAAY;IAC3B,YAAY,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE;IAChC,oBAAoB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC7C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC;IACA,gBAAgB,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1D,aAAa;IACb,YAAY,IAAI,IAAI,CAAC,MAAM,EAAE;IAC7B,gBAAgB,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IAC/C,aAAa;IACb,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;AACT;IACA;IACA,QAAQ,GAAG,EAAE,UAAU,EAAE,EAAE;IAC3B,YAAY,IAAI,QAAQ,GAAG,EAAE,CAAC;IAC9B,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IACtC,gBAAgB,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACxC,aAAa,CAAC,CAAC;AACf;IACA,YAAY,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,CAAC;IACxC,SAAS;AACT;IACA;IACA,QAAQ,IAAI,EAAE,UAAU,EAAE,EAAE;IAC5B,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACnD,YAAY,GAAG;IACf,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,gBAAgB,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,aAAa;IACb,mBAAmB,EAAE,CAAC,EAAE;IACxB,SAAS;AACT;IACA;IACA,QAAQ,YAAY,EAAE,YAAY;IAClC,YAAY,OAAO,KAAK,CAAC,MAAM,EAAE,YAAY;IAC7C,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IACvC,gBAAgB,IAAI,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;IACvC,oBAAoB,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IACxC,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IAC7C,oBAAoB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,iBAAiB,CAAC,CAAC;IACnB,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChC,SAAS;AACT;IACA;IACA,QAAQ,SAAS,EAAE,UAAU,MAAM,EAAE;IACrC,YAAY,OAAO,KAAK,CAAC,MAAM,EAAE,YAAY;IAC7C,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC;IAClD,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IAC7C,gBAAgB,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;IACpC,oBAAoB,OAAO,IAAI,CAAC;IAChC,iBAAiB;IACjB,gBAAgB,IAAI,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IACpF;IACA,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAC1C,oBAAoB,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,oBAAoB,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzD,oBAAoB,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,iBAAiB,CAAC,CAAC;IACnB,gBAAgB,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD,gBAAgB,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD,gBAAgB,IAAI,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACrD,gBAAgB,IAAI,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;IAC7C,oBAAoB,OAAO,IAAI,CAAC;IAChC,iBAAiB;IACjB,gBAAgB,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;IACnD,gBAAgB,IAAI,SAAS,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC;IAChD,gBAAgB,IAAI,SAAS,GAAG,CAAC,CAAC,EAAE;IACpC,oBAAoB,KAAK,GAAG,CAAC,CAAC,CAAC;IAC/B,iBAAiB;IACjB,gBAAgB,IAAI,SAAS,GAAG,CAAC,EAAE;IACnC,oBAAoB,KAAK,GAAG,CAAC,CAAC;IAC9B,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACpD,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChC,SAAS;AACT;IACA;IACA,QAAQ,YAAY,EAAE,UAAU,MAAM,EAAE;IACxC,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;IACzD,YAAY,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,CAAC,CAAC;IAClE,SAAS;AACT;IACA;IACA,QAAQ,gBAAgB,EAAE,UAAU,MAAM,EAAE;IAC5C,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAAC;IACzD,YAAY,OAAO,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,SAAS,CAAC,CAAC;IACtF,SAAS;AACT;IACA;IACA,QAAQ,iBAAiB,EAAE,UAAU,MAAM,EAAE;IAC7C,YAAY,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACvC,YAAY,OAAO,CAAC,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC;IACxE,SAAS;AACT;IACA;IACA,QAAQ,GAAG,EAAE,UAAU,MAAM,EAAE;IAC/B,YAAY,OAAO,KAAK,CAAC,MAAM,EAAE,YAAY;IAC7C,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC;IAClD,gBAAgB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;IACvD,oBAAoB,OAAO,IAAI,CAAC;IAChC,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAChD,oBAAoB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9C,iBAAiB,CAAC,CAAC;IACnB,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChC,SAAS;AACT;IACA;IACA,QAAQ,QAAQ,EAAE,UAAU,MAAM,EAAE;IACpC,YAAY,OAAO,KAAK,CAAC,MAAM,EAAE,YAAY;IAC7C,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC;IAClD,gBAAgB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE;IACvD,oBAAoB,OAAO,IAAI,CAAC;IAChC,iBAAiB;IACjB,gBAAgB,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;IAChD,oBAAoB,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACnD,iBAAiB,CAAC,CAAC;IACnB,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChC,SAAS;AACT;IACA;IACA,QAAQ,QAAQ,EAAE,UAAU,CAAC,EAAE;IAC/B,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IACzC,gBAAgB,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;IAC7C,aAAa,CAAC,CAAC;IACf,SAAS;AACT;IACA,QAAQ,CAAC,EAAE,UAAU,CAAC,EAAE;IACxB,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,SAAS;AACT;IACA;IACA;IACA,QAAQ,GAAG,EAAE,UAAU,MAAM,EAAE;IAC/B,YAAY,OAAO,KAAK,CAAC,MAAM,EAAE,YAAY;IAC7C,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC;IAClD,gBAAgB,IAAI,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACtE,gBAAgB,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;IACpC,oBAAoB,OAAO,IAAI,CAAC;IAChC,iBAAiB;IACjB,gBAAgB,GAAG;IACnB,oBAAoB,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,iBAAiB;IACjB,uBAAuB,EAAE,CAAC,EAAE;IAC5B,gBAAgB,OAAO,OAAO,CAAC;IAC/B,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChC,SAAS;AACT;IACA;IACA;IACA,QAAQ,KAAK,EAAE,UAAU,MAAM,EAAE;IACjC,YAAY,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC;IAC9C,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;IAC9D,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;IAClC,YAAY,OAAO,KAAK,CAAC,MAAM,EAAE,YAAY;IAC7C,gBAAgB,OAAO,IAAI,MAAM,CAAC;IAClC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,oBAAoB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,oBAAoB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,iBAAiB,CAAC,CAAC;IACnB,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChC,SAAS;AACT;IACA;IACA,QAAQ,GAAG,EAAE,YAAY;IACzB,YAAY,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC1D,YAAY,GAAG;IACf,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,gBAAgB,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE;IAClF,oBAAoB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzC,iBAAiB;IACjB,aAAa;IACb,mBAAmB,EAAE,CAAC,EAAE;IACxB,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,SAAS,EAAE,WAAW;IAC9B,YAAY,IAAI,SAAS,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;IAClC,gBAAgB,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,aAAa,CAAC,CAAC;IACf,YAAY,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrC,SAAS;IACT;IACA,QAAQ,OAAO,EAAE,UAAU,CAAC,EAAE;IAC9B,YAAY,IAAI,KAAK,GAAG,IAAI,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IACjE,YAAY,GAAG;IACf,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC1B,gBAAgB,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,OAAO,EAAE,EAAE;IAClF,oBAAoB,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;IAClC,iBAAiB;IACjB,aAAa;IACb,mBAAmB,EAAE,CAAC,EAAE;IACxB,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT,QAAQ,IAAI,EAAE,UAAU,CAAC,EAAE;IAC3B,YAAY,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,SAAS;IACT,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;IAC/B,SAAS;IACT,QAAQ,KAAK,EAAE,UAAU,MAAM,EAAE;IACjC,YAAY,IAAI,GAAG,GAAG,EAAE,CAAC;IACzB,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC3D,gBAAgB,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;IAC5E,aAAa;IACb,YAAY,OAAO,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;IAC9C,SAAS;IACT,KAAK,CAAC;AACN;IACA;IACA,IAAI,SAAS,MAAM,GAAG;IACtB,QAAQ,IAAI,CAAC,GAAG,SAAS;IACzB,gBAAgB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC;IACzC,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,EAAE;IACzB,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,aAAa;IACb,SAAS;IACT,aAAa;IACb,YAAY,IAAI,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;IAC5B,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,gBAAgB,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,gBAAgB,IAAI,QAAQ,CAAC,GAAG,CAAC;IACjC,oBAAoB,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC;IACvC,gBAAgB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;IACjC,oBAAoB,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC,gBAAgB,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC;IAChC,gBAAgB,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;IACnC,oBAAoB,GAAG,CAAC,uDAAuD,CAAC,CAAC;IACjF,gBAAgB,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,gBAAgB,EAAE,GAAG,EAAE,CAAC;IACxB,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IAC3B,KAAK;IACL,IAAI,MAAM,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE;IACnC,QAAQ,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IAC7B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAChC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;IACN,IAAI,MAAM,CAAC,SAAS,GAAG,UAAU,GAAG,EAAE;IACtC,QAAQ,SAAS,CAAC,CAAC,IAAI,EAAE;IACzB,YAAY,OAAO,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC5C,SAAS;IACT,QAAQ,CAAC,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;AACvC;IACA,QAAQ,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1B,KAAK,CAAC;IACN,IAAI,MAAM,CAAC,UAAU,GAAG,UAAU,IAAI,EAAE,IAAI,EAAE;IAC9C,QAAQ,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IAC7B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACvC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;IACN,IAAI,MAAM,CAAC,SAAS,GAAG;IACvB;IACA,QAAQ,MAAM,EAAE,IAAI;IACpB,QAAQ,GAAG,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE;IACpC,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;IACnC,gBAAgB,OAAO,SAAS,CAAC;IACjC,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC;IAC9C,SAAS;IACT,QAAQ,GAAG,EAAE,SAAS,CAAC,EAAE,UAAU,EAAE;IACrC,YAAY,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACjC,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACxC,gBAAgB,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;IACvD,aAAa,CAAC,CAAC;IACf,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE;IAChD,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;IACnC,gBAAgB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IACxC,YAAY,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,GAAG,GAAG,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IACrG,SAAS;IACT,QAAQ,IAAI,EAAE,YAAY;IAC1B,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC3C,SAAS;IACT,QAAQ,IAAI,EAAE,YAAY;IAC1B,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;IACxC,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;IACrC,gBAAgB,OAAO,EAAE,CAAC;IAC1B,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACxC,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,CAAC,EAAE;IAC1B,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE;IAChC,oBAAoB,GAAG,GAAG,EAAE,CAAC;IAC7B,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACrC,gBAAgB,OAAO,GAAG,CAAC;IAC3B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;IACzC,gBAAgB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAClD,aAAa;IACb,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT,QAAQ,WAAW,EAAE,UAAU,EAAE,EAAE;IACnC,YAAY,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE;IAChC,oBAAoB,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IAC3C,YAAY,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;IACrC,gBAAgB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;IACzC,oBAAoB,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7D,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT;IACA,QAAQ,WAAW,EAAE,YAAY;IACjC,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;IAClC,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7C,YAAY,IAAI,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC5E,YAAY,GAAG;IACf,gBAAgB,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,gBAAgB,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,aAAa;IACb,mBAAmB,EAAE,CAAC,EAAE;IACxB,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IACpE,SAAS;IACT,QAAQ,UAAU,EAAE,YAAY;IAChC,YAAY,OAAO,IAAI,CAAC,QAAQ,EAAE,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IAC/D,SAAS;IACT,QAAQ,OAAO,EAAE,UAAU,CAAC,EAAE;IAC9B,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IAC/C,YAAY,IAAI,CAAC,KAAK,EAAE;IACxB,gBAAgB,GAAG,CAAC,0CAA0C,CAAC,CAAC;IAChE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,aAAa;AACb;IACA,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,KAAK,EAAE,YAAY;IAC3B,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;IAChD,oBAAoB,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACrC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACnC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5C,oBAAoB,IAAI,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,oBAAoB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,EAAE,GAAG,MAAM,CAAC;IAClF,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT;IACA,QAAQ,MAAM,EAAE,YAAY;IAC5B,YAAY,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;IAChC,gBAAgB,GAAG,CAAC,uBAAuB,CAAC,CAAC;IAC7C,YAAY,OAAO,KAAK,CAAC,MAAM,EAAE,YAAY;IAC7C,gBAAgB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7D,gBAAgB,IAAI,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAClD,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,iBAAiB,EAAE,CAAC;IAClE,gBAAgB,IAAI,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC;IACnE,gBAAgB,IAAI,gBAAgB,GAAG,EAAE,EAAE,WAAW,CAAC;IACvD;IACA;IACA,gBAAgB,GAAG;IACnB,oBAAoB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;IAC/B;IACA,oBAAoB,GAAG,GAAG,EAAE,CAAC;IAC7B,oBAAoB,EAAE,GAAG,EAAE,CAAC;IAC5B,oBAAoB,gBAAgB,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC7C,oBAAoB,OAAO,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,oBAAoB,GAAG;IACvB,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IACpC,wBAAwB,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;IAClF,wBAAwB,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC9C;IACA;IACA,wBAAwB,IAAI,CAAC,IAAI,EAAE,EAAE;IACrC,4BAA4B,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAClE,yBAAyB;IACzB,qBAAqB;IACrB,2BAA2B,EAAE,EAAE,EAAE;IACjC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACxC;IACA;IACA,oBAAoB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC5C,wBAAwB,GAAG,GAAG,EAAE,CAAC;IACjC,wBAAwB,EAAE,GAAG,EAAE,CAAC;IAChC,wBAAwB,GAAG;IAC3B,4BAA4B,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IACxC,4BAA4B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3I,yBAAyB;IACzB,+BAA+B,EAAE,EAAE,EAAE;IACrC,wBAAwB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC5C,qBAAqB;IACrB,iBAAiB;IACjB,uBAAuB,EAAE,EAAE,EAAE;IAC7B,gBAAgB,OAAO,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;IAC1D,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChC,SAAS;IACT;IACA,QAAQ,iBAAiB,EAAE,YAAY;IACvC,YAAY,OAAO,KAAK,CAAC,MAAM,EAAE,YAAY;IAC7C,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACnD,wBAAwB,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IAChG,gBAAgB,GAAG;IACnB,oBAAoB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC9B,oBAAoB,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,oBAAoB,IAAI,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;IAC7C,wBAAwB,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxD,4BAA4B,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,4BAA4B,IAAI,GAAG,IAAI,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;IAC5D,gCAAgC,GAAG,GAAG,EAAE,CAAC;IACzC,gCAAgC,EAAE,GAAG,EAAE,CAAC;IACxC,gCAAgC,GAAG;IACnC,oCAAoC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IAChD,oCAAoC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IACxG,iCAAiC;IACjC,uCAAuC,EAAE,EAAE,EAAE;IAC7C,gCAAgC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpD,gCAAgC,MAAM;IACtC,6BAA6B;IAC7B,yBAAyB;IACzB,qBAAqB;IACrB,oBAAoB,IAAI,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,oBAAoB,IAAI,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE;IAC7C,wBAAwB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpD,4BAA4B,IAAI,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC1G,4BAA4B,GAAG,GAAG,EAAE,CAAC;IACrC,4BAA4B,EAAE,GAAG,EAAE,CAAC;IACpC,4BAA4B,GAAG;IAC/B,gCAAgC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IAC5C;IACA;IACA;IACA;IACA,gCAAgC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC;IAC/D,wCAAwC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;IACxI,6BAA6B;IAC7B,mCAAmC,EAAE,EAAE,EAAE;IACzC,4BAA4B,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAChD,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,uBAAuB,EAAE,CAAC,EAAE;AAC5B;IACA,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChC,SAAS;IACT,QAAQ,SAAS,EAAE,YAAY;IAC/B,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;IAC5E,YAAY,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACtD;IACA,YAAY,GAAG;IACf,gBAAgB,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;IAC9B,gBAAgB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACnC,gBAAgB,EAAE,GAAG,IAAI,CAAC;IAC1B,gBAAgB,GAAG;IACnB,oBAAoB,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;IAClC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC;IACnE,iBAAiB;IACjB,uBAAuB,EAAE,EAAE,EAAE;IAC7B,aAAa;IACb,mBAAmB,EAAE,EAAE,EAAE;IACzB,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT;IACA,QAAQ,mBAAmB,EAAE,UAAU,MAAM,EAAE;IAC/C,YAAY,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC9E;IACA,YAAY,QAAQ,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;IACnD,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,MAAM,EAAE;IACpC,YAAY,OAAO,IAAI,CAAC,IAAI,EAAE,KAAK,MAAM,CAAC,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,MAAM,CAAC,IAAI,EAAE,CAAC;IAClF,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,MAAM,EAAE;IACpC,YAAY,OAAO,KAAK,CAAC,MAAM,EAAE,YAAY;IAC7C,gBAAgB,IAAI,CAAC,GAAG,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC;IAClD,gBAAgB,IAAI,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE;IAClD,oBAAoB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC/C,wBAAwB,IAAI,EAAE,GAAG,IAAI,MAAM,EAAE,CAAC;IAC9C,wBAAwB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;IAC/C,wBAAwB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACvD,4BAA4B,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7G,4BAA4B,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC;IACxD,yBAAyB;IACzB,wBAAwB,OAAO,EAAE,CAAC;IAClC,qBAAqB;IACrB,oBAAoB,OAAO,IAAI,CAAC;IAChC,iBAAiB;IACjB,gBAAgB,IAAI,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IACnF,gBAAgB,IAAI,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,QAAQ,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;IAC9E,gBAAgB,GAAG;IACnB,oBAAoB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IAChC,oBAAoB,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IACrC,oBAAoB,EAAE,GAAG,EAAE,CAAC;IAC5B,oBAAoB,GAAG;IACvB,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;IACpC,wBAAwB,GAAG,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5C,wBAAwB,EAAE,GAAG,IAAI,CAAC;IAClC,wBAAwB,GAAG;IAC3B,4BAA4B,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;IAC1C,4BAA4B,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACvF,yBAAyB;IACzB,+BAA+B,EAAE,EAAE,EAAE;IACrC,wBAAwB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IAC7C,qBAAqB;IACrB,2BAA2B,EAAE,EAAE,EAAE;IACjC,iBAAiB;IACjB,uBAAuB,EAAE,EAAE,EAAE;IAC7B,gBAAgB,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAClD,aAAa,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IAChC,SAAS;IACT,QAAQ,GAAG,EAAE,UAAU,MAAM,EAAE,QAAQ,EAAE;IACzC,YAAY,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACjC,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;IACvC,gBAAgB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACpD,oBAAoB,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACjF,oBAAoB,GAAG,QAAQ,EAAE;IACjC,wBAAwB,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF,qBAAqB;IACrB,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IACxC,iBAAiB,CAAC,CAAC;IACnB,aAAa;IACb,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,MAAM,EAAE,QAAQ,EAAE;IAC9C,YAAY,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACjC,YAAY,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;IACvC,gBAAgB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACpD,oBAAoB,IAAI,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACtF,oBAAoB,GAAG,QAAQ,EAAE;IACjC,wBAAwB,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpF,qBAAqB;IACrB,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IACxC,iBAAiB,CAAC,CAAC;IACnB,aAAa;IACb,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,QAAQ,MAAM,EAAE,YAAY;IAC5B,YAAY,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACnC,gBAAgB,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC;IAClC,aAAa,CAAC,CAAC;IACf,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,QAAQ,EAAE,YAAY;IAC9B,YAAY,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;IACxD,gBAAgB,IAAI,CAAC,GAAG,IAAI,MAAM,EAAE,CAAC;IACrC,gBAAgB,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC3C,gBAAgB,OAAO,CAAC,CAAC;IACzB,aAAa;IACb,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,QAAQ,EAAE,UAAU,OAAO,EAAE,UAAU,EAAE;IACjD,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;IAC/B,oBAAoB,CAAC,GAAG,EAAE,CAAC;IAE3B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACxC,gBAAgB,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IAC/D,oBAAoB,IAAI,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACjF,oBAAoB,OAAO,CAAC,KAAK,SAAS,GAAG,CAAC,GAAG,EAAE,CAAC;IACpD,iBAAiB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC;IACpC,aAAa;IACb,YAAY,OAAO,QAAQ,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,SAAS;IACT,QAAQ,IAAI,EAAE,YAAY;IAC1B,YAAY,OAAO,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;IAChE,SAAS;IACT,QAAQ,KAAK,EAAE,UAAU,MAAM,EAAE;IACjC,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC7D,YAAY,OAAO,MAAM,CAAC,mCAAmC,EAAE,YAAY;IAC3E,gBAAgB,IAAI,GAAG,GAAG,EAAE,CAAC;IAC7B,gBAAgB,KAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;IAC1C,oBAAoB,IAAI,OAAO,GAAG,EAAE,CAAC;IACrC,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;IACnD,wBAAwB,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;IACxF,qBAAqB;IACrB,oBAAoB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IAClD,iBAAiB;IACjB,gBAAgB,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC1C,aAAa,CAAC,CAAC;IACf,SAAS;IACT,KAAK,CAAC;IACN;IACA,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC;AACzD;AACA;IACA,IAAI,SAAS,GAAG,CAAC,GAAG,EAAE;IACtB,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IAC3B;IACA,QAAQ,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC;IACzB,YAAY,GAAG,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;IAC9C;IACA,QAAQ,GAAG,GAAG,EAAE;IAChB,YAAY,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;IACxC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IACtD,gBAAgB,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACtC,aAAa;IACb,SAAS;IACT,KAAK;IACL;IACA,IAAI,GAAG,CAAC,SAAS,GAAG,UAAU,GAAG,EAAE;IACnC,QAAQ,SAAS,CAAC,CAAC,IAAI,EAAE;IACzB,YAAY,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACzC,SAAS;IACT,QAAQ,CAAC,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;AACpC;IACA,QAAQ,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1B,KAAK,CAAC;IACN;IACA,IAAI,GAAG,CAAC,SAAS,GAAG;IACpB,QAAQ,GAAG,EAAE,SAAS,CAAC,EAAE;IACzB,YAAY,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IAChC,gBAAgB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IAC9C,SAAS;IACT,QAAQ,QAAQ,EAAE,SAAS,CAAC,EAAE;IAC9B,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACtD,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzC,gBAAgB,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;IAC9B,oBAAoB,OAAO,IAAI,CAAC;IAChC,aAAa;IACb,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT,QAAQ,IAAI,EAAE,SAAS,CAAC,EAAE;IAC1B,YAAY,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACzC,YAAY,IAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;IAChC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IACtD,gBAAgB,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACpC,gBAAgB,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACxC,aAAa;IACb,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT,QAAQ,KAAK,EAAE,WAAW;IAC1B,YAAY,IAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;IAChC,YAAY,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;IAClC,gBAAgB,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;IACnC,aAAa,CAAC,CAAC;IACf,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT,QAAQ,KAAK,EAAE,SAAS,GAAG,EAAE;IAC7B,YAAY,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IACtC,YAAY,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;IACjC,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC9B,aAAa,CAAC,CAAC;IACf;IACA,YAAY,OAAO,MAAM,CAAC;IAC1B,SAAS;IACT,QAAQ,UAAU,EAAE,SAAS,GAAG,EAAE;IAClC,YAAY,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;IACpC,YAAY,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;IACjC,gBAAgB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/B,aAAa,CAAC,CAAC;IACf,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,MAAM,EAAE,SAAS,OAAO,EAAE;IAClC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IAC3D,gBAAgB,IAAI,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IACzC,gBAAgB,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;IACtC,oBAAoB,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;IAC7C,oBAAoB,OAAO,IAAI,CAAC;IAChC,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT,QAAQ,YAAY,EAAE,SAAS,GAAG,EAAE;IACpC,YAAY,IAAI,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;IAC1C,YAAY,IAAI,CAAC,GAAG,IAAI,CAAC;IACzB,YAAY,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;IACjC,gBAAgB,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAClC,oBAAoB,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzC,iBACA,aAAa,CAAC,CAAC;IACf;IACA,YAAY,OAAO,aAAa,CAAC;IACjC,SAAS;IACT,QAAQ,UAAU,EAAE,SAAS,GAAG,EAAE;IAClC,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IAC9D,SAAS;IACT,QAAQ,SAAS,EAAE,SAAS,GAAG,EAAE;IACjC,YAAY,IAAI,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;IACxC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IACtD,gBAAgB,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;IAChD,oBAAoB,OAAO,KAAK,CAAC;IACjC,iBAAiB;IACjB,aAAa;IACb,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,QAAQ,EAAE,WAAW;IAC7B,YAAY,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;IACnD,SAAS;IACT,KAAK,CAAC;AACN;IACA;IACA,IAAI,IAAI,KAAK,GAAG;IAChB,QAAQ,YAAY,EAAE;IACtB,YAAY,OAAO,EAAE;IACrB,gBAAgB,iBAAiB,EAAE,WAAW;IAC9C,aAAa;IACb,YAAY,SAAS,EAAE;IACvB,gBAAgB,aAAa,EAAE,KAAK,CAAC,KAAK;IAC1C,aAAa;IACb,YAAY,gBAAgB,EAAE;IAC9B,gBAAgB,iBAAiB,EAAE,KAAK,CAAC,SAAS;IAClD,aAAa;IACb,YAAY,EAAE,EAAE;IAChB,gBAAgB,UAAU,EAAE,KAAK,CAAC,EAAE;IACpC,gBAAgB,cAAc,EAAE,KAAK,CAAC,MAAM;IAC5C,gBAAgB,MAAM,EAAE,IAAI;IAC5B,aAAa;IACb,YAAY,EAAE,EAAE;IAChB,gBAAgB,iBAAiB,EAAE,KAAK,CAAC,SAAS;IAClD,aAAa;IACb,YAAY,EAAE,EAAE;IAChB,gBAAgB,iBAAiB,EAAE,KAAK,CAAC,SAAS;IAClD,aAAa;IACb,YAAY,EAAE,EAAE;IAChB,gBAAgB,iBAAiB,EAAE,KAAK,CAAC,SAAS;IAClD,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,iBAAiB,EAAE,KAAK,CAAC,SAAS;IAClD,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,OAAO,EAAE,KAAK;IAC9B,gBAAgB,QAAQ,EAAE,MAAM;IAChC,gBAAgB,qBAAqB,EAAE,KAAK,CAAC,aAAa;IAC1D,aAAa;IACb,YAAY,MAAM,EAAE;IACpB,gBAAgB,eAAe,EAAE,KAAK,CAAC,OAAO;IAC9C,gBAAgB,QAAQ,EAAE,MAAM;IAChC,aAAa;IACb,YAAY,aAAa,EAAE;IAC3B,gBAAgB,eAAe,EAAE,KAAK,CAAC,OAAO;IAC9C,gBAAgB,QAAQ,EAAE,MAAM;IAChC,aAAa;IACb,YAAY,GAAG,EAAE;IACjB,gBAAgB,MAAM,EAAE,IAAI;IAC5B,aAAa;IACb,SAAS;IACT;IACA;IACA;IACA,QAAQ,QAAQ,EAAE;IAClB;IACA,YAAY,IAAI,EAAE,SAAS,MAAM,EAAE,IAAI,EAAE;IACzC,gBAAgB,IAAI,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC;IAC9E,gBAAgB,IAAI,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC;IACnE,gBAAgB,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;AAC7B;IACA,gBAAgB,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACxE,aAAa;IACb,SAAS;IACT,QAAQ,aAAa,EAAE,SAAS,CAAC,EAAE;IACnC,YAAY,IAAI,GAAG,GAAG;IACtB,gBAAgB,kBAAkB,EAAE,mBAAmB;IACvD,aAAa,CAAC;IACd,YAAY,OAAO,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAC/B,SAAS;IACT;IACA,QAAQ,mBAAmB,EAAE,SAAS,CAAC,EAAE,IAAI,EAAE;IAC/C;IACA,YAAY,IAAI,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;AACrD;IACA;IACA,YAAY,IAAI,UAAU,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC5D;IACA;IACA,YAAY,IAAI,YAAY,GAAG,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;IAC9D;IACA;IACA,YAAY,IAAI,IAAI,CAAC,IAAI,YAAY,EAAE;IACvC,gBAAgB,GAAG,OAAO,YAAY,CAAC,CAAC,CAAC,KAAK,QAAQ;IACtD,oBAAoB,SAAS;IAC7B,gBAAgB,IAAI,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC9C;IACA,gBAAgB,UAAU,IAAI,MAAM,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACrH,gBAAgB,YAAY,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC;IACnD,aAAa;IACb;IACA,YAAY,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;IAC9C,SAAS;IACT,QAAQ,WAAW,EAAE,SAAS,MAAM,EAAE,YAAY,EAAE;IACpD,YAAY,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;IACnC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC7C,gBAAgB,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;IAChD,oBAAoB,GAAG,CAAC,CAAC,KAAK,KAAK,EAAE;IACrC,wBAAwB,YAAY,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;IACxF,iBAAiB,CAAC,CAAC;IACnB,aAAa;IACb,YAAY,OAAO,YAAY,CAAC;IAChC,SAAS;IACT,QAAQ,KAAK,EAAE,UAAU,MAAM,EAAE,SAAS,EAAE;IAC5C,YAAY,MAAM,GAAG,KAAK,CAAC,cAAc,EAAE,YAAY;IACvD,gBAAgB,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACvC,aAAa,EAAE,IAAI,CAAC,CAAC;IACrB,YAAY,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;IACzC,YAAY,IAAI,WAAW,GAAG,EAAE,CAAC;IACjC,YAAY,IAAI,YAAY,GAAG,EAAE,CAAC;IAClC,YAAY,IAAI,KAAK,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;IAClD,gBAAgB,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IACtC,gBAAgB,IAAI,CAAC,GAAG,EAAE;IAC1B,wBAAwB,KAAK,GAAG,MAAM,CAAC,KAAK;IAC5C,wBAAwB,MAAM,GAAG,EAAE,CAAC;AACpC;IACA,gBAAgB,IAAI,aAAa,GAAG,UAAU,KAAK,EAAE;IACrD,oBAAoB,IAAI,CAAC,GAAG,KAAK,KAAK,EAAE,GAAG,GAAG,GAAG,GAAG;IACpD,4BAA4B,EAAE,GAAG,EAAE,CAAC;AACpC;IACA,oBAAoB,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,OAAO,EAAE;IAClD,wBAAwB,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;IACnD,gCAAgC,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3D;IACA,wBAAwB,IAAI,GAAG,CAAC,WAAW,EAAE;IAC7C,4BAA4B,EAAE,GAAG,UAAU,CAAC,EAAE,CAAC,CAAC;IAChD,wBAAwB,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpC,qBAAqB;IACrB,oBAAoB,IAAI,MAAM,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5C,oBAAoB,MAAM,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC;IAClG,oBAAoB,OAAO,MAAM,CAAC;IAClC,iBAAiB;IACjB,gBAAgB,cAAc,GAAG,UAAU,EAAE,EAAE;IAC/C,oBAAoB,IAAI,MAAM,CAAC;IAC/B,oBAAoB,IAAI,EAAE,IAAI,IAAI;IAClC,wBAAwB,MAAM,GAAG,OAAO,GAAG,EAAE,CAAC;IAC9C,yBAAyB;IACzB,wBAAwB,EAAE,GAAG,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACrD,wBAAwB,IAAI,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE;IAC5D;IACA;IACA,4BAA4B,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,CAAC;IAC3F,4BAA4B,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACjD,yBAAyB;IACzB,wBAAwB,MAAM,GAAG,EAAE,CAAC;IACpC,qBAAqB;IACrB,oBAAoB,MAAM,GAAG,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;IAC9E,wBAAwB,OAAO,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACnD,qBAAqB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AAClC;IACA,oBAAoB,OAAO,MAAM,CAAC;IAClC,iBAAiB,CAAC;IAClB;IACA;IACA,gBAAgB,IAAI,KAAK,KAAK,CAAC;IAC/B,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC;IAC1D,qBAAqB,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACrD,oBAAoB,MAAM,GAAG,GAAG,CAAC;IACjC,qBAAqB,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;IACrD,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC;IAC1D;IACA,gBAAgB,IAAI,KAAK,CAAC;AAC1B;IACA,gBAAgB,IAAI,KAAK,KAAK,CAAC,IAAI,KAAK,KAAK,CAAC;IAC9C,oBAAoB,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IACzC,qBAAqB,IAAI,KAAK,KAAK,EAAE,EAAE;IACvC,oBAAoB,YAAY,GAAG,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;IACzF,oBAAoB,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC3E,oBAAoB,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;IACrD,wBAAwB,IAAI,UAAU,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC5F,wBAAwB,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IACrD,wBAAwB,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;IAC9C,qBAAqB;IACrB,yBAAyB;IACzB,wBAAwB,KAAK,IAAI,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9D,qBAAqB;IACrB;IACA,iBAAiB;IACjB,qBAAqB,IAAI,KAAK,KAAK,EAAE,EAAE;IACvC,oBAAoB,IAAI,EAAE,GAAG,MAAM,CAAC,aAAa,CAAC;IAClD,oBAAoB,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC;IAC5C,wBAAwB,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IAC7C,yBAAyB,IAAI,EAAE,KAAK,EAAE,EAAE;IACxC,wBAAwB,KAAK,GAAG,cAAc,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC7D,wBAAwB,YAAY,GAAG,KAAK,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;IAC7F,wBAAwB,YAAY,GAAG,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC/E,qBAAqB;IACrB;IACA,wBAAwB,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;IACpE,iBAAiB;IACjB,qBAAqB;IACrB,oBAAoB,KAAK,GAAG,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACxD,iBAAiB;AACjB;IACA,gBAAgB,IAAI,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;IACnE,oBAAoB,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;IAC3D,oBAAoB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,oBAAoB,KAAK,GAAG,UAAU,GAAG,UAAU,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1E,iBAAiB;AACjB;IACA,gBAAgB,IAAI,KAAK;IACzB,oBAAoB,CAAC,CAAC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC;AAC3C;IACA,gBAAgB,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;IAC9E,aAAa,CAAC;IACd,YAAY,IAAI,SAAS,EAAE;IAC3B,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACtD,oBAAoB,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACtC,oBAAoB,IAAI,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACrD,wBAAwB,GAAG,CAAC,GAAG,GAAG,8BAA8B,CAAC,CAAC;IAClE,iBAAiB;IACjB,gBAAgB,IAAI,GAAG,SAAS,CAAC;IACjC,aAAa;AACb;IACA,YAAY,IAAI,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC;IACA;IACA,YAAY,IAAI,IAAI,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,EAAE;IAC1C,gBAAgB,IAAI,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,OAAO,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IAC1D,gBAAgB,YAAY,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;IACpE,aAAa;AACb;IACA,YAAY,IAAI,CAAC,GAAG,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,OAAO,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC7G;IACA,YAAY,OAAO,CAAC,CAAC;IACrB,SAAS;IACT,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA,IAAI,CAAC,YAAY;IACjB,QAAQ,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAClC,QAAQ,YAAY,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAClC,QAAQ,CAAC,CAAC,aAAa,EAAE,CAAC;IAC1B;IACA,QAAQ,IAAI,CAAC,CAAC,CAAC,KAAK;IACpB,YAAY,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC;IAC1B;IACA;IACA,QAAQ,QAAQ,CAAC,OAAO,GAAG;IAC3B,YAAY,GAAG,EAAE,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;IACnC,YAAY,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC;IACvC,SAAS,CAAC;IACV;IACA,KAAK,GAAG,CAAC;IACT;IACA;AACA;IACA;IACA,IAAI,IAAI,KAAK,GAAG;IAChB,QAAQ,OAAO,EAAE,OAAO;IACxB,QAAQ,UAAU,EAAE,UAAU;IAC9B,QAAQ,eAAe,EAAE,eAAe;IACxC,QAAQ,cAAc,EAAE,cAAc;IACtC,QAAQ,UAAU,EAAE,UAAU;IAC9B,QAAQ,QAAQ,EAAE,QAAQ;IAC1B,QAAQ,QAAQ,EAAE,QAAQ;IAC1B,QAAQ,WAAW,EAAE,WAAW;IAChC,QAAQ,QAAQ,EAAE,QAAQ;IAC1B,QAAQ,KAAK,EAAE,KAAK;IACpB,QAAQ,KAAK,EAAE,KAAK,CAAC,KAAK;IAC1B,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,SAAS,EAAE,SAAS;IAC5B,QAAQ,OAAO,EAAE,OAAO;IACxB,QAAQ,eAAe,EAAE,eAAe;IACxC,QAAQ,WAAW,EAAE,WAAW;IAChC,QAAQ,UAAU,EAAE,UAAU;IAC9B,QAAQ,YAAY,EAAE,YAAY;IAClC,QAAQ,IAAI,EAAE,IAAI;IAClB,QAAQ,QAAQ,EAAE,QAAQ;IAC1B,QAAQ,IAAI,EAAE,IAAI;IAClB,QAAQ,YAAY,EAAE,YAAY;IAClC,QAAQ,SAAS,EAAE,SAAS;IAC5B,QAAQ,WAAW,EAAE,WAAW;IAChC,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,cAAc,EAAE,cAAc;IACtC,QAAQ,SAAS,EAAE,SAAS;IAC5B,QAAQ,IAAI,EAAE,IAAI;IAClB,QAAQ,eAAe,EAAE,eAAe;IACxC,QAAQ,UAAU,EAAE,UAAU;IAC9B,QAAQ,OAAO,EAAE,OAAO;IACxB,QAAQ,YAAY,EAAE,YAAY;IAClC,QAAQ,UAAU,EAAE,UAAU;IAC9B,QAAQ,KAAK,EAAE,KAAK;IACpB,QAAQ,QAAQ,EAAE,QAAQ;IAC1B,QAAQ,UAAU,EAAE,UAAU;IAC9B,QAAQ,eAAe,EAAE,eAAe;IACxC,QAAQ,OAAO,EAAE,OAAO;IACxB,QAAQ,UAAU,EAAE,UAAU;IAC9B,QAAQ,QAAQ,EAAE,QAAQ;IAC1B,QAAQ,gBAAgB,EAAE,gBAAgB;IAC1C,QAAQ,QAAQ,EAAE,QAAQ;IAC1B,QAAQ,IAAI,EAAE,IAAI;IAClB,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,YAAY,EAAE,YAAY;IAClC,QAAQ,KAAK,EAAE,KAAK;IACpB,QAAQ,KAAK,EAAE,MAAM;IACrB,QAAQ,QAAQ,EAAE,QAAQ;IAC1B,QAAQ,mBAAmB,EAAE,mBAAmB;IAChD,QAAQ,QAAQ,EAAE,QAAQ;IAC1B,QAAQ,aAAa,EAAE,aAAa;IACpC,QAAQ,IAAI,EAAE,IAAI;IAClB,QAAQ,YAAY,EAAE,YAAY;IAClC,QAAQ,SAAS,EAAE,SAAS;IAC5B,QAAQ,IAAI,EAAE,IAAI;IAClB,KAAK,CAAC;AACN;IACA;IACA;IACA,IAAI,IAAI,CAAC,GAAG;IACZ,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,UAAU,EAAE,UAAU;IAC9B,QAAQ,IAAI,EAAE,IAAI;IAClB,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,QAAQ,EAAE,QAAQ;IAC1B,QAAQ,KAAK,EAAE,KAAK;IACpB,QAAQ,KAAK,EAAE,KAAK;IACpB,QAAQ,KAAK,EAAE,KAAK;IACpB,QAAQ,MAAM,EAAE,CAAC;IACjB,QAAQ,WAAW,EAAE,WAAW;IAChC,QAAQ,QAAQ,EAAE,QAAQ;IAC1B,QAAQ,GAAG,EAAE,GAAG;IAChB,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,MAAM,EAAE,MAAM;IACtB,QAAQ,UAAU,EAAE,UAAU;IAC9B,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,UAAU,GAAG,UAAU,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE;IACnE;IACA,QAAQ,IAAI,KAAK,GAAG,8CAA8C,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpF,QAAQ,IAAI,KAAK;IACjB,YAAY,OAAO,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF;IACA;IACA;IACA,QAAQ,IAAI,UAAU,YAAY,UAAU;IAC5C,YAAY,UAAU,GAAG,UAAU,CAAC,QAAQ,EAAE,CAAC;AAC/C;IACA,QAAQ,IAAI,aAAa,GAAG,OAAO,CAAC,MAAM,CAAC;IAC3C,gBAAgB,MAAM,GAAG,QAAQ;IACjC,gBAAgB,KAAK,GAAG,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,KAAK,OAAO,CAAC;IAC5F,QAAQ,KAAK,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,MAAM,KAAK,MAAM,GAAG;IACjF,YAAY,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;IAChE,SAAS;IACT,QAAQ,IAAI,CAAC,GAAG,KAAK,CAAC,cAAc,EAAE,YAAY;IAClD,YAAY,OAAO,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;IAC7C,SAAS,EAAE,KAAK,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC3C;IACA,QAAQ,IAAI,QAAQ,EAAE;IACtB,YAAY,WAAW,CAAC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1C,SAAS;IACT,aAAa;IACb,YAAY,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAChC,SAAS;AACT;IACA;IACA;IACA;IACA;AACA;IACA,QAAQ,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;IACjC,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,GAAG,GAAG,UAAU,UAAU,EAAE;IAC3C,QAAQ,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;IAC/C,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,cAAc,GAAG,UAAU,CAAC,EAAE,GAAG,EAAE;IAClD,QAAQ,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC/B,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,gBAAgB,GAAG,UAAU,CAAC,EAAE;IAC/C,QAAQ,IAAI,GAAG,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,QAAQ,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5C,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE;IAC3C,QAAQ,IAAI,MAAM,EAAE;IACpB,YAAY,IAAI;IAChB,gBAAgB,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC;IACzC,aAAa;IACb,YAAY,OAAO,CAAC,EAAE;IACtB,gBAAgB,OAAO,kBAAkB,GAAG,MAAM,GAAG,SAAS,CAAC;IAC/D,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,OAAO,CAAC;IACvB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,WAAW,GAAG,YAAY;IACzC,QAAQ,OAAO,QAAQ,CAAC;IACxB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,WAAW,GAAG,UAAU,QAAQ,EAAE,KAAK,EAAE;IACxD,QAAQ,YAAY,CAAC,QAAQ,CAAC,CAAC;IAC/B,QAAQ,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;IACnC;IACA,YAAY,IAAI,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,EAAE,EAAE;IACpD,gBAAgB,OAAO,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC7C,aAAa;IACb,iBAAiB;IACjB,gBAAgB,IAAI,KAAK,CAAC,KAAK,CAAC;IAChC,oBAAoB,MAAM,IAAI,iBAAiB,CAAC,4BAA4B,CAAC,CAAC;IAC9E,gBAAgB,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;IAC9C,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,WAAW,GAAG,UAAU,QAAQ,EAAE;IACjD,QAAQ,OAAO,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC5C,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,WAAW,GAAG,WAAW,CAAC;AACzC;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,OAAO,GAAG,YAAY;IACrC,QAAQ,OAAO,CAAC,CAAC;IACjB,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,aAAa,GAAG,UAAU,CAAC,WAAW,GAAG,UAAU,CAAC,aAAa,CAAC;AACjF;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,QAAQ,GAAG,UAAU,OAAO,EAAE;IAC7C,QAAQ,IAAI,OAAO,EAAE;IACrB,YAAY,OAAO,QAAQ,CAAC;IAC5B,SAAS;IACT,QAAQ,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,KAAK,GAAG,UAAU,eAAe,EAAE,sBAAsB,EAAE;IAC1E,QAAQ,IAAI,eAAe,KAAK,KAAK,EAAE;IACvC,YAAY,WAAW,GAAG,EAAE,CAAC;IAC7B,SAAS;IACT,aAAa,IAAI,eAAe,KAAK,MAAM,EAAE;IAC7C,YAAY,WAAW,CAAC,GAAG,EAAE,CAAC;IAC9B,SAAS;IACT,aAAa,IAAI,eAAe,KAAK,OAAO,EAAE;IAC9C,YAAY,WAAW,CAAC,KAAK,EAAE,CAAC;IAChC,SAAS;IACT,aAAa;IACb,YAAY,IAAI,KAAK,GAAG,CAAC,eAAe,GAAG,WAAW,CAAC,MAAM,GAAG,eAAe,GAAG,CAAC,CAAC;IACpF,YAAY,sBAAsB,KAAK,IAAI,GAAG,WAAW,CAAC,KAAK,CAAC,GAAG,SAAS,GAAG,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IAC1G,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,KAAK,GAAG,YAAY;IACnC,QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC1B,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,WAAW,GAAG,UAAU,QAAQ,EAAE,OAAO,EAAE,MAAM,EAAE;IAClE,QAAQ,IAAI,MAAM,GAAG,QAAQ,GAAG,EAAE,GAAG,EAAE,CAAC;IACxC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACrD,YAAY,IAAI,EAAE,GAAG,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;IAClG,YAAY,QAAQ,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC5D,SAAS;IACT,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,CAAC;AACN;IACA;IACA,IAAI,UAAU,CAAC,QAAQ,GAAG,UAAU,GAAG,EAAE;IACzC,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AAClC;IACA,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;IAC1B,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjD,gBAAgB,IAAI,GAAG;IACvB,oBAAoB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1C,aAAa;IACb,SAAS;IACT,aAAa,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;IACnE;IACA,YAAY,IAAI,GAAG,CAAC,YAAY,EAAE;IAClC,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE;IAChE,oBAAoB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;IAClD,wBAAwB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,gCAAgC,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjH,aAAa;IACb;IACA,YAAY,IAAI,UAAU,GAAG,GAAG,CAAC,MAAM;IACvC,oBAAoB,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9C,YAAY,IAAI,UAAU,EAAE;IAC5B,gBAAgB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;IACrC,oBAAoB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;AAC1C;IACA,gBAAgB,IAAI,OAAO,GAAG,UAAU,KAAK,UAAU,GAAG,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;IAClF;IACA,gBAAgB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;IACvC,aAAa;IACb,YAAY,IAAI,GAAG,CAAC,OAAO;IAC3B,gBAAgB,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;AAC1D;IACA,SAAS;IACT,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,YAAY,GAAG,YAAY,CAAC;AAC3C;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,YAAY,GAAG,UAAU,OAAO,EAAE;IACjD,QAAQ,IAAI;IACZ,YAAY,YAAY,CAAC,OAAO,CAAC,CAAC;IAClC,YAAY,OAAO,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;IACpD,SAAS;IACT,QAAQ,OAAO,CAAC,EAAE;IAClB,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS;IACT,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,SAAS,GAAG,YAAY;IACvC,QAAQ,OAAO,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACjC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,YAAY,GAAG,UAAU,CAAC,cAAc,GAAG,YAAY;IACtE,QAAQ,OAAO,WAAW,CAAC,MAAM,CAAC;IAClC,KAAK,CAAC;IACN;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE,GAAG,EAAE;IAC1C,QAAQ,YAAY,CAAC,CAAC,CAAC,CAAC;IACxB;IACA,QAAQ,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS;IAC5B,YAAY,GAAG,CAAC,gCAAgC,GAAG,CAAC,CAAC,CAAC;IACtD,QAAQ,IAAI,GAAG,KAAK,QAAQ,IAAI,GAAG,KAAK,EAAE;IAC1C,YAAY,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IAC3B,aAAa;IACb,YAAY,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzD,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;IACrC,QAAQ,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,KAAK,CAAC;IACN;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,SAAS,GAAG,YAAY;IACvC,QAAQ,IAAI,GAAG,EAAE,CAAC;IAClB,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,IAAI,GAAG,UAAU,MAAM,EAAE;IACxC,QAAQ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC1B,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;IACnD,QAAQ,MAAM,GAAG,MAAM,IAAI,MAAM,CAAC;IAClC,QAAQ,IAAI,SAAS,GAAG,EAAE,CAAC;IAC3B,QAAQ,IAAI,MAAM,KAAK,QAAQ;IAC/B,YAAY,SAAS,GAAG,IAAI,CAAC;IAC7B,aAAa;IACb,YAAY,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE;IAChC,gBAAgB,IAAI,MAAM,KAAK,OAAO,EAAE;IACxC,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACzD,iBAAiB;IACjB,qBAAqB,IAAI,MAAM,KAAK,MAAM,EAAE;IAC5C,oBAAoB,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACxD,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,GAAG,GAAG,UAAU,OAAO,EAAE,KAAK,EAAE;IAC/C;IACA;IACA,QAAQ,IAAI,OAAO,OAAO,KAAK,QAAQ;IACvC,YAAY,KAAK,IAAI,CAAC,IAAI,OAAO,EAAE;IACnC,gBAAgB,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,aAAa;AACb;IACA,QAAQ,IAAI,UAAU,GAAG,CAAC,MAAM,CAAC,CAAC;IAClC,QAAQ,IAAI,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC9C,YAAY,GAAG,CAAC,yBAAyB,GAAG,OAAO,CAAC,CAAC;AACrD;IACA,QAAQ,IAAI,OAAO,KAAK,WAAW;IACnC,YAAY,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;IAC3C,aAAa,GAAG,OAAO,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,EAAE;IACxD;IACA,YAAY,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC;IAChC;IACA,YAAY,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;IACnC;IACA,YAAY,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC;IACxD;IACA,YAAY,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,EAAE;IAChD,gBAAgB,GAAG,CAAC,CAAC,UAAU,EAAE;IACjC,oBAAoB,OAAO,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,gBAAgB,OAAO,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,aAAa,CAAC;IACd,YAAY,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;IACrD;IACA;IACA,YAAY,OAAO,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IACxC,SAAS;IACT;IACA,YAAY,QAAQ,CAAC,OAAO,CAAC,GAAG,KAAK,CAAC;IACtC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,GAAG,GAAG,UAAU,OAAO,EAAE;IACxC,QAAQ,OAAO,QAAQ,CAAC,OAAO,CAAC,CAAC;IACjC,KAAK,CAAC;AACN;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,CAAC,GAAG,GAAG,UAAU,QAAQ,EAAE;IACzC;IACA,QAAQ,IAAI,MAAM,GAAG,UAAU,KAAK,EAAE;IACtC,YAAY,OAAO,YAAY;IAC/B,gBAAgB,IAAI,IAAI,GAAG,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpD,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE;IACpD,oBAAoB,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/C,gBAAgB,OAAO,IAAI,UAAU,CAAC,KAAK,CAAC,cAAc,EAAE,YAAY;IACxE,oBAAoB,OAAO,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACvD,iBAAiB,CAAC,CAAC,CAAC;IACpB,aAAa,CAAC;IACd,SAAS,CAAC;IACV;IACA,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS;IACjC,YAAY,IAAI,EAAE,CAAC,IAAI,UAAU,CAAC,IAAI,QAAQ;IAC9C,gBAAgB,UAAU,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1C,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,eAAe,GAAG,UAAU,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAE;IAC/D,QAAQ,IAAI,QAAQ,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACzC,QAAQ,IAAI,YAAY,GAAG,OAAO,QAAQ,KAAK,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;IACpF,QAAQ,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;IAC/E,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,WAAW,GAAG,UAAU,QAAQ,EAAE,KAAK,EAAE;IACxD,QAAQ,CAAC,CAAC,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IACvC,KAAK,CAAC;IACN;IACA,IAAI,UAAU,CAAC,WAAW,GAAG,SAAS,QAAQ,EAAE;IAChD,QAAQ,OAAO,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACvC,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,aAAa,GAAG,SAAS,QAAQ,EAAE,YAAY,EAAE;IAChE,QAAQ,CAAC,CAAC,aAAa,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IAChD,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,IAAI,GAAG,UAAU,UAAU,EAAE;IAC5C,QAAQ,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACvD,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,QAAQ,GAAG,UAAU,UAAU,EAAE,MAAM,EAAE;IACxD,QAAQ,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACzC;IACA,QAAQ,OAAO,sBAAsB;IACrC,gBAAgB,YAAY;IAC5B,gBAAgB,gBAAgB;IAChC,gBAAgB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,IAAI;IAC7C,gBAAgB,iBAAiB;IACjC,gBAAgB,aAAa;IAC7B,gBAAgB,QAAQ,CAAC;IACzB,KAAK,CAAC;IACN;IACA,IAAI,UAAU,CAAC,SAAS,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE;IAC7C,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;IAC1B,YAAY,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,KAAK,CAAC;IACN;IACA,IAAI,UAAU,CAAC,YAAY,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE;IAChD,QAAQ,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACnC,KAAK,CAAC;IACN;IACA,IAAI,UAAU,CAAC,KAAK,GAAG,SAAS,CAAC,EAAE;IACnC,QAAQ,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;IACpD,YAAY,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9B,SAAS,CAAC,CAAC;IACX,KAAK,CAAC;AACN;IACA,IAAI,UAAU,CAAC,GAAG,EAAE,CAAC;AACrB;IACA,IAAI,OAAO,UAAU,CAAC;IACtB;IACA,CAAC,EAAE;IACH;IACA,IAAI,MAAM,EAAE,CAAC,UAAU;IACvB,QAAQ,IAAI,MAAM,CAAC,SAASkR,WAAS,CAAC,CAAc,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgaAAa,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAC,CAAC,OAAO,CAAC,CAAC,SAAS,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,OAAO,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,OAAO,CAAC,SAAS,YAAY,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,OAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,EAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,2BAA2B,CAAC,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,2BAA2B,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,2BAA2B,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,2BAA2B,EAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC,MAAM,MAAM,GAAG,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAC,CAAC,CAAC,MAAM,EAAE,MAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,cAAa,CAAC,SAAS,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,GAAE,CAAC,MAAM,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAC,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,OAAM,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,OAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAM,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,OAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,GAAG,OAAO,QAAQ,GAAG,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,OAAM,CAAC,IAAI,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,OAAM,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,EAAC,CAAC,IAAI,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC,CAAC,OAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC,OAAM,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,GAAG,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,YAAY,CAAC,QAAQ,EAAC,CAAC,KAAK,QAAQ,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,GAAG,OAAO,GAAG,GAAG,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,YAAY,CAAC,GAAG,EAAC,CAAC,KAAK,GAAG,CAAC,IAAI,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,OAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,YAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAE,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,MAAM,IAAI,KAAK,CAAC,mCAAmC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,UAAU,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,EAAC,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,OAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,OAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,OAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,OAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,OAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,KAAK,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,KAAK,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,OAAO,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,SAAS,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,SAAS,IAAI,CAAC,OAAO,KAAK,CAAC,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,MAAM,CAAC,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,GAAGA,WAAS,CAAC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,GAAG,IAAI,EAAE,EAAE,CAAC,OAAO,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,OAAO,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,UAAU,CAAC,CAAC,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,OAAO,GAAGA,WAAS,CAAC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,UAAU,GAAGA,WAAS,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,OAAO,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,eAAemBAAmB,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,aAAa,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,OAAO,CAAC,GAAG,QAAQ,EAAE,OAAO,CAAC,GAAG,QAAQ,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,YAAY,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,aAAa,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,EAAC,CAAC,OAAO,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,aAAa,CAAC,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,MAAM,CAAC,UAAU,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,OAAO,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,EAAC,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,OAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,OAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,EAAC,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,OAAO,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,SAAS,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,MAAM,CAAC,gBAAggCAAgC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,gCAAgC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,MAAM,EAAE,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,gCAAgC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,IAAI,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAE,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,KAAK,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,2BAA2B,CAAC,CAAC,OAAO,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAC,CAAC,OAAO,UAAU,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,SAAS,SAAS,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,CAAC,OAAM,sCAAsC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAM,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,OAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,OAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC,OAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,OAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,OAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,GAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,OAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,SAAS,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,OAAM,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,KAAK,CAAC,CAAC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,KAAK,CAAC,CAAC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,KAAK,CAAC,CAAC,GAAG,KAAK,GAAGA,WAAS,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,OAAO,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,MAAK,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,KAAK,CAAC,CAAC,GAAG,KAAK,GAAGA,WAAS,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,OAAO,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,YAAY,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,EAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC,CAAC,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,IAAI,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,IAAI,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,SAAS,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,qBAAqB,CAAC,CAAC,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,gBAAgB,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,SAAS,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,QAAQ,CAAC,CAAC,OAAO,gBAAgB,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,QAAQ,CAAC,CAAC,OAAO,gBAAgB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,CAAC,EAAC,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,UAAU,EAAE,CAAC,YAAY,YAAY,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,SAAS,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,kBAAkB,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,OAAO,CAAC,EAAE,CAAC,GAAgC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,OAAM,CAChu2B,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK,GAAG;IACR;IACA,IAAI,MAAM,EAAE,SAAS,CAAC,CAAC,CAAc,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,ogCAAogC,CAAC,CAAC,CAAC,ogCAAogC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,4CAA4C,CAAC,CAAC,CAAC,wDAAwD,CAAC,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC,oCAAoC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,OAAM,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,OAAM,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAC,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,aAAaaAAa,EAAE,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CA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CAAC,EAAE,EAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,GAAE,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,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C,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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C,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAmiBAAieAAe,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,EAAE,kBAAkB,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,QAAQ,GAAG,CAAC,CAAC,MAAM,KAAK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"}